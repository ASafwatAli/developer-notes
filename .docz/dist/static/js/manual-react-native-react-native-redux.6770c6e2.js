(window.webpackJsonp=window.webpackJsonp||[]).push([[188],{"./manual/React-Native/React-Native-Redux.md":function(e,n,t){"use strict";t.r(n),t.d(n,"default",function(){return u});var a=t("./node_modules/react/index.js"),o=t.n(a),r=t("./node_modules/@mdx-js/tag/dist/index.js");function c(e){return(c="function"===typeof Symbol&&"symbol"===typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"===typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function i(e,n){if(null==e)return{};var t,a,o=function(e,n){if(null==e)return{};var t,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}function p(e,n){for(var t=0;t<n.length;t++){var a=n[t];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}function s(e,n){return!n||"object"!==c(n)&&"function"!==typeof n?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):n}function m(e){return(m=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function l(e,n){return(l=Object.setPrototypeOf||function(e,n){return e.__proto__=n,e})(e,n)}var u=function(e){function n(e){var t;return function(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}(this,n),(t=s(this,m(n).call(this,e))).layout=null,t}var t,a,c;return function(e,n){if("function"!==typeof n&&null!==n)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(n&&n.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),n&&l(e,n)}(n,o.a.Component),t=n,(a=[{key:"render",value:function(){var e=this.props,n=e.components;i(e,["components"]);return o.a.createElement(r.MDXTag,{name:"wrapper",components:n},o.a.createElement(r.MDXTag,{name:"h1",components:n,props:{id:"react-native-with-redux"}},"React Native with Redux"),o.a.createElement(r.MDXTag,{name:"p",components:n},"Now that ReduxThunk is set up, we can use it inside an action creator."),o.a.createElement(r.MDXTag,{name:"pre",components:n},o.a.createElement(r.MDXTag,{name:"code",components:n,parentName:"pre",props:{}},"// Action Creators\nexport const selectAction = ({ email, password }) => {\n    return (dispatch) -> {\n        firebase.auth().signInWithEmailAndPassword(email, password)\n            .then(user => console.log(user))\n    };\n};\n")),o.a.createElement(r.MDXTag,{name:"p",components:n},"So, what is ReduxThunk doing for us?"),o.a.createElement(r.MDXTag,{name:"p",components:n},"Now that we have ReduxThunk, it will change how we call the action creator."),o.a.createElement(r.MDXTag,{name:"p",components:n},"The Action Creator ",o.a.createElement(r.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"WILL NOW RETURN A FUNCTION"),". If ReduxThunk sees a function returned, it will send off an action with a dispatcher and immediately call that function."),o.a.createElement(r.MDXTag,{name:"p",components:n},"This will then start our login request. The app will wait and the .then will automatically run and we will then dispatch our action."),o.a.createElement(r.MDXTag,{name:"pre",components:n},o.a.createElement(r.MDXTag,{name:"code",components:n,parentName:"pre",props:{}},"// Action Creators\nexport const selectAction = ({ email, password }) => {\n    return (dispatch) -> {\n        firebase.auth().signInWithEmailAndPassword(email, password)\n            .then(user => {\n                dispatch({ type: 'LOGIN_USER_SUCCESS', payload: user });\n            });\n    };\n};\n")),o.a.createElement("div",{id:"nav"}),o.a.createElement(r.MDXTag,{name:"hr",components:n}),o.a.createElement(r.MDXTag,{name:"h2",components:n,props:{id:"dealing-with-navigation"}},"Dealing with Navigation"),o.a.createElement(r.MDXTag,{name:"p",components:n},"As opposed to React with ",o.a.createElement(r.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"React-Router"),", React Native doesn't necessarily have one."),o.a.createElement(r.MDXTag,{name:"p",components:n},"In this case, we'll be using the solution called ",o.a.createElement(r.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"React-Native-Router-Flux")," to help with navigation."),o.a.createElement(r.MDXTag,{name:"p",components:n},"How does it work?"),o.a.createElement(r.MDXTag,{name:"p",components:n},"Imagine an app that requires authentication. We could then have another scene where the is a Master-Detail relationship."),o.a.createElement(r.MDXTag,{name:"p",components:n},"We essentially define a ",o.a.createElement(r.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"Scene")," for each distinct screens. For example."),o.a.createElement(r.MDXTag,{name:"pre",components:n},o.a.createElement(r.MDXTag,{name:"code",components:n,parentName:"pre",props:{}},'<Scene key="login" component={LoginForm} />\n<Scene key="employeeList" component={EmployeeList} />\n<Scene key="employeeDetail" component={EmployeeDetail} />\n\n// All the props you can pass to the scene\n\n<Scene\n    key="login"                 // call Actions.login() to show this screen\n    component={LoginForm}       // component to show\n    title="Login"               // make nav bar and give it a title - this is built in\n    initial                     // define the first screen to show\n/>\n')),o.a.createElement("div",{id:"nav2"}),o.a.createElement(r.MDXTag,{name:"h3",components:n,props:{id:"-----navigation-in-the-router"}},"---- Navigation in the Router"),o.a.createElement(r.MDXTag,{name:"pre",components:n},o.a.createElement(r.MDXTag,{name:"code",components:n,parentName:"pre",props:{}},"// Create a router.js\n\nimport React from 'react';\nimport { Scene, Router } from 'react-native-router-flux';\n\n// scene-target\nimport ExampleComponent from './components/examplecomponent/ExampleComponent';\nimport Table from './components/table/Table';\n\nconst RouterComponent = () => {\n    return (\n        <Router>\n            <Scene key=\"example\" component={ExampleComponent} title=\"App\" />\n            <Scene key=\"table\" component={Table} title=\"Table\" initial />\n        </Router>\n    );\n};\n\nexport default RouterComponent;\n\n// in app.js\n\n...\nimport Router from './router';\n\nconst App = () => {\n\n    const store = createStore(reducers, {}, applyMiddleware(ReduxThunk));\n\n    return (\n        <Provider store={store}>\n            <Router />\n        </Provider>\n    );\n}\n\nexport default App;\n")),o.a.createElement(r.MDXTag,{name:"p",components:n},"So how do we move between these scenes?"),o.a.createElement("div",{id:"nav3"}),o.a.createElement(r.MDXTag,{name:"h3",components:n,props:{id:"-----navigating-between-routes"}},"---- Navigating between routes"),o.a.createElement(r.MDXTag,{name:"p",components:n},"Navigation will happen from an action."),o.a.createElement(r.MDXTag,{name:"pre",components:n},o.a.createElement(r.MDXTag,{name:"code",components:n,parentName:"pre",props:{}},"// import actions\nimport { Actions } from 'react-native-router-flux';\n\n// Action Creators\nexport const loginUserSuccess = (dispatch, user) => {\n    dispatch({\n        type: LOGIN_USER_SUCCESS,\n        payload: user\n    });\n\n    Actions.employeeList(); // this method comes from the key property\n};\n")),o.a.createElement("div",{id:"nav4"}),o.a.createElement(r.MDXTag,{name:"h3",components:n,props:{id:"-----grouping-scenes-with-buckets"}},"---- Grouping Scenes with 'Buckets'"),o.a.createElement(r.MDXTag,{name:"p",components:n},"Making decisions on how the header should render."),o.a.createElement(r.MDXTag,{name:"p",components:n},"We can do ",o.a.createElement(r.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"scene nesting")," to group these screens. There is one 'gotcha' though. Now for the actions, we need to actually use Actions.main()."),o.a.createElement(r.MDXTag,{name:"pre",components:n},o.a.createElement(r.MDXTag,{name:"code",components:n,parentName:"pre",props:{}},'// router.js\n\nconst RouterComponent = () => {\n    return (\n        <Router>\n            <Scene key="auth">\n                <Scene key="login" component={Login} title="Login" />\n            </Scene>\n            <Scene key="flow">\n                <Scene key="example" component={ExampleComponent} title="App" />\n                <Scene\n                    // for action, you normally call Actions.key()\n                    onRight={() => console.log(\'right!!!\')}\n                    rightTitle="Add"\n                    key="table"\n                    component={Table}\n                    title="Table"\n                    initial\n                />\n            </Scene>\n        </Router>\n    );\n};\n')),o.a.createElement(r.MDXTag,{name:"p",components:n},"We can use the ",o.a.createElement(r.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"initial")," prop within these ",o.a.createElement(r.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"buckets")," to let which component within a bucket to have an initial prop"),o.a.createElement(r.MDXTag,{name:"h3",components:n,props:{id:"-----actions-to-navigate-between-buckets"}},"---- Actions to navigate between buckets"),o.a.createElement(r.MDXTag,{name:"p",components:n},"These actions can be added using"),o.a.createElement(r.MDXTag,{name:"pre",components:n},o.a.createElement(r.MDXTag,{name:"code",components:n,parentName:"pre",props:{}},"import { Actions } from 'react-native-router-flux';\n\n// Action Creators - exammple thunk action creator\nconst loginUserSuccess = (dispatch, user) => {\n    dispatch({\n        type: LOGIN_USER_SUCCESS,\n        payload: user\n    });\n\n    Actions.employeeList();\n}\n")),o.a.createElement("div",{id:"nav5"}),o.a.createElement(r.MDXTag,{name:"h3",components:n,props:{id:"-----form-updates-at-a-reducer-level--dynamic-property-updates"}},"---- Form updates at a reducer level / Dynamic Property updates"),o.a.createElement(r.MDXTag,{name:"p",components:n},"Example reducer function with ES6 dynamic change."),o.a.createElement(r.MDXTag,{name:"pre",components:n},o.a.createElement(r.MDXTag,{name:"code",components:n,parentName:"pre",props:{}},"export default (state = INITIAL_STATE, action) => {\n    switch (action.type) {\n        case EMPLOYEE_UPDATE:\n            return {...state, [action.payload.prop]: action.payload.value};\n        default:\n            return state;\n    }\n}\n")))}}])&&p(t.prototype,a),c&&p(t,c),n}();u.__docgenInfo={description:"",methods:[],displayName:"MDXContent"}}}]);
//# sourceMappingURL=manual-react-native-react-native-redux.305817e8304de77c75ce.js.map