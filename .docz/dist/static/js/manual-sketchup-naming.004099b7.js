(window.webpackJsonp=window.webpackJsonp||[]).push([[219],{"./manual/Sketchup/naming.md":function(e,n,t){"use strict";t.r(n),t.d(n,"default",function(){return u});var a=t("./node_modules/react/index.js"),o=t.n(a),r=t("./node_modules/@mdx-js/tag/dist/index.js");function i(e){return(i="function"===typeof Symbol&&"symbol"===typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"===typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function p(e,n){if(null==e)return{};var t,a,o=function(e,n){if(null==e)return{};var t,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}function c(e,n){for(var t=0;t<n.length;t++){var a=n[t];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}function m(e,n){return!n||"object"!==i(n)&&"function"!==typeof n?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):n}function l(e){return(l=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function s(e,n){return(s=Object.setPrototypeOf||function(e,n){return e.__proto__=n,e})(e,n)}var u=function(e){function n(e){var t;return function(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}(this,n),(t=m(this,l(n).call(this,e))).layout=null,t}var t,a,i;return function(e,n){if("function"!==typeof n&&null!==n)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(n&&n.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),n&&s(e,n)}(n,o.a.Component),t=n,(a=[{key:"render",value:function(){var e=this.props,n=e.components;p(e,["components"]);return o.a.createElement(r.MDXTag,{name:"wrapper",components:n},o.a.createElement(r.MDXTag,{name:"h1",components:n,props:{id:"naming-conventions"}},"Naming Conventions"),o.a.createElement(r.MDXTag,{name:"h2",components:n,props:{id:"sketchup-types"}},"Sketchup Types"),o.a.createElement(r.MDXTag,{name:"p",components:n},"This may change as changes are made to ",o.a.createElement(r.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"sketchup"),"."),o.a.createElement(r.MDXTag,{name:"pre",components:n},o.a.createElement(r.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-javascript"}},"// Set what types to set for specific names\n// in output yaml file depending on\n// program type and Sketch prefix name\nconst liftClassTypes = {\n    react: {\n        default: 'div',\n        page: 'page',\n        section: 'section',\n        container: 'div',\n        block: 'div',\n        button: 'button',\n        heading: 'h3',\n        text: 'p',\n        component: 'div',\n        nav: 'nav',\n        link: 'a',\n        img: 'img',\n        grid: 'div',\n        'grid-item': 'div',\n        icon: 'img',\n        bg: 'img',\n        input: 'input',\n        form: 'form'\n    },\n    'react-native': {\n        default: 'View',\n        screen: 'Screen',\n        list: 'FlatList',\n        view: 'View',\n        button: 'Button',\n        text: 'Text',\n        component: 'View'\n    },\n    static: {\n        default: 'div',\n        page: 'page',\n        section: 'section',\n        container: 'div',\n        block: 'div',\n        button: 'button',\n        heading: 'h3',\n        text: 'p',\n        component: 'div',\n        nav: 'nav',\n        link: 'a',\n        img: 'img',\n        grid: 'div',\n        'grid-item': 'div',\n        icon: 'img',\n        bg: 'img',\n        input: 'input',\n        form: 'form'\n    }\n};\n")),o.a.createElement(r.MDXTag,{name:"p",components:n},"For properties that are eligible for children there is an array available:"),o.a.createElement(r.MDXTag,{name:"pre",components:n},o.a.createElement(r.MDXTag,{name:"code",components:n,parentName:"pre",props:{}},"// Name props eligible to have text value within tags\nconst propsEligible = ['Text', 'h1', 'h2', 'h3', 'p', 'button'];\n")),o.a.createElement(r.MDXTag,{name:"h3",components:n,props:{id:"controlling-new-pages-or-components"}},"Controlling new pages, or components"),o.a.createElement(r.MDXTag,{name:"p",components:n},"If a Sketch layer containers the words ",o.a.createElement(r.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"helper")," or ",o.a.createElement(r.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"ignore"),", that will not be included in the final yml output."),o.a.createElement(r.MDXTag,{name:"p",components:n},"If the type from the name is ",o.a.createElement(r.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"page")," or ",o.a.createElement(r.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"screen"),", it will setup a brand new ",o.a.createElement(r.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"page")," component."),o.a.createElement(r.MDXTag,{name:"p",components:n},"If type is ",o.a.createElement(r.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"component")," or ",o.a.createElement(r.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"section"),", it will set up a new file for the component/section."),o.a.createElement(r.MDXTag,{name:"p",components:n},"Otherwise, if the type is included from above in ",o.a.createElement(r.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"liftClassTypes")," then the logic will work to figure out what type to associate."),o.a.createElement(r.MDXTag,{name:"pre",components:n},o.a.createElement(r.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-javascript"}},"// within deconstruct() function\nif (l.name.includes('helper') || l.name.includes('ignore')) return;\n\n/**\n * Check key from types and apply type\n * for component. Ensure split layer name\n * array element 0 is exact to convention\n * declared above.\n */\nliftClassKeyList.map((d) => {\n    const lNameSplit = l.name.split('-');\n    const lType = lNameSplit[0];\n    if (lType === d) {\n        if (d === 'page' || d === 'screen') {\n            component = upperFirst(camelCase(l.name));\n        } else if (d === 'component' || d === 'section') {\n            component =\n                argv._[0] === 'static' ? l.name : upperFirst(camelCase(l.name));\n            firstChild =\n                typeof liftClassTypes[argv._[0]][d] !== 'undefined'\n                    ? liftClassTypes[argv._[0]][d]\n                    : null;\n            newFile = true;\n        } else if (typeof liftClassTypes[argv._[0]][d] !== 'undefined') {\n            component = liftClassTypes[argv._[0]][d];\n        }\n    }\n});\nif (!component) return;\n")),o.a.createElement(r.MDXTag,{name:"h2",components:n,props:{id:"example-reference"}},"Example reference"),o.a.createElement(r.MDXTag,{name:"p",components:n},"The following Sketch file has an example of the naming convention in use:"),o.a.createElement(r.MDXTag,{name:"p",components:n},o.a.createElement(r.MDXTag,{name:"img",components:n,parentName:"p",props:{src:"assets/naming.png",alt:"Example layout",title:"Example Layout"}})))}}])&&c(t.prototype,a),i&&c(t,i),n}();u.__docgenInfo={description:"",methods:[],displayName:"MDXContent"}}}]);
//# sourceMappingURL=manual-sketchup-naming.305817e8304de77c75ce.js.map