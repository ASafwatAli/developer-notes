{"version":3,"sources":["webpack:///./manual/COMP3520-OS/3-Threads.md"],"names":["MDXContent","props","_this","_classCallCheck","this","_possibleConstructorReturn","_getPrototypeOf","call","layout","React","Component","_this$props","components","_objectWithoutProperties","react__WEBPACK_IMPORTED_MODULE_0___default","a","createElement","_mdx_js_tag__WEBPACK_IMPORTED_MODULE_1__","name","id","parentName","align"],"mappings":"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","file":"static/js/manual-com-p3520-os-3-threads.d329e004.js","sourcesContent":["\n  import React from 'react'\n  import { MDXTag } from '@mdx-js/tag'\n  \n\nexport default class MDXContent extends React.Component {\n  constructor(props) {\n    super(props)\n    this.layout = null\n  }\n  render() {\n    const { components, ...props } = this.props\n\n    return <MDXTag\n             name=\"wrapper\"\n             \n             components={components}><MDXTag name=\"h1\" components={components} props={{\"id\":\"week-3---threads\"}}>{`Week 3 - Threads`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"processes-and-threads\"}}>{`Processes and Threads`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Processes have two characteristics:`}</MDXTag>\n<MDXTag name=\"ol\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ol\">{`Resource Ownership `}<MDXTag name=\"ul\" components={components} parentName=\"li\">\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`process includes a virtual address space to hold the process image `}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`the OS performs a protection function to prevent unwanted interference between processes with respect to resources`}</MDXTag>\n</MDXTag></MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ol\">{`Scheduling/Execution`}<MDXTag name=\"ul\" components={components} parentName=\"li\">\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`follows an execution path that may be interleaved with other processes `}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`a process has an execution state (Running, Ready, etc.) and a dispatching priority and is scheduled and dispatched by the OS`}</MDXTag>\n</MDXTag></MDXTag>\n</MDXTag>\n<MDXTag name=\"p\" components={components}>{`These two characteristics are treated independently by modern operating systems:\n- the unit of dispatching is referred to as a `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`thread`}</MDXTag>{` or lightweight process\n- the unit of resource ownership is referred to as a `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`process`}</MDXTag>{` or `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`task`}</MDXTag></MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"multithreading\"}}>{`Multithreading`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`The ability of an OS to support multiple, concurrect paths of execution within a single process`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"process\"}}>{`Process`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`The unit of resource allocation and a unit of protection.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`A process is associated with: `}</MDXTag>\n<MDXTag name=\"ul\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`A virtual address space which holds the process image `}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Protected access to\n- Processors\n- Other processes\n- Files\n- I/O resources `}</MDXTag>\n</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"multiple-threads-in-process\"}}>{`Multiple threads in Process`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Each thread has:`}</MDXTag>\n<MDXTag name=\"ul\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Access to the memory and resources of its process (all threads of a process share this)`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`An execution state (running, ready, etc.)`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Saved thread context when not running `}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`An execution stack `}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Some per-thread static storage for local variables`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"single-threaded-vs-multi-threaded\"}}>{`Single-Threaded vs multi threaded`}</MDXTag>\n<MDXTag name=\"ul\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Both have `}<MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`Process Control Block`}</MDXTag></MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Both have `}<MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`User Address Space`}</MDXTag></MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Single thread has a `}<MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`User Stack`}</MDXTag>{` and `}<MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`Kernel Stack`}</MDXTag></MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Multithread process has a `}<MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`User Stack`}</MDXTag>{`, `}<MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`Kernel Stack`}</MDXTag>{`, `}<MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`Thread Control Block`}</MDXTag>{` within each thread`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"threads\"}}>{`Threads`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`In OS that supports threads: scheduling and dispatching done on thread basis `}</MDXTag>\n<MDXTag name=\"ul\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Most of the state info dealing with execution is maintained in thread-level data structures `}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Several actions that affect all of the threads in a process and that the OS must manage at the process level\n- Suspending process means all threads of a process\n- Terminates a process terminates all threads within the process `}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Similar to processes, threads have execution states and may synchronize with one another.`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"thread-execution-states\"}}>{`Thread Execution States`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Three basic states`}</MDXTag>\n<MDXTag name=\"ol\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ol\">{`Running `}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ol\">{`Ready `}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ol\">{`Blocked `}</MDXTag>\n</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Operations associated with a change in thread state `}</MDXTag>\n<MDXTag name=\"ul\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Spawn (another thread)\n- allocate register context and stacks `}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Block\n- move to an event queue waiting for the event\n- issue: will blocking a thread block other, or all, threads within the same process?`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Unblock\n- moved the the `}<MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`Ready`}</MDXTag>{` queue for execution`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Finish (thread)\n- de-allocate register context and stacks `}</MDXTag>\n</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"thread-synchronization\"}}>{`Thread Synchronization`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Necessity to sync activities of all threads and prevent interference between each other.`}</MDXTag>\n<MDXTag name=\"ul\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`all threads of a process share the same address space and other resources `}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`any alteration of a resource by one thread affects the other threads in the same process `}</MDXTag>\n</MDXTag>\n<MDXTag name=\"p\" components={components}>{`In general, the techniques used for thread sync are the same as those for process sync.`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"types-of-threads\"}}>{`Types of Threads`}</MDXTag>\n<MDXTag name=\"ol\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ol\">{`User Level Thread (ULT)`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ol\">{`Kernel Level Thread (KLT) `}<MDXTag name=\"ul\" components={components} parentName=\"li\">\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`also called kernel-supported threads or lightweight threads`}</MDXTag>\n</MDXTag></MDXTag>\n</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"user-level-threads\"}}>{`User-Level Threads`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Thread management all done by application.`}</MDXTag>\n<MDXTag name=\"ul\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Multithreading is managed by a runtime threads lib `}</MDXTag>\n</MDXTag>\n<MDXTag name=\"p\" components={components}>{`The kernel is not aware of the existence of threads `}</MDXTag>\n<MDXTag name=\"ul\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Only schedule the process as a unit and assigns a single execution state to that process `}</MDXTag>\n</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"disadvantages-of-ult\"}}>{`Disadvantages of ULT`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`In a typical OS many system calls are blocking `}</MDXTag>\n<MDXTag name=\"ul\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`as a result, when a ULT executes a system call, not only is the thread blocked, but all within the process are blocked `}</MDXTag>\n</MDXTag>\n<MDXTag name=\"p\" components={components}>{`In a pure ULT strategy, multithreaded applications cannot take advantage of multiprocessing.`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"kernel-level-threads\"}}>{`Kernel-Level Threads`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Kernel maintains context information for the process and the threads. `}</MDXTag>\n<MDXTag name=\"ul\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`No thread management done by application `}</MDXTag>\n</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Scheduling is done on a thread basis.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Windows is an example of this approach.`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"advantages-of-klt\"}}>{`Advantages of KLT`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`The kernel can simultaneously schedule multiple threads from the same process on multiple processors.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`If one thread is blocked, the kernel schedules another thread of the same process.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Kernel routines themselves can be multithreaded.`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"multicore--multithreading\"}}>{`Multicore & Multithreading`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Achieves concurrency without the overhead of using multiple processes.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Threads within the same process can exchange information through their common address space and have access to the shared resources of the process.`}</MDXTag>\n<MDXTag name=\"ul\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Threads of any process can run on any processor`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Soft affinity:\n- dispatcher tries to assign a ready thread to the same processor it last ran on\n- helps reuse data still in that processor's memory caches from the previous execution of the thread `}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Hard affinity:\n- an application restricts thread execution to certain processors`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"multicore-challenges\"}}>{`Multicore Challenges`}</MDXTag>\n<MDXTag name=\"ul\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Dividing activities `}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Balance `}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Data splitting `}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Data dependency `}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Testing and debugging `}</MDXTag>\n</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"linux-threads\"}}>{`Linux Threads`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Linux uses the same internal representation for processes and threads; a thread is simply a new process (or task) that happens to share the same address space as its parent.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`A distinction is only made when a new thread is created by the `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`clone`}</MDXTag>{` system call\n- `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`fork`}</MDXTag>{` creates a new process with its own entirely new process context\n- `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`clone`}</MDXTag>{` creates a new process with its own identity, but that is allowed to share the data structures of its parent`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Using `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`clone`}</MDXTag>{` gives the application fine-grained control over exactly what is shared between two threads.`}</MDXTag>\n<MDXTag name=\"table\" components={components}>\n<MDXTag name=\"thead\" components={components} parentName=\"table\">\n<MDXTag name=\"tr\" components={components} parentName=\"thead\">\n<MDXTag name=\"th\" components={components} parentName=\"tr\" props={{\"align\":null}}>{`flag`}</MDXTag>\n<MDXTag name=\"th\" components={components} parentName=\"tr\" props={{\"align\":null}}>{`meaning`}</MDXTag>\n</MDXTag>\n</MDXTag>\n<MDXTag name=\"tbody\" components={components} parentName=\"table\">\n<MDXTag name=\"tr\" components={components} parentName=\"tbody\">\n<MDXTag name=\"td\" components={components} parentName=\"tr\" props={{\"align\":null}}><MDXTag name=\"inlineCode\" components={components} parentName=\"td\">{`CLONE_FS`}</MDXTag></MDXTag>\n<MDXTag name=\"td\" components={components} parentName=\"tr\" props={{\"align\":null}}>{`File-system info is shared`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"tr\" components={components} parentName=\"tbody\">\n<MDXTag name=\"td\" components={components} parentName=\"tr\" props={{\"align\":null}}><MDXTag name=\"inlineCode\" components={components} parentName=\"td\">{`CLONE_VM`}</MDXTag></MDXTag>\n<MDXTag name=\"td\" components={components} parentName=\"tr\" props={{\"align\":null}}>{`The same mem space is shared`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"tr\" components={components} parentName=\"tbody\">\n<MDXTag name=\"td\" components={components} parentName=\"tr\" props={{\"align\":null}}><MDXTag name=\"inlineCode\" components={components} parentName=\"td\">{`CLONE_SIGHAND`}</MDXTag></MDXTag>\n<MDXTag name=\"td\" components={components} parentName=\"tr\" props={{\"align\":null}}>{`Signal handlers are shared`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"tr\" components={components} parentName=\"tbody\">\n<MDXTag name=\"td\" components={components} parentName=\"tr\" props={{\"align\":null}}><MDXTag name=\"inlineCode\" components={components} parentName=\"td\">{`CLONE_FILES`}</MDXTag></MDXTag>\n<MDXTag name=\"td\" components={components} parentName=\"tr\" props={{\"align\":null}}>{`The set of open files are shared`}</MDXTag>\n</MDXTag>\n</MDXTag>\n</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"windows-threads\"}}>{`Windows Threads`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Processes and servies provided by the Windows Kernel are relatively simple and general purpose.`}</MDXTag>\n<MDXTag name=\"ul\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`implemented as objects `}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`created as new process or a copy of an existing process `}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`exec proc may contain one or more threads `}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`both procs and thread objects have built-in sync capabilities`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Windows makes use of two types of process-related objects:`}</MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"strong\" components={components} parentName=\"p\">{`Processes`}</MDXTag>{`\n– an entity corresponding to a user job or application that owns resources`}</MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"strong\" components={components} parentName=\"p\">{`Threads`}</MDXTag>{`\n– a dispatchable unit of work that executes sequentially and is interruptible`}</MDXTag>\n           </MDXTag>\n  }\n}\n  "],"sourceRoot":""}