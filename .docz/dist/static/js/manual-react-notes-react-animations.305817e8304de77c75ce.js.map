{"version":3,"sources":["webpack:///./manual/React-Notes/React-Animations.md"],"names":["MDXContent","props","_this","_classCallCheck","this","_possibleConstructorReturn","_getPrototypeOf","call","layout","React","Component","_this$props","components","_objectWithoutProperties","react__WEBPACK_IMPORTED_MODULE_0___default","a","createElement","_mdx_js_tag__WEBPACK_IMPORTED_MODULE_1__","name","id","parentName","className"],"mappings":"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","file":"static/js/manual-react-notes-react-animations.afb1bebf.js","sourcesContent":["\n  import React from 'react'\n  import { MDXTag } from '@mdx-js/tag'\n  \n\nexport default class MDXContent extends React.Component {\n  constructor(props) {\n    super(props)\n    this.layout = null\n  }\n  render() {\n    const { components, ...props } = this.props\n\n    return <MDXTag\n             name=\"wrapper\"\n             \n             components={components}><MDXTag name=\"h1\" components={components} props={{\"id\":\"animations-in-react\"}}>{`Animations in React`}</MDXTag>\n{/* TOC -->autoauto- [Animations in React](#animations-in-react)auto- [REACTAN-1: Installation](#reactan-1-installation)auto- [REACTAN-2: Using CSS to now run the Transitions and Transforms](#reactan-2-using-css-to-now-run-the-transitions-and-transforms)autoauto<!-- /TOC */}\n<MDXTag name=\"h1\" components={components} props={{\"id\":\"reactan-1-installation\"}}>{`REACTAN-1: Installation`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`React Transistions can be done use the `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`ReactCSSTransitionGroup`}</MDXTag>{`.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Since React uses the virtual DOM, we don't get a chance to directly apply a CSS transition like you normally would with jQuery or JS.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`To install: `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`yarn add react-addons-css-transition-group`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`In the JS file:`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-javascript\"}}>{`import ReactCSSTransitionGroup from 'react-addons-css-transition-group';\n\nexport default class Transition extends Component {\n    render() {\n        return {\n            <ReactCSSTransitionGroup>\n                { list }\n            </ReactCSSTransitionGroup>\n        }\n    }\n}\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`By default, `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`<ReactCSSTransitionGroup>`}</MDXTag>{` renders as a `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`span`}</MDXTag>{`, but we can give it a `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`component`}</MDXTag>{` property to change it! E.g. `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`<ReactCSSTransitionGroup component=\"ul\">`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`To access the property for animations, we need to set a property of `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`transitionName`}</MDXTag>{`.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`E.g. `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`<ReactCSSTransitionGroup component=\"ul\" transitionName=\"slide\">`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`There are a couple of other noteworthy properties:`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-javascript\"}}>{`<ReactCSSTransitionGroup\n  component=\"ul\"\n  transitionName=\"slide\"\n  transitionEnterTimeout={500} // this is for the duration of the transition in ms\n  transitionLeaveTimeout={500} // transition for leaving the DOM\n  transitionAppear={true} // transition for the ReactCSSTransitionGroup component\n  transitionAppearTimeout={500} // time for is\n>\n  {list}\n</ReactCSSTransitionGroup>\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h1\" components={components} props={{\"id\":\"reactan-2-using-css-to-now-run-the-transitions-and-transforms\"}}>{`REACTAN-2: Using CSS to now run the Transitions and Transforms`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{}}>{`// in the css file\n\n/* start enter state */\n.slide-enter {\n    transform: translateX(-100%);\n}\n\n/* end enter state */\n.slide-enter.slide-enter-active {\n    transform: translateX(0);\n    transition: transform 0.5s ease-out;\n}\n\n/* start leave state */\n.slide-leave {\n    transform: translateX(0);\n}\n\n/* end leave state */\n.slide-leave.slide-leave-active {\n    transform: translateX(-100%);\n    opacity: 0;\n    transition: 0.5s ease-in;\n}\n\n/* initial mounting */\n.slide-appear {\n    opacity: 0;\n}\n\n.slide-appear.slide-appear-active {\n    opacity: 1;\n    transition: opacity 0.5s ease-in;\n}\n`}</MDXTag></MDXTag>\n           </MDXTag>\n  }\n}\n  "],"sourceRoot":""}