(window.webpackJsonp=window.webpackJsonp||[]).push([[204],{"./manual/Ruby/CocoaPods-Workshop.md":function(e,t,n){"use strict";n.r(t),n.d(t,"default",function(){return m});var o=n("./node_modules/react/index.js"),r=n.n(o),a=n("./node_modules/@mdx-js/tag/dist/index.js");function p(e){return(p="function"===typeof Symbol&&"symbol"===typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"===typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function c(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}function s(e,t){for(var n=0;n<t.length;n++){var o=t[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}function i(e,t){return!t||"object"!==p(t)&&"function"!==typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function u(e){return(u=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function l(e,t){return(l=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}var m=function(e){function t(e){var n;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),(n=i(this,u(t).call(this,e))).layout=null,n}var n,o,p;return function(e,t){if("function"!==typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&l(e,t)}(t,r.a.Component),n=t,(o=[{key:"render",value:function(){var e=this.props,t=e.components;c(e,["components"]);return r.a.createElement(a.MDXTag,{name:"wrapper",components:t},r.a.createElement(a.MDXTag,{name:"h1",components:t,props:{id:"cocoa-pods-workshop"}},"COCOA PODS WORKSHOP"),r.a.createElement(a.MDXTag,{name:"h2",components:t,props:{id:"pods-1-keywords"}},"PODS-1: Keywords"),r.a.createElement(a.MDXTag,{name:"p",components:t},"To start the project, go to the project folder..."),r.a.createElement(a.MDXTag,{name:"p",components:t},"pod init\nopen -a Xcode Podfile"),r.a.createElement(a.MDXTag,{name:"p",components:t},"Remove the pounds sign that sets the platform."),r.a.createElement(a.MDXTag,{name:"p",components:t},"Then under the #Pod for..., you can add your pods!"),r.a.createElement(a.MDXTag,{name:"p",components:t},"Check cocoapods website for pods."),r.a.createElement(a.MDXTag,{name:"p",components:t},"Then, to install the selected pods, type...\npod install"),r.a.createElement(a.MDXTag,{name:"p",components:t},"Now, we will want to open up the .xcworkspace file!"),r.a.createElement(a.MDXTag,{name:"h2",components:t,props:{id:"pods-2-updating"}},"PODS-2: Updating"),r.a.createElement(a.MDXTag,{name:"p",components:t},"Change the pod file..."),r.a.createElement(a.MDXTag,{name:"p",components:t},"eg pod 'Hue', '~> 1.1.0' // update to anything up to 1.2 but not above"),r.a.createElement(a.MDXTag,{name:"p",components:t},"THEN just back in terminal"),r.a.createElement(a.MDXTag,{name:"p",components:t},"pod update"))}}])&&s(n.prototype,o),p&&s(n,p),t}();m.__docgenInfo={description:"",methods:[],displayName:"MDXContent"}}}]);
//# sourceMappingURL=manual-ruby-cocoa-pods-workshop.305817e8304de77c75ce.js.map