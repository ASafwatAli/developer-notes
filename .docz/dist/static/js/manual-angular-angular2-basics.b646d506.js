(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{"./manual/Angular/Angular2-Basics.md":function(e,n,t){"use strict";t.r(n),t.d(n,"default",function(){return g});var a=t("./node_modules/react/index.js"),o=t.n(a),r=t("./node_modules/@mdx-js/tag/dist/index.js");function m(e){return(m="function"===typeof Symbol&&"symbol"===typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"===typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function p(e,n){if(null==e)return{};var t,a,o=function(e,n){if(null==e)return{};var t,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}function s(e,n){for(var t=0;t<n.length;t++){var a=n[t];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}function l(e,n){return!n||"object"!==m(n)&&"function"!==typeof n?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):n}function c(e){return(c=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function i(e,n){return(i=Object.setPrototypeOf||function(e,n){return e.__proto__=n,e})(e,n)}var g=function(e){function n(e){var t;return function(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}(this,n),(t=l(this,c(n).call(this,e))).layout=null,t}var t,a,m;return function(e,n){if("function"!==typeof n&&null!==n)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(n&&n.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),n&&i(e,n)}(n,o.a.Component),t=n,(a=[{key:"render",value:function(){var e=this.props,n=e.components;p(e,["components"]);return o.a.createElement(r.MDXTag,{name:"wrapper",components:n},o.a.createElement(r.MDXTag,{name:"h1",components:n,props:{id:"angular-2-basics"}},"Angular 2 Basics"),o.a.createElement(r.MDXTag,{name:"p",components:n},"You can not just use Angular for web apps, but also iOS and Java using Native kit."),o.a.createElement(r.MDXTag,{name:"h2",components:n,props:{id:"why-angular"}},"Why Angular?"),o.a.createElement(r.MDXTag,{name:"ul",components:n},o.a.createElement(r.MDXTag,{name:"li",components:n,parentName:"ul"},"it's Modular\n- in previous versions, you needed the entire Angular framework loaded"),o.a.createElement(r.MDXTag,{name:"li",components:n,parentName:"ul"},"uses TypeScript, it uses static typing"),o.a.createElement(r.MDXTag,{name:"li",components:n,parentName:"ul"},"Google has hundreds of internal applications using Angular "),o.a.createElement(r.MDXTag,{name:"li",components:n,parentName:"ul"},"large community of developers ")),o.a.createElement(r.MDXTag,{name:"p",components:n},"Angular JS refers to version 1, whereas Angular refers to version 2."),o.a.createElement(r.MDXTag,{name:"h2",components:n,props:{id:"the-parts-and-pieces-of-an-angular-application"}},"The Parts and Pieces of an Angular Application"),o.a.createElement(r.MDXTag,{name:"p",components:n},o.a.createElement(r.MDXTag,{name:"strong",components:n,parentName:"p"},"How does it work?")),o.a.createElement(r.MDXTag,{name:"ul",components:n},o.a.createElement(r.MDXTag,{name:"li",components:n,parentName:"ul"},o.a.createElement(r.MDXTag,{name:"p",components:n,parentName:"li"},"App requires one ",o.a.createElement(r.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"root")," component")),o.a.createElement(r.MDXTag,{name:"li",components:n,parentName:"ul"},o.a.createElement(r.MDXTag,{name:"p",components:n,parentName:"li"},"The app requires services, components and 3rd party modules\n- Services can be internal or part of 3rd party modules")),o.a.createElement(r.MDXTag,{name:"li",components:n,parentName:"ul"},o.a.createElement(r.MDXTag,{name:"p",components:n,parentName:"li"},o.a.createElement(r.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"Services"),": used to perform things like long running calcs or running web requests.")),o.a.createElement(r.MDXTag,{name:"li",components:n,parentName:"ul"},o.a.createElement(r.MDXTag,{name:"p",components:n,parentName:"li"},o.a.createElement(r.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"Components"),": Broken down components/elements ")),o.a.createElement(r.MDXTag,{name:"li",components:n,parentName:"ul"},o.a.createElement(r.MDXTag,{name:"p",components:n,parentName:"li"},o.a.createElement(r.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"NgModule"),": This is like a container for the application\n- ",o.a.createElement(r.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"Ng")," is the namespace Angular adopted"))),o.a.createElement(r.MDXTag,{name:"p",components:n},"You can use ",o.a.createElement(r.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"Typescript"),", ",o.a.createElement(r.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"Javascript")," or ",o.a.createElement(r.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"Dart")," with Angular2."),o.a.createElement(r.MDXTag,{name:"h2",components:n,props:{id:"typescript"}},"Typescript"),o.a.createElement(r.MDXTag,{name:"p",components:n},"Angular is the first large framework to adopt ",o.a.createElement(r.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"Typescript"),". The idea is to keep you in the editor."),o.a.createElement(r.MDXTag,{name:"p",components:n},"We can use Typescript to help enforce static typing."),o.a.createElement(r.MDXTag,{name:"p",components:n},o.a.createElement(r.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"Intellisense")," is also used as helping autocompletion intelligence when coding and certain styles of coding allow for this."),o.a.createElement(r.MDXTag,{name:"p",components:n},"Eg. code:"),o.a.createElement(r.MDXTag,{name:"pre",components:n},o.a.createElement(r.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-javascript"}},"// example 1 \n\nclass Greeter{\n    greet(name: string) {\n        console.log(name);\n    }\n}\n\nconst greeter = new Greeter();\n\ngreeter.greet('Jim');\n\n// example 2\n\nfunction rollCall(students: any[], max?: number) {\n    max = max || students.length;\n    const attendance = students.slice(undefined, max);\n    console.log(attendence);\n}\n")),o.a.createElement(r.MDXTag,{name:"h2",components:n,props:{id:"the-first-angular-application"}},"The First Angular Application"),o.a.createElement(r.MDXTag,{name:"p",components:n},"As you build out your ",o.a.createElement(r.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"index.html")," file you set a ",o.a.createElement(r.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"<app-root>")," component as the target for Angular2 entry point."),o.a.createElement(r.MDXTag,{name:"p",components:n},"Within ",o.a.createElement(r.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"src/app")," create ",o.a.createElement(r.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"app.module.ts")," as the root module."),o.a.createElement(r.MDXTag,{name:"pre",components:n},o.a.createElement(r.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-javascript"}},"/* in app.modules.ts */\n\n// note the @ is to do with npm supporting namespace modules\n// this allows code to be shared between packages \nimport { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { AppComponent } from './app.component';\n\n// create the AppModule \n// export for use in main.ts \n// add the decorator to post-process it\n// the decorator is used by angular to compose the app \n// in the most efficient way possible\n@NgModule({\n    // using BrowserModule lets Angular know this is \n    // for web use\n    imports: [BrowserModule],\n    // for the target component \n    // before using it the first time - declare we are using it\n    // if not there will be a definition error\n    declarations: [AppComponent],\n    bootstrap: [AppComponent]\n})\nexport class AppModule {\n    \n}\n\n/* in main.ts */\nimport './styles/main.css';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\nimport { AppModule } from './app/app.module';\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n")),o.a.createElement(r.MDXTag,{name:"p",components:n}," In order for this to work, we need to create a component!"),o.a.createElement(r.MDXTag,{name:"pre",components:n},o.a.createElement(r.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-javascript"}},"/* in app.component.ts */\n\nimport { Component } from '@angular/core';\n\n@Component({\n    // we should target app-root in the component \n    // best practise to prefix components with something related to app eg app or another namespace convention\n    selector: 'app-root',\n    template: `<h2>Hello World!</h2>`,\n    style: [\n        `\n        h2 {\n            color: blue;\n        }\n        `\n    ]\n})\nexport class AppComponent {\n    \n}\n")),o.a.createElement(r.MDXTag,{name:"h2",components:n,props:{id:"the-anatomy-of-the-component"}},"The Anatomy of the Component"),o.a.createElement(r.MDXTag,{name:"p",components:n},"In Angular, a Component = Template + Class + Decorator."),o.a.createElement(r.MDXTag,{name:"ul",components:n},o.a.createElement(r.MDXTag,{name:"li",components:n,parentName:"ul"},"Template: View or user interface for a component"),o.a.createElement(r.MDXTag,{name:"li",components:n,parentName:"ul"},"Class: Code that brings template to life "),o.a.createElement(r.MDXTag,{name:"li",components:n,parentName:"ul"},"Decorator: Metadata that wires up the class to the template, completing the component ")),o.a.createElement(r.MDXTag,{name:"p",components:n},"This will cover each section."),o.a.createElement(r.MDXTag,{name:"h2",components:n,props:{id:"the-component-decorator"}},"The @Component decorator"),o.a.createElement(r.MDXTag,{name:"ul",components:n},o.a.createElement(r.MDXTag,{name:"li",components:n,parentName:"ul"},o.a.createElement(r.MDXTag,{name:"inlineCode",components:n,parentName:"li"},"selector"),": name for the component HTML tag"),o.a.createElement(r.MDXTag,{name:"li",components:n,parentName:"ul"},o.a.createElement(r.MDXTag,{name:"inlineCode",components:n,parentName:"li"},"template"),": Base html "),o.a.createElement(r.MDXTag,{name:"li",components:n,parentName:"ul"},o.a.createElement(r.MDXTag,{name:"inlineCode",components:n,parentName:"li"},"styles"),": you can also do this with a file")),o.a.createElement(r.MDXTag,{name:"p",components:n},"General all files (including the styling) will be placed in the same place as the component."),o.a.createElement(r.MDXTag,{name:"pre",components:n},o.a.createElement(r.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-javascript"}},"// example component file \n\nimport { Component } from '@angular/core';\n\n@Component({\n    selector: 'app-root',\n    templateUrl: 'app.component.html',\n    styleUrls: ['app.component.css']\n})\nexport class AppComponent {\n    example: string[];\n\n    constructor() {\n        this.example = [\"Hi\", \"ho\"];\n    }\n}\n")),o.a.createElement(r.MDXTag,{name:"h2",components:n,props:{id:"data-binding"}},"Data Binding"),o.a.createElement(r.MDXTag,{name:"ol",components:n},o.a.createElement(r.MDXTag,{name:"li",components:n,parentName:"ol"},"Class to Template "),o.a.createElement(r.MDXTag,{name:"li",components:n,parentName:"ol"},"Template to Class"),o.a.createElement(r.MDXTag,{name:"li",components:n,parentName:"ol"},"(Two-way) Between Class and Template")),o.a.createElement(r.MDXTag,{name:"p",components:n},o.a.createElement(r.MDXTag,{name:"strong",components:n,parentName:"p"},"1")),o.a.createElement(r.MDXTag,{name:"p",components:n},o.a.createElement(r.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"<h1>{{ exp }}</h1>")," view will update to changes to the expression.\n",o.a.createElement(r.MDXTag,{name:"inlineCode",components:n,parentName:"p"},'<input [target]="expression" />')," is another form of binding"),o.a.createElement(r.MDXTag,{name:"p",components:n},o.a.createElement(r.MDXTag,{name:"strong",components:n,parentName:"p"},"2"),o.a.createElement(r.MDXTag,{name:"inlineCode",components:n,parentName:"p"},'<button (event)="expression"></button>')," for event listening"),o.a.createElement(r.MDXTag,{name:"p",components:n},o.a.createElement(r.MDXTag,{name:"strong",components:n,parentName:"p"},"3"),o.a.createElement(r.MDXTag,{name:"inlineCode",components:n,parentName:"p"},'<input [(target)]="expression" />')," - takes input and sends output"),o.a.createElement(r.MDXTag,{name:"p",components:n},"Given the example of 2 above..."),o.a.createElement(r.MDXTag,{name:"pre",components:n},o.a.createElement(r.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-javascript"}},"// for the event handler \n\n...\nexport class AppComponent {\n    emojis = ['', '', ''];  // array of emojis\n    activeEmoji: string;\n\n    changeEmoji() {\n        this.activeEmoji = this.emoji[Math.floor(Math.random() * this.emoji.length)]\n    }\n}   \n")),o.a.createElement(r.MDXTag,{name:"h2",components:n,props:{id:"nesting-components"}},"Nesting Components"),o.a.createElement(r.MDXTag,{name:"p",components:n},"Two new components: A list and a component with that list. ",o.a.createElement(r.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"Entry")," and ",o.a.createElement(r.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"Entry-list"),"."),o.a.createElement(r.MDXTag,{name:"p",components:n},o.a.createElement(r.MDXTag,{name:"strong",components:n,parentName:"p"},"entry-list")),o.a.createElement(r.MDXTag,{name:"p",components:n},"After creation of this component, it should be imported to ",o.a.createElement(r.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"app.module.ts")," and added to the declarations property."),o.a.createElement(r.MDXTag,{name:"p",components:n},"Because there will probably be many components, we will create a barrel to work as the middle man."),o.a.createElement(r.MDXTag,{name:"pre",components:n},o.a.createElement(r.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-javascript"}},"// index.ts\n\nexport * from './entry-list/entry-list.component'\n")),o.a.createElement(r.MDXTag,{name:"p",components:n},"Now this entire folder can just be imported to the ",o.a.createElement(r.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"app.module.ts")," file."),o.a.createElement(r.MDXTag,{name:"pre",components:n},o.a.createElement(r.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-javascript"}},"// entry-list ts \nimport { Components } from '@angular/core';\n\n@Component({\n    selector: 'app-entry-list',\n    templateUrl: 'entry-list.component.html',\n    styleUrls: ['entry-list.component.css'] \n})\n\nexport class EntryListComponent {\n    \n}\n\n// in app.component.html \n<app-entry-list></app-entry-list>\n")),o.a.createElement(r.MDXTag,{name:"p",components:n},o.a.createElement(r.MDXTag,{name:"strong",components:n,parentName:"p"},"entry")),o.a.createElement(r.MDXTag,{name:"ul",components:n},o.a.createElement(r.MDXTag,{name:"li",components:n,parentName:"ul"},"create the usual files"),o.a.createElement(r.MDXTag,{name:"li",components:n,parentName:"ul"},"add in the import from the barrel"),o.a.createElement(r.MDXTag,{name:"li",components:n,parentName:"ul"},"ALWAYS ADD CHILD COMPONENTS FIRST")),o.a.createElement(r.MDXTag,{name:"pre",components:n},o.a.createElement(r.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-javascript"}},"// entry-list ts \nimport { Components } from '@angular/core';\n\n@Component({\n    selector: 'app-entry',\n    templateUrl: 'entry.component.html',\n    styleUrls: ['entry.component.css']  \n})\n\nexport class EntryComponent {\n    \n}\n")),o.a.createElement(r.MDXTag,{name:"p",components:n},"What we can now do in the ",o.a.createElement(r.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"entry-list.component.html"),", we can now add in the children."),o.a.createElement(r.MDXTag,{name:"h2",components:n,props:{id:"structural-directives"}},"Structural Directives"),o.a.createElement(r.MDXTag,{name:"p",components:n},"Directives let you..."),o.a.createElement(r.MDXTag,{name:"ul",components:n},o.a.createElement(r.MDXTag,{name:"li",components:n,parentName:"ul"},"Control Visibility "),o.a.createElement(r.MDXTag,{name:"li",components:n,parentName:"ul"},"Apply Styling"),o.a.createElement(r.MDXTag,{name:"li",components:n,parentName:"ul"},"Loop over items"),o.a.createElement(r.MDXTag,{name:"li",components:n,parentName:"ul"},"Extend app with custom scripts")),o.a.createElement(r.MDXTag,{name:"p",components:n},"There are things such as ",o.a.createElement(r.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"structural directives"),", ",o.a.createElement(r.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"attribute directives"),"."),o.a.createElement(r.MDXTag,{name:"pre",components:n},o.a.createElement(r.MDXTag,{name:"code",components:n,parentName:"pre",props:{}},'// example for a click action\n// here we can add styles for liked give toggled class (attribute)\n<div class="actions">\n    <button type="button" (event)="isLiked = !isLiked" [ngClass]="{liked: isLiked}">Show if true</button>\n    <button type="button" (event)="showComments = !showComments">Comments ({{comments.length}})</button>\n</div>\n\n// *ngFor to iterate (structural)\n// using Angulars template engine\n<div class="comments">\n    <div class="comment" *ngFor="let comment of comments">\n        <p>{{comment.comment}}<strong>{{comment.name}}</strong></p>\n    </div>\n</div>\n')))}}])&&s(t.prototype,a),m&&s(t,m),n}();g.__docgenInfo={description:"",methods:[],displayName:"MDXContent"}}}]);
//# sourceMappingURL=manual-angular-angular2-basics.305817e8304de77c75ce.js.map