(window.webpackJsonp=window.webpackJsonp||[]).push([[86],{"./manual/iOS/PassKit.md":function(e,n,a){"use strict";a.r(n),a.d(n,"default",function(){return d});var t=a("./node_modules/react/index.js"),r=a.n(t),o=a("./node_modules/@mdx-js/tag/dist/index.js");function s(e){return(s="function"===typeof Symbol&&"symbol"===typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"===typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function p(e,n){if(null==e)return{};var a,t,r=function(e,n){if(null==e)return{};var a,t,r={},o=Object.keys(e);for(t=0;t<o.length;t++)a=o[t],n.indexOf(a)>=0||(r[a]=e[a]);return r}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(t=0;t<o.length;t++)a=o[t],n.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}function i(e,n){for(var a=0;a<n.length;a++){var t=n[a];t.enumerable=t.enumerable||!1,t.configurable=!0,"value"in t&&(t.writable=!0),Object.defineProperty(e,t.key,t)}}function c(e,n){return!n||"object"!==s(n)&&"function"!==typeof n?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):n}function l(e){return(l=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function m(e,n){return(m=Object.setPrototypeOf||function(e,n){return e.__proto__=n,e})(e,n)}var d=function(e){function n(e){var a;return function(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}(this,n),(a=c(this,l(n).call(this,e))).layout=null,a}var a,t,s;return function(e,n){if("function"!==typeof n&&null!==n)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(n&&n.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),n&&m(e,n)}(n,r.a.Component),a=n,(t=[{key:"render",value:function(){var e=this.props,n=e.components;p(e,["components"]);return r.a.createElement(o.MDXTag,{name:"wrapper",components:n},r.a.createElement(o.MDXTag,{name:"h1",components:n,props:{id:"passkit"}},"PassKit"),r.a.createElement(o.MDXTag,{name:"ul",components:n},r.a.createElement(o.MDXTag,{name:"li",components:n,parentName:"ul"},r.a.createElement(o.MDXTag,{name:"a",components:n,parentName:"li",props:{href:"#passkit"}},"PassKit"),r.a.createElement(o.MDXTag,{name:"ul",components:n,parentName:"li"},r.a.createElement(o.MDXTag,{name:"li",components:n,parentName:"ul"},r.a.createElement(o.MDXTag,{name:"a",components:n,parentName:"li",props:{href:"#adding-the-certificate"}},"Adding the certificate")),r.a.createElement(o.MDXTag,{name:"li",components:n,parentName:"ul"},r.a.createElement(o.MDXTag,{name:"a",components:n,parentName:"li",props:{href:"#php-server"}},"PHP Server"),r.a.createElement(o.MDXTag,{name:"ul",components:n,parentName:"li"},r.a.createElement(o.MDXTag,{name:"li",components:n,parentName:"ul"},r.a.createElement(o.MDXTag,{name:"a",components:n,parentName:"li",props:{href:"#plan-ticket-example"}},"Plan ticket example")),r.a.createElement(o.MDXTag,{name:"li",components:n,parentName:"ul"},r.a.createElement(o.MDXTag,{name:"a",components:n,parentName:"li",props:{href:"#store-card-example"}},"Store card example")))),r.a.createElement(o.MDXTag,{name:"li",components:n,parentName:"ul"},r.a.createElement(o.MDXTag,{name:"a",components:n,parentName:"li",props:{href:"#more-info"}},"More info"))))),r.a.createElement(o.MDXTag,{name:"h2",components:n,props:{id:"adding-the-certificate"}},"Adding the certificate"),r.a.createElement(o.MDXTag,{name:"p",components:n},"Head to the iOS dev portal and add the appropriate certificate."),r.a.createElement(o.MDXTag,{name:"p",components:n},"You may need to open Keychain access to generate a new key using ",r.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"Keychain Access > Certificate Assistant > Req Cert from Cert Auth")," and generate a new cert. This cert will be used to generate what you need to import into Keychain Access from the dev portal."),r.a.createElement(o.MDXTag,{name:"p",components:n},"Once created, export it to a folder for the server."),r.a.createElement(o.MDXTag,{name:"h2",components:n,props:{id:"php-server"}},"PHP Server"),r.a.createElement(o.MDXTag,{name:"p",components:n},"Using ",r.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"composer"),", you can build out a scaffold using the Slim Framework:"),r.a.createElement(o.MDXTag,{name:"p",components:n},r.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"composer create-project slim/slim-skeleton [project-name]"),"."),r.a.createElement(o.MDXTag,{name:"p",components:n},"To install the PHP PassKit helper, run ",r.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"composer require pkpass/pkpass"),"."),r.a.createElement(o.MDXTag,{name:"p",components:n},"Once built, you can then hit the routes and just require the pkpass and the routes file may end up looking like this:"),r.a.createElement(o.MDXTag,{name:"h3",components:n,props:{id:"plan-ticket-example"}},"Plan ticket example"),r.a.createElement(o.MDXTag,{name:"pre",components:n},r.a.createElement(o.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-php"}},"<?php\n// Routes\nuse PKPassPKPass;\n\n$app->get('/', function ($request, $response, $args) {\n    // Sample log message\n    $this->logger->info(\"Slim-Skeleton '/' route\");\n\n    // Render index view\n    return $this->renderer->render($response, 'sample.phtml', $args);\n});\n\n$app->get('/pass', function ($request, $response, $args) {\n    // Sample log message\n    $this->logger->info(\"Slim-Skeleton '/pass' route\");\n\n    $pass = new PKPass('<name>.p12', '<insert-password>');\n\n    // Pass content\n    $data = [\n        'description' => 'Demo pass',\n        'formatVersion' => 1,\n        'organizationName' => 'Flight Express',\n        'passTypeIdentifier' => 'pass.com.<teamname>.<passname>', // Change this!\n        'serialNumber' => '12345678',\n        'teamIdentifier' => '<insert-team-id>', // Change this! Found on Apple Dev Portal\n        'boardingPass' => [\n            'primaryFields' => [\n                [\n                    'key' => 'origin',\n                    'label' => 'San Francisco',\n                    'value' => 'SFO',\n                ],\n                [\n                    'key' => 'destination',\n                    'label' => 'London',\n                    'value' => 'LHR',\n                ],\n            ],\n            'secondaryFields' => [\n                [\n                    'key' => 'gate',\n                    'label' => 'Gate',\n                    'value' => 'F12',\n                ],\n                [\n                    'key' => 'date',\n                    'label' => 'Departure date',\n                    'value' => '07/11/2012 10:22',\n                ],\n            ],\n            'backFields' => [\n                [\n                    'key' => 'passenger-name',\n                    'label' => 'Passenger',\n                    'value' => 'John Appleseed',\n                ],\n            ],\n            'transitType' => 'PKTransitTypeAir',\n        ],\n        'barcode' => [\n            'format' => 'PKBarcodeFormatQR',\n            'message' => 'Flight-GateF12-ID6643679AH7B',\n            'messageEncoding' => 'iso-8859-1',\n        ],\n        'backgroundColor' => 'rgb(32,110,247)',\n        'logoText' => 'Flight info',\n        'relevantDate' => date('Y-m-dTH:i:sP')\n    ];\n\n    $pass->setWWDRcertPath('<path to wwdr.pem>');\n    $pass->setData($data);\n\n    // Add files to the pass package\n    $pass->addFile('public/icon.png');\n    $pass->addFile('public/icon@2x.png');\n    $pass->addFile('public/logo.png');\n\n    if($pass->checkError($error) == true) {\n        // echo $error;\n        // exit('An error occured: ' . $error);\n    }\n\n    // echo 'Here';\n\n    $result = $pass->create(true);\n    if($result == false) {\n        echo $pass->getError();\n    }\n    // Render index view\n    return $result;\n});\n")),r.a.createElement(o.MDXTag,{name:"h3",components:n,props:{id:"store-card-example"}},"Store card example"),r.a.createElement(o.MDXTag,{name:"pre",components:n},r.a.createElement(o.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-php"}},"<?php\n// Routes\nuse PKPassPKPass;\n\n$app->get('/', function ($request, $response, $args) {\n    // Sample log message\n    $this->logger->info(\"Slim-Skeleton '/' route\");\n\n    // Render index view\n    return $this->renderer->render($response, 'sample.phtml', $args);\n});\n\n$app->get('/pass', function ($request, $response, $args) {\n    // Sample log message\n    $this->logger->info(\"Slim-Skeleton '/pass' route\");\n\n    $pass = new PKPass('<key-path>', 'password');\n\n    // Pass content\n    $data = [\n        'formatVersion' => 1,\n        'organizationName' => 'Testing',\n        'passTypeIdentifier' => 'pass.com.<id>.<app>', // Change this!\n        'serialNumber' => '12345678',\n        'teamIdentifier' => '<team-id>', // Change this!\n        'logoText' => 'Loyalty',\n        'description' => 'Rewards card',\n        'storeCard' => [\n            'secondaryFields' => [\n                [\n                    'key' => 'balance',\n                    'label' => 'BALANCE',\n                    'value' => '$250.00'\n                ],\n                [\n                    'key' => 'name',\n                    'label' => 'NICKNAME',\n                    'value' => 'Denno'\n                ],\n            ],\n            'backFields' => [\n                [\n                    'key' => 'owner-name',\n                    'label' => 'Rewards Card',\n                    'value' => 'John Appleseed'\n                ],\n            ]\n        ],\n        'barcode' => [\n            'format' => 'PKBarcodeFormatPDF417',\n            'message' => 'ID6643679AH7B',\n            'messageEncoding' => 'iso-8859-1',\n            'altText' => 'ID6643679AH7B'\n        ],\n        'backgroundColor' => 'rgb(32,110,247)',\n        'logoText' => 'Dummy card info'\n    ];\n\n    $pass->setWWDRcertPath('<wwdr-key>');\n    $pass->setData($data);\n\n    // Add files to the pass package\n    $pass->addFile('public/icon.png');\n    $pass->addFile('public/icon@2x.png');\n    $pass->addFile('public/logo.png');\n\n    if($pass->checkError($error) == true) {\n        // echo $error;\n        // exit('An error occured: ' . $error);\n    }\n\n    // echo 'Here';\n\n    $result = $pass->create(true);\n    if($result == false) {\n        echo $pass->getError();\n    }\n    // Render index view\n    return $result;\n});\n\n?>\n")),r.a.createElement(o.MDXTag,{name:"h2",components:n,props:{id:"more-info"}},"More info"),r.a.createElement(o.MDXTag,{name:"p",components:n},"If you need to generate a wwdr cert, you can globally install ",r.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"passbook")," eg. ",r.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"node install -g passbook")," and run a command like ",r.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"node-passbook prepare-keys -p <folder-hosting-exported-keys>")," and it can do the conversion for you. Make sure you don't forget the password, though."),r.a.createElement(o.MDXTag,{name:"p",components:n},"Some changes you may need to make are passing ",r.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"POST")," variables to change it for each user."),r.a.createElement(o.MDXTag,{name:"p",components:n},"If you need to change the JSON structure above, refer to ",r.a.createElement(o.MDXTag,{name:"a",components:n,parentName:"p",props:{href:"https://developer.apple.com/library/content/documentation/UserExperience/Reference/PassKit_Bundle/Chapters/Introduction.html"}},"https://developer.apple.com/library/content/documentation/UserExperience/Reference/PassKit_Bundle/Chapters/Introduction.html")," for more info."))}}])&&i(a.prototype,t),s&&i(a,s),n}();d.__docgenInfo={description:"",methods:[],displayName:"MDXContent"}}}]);
//# sourceMappingURL=manual-i-os-pass-kit.305817e8304de77c75ce.js.map