(window.webpackJsonp=window.webpackJsonp||[]).push([[115],{"./manual/Kubernetes/AWS-EKS-Starter.mdx":function(e,n,a){"use strict";a.r(n),a.d(n,"default",function(){return u});var t=a("./node_modules/react/index.js"),o=a.n(t),m=a("./node_modules/@mdx-js/tag/dist/index.js");function r(e){return(r="function"===typeof Symbol&&"symbol"===typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"===typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function c(e,n){if(null==e)return{};var a,t,o=function(e,n){if(null==e)return{};var a,t,o={},m=Object.keys(e);for(t=0;t<m.length;t++)a=m[t],n.indexOf(a)>=0||(o[a]=e[a]);return o}(e,n);if(Object.getOwnPropertySymbols){var m=Object.getOwnPropertySymbols(e);for(t=0;t<m.length;t++)a=m[t],n.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(o[a]=e[a])}return o}function l(e,n){for(var a=0;a<n.length;a++){var t=n[a];t.enumerable=t.enumerable||!1,t.configurable=!0,"value"in t&&(t.writable=!0),Object.defineProperty(e,t.key,t)}}function s(e,n){return!n||"object"!==r(n)&&"function"!==typeof n?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):n}function p(e){return(p=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function i(e,n){return(i=Object.setPrototypeOf||function(e,n){return e.__proto__=n,e})(e,n)}var u=function(e){function n(e){var a;return function(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}(this,n),(a=s(this,p(n).call(this,e))).layout=null,a}var a,t,r;return function(e,n){if("function"!==typeof n&&null!==n)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(n&&n.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),n&&i(e,n)}(n,o.a.Component),a=n,(t=[{key:"render",value:function(){var e=this.props,n=e.components;c(e,["components"]);return o.a.createElement(m.MDXTag,{name:"wrapper",components:n},o.a.createElement(m.MDXTag,{name:"h1",components:n,props:{id:"aws-eks-starter"}},"AWS EKS Starter"),o.a.createElement(m.MDXTag,{name:"h2",components:n,props:{id:"eks-setup-process"}},"EKS Setup Process"),o.a.createElement(m.MDXTag,{name:"p",components:n},"EKS will setup and manage our Kubernetes clusters:"),o.a.createElement(m.MDXTag,{name:"ul",components:n},o.a.createElement(m.MDXTag,{name:"li",components:n,parentName:"ul"},"This will create K8s master in high availability"),o.a.createElement(m.MDXTag,{name:"li",components:n,parentName:"ul"},"Etcd in high availability"),o.a.createElement(m.MDXTag,{name:"li",components:n,parentName:"ul"},"IAM plugin setup"),o.a.createElement(m.MDXTag,{name:"li",components:n,parentName:"ul"},"CA setup (for TLS)"),o.a.createElement(m.MDXTag,{name:"li",components:n,parentName:"ul"},"Auto scaling done"),o.a.createElement(m.MDXTag,{name:"li",components:n,parentName:"ul"},"Load Balancers done (NLB and ELB)")),o.a.createElement(m.MDXTag,{name:"p",components:n},"In short, you will get an EKS control plane and you'll just need to setup the worker nodes in the availability zones."),o.a.createElement(m.MDXTag,{name:"p",components:n},"The from the laptop, you can use kubectl to talk to AWS."),o.a.createElement(m.MDXTag,{name:"p",components:n},"There is also deep integration with AWS:"),o.a.createElement(m.MDXTag,{name:"ul",components:n},o.a.createElement(m.MDXTag,{name:"li",components:n,parentName:"ul"},"API calls can be audited in CloudTrail"),o.a.createElement(m.MDXTag,{name:"li",components:n,parentName:"ul"},"Authetication through IAM while authorization through RBAC."),o.a.createElement(m.MDXTag,{name:"li",components:n,parentName:"ul"},"CloudFormation to manage clusteres"),o.a.createElement(m.MDXTag,{name:"li",components:n,parentName:"ul"},"Customize AMI"),o.a.createElement(m.MDXTag,{name:"li",components:n,parentName:"ul"},"Load Balancers, EBS Volumes, EFS, etc..."),o.a.createElement(m.MDXTag,{name:"li",components:n,parentName:"ul"},"Container registies on ECR"),o.a.createElement(m.MDXTag,{name:"li",components:n,parentName:"ul"},"Networking is handled with a per-pod IP address with attached ENI")),o.a.createElement(m.MDXTag,{name:"h3",components:n,props:{id:"eks-use-cases"}},"EKS Use cases"),o.a.createElement(m.MDXTag,{name:"ul",components:n},o.a.createElement(m.MDXTag,{name:"li",components:n,parentName:"ul"},"Can create a cluster easily"),o.a.createElement(m.MDXTag,{name:"li",components:n,parentName:"ul"},"Microservices in containers"),o.a.createElement(m.MDXTag,{name:"li",components:n,parentName:"ul"},"Paas/Website"),o.a.createElement(m.MDXTag,{name:"li",components:n,parentName:"ul"},"Migrate from on-prem to cloud"),o.a.createElement(m.MDXTag,{name:"li",components:n,parentName:"ul"},"ML cluster (support for GPU instances)")),o.a.createElement(m.MDXTag,{name:"h3",components:n,props:{id:"the-course"}},"The Course"),o.a.createElement(m.MDXTag,{name:"ul",components:n},o.a.createElement(m.MDXTag,{name:"li",components:n,parentName:"ul"},"Deploy EKS cluster using CF"),o.a.createElement(m.MDXTag,{name:"li",components:n,parentName:"ul"},"Scale Kubernetes cluster"),o.a.createElement(m.MDXTag,{name:"li",components:n,parentName:"ul"},"Setup ",o.a.createElement(m.MDXTag,{name:"inlineCode",components:n,parentName:"li"},"kubectl")," properly"),o.a.createElement(m.MDXTag,{name:"li",components:n,parentName:"ul"},"Learn how EKS works under the hood"),o.a.createElement(m.MDXTag,{name:"li",components:n,parentName:"ul"},"Setup admin using Kubernetes dashboard"),o.a.createElement(m.MDXTag,{name:"li",components:n,parentName:"ul"},"Deploy stateless app on EKS and expose it with public ELB"),o.a.createElement(m.MDXTag,{name:"li",components:n,parentName:"ul"},"Deploy stateful app on EKS and bind it with EBS volumes"),o.a.createElement(m.MDXTag,{name:"li",components:n,parentName:"ul"},"Deploy stateful app (like WordPress) with EFS"),o.a.createElement(m.MDXTag,{name:"li",components:n,parentName:"ul"},"Manage Kubernetes cluster using AWS CLI and ",o.a.createElement(m.MDXTag,{name:"inlineCode",components:n,parentName:"li"},"eksctl")," CLI")),o.a.createElement(m.MDXTag,{name:"h3",components:n,props:{id:"eks-architecture"}},"EKS Architecture"),o.a.createElement(m.MDXTag,{name:"ul",components:n},o.a.createElement(m.MDXTag,{name:"li",components:n,parentName:"ul"},"3 AZs"),o.a.createElement(m.MDXTag,{name:"li",components:n,parentName:"ul"},"Master node in each"),o.a.createElement(m.MDXTag,{name:"li",components:n,parentName:"ul"},"Etcd in each"),o.a.createElement(m.MDXTag,{name:"li",components:n,parentName:"ul"},"K8s worker nodes")),o.a.createElement(m.MDXTag,{name:"p",components:n},o.a.createElement(m.MDXTag,{name:"img",components:n,parentName:"p",props:{src:"https://res.cloudinary.com/gitgoodclub/image/upload/v1548135634/eks-course/Screen_Shot_2019-01-22_at_4.39.24_pm.png",alt:"EKS Architecture"}})),o.a.createElement(m.MDXTag,{name:"p",components:n},"EKS itself will manage all the load and master nodes and etcd as needed."),o.a.createElement(m.MDXTag,{name:"h3",components:n,props:{id:"basic-eks-setup"}},"Basic EKS Setup"),o.a.createElement(m.MDXTag,{name:"p",components:n},o.a.createElement(m.MDXTag,{name:"img",components:n,parentName:"p",props:{src:"https://res.cloudinary.com/gitgoodclub/image/upload/v1548135634/eks-course/Screen_Shot_2019-01-22_at_4.39.24_pm.png",alt:"Basic setup"}})),o.a.createElement(m.MDXTag,{name:"h2",components:n,props:{id:"setup-for-the-eks-cluster"}},"Setup for the EKS cluster"),o.a.createElement(m.MDXTag,{name:"h2",components:n,props:{id:"iam-user-roles"}},"IAM User roles"),o.a.createElement(m.MDXTag,{name:"h4",components:n,props:{id:"iam-user-and-permissions"}},"IAM user and permissions"),o.a.createElement(m.MDXTag,{name:"p",components:n},"To be able to run through this course your IAM user needs to have certain privileges to e.g. create all the required resources and objects. According AWS Best Practices you should ",o.a.createElement(m.MDXTag,{name:"em",components:n,parentName:"p"},"never")," use your root account for working with AWS services. E.g. to demonstrate the Hands-On lectures, the user ",o.a.createElement(m.MDXTag,{name:"em",components:n,parentName:"p"},"eks-course")," has been used."),o.a.createElement(m.MDXTag,{name:"p",components:n},"There are 2 attempts to follow:"),o.a.createElement(m.MDXTag,{name:"ol",components:n},o.a.createElement(m.MDXTag,{name:"li",components:n,parentName:"ol"},'Provide admin access\nlogin with an admin of your AWS account\ngo to "IAM" => "users" => click on your user => "Permissions" => "Add permission" => then search for ',o.a.createElement(m.MDXTag,{name:"em",components:n,parentName:"li"},"AdministratorAccess")," and attach this policy\nBasically your user just requires ",o.a.createElement(m.MDXTag,{name:"em",components:n,parentName:"li"},"one")," policy being attached")),o.a.createElement(m.MDXTag,{name:"ul",components:n},o.a.createElement(m.MDXTag,{name:"li",components:n,parentName:"ul"},"AdministratorAccess")),o.a.createElement(m.MDXTag,{name:"ol",components:n,props:{start:2}},o.a.createElement(m.MDXTag,{name:"li",components:n,parentName:"ol"},"Provide a dedicated list of privileges/policies\nto cover all the required privileges, first you have to create additional policies\nEKS-Admin-policy:")),o.a.createElement(m.MDXTag,{name:"pre",components:n},o.a.createElement(m.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-javascript"}},'{\n  "Version": "2012-10-17",\n  "Statement": [\n    {\n      "Effect": "Allow",\n      "Action": ["eks:*"],\n      "Resource": "*"\n    }\n  ]\n}\n')),o.a.createElement(m.MDXTag,{name:"p",components:n},"CloudFormation-Admin-policy:"),o.a.createElement(m.MDXTag,{name:"pre",components:n},o.a.createElement(m.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-javascript"}},'{\n  "Version": "2012-10-17",\n  "Statement": [\n    {\n      "Effect": "Allow",\n      "Action": ["cloudformation:*"],\n      "Resource": "*"\n    }\n  ]\n}\n')),o.a.createElement(m.MDXTag,{name:"p",components:n},"Finally, assign the following policies to your IAM user you are going to use throughout the course:"),o.a.createElement(m.MDXTag,{name:"ul",components:n},o.a.createElement(m.MDXTag,{name:"li",components:n,parentName:"ul"},"AmazonEC2FullAccess"),o.a.createElement(m.MDXTag,{name:"li",components:n,parentName:"ul"},"IAMFullAccess"),o.a.createElement(m.MDXTag,{name:"li",components:n,parentName:"ul"},"AmazonVPCFullAccess"),o.a.createElement(m.MDXTag,{name:"li",components:n,parentName:"ul"},"CloudFormation-Admin-policy"),o.a.createElement(m.MDXTag,{name:"li",components:n,parentName:"ul"},"EKS-Admin-policy\nwhere the last 2 policies are the ones you created above")),o.a.createElement(m.MDXTag,{name:"h3",components:n,props:{id:"create-iam-role"}},"Create IAM role"),o.a.createElement(m.MDXTag,{name:"ul",components:n},o.a.createElement(m.MDXTag,{name:"li",components:n,parentName:"ul"},"open ",o.a.createElement(m.MDXTag,{name:"inlineCode",components:n,parentName:"li"},"https://console.aws.amazon.com/iam/")," and choose ",o.a.createElement(m.MDXTag,{name:"em",components:n,parentName:"li"},"Roles")," => ",o.a.createElement(m.MDXTag,{name:"em",components:n,parentName:"li"},"create role")),o.a.createElement(m.MDXTag,{name:"li",components:n,parentName:"ul"},"choose ",o.a.createElement(m.MDXTag,{name:"em",components:n,parentName:"li"},"EKS")," service followed by ",o.a.createElement(m.MDXTag,{name:"em",components:n,parentName:"li"},"Allows Amazon EKS to manage your clusters on your behalf")),o.a.createElement(m.MDXTag,{name:"li",components:n,parentName:"ul"},"choose ",o.a.createElement(m.MDXTag,{name:"em",components:n,parentName:"li"},"Next: Permissions")),o.a.createElement(m.MDXTag,{name:"li",components:n,parentName:"ul"},"click ",o.a.createElement(m.MDXTag,{name:"em",components:n,parentName:"li"},"Next: Review")),o.a.createElement(m.MDXTag,{name:"li",components:n,parentName:"ul"},"enter a ",o.a.createElement(m.MDXTag,{name:"em",components:n,parentName:"li"},"unique")," Role name, ",o.a.createElement(m.MDXTag,{name:"em",components:n,parentName:"li"},"EKS-course-role")," and click ",o.a.createElement(m.MDXTag,{name:"em",components:n,parentName:"li"},o.a.createElement(m.MDXTag,{name:"em",components:n,parentName:"em"},"Create Role")))),o.a.createElement(m.MDXTag,{name:"h3",components:n,props:{id:"create-keypair"}},"Create keypair"),o.a.createElement(m.MDXTag,{name:"ul",components:n},o.a.createElement(m.MDXTag,{name:"li",components:n,parentName:"ul"},"open EC2 dashboard ",o.a.createElement(m.MDXTag,{name:"inlineCode",components:n,parentName:"li"},"https://console.aws.amazon.com/ec2")),o.a.createElement(m.MDXTag,{name:"li",components:n,parentName:"ul"},"click ",o.a.createElement(m.MDXTag,{name:"em",components:n,parentName:"li"},"KeyPairs"),' in left navigation bar under section "Network&Security"'),o.a.createElement(m.MDXTag,{name:"li",components:n,parentName:"ul"},"click ",o.a.createElement(m.MDXTag,{name:"em",components:n,parentName:"li"},"Create Key Pair")),o.a.createElement(m.MDXTag,{name:"li",components:n,parentName:"ul"},"provide name for keypair, ",o.a.createElement(m.MDXTag,{name:"em",components:n,parentName:"li"},"eks-course")," and click ",o.a.createElement(m.MDXTag,{name:"em",components:n,parentName:"li"},o.a.createElement(m.MDXTag,{name:"em",components:n,parentName:"em"},"Create"))),o.a.createElement(m.MDXTag,{name:"li",components:n,parentName:"ul"},"!! the keypair will be downloaded immediately => file ",o.a.createElement(m.MDXTag,{name:"em",components:n,parentName:"li"},"eks-course.pem")," !!")),o.a.createElement(m.MDXTag,{name:"h3",components:n,props:{id:"create-api-access-key-secret"}},"Create API Access key/-secret"),o.a.createElement(m.MDXTag,{name:"ul",components:n},o.a.createElement(m.MDXTag,{name:"li",components:n,parentName:"ul"},"create key+secret via AWS console")),o.a.createElement(m.MDXTag,{name:"pre",components:n},o.a.createElement(m.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-bash"}},"AWS-console => IAM => Users => <your user> => tab _Security credentials_ => button _Create access key_\n")),o.a.createElement(m.MDXTag,{name:"h2",components:n,props:{id:"create-base-aws-infrastructure"}},"Create base AWS infrastructure"),o.a.createElement(m.MDXTag,{name:"h3",components:n,props:{id:"create-vpc-subnets-and-security-group-for-your-k8s-cluster"}},"Create VPC, subnets and security group for your K8s cluster"),o.a.createElement(m.MDXTag,{name:"p",components:n},o.a.createElement(m.MDXTag,{name:"img",components:n,parentName:"p",props:{src:"https://res.cloudinary.com/gitgoodclub/image/upload/v1548137228/eks-course/Screen_Shot_2019-01-22_at_5.06.52_pm.png",alt:"AWS EKS Cluster setup"}})),o.a.createElement(m.MDXTag,{name:"p",components:n},"To create a VPC there is a prepared CloudFormation template to use. It creates a VPC including 3 Subnets\nAt the moment EKS is only available in the following 2 regions:"),o.a.createElement(m.MDXTag,{name:"ul",components:n},o.a.createElement(m.MDXTag,{name:"li",components:n,parentName:"ul"},"US West (Oregon), ",o.a.createElement(m.MDXTag,{name:"em",components:n,parentName:"li"},"us-west-2")),o.a.createElement(m.MDXTag,{name:"li",components:n,parentName:"ul"},"US East (N.Virginia), ",o.a.createElement(m.MDXTag,{name:"em",components:n,parentName:"li"},"us-east-1"))),o.a.createElement(m.MDXTag,{name:"h4",components:n,props:{id:"working-on-the-console"}},"Working on the console"),o.a.createElement(m.MDXTag,{name:"ul",components:n},o.a.createElement(m.MDXTag,{name:"li",components:n,parentName:"ul"},"open ",o.a.createElement(m.MDXTag,{name:"inlineCode",components:n,parentName:"li"},"https://console.aws.amazon.com/cloudformation/")," and select one of the above mentioned regions"),o.a.createElement(m.MDXTag,{name:"li",components:n,parentName:"ul"},"click ",o.a.createElement(m.MDXTag,{name:"em",components:n,parentName:"li"},"Create Stack")),o.a.createElement(m.MDXTag,{name:"li",components:n,parentName:"ul"},"select ",o.a.createElement(m.MDXTag,{name:"em",components:n,parentName:"li"},"Upload a template to Amazon S3")," , click ",o.a.createElement(m.MDXTag,{name:"em",components:n,parentName:"li"},o.a.createElement(m.MDXTag,{name:"em",components:n,parentName:"em"},"Upload file"))," and select ",o.a.createElement(m.MDXTag,{name:"inlineCode",components:n,parentName:"li"},"eks-course-vpc.yaml")),o.a.createElement(m.MDXTag,{name:"li",components:n,parentName:"ul"},"click ",o.a.createElement(m.MDXTag,{name:"em",components:n,parentName:"li"},"Next")),o.a.createElement(m.MDXTag,{name:"li",components:n,parentName:"ul"},"provide data in the ",o.a.createElement(m.MDXTag,{name:"em",components:n,parentName:"li"},"Specify Details")," overview:")),o.a.createElement(m.MDXTag,{name:"pre",components:n},o.a.createElement(m.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-yaml"}},"# eks-course-vpc.yaml\n---\nAWSTemplateFormatVersion: '2010-09-09'\nDescription: 'AWS EKS course'\n\nParameters:\n  VpcBlock:\n    Type: String\n    Default: 192.168.0.0/16\n    Description: CIDR range for VPC\n\n  Subnet01Block:\n    Type: String\n    Default: 192.168.64.0/18\n    Description: CIDR for first subnet within VPC\n\n  Subnet02Block:\n    Type: String\n    Default: 192.168.128.0/18\n    Description: CIDR for second subnet within VPC\n\n  Subnet03Block:\n    Type: String\n    Default: 192.168.192.0/18\n    Description: CIDR for third subnet within VPC\n\nResources:\n  VPC:\n    Type: AWS::EC2::VPC\n    Properties:\n      CidrBlock: !Ref VpcBlock\n      EnableDnsSupport: true\n      EnableDnsHostnames: true\n      Tags:\n        - Key: Name\n          Value: !Sub '${AWS::StackName}-VPC'\n\n  InternetGateway:\n    Type: 'AWS::EC2::InternetGateway'\n\n  VPCGatewayAttachment:\n    Type: 'AWS::EC2::VPCGatewayAttachment'\n    Properties:\n      InternetGatewayId: !Ref InternetGateway\n      VpcId: !Ref VPC\n\n  RouteTable:\n    Type: AWS::EC2::RouteTable\n    Properties:\n      VpcId: !Ref VPC\n      Tags:\n        - Key: Name\n          Value: Public Subnets\n        - Key: Network\n          Value: Public\n\n  Route:\n    DependsOn: VPCGatewayAttachment\n    Type: AWS::EC2::Route\n    Properties:\n      RouteTableId: !Ref RouteTable\n      DestinationCidrBlock: 0.0.0.0/0\n      GatewayId: !Ref InternetGateway\n\n  Subnet01:\n    Type: AWS::EC2::Subnet\n    Properties:\n      AvailabilityZone:\n        Fn::Select:\n          - '0'\n          - Fn::GetAZs:\n              Ref: AWS::Region\n      CidrBlock:\n        Ref: Subnet01Block\n      VpcId:\n        Ref: VPC\n      Tags:\n        - Key: Name\n          Value: !Sub '${AWS::StackName}-Subnet1'\n\n  Subnet02:\n    Type: AWS::EC2::Subnet\n    Properties:\n      AvailabilityZone:\n        Fn::Select:\n          - '1'\n          - Fn::GetAZs:\n              Ref: AWS::Region\n      CidrBlock:\n        Ref: Subnet02Block\n      VpcId:\n        Ref: VPC\n      Tags:\n        - Key: Name\n          Value: !Sub '${AWS::StackName}-Subnet2'\n\n  Subnet03:\n    Type: AWS::EC2::Subnet\n\n    Properties:\n      AvailabilityZone:\n        Fn::Select:\n          - '2'\n          - Fn::GetAZs:\n              Ref: AWS::Region\n      CidrBlock:\n        Ref: Subnet03Block\n      VpcId:\n        Ref: VPC\n      Tags:\n        - Key: Name\n          Value: !Sub '${AWS::StackName}-Subnet3'\n\n  Subnet01RouteTableAssociation:\n    Type: AWS::EC2::SubnetRouteTableAssociation\n    Properties:\n      SubnetId: !Ref Subnet01\n      RouteTableId: !Ref RouteTable\n\n  Subnet02RouteTableAssociation:\n    Type: AWS::EC2::SubnetRouteTableAssociation\n    Properties:\n      SubnetId: !Ref Subnet02\n      RouteTableId: !Ref RouteTable\n\n  Subnet03RouteTableAssociation:\n    Type: AWS::EC2::SubnetRouteTableAssociation\n    Properties:\n      SubnetId: !Ref Subnet03\n      RouteTableId: !Ref RouteTable\n\n  ControlPlaneSecurityGroup:\n    Type: AWS::EC2::SecurityGroup\n    Properties:\n      GroupDescription: Cluster communication with worker nodes\n      VpcId: !Ref VPC\n\nOutputs:\n  SubnetIds:\n    Description: Your subnets\n    Value: !Join [',', [!Ref Subnet01, !Ref Subnet02, !Ref Subnet03]]\n\n  SecurityGroups:\n    Description: SecGroup for communication betw controlplane and workernodes\n    Value: !Join [',', [!Ref ControlPlaneSecurityGroup]]\n\n  VpcId:\n    Description: The VPC Id\n    Value: !Ref VPC\n")),o.a.createElement(m.MDXTag,{name:"h4",components:n,props:{id:"setting-stack-name"}},"Setting stack name"),o.a.createElement(m.MDXTag,{name:"ul",components:n},o.a.createElement(m.MDXTag,{name:"li",components:n,parentName:"ul"},"Stack name : set stack name ",o.a.createElement(m.MDXTag,{name:"em",components:n,parentName:"li"},"EKS-course-stack")),o.a.createElement(m.MDXTag,{name:"li",components:n,parentName:"ul"},"VPC Block : set CIDR range for your VPC, or leave the default from the CloudFormation template"),o.a.createElement(m.MDXTag,{name:"li",components:n,parentName:"ul"},"Subnet01Block : set CIDR range for this subnet, or leave the default from the CloudFormation template"),o.a.createElement(m.MDXTag,{name:"li",components:n,parentName:"ul"},"Subnet02Block : set CIDR range for this subnet, or leave the default from the CloudFormation template"),o.a.createElement(m.MDXTag,{name:"li",components:n,parentName:"ul"},"Subnet03Block : set CIDR range for this subnet, or leave the default from the CloudFormation template")),o.a.createElement(m.MDXTag,{name:"h4",components:n,props:{id:"continuing-on"}},"Continuing on"),o.a.createElement(m.MDXTag,{name:"ul",components:n},o.a.createElement(m.MDXTag,{name:"li",components:n,parentName:"ul"},"Click ",o.a.createElement(m.MDXTag,{name:"em",components:n,parentName:"li"},"Next")),o.a.createElement(m.MDXTag,{name:"li",components:n,parentName:"ul"},"Click ",o.a.createElement(m.MDXTag,{name:"em",components:n,parentName:"li"},"Create")),o.a.createElement(m.MDXTag,{name:"li",components:n,parentName:"ul"},"Observe the progress of the stack creation. After the stack is created, open tab ",o.a.createElement(m.MDXTag,{name:"em",components:n,parentName:"li"},"Outputs")," and record the ",o.a.createElement(m.MDXTag,{name:"em",components:n,parentName:"li"},"VPC-ID"),", ",o.a.createElement(m.MDXTag,{name:"em",components:n,parentName:"li"},"SecurityGroup")," and the ",o.a.createElement(m.MDXTag,{name:"em",components:n,parentName:"li"},"Subnet_IDs")," for all 3 subnets. You'll need those at worker launch time.")),o.a.createElement(m.MDXTag,{name:"h2",components:n,props:{id:"creating-the-eks-control-plane"}},"Creating the EKS control plane"),o.a.createElement(m.MDXTag,{name:"h3",components:n,props:{id:"via-cli"}},"Via CLI"),o.a.createElement(m.MDXTag,{name:"pre",components:n},o.a.createElement(m.MDXTag,{name:"code",components:n,parentName:"pre",props:{}},"aws eks create-cluster --name prod --role-arn arn:aws:iam::012345678910:role/eks-service-role-AWSServiceRoleForAmazonEKS-J7ONKE3BQ4PI --resources-vpc-config subnetIds=subnet-6782e71e,subnet-e7e761ac,securityGroupIds=sg-6979fe18\n")),o.a.createElement(m.MDXTag,{name:"h3",components:n,props:{id:"via-gui"}},"Via GUI"),o.a.createElement(m.MDXTag,{name:"p",components:n},o.a.createElement(m.MDXTag,{name:"img",components:n,parentName:"p",props:{src:"https://res.cloudinary.com/gitgoodclub/image/upload/v1548137849/eks-course/Screen_Shot_2019-01-22_at_5.17.00_pm.png",alt:"EKS Control Plane"}})),o.a.createElement(m.MDXTag,{name:"p",components:n},"Kubernetes API server is a AWS service, hence it doesn't need dedicated EC2 instances to run."),o.a.createElement(m.MDXTag,{name:"ul",components:n},o.a.createElement(m.MDXTag,{name:"li",components:n,parentName:"ul"},"Open the EKS overview page in AWS Management console, ",o.a.createElement(m.MDXTag,{name:"inlineCode",components:n,parentName:"li"},"https://console.aws.amazon.com/eks/home#/clusters")," and click ",o.a.createElement(m.MDXTag,{name:"em",components:n,parentName:"li"},"Create Cluster"),".")),o.a.createElement(m.MDXTag,{name:"p",components:n},"Populate the following fields:"),o.a.createElement(m.MDXTag,{name:"ul",components:n},o.a.createElement(m.MDXTag,{name:"li",components:n,parentName:"ul"},"Cluster name : enter a unique name, ",o.a.createElement(m.MDXTag,{name:"em",components:n,parentName:"li"},"EKS-course-cluster")),o.a.createElement(m.MDXTag,{name:"li",components:n,parentName:"ul"},"Kubernetes version : by default the latest available version is preselected"),o.a.createElement(m.MDXTag,{name:"li",components:n,parentName:"ul"},"Role ARN : select the IAM Role you created in the first Hands-On lesson ",o.a.createElement(m.MDXTag,{name:"em",components:n,parentName:"li"},"Part I: cover prerequisites")),o.a.createElement(m.MDXTag,{name:"li",components:n,parentName:"ul"},"VPC : select the VPC-ID from the dropdown box which was created in the first Hands-On lesson ",o.a.createElement(m.MDXTag,{name:"em",components:n,parentName:"li"},"Part II: create base AWS infrastructure")),o.a.createElement(m.MDXTag,{name:"li",components:n,parentName:"ul"},"Subnets : provide the comma separated Subnet-IDs you recorded in the previous step"),o.a.createElement(m.MDXTag,{name:"li",components:n,parentName:"ul"},"SecurityGroup : select the security group (it has name ",o.a.createElement(m.MDXTag,{name:"em",components:n,parentName:"li"},"ControlPlaneSecurityGroup")," ) which has been created in Hands-On ",o.a.createElement(m.MDXTag,{name:"em",components:n,parentName:"li"},"Part II: create base AWS infrastructure"))),o.a.createElement(m.MDXTag,{name:"p",components:n},"Then for creation:"),o.a.createElement(m.MDXTag,{name:"ul",components:n},o.a.createElement(m.MDXTag,{name:"li",components:n,parentName:"ul"},"click ",o.a.createElement(m.MDXTag,{name:"em",components:n,parentName:"li"},"Create")),o.a.createElement(m.MDXTag,{name:"li",components:n,parentName:"ul"},"on the ",o.a.createElement(m.MDXTag,{name:"em",components:n,parentName:"li"},"Clusters")," overview page, observe field ",o.a.createElement(m.MDXTag,{name:"em",components:n,parentName:"li"},o.a.createElement(m.MDXTag,{name:"em",components:n,parentName:"em"},"Status"))," until cluster creation is finished.")),o.a.createElement(m.MDXTag,{name:"p",components:n},"Click on your clustername, and record the ",o.a.createElement(m.MDXTag,{name:"em",components:n,parentName:"p"},"API server endpoint")," and ",o.a.createElement(m.MDXTag,{name:"em",components:n,parentName:"p"},"Certificate authority")," values to configure ",o.a.createElement(m.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"kubectl")," in the next Hands-On ",o.a.createElement(m.MDXTag,{name:"em",components:n,parentName:"p"},"Part IV: install & configure kubectl"),"."),o.a.createElement(m.MDXTag,{name:"h2",components:n,props:{id:"setting-up-local-kubectl-for-eks"}},"Setting up local kubectl for EKS"),o.a.createElement(m.MDXTag,{name:"h3",components:n,props:{id:"recap-on-the-kubectl-setup"}},"Recap on the kubectl setup"),o.a.createElement(m.MDXTag,{name:"ul",components:n},o.a.createElement(m.MDXTag,{name:"li",components:n,parentName:"ul"},o.a.createElement(m.MDXTag,{name:"inlineCode",components:n,parentName:"li"},"kubectl")," relies on the ",o.a.createElement(m.MDXTag,{name:"inlineCode",components:n,parentName:"li"},"kubectl config file")),o.a.createElement(m.MDXTag,{name:"li",components:n,parentName:"ul"},"That relies on the EKS endpoint and User authentication"),o.a.createElement(m.MDXTag,{name:"li",components:n,parentName:"ul"},"Use auth depends on ",o.a.createElement(m.MDXTag,{name:"inlineCode",components:n,parentName:"li"},"aws-iam-authenticator")," executable"),o.a.createElement(m.MDXTag,{name:"li",components:n,parentName:"ul"},"This generates an auth token based on the ",o.a.createElement(m.MDXTag,{name:"inlineCode",components:n,parentName:"li"},"aws credentials file"))),o.a.createElement(m.MDXTag,{name:"h3",components:n,props:{id:"install-kubectl--aws-iam_authenticator"}},"Install kubectl & aws-iam_authenticator"),o.a.createElement(m.MDXTag,{name:"ul",components:n},o.a.createElement(m.MDXTag,{name:"li",components:n,parentName:"ul"},o.a.createElement(m.MDXTag,{name:"p",components:n,parentName:"li"},"kubectl"),o.a.createElement(m.MDXTag,{name:"ul",components:n,parentName:"li"},o.a.createElement(m.MDXTag,{name:"li",components:n,parentName:"ul"},"on RH based Linux: ",o.a.createElement(m.MDXTag,{name:"inlineCode",components:n,parentName:"li"},"sudo dnf install kubernetes-client"),o.a.createElement(m.MDXTag,{name:"ul",components:n,parentName:"li"},o.a.createElement(m.MDXTag,{name:"li",components:n,parentName:"ul"},"check: ",o.a.createElement(m.MDXTag,{name:"inlineCode",components:n,parentName:"li"},"kubectl version --short --client")))),o.a.createElement(m.MDXTag,{name:"li",components:n,parentName:"ul"},"on Windows, open a terminal emulator, preferrably MobaXterm:")),o.a.createElement(m.MDXTag,{name:"pre",components:n,parentName:"li"},o.a.createElement(m.MDXTag,{name:"code",components:n,parentName:"pre",props:{}},"curl -k -# -o kubectl.exe https://amazon-eks.s3-us-west-2.amazonaws.com/1.10.3/2018-07-26/bin/windows/amd64/kubectl.exe\nchmod +x kubectl.exe\nmkdir $HOME/bin\nmv kubectl.exe $HOME/bin\necho 'export PATH=$HOME/bin:$PATH' >> ~/.bashrc\nsource .bashrc\n")),o.a.createElement(m.MDXTag,{name:"ul",components:n,parentName:"li"},o.a.createElement(m.MDXTag,{name:"li",components:n,parentName:"ul"},"check: ",o.a.createElement(m.MDXTag,{name:"inlineCode",components:n,parentName:"li"},"kubectl.exe version --short --client")))),o.a.createElement(m.MDXTag,{name:"li",components:n,parentName:"ul"},o.a.createElement(m.MDXTag,{name:"p",components:n,parentName:"li"},"aws-iam-authenticator"),o.a.createElement(m.MDXTag,{name:"ul",components:n,parentName:"li"},o.a.createElement(m.MDXTag,{name:"li",components:n,parentName:"ul"},"on Linux:")),o.a.createElement(m.MDXTag,{name:"pre",components:n,parentName:"li"},o.a.createElement(m.MDXTag,{name:"code",components:n,parentName:"pre",props:{}},"curl -o aws-iam-authenticator https://amazon-eks.s3-us-west-2.amazonaws.com/1.10.3/2018-07-26/bin/linux/amd64/aws-iam-authenticator\nchmod +x ./aws-iam-authenticator\ncp ./aws-iam-authenticator /usr/local/bin/\n")),o.a.createElement(m.MDXTag,{name:"ul",components:n,parentName:"li"},o.a.createElement(m.MDXTag,{name:"li",components:n,parentName:"ul"},o.a.createElement(m.MDXTag,{name:"p",components:n,parentName:"li"},"Test: ",o.a.createElement(m.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"aws-iam-authenticator help"))),o.a.createElement(m.MDXTag,{name:"li",components:n,parentName:"ul"},o.a.createElement(m.MDXTag,{name:"p",components:n,parentName:"li"},"on Windows, open a terminal emulator, preferrably MobaXterm:"))),o.a.createElement(m.MDXTag,{name:"pre",components:n,parentName:"li"},o.a.createElement(m.MDXTag,{name:"code",components:n,parentName:"pre",props:{}},"curl -k -# -o aws-iam-authenticator.exe  https://amazon-eks.s3-us-west-2.amazonaws.com/1.10.3/2018-07-26/bin/windows/amd64/aws-iam-authenticator.exe\nchmod +x aws-iam-authenticator.exe\nmv aws-iam-authenticator.exe $HOME/bin\n")),o.a.createElement(m.MDXTag,{name:"ul",components:n,parentName:"li"},o.a.createElement(m.MDXTag,{name:"li",components:n,parentName:"ul"},"Test: ",o.a.createElement(m.MDXTag,{name:"inlineCode",components:n,parentName:"li"},"aws-iam-authenticator.exe help")))),o.a.createElement(m.MDXTag,{name:"li",components:n,parentName:"ul"},o.a.createElement(m.MDXTag,{name:"p",components:n,parentName:"li"},"aws credentials (ACCESS KEY+SECRET)\nnow we have to provide the Access key+secret from the first lesson ",o.a.createElement(m.MDXTag,{name:"em",components:n,parentName:"p"},"Part I : covering prerequisites")," and put them into the credentials template."),o.a.createElement(m.MDXTag,{name:"pre",components:n,parentName:"li"},o.a.createElement(m.MDXTag,{name:"code",components:n,parentName:"pre",props:{}},"* populate aws credentials file\n  copy the provided file named _credentials_ to\n  * WINDOWS cygwin: ```mkdir $HOMEPATH/.aws && vi $HOMEPATH/.aws/credentials```\n  * Linux: ```~/.aws/credentials```\n  and set the properties _aws_access_key_id_ and _aws_secret_access_key_\n")))),o.a.createElement(m.MDXTag,{name:"h3",components:n,props:{id:"configure-kubectl"}},"Configure ",o.a.createElement(m.MDXTag,{name:"em",components:n,parentName:"h3"},"kubectl")),o.a.createElement(m.MDXTag,{name:"p",components:n},"in this step we are creating a configuration file for the binary ",o.a.createElement(m.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"kubectl"),", which is the main tool to interact with Kubernetes later on."),o.a.createElement(m.MDXTag,{name:"p",components:n},"Use template file ",o.a.createElement(m.MDXTag,{name:"em",components:n,parentName:"p"},"kube-config-eks")," and copy it to:"),o.a.createElement(m.MDXTag,{name:"ul",components:n},o.a.createElement(m.MDXTag,{name:"li",components:n,parentName:"ul"},"Linux: ",o.a.createElement(m.MDXTag,{name:"inlineCode",components:n,parentName:"li"},"~/.kube/kube-config-eks")),o.a.createElement(m.MDXTag,{name:"li",components:n,parentName:"ul"},"Windows (cygwin): ",o.a.createElement(m.MDXTag,{name:"inlineCode",components:n,parentName:"li"},"mkdir $HOMEPATH/.kube && vi $HOMEPATH/.kube/kube-config-eks"))),o.a.createElement(m.MDXTag,{name:"pre",components:n},o.a.createElement(m.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-yaml"}},"apiVersion: v1\nclusters:\n  - cluster:\n      server: <endpoint-url>\n      certificate-authority-data: <base64-encoded-ca-cert>\n    name: kubernetes\ncontexts:\n  - context:\n      cluster: kubernetes\n      user: aws\n    name: aws\ncurrent-context: aws\nkind: Config\npreferences: {}\nusers:\n  - name: aws\n    user:\n      exec:\n        apiVersion: client.authentication.k8s.io/v1alpha1\n        command: aws-iam-authenticator\n        args:\n          - 'token'\n          - '-i'\n          - 'EKS-course-cluster'\n")),o.a.createElement(m.MDXTag,{name:"ul",components:n},o.a.createElement(m.MDXTag,{name:"li",components:n,parentName:"ul"},o.a.createElement(m.MDXTag,{name:"p",components:n,parentName:"li"},"edit file ",o.a.createElement(m.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"kube-config-eks")," and replace ",o.a.createElement(m.MDXTag,{name:"em",components:n,parentName:"p"},"endpoint-url"),", ",o.a.createElement(m.MDXTag,{name:"em",components:n,parentName:"p"},"base64-encoded-ca-cert")," by the values you recorded in the Hands-On lesson 3 ",o.a.createElement(m.MDXTag,{name:"em",components:n,parentName:"p"},"Part III: create the K8s control plane"),".")),o.a.createElement(m.MDXTag,{name:"li",components:n,parentName:"ul"},o.a.createElement(m.MDXTag,{name:"p",components:n,parentName:"li"},"Linux : ",o.a.createElement(m.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"export KUBECONFIG=~/.kube/kube-config-eks"),"\nWindows : ",o.a.createElement(m.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"export KUBECONFIG=$HOMEPATH/.kube/kube-config-eks"))),o.a.createElement(m.MDXTag,{name:"li",components:n,parentName:"ul"},o.a.createElement(m.MDXTag,{name:"p",components:n,parentName:"li"},"Test connectivity and access:"),o.a.createElement(m.MDXTag,{name:"pre",components:n,parentName:"li"},o.a.createElement(m.MDXTag,{name:"code",components:n,parentName:"pre",props:{}},"#>kubectl get svc\nNAME         TYPE        CLUSTER-IP   EXTERNAL-IP   PORT(S)   AGE\nkubernetes   ClusterIP   xxxxxxxxx    <none>        443/TCP   4m\n")),o.a.createElement(m.MDXTag,{name:"p",components:n,parentName:"li"},"command to check the config for kubectl: ",o.a.createElement(m.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"kubectl config view")))),o.a.createElement(m.MDXTag,{name:"p",components:n},"Now you successfully talked to the K8s control plane on AWS"))}}])&&l(a.prototype,t),r&&l(a,r),n}();u.__docgenInfo={description:"",methods:[],displayName:"MDXContent"}}}]);
//# sourceMappingURL=manual-kubernetes-aws-eks-starter.305817e8304de77c75ce.js.map