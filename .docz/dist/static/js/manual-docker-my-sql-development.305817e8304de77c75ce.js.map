{"version":3,"sources":["webpack:///./manual/Docker/MySQL-Development.md"],"names":["MDXContent","props","_this","_classCallCheck","this","_possibleConstructorReturn","_getPrototypeOf","call","layout","React","Component","_this$props","components","_objectWithoutProperties","react__WEBPACK_IMPORTED_MODULE_0___default","a","createElement","_mdx_js_tag__WEBPACK_IMPORTED_MODULE_1__","name","id","parentName"],"mappings":"g7CAKqBA,cACnB,SAAAA,EAAYC,GAAO,IAAAC,EAAA,mGAAAC,CAAAC,KAAAJ,IACjBE,EAAAG,EAAAD,KAAAE,EAAAN,GAAAO,KAAAH,KAAMH,KACDO,OAAS,KAFGN,yPADmBO,IAAMC,kDAKnC,IAAAC,EAC0BP,KAAKH,MAA9BW,EADDD,EACCC,WADDC,EAAAF,EAAA,gBAGP,OAAOG,EAAAC,EAAAC,cAACC,EAAA,OAAD,CACEC,KAAK,UAELN,WAAYA,GAAYE,EAAAC,EAAAC,cAACC,EAAA,OAAD,CAAQC,KAAK,KAAKN,WAAYA,EAAYX,MAAO,CAACkB,GAAK,mCAAvD,kCACrCL,EAAAC,EAAAC,cAACC,EAAA,OAAD,CAAQC,KAAK,IAAIN,WAAYA,GAA7B,iBAA2DE,EAAAC,EAAAC,cAACC,EAAA,OAAD,CAAQC,KAAK,aAAaN,WAAYA,EAAYQ,WAAW,KAA7D,kCAA3D,KACAN,EAAAC,EAAAC,cAACC,EAAA,OAAD,CAAQC,KAAK,IAAIN,WAAYA,GAA7B,QAAkDE,EAAAC,EAAAC,cAACC,EAAA,OAAD,CAAQC,KAAK,aAAaN,WAAYA,EAAYQ,WAAW,KAA7D,wGAAlD,iEACAN,EAAAC,EAAAC,cAACC,EAAA,OAAD,CAAQC,KAAK,IAAIN,WAAYA,GAA7B,gEAA0GE,EAAAC,EAAAC,cAACC,EAAA,OAAD,CAAQC,KAAK,aAAaN,WAAYA,EAAYQ,WAAW,KAA7D,iCAA1G,uBAA6ON,EAAAC,EAAAC,cAACC,EAAA,OAAD,CAAQC,KAAK,aAAaN,WAAYA,EAAYQ,WAAW,KAA7D,SAA7O,wBACAN,EAAAC,EAAAC,cAACC,EAAA,OAAD,CAAQC,KAAK,IAAIN,WAAYA,GAAYE,EAAAC,EAAAC,cAACC,EAAA,OAAD,CAAQC,KAAK,aAAaN,WAAYA,EAAYQ,WAAW,KAA7D,sHAAzC,KACAN,EAAAC,EAAAC,cAACC,EAAA,OAAD,CAAQC,KAAK,IAAIN,WAAYA,GAA7B,WAAqDE,EAAAC,EAAAC,cAACC,EAAA,OAAD,CAAQC,KAAK,aAAaN,WAAYA,EAAYQ,WAAW,KAA7D,qFAArD,KACAN,EAAAC,EAAAC,cAACC,EAAA,OAAD,CAAQC,KAAK,KAAKN,WAAYA,EAAYX,MAAO,CAACkB,GAAK,6CAAvD,4CACAL,EAAAC,EAAAC,cAACC,EAAA,OAAD,CAAQC,KAAK,IAAIN,WAAYA,GAA7B,6CAAuFE,EAAAC,EAAAC,cAACC,EAAA,OAAD,CAAQC,KAAK,aAAaN,WAAYA,EAAYQ,WAAW,KAA7D,SAAvF,UAAqLN,EAAAC,EAAAC,cAACC,EAAA,OAAD,CAAQC,KAAK,aAAaN,WAAYA,EAAYQ,WAAW,KAA7D,oBAArL,4HAAgZN,EAAAC,EAAAC,cAACC,EAAA,OAAD,CAAQC,KAAK,aAAaN,WAAYA,EAAYQ,WAAW,KAA7D,qDAAhZ,QAAwhBN,EAAAC,EAAAC,cAACC,EAAA,OAAD,CAAQC,KAAK,aAAaN,WAAYA,EAAYQ,WAAW,KAA7D,iEAAxhB,kBAAsrBN,EAAAC,EAAAC,cAACC,EAAA,OAAD,CAAQC,KAAK,aAAaN,WAAYA,EAAYQ,WAAW,KAA7D,qBAAtrB","file":"static/js/manual-docker-my-sql-development.fb21fcad.js","sourcesContent":["\n  import React from 'react'\n  import { MDXTag } from '@mdx-js/tag'\n  \n\nexport default class MDXContent extends React.Component {\n  constructor(props) {\n    super(props)\n    this.layout = null\n  }\n  render() {\n    const { components, ...props } = this.props\n\n    return <MDXTag\n             name=\"wrapper\"\n             \n             components={components}><MDXTag name=\"h1\" components={components} props={{\"id\":\"mysql-development-using-docker\"}}>{`MySQL Development using Docker`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Firstly, pull `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`docker pull mysql/mysql-server`}</MDXTag>{`.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Then `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`docker run --name sql-test -e MYSQL_ROOT_PASSWORD=password -p 6000:3306 -d mysql/mysql-server:latest`}</MDXTag>{`. If there a replacement or commited image, run that instead.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`If you are running it on a network, first create the network `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`docker network create dev-env`}</MDXTag>{`, then run with the `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`--net`}</MDXTag>{` flag to hook it up.`}</MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`docker run --name sql-test -e MYSQL_ROOT_PASSWORD=password -p 6000:3306 --net dev-env -d mysql/mysql-server:latest`}</MDXTag>{`.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Linking `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`docker run -d -name app-container-name --link mysql-container-name app-image-name`}</MDXTag>{`.`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"updating-the-local-docker-mysql-instance\"}}>{`Updating the local Docker MySQL instance`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Log into the container and first log into `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`mysql`}</MDXTag>{` using `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`mysql -u root -p`}</MDXTag>{`. This will prompt you for that password we created, so now type that in and enter the command line terminal. First, run `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`CREATE USER 'admin'@'%' IDENTIFIED BY 'password';`}</MDXTag>{` Run `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`GRANT ALL PRIVILEGES ON *.* TO 'admin'@'%' WITH GRANT OPTION;`}</MDXTag>{`. Finally, run `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`FLUSH PRIVILEGES;`}</MDXTag>{`.`}</MDXTag>\n           </MDXTag>\n  }\n}\n  "],"sourceRoot":""}