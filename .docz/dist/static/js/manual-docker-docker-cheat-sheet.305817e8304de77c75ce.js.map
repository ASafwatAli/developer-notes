{"version":3,"sources":["webpack:///./manual/Docker/docker-cheat-sheet.md"],"names":["MDXContent","props","_this","_classCallCheck","this","_possibleConstructorReturn","_getPrototypeOf","call","layout","React","Component","_this$props","components","_objectWithoutProperties","react__WEBPACK_IMPORTED_MODULE_0___default","a","createElement","_mdx_js_tag__WEBPACK_IMPORTED_MODULE_1__","name","id","parentName","href"],"mappings":"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","file":"static/js/manual-docker-docker-cheat-sheet.a6a8d8a1.js","sourcesContent":["\n  import React from 'react'\n  import { MDXTag } from '@mdx-js/tag'\n  \n\nexport default class MDXContent extends React.Component {\n  constructor(props) {\n    super(props)\n    this.layout = null\n  }\n  render() {\n    const { components, ...props } = this.props\n\n    return <MDXTag\n             name=\"wrapper\"\n             \n             components={components}><MDXTag name=\"h1\" components={components} props={{\"id\":\"docker-cheat-sheet\"}}>{`Docker Cheat Sheet`}</MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"3-parts-of-docker\"}}>{`3 Parts of Docker`}</MDXTag>\n<MDXTag name=\"ol\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ol\">{`Docker Engine`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ol\">{`Compose`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ol\">{`Machine`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{}}>{`// see versions in shell\ndocker --version\ndocker-compose --version\ndocker-machine --version\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"getting-started\"}}>{`Getting started`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Open a command-line terminal, and run some Docker commands to verify that Docker is working as expected.\nSome good commands to try are docker version to check that you have the latest release installed, and docker ps and docker run hello-world to verify that Docker is running.`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{}}>{`docker version\ndocker ps\ndocker run hello-world\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`To start a Dockerized web server:`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{}}>{`docker run -d -p 80:80 --name webserver nginx\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`Run `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`docker ps`}</MDXTag>{` while your web server is running to see details on the webserver container.`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"adding-registries\"}}>{`Adding registries`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`As an alternative to using Docker Hub to store your public or private images or Docker Trusted Registry, you can use Docker to set up your own insecure registry. Add URLs for insecure registries and registry mirrors on which to host your images.`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"http-proxy-settings\"}}>{`HTTP proxy settings`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Docker for Mac will detect HTTP/HTTPS Proxy Settings and automatically propagate these to Docker and to your containers. For example, if you set your proxy settings to `}<MDXTag name=\"a\" components={components} parentName=\"p\" props={{\"href\":\"http://proxy.example.com\"}}>{`http://proxy.example.com`}</MDXTag>{`, Docker will use this proxy when pulling containers.`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"file-sharing\"}}>{`File Sharing`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`You can decide which directories on your Mac to share with containers.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Add a Directory - Click + and navigate to the directory you want to add.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Click Apply & Restart to make the directory available to containers using Docker’s bind mount (-v) feature.`}</MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"strong\" components={components} parentName=\"p\">{`There are some limitations on the directories that can be shared:`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`They cannot be a subdirectory of an already shared directory.\nThey cannot already exist inside of Docker.`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"uninstalling\"}}>{`Uninstalling`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Docker for Mac can also be uninstalled using a command-line terminal:`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{}}>{`(mdfind Docker.app)/Contents/MacOS/Docker --uninstall\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"autocompletion\"}}>{`Autocompletion`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`To activate bash completion, these files need to be copied or symlinked to your bash_completion.d directory. For example, if you use Homebrew:`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{}}>{`cd /usr/local/etc/bash_completion.d\nln -s /Applications/Docker.app/Contents/Resources/etc/docker.bash-completion\nln -s /Applications/Docker.app/Contents/Resources/etc/docker-machine.bash-completion\nln -s /Applications/Docker.app/Contents/Resources/etc/docker-compose.bash-completion\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h1\" components={components} props={{\"id\":\"get-started-with-docker-tutorial\"}}>{`Get started with Docker tutorial`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"show-all-of-your-containers\"}}>{`Show all of your containers`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{}}>{`docker ps -a\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"how-to-run-images\"}}>{`How to run images`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Breakdown of `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`docker run hello-world`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`An image is a filesystem and parameters to use at runtime. It doesn’t have state and never changes. A container is a running instance of an image. When you ran the command, Docker Engine:`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`checked to see if you had the hello-world software image\ndownloaded the image from the Docker Hub (more about the hub later)\nloaded the image into the container and “ran” it\nDepending on how it was built, an image might run a simple, single command and then exit. This is what Hello-World did.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`A Docker image, though, is capable of much more. An image can start software as complex as a database, wait for you (or someone else) to add data, store the data for later use, and then wait for the next person.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Who built the hello-world software image though? In this case, Docker did but anyone can. Docker Engine lets people (or companies) create and share software through Docker images. Using Docker Engine, you don’t have to worry about whether your computer can run the software in a Docker image — a Docker container can always run it.`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"find-and-run-the-whalesy-image\"}}>{`Find and run the Whalesy Image`}</MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"print-random-fortune-cookie-message\"}}>{`Print random fortune cookie message`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`\\$ docker run mendlik/docker-whalesay`}</MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"print-custom-message\"}}>{`Print custom message`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`\\$ docker run mendlik/docker-whalesay \"Your message\"`}</MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"lets-see-whats-inside-the-container\"}}>{`Let's see what's inside the container`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`\\$ docker run -it --entrypoint /bin/bash mendlik/docker-whalesay`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"see-all-of-your-images\"}}>{`See all of your images`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{}}>{`docker images\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h1\" components={components} props={{\"id\":\"create-your-own-image\"}}>{`Create your own image`}</MDXTag>\n<MDXTag name=\"ol\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ol\">{`Make directory - this serves as the `}<MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`context`}</MDXTag>{` for the build. The context just means it contains all the things you need to build your image.`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ol\">{`Change into your new directory`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ol\"><MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`touch Dockerfile`}</MDXTag></MDXTag>\n</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Open this file, and add...`}</MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`FROM docker/whalesay:latest`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`The FROM keyword tells Docker which image your image is based on. Whalesay is cute and has the cowsay program already, so we’ll start there.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Add `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`RUN apt-get -y update && apt-get install -y fortunes`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`Now, to build...`}</MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`docker build -t docker-whale .`}</MDXTag></MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"the-build-process\"}}>{`The build process`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`The docker build -t docker-whale . command takes the Dockerfile in the current directory, and builds an image called docker-whale on your local machine. The command takes about a minute and its output looks really long and complex.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Once it is built, you can run it using the `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`docker run <name>`}</MDXTag>{` command! `}</MDXTag>\n           </MDXTag>\n  }\n}\n  "],"sourceRoot":""}