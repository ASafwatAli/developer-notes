{"version":3,"sources":["webpack:///./manual/Sketchup/intro.md"],"names":["MDXContent","props","_this","_classCallCheck","this","_possibleConstructorReturn","_getPrototypeOf","call","layout","React","Component","_this$props","components","_objectWithoutProperties","react__WEBPACK_IMPORTED_MODULE_0___default","a","createElement","_mdx_js_tag__WEBPACK_IMPORTED_MODULE_1__","name","id","parentName","className"],"mappings":"u6CAKqBA,cACnB,SAAAA,EAAYC,GAAO,IAAAC,EAAA,mGAAAC,CAAAC,KAAAJ,IACjBE,EAAAG,EAAAD,KAAAE,EAAAN,GAAAO,KAAAH,KAAMH,KACDO,OAAS,KAFGN,yPADmBO,IAAMC,kDAKnC,IAAAC,EAC0BP,KAAKH,MAA9BW,EADDD,EACCC,WADDC,EAAAF,EAAA,gBAGP,OAAOG,EAAAC,EAAAC,cAACC,EAAA,OAAD,CACEC,KAAK,UAELN,WAAYA,GAAYE,EAAAC,EAAAC,cAACC,EAAA,OAAD,CAAQC,KAAK,KAAKN,WAAYA,EAAYX,MAAO,CAACkB,GAAK,aAAvD,YACrCL,EAAAC,EAAAC,cAACC,EAAA,OAAD,CAAQC,KAAK,IAAIN,WAAYA,GAAYE,EAAAC,EAAAC,cAACC,EAAA,OAAD,CAAQC,KAAK,aAAaN,WAAYA,EAAYQ,WAAW,KAA7D,YAAzC,gFAAgNN,EAAAC,EAAAC,cAACC,EAAA,OAAD,CAAQC,KAAK,aAAaN,WAAYA,EAAYQ,WAAW,KAA7D,QAAhN,qEACAN,EAAAC,EAAAC,cAACC,EAAA,OAAD,CAAQC,KAAK,KAAKN,WAAYA,EAAYX,MAAO,CAACkB,GAAK,SAAvD,QACAL,EAAAC,EAAAC,cAACC,EAAA,OAAD,CAAQC,KAAK,IAAIN,WAAYA,GAA7B,qBACAE,EAAAC,EAAAC,cAACC,EAAA,OAAD,CAAQC,KAAK,MAAMN,WAAYA,GAAYE,EAAAC,EAAAC,cAACC,EAAA,OAAD,CAAQC,KAAK,OAAON,WAAYA,EAAYQ,WAAW,MAAMnB,MAAO,CAACoB,UAAY,wBAAjF,0pBAkB3CP,EAAAC,EAAAC,cAACC,EAAA,OAAD,CAAQC,KAAK,IAAIN,WAAYA,GAA7B,4CAAsFE,EAAAC,EAAAC,cAACC,EAAA,OAAD,CAAQC,KAAK,aAAaN,WAAYA,EAAYQ,WAAW,KAA7D,gCAAtF","file":"static/js/manual-sketchup-intro.a74d9c66.js","sourcesContent":["\n  import React from 'react'\n  import { MDXTag } from '@mdx-js/tag'\n  \n\nexport default class MDXContent extends React.Component {\n  constructor(props) {\n    super(props)\n    this.layout = null\n  }\n  render() {\n    const { components, ...props } = this.props\n\n    return <MDXTag\n             name=\"wrapper\"\n             \n             components={components}><MDXTag name=\"h1\" components={components} props={{\"id\":\"sketchup\"}}>{`Sketchup`}</MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`sketchup`}</MDXTag>{` is a binary program written to read a specific Sketch page and export out a `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`lift`}</MDXTag>{` compatible yml file depending on the naming from without Sketch.`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"help\"}}>{`Help`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`CLI help returns:`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-javascript\"}}>{`Help Manual:\n\n(argv._[0]) Type - YAML output type ie react, react-native, static etc\n(argv._[1]) Filepath - path to target Sketch file\n(argv.page) --page: Screen or page - target a specific Sketch page. Defaults to \"main\".\n(argv.layer) --layer: Target screen or page layer - target a specific screen or page layer within a Sketch page ie page-home\n(argv.type) --type: Set type to search for. Defaults to \"node\".\n\nExample:\n\nsketchup react-native node RNTest.sketch --layer screen-more --page main\n\nargv._[0]: react-native\nargv._[1]: RNTest.sketch\nargv.page: main\nargv.layer: screen-more (top layer within the Sketch page \"main\")\nargv.type: node\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`Admittedly, currently runnings look like `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`sketchup react [file].sketch`}</MDXTag>{` is what works.`}</MDXTag>\n           </MDXTag>\n  }\n}\n  "],"sourceRoot":""}