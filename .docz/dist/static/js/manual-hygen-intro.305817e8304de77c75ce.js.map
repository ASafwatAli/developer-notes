{"version":3,"sources":["webpack:///./manual/Hygen/intro.md"],"names":["MDXContent","props","_this","_classCallCheck","this","_possibleConstructorReturn","_getPrototypeOf","call","layout","React","Component","_this$props","components","_objectWithoutProperties","react__WEBPACK_IMPORTED_MODULE_0___default","a","createElement","_mdx_js_tag__WEBPACK_IMPORTED_MODULE_1__","name","id","parentName","href","className"],"mappings":"m6CAKqBA,cACnB,SAAAA,EAAYC,GAAO,IAAAC,EAAA,mGAAAC,CAAAC,KAAAJ,IACjBE,EAAAG,EAAAD,KAAAE,EAAAN,GAAAO,KAAAH,KAAMH,KACDO,OAAS,KAFGN,yPADmBO,IAAMC,kDAKnC,IAAAC,EAC0BP,KAAKH,MAA9BW,EADDD,EACCC,WADDC,EAAAF,EAAA,gBAGP,OAAOG,EAAAC,EAAAC,cAACC,EAAA,OAAD,CACEC,KAAK,UAELN,WAAYA,GAAYE,EAAAC,EAAAC,cAACC,EAAA,OAAD,CAAQC,KAAK,KAAKN,WAAYA,EAAYX,MAAO,CAACkB,GAAK,mBAAvD,kBACrCL,EAAAC,EAAAC,cAACC,EAAA,OAAD,CAAQC,KAAK,IAAIN,WAAYA,GAA7B,+IACAE,EAAAC,EAAAC,cAACC,EAAA,OAAD,CAAQC,KAAK,KAAKN,WAAYA,EAAYX,MAAO,CAACkB,GAAK,UAAvD,SACAL,EAAAC,EAAAC,cAACC,EAAA,OAAD,CAAQC,KAAK,KAAKN,WAAYA,GAC9BE,EAAAC,EAAAC,cAACC,EAAA,OAAD,CAAQC,KAAK,KAAKN,WAAYA,EAAYQ,WAAW,MAAKN,EAAAC,EAAAC,cAACC,EAAA,OAAD,CAAQC,KAAK,IAAIN,WAAYA,EAAYQ,WAAW,KAAKnB,MAAO,CAACoB,KAAO,qBAAxE,mBAE1DP,EAAAC,EAAAC,cAACC,EAAA,OAAD,CAAQC,KAAK,KAAKN,WAAYA,EAAYX,MAAO,CAACkB,GAAK,UAAvD,SACAL,EAAAC,EAAAC,cAACC,EAAA,OAAD,CAAQC,KAAK,IAAIN,WAAYA,GAA7B,yCACAE,EAAAC,EAAAC,cAACC,EAAA,OAAD,CAAQC,KAAK,MAAMN,WAAYA,GAAYE,EAAAC,EAAAC,cAACC,EAAA,OAAD,CAAQC,KAAK,OAAON,WAAYA,EAAYQ,WAAW,MAAMnB,MAAO,IAApE,qBAE3Ca,EAAAC,EAAAC,cAACC,EAAA,OAAD,CAAQC,KAAK,IAAIN,WAAYA,GAA7B,uBAAiEE,EAAAC,EAAAC,cAACC,EAAA,OAAD,CAAQC,KAAK,aAAaN,WAAYA,EAAYQ,WAAW,KAA7D,cAAjE,4CACAN,EAAAC,EAAAC,cAACC,EAAA,OAAD,CAAQC,KAAK,IAAIN,WAAYA,GAA7B,OAAiDE,EAAAC,EAAAC,cAACC,EAAA,OAAD,CAAQC,KAAK,aAAaN,WAAYA,EAAYQ,WAAW,KAA7D,cAAjD,yCACAN,EAAAC,EAAAC,cAACC,EAAA,OAAD,CAAQC,KAAK,MAAMN,WAAYA,GAAYE,EAAAC,EAAAC,cAACC,EAAA,OAAD,CAAQC,KAAK,OAAON,WAAYA,EAAYQ,WAAW,MAAMnB,MAAO,CAACqB,UAAY,wBAAjF,sxDAwC3CR,EAAAC,EAAAC,cAACC,EAAA,OAAD,CAAQC,KAAK,IAAIN,WAAYA,GAA7B,qIACAE,EAAAC,EAAAC,cAACC,EAAA,OAAD,CAAQC,KAAK,MAAMN,WAAYA,GAAYE,EAAAC,EAAAC,cAACC,EAAA,OAAD,CAAQC,KAAK,OAAON,WAAYA,EAAYQ,WAAW,MAAMnB,MAAO,CAACqB,UAAY,wBAAjF,wJAO3CR,EAAAC,EAAAC,cAACC,EAAA,OAAD,CAAQC,KAAK,IAAIN,WAAYA,GAA7B,mFAA6HE,EAAAC,EAAAC,cAACC,EAAA,OAAD,CAAQC,KAAK,aAAaN,WAAYA,EAAYQ,WAAW,KAA7D,aAA7H,0BACAN,EAAAC,EAAAC,cAACC,EAAA,OAAD,CAAQC,KAAK,IAAIN,WAAYA,GAA7B,gEAA0GE,EAAAC,EAAAC,cAACC,EAAA,OAAD,CAAQC,KAAK,aAAaN,WAAYA,EAAYQ,WAAW,KAA7D,yBAA1G,KACAN,EAAAC,EAAAC,cAACC,EAAA,OAAD,CAAQC,KAAK,KAAKN,WAAYA,EAAYX,MAAO,CAACkB,GAAK,2BAAvD,2BACAL,EAAAC,EAAAC,cAACC,EAAA,OAAD,CAAQC,KAAK,IAAIN,WAAYA,GAA7B,6CAAuFE,EAAAC,EAAAC,cAACC,EAAA,OAAD,CAAQC,KAAK,aAAaN,WAAYA,EAAYQ,WAAW,KAA7D,aAAvF,UACAN,EAAAC,EAAAC,cAACC,EAAA,OAAD,CAAQC,KAAK,MAAMN,WAAYA,GAAYE,EAAAC,EAAAC,cAACC,EAAA,OAAD,CAAQC,KAAK,OAAON,WAAYA,EAAYQ,WAAW,MAAMnB,MAAO,CAACqB,UAAY,wBAAjF,4OAa3CR,EAAAC,EAAAC,cAACC,EAAA,OAAD,CAAQC,KAAK,IAAIN,WAAYA,GAA7B,+FAAyIE,EAAAC,EAAAC,cAACC,EAAA,OAAD,CAAQC,KAAK,aAAaN,WAAYA,EAAYQ,WAAW,KAA7D,QAAzI,QAAoON,EAAAC,EAAAC,cAACC,EAAA,OAAD,CAAQC,KAAK,aAAaN,WAAYA,EAAYQ,WAAW,KAA7D,WAApO,4DAAsXN,EAAAC,EAAAC,cAACC,EAAA,OAAD,CAAQC,KAAK,aAAaN,WAAYA,EAAYQ,WAAW,KAA7D,gBAAtX,WACAN,EAAAC,EAAAC,cAACC,EAAA,OAAD,CAAQC,KAAK,IAAIN,WAAYA,GAA7B,0GAAoJE,EAAAC,EAAAC,cAACC,EAAA,OAAD,CAAQC,KAAK,aAAaN,WAAYA,EAAYQ,WAAW,KAA7D,gBAApJ,uBAAsQN,EAAAC,EAAAC,cAACC,EAAA,OAAD,CAAQC,KAAK,aAAaN,WAAYA,EAAYQ,WAAW,KAA7D,eAAtQ,eACAN,EAAAC,EAAAC,cAACC,EAAA,OAAD,CAAQC,KAAK,MAAMN,WAAYA,GAAYE,EAAAC,EAAAC,cAACC,EAAA,OAAD,CAAQC,KAAK,OAAON,WAAYA,EAAYQ,WAAW,MAAMnB,MAAO,CAACqB,UAAY,wBAAjF,oEAI3CR,EAAAC,EAAAC,cAACC,EAAA,OAAD,CAAQC,KAAK,IAAIN,WAAYA,GAA7B,oBAA8DE,EAAAC,EAAAC,cAACC,EAAA,OAAD,CAAQC,KAAK,aAAaN,WAAYA,EAAYQ,WAAW,KAA7D,oBAA9D,yBAAsLN,EAAAC,EAAAC,cAACC,EAAA,OAAD,CAAQC,KAAK,aAAaN,WAAYA,EAAYQ,WAAW,KAA7D,6DAAtL,qDAAmXN,EAAAC,EAAAC,cAACC,EAAA,OAAD,CAAQC,KAAK,aAAaN,WAAYA,EAAYQ,WAAW,KAA7D,mCAAnX,uCACAN,EAAAC,EAAAC,cAACC,EAAA,OAAD,CAAQC,KAAK,MAAMN,WAAYA,GAAYE,EAAAC,EAAAC,cAACC,EAAA,OAAD,CAAQC,KAAK,OAAON,WAAYA,EAAYQ,WAAW,MAAMnB,MAAO,CAACqB,UAAY,wBAAjF,oQAQ3CR,EAAAC,EAAAC,cAACC,EAAA,OAAD,CAAQC,KAAK,IAAIN,WAAYA,GAA7B,SAAmDE,EAAAC,EAAAC,cAACC,EAAA,OAAD,CAAQC,KAAK,aAAaN,WAAYA,EAAYQ,WAAW,KAA7D,eAAnD,QAAqJN,EAAAC,EAAAC,cAACC,EAAA,OAAD,CAAQC,KAAK,aAAaN,WAAYA,EAAYQ,WAAW,KAA7D,kBAArJ,sFACAN,EAAAC,EAAAC,cAACC,EAAA,OAAD,CAAQC,KAAK,IAAIN,WAAYA,GAA7B","file":"static/js/manual-hygen-intro.3fed9bd9.js","sourcesContent":["\n  import React from 'react'\n  import { MDXTag } from '@mdx-js/tag'\n  \n\nexport default class MDXContent extends React.Component {\n  constructor(props) {\n    super(props)\n    this.layout = null\n  }\n  render() {\n    const { components, ...props } = this.props\n\n    return <MDXTag\n             name=\"wrapper\"\n             \n             components={components}><MDXTag name=\"h1\" components={components} props={{\"id\":\"intro-to-hygen\"}}>{`Intro to Hygen`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Hygen is a really great template engine that allows us to harness the power of multiple JS libraries and use them to make our lives easier.`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"links\"}}>{`Links`}</MDXTag>\n<MDXTag name=\"ul\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"a\" components={components} parentName=\"li\" props={{\"href\":\"http://hygen.io/\"}}>{`Hygen.io site`}</MDXTag></MDXTag>\n</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"setup\"}}>{`Setup`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`First, ensure that you install Hygen.`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{}}>{`npm i -g hygen\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`Hygen then uses the `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`_templates`}</MDXTag>{` folder on direction for what to create.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`The `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`_templates`}</MDXTag>{` folder may have a structure like so:`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-javascript\"}}>{`_templates\n└── react\n    ├── component\n    │   ├── mocha.ejs.t\n    │   ├── prompt.js\n    │   ├── puppeteer.ejs.t\n    │   ├── readme.ejs.t\n    │   ├── story.ejs.t\n    │   ├── styles.ejs.t\n    │   └── view.ejs.t\n    ├── component-promptless\n    │   ├── mocha.ejs.t\n    │   ├── puppeteer.ejs.t\n    │   ├── readme.ejs.t\n    │   ├── story.ejs.t\n    │   ├── styles.ejs.t\n    │   └── view.ejs.t\n    ├── multi-component\n    │   ├── container.ejs.t\n    │   ├── default.ejs.t\n    │   ├── docs.ejs.t\n    │   ├── mocha.ejs.t\n    │   ├── prompt.js\n    │   ├── puppeteer.ejs.t\n    │   ├── readme.ejs.t\n    │   ├── typeOne.ejs.t\n    │   ├── typeTwo.ejs.t\n    │   └── view.ejs.t\n    ├── reducer\n    │   ├── prompt.js\n    │   └── reducer.ejs.t\n    └── redux-component\n        ├── container.ejs.t\n        ├── mocha.ejs.t\n        ├── prompt.js\n        ├── puppeteer.ejs.t\n        ├── readme.ejs.t\n        ├── story.ejs.t\n        └── view.ejs.t\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`How this works in practise is that you can invoke the following calls and Hygen will generate those files according to the rules:`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-javascript\"}}>{`# Examples\n\n# Generate the files from react > components\nhygen react component\n# Generate the files from react > reducer\nhygen react reducer\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`Hygen can work using a prompt or without one. I recommend going with, and using `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`prompt.js`}</MDXTag>{` to set the questions.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`For an example from start to finish, I will demonstate using `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`hygen react component`}</MDXTag>{`.`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"-hygen-react-component\"}}>{`> hygen react component`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Running the command will first look for a `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`prompt.js`}</MDXTag>{` file.`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-javascript\"}}>{`module.exports = [\n    {\n        type: 'input',\n        name: 'name',\n        message: \"What's the name?\"\n    },\n    {\n        type: 'input',\n        name: 'message',\n        message: \"What's the message?\"\n    }\n];\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`Hygen uses Inquirer (which in turn uses RxJS) to create prompts. In this example, answering `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`name`}</MDXTag>{` and `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`message`}</MDXTag>{` will in turn create variables that are used thorugh the `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`[file].ejs.t`}</MDXTag>{` files.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Hygen will then go through the rest of the files and export them to where is defined at the top of the `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`[file].ejs.t`}</MDXTag>{` file. For example, `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`mocha.ejs.t`}</MDXTag>{` will have:`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-javascript\"}}>{`---\nto: src/components/<%= name %>/<%= name %>.mocha.js\n---\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`If we enter name `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`PageTestNewFiles`}</MDXTag>{`, it will output file `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`src/components/PageTestNewFiles/PageTestNewFiles.mocha.js`}</MDXTag>{`. This will continue for all the files, and so in `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`src/components/PageTestNewFiles`}</MDXTag>{` we will end up with the following:`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-Javascript\"}}>{`PageTestNewFiles\n├── PageTestNewFiles.mocha.js\n├── PageTestNewFiles.puppeteer.js\n├── PageTestNewFiles.storybook.js\n├── README.md\n├── index.js\n└── styles.scss\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`Where `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`<%= name %>`}</MDXTag>{` and `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`<%= message %>`}</MDXTag>{` is found throughout those files will be in turn replaced with the entered values.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`If there are any issues with the Hygen generated files, go to the template file and change the templates to resolve any issues.`}</MDXTag>\n           </MDXTag>\n  }\n}\n  "],"sourceRoot":""}