(window.webpackJsonp=window.webpackJsonp||[]).push([[249],{"./manual/Webpack/Webpack-2.md":function(e,n,a){"use strict";a.r(n),a.d(n,"default",function(){return d});var t=a("./node_modules/react/index.js"),o=a.n(t),m=a("./node_modules/@mdx-js/tag/dist/index.js");function r(e){return(r="function"===typeof Symbol&&"symbol"===typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"===typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function l(e,n){if(null==e)return{};var a,t,o=function(e,n){if(null==e)return{};var a,t,o={},m=Object.keys(e);for(t=0;t<m.length;t++)a=m[t],n.indexOf(a)>=0||(o[a]=e[a]);return o}(e,n);if(Object.getOwnPropertySymbols){var m=Object.getOwnPropertySymbols(e);for(t=0;t<m.length;t++)a=m[t],n.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(o[a]=e[a])}return o}function p(e,n){for(var a=0;a<n.length;a++){var t=n[a];t.enumerable=t.enumerable||!1,t.configurable=!0,"value"in t&&(t.writable=!0),Object.defineProperty(e,t.key,t)}}function s(e,n){return!n||"object"!==r(n)&&"function"!==typeof n?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):n}function i(e){return(i=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function c(e,n){return(c=Object.setPrototypeOf||function(e,n){return e.__proto__=n,e})(e,n)}var d=function(e){function n(e){var a;return function(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}(this,n),(a=s(this,i(n).call(this,e))).layout=null,a}var a,t,r;return function(e,n){if("function"!==typeof n&&null!==n)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(n&&n.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),n&&c(e,n)}(n,o.a.Component),a=n,(t=[{key:"render",value:function(){var e=this.props,n=e.components;l(e,["components"]);return o.a.createElement(m.MDXTag,{name:"wrapper",components:n},o.a.createElement(m.MDXTag,{name:"h1",components:n,props:{id:"webpack-2"}},"Webpack-2"),o.a.createElement(m.MDXTag,{name:"ul",components:n},o.a.createElement(m.MDXTag,{name:"li",components:n,parentName:"ul"},o.a.createElement(m.MDXTag,{name:"a",components:n,parentName:"li",props:{href:"#webpack-2"}},"Webpack-2"),o.a.createElement(m.MDXTag,{name:"ul",components:n,parentName:"li"},o.a.createElement(m.MDXTag,{name:"li",components:n,parentName:"ul"},o.a.createElement(m.MDXTag,{name:"a",components:n,parentName:"li",props:{href:"#10--webpack-in-action"}},"1.0: Webpack in Action")),o.a.createElement(m.MDXTag,{name:"li",components:n,parentName:"ul"},o.a.createElement(m.MDXTag,{name:"a",components:n,parentName:"li",props:{href:"#11-webpack-configuration"}},"1.1 Webpack Configuration")),o.a.createElement(m.MDXTag,{name:"li",components:n,parentName:"ul"},o.a.createElement(m.MDXTag,{name:"a",components:n,parentName:"li",props:{href:"#20-module-loaders"}},"2.0 Module Loaders")),o.a.createElement(m.MDXTag,{name:"li",components:n,parentName:"ul"},o.a.createElement(m.MDXTag,{name:"a",components:n,parentName:"li",props:{href:"#21-css-loaders"}},"2.1 CSS Loaders")),o.a.createElement(m.MDXTag,{name:"li",components:n,parentName:"ul"},o.a.createElement(m.MDXTag,{name:"a",components:n,parentName:"li",props:{href:"#22-image-loaders"}},"2.2 Image Loaders")),o.a.createElement(m.MDXTag,{name:"li",components:n,parentName:"ul"},o.a.createElement(m.MDXTag,{name:"a",components:n,parentName:"li",props:{href:"#30-code-splitting"}},"3.0 Code Splitting")),o.a.createElement(m.MDXTag,{name:"li",components:n,parentName:"ul"},o.a.createElement(m.MDXTag,{name:"a",components:n,parentName:"li",props:{href:"#44--code-splitting-in-the-real-world"}},"4.4: Code Splitting in the real world"))))),o.a.createElement(m.MDXTag,{name:"p",components:n},"The concept is to have many js files that are small and specific."),o.a.createElement(m.MDXTag,{name:"ul",components:n},o.a.createElement(m.MDXTag,{name:"li",components:n,parentName:"ul"},"Webpack bundles JS"),o.a.createElement(m.MDXTag,{name:"li",components:n,parentName:"ul"},"CSS and Babelifying is just a side effect we can do")),o.a.createElement(m.MDXTag,{name:"h2",components:n,props:{id:"10-webpack-in-action"}},"1.0: Webpack in Action"),o.a.createElement(m.MDXTag,{name:"p",components:n},"Module Systems and their Common Syntax:"),o.a.createElement(m.MDXTag,{name:"table",components:n},o.a.createElement(m.MDXTag,{name:"thead",components:n,parentName:"table"},o.a.createElement(m.MDXTag,{name:"tr",components:n,parentName:"thead"},o.a.createElement(m.MDXTag,{name:"th",components:n,parentName:"tr",props:{align:null}},"Module System"),o.a.createElement(m.MDXTag,{name:"th",components:n,parentName:"tr",props:{align:null}},"Common Syntax"))),o.a.createElement(m.MDXTag,{name:"tbody",components:n,parentName:"table"},o.a.createElement(m.MDXTag,{name:"tr",components:n,parentName:"tbody"},o.a.createElement(m.MDXTag,{name:"td",components:n,parentName:"tr",props:{align:null}},"CommonJS"),o.a.createElement(m.MDXTag,{name:"td",components:n,parentName:"tr",props:{align:null}},"require, module.exports")),o.a.createElement(m.MDXTag,{name:"tr",components:n,parentName:"tbody"},o.a.createElement(m.MDXTag,{name:"td",components:n,parentName:"tr",props:{align:null}},"AMD"),o.a.createElement(m.MDXTag,{name:"td",components:n,parentName:"tr",props:{align:null}},"require, define")),o.a.createElement(m.MDXTag,{name:"tr",components:n,parentName:"tbody"},o.a.createElement(m.MDXTag,{name:"td",components:n,parentName:"tr",props:{align:null}},"ES2015"),o.a.createElement(m.MDXTag,{name:"td",components:n,parentName:"tr",props:{align:null}},"import, export")))),o.a.createElement(m.MDXTag,{name:"h2",components:n,props:{id:"11-webpack-configuration"}},"1.1 Webpack Configuration"),o.a.createElement(m.MDXTag,{name:"table",components:n},o.a.createElement(m.MDXTag,{name:"thead",components:n,parentName:"table"},o.a.createElement(m.MDXTag,{name:"tr",components:n,parentName:"thead"},o.a.createElement(m.MDXTag,{name:"th",components:n,parentName:"tr",props:{align:null}},"Command"),o.a.createElement(m.MDXTag,{name:"th",components:n,parentName:"tr",props:{align:null}},"What it does"))),o.a.createElement(m.MDXTag,{name:"tbody",components:n,parentName:"table"},o.a.createElement(m.MDXTag,{name:"tr",components:n,parentName:"tbody"},o.a.createElement(m.MDXTag,{name:"td",components:n,parentName:"tr",props:{align:null}},"entry"),o.a.createElement(m.MDXTag,{name:"td",components:n,parentName:"tr",props:{align:null}},"Specify entry")),o.a.createElement(m.MDXTag,{name:"tr",components:n,parentName:"tbody"},o.a.createElement(m.MDXTag,{name:"td",components:n,parentName:"tr",props:{align:null}},"output"),o.a.createElement(m.MDXTag,{name:"td",components:n,parentName:"tr",props:{align:null}},"Specify where the file is saved too")),o.a.createElement(m.MDXTag,{name:"tr",components:n,parentName:"tbody"},o.a.createElement(m.MDXTag,{name:"td",components:n,parentName:"tr",props:{align:null}},"output > path"),o.a.createElement(m.MDXTag,{name:"td",components:n,parentName:"tr",props:{align:null}},"Specify the file path (must be absolute)")),o.a.createElement(m.MDXTag,{name:"tr",components:n,parentName:"tbody"},o.a.createElement(m.MDXTag,{name:"td",components:n,parentName:"tr",props:{align:null}},"output > filename"),o.a.createElement(m.MDXTag,{name:"td",components:n,parentName:"tr",props:{align:null}},"Output file name")),o.a.createElement(m.MDXTag,{name:"tr",components:n,parentName:"tbody"},o.a.createElement(m.MDXTag,{name:"td",components:n,parentName:"tr",props:{align:null}},"webpack"),o.a.createElement(m.MDXTag,{name:"td",components:n,parentName:"tr",props:{align:null}},"allows you to install globally (instead, opt for npm script)")))),o.a.createElement(m.MDXTag,{name:"p",components:n},"For defining paths, we can use ",o.a.createElement(m.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"path")," from NodeJS."),o.a.createElement(m.MDXTag,{name:"pre",components:n},o.a.createElement(m.MDXTag,{name:"code",components:n,parentName:"pre",props:{}},"const path = require('path');\n\nconst config = {\n    entry: './src/index.js',\n    output: {\n        path: path.resolve(__dirname, 'build'),\n        filename: 'bundle.js'\n    }\n};\n\nmodule.exports = config;\n")),o.a.createElement(m.MDXTag,{name:"p",components:n},"However, you'll notice if you have two small files that combining them into an output looks far larger than those two files - so what is happening?"),o.a.createElement(m.MDXTag,{name:"p",components:n},"Behind the scenes, Webpack is doing similar to the following:"),o.a.createElement(m.MDXTag,{name:"ul",components:n},o.a.createElement(m.MDXTag,{name:"li",components:n,parentName:"ul"},"new array has been created"),o.a.createElement(m.MDXTag,{name:"li",components:n,parentName:"ul"},"two functions within contain code from the two files"),o.a.createElement(m.MDXTag,{name:"li",components:n,parentName:"ul"},"entry point index is defined which points to the index of the array that was given as the entry point"),o.a.createElement(m.MDXTag,{name:"li",components:n,parentName:"ul"},"if it needs other functions, it calls them from the array")),o.a.createElement(m.MDXTag,{name:"hr",components:n}),o.a.createElement(m.MDXTag,{name:"h2",components:n,props:{id:"20-module-loaders"}},"2.0 Module Loaders"),o.a.createElement(m.MDXTag,{name:"ul",components:n},o.a.createElement(m.MDXTag,{name:"li",components:n,parentName:"ul"},"Designed to do some preprocessing before they are put into the final file eg dealing with Babel etc. - The example with Babel requires ",o.a.createElement(m.MDXTag,{name:"inlineCode",components:n,parentName:"li"},"babel-loader"),", ",o.a.createElement(m.MDXTag,{name:"inlineCode",components:n,parentName:"li"},"babel-core")," and ",o.a.createElement(m.MDXTag,{name:"inlineCode",components:n,parentName:"li"},"babel-preset-env")," (the env being the preset)."),o.a.createElement(m.MDXTag,{name:"li",components:n,parentName:"ul"},"so how do we add this to Webpack?"),o.a.createElement(m.MDXTag,{name:"li",components:n,parentName:"ul"},"previously, we referred to loaders as opposed to rules and modules, but this is how it is in Webpack 2. - rules are to do with configuration - rules have a ",o.a.createElement(m.MDXTag,{name:"inlineCode",components:n,parentName:"li"},"use")," and ",o.a.createElement(m.MDXTag,{name:"inlineCode",components:n,parentName:"li"},"test")," - ",o.a.createElement(m.MDXTag,{name:"inlineCode",components:n,parentName:"li"},"test")," is a regex to select which file to apply too")),o.a.createElement(m.MDXTag,{name:"pre",components:n},o.a.createElement(m.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-javascript"}},"const config = {\n    entry: './src/index.js',\n    output: {\n        path: path.resolve(__dirname, 'build'),\n        filename: 'bundle.js'\n    },\n    module: {\n        rules: [\n            {\n                use: 'babel-loader',\n                test: /.js$/\n            }\n        ]\n    }\n};\n")),o.a.createElement(m.MDXTag,{name:"h2",components:n,props:{id:"21-css-loaders"}},"2.1 CSS Loaders"),o.a.createElement(m.MDXTag,{name:"ul",components:n},o.a.createElement(m.MDXTag,{name:"li",components:n,parentName:"ul"},"There are basically the ",o.a.createElement(m.MDXTag,{name:"inlineCode",components:n,parentName:"li"},"CSS")," and ",o.a.createElement(m.MDXTag,{name:"inlineCode",components:n,parentName:"li"},"Style")," loaders - style loader takes CSS imports and adds them to the HTML Document - CSS loader knows how to deal with CSS imports - Adding in more rules will allow us to make use of these loaders"),o.a.createElement(m.MDXTag,{name:"li",components:n,parentName:"ul"},"Once you've compiled Webpack, what is it that these loaders are doing? - By default, it actually injects the CSS into a head tag, but how? - There is actually Javascript where the Style module actually takes that CSS and manually injects that into the CSS"),o.a.createElement(m.MDXTag,{name:"li",components:n,parentName:"ul"},"We use another library ",o.a.createElement(m.MDXTag,{name:"inlineCode",components:n,parentName:"li"},"Extract Text Plugin")," to ensure that these CSS files get output into their own file - Instead of ",o.a.createElement(m.MDXTag,{name:"inlineCode",components:n,parentName:"li"},"use"),", we use ",o.a.createElement(m.MDXTag,{name:"inlineCode",components:n,parentName:"li"},"loader")," (even though they are similar) but since the plugin is used in a way, we need to define ",o.a.createElement(m.MDXTag,{name:"inlineCode",components:n,parentName:"li"},"loader")," - ",o.a.createElement(m.MDXTag,{name:"inlineCode",components:n,parentName:"li"},"plugins")," are different to ",o.a.createElement(m.MDXTag,{name:"inlineCode",components:n,parentName:"li"},"loaders")," and have the ability to stop files from ending up in the final ",o.a.createElement(m.MDXTag,{name:"inlineCode",components:n,parentName:"li"},"bundle.js")," file - the ",o.a.createElement(m.MDXTag,{name:"inlineCode",components:n,parentName:"li"},"plugin")," that we have will now create a ",o.a.createElement(m.MDXTag,{name:"inlineCode",components:n,parentName:"li"},"style.css")," file")),o.a.createElement(m.MDXTag,{name:"pre",components:n},o.a.createElement(m.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-javascript"}},"const config = {\n    entry: './src/index.js',\n    output: {\n        path: path.resolve(__dirname, 'build'),\n        filename: 'bundle.js'\n    },\n    module: {\n        rules: [\n            {\n                use: 'babel-loader',\n                test: /.js$/\n            },\n            {\n                loader: ExtractTextPlugin.extract({\n                    loader: 'css-loader'\n                }),\n                test: /.css$/\n            }\n        ]\n    },\n    plugins: [new ExtractTextPlugin('style.css')]\n};\n")),o.a.createElement(m.MDXTag,{name:"h2",components:n,props:{id:"22-image-loaders"}},"2.2 Image Loaders"),o.a.createElement(m.MDXTag,{name:"p",components:n},"We can use ",o.a.createElement(m.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"image-webpack-loader")," and ",o.a.createElement(m.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"url-loader"),"."),o.a.createElement(m.MDXTag,{name:"ul",components:n},o.a.createElement(m.MDXTag,{name:"li",components:n,parentName:"ul"},o.a.createElement(m.MDXTag,{name:"inlineCode",components:n,parentName:"li"},"image-webpack-loader")," will compact down the file size automatically"),o.a.createElement(m.MDXTag,{name:"li",components:n,parentName:"ul"},"The result of a compact image is then taken and ",o.a.createElement(m.MDXTag,{name:"inlineCode",components:n,parentName:"li"},"url-loader")," will behave differently depending on the size of the image. - options, if larger than 40000, save it as a different file, else keep it as part of the js file")),o.a.createElement(m.MDXTag,{name:"pre",components:n},o.a.createElement(m.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-javascript"}},"const config = {\n    entry: './src/index.js',\n    output: {\n        path: path.resolve(__dirname, 'build'),\n        filename: 'bundle.js',\n        // publicPath for files not saved to bundle\n        publicPath: 'build/'\n    },\n    module: {\n        rules: [\n            {\n                use: 'babel-loader',\n                test: /.js$/\n            },\n            {\n                loader: ExtractTextPlugin.extract({\n                    loader: 'css-loader'\n                }),\n                test: /.css$/\n            },\n            {\n                test: /.(jpe?g|png|gif|svg)$/,\n                use: [\n                    {\n                        loader: 'url-loader',\n                        options: { limit: 40000 }\n                    },\n                    'image-webpack-loader'\n                ]\n            }\n        ]\n    },\n    plugins: [new ExtractTextPlugin('style.css')]\n};\n")),o.a.createElement(m.MDXTag,{name:"hr",components:n}),o.a.createElement(m.MDXTag,{name:"h2",components:n,props:{id:"30-code-splitting"}},"3.0 Code Splitting"),o.a.createElement(m.MDXTag,{name:"p",components:n},"Code splitting is one of the big wins with using Webpack."),o.a.createElement(m.MDXTag,{name:"p",components:n},"Code spltting is the art of creating a single ",o.a.createElement(m.MDXTag,{name:"inlineCode",components:n,parentName:"p"},".js")," file and then being able to split that code into several individual files and know when to load up these different modules."),o.a.createElement(m.MDXTag,{name:"p",components:n},"To import a module only after an event:"),o.a.createElement(m.MDXTag,{name:"pre",components:n},o.a.createElement(m.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-javascript"}},"const button = document.createElement('button');\nbutton.innerText = 'Click me';\nbutton.onclick = () => {\n    // if this below has import statements of it's own\n    // it will also bring in this code\n    System.import('./image_view');\n};\n\ndocument.body.appendChild(button);\n")),o.a.createElement(m.MDXTag,{name:"p",components:n},"The above example was to see what happens, but really we can just use the ",o.a.createElement(m.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"import")," statement to do this for us."),o.a.createElement(m.MDXTag,{name:"p",components:n},"You can see this on the ",o.a.createElement(m.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"network")," tab on Google Dev Tools to see this all in action."),o.a.createElement(m.MDXTag,{name:"p",components:n},"Anything that uses ",o.a.createElement(m.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"System.import()")," it will split up our call for different modules to import."),o.a.createElement(m.MDXTag,{name:"hr",components:n}),o.a.createElement(m.MDXTag,{name:"h2",components:n,props:{id:"44-code-splitting-in-the-real-world"}},"4.4: Code Splitting in the real world"),o.a.createElement(m.MDXTag,{name:"p",components:n},"The CommonChunksPlugin will look for common code in the bundles and split them into seperate files depending on the value you pass in for ",o.a.createElement(m.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"name"),"."),o.a.createElement(m.MDXTag,{name:"pre",components:n},o.a.createElement(m.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-javascript"}},"...\n\nplugins: [\n    new webpack.optimize.CommonsChunkPlugin({\n        name: 'vendor'\n    });\n];\n\n...\n")))}}])&&p(a.prototype,t),r&&p(a,r),n}();d.__docgenInfo={description:"",methods:[],displayName:"MDXContent"}}}]);
//# sourceMappingURL=manual-webpack-webpack-2.305817e8304de77c75ce.js.map