(window.webpackJsonp=window.webpackJsonp||[]).push([[217],{"./manual/Sketch/Principles.md":function(e,n,t){"use strict";t.r(n),t.d(n,"default",function(){return u});var o=t("./node_modules/react/index.js"),a=t.n(o),r=t("./node_modules/@mdx-js/tag/dist/index.js");function s(e){return(s="function"===typeof Symbol&&"symbol"===typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"===typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function i(e,n){if(null==e)return{};var t,o,a=function(e,n){if(null==e)return{};var t,o,a={},r=Object.keys(e);for(o=0;o<r.length;o++)t=r[o],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(o=0;o<r.length;o++)t=r[o],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}function c(e,n){for(var t=0;t<n.length;t++){var o=n[t];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}function p(e,n){return!n||"object"!==s(n)&&"function"!==typeof n?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):n}function m(e){return(m=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function l(e,n){return(l=Object.setPrototypeOf||function(e,n){return e.__proto__=n,e})(e,n)}var u=function(e){function n(e){var t;return function(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}(this,n),(t=p(this,m(n).call(this,e))).layout=null,t}var t,o,s;return function(e,n){if("function"!==typeof n&&null!==n)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(n&&n.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),n&&l(e,n)}(n,a.a.Component),t=n,(o=[{key:"render",value:function(){var e=this.props,n=e.components;i(e,["components"]);return a.a.createElement(r.MDXTag,{name:"wrapper",components:n},a.a.createElement(r.MDXTag,{name:"h1",components:n,props:{id:"principles"}},"Principles"),a.a.createElement(r.MDXTag,{name:"h2",components:n,props:{id:"organising-symbols"}},"Organising symbols"),a.a.createElement(r.MDXTag,{name:"p",components:n},"Use the symbol organiser to auto-organise symbols."),a.a.createElement(r.MDXTag,{name:"h2",components:n,props:{id:"naming-conventions"}},"Naming conventions"),a.a.createElement(r.MDXTag,{name:"p",components:n},"When it comes to naming principles, use the convention of ",a.a.createElement(r.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"Button/Primary/Light")," with aims that the first word can be parsed by sketch up for type and the following elements of a ",a.a.createElement(r.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"/")," split array can be use to denote classnames."),a.a.createElement(r.MDXTag,{name:"p",components:n},"Anything split by ",a.a.createElement(r.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"/")," itself becomes a classname when converted using sketchup."),a.a.createElement(r.MDXTag,{name:"p",components:n},"When naming pages and components, just use camel casing with no splits."),a.a.createElement(r.MDXTag,{name:"h2",components:n,props:{id:"creating-new-symbols"}},"Creating new symbols"),a.a.createElement(r.MDXTag,{name:"p",components:n},"For the sake of creating base components, just use the basic colours and treat it like a wireframe. These components can then take on the naming convention above."),a.a.createElement(r.MDXTag,{name:"p",components:n},"When designing a new set of components, then detach the symbol in the page workflow. From here, you make create it as a new symbol as required."))}}])&&c(t.prototype,o),s&&c(t,s),n}();u.__docgenInfo={description:"",methods:[],displayName:"MDXContent"}}}]);
//# sourceMappingURL=manual-sketch-principles.305817e8304de77c75ce.js.map