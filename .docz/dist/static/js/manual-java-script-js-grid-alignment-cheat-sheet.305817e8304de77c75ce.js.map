{"version":3,"sources":["webpack:///./manual/JavaScript/js-grid-alignment-cheat-sheet.md"],"names":["MDXContent","props","_this","_classCallCheck","this","_possibleConstructorReturn","_getPrototypeOf","call","layout","React","Component","_this$props","components","_objectWithoutProperties","react__WEBPACK_IMPORTED_MODULE_0___default","a","createElement","_mdx_js_tag__WEBPACK_IMPORTED_MODULE_1__","name","id","parentName","className"],"mappings":"g8CAKqBA,cACnB,SAAAA,EAAYC,GAAO,IAAAC,EAAA,mGAAAC,CAAAC,KAAAJ,IACjBE,EAAAG,EAAAD,KAAAE,EAAAN,GAAAO,KAAAH,KAAMH,KACDO,OAAS,KAFGN,yPADmBO,IAAMC,kDAKnC,IAAAC,EAC0BP,KAAKH,MAA9BW,EADDD,EACCC,WADDC,EAAAF,EAAA,gBAGP,OAAOG,EAAAC,EAAAC,cAACC,EAAA,OAAD,CACEC,KAAK,UAELN,WAAYA,GAAYE,EAAAC,EAAAC,cAACC,EAAA,OAAD,CAAQC,KAAK,KAAKN,WAAYA,EAAYX,MAAO,CAACkB,GAAK,0CAAvD,yCACrCL,EAAAC,EAAAC,cAACC,EAAA,OAAD,CAAQC,KAAK,MAAMN,WAAYA,GAAYE,EAAAC,EAAAC,cAACC,EAAA,OAAD,CAAQC,KAAK,OAAON,WAAYA,EAAYQ,WAAW,MAAMnB,MAAO,CAACoB,UAAY,wBAAjF","file":"static/js/manual-java-script-js-grid-alignment-cheat-sheet.552bf996.js","sourcesContent":["\n  import React from 'react'\n  import { MDXTag } from '@mdx-js/tag'\n  \n\nexport default class MDXContent extends React.Component {\n  constructor(props) {\n    super(props)\n    this.layout = null\n  }\n  render() {\n    const { components, ...props } = this.props\n\n    return <MDXTag\n             name=\"wrapper\"\n             \n             components={components}><MDXTag name=\"h1\" components={components} props={{\"id\":\"javascript-grid-alignment-cheat-sheet\"}}>{`JavaScript Grid Alignment Cheat Sheet`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-javascript\"}}>{`/*\n    This example comes from the NPWS grid system\n*/\n\nvar grid = {\n\n    row: [],\n    perRow: 0,\n    height: 0,\n    small: 767,\n    medium: 1190,\n\n    \\$grid: \\$('.grid'),\n    \\$tile: \\$('.grid .tile'),\n\n    init: function () {\n        grid.resize();\n\n        \\$(window).resize(grid.resize);\n    },\n\n    resize: function () {\n        if (\\$(window).outerWidth() < grid.small) {\n            grid.\\$tile.find('.info').height('auto');\n        } else {\n            grid.\\$tile.each(function (key) {\n                if ((key) % grid.elemPerRow + 1 === 1 && (key !== 0)) {\n                    grid.setHeight();\n                    grid.height = 0;\n                    grid.row = [];\n                }\n\n                grid.row.push(this);\n\n                if (\\$(this).find('.info').height() > grid.height) {\n                    grid.height = \\$(this).find('.info').height();\n                }\n            });\n\n            if (grid.row.length) {\n                grid.setHeight();\n            }\n        }\n    },\n\n    setHeight: function () {\n        for (var i in grid.row) {\n            \\$(grid.row[i]).find('.info').height(grid.height);\n        }\n    },\n\n    getElemPerRow: function () {\n        if (\\$(window).outerWidth() > grid.medium) {\n            grid.elemPerRow = 3;\n        } else if (\\$(window).outerWidth() > grid.small) {\n            grid.elemPerRow = 2;\n        } else {\n            grid.elemPerRow = 1;\n        }\n    },\n};\n`}</MDXTag></MDXTag>\n           </MDXTag>\n  }\n}\n  "],"sourceRoot":""}