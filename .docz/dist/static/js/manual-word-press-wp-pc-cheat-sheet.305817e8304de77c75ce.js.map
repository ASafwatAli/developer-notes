{"version":3,"sources":["webpack:///./manual/WordPress/WP-PC-Cheat-Sheet.md"],"names":["MDXContent","props","_this","_classCallCheck","this","_possibleConstructorReturn","_getPrototypeOf","call","layout","React","Component","_this$props","components","_objectWithoutProperties","react__WEBPACK_IMPORTED_MODULE_0___default","a","createElement","_mdx_js_tag__WEBPACK_IMPORTED_MODULE_1__","name","id","parentName","href","className"],"mappings":"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","file":"static/js/manual-word-press-wp-pc-cheat-sheet.c2baa304.js","sourcesContent":["\n  import React from 'react'\n  import { MDXTag } from '@mdx-js/tag'\n  \n\nexport default class MDXContent extends React.Component {\n  constructor(props) {\n    super(props)\n    this.layout = null\n  }\n  render() {\n    const { components, ...props } = this.props\n\n    return <MDXTag\n             name=\"wrapper\"\n             \n             components={components}><MDXTag name=\"h1\" components={components} props={{\"id\":\"wp-pres-company-cheat-sheet\"}}>{`WP PRES COMPANY CHEAT SHEET`}</MDXTag>\n{/* TOC */}\n<MDXTag name=\"ul\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"a\" components={components} parentName=\"li\" props={{\"href\":\"#wp-pres-company-cheat-sheet\"}}>{`WP PRES COMPANY CHEAT SHEET`}</MDXTag><MDXTag name=\"ul\" components={components} parentName=\"li\">\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"a\" components={components} parentName=\"li\" props={{\"href\":\"#wppres-1-faq\"}}>{`WPPRES-1: FAQ`}</MDXTag></MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"a\" components={components} parentName=\"li\" props={{\"href\":\"#wppres-2-custom-type-relationships\"}}>{`WPPRES-2: Custom Type Relationships`}</MDXTag></MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"a\" components={components} parentName=\"li\" props={{\"href\":\"#wppres-3-example-of-rendering-a-twig-file-using-timber-wp-functions\"}}>{`WPPRES-3: Example of Rendering a .twig file using Timber WP functions`}</MDXTag></MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"a\" components={components} parentName=\"li\" props={{\"href\":\"#wppres-4-example-php-functionsphp\"}}>{`WPPRES-4: Example PHP functions.php`}</MDXTag></MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"a\" components={components} parentName=\"li\" props={{\"href\":\"#wppres-5-creating-ajax-loading-example\"}}>{`WPPRES-5: Creating AJAX (Loading example)`}</MDXTag></MDXTag>\n</MDXTag></MDXTag>\n</MDXTag>\n{/* /TOC */}\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"wppres-1-faq\"}}>{`WPPRES-1: FAQ`}</MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"strong\" components={components} parentName=\"p\">{`Q: I'm having a database connection failure through MAMP`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`A: Double check the wp_options in the siteurl and home settings and that they correctly match MAMP. If you are on the default MAMP ports, you may need localhost:8888 in both addresses. Also check the wp_config.php file in your text editor to ensure the content URL is also correct.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Also be sure to check your /etc/hosts file to see what address and terms are set up and that you restart the mySQL daemon, MAMP and Sequel Pro.`}</MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"strong\" components={components} parentName=\"p\">{`Q: Adjust get_posts posts_per_page for a data`}{`[\"term\"]`}{` request`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`A: Add it as an argument in twig or create a custom function adjusting the posts_per_page. You can pass any get_posts properties as arguments here.`}</MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"strong\" components={components} parentName=\"p\">{`Q: Where can I find what I need?`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`A: Check against the staging website if it is up to grab things like taxonomies, types, and to figure out the layout.`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"wppres-2-custom-type-relationships\"}}>{`WPPRES-2: Custom Type Relationships`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-php\"}}>{`// in author-articles.php\n\n// be sure to require it in the functions.php file!\n\n<?php\n\nclass AuthorArticles {\n\n    // Get all locations w/ recent posts\n    public static function getAuthorArticles(\\$author) {\n\n        \\$args = new WP_Query([\n            'post_type' => 'post',\n            'no_found_rows' => true,\n            'fields' => 'ids',\n            'orderby' => 'date',\n            'order' => 'desc',\n            'meta_query' => [\n                    [\n                        'key' => 'article_author',\n                        'value' => \\$author,\n                        'compare' => 'LIKE'\n                    ]\n                ]\n        ]);\n\n        \\$postIds = \\$args->get_posts();\n\n        \\$results = Timber::get_posts(\\$postIds);\n\n        return Timber::get_posts(\\$postIds);\n    }\n\n}\n\n?>\n\n// example in use\n// Author Template - single-authors.php file\n\n<?php\n\n/* Template Name: Author */\n\n\\$data = Context::getDefaultContext();\n\n\\$data['author'] = Timber::get_post();\n\n\\$data['posts'] = AuthorArticles::getAuthorArticles(\\$data['author']->id);\n\n\\$data['breadcrumbs'] = [\n    [\n        'text' => 'Authors',\n        'url' => \\$data['site']->url .'/authors'\n    ]\n];\n\n\nTimber::render('author.twig', \\$data);\n\n?>\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"wppres-3-example-of-rendering-a-twig-file-using-timber-wp-functions\"}}>{`WPPRES-3: Example of Rendering a .twig file using Timber WP functions`}</MDXTag>\n<MDXTag name=\"ul\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`using the above examples`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-html\"}}>{`// __author.twig__\n\n{% if post.article_author %}\n{% set author = TimberPost(post.get_field('article_author')) %}\n<div class=\"author-container\">\n    <p>Article By</p>\n    <div class=\"author\">\n        <div class=\"image\">\n            {% set image = TimberImage(author.get_thumbnail) %}\n            {% include 'partials/image.twig' with {\n                image: image,\n                size: 'square_400'\n            } %}\n        </div>\n        <div class=\"info\">\n            <h3 class=\"title\">{{ author.title }}</h3>\n            {% for social in author.get_field('social') %}\n                <div class='social'>\n                    <a href='{{ social.url }}' target=\"_blank\" class='icon'>\n                        <i class='{{ socialIcons[social.network] }}'></i>\n                    </a>\n                    <a href='{{ social.url }}' target=\"_blank\">\n                        <span>{{ social.display }}</span>\n                    </a>\n                </div>\n            {% endfor %}\n            <a class=\"authorlink\" href=\"{{ author.link }}\">View Author Page</a>\n        </div>\n    </div>\n</div>\n{% endif %}\n\n***\n\n// __list.twig__\n\n<div class=\"list -post\">\n    <ul class=\"list-items\">\n    {% for post in posts %}\n        {% include 'partials/post/list-item.twig' %}\n    {% else %}\n        <p>Sorry, no posts matched your criteria</p>\n    {% endfor %}\n    </ul>\n</div>\n\n***\n\n__list-item.twig__\n\n<li class=\"list-item -post tile\">\n    <a href=\"#\">\n        <div class=\"image\">\n            <img src=\"{{ post.get_thumbnail }}\" alt=\"\">\n        </div>\n        <div class=\"info\">\n            <h3 class=\"title\">{{ post.title }}</h3>\n            <p>{{ post.intro }}</p>\n            <div class=\"read-more\">\n                <a href=\"{{ post.link }}\">read more ></a>\n            </div>\n        </div>\n    </a>\n</li>\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"wppres-4-example-php-functionsphp\"}}>{`WPPRES-4: Example PHP functions.php`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-php\"}}>{`<?php\n\nadd_filter('show_admin_bar', '__return_false');\n\nrequire_once('functions/routes.php');\nrequire_once('functions/twig.php');\nrequire_once('functions/theme_support.php');\nrequire_once('functions/enqueue_scripts.php');\nrequire_once('functions/acf.php');\nrequire_once('functions/timber.php');\nrequire_once('functions/context.php');\nrequire_once('functions/locations.php');\nrequire_once('functions/author_articles.php');\nrequire_once('functions/infobox.php');\n\nif (!is_admin()) {\n    require_once('functions/post_filters.php');\n}\n\n?>\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"wppres-5-creating-ajax-loading-example\"}}>{`WPPRES-5: Creating AJAX (Loading example)`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Using twig, variables were passed down to be used for things such as `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`loadmore.twig`}</MDXTag>{`, while a PHP class, routes and functions were set up to interact with the JS file.`}</MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"strong\" components={components} parentName=\"p\">{`function.php`}</MDXTag></MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-php\"}}>{`<?php\n...\nrequire_once('functions/load_more.php');\n...\n?>\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"strong\" components={components} parentName=\"p\">{`loadmore.php`}</MDXTag></MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-php\"}}>{`<?php\n\nclass LoadMore {\n    public function loadNextSet(\\$params) {\n        \\$perPage = 6;\n        \\$page = \\$params['page'];\n        \\$category = \\$params['cat'];\n        \\$data = Context::getDefaultContext();\n        \\$data['category'] = new TimberTerm(\\$category);\n        \\$data['tag'] = 'tag';\n\n        \\$posts = \\$data['category']->get_posts([\n          'posts_per_page' => \\$perPage,\n          'orderby' => 'date',\n          'order' => 'DESC',\n          'offset' => (\\$perPage*\\$page) + 3,\n        ]);\n\n        \\$data['posts'] = \\$posts;\n\n        Timber::render('partials/post/grid.twig', \\$data);\n        exit();\n    }\n}\n\n?>\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"strong\" components={components} parentName=\"p\">{`routes.php`}</MDXTag></MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-php\"}}>{`...\n// \\$params are the :section, :cat and :page args\nRoutes::map(':section/:cat/:page', function(\\$params){\n    \\$articles = new LoadMore();\n    echo \\$articles->loadNextSet(\\$params);\n});\n...\n`}</MDXTag></MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{}}>{`__loadmore.twig__\n\n\\`\\`\\`html\n<div class=\"loadmore-container\" data-page='1' data-section='{{ section }}' data-category='{{ category }}'>\n    <a>Load More</a>\n</div>\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"strong\" components={components} parentName=\"p\">{`load-more.js`}</MDXTag></MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-javascript\"}}>{`var titleTagline = require('./title-tagline.js');\n\nvar loadMore = {\n    \\$loadMoreContainer: \\$('.loadmore-container'),\n    category: \\$('.loadmore-container').data('category'),\n    section: \\$('.loadmore-container').data('section'),\n    search: \\$('.loadmore-container').data('search'),\n    page: \\$('.loadmore-container').data('page'),\n    base_url: \\$('meta[name=base_url]').attr('content'),\n    perPage: 6,\n\n    init: function() {\n        // Show mega-menu when mega-menu link is focused\n        loadMore.\\$loadMoreContainer.on('click', function(e) {\n            e.preventDefault();\n            if (\\$('ul.grid').length > 0) {\n                loadMore.loadNextSection();\n            } else {\n                loadMore.loadNextSearch();\n            }\n        });\n    },\n\n    loadNextSection: function() {\n        return \\$.ajax({\n            url:\n                loadMore.base_url +\n                '/section/' +\n                loadMore.section +\n                '/' +\n                loadMore.category +\n                '/' +\n                loadMore.page,\n            type: 'GET',\n            success: loadMore.resultsSection,\n            error: loadMore.outputError\n        });\n    },\n\n    loadNextSearch: function() {\n        var urlString = loadMore.search;\n        urlString = urlString.replace(' ', '+');\n        console.log(urlString);\n        return \\$.ajax({\n            url:\n                loadMore.base_url +\n                '/search/' +\n                urlString +\n                '/' +\n                loadMore.page,\n            type: 'GET',\n            success: loadMore.resultsSearch,\n            error: loadMore.outputError\n        });\n    },\n\n    resultsSection: function(data) {\n        var numPosts = \\$(data).find('li.-post').length;\n        loadMore.page = parseInt(loadMore.page) + 1;\n        var render = \\$(data)\n            .find('li.-post')\n            .unwrap();\n        \\$('ul.grid')\n            .last()\n            .append(render);\n\n        if (numPosts < loadMore.perPage) {\n            loadMore.hideViewAll();\n        }\n\n        titleTagline.init();\n        titleTagline.doneResizing();\n    },\n\n    resultsSearch: function(data) {\n        console.log(data);\n\n        var numPosts = \\$(data).find('li.list-item').length;\n        loadMore.page = parseInt(loadMore.page) + 1;\n\n        var render = \\$(data)\n            .find('li.list-item')\n            .unwrap();\n        \\$('ul.list')\n            .last()\n            .append(render);\n\n        if (numPosts < loadMore.perPage) {\n            loadMore.hideViewAll();\n        }\n    },\n\n    hideViewAll: function() {\n        loadMore.\\$loadMoreContainer.css('display', 'none');\n    }\n};\n\nmodule.exports = {\n    init: loadMore.init\n};\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"strong\" components={components} parentName=\"p\">{`loadmore.php`}</MDXTag></MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-php\"}}>{`<?php\n\nclass LoadMore {\n    public function loadNextLocationsSet(\\$params) {\n        \\$perPage = 6;\n        \\$page = \\$params['page'];\n        \\$category = \\$params['cat'];\n        \\$data = Context::getDefaultContext();\n        \\$data['category'] = new TimberTerm(\\$category);\n        \\$data['tag'] = 'tag';\n\n        \\$posts = \\$data['category']->get_posts([\n          'posts_per_page' => \\$perPage,\n          'orderby' => 'date',\n          'order' => 'DESC',\n          'offset' => (\\$perPage*\\$page) + 3,\n        ]);\n\n        \\$data['posts'] = \\$posts;\n\n        Timber::render('partials/post/grid.twig', \\$data);\n        exit();\n    }\n\n    public function loadNextSearchSet(\\$params) {\n        \\$perPage = 6;\n        \\$page = (int)\\$params['page'];\n        \\$field = \\$params['search'];\n        \\$offset = (\\$perPage*\\$page) + 4;\n        \\$data = Context::getDefaultContext();\n        \\$search = get_query_var('s');\n        \\$searchTerm = htmlspecialchars(\\$field);\n\n        \\$data['posts'] = SearchTerms::getSearchArticles(\\$field, \\$offset, \\$perPage);\n\n        Timber::render('partials/post/list.twig', \\$data);\n        exit();\n    }\n\n    public function loadNextInspirationsSet(\\$params) {\n\n        \\$exclusion = [];\n\n        \\$perPage = 6;\n        \\$page = \\$params['page'];\n        \\$category = \\$params['cat'];\n        \\$data = Context::getDefaultContext();\n        \\$data['category'] = new TimberTerm(\\$category);\n        \\$data['tag'] = 'tag';\n\n        if(\\$featuredIds = \\$data['category']->featured) {\n            \\$data['categoryFeatured'] = Timber::get_posts(\\$featuredIds);\n            \\$exclusion = self::updateExclusionList(\\$data['categoryFeatured'], \\$exclusion);\n        }\n\n        \\$posts = \\$data['category']->get_posts([\n            'posts_per_page' => \\$perPage,\n            'orderby' => 'date',\n            'order' => 'DESC',\n            'offset' => (\\$perPage*\\$page) + 4,\n            'post__not_in' => \\$exclusion,\n        ]);\n\n        \\$data['posts'] = \\$posts;\n\n        Timber::render('partials/post/grid.twig', \\$data);\n        exit();\n    }\n\n    static function updateExclusionList(\\$original, \\$exclusion) {\n        foreach(\\$original as \\$post) {\n            if(\\$post) {\n                array_push(\\$exclusion, \\$post->id);\n            }\n        }\n        return \\$exclusion;\n    }\n}\n\n?>\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"wppres-6-custom-search-terms\"}}>{`WPPRES-6: Custom Search Terms`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`This example was taken from YAC when it was required to search for a CPT ID and then use it to get some post ids returned with the latest meta data values.`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-php\"}}>{`// from functions > search_term.php\n\nglobal \\$wpdb;\n\n\\$park_ids = [];\n\\$meta_arrays = [];\n\\$posts_park = [];\n\nif (strlen(\\$search_term) > 3) {\n\n    \\$park_post_type='parks';\n    \\$park_post_status='publish';\n\n    // get the park ids that relate to the search\n    \\$park_args = \\$wpdb->get_col( \\$wpdb->prepare(\n            \"\n            SELECT ID\n            FROM \\$wpdb->posts WP\n            WHERE WP.post_title LIKE '%%%s%%'\n            AND post_type='%s'\n            AND post_status='%s'\n            \",\n            esc_sql(\\$search_term),\n            esc_sql(\\$park_post_type),\n            esc_sql(\\$park_post_status)\n        )\n    );\n\n    \\$park_ids = \\$park_args;\n\n    if (\\$park_ids != null ) {\n\n        \\$park_ids = esc_sql( \\$park_ids );\n        \\$park_ids_str = \"'[^0-9]*\" . implode( \"[^0-9]*'|'[^0-9]*\", \\$park_ids ) . \"[^0-9]*'\";\n        \\$park = 'park';\n\n        //find the parks\n        \\$init_park = \\$wpdb->get_col( \\$wpdb->prepare(\n                \"\n                SELECT WP.ID\n                FROM \\$wpdb->posts WP\n                INNER JOIN \\$wpdb->postmeta PM\n                ON ( WP.ID = PM.post_id )\n                WHERE 1=1\n                AND ( ( PM.meta_key = %s\n                AND PM.meta_value REGEXP {\\$park_ids_str} ) )\n                AND WP.post_type = 'post'\n                AND (WP.post_status = 'publish')\n                GROUP BY WP.ID\n                ORDER BY WP.post_title DESC, WP.post_date DESC\n                \",\n                esc_sql(\\$park)\n            )\n        );\n\n        // grab post results to allow metadata\n        // comparison for park\n        \\$results = Timber::get_posts(\\$init_park);\n\n        // filter the results to ensure posts are associated with\n        // the latest and correct \\`park\\` value\n        if (\\$results) {\n            foreach (\\$results as \\$result) {\n                if (array_intersect(\\$result->custom['park'], \\$park_ids)) {\n                    \\$posts_park[] = \\$result->id;\n                }\n            }\n        }\n    }\n}\n`}</MDXTag></MDXTag>\n           </MDXTag>\n  }\n}\n  "],"sourceRoot":""}