{"version":3,"sources":["webpack:///./manual/Nginx/Nginx-Nodejs-Docker.md"],"names":["MDXContent","props","_this","_classCallCheck","this","_possibleConstructorReturn","_getPrototypeOf","call","layout","React","Component","_this$props","components","_objectWithoutProperties","react__WEBPACK_IMPORTED_MODULE_0___default","a","createElement","_mdx_js_tag__WEBPACK_IMPORTED_MODULE_1__","name","id","parentName"],"mappings":"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","file":"static/js/manual-nginx-nginx-nodejs-docker.0da6d288.js","sourcesContent":["\n  import React from 'react'\n  import { MDXTag } from '@mdx-js/tag'\n  \n\nexport default class MDXContent extends React.Component {\n  constructor(props) {\n    super(props)\n    this.layout = null\n  }\n  render() {\n    const { components, ...props } = this.props\n\n    return <MDXTag\n             name=\"wrapper\"\n             \n             components={components}><MDXTag name=\"h1\" components={components} props={{\"id\":\"docker-container-with-nginx-and-nodejs\"}}>{`Docker container with Nginx and Nodejs`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`First create a directory for both `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`nginx`}</MDXTag>{` and `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`nodejs`}</MDXTag>{`.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Within the Node folder, create a `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`Dockerfile`}</MDXTag>{` that contains the following to expose an app running on a particular port:`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{}}>{`FROM mhart/alpine-node\n# Pretend to copy the node app entry\n# from current folder\nCOPY index.js .\n# Expose the port that it is running on\nEXPOSE 3000\n# Run node - chances are you want pm2 here\nCMD node index.js\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`Then we can build with `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`docker built -t foo/node .`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`After the build, run the container with port 3000 exposed using `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`docker run -d -p 3000:3000 --name node-app foo/node`}</MDXTag>{`.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`First, we can test the Nginx latest container container using `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`docker run --rm -p 8000:80 nginx`}</MDXTag>{` to test out nginx:latest. This just removes the container after running.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`In the `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`nginx`}</MDXTag>{` folder, we can create `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`default.conf`}</MDXTag>{` file to overwrite the initial one.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`If settings are not defined below, Nginx will use the default values.`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{}}>{`# config\nserver {\n    location / {\n        # host name first\n        proxy_set_header Host \\$host;\n        # extra headers for host IP address\n        proxy_set_header X-Real-IP \\$remote_addr;\n        proxy_set_header X-Forwarded-For \\$proxy_add_x_forwarded_for;\n        # passing protocol used (http | https)\n        proxy_set_header X-Forwarded-Proto \\$scheme;\n        # where to proxy reqs to\n        proxy_pass http://app:3000;\n    }\n}\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`For the Docker file.`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{}}>{`FROM nginx\nCOPY default.cong /etc/nginx/conf.d/\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`Then build out this file using `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`docker built -t foo/nginx .`}</MDXTag>{`.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Running it: `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`docker run -p 8000:80 --link node-app:app --name nginx-proxy foo/nginx`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`Since we expose 3000 for the node-app, we do not need to redo that.`}</MDXTag>\n           </MDXTag>\n  }\n}\n  "],"sourceRoot":""}