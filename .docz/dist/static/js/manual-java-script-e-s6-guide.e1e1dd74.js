(window.webpackJsonp=window.webpackJsonp||[]).push([[90],{"./manual/JavaScript/ES6-Guide.md":function(e,n,a){"use strict";a.r(n),a.d(n,"default",function(){return g});var t=a("./node_modules/react/index.js"),o=a.n(t),s=a("./node_modules/@mdx-js/tag/dist/index.js");function r(e){return(r="function"===typeof Symbol&&"symbol"===typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"===typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function c(e,n){if(null==e)return{};var a,t,o=function(e,n){if(null==e)return{};var a,t,o={},s=Object.keys(e);for(t=0;t<s.length;t++)a=s[t],n.indexOf(a)>=0||(o[a]=e[a]);return o}(e,n);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(t=0;t<s.length;t++)a=s[t],n.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(o[a]=e[a])}return o}function m(e,n){for(var a=0;a<n.length;a++){var t=n[a];t.enumerable=t.enumerable||!1,t.configurable=!0,"value"in t&&(t.writable=!0),Object.defineProperty(e,t.key,t)}}function l(e,n){return!n||"object"!==r(n)&&"function"!==typeof n?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):n}function p(e){return(p=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function i(e,n){return(i=Object.setPrototypeOf||function(e,n){return e.__proto__=n,e})(e,n)}var g=function(e){function n(e){var a;return function(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}(this,n),(a=l(this,p(n).call(this,e))).layout=null,a}var a,t,r;return function(e,n){if("function"!==typeof n&&null!==n)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(n&&n.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),n&&i(e,n)}(n,o.a.Component),a=n,(t=[{key:"render",value:function(){var e=this.props,n=e.components;c(e,["components"]);return o.a.createElement(s.MDXTag,{name:"wrapper",components:n},o.a.createElement(s.MDXTag,{name:"h1",components:n,props:{id:"introducing-es2015"}},"Introducing ES2015"),o.a.createElement(s.MDXTag,{name:"h2",components:n,props:{id:"es6-1-es2015-basics"}},"ES6-1: ES2015 Basics"),o.a.createElement(s.MDXTag,{name:"p",components:n},"6th Edition to ECMA Script"),o.a.createElement(s.MDXTag,{name:"h3",components:n,props:{id:"es6-2-getting-started-with-es2015"}},"ES6-2: Getting Started with ES2015"),o.a.createElement(s.MDXTag,{name:"ul",components:n},o.a.createElement(s.MDXTag,{name:"li",components:n,parentName:"ul"},"biggest change up to JS since its inception"),o.a.createElement(s.MDXTag,{name:"li",components:n,parentName:"ul"},"JS built in 10 days"),o.a.createElement(s.MDXTag,{name:"li",components:n,parentName:"ul"},"Microsoft used Jscript"),o.a.createElement(s.MDXTag,{name:"li",components:n,parentName:"ul"},"ECMAScript and JavaScript are the same (ECMA named 1997)"),o.a.createElement(s.MDXTag,{name:"li",components:n,parentName:"ul"},"ECMAScript 5 (2009)"),o.a.createElement(s.MDXTag,{name:"li",components:n,parentName:"ul"},"Most browsers are using the latest"),o.a.createElement(s.MDXTag,{name:"li",components:n,parentName:"ul"},"Babel can be used to compile for those using older browsers")),o.a.createElement(s.MDXTag,{name:"p",components:n},o.a.createElement(s.MDXTag,{name:"strong",components:n,parentName:"p"},"Let and Const")),o.a.createElement(s.MDXTag,{name:"ul",components:n},o.a.createElement(s.MDXTag,{name:"li",components:n,parentName:"ul"},"so far, we need to be on top of scope")),o.a.createElement(s.MDXTag,{name:"pre",components:n},o.a.createElement(s.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-javascript"}},"'use strict';\n\nvar hello = 'hello'\n\n// ecma2015\n\nA block can be either a loop, if statement or function\n\n'use strict'\n\n(function initLoop() {\n    function doLoop(x) {\n        console.log('loop: ', x);\n    }\n\n    for (var i=0; i < 10; i++) {\n        doLoop(i + 1);\n    }\n})\n")),o.a.createElement(s.MDXTag,{name:"p",components:n},"...what can go wrong? Dirty Read"),o.a.createElement(s.MDXTag,{name:"pre",components:n},o.a.createElement(s.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-javascript"}},"'use strict'\n\n(function initLoop() {\n    function doLoop(x) {\n        i=3;\n        console.log('loop: ', x);\n    }\n\n    for (var i=0; i < 10; i++) {\n        doLoop(i + 1);\n    }\n})\n\nWe can fix this with the let keyword\n\n'use strict'\n\n(function initLoop() {\n    function doLoop(x) {\n        // i=3; -> this won't be allowed\n        console.log('loop: ', x);\n    }\n\n    for (let i=0; i < 10; i++) {\n        doLoop(i + 1);\n    }\n})\n")),o.a.createElement(s.MDXTag,{name:"p",components:n},o.a.createElement(s.MDXTag,{name:"strong",components:n,parentName:"p"},"this will throw an error at us!")),o.a.createElement(s.MDXTag,{name:"h3",components:n,props:{id:"es6-3-duplicate-values"}},"ES6-3: Duplicate values"),o.a.createElement(s.MDXTag,{name:"pre",components:n},o.a.createElement(s.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-javascript"}},"'use strict';\n\nvar student = { name: 'Ken' };\nvar student = { name: 'James' };\n\nconsole.log(student);\n\n// student become James\n\n'use strict';\n\nconst student = { name: 'Ken' };\nvar student = { name: 'James' };\n\nconsole.log(student);\n\n// we will now get an exception (happens for let or const)\n\n- you can have different const variables of the same name for different constants\n\n**not allowed**\n\n... {\n    const student = 'test';\n    ... {\n        student = 'test'\n    }\n}\n\n**allowed**\n\n... {\n    let student = 'test';\n    ... {\n        student = 'test'\n    }\n}\n")),o.a.createElement(s.MDXTag,{name:"p",components:n},o.a.createElement(s.MDXTag,{name:"strong",components:n,parentName:"p"}," Use let when you need to reassign, use const when you do not want the value to change. ")),o.a.createElement(s.MDXTag,{name:"h3",components:n,props:{id:"es6-4-template-strings"}},"ES6-4: Template Strings"),o.a.createElement(s.MDXTag,{name:"p",components:n},o.a.createElement(s.MDXTag,{name:"strong",components:n,parentName:"p"}," ES5 Strings ")),o.a.createElement(s.MDXTag,{name:"p",components:n},"let str = 'My favourite name is';"),o.a.createElement(s.MDXTag,{name:"p",components:n},"console.log(str, 5);"),o.a.createElement(s.MDXTag,{name:"p",components:n},o.a.createElement(s.MDXTag,{name:"strong",components:n,parentName:"p"}," ES2015 Strings ")),o.a.createElement(s.MDXTag,{name:"p",components:n},"// interpolation"),o.a.createElement(s.MDXTag,{name:"p",components:n},"const student = { name: 'James', followerCount: 34 }"),o.a.createElement(s.MDXTag,{name:"p",components:n},"${student.name}"),o.a.createElement(s.MDXTag,{name:"p",components:n},o.a.createElement(s.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"<this stuff is neatly formatted>")),o.a.createElement(s.MDXTag,{name:"h3",components:n,props:{id:"es6-5-string-search-methods"}},"ES6-5: String search methods"),o.a.createElement(s.MDXTag,{name:"p",components:n},"new functions:"),o.a.createElement(s.MDXTag,{name:"p",components:n},"startsWith\nendsWith\nincludes"),o.a.createElement(s.MDXTag,{name:"p",components:n},"console.log(strToSearch.startsWith('example-at-start'));\nconsole.log(strToSearch.endsWith('example-at-end'));\nconsole.log(strToSearch.includes('example-in-the-middle'));"),o.a.createElement(s.MDXTag,{name:"p",components:n},o.a.createElement(s.MDXTag,{name:"strong",components:n,parentName:"p"}," all take an optional parameter ")),o.a.createElement(s.MDXTag,{name:"p",components:n},"startsWith('example', 5); //start search from 5th index\nendsWith('example', 21); //searches the first 21 characters"),o.a.createElement(s.MDXTag,{name:"hr",components:n}),o.a.createElement(s.MDXTag,{name:"h2",components:n,props:{id:"es6-6-the-cooler-parts-of-es2015"}},"ES6-6: The Cooler Parts of ES2015"),o.a.createElement(s.MDXTag,{name:"h3",components:n,props:{id:"es6-7-arrow-functions"}},"ES6-7: Arrow Functions"),o.a.createElement(s.MDXTag,{name:"ul",components:n},o.a.createElement(s.MDXTag,{name:"li",components:n,parentName:"ul"},"Bound to its parent scope")),o.a.createElement(s.MDXTag,{name:"p",components:n},"New syntax for writing functions"),o.a.createElement(s.MDXTag,{name:"ul",components:n},o.a.createElement(s.MDXTag,{name:"li",components:n,parentName:"ul"},"referred to as Lamda functions in other languages")),o.a.createElement(s.MDXTag,{name:"p",components:n},o.a.createElement(s.MDXTag,{name:"strong",components:n,parentName:"p"}," ES5 ")),o.a.createElement(s.MDXTag,{name:"pre",components:n},o.a.createElement(s.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-javascript"}},"'use strict';\n\nvar Person = function (data) {\n  for (var key in data) {\n    this[key] = data[key];  \n  }\n  this.getKeys = function () {\n    return Object.keys(this);\n  }\n}\n\nvar Alena = new Person({ name: 'Alena', role: 'Teacher' });\n\nconsole.log('Alena's Keys:', Alena.getKeys()); // 'this' refers to 'Alena'\n\nvar getKeys = Alena.getKeys;\n\nconsole.log(getKeys()); // 'this' refers to the node process\n\n// throws error get getKeys()\n")),o.a.createElement(s.MDXTag,{name:"p",components:n},o.a.createElement(s.MDXTag,{name:"strong",components:n,parentName:"p"},"ES2015")),o.a.createElement(s.MDXTag,{name:"pre",components:n},o.a.createElement(s.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-javascript"}},"'use strict';\n\nvar Person = function (data) {\n  for (var key in data) {\n    this[key] = data[key];  \n  }\n  this.getKeys = () => {\n    return Object.keys(this);\n  }\n}\n\nvar Alena = new Person({ name: 'Alena', role: 'Teacher' });\n\nconsole.log('Alena's Keys:', Alena.getKeys()); // 'this' refers to 'Alena'\n\nvar getKeys = Alena.getKeys;\n\nconsole.log(getKeys()); // 'this' refers to the node process\n\n// this fixes it!\n")),o.a.createElement(s.MDXTag,{name:"p",components:n},"The lamda function binds the function to the instance of the person no matter where it was called"),o.a.createElement(s.MDXTag,{name:"p",components:n},o.a.createElement(s.MDXTag,{name:"strong",components:n,parentName:"p"}," Promises ")),o.a.createElement(s.MDXTag,{name:"pre",components:n},o.a.createElement(s.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-javascript"}},"'use strict';\n\nvar Teacher = function (data) {\n  this.name = data.name;\n  this.greet = function (studentCnt) {\n    let promise = new Promise(function (resolve, reject) {\n      if (studentCnt === 0) {\n        reject('Zero students in class');\n      } else {\n        resolve(`Hello to ${studentCnt} of my favorite students!`);\n      }\n    });\n    return promise;\n  }\n}\n\nvar Classroom = function (data) {\n  this.subject = data.name;\n  this.teacher = data.teacher;\n  this.students = [];\n  this.addStudent = function (data) {\n    this.students.push(data);\n    this.greet();\n  }\n  this.greet = () => {\n    this.teacher.greet(this.students.length).then(\n      (function (classroom) {\n        return function (greeting) {\n          console.log(`${classroom.teacher.name} says: `, greeting);\n        }\n      })(this),\n      function (err) {\n        console.log(err);\n      })\n  }\n}\n\nvar myTeacher = new Teacher({ name: 'James' });\nvar myClassroom = new Classroom({ name: 'The Future of JavaScript', teacher: myTeacher });\n\nmyClassroom.addStudent({ name: 'Dave' });\n")),o.a.createElement(s.MDXTag,{name:"p",components:n},o.a.createElement(s.MDXTag,{name:"strong",components:n,parentName:"p"},"ES 2015 Promises")),o.a.createElement(s.MDXTag,{name:"pre",components:n},o.a.createElement(s.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-javascript"}},"'use strict';\n\nvar Teacher = function (data) {\n  this.name = data.name;\n  this.greet = function (studentCnt) {\n    let promise = new Promise(function (resolve, reject) {\n      if (studentCnt === 0) {\n        reject('Zero students in class');\n      } else {\n        resolve(`Hello to ${studentCnt} of my favorite students!`);\n      }\n    });\n    return promise;\n  }\n}\n\nvar Classroom = function (data) {\n  this.subject = data.name;\n  this.teacher = data.teacher;\n  this.students = [];\n  this.addStudent = function (data) {\n    this.students.push(data);\n    this.greet();\n  }\n  this.greet = () => {\n    this.teacher.greet(this.students.length).then(\n      greeting => console.log(`${this.classroom.teacher.name} says: `, greeting);\n      error => console.log(err);\n  }\n}\n\nvar myTeacher = new Teacher({ name: 'James' });\nvar myClassroom = new Classroom({ name: 'The Future of JavaScript', teacher: myTeacher });\n\nmyClassroom.addStudent({ name: 'Dave' });\n")),o.a.createElement(s.MDXTag,{name:"h3",components:n,props:{id:"es6-8-default-parameters"}},"ES6-8: Default Parameters"),o.a.createElement(s.MDXTag,{name:"p",components:n},"Set default parameters for a function -> similar to other languages"),o.a.createElement(s.MDXTag,{name:"p",components:n},o.a.createElement(s.MDXTag,{name:"strong",components:n,parentName:"p"},"ES5")),o.a.createElement(s.MDXTag,{name:"pre",components:n},o.a.createElement(s.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-javascript"}},"'use strict'\n\nfunction greet(name, timeOfDay) {\n    name = name || 'Guil';\n    timeofDay = timeOfDay || 'Day';\n    ...\n}\n\ngreet();\n\n**ES 2015**\n\n'use strict'\n\nfunction greet(name = 'Guil', timeOfDay = 'Day') {\n    ...\n}\n\ngreet(undefined, 'Afternoon');  // defaults are optional, need to undefine\n")),o.a.createElement(s.MDXTag,{name:"h3",components:n,props:{id:"es6-9-rest-parameters-and-spread-operator"}},"ES6-9: Rest Parameters and Spread Operator"),o.a.createElement(s.MDXTag,{name:"p",components:n},o.a.createElement(s.MDXTag,{name:"strong",components:n,parentName:"p"},"How to use the rest parameters")),o.a.createElement(s.MDXTag,{name:"ul",components:n},o.a.createElement(s.MDXTag,{name:"li",components:n,parentName:"ul"},"rest must be the last parameter")),o.a.createElement(s.MDXTag,{name:"pre",components:n},o.a.createElement(s.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-javascript"}},"function myFunction(name, ...params) {\n    console.log(name, params);\n}\n\nmyFunction('Andrew', 1, 2, 3);\n\n// output Andrew [1, 2, 3]\n")),o.a.createElement(s.MDXTag,{name:"p",components:n},o.a.createElement(s.MDXTag,{name:"strong",components:n,parentName:"p"},"Spread parameters")),o.a.createElement(s.MDXTag,{name:"pre",components:n},o.a.createElement(s.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-javascript"}},"const originalFlavors = ['Chocolate', 'Vanilla'];\n\nconst newFlavors = ['Strawberry', 'Mint Chocolate Chip'];\n\nconst inventory = ['Rocky Road', ...originalFlavors, 'Neopolitan', ...newFlavors];\n\nconsole.log(inventory);\n\n// spitting an array and them using them as arguments using the spread operator\n\nfunction myFunction(name, iceCreamFlavor) {\n    console.log('${name} really likes ${iceCreamFlavor} ice cream.')\n}\n\nlet args = ['Gabe', 'Vanilla'];\n\nmyFunction(...args);    // sends as separate arguments\n")),o.a.createElement(s.MDXTag,{name:"h3",components:n,props:{id:"es6-10-destructuring"}},"ES6-10: Destructuring"),o.a.createElement(s.MDXTag,{name:"p",components:n},"Relatively simple concept"),o.a.createElement(s.MDXTag,{name:"p",components:n},"Let's you extract values from arrays or objects"),o.a.createElement(s.MDXTag,{name:"pre",components:n},o.a.createElement(s.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-javascript"}},"let toybox = { item1: 'car', item2: 'ball', item3: 'frisbee' };\n\nlet { item3: disc} = toybox;\n\nconsole.log(disc);\n\n// logs item3 value\n\nlet widgets = ['wid1','wid2','wid3','wid4','wid5'];\n\nlet [a,b,c, ...d] = widgets;\n")),o.a.createElement(s.MDXTag,{name:"hr",components:n}),o.a.createElement(s.MDXTag,{name:"h2",components:n,props:{id:"es6-11-objects-and-new-collection-types"}},"ES6-11: Objects and New Collection Types"),o.a.createElement(s.MDXTag,{name:"h3",components:n,props:{id:"es6-12-object-property-shorthand"}},"ES6-12: Object Property Shorthand"),o.a.createElement(s.MDXTag,{name:"pre",components:n},o.a.createElement(s.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-javascript"}},"function submit(name, comments, rating = 5) {\n    let data = { name, comments, rating };\n\n    for (let key in data) {\n        console.log(key + ':', data[key]);\n    }\n\n    // ... do ajax request\n}\n\nsubmit('English', 'Great course!');\n\n// without a default name, the key because the parameter for the object\n// works with all forms\n")),o.a.createElement(s.MDXTag,{name:"h3",components:n,props:{id:"es6-13-forof"}},"ES6-13: for...of"),o.a.createElement(s.MDXTag,{name:"p",components:n},"For iterating over a data set"),o.a.createElement(s.MDXTag,{name:"pre",components:n},o.a.createElement(s.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-javascript"}},"// previous for (let ... )\n// ES5 gave us for each\n\nlet myNumbers = [1,2,3,4,5,6];\n\nfor (let number of myNumbers) {\n    ...\n    if (example) {\n        break; // you can break!\n    }\n}\n\n// still use for...in for iterating over regular objects\n")),o.a.createElement(s.MDXTag,{name:"h3",components:n,props:{id:"es6-14-set"}},"ES6-14: Set"),o.a.createElement(s.MDXTag,{name:"pre",components:n},o.a.createElement(s.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-javascript"}},"let classroom = new Set(); // unique collection of values\n\nlet stevenJ = { name: 'Steven', age: 22 },\n    sarah = { name: 'Sarah', age: 23 },\n    stevenS = { name: 'Steve', age: 22 }\n\nclassroom.add(stevenJ);\nclassroom.add(sarah);\nclassroom.add(stevenS);\n\nif (classroom.has(stevenJ)) console.log('stevenJ is in the classroom'); //true\nif (classroom.has(sarah)) console.log('sarah is in the classroom'); //true\nif (classroom.has(stevenS)) console.log('sarah is in the classroom'); //true\n\nBUT IF stevenS = stevenJ\n\nlet stevenJ = { name: 'Steven', age: 22 },\n    sarah = { name: 'Sarah', age: 23 },\n    stevenS = stevenJ;\n\nclassroom.add(stevenJ);\nclassroom.add(sarah);\nclassroom.add(stevenS);\n\nif (classroom.has(stevenJ)) console.log('stevenJ is in the classroom'); //true\nif (classroom.has(sarah)) console.log('sarah is in the classroom'); //true\nif (classroom.has(stevenS)) console.log('sarah is in the classroom'); //true\n\nconsole.log(classroom.size()); //3\n\nclassroom.delete(stevenJ)\n\nconsole.log(classroom.size()); //2\n\n// Create array of students from the classroom set\n\nlet arrayOfStrudents = Array.from(classroom);\nconsole.log(arrayOfStudents);\n\n// Create set from set\n\nlet alumni = new Set(arrayOfStudents);\n")),o.a.createElement(s.MDXTag,{name:"h3",components:n,props:{id:"es6-15-map"}},"ES6-15: Map"),o.a.createElement(s.MDXTag,{name:"pre",components:n},o.a.createElement(s.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-javascript"}},"'use strict'\n\nlet classroom = new Map();\n\nlet stevenJ = { name: 'Steven', age: 22 },\n    sarah = { name: 'Sarah', age: 23 },\n    stevenS = { name: 'Steven', age: 22 };\n\nclassroom.set('stevenJ', stevenJ);\nclassroom.set('sarah',sarah);\nclassroom.set('stevenS', stevenS);\n\nconsole.log(classroom.size);\n\nif (classroom.has('stevenJ')) console.log('stevenJ is in the classroom');\nif (classroom.has('sarah')) console.log('sarah is in the classroom');\nif (classroom.has('stevenS')) console.log('stevenS is in the classroom');\n\nconsole.log('sarah:', classroom.get('sarah'));\n\nclassroom.delete('sarah');\nclassroom.clear();        //deletes all\n\nfor (let student of classroom) {\n  console.log('${student[0]} : ${student[1].name} is ${student[1].age} years old');\n}\n")),o.a.createElement(s.MDXTag,{name:"h2",components:n,props:{id:"es6-16-classes"}},"ES6-16: Classes"),o.a.createElement(s.MDXTag,{name:"h3",components:n,props:{id:"es6-17-structure-of-a-class"}},"ES6-17: Structure of a Class"),o.a.createElement(s.MDXTag,{name:"p",components:n},"A class is a blueprint for those that share similar properties or methods"),o.a.createElement(s.MDXTag,{name:"pre",components:n},o.a.createElement(s.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-javascript"}},"// old way\n\nlet Student = function(data) {\n  this.name = data.name;\n  this.age = data.age\n}\n\n// new way\n\nclass Student {\n  constructor({ name, age, interestLevel = 5 } = {}) {\n    this.name = name;\n    this.age = age;\n    this.interestLevel = interestLevel;\n    this.grades = new Map();\n  }\n}\n\nlet sarah = new Student('Sarah', 11);\n\nconsole.log(Array.from(sarah.grades));\n")),o.a.createElement(s.MDXTag,{name:"h3",components:n,props:{id:"es6-18-subclasses"}},"ES6-18: Subclasses"),o.a.createElement(s.MDXTag,{name:"ul",components:n},o.a.createElement(s.MDXTag,{name:"li",components:n,parentName:"ul"},"classes can inherit from other classes"),o.a.createElement(s.MDXTag,{name:"li",components:n,parentName:"ul"},"var hoisting"),o.a.createElement(s.MDXTag,{name:"li",components:n,parentName:"ul"},"destructuring is one way to set default values for class properties")),o.a.createElement(s.MDXTag,{name:"pre",components:n},o.a.createElement(s.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-javascript"}},"bla = 2\nvar bla;\n// ...\n\n// is implicitly understood as:\n\nvar bla;\nbla = 2;\n")),o.a.createElement(s.MDXTag,{name:"pre",components:n},o.a.createElement(s.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-javascript"}},"class Person {\n  dance() {\n    const dances = [\n      'waltz',\n      'tango',\n      'mambo'\n    ];\n\n    console.log(${this.name} is doing the ${dances[Math.floor(Math.random()*dances.length)]}!);\n  }\n  constructor({ name, age, eyeColor = 'brown' } = {}) {\n    this.name = name;\n    this.age = age;\n    this.eyeColor = eyeColor;\n  }\n}\n\nclass Student extends Person {\n\n  dance(traditional) {\n    if (traditional) {\n      super.dance();\n      return;\n    }\n\n    const dances = [\n      'lyrical',\n      'tap',\n      'jazz'\n    ];\n\n    console.log(${this.name} is doing the ${dances[Math.floor(Math.random()*dances.length)]}!);\n  }\n\n  constructor({ name, age, interestLevel = 5 } = {} ) {\n    super({ name, age });\n    this.name = name;\n    this.age = age;\n    this.interestLevel = interestLevel;\n    this.grades = new Map;\n  }\n}\n\nlet stevenJ = new Student({name: 'Steven', age: 22, interestLevel: 3 });\nstevenJ.dance();\n")),o.a.createElement(s.MDXTag,{name:"h2",components:n,props:{id:"es6-19-static-methods"}},"ES6-19: Static Methods"),o.a.createElement(s.MDXTag,{name:"pre",components:n},o.a.createElement(s.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-javascript"}},"class Bird {\n  static changeColor(color) {\n    this.color = color;\n  }\n  constructor({ color = 'red' } = {}) {\n    this.color = color;\n  }\n}\n\nlet redBird = new Bird;\nconsole.log(redBird.color);\nredBird.changeColor('blue');\nconsole.log(redBird.color); // would call an error!\n\n// what we could do\n\nBird.changeColor.call(redBird, 'blue');\nconsole.log(redBird.color);\n\n/* the other option is to change the changeColor function to accept (bird, color) and then change this.color to bird.color\n*/\n")),o.a.createElement(s.MDXTag,{name:"h2",components:n,props:{id:"es6-20-getter-and-setter-methods-in-a-class"}},"ES6-20: Getter and Setter methods in a class"),o.a.createElement(s.MDXTag,{name:"pre",components:n},o.a.createElement(s.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-javascript"}},"class Bird {\n  changeColor(color) {\n    this.color = color;\n  }\n\n  set color(color) {\n    this.color = color;\n  }\n\n  get color() {\n    return this.color;\n  }\n\n  constructor({ color = 'red' } = {}) {\n    this.color = color;\n  }\n}\n")))}}])&&m(a.prototype,t),r&&m(a,r),n}();g.__docgenInfo={description:"",methods:[],displayName:"MDXContent"}}}]);
//# sourceMappingURL=manual-java-script-e-s6-guide.305817e8304de77c75ce.js.map