(window.webpackJsonp=window.webpackJsonp||[]).push([[178],{"./manual/Python/Python-Slack-Bot.md":function(e,n,t){"use strict";t.r(n),t.d(n,"default",function(){return u});var o=t("./node_modules/react/index.js"),a=t.n(o),r=t("./node_modules/@mdx-js/tag/dist/index.js");function c(e){return(c="function"===typeof Symbol&&"symbol"===typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"===typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function p(e,n){if(null==e)return{};var t,o,a=function(e,n){if(null==e)return{};var t,o,a={},r=Object.keys(e);for(o=0;o<r.length;o++)t=r[o],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(o=0;o<r.length;o++)t=r[o],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}function m(e,n){for(var t=0;t<n.length;t++){var o=n[t];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}function s(e,n){return!n||"object"!==c(n)&&"function"!==typeof n?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):n}function i(e){return(i=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function l(e,n){return(l=Object.setPrototypeOf||function(e,n){return e.__proto__=n,e})(e,n)}var u=function(e){function n(e){var t;return function(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}(this,n),(t=s(this,i(n).call(this,e))).layout=null,t}var t,o,c;return function(e,n){if("function"!==typeof n&&null!==n)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(n&&n.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),n&&l(e,n)}(n,a.a.Component),t=n,(o=[{key:"render",value:function(){var e=this.props,n=e.components;p(e,["components"]);return a.a.createElement(r.MDXTag,{name:"wrapper",components:n},a.a.createElement("div",{id:"section"}),a.a.createElement(r.MDXTag,{name:"hr",components:n}),a.a.createElement(r.MDXTag,{name:"h2",components:n,props:{id:"intro"}},"Intro"),a.a.createElement(r.MDXTag,{name:"p",components:n},"First of all, clone the ",a.a.createElement(r.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"python_rtmbot")," git repo."),a.a.createElement(r.MDXTag,{name:"p",components:n},"Then, head to slack.com for your personal account, click ",a.a.createElement(r.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"build")," from the apps page and add a custom bot."),a.a.createElement(r.MDXTag,{name:"p",components:n},"Grab the API token and copy it into a ",a.a.createElement(r.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"rtmbot.conf")," file at the root of your directory."),a.a.createElement("div",{id:"subsection"}),a.a.createElement(r.MDXTag,{name:"h3",components:n,props:{id:"-----creating-plugins"}},"---- Creating plugins"),a.a.createElement(r.MDXTag,{name:"p",components:n},"In the ",a.a.createElement(r.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"plugins")," folder, create a folder with the name of the plugin and then within the ",a.a.createElement(r.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"plugin.py")," itself. Inside, you want to ensure you have a ",a.a.createElement(r.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"outputs = []")," and ",a.a.createElement(r.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"crontable = []")," list ready to go."),a.a.createElement(r.MDXTag,{name:"p",components:n},"From here, you can define processes as so: ",a.a.createElement(r.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"def process_namehere(data):"),"."),a.a.createElement(r.MDXTag,{name:"p",components:n},"The data argument is the data recieved by the bot."),a.a.createElement("div",{id:"banana"}),a.a.createElement(r.MDXTag,{name:"h3",components:n,props:{id:"-----banana-plugin"}},"---- Banana Plugin"),a.a.createElement(r.MDXTag,{name:"p",components:n},"In the ",a.a.createElement(r.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"plugins")," directory, create ",a.a.createElement(r.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"banana.py")),a.a.createElement(r.MDXTag,{name:"pre",components:n},a.a.createElement(r.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-python"}},"import random\n\nfrom nltk.tokenize import sent_tokenizem wordpunct_tokenize\nfrom noun_hound import NounHound\n\ncrontable = []\noutputs = []\n\nnh = NounHound()\n\ndef process_message(data):\n        messaage = data['text']\n        sentences = sent_tokenize(message)\n        sentences_num = random.randint(0, len(sentences) - 1)\n        setence = sentences[stence_num]\n        words = wordpunct_tokenize(sentence)\n        nouns = nh.process(sentence)\n        replacement = random.choice(nouns['nouns'])\n        words[words.index(replacement) = 'banana']\n        sentences[sentence_num] = ' '.join(words)\n        outputs.append([data[\"channel\"], ' '.join(sentences)])\n")))}}])&&m(t.prototype,o),c&&m(t,c),n}();u.__docgenInfo={description:"",methods:[],displayName:"MDXContent"}}}]);
//# sourceMappingURL=manual-python-python-slack-bot.305817e8304de77c75ce.js.map