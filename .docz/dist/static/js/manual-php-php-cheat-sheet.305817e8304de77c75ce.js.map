{"version":3,"sources":["webpack:///./manual/PHP/php-cheat-sheet.md"],"names":["MDXContent","props","_this","_classCallCheck","this","_possibleConstructorReturn","_getPrototypeOf","call","layout","React","Component","_this$props","components","_objectWithoutProperties","react__WEBPACK_IMPORTED_MODULE_0___default","a","createElement","_mdx_js_tag__WEBPACK_IMPORTED_MODULE_1__","name","id","parentName","className"],"mappings":"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","file":"static/js/manual-php-php-cheat-sheet.cbd6d64b.js","sourcesContent":["\n  import React from 'react'\n  import { MDXTag } from '@mdx-js/tag'\n  \n\nexport default class MDXContent extends React.Component {\n  constructor(props) {\n    super(props)\n    this.layout = null\n  }\n  render() {\n    const { components, ...props } = this.props\n\n    return <MDXTag\n             name=\"wrapper\"\n             \n             components={components}><MDXTag name=\"h1\" components={components} props={{\"id\":\"php-help-sheet\"}}>{`PHP Help Sheet`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"treehouse-php-classes\"}}>{`Treehouse PHP Classes`}</MDXTag>\n<MDXTag name=\"blockquote\" components={components}>\n<MDXTag name=\"p\" components={components} parentName=\"blockquote\">{`PHP OOP\nclasses\nrecipe.php\ncookbook.php`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-php\"}}>{`// recipe.php\n\n<?php\n\nclass Recipe\n{\n    private \\$title;\n    public \\$ingredients = array();\n    public \\$instruction = array();\n    public \\$yield;\n    public \\$tag = array();\n    public \\$source = 'Alena Holligan';\n\n    private \\$measurements = array(\n        \"tsp\",\n        \"tbsp\",\n        \"cup\",\n        \"oz\",\n        \"lb\",\n        \"fl oz\",\n        \"pint\",\n        \"quart\",\n        \"gallon\"\n    );\n\n    public function displayRecipe()\n    {\n        return \\$this->title . \"by\" . \\$this->source;\n    }\n\n    public function addIngredient(\\$item, \\$amount = null, \\$measure=null)\n    {\n        if (\\$amount != null && !is_float(\\$amount) && !is_int(\\$amount)) {\n            exit(\"The amount must be a float: \") . gettype(\\$amount) . \" \\$amount given\");\n        }\n\n        if (\\$measure != null && !in_array(strtolower(\\$measure), \\$this->measurements)) {\n            exit(\"Please enter a valid measurement: \" . implode(\", \", \\$this->measurements));\n        }\n\n        \\$this->ingredients[] = array (\n            \"item\" => ucwords(\\$item),\n            \"amount\" => \\$amount,\n            \"measure\" => strtolower(\\$measure)\n        );\n    }\n\n    public function getIngredients()\n    {\n        return \\$this->ingredients;\n    }\n\n    public function setTitle(\\$title)\n    {\n        \\$this->title = ucword(\\$title);\n    }\n\n    public function getTitle()\n    {\n        return \\$this->title;\n    }\n\n}\n\n?>\n\n// cookbook.php\n\n<?php\n\ninclude \"classes/recipes.php\";\n\n\\$recipe1 = new Recipe();\necho \\$recipe1->source;\n\\$recipe1->source(\"Grandma Holligan\");\necho \\$recipe1->source;\n\\$recipe1->setTitle(\"My first recipe\");\n\\$recipe1->getTitle();\n\n\\$recipe1->addIngredient(\"egg\",1);\n\\$recipe1->addIngredient(\"flour\",2,\"cup\");\n\n\\$recipe2 = new Recipe();\n\\$recipe2->source = \"Betty Crocker\";\n\\$recipe1->setTitle = \"My second recipe\";\n\necho \\$recipe1->source;\necho \\$recipe2->source;\n\necho \\$recipe1->displayRecipe();\necho \\$recipe2->displayRecipe();\n\nforeach (\\$recipe1->getIngredients() as \\$ing) {\n    echo \"\\n\" . \\$ing[\"amount\"] . \" \" . \\$ing[\"measure\"] . \" \" . \\$ing[\"item\"];\n}\n\nvar_dump(\\$recipe1);\n\n?>\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"php-access-modifiers\"}}>{`PHP Access Modifiers`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-php\"}}>{`<?php\n\nclass Render {\n\n  public static function displayDimensions(\\$size) {\n      return \\$size[0] . \" x \" . \\$size[1];\n  }\n\n  public static function detailsKitchen(\\$room) {\n       return \"Kitchen Dimensions: \" . self::displayDimensions(\\$room->getDimensions());\n  }\n\n}\n\n?>\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"php-magic-methods-and-constants\"}}>{`PHP Magic Methods and Constants`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Some magic constants:`}</MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"strong\" components={components} parentName=\"p\">{`CLASS`}</MDXTag>\n<MDXTag name=\"strong\" components={components} parentName=\"p\">{`FILE`}</MDXTag></MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-php\"}}>{`<?php\nclass Example\n{\n\n    public function __construct(\\$title = null)\n    {\n        \\$this->setTitle(\\$title);\n    }\n\n    public function __toString()\n    {\n        \\$output = \"You are calling a \" . __CLASS__ . \" object with the title \\\"\";\n        \\$output .= \\$this->getTitle() . \"\\\"\";\n        \\$output .= \"\\nIt is stored in \" . basename(__FILE__) . \" at \" . __DIR__ . \".\";\n        \\$output .= \"\\nThis display is from line \" . __LINE__ . \" in method \" . __METHOD__;\n        \\$output .= \"\\nThe following methods are available for objects of this class: \\n\";\n        \\$output .= implode(\"\\n\", get_class_methods(__CLASS__));\n        return \\$output;\n    }\n}\n\nclass Render\n{\n\n    public function __toString()\n    {\n        \\$output = \"The following methods are available for \" . __CLASS__ . \" objects: \\n\";\n        \\$output .= implode(\"\\n\", get_class_methods(__CLASS__));\n        return \\$output;\n    }\n}\n\n\\$example = new Example(\"Name\");\necho \\$example;\n\n?>\n\n<?php\n\nclass Fish\n{\n    public \\$common_name;\n    public \\$flavor;\n    public \\$record_weight;\n\n    public function __construct(\\$name, \\$flavor, \\$record) {\n      \\$this->common_name = \\$name;\n      \\$this->flavor = \\$flavor;\n      \\$this->record_weight = \\$record;\n    }\n\n    public function getInfo() {\n      return \"A {\\$this->common_name} is an {\\$this->flavor} flavored fish. The world record weight is {\\$this->record_weight}.\";\n    }\n}\n\n\\$bass = new Fish(\"Largemouth Bass\", \"Excellent\", \"22 pounds 5 ounces\");\n\n?>\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"php-collections\"}}>{`PHP Collections`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`recipecollection.php`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-php\"}}>{`<?\n\nclass RecipeCollection\n{\n    private \\$title;\n    private \\$recipes = array();\n\n    // has constructor here and setter and getters\n\n    public function addRecipe(\\$recipe) {\n        \\$this->recipes[] = \\$recipe;\n    }\n\n    public function getRecipe() {\n        return \\$this->recipes;\n    }\n}\n\n?>\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"php-arrays\"}}>{`PHP Arrays`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Create\n\\$myArray = array();`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Push into\n\\$myArray[] = \"­Som­eth­ing­\";`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Push to associ­ative\n\\$myArr­ay`}{`[­'key']`}{` = \"­Val­ue\";`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Create numeric\n\\$myArray = array(­'va­lue', 'value2');`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Create associ­ative\n\\$a = array(­'ke­y'=­>'v­al');`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Print from numeric\necho \\$myArr­ay`}{`[0]`}{`;`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Print from associ­ative\necho \\$myArr­ay`}{`[­'key']`}{`;`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Associ­ative arrays\nKeys are strings`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Numeric arrays\nKeys are numbers: 0,1,2,3,4`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"php-array-functions\"}}>{`PHP Array Functions`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`array_diff (arr1, arr2 ...)\narray_filter (arr, function)\narray_flip (arr)\narray_intersect (arr1, arr2 ...)\narray_merge (arr1, arr2 ...)\narray_pop (arr)\narray_push (arr, var1, var2 ...)\narray_reverse (arr)\narray_keys(array \\$array [, mixed \\$search_value = null `}{`[, bool \\$strict = false ]`}{`] )\narray_search (needle, arr)\narray_walk (arr, function)\ncount (count)\nin_array (needle, haystack)`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`// ARRAY EXAMPLES`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-php\"}}>{`<?php\n    // add code below this comment\nclass Subdivision\n{\n  public \\$houses = array();\n\n  public function filterHouseColor(\\$color)\n  {\n    \\$return = array();\n    foreach (\\$this->houses as \\$house) {\n      if (\\$house->roof_color == \\$color || \\$house->wall_color == \\$color) {\n        \\$return[] = \\$house;\n      }\n    }\n    return \\$return;\n  }\n}\n\n?>\n\n<? php\n\npublic function getCombinedIngredients()\n{\n    \\$ingredients = array();\n    foreach (\\$this->recipes as \\$recipe) {\n        foreach(\\$recipe->getIngredients() as \\$ing) {\n            \\$item = \\$ing[\"item\"];\n\n            if (strpos(\\$item, \",\")) {\n                \\$item = strstr(\\$item, \",\", true);\n            }\n\n            if (in_array(\\$item.\"s\", \\$ingredients)) {\n                \\$item.=\"s\";\n            } else if (in_array(substr(\\$item, 0, -1), \\$ingredients)) {\n                \\$item = substr(\\$item, 0, -1);\n            }\n\n            \\$ingredients[\\$item] = array (\n                \\$ing[\"amount\"],\n                \\$ing[\"measure\"]\n            );\n        }\n    }\n\n    return \\$ingredients;\n}\n\n?>\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"php-control-flow-logic\"}}>{`PHP Control Flow Logic`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`if (condi­tion) {\n... }\nelseif (condi­tion) {\n... }\nelse {\n... }`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`FOR loop\nfor (initi­alize; condition; update) { ... }`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`WHILE loop\nwhile (condi­tion) { ... }`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`FOREACH loop\nforeach (\\$array as \\$value) { ... }`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`DO WHILE\ndo { ... ;} while (condi­tion)`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`SWITCH (\\$s) {\ncase 1:\n...\nbreak;\ncase 2:\n...\nbreak;\ndefault:\n...\n}`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"php-ifelseif-statements-within-a-web-document\"}}>{`PHP if/elseif statements within a web document`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-php\"}}>{`<?php\n\n\\$bool = false;\n\n?>\n\n<?php if (\\$bool) : ?>\n\n    <div>\n        <p><?php echo \"Bool is true\"?></p>\n    </div>\n\n<?php elseif (!\\$bool) : ?>\n\n    <div>\n        <p><?php echo \"Elseif works\"?></p>\n    </div>\n\n<?php else : ?>\n\n    <div>\n        <p><?php echo \"Bool is false\"?></p>\n    </div>\n\n<?php endif; ?>\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"php-general-functions\"}}>{`PHP General Functions`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`isset()\ntest for variable exists\nempty()\ntest for empty variable\nmail(\\$to, \\$subject, \\$msg, 'From: ' . \\$email)\nmail function\nmysqli­`}<MDXTag name=\"em\" components={components} parentName=\"p\">{`fe­tch­_ar­ray­(\\$r­esult)\nfetch each row of a query (in \\$result)\nheader()\nsend a header from the server\nis_num­eric()\ntest to see if a value is number\nexit()\ncauses script to stop immedi­ately\ntrim(\\$­string)\ntrims leading and trailing spaces\nmysqli­_re­al`}</MDXTag>{`­esc­ape­_st­rin­g(\\$­string)\nescapes special characters\nstr_re­pla­ce('a', 'b', \\$string)\nreplace a with b in a string\nexplode(', ' , \\$string)\nmake string into array\nimplode(', \" \\$string)\nmake array into string\nsubstr (\\$string, start, len)\ngrabs a substring\npreg_m­atc­h('­regex', \\$string)\nmatches regular expres­sions\npreg_r­epl­ace­('r­egex', \\$replace, \\$string)\nreplaces characters in a string by regex`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"php-regex-functions\"}}>{`PHP Regex Functions`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`ereg (pattern, str)\nsplit (pattern, str)\nereg_replace (pattern, replace, str)\npreg_grep (pattern, arr)\npreg_match (pattern, str)\npreg_match_all (pattern, str, arr)\npreg_replace (pattern, replace, str)\npreg_split (pattern, str)`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"php-string-functions\"}}>{`PHP String Functions`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`crypt (str, salt)\nexplode (sep, str)\nimplode (glue, arr)\nnl2br (str)\nsprintf (frmt, args)\nstrip_tags (str, allowed_tags)\nstr_replace (search, replace, str)\nstrpos (str, needle)\nstrrev (str)\nstrstr (str, needle)\nstrtolower (str)\nstrtoupper (str)\nsubstr (string, start, len)`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"php-file-system-functions\"}}>{`PHP File System Functions`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`clearstatcache ()\ncopy (source, dest)\nfclose (handle)\nfgets (handle, len)\nfile (file)\nfilemtime (file)\nfilesize (file)\nfile_exists (file)\nfopen (file, mode)\nfread (handle, len)\nfwrite (handle, str)\nreadfile (file)clearstatcache ()\ncopy (source, dest)\nfclose (handle)\nfgets (handle, len)\nfile (file)\nfilemtime (file)\nfilesize (file)\nfile_exists (file)\nfopen (file, mode)\nfread (handle, len)\nfwrite (handle, str)\nreadfile (file)`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"php-datetime-functions\"}}>{`PHP Date/Time Functions`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`checkdate (month, day, year)\ndate (format, timestamp)\ngetdate (timestamp)\nmktime (hr, min, sec, month, day, yr)\nstrftime (formatstring, timestamp)\nstrtotime (str)\ntime ()`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"php-date-formatting\"}}>{`PHP Date Formatting`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Y\n4 digit year (2008)\ny\n2 digit year (08)\nF\nLong month (January)\nM\nShort month (Jan)\nm\nMonth ⁴ (01 to 12)\nn\nMonth (1 to 12)\nD\nShort day name (Mon)\nl\nLong day name (Monday) (lowercase L)\nd\nDay ⁴ (01 to 31)\nj\nDay (1 to 31)`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`h\n12 Hour ⁴ (01 to 12)\ng\n12 Hour (1 to 12)\nH\n24 Hour ⁴ (00 to 23)\nG\n24 Hour (0 to 23)\ni\nMinutes ⁴ (00 to 59)\ns\nSeconds ⁴ (00 to 59)`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`w\nDay of week ¹ (0 to 6)\nz\nDay of year (0 to 365)\nW\nWeek of year ² (1 to 53)\nt\nDays in month (28 to 31)`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`a\nam or pm\nA\nAM or PM\nB\nSwatch Internet Time (000 to 999)\nS\nOrdinal Suffix (st, nd, rd, th)`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`T\nTimezone of machine (GMT)\nZ\nTimezone offset (seconds)\nO\nGMT offset (hours) (+0200)\nI\nDaylight saving (1 or 0)\nL\nLeap year (1 or 0)`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`U\nSeconds since Epoch ³\nc\nISO 8601 (PHP 5) (2008-­07-­31T­18:­30:­13+­01:00)\nr\nRFC 2822 (Thu, 31 Jul 2008 18:30:13 +0100)`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"accessing-deep-arrays-to-find-values\"}}>{`Accessing deep arrays to find values`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-php\"}}>{`\\$locations = Timber::get_terms('locations');\n\n        \\$data = [];\n        \\$exclusion = [];\n\n        foreach(\\$locations as \\$location) {\n            \\$data[] = [\n                \"location\" => \\$location,\n                \"posts\" => Locations::getPostsForLocation(\\$location,\\$count,\\$exclusion)\n            ];\n\n            // add posts with current ids to array to check against\n            foreach (\\$data as \\$key => \\$value) {\n                if (\\$value[\"posts\"]) {\n                    \\$posts = \\$value[\"posts\"];\n                    foreach(\\$posts as \\$key => \\$value) {\n                        if (in_array(\\$value->id, \\$exclusion)) {\n                            unset(\\$posts[\\$key]);\n                        } else {\n                            array_push(\\$exclusion, \\$value->id);\n                        }\n                    }\n                }\n            }\n        }\n`}</MDXTag></MDXTag>\n           </MDXTag>\n  }\n}\n  "],"sourceRoot":""}