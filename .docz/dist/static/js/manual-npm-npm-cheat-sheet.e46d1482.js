(window.webpackJsonp=window.webpackJsonp||[]).push([[149],{"./manual/npm/npm-cheat-sheet.md":function(e,n,r){"use strict";r.r(n),r.d(n,"default",function(){return u});var t=r("./node_modules/react/index.js"),o=r.n(t),a=r("./node_modules/@mdx-js/tag/dist/index.js");function s(e){return(s="function"===typeof Symbol&&"symbol"===typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"===typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function p(e,n){if(null==e)return{};var r,t,o=function(e,n){if(null==e)return{};var r,t,o={},a=Object.keys(e);for(t=0;t<a.length;t++)r=a[t],n.indexOf(r)>=0||(o[r]=e[r]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(t=0;t<a.length;t++)r=a[t],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}function c(e,n){for(var r=0;r<n.length;r++){var t=n[r];t.enumerable=t.enumerable||!1,t.configurable=!0,"value"in t&&(t.writable=!0),Object.defineProperty(e,t.key,t)}}function i(e,n){return!n||"object"!==s(n)&&"function"!==typeof n?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):n}function m(e){return(m=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function l(e,n){return(l=Object.setPrototypeOf||function(e,n){return e.__proto__=n,e})(e,n)}var u=function(e){function n(e){var r;return function(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}(this,n),(r=i(this,m(n).call(this,e))).layout=null,r}var r,t,s;return function(e,n){if("function"!==typeof n&&null!==n)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(n&&n.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),n&&l(e,n)}(n,o.a.Component),r=n,(t=[{key:"render",value:function(){var e=this.props,n=e.components;p(e,["components"]);return o.a.createElement(a.MDXTag,{name:"wrapper",components:n},o.a.createElement(a.MDXTag,{name:"h1",components:n,props:{id:"npm-help-sheet"}},"npm help sheet"),o.a.createElement(a.MDXTag,{name:"h2",components:n,props:{id:"install-npm-dependencies"}},"install npm dependencies"),o.a.createElement(a.MDXTag,{name:"pre",components:n},o.a.createElement(a.MDXTag,{name:"code",components:n,parentName:"pre",props:{}},"npm install\n")),o.a.createElement(a.MDXTag,{name:"h2",components:n,props:{id:"useful-npm-dependencies"}},"USEFUL NPM DEPENDENCIES"),o.a.createElement(a.MDXTag,{name:"h4",components:n,props:{id:"mongoose---database-helper-for-mongodb"}},"MONGOOSE - database helper for MongoDB"),o.a.createElement(a.MDXTag,{name:"pre",components:n},o.a.createElement(a.MDXTag,{name:"code",components:n,parentName:"pre",props:{}},"npm install --save mongoose\n\nmongod // starts the daemon\nmongo // check out the documents\n")),o.a.createElement(a.MDXTag,{name:"pre",components:n},o.a.createElement(a.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-javascript"}},"var User = mongoose.model('User', UserSchema);\nmodule.exports = User;\n\n// in app.js\nvar User = require('../models/user');\n")),o.a.createElement(a.MDXTag,{name:"h4",components:n,props:{id:"bcrypt---used-for-hashing-and-salting"}},"BCRYPT - used for hashing and salting"),o.a.createElement(a.MDXTag,{name:"pre",components:n},o.a.createElement(a.MDXTag,{name:"code",components:n,parentName:"pre",props:{}},"npm install --save bcrypt\n")),o.a.createElement(a.MDXTag,{name:"pre",components:n},o.a.createElement(a.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-javascript"}},"// in User.js\nvar bcrypt = require('bcrypt');\nUserSchema.pre('save', function(next) {\n    var user = this;\n    bcrypt.hash(user.password, 10, function(err, hash) {\n        if (err) {\n            return next(err);\n        }\n        user.password = hash;\n        next();\n    })\n});\n\nUserSchema.statics.authenticate = function(email, password, callback) {\n    User.findOne({ email: email })\n        .exec(function (error, user) {\n            if (error) {\n                return callback(error);\n            } else if (!user) {\n                var err = new Error('User not found.');\n                err.status = 401;\n                return callback(err);\n            }\n            bcrypt.compare(password, user.password, function (error, result) {\n                if (result === true) {\n                    return callback(null, user);\n                } else {\n                    return callback();\n                }\n            });\n        });\n}\n\n// Example in app.js for Express\n\nrouter.post('/login', function(req, res, next) {\n    if (req.body.email && req.body.password) {\n        User.authenticate(req.body.email, req.body.password, function (error, user) {\n            if (error || !user) {\n                var err = new Error('Wrong email or password.');\n                err.status = 401;\n                return next(err);\n            } else {\n                req.session.userId = user._id;\n                return res.redirect('/profile');\n            }\n        });\n    } else {\n        var err = new Error('Email and password are required.');\n        err.status = 401;\n        return next(err);\n    }\n});\n")),o.a.createElement(a.MDXTag,{name:"h4",components:n,props:{id:"express-session---save-sessions-to-use-throughout-the-website"}},"EXPRESS SESSION - save sessions to use throughout the website"),o.a.createElement(a.MDXTag,{name:"pre",components:n},o.a.createElement(a.MDXTag,{name:"code",components:n,parentName:"pre",props:{}},"npm install express-session --save\n")),o.a.createElement(a.MDXTag,{name:"pre",components:n},o.a.createElement(a.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-javascript"}},"// in app.js\n\nvar session = require('express-session');\n\n// use sessions for tracking logins - check more in the readme\napp.use(session({\n    secret: 'treehouse loves you',\n    resave: true,\n    saveUninitialized: false\n}));\n\n// not useful when in production. check https://github.com/expressjs/session#compatible-session-stores\n")),o.a.createElement(a.MDXTag,{name:"h4",components:n,props:{id:"connect-mongo---used-for-quick-middleware-access-to-mongo"}},"CONNECT-MONGO - used for quick middleware access to Mongo"),o.a.createElement(a.MDXTag,{name:"p",components:n},"connect-mongo is a middleware already written for us!"),o.a.createElement(a.MDXTag,{name:"pre",components:n},o.a.createElement(a.MDXTag,{name:"code",components:n,parentName:"pre",props:{}},"npm install connect-mongo --save\n")),o.a.createElement(a.MDXTag,{name:"pre",components:n},o.a.createElement(a.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-javascript"}},"require MongoStore = require('connect-mongo')(session);\n\n// in app.js\n\napp.use(session({\n    secret: 'treehouse loves you',\n    resave: true,\n    saveUninitialized: false\n    store: new MongoStore({\n        mongooseConnection: db\n    })\n}));\n")))}}])&&c(r.prototype,t),s&&c(r,s),n}();u.__docgenInfo={description:"",methods:[],displayName:"MDXContent"}}}]);
//# sourceMappingURL=manual-npm-npm-cheat-sheet.305817e8304de77c75ce.js.map