{"version":3,"sources":["webpack:///./manual/AWS/EC2-Container-Service.md"],"names":["MDXContent","props","_this","_classCallCheck","this","_possibleConstructorReturn","_getPrototypeOf","call","layout","React","Component","_this$props","components","_objectWithoutProperties","react__WEBPACK_IMPORTED_MODULE_0___default","a","createElement","_mdx_js_tag__WEBPACK_IMPORTED_MODULE_1__","name","id","parentName","href"],"mappings":"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","file":"static/js/manual-aws-e-c2-container-service.bb61a874.js","sourcesContent":["\n  import React from 'react'\n  import { MDXTag } from '@mdx-js/tag'\n  \n\nexport default class MDXContent extends React.Component {\n  constructor(props) {\n    super(props)\n    this.layout = null\n  }\n  render() {\n    const { components, ...props } = this.props\n\n    return <MDXTag\n             name=\"wrapper\"\n             \n             components={components}><MDXTag name=\"h1\" components={components} props={{\"id\":\"amazon-ec2-container-services\"}}>{`Amazon EC2 Container Services`}</MDXTag>\n{/* TOC */}\n<MDXTag name=\"ul\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"a\" components={components} parentName=\"li\" props={{\"href\":\"#amazon-ec2-container-services\"}}>{`Amazon EC2 Container Services`}</MDXTag><MDXTag name=\"ul\" components={components} parentName=\"li\">\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"a\" components={components} parentName=\"li\" props={{\"href\":\"#10-container-architecture\"}}>{`1.0: Container Architecture`}</MDXTag></MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"a\" components={components} parentName=\"li\" props={{\"href\":\"#11-amazon-ec2-introduction\"}}>{`1.1: Amazon EC2 Introduction`}</MDXTag></MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"a\" components={components} parentName=\"li\" props={{\"href\":\"#20-creating-an-ecs-user-and-group\"}}>{`2.0: Creating an ECS User and Group`}</MDXTag></MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"a\" components={components} parentName=\"li\" props={{\"href\":\"#21-logging-into-the-console\"}}>{`2.1: Logging into the Console`}</MDXTag></MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"a\" components={components} parentName=\"li\" props={{\"href\":\"#22-create-instance-key-pairs\"}}>{`2.2: Create Instance Key-Pairs`}</MDXTag></MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"a\" components={components} parentName=\"li\" props={{\"href\":\"#23-create-a-cluster-virtual-private-cloud\"}}>{`2.3: Create a Cluster Virtual Private Cloud`}</MDXTag></MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"a\" components={components} parentName=\"li\" props={{\"href\":\"#24-security-groups-and-ecs-clusters\"}}>{`2.4: Security Groups and ECS Clusters`}</MDXTag></MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"a\" components={components} parentName=\"li\" props={{\"href\":\"#25-installing-aws-cli\"}}>{`2.5: Installing AWS CLI`}</MDXTag></MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"a\" components={components} parentName=\"li\" props={{\"href\":\"#30-using-the-wizard-for-sample-cluster-creation\"}}>{`3.0: Using the Wizard for Sample Cluster Creation`}</MDXTag></MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"a\" components={components} parentName=\"li\" props={{\"href\":\"#31-exploring-the-sample-cluster\"}}>{`3.1: Exploring the Sample Cluster`}</MDXTag></MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"a\" components={components} parentName=\"li\" props={{\"href\":\"#32-customizing-the-ec2-cluster\"}}>{`3.2: Customizing the EC2 Cluster`}</MDXTag></MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"a\" components={components} parentName=\"li\" props={{\"href\":\"#33-cluster-security-group-customization\"}}>{`3.3: Cluster Security Group Customization`}</MDXTag></MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"a\" components={components} parentName=\"li\" props={{\"href\":\"#34-container-instance-scaling\"}}>{`3.4: Container Instance Scaling`}</MDXTag></MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"a\" components={components} parentName=\"li\" props={{\"href\":\"#35-elb---container-registration-and-config\"}}>{`3.5: ELB - Container Registration and Config`}</MDXTag></MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"a\" components={components} parentName=\"li\" props={{\"href\":\"#36-ecs---creating-a-custom-container\"}}>{`3.6: ECS - Creating a Custom Container`}</MDXTag></MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"a\" components={components} parentName=\"li\" props={{\"href\":\"#37-creating-a-custom-task-definition-for-our-containers-in-ecs\"}}>{`3.7: Creating a Custom Task Definition for our Containers in ECS`}</MDXTag></MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"a\" components={components} parentName=\"li\" props={{\"href\":\"#38-running-multiple-container-types-in-the-cluster\"}}>{`3.8: Running Multiple Container Types in the Cluster`}</MDXTag></MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"a\" components={components} parentName=\"li\" props={{\"href\":\"#40-troubleshooting\"}}>{`4.0: Troubleshooting`}</MDXTag></MDXTag>\n</MDXTag></MDXTag>\n</MDXTag>\n{/* /TOC */}\n<MDXTag name=\"p\" components={components}><MDXTag name=\"strong\" components={components} parentName=\"p\">{`Goals`}</MDXTag></MDXTag>\n<MDXTag name=\"ol\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ol\">{`Create a User and Look at Security Settings`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ol\">{`Create a Role and Generate a Key Pair`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ol\">{`Create a VPC for our Cluster`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ol\">{`Create a Security Group for our Cluster`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ol\">{`Install and Configure the AWS CLI`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"strong\" components={components} parentName=\"p\">{`Components and Usage`}</MDXTag></MDXTag>\n<MDXTag name=\"ul\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Clusters`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Container instances (how to register too)`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`The Agent`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Scheduling Tasks`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Repositories`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`IAM Policies and Roles`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"10-container-architecture\"}}>{`1.0: Container Architecture`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"11-amazon-ec2-introduction\"}}>{`1.1: Amazon EC2 Introduction`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Highly scalable and fast container management service. Easily can start, stop and manage containers on a cluster comprised of Amazon EC2 instances.`}</MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"strong\" components={components} parentName=\"p\">{`What makes up the ECS?`}</MDXTag></MDXTag>\n<MDXTag name=\"ol\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ol\">{`Clusters - the grouping of container instances that we 'do stuff' on.`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ol\">{`Container instances - EC2 Instances running the ECS agent and registered in a cluster.`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ol\">{`Task Definitions - Description of an application with one or more container definitions.`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ol\">{`Scheduling - How we get our tasks on the container instances.`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ol\">{`Servies - An ECS service allows us to run or maintain a number of instances of a task definition.`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ol\">{`Tasks - an instance of a Task definition`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ol\">{`Containers - A Linux Container (Docker for example) created as part of a Task.`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"hr\" components={components}></MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"20-creating-an-ecs-user-and-group\"}}>{`2.0: Creating an ECS User and Group`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`In the console, go to Identity and Access Management.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`If you create the secret access key, make sure you download it and provide it for login.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Ensure that you also create a group for this that is specific to the EC2 Container service.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Normally we wouldn't recommend Admin access, but you want to assign a group security policy so future users added can get these group policies and we can manage it at a group level.`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"21-logging-into-the-console\"}}>{`2.1: Logging into the Console`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`From the AWS IAM panel, we can just into the new `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`ecsadmin`}</MDXTag>{` group and now we can create some sign in passwords from `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`Security Credentials`}</MDXTag>{`.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Now with the alias link we have from the main dashboard, we can use that give other users a chance to log in.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`It is very important that we want the alias used wherever possible instead of your account number.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Now, once the user signs in, they have a chance to see a new password.`}</MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"strong\" components={components} parentName=\"p\">{`THIS IS HOW WE MAINTAIN THE SECURITY WITH GRANUAL PERSMISSIONS FOR OTHERS TO USE`}</MDXTag></MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"22-create-instance-key-pairs\"}}>{`2.2: Create Instance Key-Pairs`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Head to `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`EC2 Virtual Servers > Network and Security > Key Pairs`}</MDXTag>{` - you can import a key pair or create a key-pair. This is used to SSH in securely.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Create and save that file and store it somewhere securely.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`If we use `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`ssh-agent bash`}</MDXTag>{`, that will launch a shell where we can run `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`ssh-add key-pair.pem`}</MDXTag>{` added to the key exchange, and now we can `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`ssh -i key-pair.pem ec2-user@ip.address.0.0`}</MDXTag>{` (ensure an instance is running).`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{}}>{`ssh-agent bash\nssh-add key-pair.pem\nssh -i key-pair.pem ec2-user@ip.address.0.0\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"23-create-a-cluster-virtual-private-cloud\"}}>{`2.3: Create a Cluster Virtual Private Cloud`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`In the VPC section of AWS, in the list of VPCs you can see a list of the VPCs and there can be allocated a default if you haven't named one.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Create a VPC, give is a name tag, the CIDR block is the network range eg. `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`10.17.0.0/16`}</MDXTag>{` (16 is as large as we can make our VPC) and we can choose the VPC to be `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`Default`}</MDXTag>{` or `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`Dedicated`}</MDXTag>{`.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Once the instance config is up, we can choose `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`Actions > Edit DHCP Options`}</MDXTag>{` which will edit how those addresses/options are set. Currently the /16 address range will be `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`10.17.0.1`}</MDXTag>{` but the config will basically assign ranges between .2 and .253. We can change that range with `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`DHCP Options Set`}</MDXTag>{` if we want to.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`DHCP means `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`Dynamic Host Configuration Protocol`}</MDXTag>{`.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`We can also assign a DNS resolution if we didn't want them publicly available by name, we can say don't do it.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Now we can go back and apply a security group.`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"24-security-groups-and-ecs-clusters\"}}>{`2.4: Security Groups and ECS Clusters`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Back in the `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`EC2 > Network and Security > Security Groups`}</MDXTag>{`, we can now create a security group.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`As you create this, you will give it a name and choose the VPC associated! This will be where we select the `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`ECS_VPC`}</MDXTag>{` we created.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`As for the inbound and outbound rules, we add an inbound SSH rule for TCP, port 22, Anywhere which will allow in SSH connections.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`As a second option, we choose HTTPS and a HTTP role as well.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`For the `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`Outbound`}</MDXTag>{`, we want SSH to anywhere and HTTP and HTTPS as well. After configuring our services, we may want to choose a more restricive kind of traffic.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Again, from here, we can edit the inbound and outbound rules too.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`We recommend that you only open up SSH to a few IP ranges.`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"25-installing-aws-cli\"}}>{`2.5: Installing AWS CLI`}</MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`pip3 install awscli`}</MDXTag>{` which will give us access to using the command line.`}</MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`aws configure`}</MDXTag>{` allows us to put in our id and secret key, and commands such as `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`aws ec2 describe-regions`}</MDXTag>{` allow us to see available regions for instances.`}</MDXTag>\n<MDXTag name=\"hr\" components={components}></MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"30-using-the-wizard-for-sample-cluster-creation\"}}>{`3.0: Using the Wizard for Sample Cluster Creation`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`In the ECS Wizard, let's click `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`Get Started`}</MDXTag>{`.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`This will deploy an EC2 Container Service in a particular region.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`We want to add some information about `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`Tasks`}</MDXTag>{` which is how we get things to run on ECS.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Give the task a definition name `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`ecs-sample-web-app-static`}</MDXTag>{` as an example.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Container name we want to run could be `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`ecs-sample-web`}</MDXTag>{`.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Image is the image format we want to run.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`The ports can be configured depending on what ports we have exposed on the security settings.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`If we look at the advanved settings, we can look at environment, network settings etc.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`We can also mount additional volumes external from the container.`}</MDXTag>\n<MDXTag name=\"hr\" components={components}></MDXTag>\n<MDXTag name=\"p\" components={components}>{`On the next step, we can edit the Service name and we can also have a multiple number of tasks running.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`We can also do elastic load balancing too.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`These containers also run in a cluster. We can choose what instance type we want, and a number of instances.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Key-Pairs are also region specific and you'll need a new key-pair for another cluster in a different region.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`We need to make sure `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`ecsinstanceRole`}</MDXTag>{` IAM policy is also currently allowed.`}</MDXTag>\n<MDXTag name=\"hr\" components={components}></MDXTag>\n<MDXTag name=\"p\" components={components}>{`In the review, you will get an overview of what is being created and the cluster configuration.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`If we now view this service in `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`Clusters`}</MDXTag>{`, it will show us our cluster and the current task that is running.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`If we look at `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`Task Definition`}</MDXTag>{` we can use actions to do thingsl like run tasks.`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"31-exploring-the-sample-cluster\"}}>{`3.1: Exploring the Sample Cluster`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`When we launched the cluster, we had 2 instances running EC2 instances.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`If we now go to `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`EC2 > Instances`}</MDXTag>{`, we should be able to now see our running instances!`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`If we grab the IP, we can now use that pem file and AWS CLI. Again, run the `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`ssh-agent`}</MDXTag>{` and `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`ssh-add`}</MDXTag>{` etc.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`At the IP itself, we can see that the website is now running, but the second instance isn't running the container... why? Because it is a cluster. Even though we have two INSTANCES running we only configured ONE service running ONE task with ONE task definition.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`A lot of this is because we haven't set the ELB. Since we didn't add a ELB, we will only see the container on the first EC2 we launched.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`What we can do for our security groups is edit the settings that need to be changed or deploy a cluster and do that manually.`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"32-customizing-the-ec2-cluster\"}}>{`3.2: Customizing the EC2 Cluster`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`In the previous lessons, we quickly went through the ECS Wizard.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Let's take a look at how we can set up a cluster with a basic web app.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`If we head back to the EC2 container service, let's walk through how we can customize our cluster initially and can use it in a manner more enterprise ready.`}</MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"strong\" components={components} parentName=\"p\">{`Task Definition`}</MDXTag></MDXTag>\n<MDXTag name=\"ul\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`give a solid name about least definition to a task definition`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`again, select the mappings etc that you want`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Now, in the advaned options, we want to make some changes.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Handy inclusions will be our environment variables.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Now, when the host starts, the container will start this image.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`In this case, we will also define a load balance on a particular port.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Since we still have a very restricive security group, we still cannot SSH in. Why is that? We can configure our security groups.`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"33-cluster-security-group-customization\"}}>{`3.3: Cluster Security Group Customization`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`How can we connect using SSH even when we have a key pair already?`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`The reason we cannot, is that during the initial launch, we don't have a way to apply another security group to another instance.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`So in the `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`EC2 > Instances`}</MDXTag>{`, we can view the Security Group being used as the source. If we click onto it, it will take us to the container security group.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Now if we look at the inbound and outbound rules!`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`There is a `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`ECSAllowedPorts`}</MDXTag>{` and the `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`ELBAllowedPorts`}</MDXTag>{`, and we are allow to enter one if we allowed in the ELB security group. Effectively, the ELB permissions are imported directly to the ECS allowed ports.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`So we can in fact now add in the SSH IP that we want to use. As soon as we save, it immediately applies to our instance!`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`If we now run `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`ps aux | grep http`}</MDXTag>{` we can now see the shell script we have run to launch the container.`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"34-container-instance-scaling\"}}>{`3.4: Container Instance Scaling`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`We have the ability in the EC2 instances live into our cluster.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`In `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`ECS > Clusters > ECS Instance > Scale ECS Instances`}</MDXTag>{` we can choose what we are scaling. If will load it with reference to the ELB but it won't be auto setup.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`If we head to `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`EC2 > Instances`}</MDXTag>{` is our new instane configured exactly the same way as the original one.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Once the EC2 is up, the container won't be showing up on the IP just yet. If we SSH into that address, we can see that it is running but no `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`http`}</MDXTag>{` service is running.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Head back to `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`ECS`}</MDXTag>{` and we can see in the clusters that we only have one running task.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Now, if we select `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`Clusters > Task`}</MDXTag>{`, we run a new task and choose our task definition. We still only need to run 1 task, since we just ran 1 additional instance. It's a 1-to-1 relationship.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Something that is cool, is that just because we are running a new task, we don't have to choose the same definition eg. like how we are running a database to support the cluster.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Once that task is running, if we now check that IP, we can now see the website is actually running.`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"35-elb---container-registration-and-config\"}}>{`3.5: ELB - Container Registration and Config`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Now that we have two instances running, but the load balancer on has 1 of 1 instances.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`What we have to do in `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`EC2 > Load Balancers > Status`}</MDXTag>{`, we click on it and edit the instances. The the ELB has already registered that there is another container instance (as you'll be able to see) so we click on it and then we select save.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Now we have multiple nodes, and the ELB will now use round robin to choose the node to use.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Load balancers do not currently store session state by default, which can be a trouble if you are running with round robin. You need to turn on Stickiness on the Port Configuration in order to keep sessions.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`We can enabled `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`Load Balancer`}</MDXTag>{` generated cookies or appliation generated cookie stickiness. Application will look for a cookie you set.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Generally you just want 5 minutes or so or you could suffer from `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`affinity overload`}</MDXTag>{` if one server gets overloaded.`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"36-ecs---creating-a-custom-container\"}}>{`3.6: ECS - Creating a Custom Container`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`What we can do for loading containers is run from Docker Hub.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`If you are going to use a propriatary system, use a private Docker Hub repo.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`This example is given from AWS Labs.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`The Dockerfile will be used to get a base image we want it built on and then we can declare variables that we want associated with it.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`In this example, we will run `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`docker build -t username/name-of-repo`}</MDXTag>{` and it will work from the Dockerfile and line everything up.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`After the build, it will now be another image we can run against.`}</MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`docker run -p 80:80 latest123/amazon-ecs-sample:latest`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`We can run `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`docker ps`}</MDXTag>{` to ensure it is running and then we should be able to check localhost and see it all running.`}</MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`docker login`}</MDXTag>{` will sign us into our Docker account and the credentials will be saved.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Now if we `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`docker push`}</MDXTag>{`, we can push that image.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`We can now see that our repo has been pushed up to the account.`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"37-creating-a-custom-task-definition-for-our-containers-in-ecs\"}}>{`3.7: Creating a Custom Task Definition for our Containers in ECS`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`With the repo available for a docker pull, what we can now do is create a new task definition that will apply to a running task definition.`}</MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"strong\" components={components} parentName=\"p\">{`Creating the task definition`}</MDXTag></MDXTag>\n<MDXTag name=\"ul\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Can be done by either console or CLI`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Select `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`ECS > Task Definitions > Create a new definition`}</MDXTag>{`.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Example `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`console-task-def-latest-sampleweb`}</MDXTag>{`.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`What we can do is now add a container! We can also do a configure via JSON.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`How do we do that? We can add a `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`config.json`}</MDXTag>{` file that has all of the details.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`In the example config that we paste in here from the AWSLabs example, we just need to change the Image that we wish to change.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Once we have created that task definition, we can head back to Clusters and see the task there.`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"38-running-multiple-container-types-in-the-cluster\"}}>{`3.8: Running Multiple Container Types in the Cluster`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Now that the task definition is done, how can we use that in our cluster? As we've seen before, we can scale the cluster with the additional instances.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Before we can apply a task to, we need to scale the instances.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Once the new EC2 instance is up, we can again check that it isn't running if we check the Public IP.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Back in `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`ECS > Clusters > ECS Instances`}</MDXTag>{`, we have two tasks running and we can now run a new task.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`One thing to notice is that the task definition list cannot be removed.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Once the task has run, get the IP that is provisioned and see if you can head to it - which you can!`}</MDXTag>\n<MDXTag name=\"hr\" components={components}></MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"40-troubleshooting\"}}>{`4.0: Troubleshooting`}</MDXTag>\n<MDXTag name=\"ul\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Service Health is important to decide if it's with the cluster and not AWS.`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Another option is to check events.`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Check the instances, which also has deeper information`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Check the Load Balancer have the in service status. - Health checks here can be configured.`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`We can check the cluster itself - Check primary service is `}<MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`ACTIVE`}</MDXTag>{` - Check the instances and the tasks`}</MDXTag>\n</MDXTag>\n           </MDXTag>\n  }\n}\n  "],"sourceRoot":""}