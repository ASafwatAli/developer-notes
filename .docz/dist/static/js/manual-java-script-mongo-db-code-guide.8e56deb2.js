(window.webpackJsonp=window.webpackJsonp||[]).push([[104],{"./manual/JavaScript/Mongo-DB-Code-Guide.md":function(e,n,o){"use strict";o.r(n),o.d(n,"default",function(){return u});var t=o("./node_modules/react/index.js"),r=o.n(t),a=o("./node_modules/@mdx-js/tag/dist/index.js");function s(e){return(s="function"===typeof Symbol&&"symbol"===typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"===typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function m(e,n){if(null==e)return{};var o,t,r=function(e,n){if(null==e)return{};var o,t,r={},a=Object.keys(e);for(t=0;t<a.length;t++)o=a[t],n.indexOf(o)>=0||(r[o]=e[o]);return r}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(t=0;t<a.length;t++)o=a[t],n.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(e,o)&&(r[o]=e[o])}return r}function c(e,n){for(var o=0;o<n.length;o++){var t=n[o];t.enumerable=t.enumerable||!1,t.configurable=!0,"value"in t&&(t.writable=!0),Object.defineProperty(e,t.key,t)}}function p(e,n){return!n||"object"!==s(n)&&"function"!==typeof n?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):n}function l(e){return(l=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function i(e,n){return(i=Object.setPrototypeOf||function(e,n){return e.__proto__=n,e})(e,n)}var u=function(e){function n(e){var o;return function(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}(this,n),(o=p(this,l(n).call(this,e))).layout=null,o}var o,t,s;return function(e,n){if("function"!==typeof n&&null!==n)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(n&&n.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),n&&i(e,n)}(n,r.a.Component),o=n,(t=[{key:"render",value:function(){var e=this.props,n=e.components;m(e,["components"]);return r.a.createElement(a.MDXTag,{name:"wrapper",components:n},r.a.createElement(a.MDXTag,{name:"h1",components:n,props:{id:"mongo-cheat-sheet"}},"Mongo Cheat Sheet"),r.a.createElement(a.MDXTag,{name:"h2",components:n,props:{id:"mongo-1-mongo-install"}},"MONGO-1: Mongo Install"),r.a.createElement(a.MDXTag,{name:"pre",components:n},r.a.createElement(a.MDXTag,{name:"code",components:n,parentName:"pre",props:{}},"npm install mongoose --save\n\n// to run\n\nmongod // starts the daemon\nmongo // check out the documents\n")),r.a.createElement(a.MDXTag,{name:"h2",components:n,props:{id:"mongo-2-mongo-shell"}},"MONGO-2: Mongo Shell"),r.a.createElement(a.MDXTag,{name:"pre",components:n},r.a.createElement(a.MDXTag,{name:"code",components:n,parentName:"pre",props:{}},"show dbs \u2014 // display the databases\nuse bookworm \u2014 // specify the database you're going to work with\nshow collections \u2014 // shows the document collections for the selected database\ndb.users.find() \u2014 // display all the documents in the users collection\ndb.users.find().pretty() \u2014 // nicer format for output documents within the shell\ndb.users.drop() \u2014 // remove the users collection from the current database\n")),r.a.createElement(a.MDXTag,{name:"h2",components:n,props:{id:"mongo-3-mongo-sample-usage"}},"MONGO-3: Mongo Sample Usage"),r.a.createElement(a.MDXTag,{name:"pre",components:n},r.a.createElement(a.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-javascript"}},"// models > user.js\n\nvar mongoose = require('mongoose');\n\nvar UserSchema = new mongoose.Schema({\n  email: {\n    type: String,\n    required: true,\n    trim: true,\n    unique: true,\n  },\n  name: {\n    type: String,\n    required: true,\n    trim: true,\n  },\n  favoriteBook: {\n    type: String,\n    required: true,\n    trim: true\n  },\n  password: {\n    type: String,\n    required: true\n  }\n});\n\nvar User = mongoose.model('User', UserSchema);\nmodule.exports = User;\n\n// in app.js\n\nvar User = require('../models/user');\n")),r.a.createElement(a.MDXTag,{name:"h2",components:n,props:{id:"mongo-4-building-an-example-schema-in-the-mock-folder"}},"MONGO-4: Building an Example Schema in the ",r.a.createElement(a.MDXTag,{name:"inlineCode",components:n,parentName:"h2"},"mock")," folder"),r.a.createElement(a.MDXTag,{name:"pre",components:n},r.a.createElement(a.MDXTag,{name:"code",components:n,parentName:"pre",props:{}},"// mock/example.js\n\nimport mongoose from 'mongoose';\n\nconst schema = new mongoose.Schema({\n  question: String,\n  answer: String,\n  completed: Boolean\n});\n\nexport const model = mongoose.model('Layout', schema);\n")),r.a.createElement(a.MDXTag,{name:"h2",components:n,props:{id:"mongo-5-accessing-the-schema-results"}},"MONGO-5: Accessing the Schema results"),r.a.createElement(a.MDXTag,{name:"pre",components:n},r.a.createElement(a.MDXTag,{name:"code",components:n,parentName:"pre",props:{}},"// in a route file\nvar express = require('express');\nvar router = express.Router();\n\nimport {ExampleModel} from '../models/example';\n\n/* GET users listing. */\nrouter.get('/', (req, res) => {\n  console.log(ExampleModel);\n  ExampleModel.find({}, \"test string\", (err, results) => {\n    if (err) {\n      return res.status(500).json({message: err.message});  \n    }\n    res.json({ results: results });\n  });\n  // res.json({ todos: \"todos\" });\n    // res.send('respond with a resource');\n});\n\nmodule.exports = router;\n")))}}])&&c(o.prototype,t),s&&c(o,s),n}();u.__docgenInfo={description:"",methods:[],displayName:"MDXContent"}}}]);
//# sourceMappingURL=manual-java-script-mongo-db-code-guide.305817e8304de77c75ce.js.map