(window.webpackJsonp=window.webpackJsonp||[]).push([[241],{"./manual/Testing/Regression-Testing.md":function(e,n,t){"use strict";t.r(n),t.d(n,"default",function(){return g});var a=t("./node_modules/react/index.js"),o=t.n(a),r=t("./node_modules/@mdx-js/tag/dist/index.js");function s(e){return(s="function"===typeof Symbol&&"symbol"===typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"===typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function p(e,n){if(null==e)return{};var t,a,o=function(e,n){if(null==e)return{};var t,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}function i(e,n){for(var t=0;t<n.length;t++){var a=n[t];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}function c(e,n){return!n||"object"!==s(n)&&"function"!==typeof n?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):n}function l(e){return(l=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function m(e,n){return(m=Object.setPrototypeOf||function(e,n){return e.__proto__=n,e})(e,n)}var g=function(e){function n(e){var t;return function(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}(this,n),(t=c(this,l(n).call(this,e))).layout=null,t}var t,a,s;return function(e,n){if("function"!==typeof n&&null!==n)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(n&&n.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),n&&m(e,n)}(n,o.a.Component),t=n,(a=[{key:"render",value:function(){var e=this.props,n=e.components;p(e,["components"]);return o.a.createElement(r.MDXTag,{name:"wrapper",components:n},o.a.createElement(r.MDXTag,{name:"h1",components:n,props:{id:"css-regression-testing"}},"CSS Regression Testing"),o.a.createElement(r.MDXTag,{name:"p",components:n},"We can achieve CSS regression testing by using an assertion library in conjuction with Puppeteer and Pixel Diff."),o.a.createElement(r.MDXTag,{name:"h2",components:n,props:{id:"prequisites"}},"Prequisites"),o.a.createElement(r.MDXTag,{name:"h3",components:n,props:{id:"using-yarn"}},"Using yarn"),o.a.createElement(r.MDXTag,{name:"pre",components:n},o.a.createElement(r.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-bash"}},"yarn install --dev mocha chai puppeteer pixelmatch pngfs babel-polyfill babel-preset-env babel-plugin-module-resolver\n")),o.a.createElement(r.MDXTag,{name:"h3",components:n,props:{id:"using-kratos"}},"Using kratos"),o.a.createElement(r.MDXTag,{name:"pre",components:n},o.a.createElement(r.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-bash"}},"kratos install js-controllers pixeldiff\nkratos install js-test regression\nshotgun run\n")),o.a.createElement(r.MDXTag,{name:"h3",components:n,props:{id:"folder-setup"}},"Folder setup"),o.a.createElement(r.MDXTag,{name:"p",components:n},"Ensure that you have a ",o.a.createElement(r.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"regression")," folder to store all the images."),o.a.createElement(r.MDXTag,{name:"pre",components:n},o.a.createElement(r.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-bash"}},"# Example regression layout\nregression\n\u251c\u2500\u2500 diff\n\u2502\xa0\xa0 \u2514\u2500\u2500 test.png\n\u251c\u2500\u2500 src\n\u2502\xa0\xa0 \u2514\u2500\u2500 test.png\n\u2514\u2500\u2500 temp\n    \u2514\u2500\u2500 test.png\n\n3 directories, 3 files\n")),o.a.createElement(r.MDXTag,{name:"h2",components:n,props:{id:"using-regression-cli"}},"Using Regression CLI"),o.a.createElement(r.MDXTag,{name:"h3",components:n,props:{id:"preparation"}},"Preparation"),o.a.createElement(r.MDXTag,{name:"ol",components:n},o.a.createElement(r.MDXTag,{name:"li",components:n,parentName:"ol"},"Set the imports for the router file."),o.a.createElement(r.MDXTag,{name:"li",components:n,parentName:"ol"},"Set the dev router."),o.a.createElement(r.MDXTag,{name:"li",components:n,parentName:"ol"},"Set the array in the .puppeteer file."),o.a.createElement(r.MDXTag,{name:"li",components:n,parentName:"ol"},"Ensure the devRouter is being used."),o.a.createElement(r.MDXTag,{name:"li",components:n,parentName:"ol"},"Ensure app is running."),o.a.createElement(r.MDXTag,{name:"li",components:n,parentName:"ol"},"Run source to set the base image."),o.a.createElement(r.MDXTag,{name:"li",components:n,parentName:"ol"},"Run compare to compare source to current.")),o.a.createElement(r.MDXTag,{name:"h2",components:n,props:{id:"application"}},"Application"),o.a.createElement(r.MDXTag,{name:"h3",components:n,props:{id:"1-create-a-babelrc-file"}},"1. Create a babelrc file"),o.a.createElement(r.MDXTag,{name:"pre",components:n},o.a.createElement(r.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-json"}},'{\n  "presets": ["env"],\n  "plugins": [\n    [\n      "module-resolver",\n      {\n        "alias": {\n          "controllers": "./controllers"\n        }\n      }\n    ]\n  ]\n}\n')),o.a.createElement(r.MDXTag,{name:"h3",components:n,props:{id:"2-saving-a-screenshot"}},"2. Saving a screenshot"),o.a.createElement(r.MDXTag,{name:"p",components:n},"This is not the test itself but a simple node script to get the initial base working:"),o.a.createElement(r.MDXTag,{name:"pre",components:n},o.a.createElement(r.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-javascript"}},"const PixelDiff = require('./controllers/pixeldiff');\nconst puppeteer = require('puppeteer');\n\n(async () => {\n  const browser = await puppeteer.launch();\n  const page = await browser.newPage();\n\n  console.log('Opening browser');\n  await page.goto('http://localhost:3000');\n\n  const el = await page.$('.homeSplashFade');\n  await el.screenshot({ path: 'regression/src/test.png' });\n\n  console.log('Closing browser');\n  await browser.close();\n\n  /*\n    console.log('Comparing images');\n    const res = await PixelDiff.diff({imgOnePath: 'test.png', imgTwoPath: 'test2.png', dest: 'dest.png', output: true});\n    console.log(res);\n    */\n})();\n")),o.a.createElement(r.MDXTag,{name:"h3",components:n,props:{id:"3-writing-the-test-file"}},"3. Writing the test file"),o.a.createElement(r.MDXTag,{name:"p",components:n},"Create your test file. Any example test file looks like the following:"),o.a.createElement(r.MDXTag,{name:"pre",components:n},o.a.createElement(r.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-javascript"}},"/**\n * Regression tests\n * @author Dennis O'Keeffe\n */\nrequire('babel-polyfill');\nconst expect = require('chai').expect;\nconst cwd = process.cwd();\nconst PixelDiff = require('controllers/pixeldiff');\nconst puppeteer = require('puppeteer');\n\nconsole.log(PixelDiff);\nconsole.log(cwd);\n\nconst screenshot = async (selector, savePath, location = '/') => {\n  const browser = await puppeteer.launch();\n  const page = await browser.newPage();\n\n  console.log('Opening browser');\n  await page.goto('http://localhost:3000');\n\n  const el = await page.$('#root');\n  await el.screenshot({ path: savePath });\n\n  console.log('Closing browser');\n  await browser.close();\n};\n\ndescribe('It works functionality', () => {\n  it('Expects true to be true', () => {\n    expect(true).to.be.true;\n  });\n});\n\ndescribe('Image regression testing', () => {\n  it('has no pixel difference', async () => {\n    console.log('Comparing images');\n    await screenshot('.homeSplashFade', cwd + '/regression/temp/test.png');\n\n    const res = await PixelDiff.diff({\n      imgOnePath: cwd + '/regression/src/test.png',\n      imgTwoPath: cwd + '/regression/temp/test.png',\n      dest: cwd + '/regression/diff/test.png',\n      output: true\n    });\n    expect(res).to.equal(0);\n  });\n});\n")),o.a.createElement(r.MDXTag,{name:"h3",components:n,props:{id:"4-running-the-test-from-the-cli"}},"4. Running the test from the CLI"),o.a.createElement(r.MDXTag,{name:"pre",components:n},o.a.createElement(r.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-bash"}},"mocha --compilers js:babel-core/register --timeout 0 ./test/regression/regression.mocha.js\n")))}}])&&i(t.prototype,a),s&&i(t,s),n}();g.__docgenInfo={description:"",methods:[],displayName:"MDXContent"}}}]);
//# sourceMappingURL=manual-testing-regression-testing.305817e8304de77c75ce.js.map