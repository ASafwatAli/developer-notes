(window.webpackJsonp=window.webpackJsonp||[]).push([[141],{"./manual/Nginx/Nginx-Nodejs-Docker.md":function(e,n,t){"use strict";t.r(n),t.d(n,"default",function(){return d});var o=t("./node_modules/react/index.js"),a=t.n(o),r=t("./node_modules/@mdx-js/tag/dist/index.js");function p(e){return(p="function"===typeof Symbol&&"symbol"===typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"===typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function c(e,n){if(null==e)return{};var t,o,a=function(e,n){if(null==e)return{};var t,o,a={},r=Object.keys(e);for(o=0;o<r.length;o++)t=r[o],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(o=0;o<r.length;o++)t=r[o],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}function i(e,n){for(var t=0;t<n.length;t++){var o=n[t];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}function m(e,n){return!n||"object"!==p(n)&&"function"!==typeof n?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):n}function s(e){return(s=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function l(e,n){return(l=Object.setPrototypeOf||function(e,n){return e.__proto__=n,e})(e,n)}var d=function(e){function n(e){var t;return function(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}(this,n),(t=m(this,s(n).call(this,e))).layout=null,t}var t,o,p;return function(e,n){if("function"!==typeof n&&null!==n)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(n&&n.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),n&&l(e,n)}(n,a.a.Component),t=n,(o=[{key:"render",value:function(){var e=this.props,n=e.components;c(e,["components"]);return a.a.createElement(r.MDXTag,{name:"wrapper",components:n},a.a.createElement(r.MDXTag,{name:"h1",components:n,props:{id:"docker-container-with-nginx-and-nodejs"}},"Docker container with Nginx and Nodejs"),a.a.createElement(r.MDXTag,{name:"p",components:n},"First create a directory for both ",a.a.createElement(r.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"nginx")," and ",a.a.createElement(r.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"nodejs"),"."),a.a.createElement(r.MDXTag,{name:"p",components:n},"Within the Node folder, create a ",a.a.createElement(r.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"Dockerfile")," that contains the following to expose an app running on a particular port:"),a.a.createElement(r.MDXTag,{name:"pre",components:n},a.a.createElement(r.MDXTag,{name:"code",components:n,parentName:"pre",props:{}},"FROM mhart/alpine-node\n# Pretend to copy the node app entry\n# from current folder\nCOPY index.js .\n# Expose the port that it is running on\nEXPOSE 3000\n# Run node - chances are you want pm2 here\nCMD node index.js\n")),a.a.createElement(r.MDXTag,{name:"p",components:n},"Then we can build with ",a.a.createElement(r.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"docker built -t foo/node .")),a.a.createElement(r.MDXTag,{name:"p",components:n},"After the build, run the container with port 3000 exposed using ",a.a.createElement(r.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"docker run -d -p 3000:3000 --name node-app foo/node"),"."),a.a.createElement(r.MDXTag,{name:"p",components:n},"First, we can test the Nginx latest container container using ",a.a.createElement(r.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"docker run --rm -p 8000:80 nginx")," to test out nginx:latest. This just removes the container after running."),a.a.createElement(r.MDXTag,{name:"p",components:n},"In the ",a.a.createElement(r.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"nginx")," folder, we can create ",a.a.createElement(r.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"default.conf")," file to overwrite the initial one."),a.a.createElement(r.MDXTag,{name:"p",components:n},"If settings are not defined below, Nginx will use the default values."),a.a.createElement(r.MDXTag,{name:"pre",components:n},a.a.createElement(r.MDXTag,{name:"code",components:n,parentName:"pre",props:{}},"# config\nserver {\n    location / {\n        # host name first\n        proxy_set_header Host $host;\n        # extra headers for host IP address\n        proxy_set_header X-Real-IP $remote_addr;\n        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n        # passing protocol used (http | https)\n        proxy_set_header X-Forwarded-Proto $scheme;\n        # where to proxy reqs to\n        proxy_pass http://app:3000;\n    }\n}\n")),a.a.createElement(r.MDXTag,{name:"p",components:n},"For the Docker file."),a.a.createElement(r.MDXTag,{name:"pre",components:n},a.a.createElement(r.MDXTag,{name:"code",components:n,parentName:"pre",props:{}},"FROM nginx\nCOPY default.cong /etc/nginx/conf.d/\n")),a.a.createElement(r.MDXTag,{name:"p",components:n},"Then build out this file using ",a.a.createElement(r.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"docker built -t foo/nginx ."),"."),a.a.createElement(r.MDXTag,{name:"p",components:n},"Running it: ",a.a.createElement(r.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"docker run -p 8000:80 --link node-app:app --name nginx-proxy foo/nginx")),a.a.createElement(r.MDXTag,{name:"p",components:n},"Since we expose 3000 for the node-app, we do not need to redo that."))}}])&&i(t.prototype,o),p&&i(t,p),n}();d.__docgenInfo={description:"",methods:[],displayName:"MDXContent"}}}]);
//# sourceMappingURL=manual-nginx-nginx-nodejs-docker.305817e8304de77c75ce.js.map