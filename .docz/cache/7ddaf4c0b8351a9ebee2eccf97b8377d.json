{"remainingRequest":"/Users/okeeffe_d/Business/Documentation/node_modules/babel-loader/lib/index.js?{\"presets\":[[\"/Users/okeeffe_d/Business/Documentation/node_modules/babel-preset-docz/dist/index.js\",{\"flow\":true,\"typescript\":false,\"parseProps\":true}]],\"plugins\":[[\"/Users/okeeffe_d/Business/Documentation/node_modules/docz-utils/lib/named-asset-import.js\",{\"loaderMap\":{\"svg\":{\"ReactComponent\":\"@svgr/webpack?-prettier,-svgo![path]\"}}}]],\"babelrc\":false,\"cacheCompression\":true,\"compact\":true}!/Users/okeeffe_d/Business/Documentation/manual/Testing/Regression-Testing.md","dependencies":[{"path":"/Users/okeeffe_d/Business/Documentation/manual/Testing/Regression-Testing.md","mtime":1548209344476},{"path":"/Users/okeeffe_d/Business/Documentation/node_modules/cache-loader/dist/cjs.js","mtime":1548134640245},{"path":"/Users/okeeffe_d/Business/Documentation/node_modules/babel-loader/lib/index.js","mtime":1548134640227}],"contextDependencies":[],"result":["function _typeof(obj){if(typeof Symbol===\"function\"&&typeof Symbol.iterator===\"symbol\"){_typeof=function _typeof(obj){return typeof obj;};}else{_typeof=function _typeof(obj){return obj&&typeof Symbol===\"function\"&&obj.constructor===Symbol&&obj!==Symbol.prototype?\"symbol\":typeof obj;};}return _typeof(obj);}function _objectWithoutProperties(source,excluded){if(source==null)return{};var target=_objectWithoutPropertiesLoose(source,excluded);var key,i;if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++){key=sourceSymbolKeys[i];if(excluded.indexOf(key)>=0)continue;if(!Object.prototype.propertyIsEnumerable.call(source,key))continue;target[key]=source[key];}}return target;}function _objectWithoutPropertiesLoose(source,excluded){if(source==null)return{};var target={};var sourceKeys=Object.keys(source);var key,i;for(i=0;i<sourceKeys.length;i++){key=sourceKeys[i];if(excluded.indexOf(key)>=0)continue;target[key]=source[key];}return target;}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\");}}function _defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}function _createClass(Constructor,protoProps,staticProps){if(protoProps)_defineProperties(Constructor.prototype,protoProps);if(staticProps)_defineProperties(Constructor,staticProps);return Constructor;}function _possibleConstructorReturn(self,call){if(call&&(_typeof(call)===\"object\"||typeof call===\"function\")){return call;}return _assertThisInitialized(self);}function _assertThisInitialized(self){if(self===void 0){throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");}return self;}function _getPrototypeOf(o){_getPrototypeOf=Object.setPrototypeOf?Object.getPrototypeOf:function _getPrototypeOf(o){return o.__proto__||Object.getPrototypeOf(o);};return _getPrototypeOf(o);}function _inherits(subClass,superClass){if(typeof superClass!==\"function\"&&superClass!==null){throw new TypeError(\"Super expression must either be null or a function\");}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,writable:true,configurable:true}});if(superClass)_setPrototypeOf(subClass,superClass);}function _setPrototypeOf(o,p){_setPrototypeOf=Object.setPrototypeOf||function _setPrototypeOf(o,p){o.__proto__=p;return o;};return _setPrototypeOf(o,p);}import React from'react';import{MDXTag}from'@mdx-js/tag';var MDXContent=/*#__PURE__*/function(_React$Component){_inherits(MDXContent,_React$Component);function MDXContent(props){var _this;_classCallCheck(this,MDXContent);_this=_possibleConstructorReturn(this,_getPrototypeOf(MDXContent).call(this,props));_this.layout=null;return _this;}_createClass(MDXContent,[{key:\"render\",value:function render(){var _this$props=this.props,components=_this$props.components,props=_objectWithoutProperties(_this$props,[\"components\"]);return React.createElement(MDXTag,{name:\"wrapper\",components:components},React.createElement(MDXTag,{name:\"h1\",components:components,props:{\"id\":\"css-regression-testing\"}},\"CSS Regression Testing\"),React.createElement(MDXTag,{name:\"p\",components:components},\"We can achieve CSS regression testing by using an assertion library in conjuction with Puppeteer and Pixel Diff.\"),React.createElement(MDXTag,{name:\"h2\",components:components,props:{\"id\":\"prequisites\"}},\"Prequisites\"),React.createElement(MDXTag,{name:\"h3\",components:components,props:{\"id\":\"using-yarn\"}},\"Using yarn\"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{\"className\":\"language-bash\"}},\"yarn install --dev mocha chai puppeteer pixelmatch pngfs babel-polyfill babel-preset-env babel-plugin-module-resolver\\n\")),React.createElement(MDXTag,{name:\"h3\",components:components,props:{\"id\":\"using-kratos\"}},\"Using kratos\"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{\"className\":\"language-bash\"}},\"kratos install js-controllers pixeldiff\\nkratos install js-test regression\\nshotgun run\\n\")),React.createElement(MDXTag,{name:\"h3\",components:components,props:{\"id\":\"folder-setup\"}},\"Folder setup\"),React.createElement(MDXTag,{name:\"p\",components:components},\"Ensure that you have a \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"regression\"),\" folder to store all the images.\"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{\"className\":\"language-bash\"}},\"# Example regression layout\\nregression\\n\\u251C\\u2500\\u2500 diff\\n\\u2502\\xA0\\xA0 \\u2514\\u2500\\u2500 test.png\\n\\u251C\\u2500\\u2500 src\\n\\u2502\\xA0\\xA0 \\u2514\\u2500\\u2500 test.png\\n\\u2514\\u2500\\u2500 temp\\n    \\u2514\\u2500\\u2500 test.png\\n\\n3 directories, 3 files\\n\")),React.createElement(MDXTag,{name:\"h2\",components:components,props:{\"id\":\"using-regression-cli\"}},\"Using Regression CLI\"),React.createElement(MDXTag,{name:\"h3\",components:components,props:{\"id\":\"preparation\"}},\"Preparation\"),React.createElement(MDXTag,{name:\"ol\",components:components},React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ol\"},\"Set the imports for the router file.\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ol\"},\"Set the dev router.\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ol\"},\"Set the array in the .puppeteer file.\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ol\"},\"Ensure the devRouter is being used.\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ol\"},\"Ensure app is running.\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ol\"},\"Run source to set the base image.\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ol\"},\"Run compare to compare source to current.\")),React.createElement(MDXTag,{name:\"h2\",components:components,props:{\"id\":\"application\"}},\"Application\"),React.createElement(MDXTag,{name:\"h3\",components:components,props:{\"id\":\"1-create-a-babelrc-file\"}},\"1. Create a babelrc file\"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{\"className\":\"language-json\"}},\"{\\n  \\\"presets\\\": [\\\"env\\\"],\\n  \\\"plugins\\\": [\\n    [\\n      \\\"module-resolver\\\",\\n      {\\n        \\\"alias\\\": {\\n          \\\"controllers\\\": \\\"./controllers\\\"\\n        }\\n      }\\n    ]\\n  ]\\n}\\n\")),React.createElement(MDXTag,{name:\"h3\",components:components,props:{\"id\":\"2-saving-a-screenshot\"}},\"2. Saving a screenshot\"),React.createElement(MDXTag,{name:\"p\",components:components},\"This is not the test itself but a simple node script to get the initial base working:\"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{\"className\":\"language-javascript\"}},\"const PixelDiff = require('./controllers/pixeldiff');\\nconst puppeteer = require('puppeteer');\\n\\n(async () => {\\n  const browser = await puppeteer.launch();\\n  const page = await browser.newPage();\\n\\n  console.log('Opening browser');\\n  await page.goto('http://localhost:3000');\\n\\n  const el = await page.$('.homeSplashFade');\\n  await el.screenshot({ path: 'regression/src/test.png' });\\n\\n  console.log('Closing browser');\\n  await browser.close();\\n\\n  /*\\n    console.log('Comparing images');\\n    const res = await PixelDiff.diff({imgOnePath: 'test.png', imgTwoPath: 'test2.png', dest: 'dest.png', output: true});\\n    console.log(res);\\n    */\\n})();\\n\")),React.createElement(MDXTag,{name:\"h3\",components:components,props:{\"id\":\"3-writing-the-test-file\"}},\"3. Writing the test file\"),React.createElement(MDXTag,{name:\"p\",components:components},\"Create your test file. Any example test file looks like the following:\"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{\"className\":\"language-javascript\"}},\"/**\\n * Regression tests\\n * @author Dennis O'Keeffe\\n */\\nrequire('babel-polyfill');\\nconst expect = require('chai').expect;\\nconst cwd = process.cwd();\\nconst PixelDiff = require('controllers/pixeldiff');\\nconst puppeteer = require('puppeteer');\\n\\nconsole.log(PixelDiff);\\nconsole.log(cwd);\\n\\nconst screenshot = async (selector, savePath, location = '/') => {\\n  const browser = await puppeteer.launch();\\n  const page = await browser.newPage();\\n\\n  console.log('Opening browser');\\n  await page.goto('http://localhost:3000');\\n\\n  const el = await page.$('#root');\\n  await el.screenshot({ path: savePath });\\n\\n  console.log('Closing browser');\\n  await browser.close();\\n};\\n\\ndescribe('It works functionality', () => {\\n  it('Expects true to be true', () => {\\n    expect(true).to.be.true;\\n  });\\n});\\n\\ndescribe('Image regression testing', () => {\\n  it('has no pixel difference', async () => {\\n    console.log('Comparing images');\\n    await screenshot('.homeSplashFade', cwd + '/regression/temp/test.png');\\n\\n    const res = await PixelDiff.diff({\\n      imgOnePath: cwd + '/regression/src/test.png',\\n      imgTwoPath: cwd + '/regression/temp/test.png',\\n      dest: cwd + '/regression/diff/test.png',\\n      output: true\\n    });\\n    expect(res).to.equal(0);\\n  });\\n});\\n\")),React.createElement(MDXTag,{name:\"h3\",components:components,props:{\"id\":\"4-running-the-test-from-the-cli\"}},\"4. Running the test from the CLI\"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{\"className\":\"language-bash\"}},\"mocha --compilers js:babel-core/register --timeout 0 ./test/regression/regression.mocha.js\\n\")));}}]);return MDXContent;}(React.Component);export{MDXContent as default};MDXContent.__docgenInfo={\"description\":\"\",\"methods\":[],\"displayName\":\"MDXContent\"};",{"version":3,"sources":["/Users/okeeffe_d/Business/Documentation/manual/Testing/Regression-Testing.md"],"names":["React","MDXTag","MDXContent","props","layout","components","Component"],"mappings":"omFACE,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,MAAT,KAAuB,aAAvB,C,GAGmBC,CAAAA,U,gFACnB,oBAAYC,KAAZ,CAAmB,4CACjB,4EAAMA,KAAN,GACA,MAAKC,MAAL,CAAc,IAAd,CAFiB,aAGlB,C,8DACQ,iBAC0B,KAAKD,KAD/B,CACCE,UADD,aACCA,UADD,CACgBF,KADhB,sDAGP,MAAO,qBAAC,MAAD,EACE,IAAI,CAAC,SADP,CAGE,UAAU,CAAEE,UAHd,EAG0B,oBAAC,MAAD,EAAQ,IAAI,CAAC,IAAb,CAAkB,UAAU,CAAEA,UAA9B,CAA0C,KAAK,CAAE,CAAC,KAAK,wBAAN,CAAjD,2BAH1B,CAIX,oBAAC,MAAD,EAAQ,IAAI,CAAC,GAAb,CAAiB,UAAU,CAAEA,UAA7B,qHAJW,CAKX,oBAAC,MAAD,EAAQ,IAAI,CAAC,IAAb,CAAkB,UAAU,CAAEA,UAA9B,CAA0C,KAAK,CAAE,CAAC,KAAK,aAAN,CAAjD,gBALW,CAMX,oBAAC,MAAD,EAAQ,IAAI,CAAC,IAAb,CAAkB,UAAU,CAAEA,UAA9B,CAA0C,KAAK,CAAE,CAAC,KAAK,YAAN,CAAjD,eANW,CAOX,oBAAC,MAAD,EAAQ,IAAI,CAAC,KAAb,CAAmB,UAAU,CAAEA,UAA/B,EAA2C,oBAAC,MAAD,EAAQ,IAAI,CAAC,MAAb,CAAoB,UAAU,CAAEA,UAAhC,CAA4C,UAAU,CAAC,KAAvD,CAA6D,KAAK,CAAE,CAAC,YAAY,eAAb,CAApE,4HAA3C,CAPW,CASX,oBAAC,MAAD,EAAQ,IAAI,CAAC,IAAb,CAAkB,UAAU,CAAEA,UAA9B,CAA0C,KAAK,CAAE,CAAC,KAAK,cAAN,CAAjD,iBATW,CAUX,oBAAC,MAAD,EAAQ,IAAI,CAAC,KAAb,CAAmB,UAAU,CAAEA,UAA/B,EAA2C,oBAAC,MAAD,EAAQ,IAAI,CAAC,MAAb,CAAoB,UAAU,CAAEA,UAAhC,CAA4C,UAAU,CAAC,KAAvD,CAA6D,KAAK,CAAE,CAAC,YAAY,eAAb,CAApE,8FAA3C,CAVW,CAcX,oBAAC,MAAD,EAAQ,IAAI,CAAC,IAAb,CAAkB,UAAU,CAAEA,UAA9B,CAA0C,KAAK,CAAE,CAAC,KAAK,cAAN,CAAjD,iBAdW,CAeX,oBAAC,MAAD,EAAQ,IAAI,CAAC,GAAb,CAAiB,UAAU,CAAEA,UAA7B,4BAAoE,oBAAC,MAAD,EAAQ,IAAI,CAAC,YAAb,CAA0B,UAAU,CAAEA,UAAtC,CAAkD,UAAU,CAAC,GAA7D,eAApE,oCAfW,CAgBX,oBAAC,MAAD,EAAQ,IAAI,CAAC,KAAb,CAAmB,UAAU,CAAEA,UAA/B,EAA2C,oBAAC,MAAD,EAAQ,IAAI,CAAC,MAAb,CAAoB,UAAU,CAAEA,UAAhC,CAA4C,UAAU,CAAC,KAAvD,CAA6D,KAAK,CAAE,CAAC,YAAY,eAAb,CAApE,2QAA3C,CAhBW,CA2BX,oBAAC,MAAD,EAAQ,IAAI,CAAC,IAAb,CAAkB,UAAU,CAAEA,UAA9B,CAA0C,KAAK,CAAE,CAAC,KAAK,sBAAN,CAAjD,yBA3BW,CA4BX,oBAAC,MAAD,EAAQ,IAAI,CAAC,IAAb,CAAkB,UAAU,CAAEA,UAA9B,CAA0C,KAAK,CAAE,CAAC,KAAK,aAAN,CAAjD,gBA5BW,CA6BX,oBAAC,MAAD,EAAQ,IAAI,CAAC,IAAb,CAAkB,UAAU,CAAEA,UAA9B,EACA,oBAAC,MAAD,EAAQ,IAAI,CAAC,IAAb,CAAkB,UAAU,CAAEA,UAA9B,CAA0C,UAAU,CAAC,IAArD,yCADA,CAEA,oBAAC,MAAD,EAAQ,IAAI,CAAC,IAAb,CAAkB,UAAU,CAAEA,UAA9B,CAA0C,UAAU,CAAC,IAArD,wBAFA,CAGA,oBAAC,MAAD,EAAQ,IAAI,CAAC,IAAb,CAAkB,UAAU,CAAEA,UAA9B,CAA0C,UAAU,CAAC,IAArD,0CAHA,CAIA,oBAAC,MAAD,EAAQ,IAAI,CAAC,IAAb,CAAkB,UAAU,CAAEA,UAA9B,CAA0C,UAAU,CAAC,IAArD,wCAJA,CAKA,oBAAC,MAAD,EAAQ,IAAI,CAAC,IAAb,CAAkB,UAAU,CAAEA,UAA9B,CAA0C,UAAU,CAAC,IAArD,2BALA,CAMA,oBAAC,MAAD,EAAQ,IAAI,CAAC,IAAb,CAAkB,UAAU,CAAEA,UAA9B,CAA0C,UAAU,CAAC,IAArD,sCANA,CAOA,oBAAC,MAAD,EAAQ,IAAI,CAAC,IAAb,CAAkB,UAAU,CAAEA,UAA9B,CAA0C,UAAU,CAAC,IAArD,8CAPA,CA7BW,CAsCX,oBAAC,MAAD,EAAQ,IAAI,CAAC,IAAb,CAAkB,UAAU,CAAEA,UAA9B,CAA0C,KAAK,CAAE,CAAC,KAAK,aAAN,CAAjD,gBAtCW,CAuCX,oBAAC,MAAD,EAAQ,IAAI,CAAC,IAAb,CAAkB,UAAU,CAAEA,UAA9B,CAA0C,KAAK,CAAE,CAAC,KAAK,yBAAN,CAAjD,6BAvCW,CAwCX,oBAAC,MAAD,EAAQ,IAAI,CAAC,KAAb,CAAmB,UAAU,CAAEA,UAA/B,EAA2C,oBAAC,MAAD,EAAQ,IAAI,CAAC,MAAb,CAAoB,UAAU,CAAEA,UAAhC,CAA4C,UAAU,CAAC,KAAvD,CAA6D,KAAK,CAAE,CAAC,YAAY,eAAb,CAApE,wMAA3C,CAxCW,CAsDX,oBAAC,MAAD,EAAQ,IAAI,CAAC,IAAb,CAAkB,UAAU,CAAEA,UAA9B,CAA0C,KAAK,CAAE,CAAC,KAAK,uBAAN,CAAjD,2BAtDW,CAuDX,oBAAC,MAAD,EAAQ,IAAI,CAAC,GAAb,CAAiB,UAAU,CAAEA,UAA7B,0FAvDW,CAwDX,oBAAC,MAAD,EAAQ,IAAI,CAAC,KAAb,CAAmB,UAAU,CAAEA,UAA/B,EAA2C,oBAAC,MAAD,EAAQ,IAAI,CAAC,MAAb,CAAoB,UAAU,CAAEA,UAAhC,CAA4C,UAAU,CAAC,KAAvD,CAA6D,KAAK,CAAE,CAAC,YAAY,qBAAb,CAApE,0pBAA3C,CAxDW,CA+EX,oBAAC,MAAD,EAAQ,IAAI,CAAC,IAAb,CAAkB,UAAU,CAAEA,UAA9B,CAA0C,KAAK,CAAE,CAAC,KAAK,yBAAN,CAAjD,6BA/EW,CAgFX,oBAAC,MAAD,EAAQ,IAAI,CAAC,GAAb,CAAiB,UAAU,CAAEA,UAA7B,2EAhFW,CAiFX,oBAAC,MAAD,EAAQ,IAAI,CAAC,KAAb,CAAmB,UAAU,CAAEA,UAA/B,EAA2C,oBAAC,MAAD,EAAQ,IAAI,CAAC,MAAb,CAAoB,UAAU,CAAEA,UAAhC,CAA4C,UAAU,CAAC,KAAvD,CAA6D,KAAK,CAAE,CAAC,YAAY,qBAAb,CAApE,+wCAA3C,CAjFW,CAiIX,oBAAC,MAAD,EAAQ,IAAI,CAAC,IAAb,CAAkB,UAAU,CAAEA,UAA9B,CAA0C,KAAK,CAAE,CAAC,KAAK,iCAAN,CAAjD,qCAjIW,CAkIX,oBAAC,MAAD,EAAQ,IAAI,CAAC,KAAb,CAAmB,UAAU,CAAEA,UAA/B,EAA2C,oBAAC,MAAD,EAAQ,IAAI,CAAC,MAAb,CAAoB,UAAU,CAAEA,UAAhC,CAA4C,UAAU,CAAC,KAAvD,CAA6D,KAAK,CAAE,CAAC,YAAY,eAAb,CAApE,iGAA3C,CAlIW,CAAP,CAqID,C,wBA7IqCL,KAAK,CAACM,S,SAAzBJ,U","sourcesContent":["\n  import React from 'react'\n  import { MDXTag } from '@mdx-js/tag'\n  \n\nexport default class MDXContent extends React.Component {\n  constructor(props) {\n    super(props)\n    this.layout = null\n  }\n  render() {\n    const { components, ...props } = this.props\n\n    return <MDXTag\n             name=\"wrapper\"\n             \n             components={components}><MDXTag name=\"h1\" components={components} props={{\"id\":\"css-regression-testing\"}}>{`CSS Regression Testing`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`We can achieve CSS regression testing by using an assertion library in conjuction with Puppeteer and Pixel Diff.`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"prequisites\"}}>{`Prequisites`}</MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"using-yarn\"}}>{`Using yarn`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-bash\"}}>{`yarn install --dev mocha chai puppeteer pixelmatch pngfs babel-polyfill babel-preset-env babel-plugin-module-resolver\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"using-kratos\"}}>{`Using kratos`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-bash\"}}>{`kratos install js-controllers pixeldiff\nkratos install js-test regression\nshotgun run\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"folder-setup\"}}>{`Folder setup`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Ensure that you have a `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`regression`}</MDXTag>{` folder to store all the images.`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-bash\"}}>{`# Example regression layout\nregression\n├── diff\n│   └── test.png\n├── src\n│   └── test.png\n└── temp\n    └── test.png\n\n3 directories, 3 files\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"using-regression-cli\"}}>{`Using Regression CLI`}</MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"preparation\"}}>{`Preparation`}</MDXTag>\n<MDXTag name=\"ol\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ol\">{`Set the imports for the router file.`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ol\">{`Set the dev router.`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ol\">{`Set the array in the .puppeteer file.`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ol\">{`Ensure the devRouter is being used.`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ol\">{`Ensure app is running.`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ol\">{`Run source to set the base image.`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ol\">{`Run compare to compare source to current.`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"application\"}}>{`Application`}</MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"1-create-a-babelrc-file\"}}>{`1. Create a babelrc file`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-json\"}}>{`{\n  \"presets\": [\"env\"],\n  \"plugins\": [\n    [\n      \"module-resolver\",\n      {\n        \"alias\": {\n          \"controllers\": \"./controllers\"\n        }\n      }\n    ]\n  ]\n}\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"2-saving-a-screenshot\"}}>{`2. Saving a screenshot`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`This is not the test itself but a simple node script to get the initial base working:`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-javascript\"}}>{`const PixelDiff = require('./controllers/pixeldiff');\nconst puppeteer = require('puppeteer');\n\n(async () => {\n  const browser = await puppeteer.launch();\n  const page = await browser.newPage();\n\n  console.log('Opening browser');\n  await page.goto('http://localhost:3000');\n\n  const el = await page.\\$('.homeSplashFade');\n  await el.screenshot({ path: 'regression/src/test.png' });\n\n  console.log('Closing browser');\n  await browser.close();\n\n  /*\n    console.log('Comparing images');\n    const res = await PixelDiff.diff({imgOnePath: 'test.png', imgTwoPath: 'test2.png', dest: 'dest.png', output: true});\n    console.log(res);\n    */\n})();\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"3-writing-the-test-file\"}}>{`3. Writing the test file`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Create your test file. Any example test file looks like the following:`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-javascript\"}}>{`/**\n * Regression tests\n * @author Dennis O'Keeffe\n */\nrequire('babel-polyfill');\nconst expect = require('chai').expect;\nconst cwd = process.cwd();\nconst PixelDiff = require('controllers/pixeldiff');\nconst puppeteer = require('puppeteer');\n\nconsole.log(PixelDiff);\nconsole.log(cwd);\n\nconst screenshot = async (selector, savePath, location = '/') => {\n  const browser = await puppeteer.launch();\n  const page = await browser.newPage();\n\n  console.log('Opening browser');\n  await page.goto('http://localhost:3000');\n\n  const el = await page.\\$('#root');\n  await el.screenshot({ path: savePath });\n\n  console.log('Closing browser');\n  await browser.close();\n};\n\ndescribe('It works functionality', () => {\n  it('Expects true to be true', () => {\n    expect(true).to.be.true;\n  });\n});\n\ndescribe('Image regression testing', () => {\n  it('has no pixel difference', async () => {\n    console.log('Comparing images');\n    await screenshot('.homeSplashFade', cwd + '/regression/temp/test.png');\n\n    const res = await PixelDiff.diff({\n      imgOnePath: cwd + '/regression/src/test.png',\n      imgTwoPath: cwd + '/regression/temp/test.png',\n      dest: cwd + '/regression/diff/test.png',\n      output: true\n    });\n    expect(res).to.equal(0);\n  });\n});\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"4-running-the-test-from-the-cli\"}}>{`4. Running the test from the CLI`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-bash\"}}>{`mocha --compilers js:babel-core/register --timeout 0 ./test/regression/regression.mocha.js\n`}</MDXTag></MDXTag>\n           </MDXTag>\n  }\n}\n  "]}]}