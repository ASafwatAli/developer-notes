{"remainingRequest":"/Users/okeeffe_d/Project-Imposter/developer-notes/node_modules/docz-core/node_modules/babel-loader/lib/index.js??ref--6-1!/Users/okeeffe_d/Project-Imposter/developer-notes/node_modules/@mdx-js/loader/index.js??ref--6-2!/Users/okeeffe_d/Project-Imposter/developer-notes/node_modules/source-map-loader/index.js!/Users/okeeffe_d/Project-Imposter/developer-notes/manual/React-Native/React-Native-Redux.md","dependencies":[{"path":"/Users/okeeffe_d/Project-Imposter/developer-notes/manual/React-Native/React-Native-Redux.md","mtime":1561613230771},{"path":"/Users/okeeffe_d/Project-Imposter/developer-notes/node_modules/cache-loader/dist/cjs.js","mtime":1561535530324},{"path":"/Users/okeeffe_d/Project-Imposter/developer-notes/node_modules/docz-core/node_modules/babel-loader/lib/index.js","mtime":1560300163820},{"path":"/Users/okeeffe_d/Project-Imposter/developer-notes/node_modules/@mdx-js/loader/index.js","mtime":1561535530532},{"path":"/Users/okeeffe_d/Project-Imposter/developer-notes/node_modules/source-map-loader/index.js","mtime":1548285283521}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9vYmplY3RXaXRob3V0UHJvcGVydGllcyBmcm9tIi9Vc2Vycy9va2VlZmZlX2QvUHJvamVjdC1JbXBvc3Rlci9kZXZlbG9wZXItbm90ZXMvbm9kZV9tb2R1bGVzL2JhYmVsLXByZXNldC1yZWFjdC1hcHAvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzIjsvKiBAanN4IG1keCAqL2ltcG9ydCBSZWFjdCBmcm9tJ3JlYWN0JztpbXBvcnR7bWR4fWZyb20nQG1keC1qcy9yZWFjdCc7LyogQGpzeCBtZHggKi92YXIgbWFrZVNob3J0Y29kZT1mdW5jdGlvbiBtYWtlU2hvcnRjb2RlKG5hbWUpe3JldHVybiBmdW5jdGlvbiBNRFhEZWZhdWx0U2hvcnRjb2RlKHByb3BzKXtjb25zb2xlLndhcm4oIkNvbXBvbmVudCAiK25hbWUrIiB3YXMgbm90IGltcG9ydGVkLCBleHBvcnRlZCwgb3IgcHJvdmlkZWQgYnkgTURYUHJvdmlkZXIgYXMgZ2xvYmFsIHNjb3BlIik7cmV0dXJuIG1keCgiZGl2Iixwcm9wcyk7fTt9O3ZhciBsYXlvdXRQcm9wcz17fTt2YXIgTURYTGF5b3V0PSJ3cmFwcGVyIjtleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBNRFhDb250ZW50KF9yZWYpe3ZhciBjb21wb25lbnRzPV9yZWYuY29tcG9uZW50cyxwcm9wcz1fb2JqZWN0V2l0aG91dFByb3BlcnRpZXMoX3JlZixbImNvbXBvbmVudHMiXSk7cmV0dXJuIG1keChNRFhMYXlvdXQsT2JqZWN0LmFzc2lnbih7fSxsYXlvdXRQcm9wcyxwcm9wcyx7Y29tcG9uZW50czpjb21wb25lbnRzLG1keFR5cGU6Ik1EWExheW91dCJ9KSxtZHgoImgxIix7ImlkIjoicmVhY3QtbmF0aXZlLXdpdGgtcmVkdXgifSwiUmVhY3QgTmF0aXZlIHdpdGggUmVkdXgiKSxtZHgoInAiLG51bGwsIk5vdyB0aGF0IFJlZHV4VGh1bmsgaXMgc2V0IHVwLCB3ZSBjYW4gdXNlIGl0IGluc2lkZSBhbiBhY3Rpb24gY3JlYXRvci4iKSxtZHgoInByZSIsbnVsbCxtZHgoImNvZGUiLE9iamVjdC5hc3NpZ24oe3BhcmVudE5hbWU6InByZSJ9LHt9KSwiLy8gQWN0aW9uIENyZWF0b3JzXG5leHBvcnQgY29uc3Qgc2VsZWN0QWN0aW9uID0gKHsgZW1haWwsIHBhc3N3b3JkIH0pID0+IHtcbiAgICByZXR1cm4gKGRpc3BhdGNoKSAtPiB7XG4gICAgICAgIGZpcmViYXNlLmF1dGgoKS5zaWduSW5XaXRoRW1haWxBbmRQYXNzd29yZChlbWFpbCwgcGFzc3dvcmQpXG4gICAgICAgICAgICAudGhlbih1c2VyID0+IGNvbnNvbGUubG9nKHVzZXIpKVxuICAgIH07XG59O1xuIikpLG1keCgicCIsbnVsbCwiU28sIHdoYXQgaXMgUmVkdXhUaHVuayBkb2luZyBmb3IgdXM/IiksbWR4KCJwIixudWxsLCJOb3cgdGhhdCB3ZSBoYXZlIFJlZHV4VGh1bmssIGl0IHdpbGwgY2hhbmdlIGhvdyB3ZSBjYWxsIHRoZSBhY3Rpb24gY3JlYXRvci4iKSxtZHgoInAiLG51bGwsIlRoZSBBY3Rpb24gQ3JlYXRvciAiLG1keCgiaW5saW5lQ29kZSIse3BhcmVudE5hbWU6InAifSwiV0lMTCBOT1cgUkVUVVJOIEEgRlVOQ1RJT04iKSwiLiBJZiBSZWR1eFRodW5rIHNlZXMgYSBmdW5jdGlvbiByZXR1cm5lZCwgaXQgd2lsbCBzZW5kIG9mZiBhbiBhY3Rpb24gd2l0aCBhIGRpc3BhdGNoZXIgYW5kIGltbWVkaWF0ZWx5IGNhbGwgdGhhdCBmdW5jdGlvbi4iKSxtZHgoInAiLG51bGwsIlRoaXMgd2lsbCB0aGVuIHN0YXJ0IG91ciBsb2dpbiByZXF1ZXN0LiBUaGUgYXBwIHdpbGwgd2FpdCBhbmQgdGhlIC50aGVuIHdpbGwgYXV0b21hdGljYWxseSBydW4gYW5kIHdlIHdpbGwgdGhlbiBkaXNwYXRjaCBvdXIgYWN0aW9uLiIpLG1keCgicHJlIixudWxsLG1keCgiY29kZSIsT2JqZWN0LmFzc2lnbih7cGFyZW50TmFtZToicHJlIn0se30pLCIvLyBBY3Rpb24gQ3JlYXRvcnNcbmV4cG9ydCBjb25zdCBzZWxlY3RBY3Rpb24gPSAoeyBlbWFpbCwgcGFzc3dvcmQgfSkgPT4ge1xuICAgIHJldHVybiAoZGlzcGF0Y2gpIC0+IHtcbiAgICAgICAgZmlyZWJhc2UuYXV0aCgpLnNpZ25JbldpdGhFbWFpbEFuZFBhc3N3b3JkKGVtYWlsLCBwYXNzd29yZClcbiAgICAgICAgICAgIC50aGVuKHVzZXIgPT4ge1xuICAgICAgICAgICAgICAgIGRpc3BhdGNoKHsgdHlwZTogJ0xPR0lOX1VTRVJfU1VDQ0VTUycsIHBheWxvYWQ6IHVzZXIgfSk7XG4gICAgICAgICAgICB9KTtcbiAgICB9O1xufTtcbiIpKSxtZHgoImRpdiIse2lkOiJuYXYifSksbWR4KCJociIsbnVsbCksbWR4KCJoMiIseyJpZCI6ImRlYWxpbmctd2l0aC1uYXZpZ2F0aW9uIn0sIkRlYWxpbmcgd2l0aCBOYXZpZ2F0aW9uIiksbWR4KCJwIixudWxsLCJBcyBvcHBvc2VkIHRvIFJlYWN0IHdpdGggIixtZHgoImlubGluZUNvZGUiLHtwYXJlbnROYW1lOiJwIn0sIlJlYWN0LVJvdXRlciIpLCIsIFJlYWN0IE5hdGl2ZSBkb2Vzbid0IG5lY2Vzc2FyaWx5IGhhdmUgb25lLiIpLG1keCgicCIsbnVsbCwiSW4gdGhpcyBjYXNlLCB3ZSdsbCBiZSB1c2luZyB0aGUgc29sdXRpb24gY2FsbGVkICIsbWR4KCJpbmxpbmVDb2RlIix7cGFyZW50TmFtZToicCJ9LCJSZWFjdC1OYXRpdmUtUm91dGVyLUZsdXgiKSwiIHRvIGhlbHAgd2l0aCBuYXZpZ2F0aW9uLiIpLG1keCgicCIsbnVsbCwiSG93IGRvZXMgaXQgd29yaz8iKSxtZHgoInAiLG51bGwsIkltYWdpbmUgYW4gYXBwIHRoYXQgcmVxdWlyZXMgYXV0aGVudGljYXRpb24uIFdlIGNvdWxkIHRoZW4gaGF2ZSBhbm90aGVyIHNjZW5lIHdoZXJlIHRoZSBpcyBhIE1hc3Rlci1EZXRhaWwgcmVsYXRpb25zaGlwLiIpLG1keCgicCIsbnVsbCwiV2UgZXNzZW50aWFsbHkgZGVmaW5lIGEgIixtZHgoImlubGluZUNvZGUiLHtwYXJlbnROYW1lOiJwIn0sIlNjZW5lIiksIiBmb3IgZWFjaCBkaXN0aW5jdCBzY3JlZW5zLiBGb3IgZXhhbXBsZS4iKSxtZHgoInByZSIsbnVsbCxtZHgoImNvZGUiLE9iamVjdC5hc3NpZ24oe3BhcmVudE5hbWU6InByZSJ9LHt9KSwiPFNjZW5lIGtleT1cImxvZ2luXCIgY29tcG9uZW50PXtMb2dpbkZvcm19IC8+XG48U2NlbmUga2V5PVwiZW1wbG95ZWVMaXN0XCIgY29tcG9uZW50PXtFbXBsb3llZUxpc3R9IC8+XG48U2NlbmUga2V5PVwiZW1wbG95ZWVEZXRhaWxcIiBjb21wb25lbnQ9e0VtcGxveWVlRGV0YWlsfSAvPlxuXG4vLyBBbGwgdGhlIHByb3BzIHlvdSBjYW4gcGFzcyB0byB0aGUgc2NlbmVcblxuPFNjZW5lXG4gICAga2V5PVwibG9naW5cIiAgICAgICAgICAgICAgICAgLy8gY2FsbCBBY3Rpb25zLmxvZ2luKCkgdG8gc2hvdyB0aGlzIHNjcmVlblxuICAgIGNvbXBvbmVudD17TG9naW5Gb3JtfSAgICAgICAvLyBjb21wb25lbnQgdG8gc2hvd1xuICAgIHRpdGxlPVwiTG9naW5cIiAgICAgICAgICAgICAgIC8vIG1ha2UgbmF2IGJhciBhbmQgZ2l2ZSBpdCBhIHRpdGxlIC0gdGhpcyBpcyBidWlsdCBpblxuICAgIGluaXRpYWwgICAgICAgICAgICAgICAgICAgICAvLyBkZWZpbmUgdGhlIGZpcnN0IHNjcmVlbiB0byBzaG93XG4vPlxuIikpLG1keCgiZGl2Iix7aWQ6Im5hdjIifSksbWR4KCJoMyIseyJpZCI6Ii0tLS0tbmF2aWdhdGlvbi1pbi10aGUtcm91dGVyIn0sIi0tLS0gTmF2aWdhdGlvbiBpbiB0aGUgUm91dGVyIiksbWR4KCJwcmUiLG51bGwsbWR4KCJjb2RlIixPYmplY3QuYXNzaWduKHtwYXJlbnROYW1lOiJwcmUifSx7fSksIi8vIENyZWF0ZSBhIHJvdXRlci5qc1xuXG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgU2NlbmUsIFJvdXRlciB9IGZyb20gJ3JlYWN0LW5hdGl2ZS1yb3V0ZXItZmx1eCc7XG5cbi8vIHNjZW5lLXRhcmdldFxuaW1wb3J0IEV4YW1wbGVDb21wb25lbnQgZnJvbSAnLi9jb21wb25lbnRzL2V4YW1wbGVjb21wb25lbnQvRXhhbXBsZUNvbXBvbmVudCc7XG5pbXBvcnQgVGFibGUgZnJvbSAnLi9jb21wb25lbnRzL3RhYmxlL1RhYmxlJztcblxuY29uc3QgUm91dGVyQ29tcG9uZW50ID0gKCkgPT4ge1xuICAgIHJldHVybiAoXG4gICAgICAgIDxSb3V0ZXI+XG4gICAgICAgICAgICA8U2NlbmUga2V5PVwiZXhhbXBsZVwiIGNvbXBvbmVudD17RXhhbXBsZUNvbXBvbmVudH0gdGl0bGU9XCJBcHBcIiAvPlxuICAgICAgICAgICAgPFNjZW5lIGtleT1cInRhYmxlXCIgY29tcG9uZW50PXtUYWJsZX0gdGl0bGU9XCJUYWJsZVwiIGluaXRpYWwgLz5cbiAgICAgICAgPC9Sb3V0ZXI+XG4gICAgKTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IFJvdXRlckNvbXBvbmVudDtcblxuLy8gaW4gYXBwLmpzXG5cbi4uLlxuaW1wb3J0IFJvdXRlciBmcm9tICcuL3JvdXRlcic7XG5cbmNvbnN0IEFwcCA9ICgpID0+IHtcblxuICAgIGNvbnN0IHN0b3JlID0gY3JlYXRlU3RvcmUocmVkdWNlcnMsIHt9LCBhcHBseU1pZGRsZXdhcmUoUmVkdXhUaHVuaykpO1xuXG4gICAgcmV0dXJuIChcbiAgICAgICAgPFByb3ZpZGVyIHN0b3JlPXtzdG9yZX0+XG4gICAgICAgICAgICA8Um91dGVyIC8+XG4gICAgICAgIDwvUHJvdmlkZXI+XG4gICAgKTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgQXBwO1xuIikpLG1keCgicCIsbnVsbCwiU28gaG93IGRvIHdlIG1vdmUgYmV0d2VlbiB0aGVzZSBzY2VuZXM/IiksbWR4KCJkaXYiLHtpZDoibmF2MyJ9KSxtZHgoImgzIix7ImlkIjoiLS0tLS1uYXZpZ2F0aW5nLWJldHdlZW4tcm91dGVzIn0sIi0tLS0gTmF2aWdhdGluZyBiZXR3ZWVuIHJvdXRlcyIpLG1keCgicCIsbnVsbCwiTmF2aWdhdGlvbiB3aWxsIGhhcHBlbiBmcm9tIGFuIGFjdGlvbi4iKSxtZHgoInByZSIsbnVsbCxtZHgoImNvZGUiLE9iamVjdC5hc3NpZ24oe3BhcmVudE5hbWU6InByZSJ9LHt9KSwiLy8gaW1wb3J0IGFjdGlvbnNcbmltcG9ydCB7IEFjdGlvbnMgfSBmcm9tICdyZWFjdC1uYXRpdmUtcm91dGVyLWZsdXgnO1xuXG4vLyBBY3Rpb24gQ3JlYXRvcnNcbmV4cG9ydCBjb25zdCBsb2dpblVzZXJTdWNjZXNzID0gKGRpc3BhdGNoLCB1c2VyKSA9PiB7XG4gICAgZGlzcGF0Y2goe1xuICAgICAgICB0eXBlOiBMT0dJTl9VU0VSX1NVQ0NFU1MsXG4gICAgICAgIHBheWxvYWQ6IHVzZXJcbiAgICB9KTtcblxuICAgIEFjdGlvbnMuZW1wbG95ZWVMaXN0KCk7IC8vIHRoaXMgbWV0aG9kIGNvbWVzIGZyb20gdGhlIGtleSBwcm9wZXJ0eVxufTtcbiIpKSxtZHgoImRpdiIse2lkOiJuYXY0In0pLG1keCgiaDMiLHsiaWQiOiItLS0tLWdyb3VwaW5nLXNjZW5lcy13aXRoLWJ1Y2tldHMifSwiLS0tLSBHcm91cGluZyBTY2VuZXMgd2l0aCAnQnVja2V0cyciKSxtZHgoInAiLG51bGwsIk1ha2luZyBkZWNpc2lvbnMgb24gaG93IHRoZSBoZWFkZXIgc2hvdWxkIHJlbmRlci4iKSxtZHgoInAiLG51bGwsIldlIGNhbiBkbyAiLG1keCgiaW5saW5lQ29kZSIse3BhcmVudE5hbWU6InAifSwic2NlbmUgbmVzdGluZyIpLCIgdG8gZ3JvdXAgdGhlc2Ugc2NyZWVucy4gVGhlcmUgaXMgb25lICdnb3RjaGEnIHRob3VnaC4gTm93IGZvciB0aGUgYWN0aW9ucywgd2UgbmVlZCB0byBhY3R1YWxseSB1c2UgQWN0aW9ucy5tYWluKCkuIiksbWR4KCJwcmUiLG51bGwsbWR4KCJjb2RlIixPYmplY3QuYXNzaWduKHtwYXJlbnROYW1lOiJwcmUifSx7fSksIi8vIHJvdXRlci5qc1xuXG5jb25zdCBSb3V0ZXJDb21wb25lbnQgPSAoKSA9PiB7XG4gICAgcmV0dXJuIChcbiAgICAgICAgPFJvdXRlcj5cbiAgICAgICAgICAgIDxTY2VuZSBrZXk9XCJhdXRoXCI+XG4gICAgICAgICAgICAgICAgPFNjZW5lIGtleT1cImxvZ2luXCIgY29tcG9uZW50PXtMb2dpbn0gdGl0bGU9XCJMb2dpblwiIC8+XG4gICAgICAgICAgICA8L1NjZW5lPlxuICAgICAgICAgICAgPFNjZW5lIGtleT1cImZsb3dcIj5cbiAgICAgICAgICAgICAgICA8U2NlbmUga2V5PVwiZXhhbXBsZVwiIGNvbXBvbmVudD17RXhhbXBsZUNvbXBvbmVudH0gdGl0bGU9XCJBcHBcIiAvPlxuICAgICAgICAgICAgICAgIDxTY2VuZVxuICAgICAgICAgICAgICAgICAgICAvLyBmb3IgYWN0aW9uLCB5b3Ugbm9ybWFsbHkgY2FsbCBBY3Rpb25zLmtleSgpXG4gICAgICAgICAgICAgICAgICAgIG9uUmlnaHQ9eygpID0+IGNvbnNvbGUubG9nKCdyaWdodCEhIScpfVxuICAgICAgICAgICAgICAgICAgICByaWdodFRpdGxlPVwiQWRkXCJcbiAgICAgICAgICAgICAgICAgICAga2V5PVwidGFibGVcIlxuICAgICAgICAgICAgICAgICAgICBjb21wb25lbnQ9e1RhYmxlfVxuICAgICAgICAgICAgICAgICAgICB0aXRsZT1cIlRhYmxlXCJcbiAgICAgICAgICAgICAgICAgICAgaW5pdGlhbFxuICAgICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICA8L1NjZW5lPlxuICAgICAgICA8L1JvdXRlcj5cbiAgICApO1xufTtcbiIpKSxtZHgoInAiLG51bGwsIldlIGNhbiB1c2UgdGhlICIsbWR4KCJpbmxpbmVDb2RlIix7cGFyZW50TmFtZToicCJ9LCJpbml0aWFsIiksIiBwcm9wIHdpdGhpbiB0aGVzZSAiLG1keCgiaW5saW5lQ29kZSIse3BhcmVudE5hbWU6InAifSwiYnVja2V0cyIpLCIgdG8gbGV0IHdoaWNoIGNvbXBvbmVudCB3aXRoaW4gYSBidWNrZXQgdG8gaGF2ZSBhbiBpbml0aWFsIHByb3AiKSxtZHgoImgzIix7ImlkIjoiLS0tLS1hY3Rpb25zLXRvLW5hdmlnYXRlLWJldHdlZW4tYnVja2V0cyJ9LCItLS0tIEFjdGlvbnMgdG8gbmF2aWdhdGUgYmV0d2VlbiBidWNrZXRzIiksbWR4KCJwIixudWxsLCJUaGVzZSBhY3Rpb25zIGNhbiBiZSBhZGRlZCB1c2luZyIpLG1keCgicHJlIixudWxsLG1keCgiY29kZSIsT2JqZWN0LmFzc2lnbih7cGFyZW50TmFtZToicHJlIn0se30pLCJpbXBvcnQgeyBBY3Rpb25zIH0gZnJvbSAncmVhY3QtbmF0aXZlLXJvdXRlci1mbHV4JztcblxuLy8gQWN0aW9uIENyZWF0b3JzIC0gZXhhbW1wbGUgdGh1bmsgYWN0aW9uIGNyZWF0b3JcbmNvbnN0IGxvZ2luVXNlclN1Y2Nlc3MgPSAoZGlzcGF0Y2gsIHVzZXIpID0+IHtcbiAgICBkaXNwYXRjaCh7XG4gICAgICAgIHR5cGU6IExPR0lOX1VTRVJfU1VDQ0VTUyxcbiAgICAgICAgcGF5bG9hZDogdXNlclxuICAgIH0pO1xuXG4gICAgQWN0aW9ucy5lbXBsb3llZUxpc3QoKTtcbn1cbiIpKSxtZHgoImRpdiIse2lkOiJuYXY1In0pLG1keCgiaDMiLHsiaWQiOiItLS0tLWZvcm0tdXBkYXRlcy1hdC1hLXJlZHVjZXItbGV2ZWwtLWR5bmFtaWMtcHJvcGVydHktdXBkYXRlcyJ9LCItLS0tIEZvcm0gdXBkYXRlcyBhdCBhIHJlZHVjZXIgbGV2ZWwgLyBEeW5hbWljIFByb3BlcnR5IHVwZGF0ZXMiKSxtZHgoInAiLG51bGwsIkV4YW1wbGUgcmVkdWNlciBmdW5jdGlvbiB3aXRoIEVTNiBkeW5hbWljIGNoYW5nZS4iKSxtZHgoInByZSIsbnVsbCxtZHgoImNvZGUiLE9iamVjdC5hc3NpZ24oe3BhcmVudE5hbWU6InByZSJ9LHt9KSwiZXhwb3J0IGRlZmF1bHQgKHN0YXRlID0gSU5JVElBTF9TVEFURSwgYWN0aW9uKSA9PiB7XG4gICAgc3dpdGNoIChhY3Rpb24udHlwZSkge1xuICAgICAgICBjYXNlIEVNUExPWUVFX1VQREFURTpcbiAgICAgICAgICAgIHJldHVybiB7Li4uc3RhdGUsIFthY3Rpb24ucGF5bG9hZC5wcm9wXTogYWN0aW9uLnBheWxvYWQudmFsdWV9O1xuICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgcmV0dXJuIHN0YXRlO1xuICAgIH1cbn1cbiIpKSk7fWlmKHR5cGVvZiBNRFhDb250ZW50IT09J3VuZGVmaW5lZCcmJk1EWENvbnRlbnQmJk1EWENvbnRlbnQ9PT1PYmplY3QoTURYQ29udGVudCkmJk9iamVjdC5pc0V4dGVuc2libGUoTURYQ29udGVudCkpe09iamVjdC5kZWZpbmVQcm9wZXJ0eShNRFhDb250ZW50LCdfX2ZpbGVtZXRhJyx7ZW51bWVyYWJsZTp0cnVlLGNvbmZpZ3VyYWJsZTp0cnVlLHZhbHVlOntuYW1lOiJNRFhDb250ZW50IixmaWxlbmFtZToibWFudWFsL1JlYWN0LU5hdGl2ZS9SZWFjdC1OYXRpdmUtUmVkdXgubWQifX0pO31NRFhDb250ZW50LmlzTURYQ29tcG9uZW50PXRydWU7"},{"version":3,"sources":["/Users/okeeffe_d/Project-Imposter/developer-notes/manual/React-Native/React-Native-Redux.md"],"names":["React","mdx","makeShortcode","name","MDXDefaultShortcode","props","console","warn","layoutProps","MDXLayout","MDXContent","components","isMDXComponent"],"mappings":"4LAAA,cACE,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,GAAT,KAAoB,eAApB,CACA,cAGF,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAAAC,IAAI,QAAI,SAASC,CAAAA,mBAAT,CAA6BC,KAA7B,CAAoC,CAChEC,OAAO,CAACC,IAAR,CAAa,aAAeJ,IAAf,CAAsB,yEAAnC,EACA,MAAO,WAASE,KAAT,CAAP,CACD,CAHyB,EAA1B,CAKA,GAAMG,CAAAA,WAAW,CAAG,EAApB,CAGA,GAAMC,CAAAA,SAAS,CAAG,SAAlB,CACA,cAAe,SAASC,CAAAA,UAAT,MAGZ,IAFDC,CAAAA,UAEC,MAFDA,UAEC,CADEN,KACF,+CACD,MAAO,KAAC,SAAD,kBAAeG,WAAf,CAAgCH,KAAhC,EAAuC,UAAU,CAAEM,UAAnD,CAA+D,OAAO,CAAC,WAAvE,GACL,SAAQ,CACN,KAAM,yBADA,CAAR,2BADK,CAIL,sFAJK,CAKL,eAAK,0BAAM,UAAU,CAAC,KAAjB,EAA2B,EAA3B,4OAAL,CALK,CAaL,oDAbK,CAcL,2FAdK,CAeL,mCAA0B,kBAAY,UAAU,CAAC,GAAvB,+BAA1B,8HAfK,CAgBL,oJAhBK,CAiBL,eAAK,0BAAM,UAAU,CAAC,KAAjB,EAA2B,EAA3B,sTAAL,CAjBK,CA2BL,WAAK,EAAE,CAAC,KAAR,EA3BK,CA4BL,cA5BK,CA6BL,SAAQ,CACN,KAAM,yBADA,CAAR,2BA7BK,CAgCL,yCAAgC,kBAAY,UAAU,CAAC,GAAvB,iBAAhC,gDAhCK,CAiCL,iEAAwD,kBAAY,UAAU,CAAC,GAAvB,6BAAxD,6BAjCK,CAkCL,iCAlCK,CAmCL,wIAnCK,CAoCL,wCAA+B,kBAAY,UAAU,CAAC,GAAvB,UAA/B,4CApCK,CAqCL,eAAK,0BAAM,UAAU,CAAC,KAAjB,EAA2B,EAA3B,ygBAAL,CArCK,CAkDL,WAAK,EAAE,CAAC,MAAR,EAlDK,CAmDL,SAAQ,CACN,KAAM,+BADA,CAAR,iCAnDK,CAsDL,eAAK,0BAAM,UAAU,CAAC,KAAjB,EAA2B,EAA3B,y0BAAL,CAtDK,CA4FL,uDA5FK,CA6FL,WAAK,EAAE,CAAC,MAAR,EA7FK,CA8FL,SAAQ,CACN,KAAM,gCADA,CAAR,kCA9FK,CAiGL,sDAjGK,CAkGL,eAAK,0BAAM,UAAU,CAAC,KAAjB,EAA2B,EAA3B,2TAAL,CAlGK,CA+GL,WAAK,EAAE,CAAC,MAAR,EA/GK,CAgHL,SAAQ,CACN,KAAM,mCADA,CAAR,uCAhHK,CAmHL,iEAnHK,CAoHL,0BAAiB,kBAAY,UAAU,CAAC,GAAvB,kBAAjB,uHApHK,CAqHL,eAAK,0BAAM,UAAU,CAAC,KAAjB,EAA2B,EAA3B,uuBAAL,CArHK,CA6IL,+BAAsB,kBAAY,UAAU,CAAC,GAAvB,YAAtB,uBAAgG,kBAAY,UAAU,CAAC,GAAvB,YAAhG,mEA7IK,CA8IL,SAAQ,CACN,KAAM,0CADA,CAAR,4CA9IK,CAiJL,gDAjJK,CAkJL,eAAK,0BAAM,UAAU,CAAC,KAAjB,EAA2B,EAA3B,qRAAL,CAlJK,CA8JL,WAAK,EAAE,CAAC,MAAR,EA9JK,CA+JL,SAAQ,CACN,KAAM,gEADA,CAAR,mEA/JK,CAkKL,iEAlKK,CAmKL,eAAK,0BAAM,UAAU,CAAC,KAAjB,EAA2B,EAA3B,yPAAL,CAnKK,CAAP,CA6KD,C,qRAEDD,UAAU,CAACE,cAAX,CAA4B,IAA5B","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"react-native-with-redux\"\n    }}>{`React Native with Redux`}</h1>\n    <p>{`Now that ReduxThunk is set up, we can use it inside an action creator.`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`// Action Creators\nexport const selectAction = ({ email, password }) => {\n    return (dispatch) -> {\n        firebase.auth().signInWithEmailAndPassword(email, password)\n            .then(user => console.log(user))\n    };\n};\n`}</code></pre>\n    <p>{`So, what is ReduxThunk doing for us?`}</p>\n    <p>{`Now that we have ReduxThunk, it will change how we call the action creator.`}</p>\n    <p>{`The Action Creator `}<inlineCode parentName=\"p\">{`WILL NOW RETURN A FUNCTION`}</inlineCode>{`. If ReduxThunk sees a function returned, it will send off an action with a dispatcher and immediately call that function.`}</p>\n    <p>{`This will then start our login request. The app will wait and the .then will automatically run and we will then dispatch our action.`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`// Action Creators\nexport const selectAction = ({ email, password }) => {\n    return (dispatch) -> {\n        firebase.auth().signInWithEmailAndPassword(email, password)\n            .then(user => {\n                dispatch({ type: 'LOGIN_USER_SUCCESS', payload: user });\n            });\n    };\n};\n`}</code></pre>\n    <div id=\"nav\"></div>\n    <hr></hr>\n    <h2 {...{\n      \"id\": \"dealing-with-navigation\"\n    }}>{`Dealing with Navigation`}</h2>\n    <p>{`As opposed to React with `}<inlineCode parentName=\"p\">{`React-Router`}</inlineCode>{`, React Native doesn't necessarily have one.`}</p>\n    <p>{`In this case, we'll be using the solution called `}<inlineCode parentName=\"p\">{`React-Native-Router-Flux`}</inlineCode>{` to help with navigation.`}</p>\n    <p>{`How does it work?`}</p>\n    <p>{`Imagine an app that requires authentication. We could then have another scene where the is a Master-Detail relationship.`}</p>\n    <p>{`We essentially define a `}<inlineCode parentName=\"p\">{`Scene`}</inlineCode>{` for each distinct screens. For example.`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`<Scene key=\"login\" component={LoginForm} />\n<Scene key=\"employeeList\" component={EmployeeList} />\n<Scene key=\"employeeDetail\" component={EmployeeDetail} />\n\n// All the props you can pass to the scene\n\n<Scene\n    key=\"login\"                 // call Actions.login() to show this screen\n    component={LoginForm}       // component to show\n    title=\"Login\"               // make nav bar and give it a title - this is built in\n    initial                     // define the first screen to show\n/>\n`}</code></pre>\n    <div id=\"nav2\"></div>\n    <h3 {...{\n      \"id\": \"-----navigation-in-the-router\"\n    }}>{`---- Navigation in the Router`}</h3>\n    <pre><code parentName=\"pre\" {...{}}>{`// Create a router.js\n\nimport React from 'react';\nimport { Scene, Router } from 'react-native-router-flux';\n\n// scene-target\nimport ExampleComponent from './components/examplecomponent/ExampleComponent';\nimport Table from './components/table/Table';\n\nconst RouterComponent = () => {\n    return (\n        <Router>\n            <Scene key=\"example\" component={ExampleComponent} title=\"App\" />\n            <Scene key=\"table\" component={Table} title=\"Table\" initial />\n        </Router>\n    );\n};\n\nexport default RouterComponent;\n\n// in app.js\n\n...\nimport Router from './router';\n\nconst App = () => {\n\n    const store = createStore(reducers, {}, applyMiddleware(ReduxThunk));\n\n    return (\n        <Provider store={store}>\n            <Router />\n        </Provider>\n    );\n}\n\nexport default App;\n`}</code></pre>\n    <p>{`So how do we move between these scenes?`}</p>\n    <div id=\"nav3\"></div>\n    <h3 {...{\n      \"id\": \"-----navigating-between-routes\"\n    }}>{`---- Navigating between routes`}</h3>\n    <p>{`Navigation will happen from an action.`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`// import actions\nimport { Actions } from 'react-native-router-flux';\n\n// Action Creators\nexport const loginUserSuccess = (dispatch, user) => {\n    dispatch({\n        type: LOGIN_USER_SUCCESS,\n        payload: user\n    });\n\n    Actions.employeeList(); // this method comes from the key property\n};\n`}</code></pre>\n    <div id=\"nav4\"></div>\n    <h3 {...{\n      \"id\": \"-----grouping-scenes-with-buckets\"\n    }}>{`---- Grouping Scenes with 'Buckets'`}</h3>\n    <p>{`Making decisions on how the header should render.`}</p>\n    <p>{`We can do `}<inlineCode parentName=\"p\">{`scene nesting`}</inlineCode>{` to group these screens. There is one 'gotcha' though. Now for the actions, we need to actually use Actions.main().`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`// router.js\n\nconst RouterComponent = () => {\n    return (\n        <Router>\n            <Scene key=\"auth\">\n                <Scene key=\"login\" component={Login} title=\"Login\" />\n            </Scene>\n            <Scene key=\"flow\">\n                <Scene key=\"example\" component={ExampleComponent} title=\"App\" />\n                <Scene\n                    // for action, you normally call Actions.key()\n                    onRight={() => console.log('right!!!')}\n                    rightTitle=\"Add\"\n                    key=\"table\"\n                    component={Table}\n                    title=\"Table\"\n                    initial\n                />\n            </Scene>\n        </Router>\n    );\n};\n`}</code></pre>\n    <p>{`We can use the `}<inlineCode parentName=\"p\">{`initial`}</inlineCode>{` prop within these `}<inlineCode parentName=\"p\">{`buckets`}</inlineCode>{` to let which component within a bucket to have an initial prop`}</p>\n    <h3 {...{\n      \"id\": \"-----actions-to-navigate-between-buckets\"\n    }}>{`---- Actions to navigate between buckets`}</h3>\n    <p>{`These actions can be added using`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`import { Actions } from 'react-native-router-flux';\n\n// Action Creators - exammple thunk action creator\nconst loginUserSuccess = (dispatch, user) => {\n    dispatch({\n        type: LOGIN_USER_SUCCESS,\n        payload: user\n    });\n\n    Actions.employeeList();\n}\n`}</code></pre>\n    <div id=\"nav5\"></div>\n    <h3 {...{\n      \"id\": \"-----form-updates-at-a-reducer-level--dynamic-property-updates\"\n    }}>{`---- Form updates at a reducer level / Dynamic Property updates`}</h3>\n    <p>{`Example reducer function with ES6 dynamic change.`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`export default (state = INITIAL_STATE, action) => {\n    switch (action.type) {\n        case EMPLOYEE_UPDATE:\n            return {...state, [action.payload.prop]: action.payload.value};\n        default:\n            return state;\n    }\n}\n`}</code></pre>\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  "]}]}