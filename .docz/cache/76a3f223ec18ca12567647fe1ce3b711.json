{"remainingRequest":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/docz-core/node_modules/babel-loader/lib/index.js??ref--6-1!/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/@mdx-js/loader/index.js??ref--6-2!/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/source-map-loader/index.js!/Users/dennis.okeeffe/Project-Imposter/developer-notes/manual/Dotnet/Adding-Models.md","dependencies":[{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/manual/Dotnet/Adding-Models.md","mtime":1578713876671},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/cache-loader/dist/cjs.js","mtime":1564095360956},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/docz-core/node_modules/babel-loader/lib/index.js","mtime":1562568123838},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/@mdx-js/loader/index.js","mtime":1565139338792},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/source-map-loader/index.js","mtime":1564095361765}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/dennis.okeeffe/Project-Imposter/developer-notes/manual/Dotnet/Adding-Models.md"],"names":["React","mdx","makeShortcode","name","MDXDefaultShortcode","props","console","warn","layoutProps","MDXLayout","MDXContent","components","isMDXComponent"],"mappings":"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","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"adding-models\"\n    }}>{`Adding Models`}</h1>\n    <h2 {...{\n      \"id\": \"resources\"\n    }}>{`Resources`}</h2>\n    <ol>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"https://docs.microsoft.com/en-us/aspnet/core/tutorials/first-mvc-app/adding-model?view=aspnetcore-3.1&tabs=visual-studio\"\n        }}>{`Microsoft Docs: Add a model to an ASP.NET Core MVC app`}</a></li>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"https://docs.microsoft.com/en-us/dotnet/api/system.componentmodel.dataannotations?view=netframework-4.8\"\n        }}>{`DataAnnotatons used in tutorial`}</a></li>\n    </ol>\n    <h2 {...{\n      \"id\": \"add-a-data-model-class\"\n    }}>{`Add a data model class`}</h2>\n    <p>{`Update the `}<inlineCode parentName=\"p\">{`Models/Movie.cs`}</inlineCode>{` file with the following code:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-csharp\"\n      }}>{`using System;\nusing System.ComponentModel.DataAnnotations;\n\nnamespace MvcMovie.Models\n{\n    public class Movie\n    {\n        public int Id { get; set; }\n        public string Title { get; set; }\n\n        [DataType(DataType.Date)]\n        public DateTime ReleaseDate { get; set; }\n        public string Genre { get; set; }\n        public decimal Price { get; set; }\n    }\n}\n`}</code></pre>\n    <ul>\n      <li parentName=\"ul\">{`The Movie class contains an `}<inlineCode parentName=\"li\">{`Id`}</inlineCode>{` field, which is required by the database for the primary key.`}</li>\n      <li parentName=\"ul\">{`The DataType attribute on ReleaseDate specifies the type of the data (Date). With this attribute:`}<ol parentName=\"li\">\n          <li parentName=\"ol\">{`The user is not required to enter time information in the date field.`}</li>\n          <li parentName=\"ol\">{`Only the date is displayed, not time information.`}</li>\n        </ol></li>\n    </ul>\n    <p>{`DataAnnotations are covered in a later tutorial.`}</p>\n    <h2 {...{\n      \"id\": \"add-nuget-packages\"\n    }}>{`Add NuGet Packages`}</h2>\n    <p>{`Reference `}<strong parentName=\"p\">{`Resource `}{`[1]`}</strong>{` in order to see installation examples for Visual Studio for Mac.`}</p>\n    <p><em parentName=\"p\">{`Note: I haven't confirmed, but you may be able to get away with installing through dotnet CLI. From what I see later in the tutorial, NuGet may be required.`}</em></p>\n    <p>{`Packages required in this tutorial:`}</p>\n    <ol>\n      <li parentName=\"ol\">{`Microsoft.EntityFrameworkCore.SQLite`}</li>\n      <li parentName=\"ol\">{`Microsoft.VisualStudio.Web.CodeGeneration.Design (likely not needed if installing by CLI)`}</li>\n      <li parentName=\"ol\">{`Microsoft.EntityFrameworkCore.SqlServer`}</li>\n      <li parentName=\"ol\">{`Microsoft.EntityFrameworkCore.Design`}</li>\n    </ol>\n    <h2 {...{\n      \"id\": \"create-database-context-class\"\n    }}>{`Create database context class`}</h2>\n    <p>{`A database context class is needed to coordinate EF Core functionality (Create, Read, Update, Delete) for the Movie model. The database context is derived from `}<inlineCode parentName=\"p\">{`Microsoft.EntityFrameworkCore.DbContext`}</inlineCode>{` and specifies the entities to include in the data model.`}</p>\n    <p>{`Create a Data folder.`}</p>\n    <p>{`Add a Data/MvcMovieContext.cs file with the following code:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-cs\"\n      }}>{`using Microsoft.EntityFrameworkCore;\nusing MvcMovie.Models;\n\nnamespace MvcMovie.Data\n{\n    public class MvcMovieContext : DbContext\n    {\n        public MvcMovieContext (DbContextOptions<MvcMovieContext> options)\n            : base(options)\n        {\n        }\n\n        public DbSet<Movie> Movie { get; set; }\n    }\n}\n`}</code></pre>\n    <p>{`The preceding code creates a `}<inlineCode parentName=\"p\">{`DbSet<Movie>`}</inlineCode>{` property for the entity set. In Entity Framework terminology, an entity set typically corresponds to a database table. An entity corresponds to a row in the table.`}</p>\n    <h2 {...{\n      \"id\": \"register-the-database-context\"\n    }}>{`Register the database context`}</h2>\n    <p>{`ASP.NET Core is built with dependency injection (DI). Services (such as the EF Core DB context) must be registered with DI during application startup. Components that require these services (such as Razor Pages) are provided these services via constructor parameters. The constructor code that gets a DB context instance is shown later in the tutorial. In this section, you register the database context with the DI container.`}</p>\n    <p>{`Add to the top of Startup.cs:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-cs\"\n      }}>{`using MvcMovie.Data;\nusing Microsoft.EntityFrameworkCore;\n`}</code></pre>\n    <p>{`Add the following for `}<inlineCode parentName=\"p\">{`Startup.ConfigureServices`}</inlineCode>{`:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-cs\"\n      }}>{`public void ConfigureServices(IServiceCollection services)\n{\n    services.AddControllersWithViews();\n\n    services.AddDbContext<MvcMovieContext>(options =>\n            options.UseSqlite(Configuration.GetConnectionString(\"MvcMovieContext\")));\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"add-a-database-connection-string\"\n    }}>{`Add a database connection string`}</h2>\n    <p>{`Add `}<inlineCode parentName=\"p\">{`ConnectionStrings`}</inlineCode>{` config to `}<inlineCode parentName=\"p\">{`appsettings.json`}</inlineCode>{`:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`{\n  \"Logging\": {\n    \"LogLevel\": {\n      \"Default\": \"Information\",\n      \"Microsoft\": \"Warning\",\n      \"Microsoft.Hosting.Lifetime\": \"Information\"\n    }\n  },\n  \"AllowedHosts\": \"*\",\n  \"ConnectionStrings\": {\n    \"MvcMovieContext\": \"Data Source=MvcMovie.db\"\n  }\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"scaffold-movie-pages\"\n    }}>{`Scaffold movie pages`}</h2>\n    <p>{`Use the scaffolding tool to produce Create, Read, Update, and Delete (CRUD) pages for the movie model.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`dotnet aspnet-codegenerator controller -name MoviesController -m Movie -dc MvcMovieContext --relativeFolderPath Controllers --useDefaultLayout --referenceScriptLibraries\n`}</code></pre>\n    <p>{`The following table details the ASP.NET Core code generator parameters:`}</p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Parameter`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-m`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`The name of the model.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-dc`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`The data context.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-udl`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Use the default layout.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`--relativeFolderPath`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`The relative output folder path to create the files.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`--useDefaultLayout`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`The default layout should be used for the views.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`--referenceScriptLibraries`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Adds `}{`_`}{`ValidationScriptsPartial to Edit and Create pages`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <p>{`Note: for more help run `}<inlineCode parentName=\"p\">{`dotnet aspnet-codegenerator controller -h`}</inlineCode></p>\n    <h2 {...{\n      \"id\": \"initial-migration\"\n    }}>{`Initial migration`}</h2>\n    <p>{`Use the EF Core Migrations feature to create the database. Migrations is a set of tools that let you create and update a database to match your data model.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`dotnet ef migrations add InitialCreate\ndotnet ef database update\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"the-initialcreate-class\"\n    }}>{`The InitialCreate class`}</h2>\n    <p>{`Examine the `}<inlineCode parentName=\"p\">{`Migrations/{timestamp}_InitialCreate.cs`}</inlineCode>{` migration file:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-cs\"\n      }}>{`public partial class Initial : Migration\n{\n    protected override void Up(MigrationBuilder migrationBuilder)\n    {\n        migrationBuilder.CreateTable(\n            name: \"Movie\",\n            columns: table => new\n            {\n                Id = table.Column<int>(nullable: false)\n                    .Annotation(\"SqlServer:ValueGenerationStrategy\",\n                                 SqlServerValueGenerationStrategy.IdentityColumn),\n                Title = table.Column<string>(nullable: true),\n                ReleaseDate = table.Column<DateTime>(nullable: false),\n                Genre = table.Column<string>(nullable: true),\n                Price = table.Column<decimal>(nullable: false)\n            },\n            constraints: table =>\n            {\n                table.PrimaryKey(\"PK_Movie\", x => x.Id);\n            });\n    }\n\n    protected override void Down(MigrationBuilder migrationBuilder)\n    {\n        migrationBuilder.DropTable(\n            name: \"Movie\");\n    }\n}\n`}</code></pre>\n    <p>{`The `}<inlineCode parentName=\"p\">{`Up`}</inlineCode>{` method creates the `}<inlineCode parentName=\"p\">{`Movie`}</inlineCode>{` table and configures `}<inlineCode parentName=\"p\">{`Id`}</inlineCode>{` as the primary key. The `}<inlineCode parentName=\"p\">{`Down`}</inlineCode>{` method reverts the schema changes made by the `}<inlineCode parentName=\"p\">{`Up`}</inlineCode>{` migration.`}</p>\n    <h2 {...{\n      \"id\": \"dependency-injection-in-the-controller\"\n    }}>{`Dependency injection in the controller`}</h2>\n    <p>{`Finish off the tutorial notes `}<a parentName=\"p\" {...{\n        \"href\": \"https://docs.microsoft.com/en-us/aspnet/core/tutorials/first-mvc-app/adding-model?view=aspnetcore-3.1&tabs=visual-studio-mac#dependency-injection-in-the-controller\"\n      }}>{`from here`}</a></p>\n    <p>{`Note: Stopping since the context is enough for other work to be completed.`}</p>\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  "]}]}