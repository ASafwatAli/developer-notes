{"remainingRequest":"/Users/okeeffe_d/Business/Documentation/node_modules/babel-loader/lib/index.js?{\"presets\":[[\"/Users/okeeffe_d/Business/Documentation/node_modules/babel-preset-docz/dist/index.js\",{\"flow\":true,\"typescript\":false,\"parseProps\":true}]],\"plugins\":[[\"/Users/okeeffe_d/Business/Documentation/node_modules/docz-utils/lib/named-asset-import.js\",{\"loaderMap\":{\"svg\":{\"ReactComponent\":\"@svgr/webpack?-prettier,-svgo![path]\"}}}]],\"babelrc\":false,\"cacheCompression\":true,\"compact\":true}!/Users/okeeffe_d/Business/Documentation/manual/Python/Python-Object-Orientated.md","dependencies":[{"path":"/Users/okeeffe_d/Business/Documentation/manual/Python/Python-Object-Orientated.md","mtime":1548209344419},{"path":"/Users/okeeffe_d/Business/Documentation/node_modules/cache-loader/dist/cjs.js","mtime":1548134640245},{"path":"/Users/okeeffe_d/Business/Documentation/node_modules/babel-loader/lib/index.js","mtime":1548134640227}],"contextDependencies":[],"result":["function _typeof(obj){if(typeof Symbol===\"function\"&&typeof Symbol.iterator===\"symbol\"){_typeof=function _typeof(obj){return typeof obj;};}else{_typeof=function _typeof(obj){return obj&&typeof Symbol===\"function\"&&obj.constructor===Symbol&&obj!==Symbol.prototype?\"symbol\":typeof obj;};}return _typeof(obj);}function _objectWithoutProperties(source,excluded){if(source==null)return{};var target=_objectWithoutPropertiesLoose(source,excluded);var key,i;if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++){key=sourceSymbolKeys[i];if(excluded.indexOf(key)>=0)continue;if(!Object.prototype.propertyIsEnumerable.call(source,key))continue;target[key]=source[key];}}return target;}function _objectWithoutPropertiesLoose(source,excluded){if(source==null)return{};var target={};var sourceKeys=Object.keys(source);var key,i;for(i=0;i<sourceKeys.length;i++){key=sourceKeys[i];if(excluded.indexOf(key)>=0)continue;target[key]=source[key];}return target;}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\");}}function _defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}function _createClass(Constructor,protoProps,staticProps){if(protoProps)_defineProperties(Constructor.prototype,protoProps);if(staticProps)_defineProperties(Constructor,staticProps);return Constructor;}function _possibleConstructorReturn(self,call){if(call&&(_typeof(call)===\"object\"||typeof call===\"function\")){return call;}return _assertThisInitialized(self);}function _assertThisInitialized(self){if(self===void 0){throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");}return self;}function _getPrototypeOf(o){_getPrototypeOf=Object.setPrototypeOf?Object.getPrototypeOf:function _getPrototypeOf(o){return o.__proto__||Object.getPrototypeOf(o);};return _getPrototypeOf(o);}function _inherits(subClass,superClass){if(typeof superClass!==\"function\"&&superClass!==null){throw new TypeError(\"Super expression must either be null or a function\");}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,writable:true,configurable:true}});if(superClass)_setPrototypeOf(subClass,superClass);}function _setPrototypeOf(o,p){_setPrototypeOf=Object.setPrototypeOf||function _setPrototypeOf(o,p){o.__proto__=p;return o;};return _setPrototypeOf(o,p);}import React from'react';import{MDXTag}from'@mdx-js/tag';var MDXContent=/*#__PURE__*/function(_React$Component){_inherits(MDXContent,_React$Component);function MDXContent(props){var _this;_classCallCheck(this,MDXContent);_this=_possibleConstructorReturn(this,_getPrototypeOf(MDXContent).call(this,props));_this.layout=null;return _this;}_createClass(MDXContent,[{key:\"render\",value:function render(){var _this$props=this.props,components=_this$props.components,props=_objectWithoutProperties(_this$props,[\"components\"]);return React.createElement(MDXTag,{name:\"wrapper\",components:components},React.createElement(\"div\",{id:\"section\"}),React.createElement(MDXTag,{name:\"hr\",components:components}),React.createElement(MDXTag,{name:\"h2\",components:components,props:{\"id\":\"objects\"}},\"Objects\"),React.createElement(\"div\",{id:\"objects1\"}),React.createElement(MDXTag,{name:\"h3\",components:components,props:{\"id\":\"-----creating-instances\"}},\"---- Creating Instances\"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{}},\">>> class Monster:\\n...     hit_points=1\\n...     color=\\\"blue\\\"\\n...     weapon=\\\"sword\\\"\\n...\\n>>> monster = Monster()\\n>>> monster.hit_points\\n1\\n>>> monster.weapon\\n'sword'\\n>>> monster.color\\n'blue'\\n\\n# jubjub instance\\n>>> jubjub = Monster()\\n>>> type(jubjub)\\n<type 'instance'>\\n>>> jubjub.hit_points\\n1\\n>>> jubjub.hit_points = 5\\n>>> jubjub.hit_points\\n5\\n\")),React.createElement(\"div\",{id:\"objects2\"}),React.createElement(MDXTag,{name:\"h3\",components:components,props:{\"id\":\"-----class-methods\"}},\"---- Class Methods\"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{}},\">>> class Methods:\\n...     a = 2\\n...     sound=\\\"roar\\\"\\n...     def battlecry(self):\\n...             return self.sound.upper()\\n...\\n>>> general = Methods()\\n>>> general.battlecry()\\n'ROAR'\\n\")),React.createElement(MDXTag,{name:\"p\",components:components},\"Code Challenge\"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{}},\"class Store:\\n    open = 9\\n    close = 18\\n\\n    def hours(self):\\n        return \\\"We're open from {} to {}\\\".format(self.open, self.close)\\n\")),React.createElement(\"div\",{id:\"objects3\"}),React.createElement(MDXTag,{name:\"h3\",components:components,props:{\"id\":\"-----_--init--_\"}},\"---- \",\"_\",\" \",React.createElement(MDXTag,{name:\"em\",components:components,parentName:\"h3\"},\" init \"),\" \",\"_\"),React.createElement(MDXTag,{name:\"p\",components:components},\"Dealing with the dunder init!\"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{}},\"class Monster:\\n    def __init__(self, **kwargs):\\n        self.hit_points = kwargs.get('hit_points', 5)\\n        self.weapon = kwargs.get('weapon', 'sword')\\n        self.color = kwargs.get('color', 'yellow')\\n        self.sound = kwargs.get('sound', 'yell')\\n\\nmonster = Monster(hit_points=22, color=\\\"green\\\")\\n\")),React.createElement(\"div\",{id:\"inheritance\"}),React.createElement(MDXTag,{name:\"hr\",components:components}),React.createElement(MDXTag,{name:\"h2\",components:components,props:{\"id\":\"python-inheritance\"}},\"Python Inheritance\"),React.createElement(MDXTag,{name:\"p\",components:components},\"Building on from before, we're just making some defaults...\"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{}},\"class Monster:\\n    min_hp = 1\\n    max_hp = 1\\n    min_exp = 1\\n    max_exp = 1\\n    weapon = 'sword'\\n    sound = 'roar'\\n\\n    def __init__(self, **kwargs):\\n        self.hp = random.randint(self.min_hp, self.max_hp)\\n        self.exp = random.randint(self.min_exp, self.max_exp)\\n        self.color = random.choice(COLORS)\\n\\n        for key, value in kwargs.items():\\n            setattr(self, key, value)\\n\\n    def battlecry(self):\\n        return self.sound.upper()\\n\\nnew_mon = Monster()\\nnew_mon.hp\\n# 1\\nnew_mon.color\\n# 'blue'\\n\\nfresh = Monster(color='blue', sound='whistling', hp='500', adjective='manxsome')\\nfresh.color\\n# 'blue'\\nfresh.adjective\\n# manxsome\\n\")),React.createElement(\"div\",{id:\"inheritance2\"}),React.createElement(MDXTag,{name:\"h3\",components:components,props:{\"id\":\"-----python-subclassing\"}},\"---- Python Subclassing\"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{}},\"# building on from monster\\n\\nclass Goblin(Monster):\\n    max_hp = 3\\n    max_exp = 2\\n    sound = 'squek'\\n\\ngolbin = Goblin()\\ngoblin.hp\\n# 2 - now isn't just 1 from the min/max set above!\\ngoblin.color\\n# 'blue'\\n\\nclass Troll(Monster):\\n    min_hp = 3\\n    max_hp = 5\\n    min_exp = 2\\n    max_exp = 6\\n    sound = 'growl'\\n\")),React.createElement(MDXTag,{name:\"p\",components:components},\"Challenge\"),React.createElement(MDXTag,{name:\"p\",components:components},\"Create a new class named Dragon that extends the Monster class. Don't forget to import Monster from monster. Give your Dragon an integer size attribute.\"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{}},\"from monster import Monster\\n\\nclass Dragon(Monster):\\n    size = 12\\n\")),React.createElement(\"div\",{id:\"inheritance3\"}),React.createElement(MDXTag,{name:\"h3\",components:components,props:{\"id\":\"-----_--str--_\"}},\"---- \",\"_\",\" \",React.createElement(MDXTag,{name:\"em\",components:components,parentName:\"h3\"},\" str \"),\" \",\"_\"),React.createElement(MDXTag,{name:\"p\",components:components},\"This helps us when we print(object)\"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{}},\"class Monster:\\n    ...\\n    def __str__(self):\\n        return '{} {}, HP: {} ...'.format(self.color.title(), self.__class__.__name__, self.hp, self.exp)\\n    ...\\n\\ndraco = Monster()\\nprint(draco)\\n# returns the details from the magic method\\n\")),React.createElement(MDXTag,{name:\"p\",components:components},\"Challenge\"),React.createElement(MDXTag,{name:\"p\",components:components},\"Import Game from game. Make a new class named GameScore that extends Game. Use pass if needed.\"),React.createElement(MDXTag,{name:\"p\",components:components},\"Add a \",React.createElement(MDXTag,{name:\"strong\",components:components,parentName:\"p\"},\"str\"),\" method to GameScore that returns the score in the string \\\"Player 1: 5; Player 2: 10\\\", using the correct values from self.score. self.score is a tuple with Player 1's score and Player 2's score like (5, 10).\\nYou do not need to define self.score. It comes from the Game class.\"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{}},\"from game import Game\\n\\nclass GameScore(Game):\\n    pass\\n\\n    def __str__(self):\\n        return \\\"Player 1: {}; Player 2: {}\\\".format(*self.score)\\n\")),React.createElement(\"div\",{id:\"inheritance4\"}),React.createElement(MDXTag,{name:\"h3\",components:components,props:{\"id\":\"-----instance-methods\"}},\"---- Instance Methods\"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{}},\"class Character:\\n    exp = 0\\n    hp = 10\\n\\n    def __init__(self, **kwargs):\\n        self.name = input(\\\"Name: \\\")\\n        self.weapon = self.get_weapon()\\n        for k, v in kwargs.items():\\n            setattr(self, k, v)\\n\\n    def get_weapon(self):\\n        weapon_choice = input(\\\"Weapon: [S]word, [A]xe: \\\").lower()\\n\\n        if weapon_choice in 'sa':\\n            if weapon_choice == 's':\\n                return 'sword'\\n            else\\n                return 'axe'\\n\")),React.createElement(MDXTag,{name:\"p\",components:components},\"Challenge\"),React.createElement(MDXTag,{name:\"p\",components:components},\"Add a score method to Game that takes a player argument. The player argument will be either 1 or 2. Increase that player's value in self.current_score by 1. You'll need to adjust the index (i.e. player = 1 means self.current_score\",\"[0]\",\" needs to increase).\"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{}},\"class Game:\\n  def __init__(self):\\n    self.current_score = [0, 0]\\n\\n  def score(self, player):\\n    if player in [1,2]:\\n        if player == 1:\\n            self.current_score[0] += 1\\n        elif player == 2:\\n            self.current_score[1] += 1\\n        return\\n\")),React.createElement(\"div\",{id:\"inheritance5\"}),React.createElement(MDXTag,{name:\"h3\",components:components,props:{\"id\":\"-----overriding-inheritance\"}},\"---- Overriding Inheritance\"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{}},\"class Character(Combat):\\n    attack_limit = 10\\n\\n    # pretend that we're overriding the Combat attack method)\\n    def attack(self):\\n        roll = random.randint(1, self.attack_limit)\\n        if self.weapon == 'sword':\\n            roll += 1\\n        elif self.weapon == 'axe':\\n            roll +=2\\n        return roll > 4\\n\")),React.createElement(MDXTag,{name:\"p\",components:components},\"Code Challenge\"),React.createElement(MDXTag,{name:\"p\",components:components},\"Animal.noise() returns self.sound.lower(). Make Sheep.noise() return the uppercased version of the instance's sound.\"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{}},\"from animal import Animal\\n\\nclass Sheep(Animal):\\n    sound = \\\"Bless\\\"\\n\\n    def noise(self):\\n        return self.sound.upper()\\n\")));}}]);return MDXContent;}(React.Component);export{MDXContent as default};MDXContent.__docgenInfo={\"description\":\"\",\"methods\":[],\"displayName\":\"MDXContent\"};",{"version":3,"sources":["/Users/okeeffe_d/Business/Documentation/manual/Python/Python-Object-Orientated.md"],"names":["React","MDXTag","MDXContent","props","layout","components","Component"],"mappings":"omFACE,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,MAAT,KAAuB,aAAvB,C,GAGmBC,CAAAA,U,gFACnB,oBAAYC,KAAZ,CAAmB,4CACjB,4EAAMA,KAAN,GACA,MAAKC,MAAL,CAAc,IAAd,CAFiB,aAGlB,C,8DACQ,iBAC0B,KAAKD,KAD/B,CACCE,UADD,aACCA,UADD,CACgBF,KADhB,sDAGP,MAAO,qBAAC,MAAD,EACE,IAAI,CAAC,SADP,CAGE,UAAU,CAAEE,UAHd,EAG0B,2BAAK,EAAE,CAAC,SAAR,EAH1B,CAIX,oBAAC,MAAD,EAAQ,IAAI,CAAC,IAAb,CAAkB,UAAU,CAAEA,UAA9B,EAJW,CAKX,oBAAC,MAAD,EAAQ,IAAI,CAAC,IAAb,CAAkB,UAAU,CAAEA,UAA9B,CAA0C,KAAK,CAAE,CAAC,KAAK,SAAN,CAAjD,YALW,CAMX,2BAAK,EAAE,CAAC,UAAR,EANW,CAOX,oBAAC,MAAD,EAAQ,IAAI,CAAC,IAAb,CAAkB,UAAU,CAAEA,UAA9B,CAA0C,KAAK,CAAE,CAAC,KAAK,yBAAN,CAAjD,4BAPW,CAQX,oBAAC,MAAD,EAAQ,IAAI,CAAC,KAAb,CAAmB,UAAU,CAAEA,UAA/B,EAA2C,oBAAC,MAAD,EAAQ,IAAI,CAAC,MAAb,CAAoB,UAAU,CAAEA,UAAhC,CAA4C,UAAU,CAAC,KAAvD,CAA6D,KAAK,CAAE,EAApE,mXAA3C,CARW,CA+BX,2BAAK,EAAE,CAAC,UAAR,EA/BW,CAgCX,oBAAC,MAAD,EAAQ,IAAI,CAAC,IAAb,CAAkB,UAAU,CAAEA,UAA9B,CAA0C,KAAK,CAAE,CAAC,KAAK,oBAAN,CAAjD,uBAhCW,CAiCX,oBAAC,MAAD,EAAQ,IAAI,CAAC,KAAb,CAAmB,UAAU,CAAEA,UAA/B,EAA2C,oBAAC,MAAD,EAAQ,IAAI,CAAC,MAAb,CAAoB,UAAU,CAAEA,UAAhC,CAA4C,UAAU,CAAC,KAAvD,CAA6D,KAAK,CAAE,EAApE,wMAA3C,CAjCW,CA2CX,oBAAC,MAAD,EAAQ,IAAI,CAAC,GAAb,CAAiB,UAAU,CAAEA,UAA7B,mBA3CW,CA4CX,oBAAC,MAAD,EAAQ,IAAI,CAAC,KAAb,CAAmB,UAAU,CAAEA,UAA/B,EAA2C,oBAAC,MAAD,EAAQ,IAAI,CAAC,MAAb,CAAoB,UAAU,CAAEA,UAAhC,CAA4C,UAAU,CAAC,KAAvD,CAA6D,KAAK,CAAE,EAApE,oJAA3C,CA5CW,CAmDX,2BAAK,EAAE,CAAC,UAAR,EAnDW,CAoDX,oBAAC,MAAD,EAAQ,IAAI,CAAC,IAAb,CAAkB,UAAU,CAAEA,UAA9B,CAA0C,KAAK,CAAE,CAAC,KAAK,iBAAN,CAAjD,kBAA8F,oBAAC,MAAD,EAAQ,IAAI,CAAC,IAAb,CAAkB,UAAU,CAAEA,UAA9B,CAA0C,UAAU,CAAC,IAArD,WAA9F,SApDW,CAqDX,oBAAC,MAAD,EAAQ,IAAI,CAAC,GAAb,CAAiB,UAAU,CAAEA,UAA7B,kCArDW,CAsDX,oBAAC,MAAD,EAAQ,IAAI,CAAC,KAAb,CAAmB,UAAU,CAAEA,UAA/B,EAA2C,oBAAC,MAAD,EAAQ,IAAI,CAAC,MAAb,CAAoB,UAAU,CAAEA,UAAhC,CAA4C,UAAU,CAAC,KAAvD,CAA6D,KAAK,CAAE,EAApE,+TAA3C,CAtDW,CA+DX,2BAAK,EAAE,CAAC,aAAR,EA/DW,CAgEX,oBAAC,MAAD,EAAQ,IAAI,CAAC,IAAb,CAAkB,UAAU,CAAEA,UAA9B,EAhEW,CAiEX,oBAAC,MAAD,EAAQ,IAAI,CAAC,IAAb,CAAkB,UAAU,CAAEA,UAA9B,CAA0C,KAAK,CAAE,CAAC,KAAK,oBAAN,CAAjD,uBAjEW,CAkEX,oBAAC,MAAD,EAAQ,IAAI,CAAC,GAAb,CAAiB,UAAU,CAAEA,UAA7B,gEAlEW,CAmEX,oBAAC,MAAD,EAAQ,IAAI,CAAC,KAAb,CAAmB,UAAU,CAAEA,UAA/B,EAA2C,oBAAC,MAAD,EAAQ,IAAI,CAAC,MAAb,CAAoB,UAAU,CAAEA,UAAhC,CAA4C,UAAU,CAAC,KAAvD,CAA6D,KAAK,CAAE,EAApE,yqBAA3C,CAnEW,CAkGX,2BAAK,EAAE,CAAC,cAAR,EAlGW,CAmGX,oBAAC,MAAD,EAAQ,IAAI,CAAC,IAAb,CAAkB,UAAU,CAAEA,UAA9B,CAA0C,KAAK,CAAE,CAAC,KAAK,yBAAN,CAAjD,4BAnGW,CAoGX,oBAAC,MAAD,EAAQ,IAAI,CAAC,KAAb,CAAmB,UAAU,CAAEA,UAA/B,EAA2C,oBAAC,MAAD,EAAQ,IAAI,CAAC,MAAb,CAAoB,UAAU,CAAEA,UAAhC,CAA4C,UAAU,CAAC,KAAvD,CAA6D,KAAK,CAAE,EAApE,6UAA3C,CApGW,CAwHX,oBAAC,MAAD,EAAQ,IAAI,CAAC,GAAb,CAAiB,UAAU,CAAEA,UAA7B,cAxHW,CAyHX,oBAAC,MAAD,EAAQ,IAAI,CAAC,GAAb,CAAiB,UAAU,CAAEA,UAA7B,6JAzHW,CA0HX,oBAAC,MAAD,EAAQ,IAAI,CAAC,KAAb,CAAmB,UAAU,CAAEA,UAA/B,EAA2C,oBAAC,MAAD,EAAQ,IAAI,CAAC,MAAb,CAAoB,UAAU,CAAEA,UAAhC,CAA4C,UAAU,CAAC,KAAvD,CAA6D,KAAK,CAAE,EAApE,2EAA3C,CA1HW,CA+HX,2BAAK,EAAE,CAAC,cAAR,EA/HW,CAgIX,oBAAC,MAAD,EAAQ,IAAI,CAAC,IAAb,CAAkB,UAAU,CAAEA,UAA9B,CAA0C,KAAK,CAAE,CAAC,KAAK,gBAAN,CAAjD,kBAA6F,oBAAC,MAAD,EAAQ,IAAI,CAAC,IAAb,CAAkB,UAAU,CAAEA,UAA9B,CAA0C,UAAU,CAAC,IAArD,UAA7F,SAhIW,CAiIX,oBAAC,MAAD,EAAQ,IAAI,CAAC,GAAb,CAAiB,UAAU,CAAEA,UAA7B,wCAjIW,CAkIX,oBAAC,MAAD,EAAQ,IAAI,CAAC,KAAb,CAAmB,UAAU,CAAEA,UAA/B,EAA2C,oBAAC,MAAD,EAAQ,IAAI,CAAC,MAAb,CAAoB,UAAU,CAAEA,UAAhC,CAA4C,UAAU,CAAC,KAAvD,CAA6D,KAAK,CAAE,EAApE,0PAA3C,CAlIW,CA4IX,oBAAC,MAAD,EAAQ,IAAI,CAAC,GAAb,CAAiB,UAAU,CAAEA,UAA7B,cA5IW,CA6IX,oBAAC,MAAD,EAAQ,IAAI,CAAC,GAAb,CAAiB,UAAU,CAAEA,UAA7B,mGA7IW,CA8IX,oBAAC,MAAD,EAAQ,IAAI,CAAC,GAAb,CAAiB,UAAU,CAAEA,UAA7B,WAAmD,oBAAC,MAAD,EAAQ,IAAI,CAAC,QAAb,CAAsB,UAAU,CAAEA,UAAlC,CAA8C,UAAU,CAAC,GAAzD,QAAnD,0RA9IW,CAgJX,oBAAC,MAAD,EAAQ,IAAI,CAAC,KAAb,CAAmB,UAAU,CAAEA,UAA/B,EAA2C,oBAAC,MAAD,EAAQ,IAAI,CAAC,MAAb,CAAoB,UAAU,CAAEA,UAAhC,CAA4C,UAAU,CAAC,KAAvD,CAA6D,KAAK,CAAE,EAApE,6JAA3C,CAhJW,CAwJX,2BAAK,EAAE,CAAC,cAAR,EAxJW,CAyJX,oBAAC,MAAD,EAAQ,IAAI,CAAC,IAAb,CAAkB,UAAU,CAAEA,UAA9B,CAA0C,KAAK,CAAE,CAAC,KAAK,uBAAN,CAAjD,0BAzJW,CA0JX,oBAAC,MAAD,EAAQ,IAAI,CAAC,KAAb,CAAmB,UAAU,CAAEA,UAA/B,EAA2C,oBAAC,MAAD,EAAQ,IAAI,CAAC,MAAb,CAAoB,UAAU,CAAEA,UAAhC,CAA4C,UAAU,CAAC,KAAvD,CAA6D,KAAK,CAAE,EAApE,yeAA3C,CA1JW,CA6KX,oBAAC,MAAD,EAAQ,IAAI,CAAC,GAAb,CAAiB,UAAU,CAAEA,UAA7B,cA7KW,CA8KX,oBAAC,MAAD,EAAQ,IAAI,CAAC,GAAb,CAAiB,UAAU,CAAEA,UAA7B,wQA9KW,CA+KX,oBAAC,MAAD,EAAQ,IAAI,CAAC,KAAb,CAAmB,UAAU,CAAEA,UAA/B,EAA2C,oBAAC,MAAD,EAAQ,IAAI,CAAC,MAAb,CAAoB,UAAU,CAAEA,UAAhC,CAA4C,UAAU,CAAC,KAAvD,CAA6D,KAAK,CAAE,EAApE,qRAA3C,CA/KW,CA2LX,2BAAK,EAAE,CAAC,cAAR,EA3LW,CA4LX,oBAAC,MAAD,EAAQ,IAAI,CAAC,IAAb,CAAkB,UAAU,CAAEA,UAA9B,CAA0C,KAAK,CAAE,CAAC,KAAK,6BAAN,CAAjD,gCA5LW,CA6LX,oBAAC,MAAD,EAAQ,IAAI,CAAC,KAAb,CAAmB,UAAU,CAAEA,UAA/B,EAA2C,oBAAC,MAAD,EAAQ,IAAI,CAAC,MAAb,CAAoB,UAAU,CAAEA,UAAhC,CAA4C,UAAU,CAAC,KAAvD,CAA6D,KAAK,CAAE,EAApE,iVAA3C,CA7LW,CAyMX,oBAAC,MAAD,EAAQ,IAAI,CAAC,GAAb,CAAiB,UAAU,CAAEA,UAA7B,mBAzMW,CA0MX,oBAAC,MAAD,EAAQ,IAAI,CAAC,GAAb,CAAiB,UAAU,CAAEA,UAA7B,yHA1MW,CA2MX,oBAAC,MAAD,EAAQ,IAAI,CAAC,KAAb,CAAmB,UAAU,CAAEA,UAA/B,EAA2C,oBAAC,MAAD,EAAQ,IAAI,CAAC,MAAb,CAAoB,UAAU,CAAEA,UAAhC,CAA4C,UAAU,CAAC,KAAvD,CAA6D,KAAK,CAAE,EAApE,0IAA3C,CA3MW,CAAP,CAoND,C,wBA5NqCL,KAAK,CAACM,S,SAAzBJ,U","sourcesContent":["\n  import React from 'react'\n  import { MDXTag } from '@mdx-js/tag'\n  \n\nexport default class MDXContent extends React.Component {\n  constructor(props) {\n    super(props)\n    this.layout = null\n  }\n  render() {\n    const { components, ...props } = this.props\n\n    return <MDXTag\n             name=\"wrapper\"\n             \n             components={components}><div id=\"section\"></div>\n<MDXTag name=\"hr\" components={components}></MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"objects\"}}>{`Objects`}</MDXTag>\n<div id=\"objects1\"></div>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"-----creating-instances\"}}>{`---- Creating Instances`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{}}>{`>>> class Monster:\n...     hit_points=1\n...     color=\"blue\"\n...     weapon=\"sword\"\n...\n>>> monster = Monster()\n>>> monster.hit_points\n1\n>>> monster.weapon\n'sword'\n>>> monster.color\n'blue'\n\n# jubjub instance\n>>> jubjub = Monster()\n>>> type(jubjub)\n<type 'instance'>\n>>> jubjub.hit_points\n1\n>>> jubjub.hit_points = 5\n>>> jubjub.hit_points\n5\n`}</MDXTag></MDXTag>\n<div id=\"objects2\"></div>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"-----class-methods\"}}>{`---- Class Methods`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{}}>{`>>> class Methods:\n...     a = 2\n...     sound=\"roar\"\n...     def battlecry(self):\n...             return self.sound.upper()\n...\n>>> general = Methods()\n>>> general.battlecry()\n'ROAR'\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`Code Challenge`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{}}>{`class Store:\n    open = 9\n    close = 18\n\n    def hours(self):\n        return \"We're open from {} to {}\".format(self.open, self.close)\n`}</MDXTag></MDXTag>\n<div id=\"objects3\"></div>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"-----_--init--_\"}}>{`---- `}{`_`}{` `}<MDXTag name=\"em\" components={components} parentName=\"h3\">{` init `}</MDXTag>{` `}{`_`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Dealing with the dunder init!`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{}}>{`class Monster:\n    def __init__(self, **kwargs):\n        self.hit_points = kwargs.get('hit_points', 5)\n        self.weapon = kwargs.get('weapon', 'sword')\n        self.color = kwargs.get('color', 'yellow')\n        self.sound = kwargs.get('sound', 'yell')\n\nmonster = Monster(hit_points=22, color=\"green\")\n`}</MDXTag></MDXTag>\n<div id=\"inheritance\"></div>\n<MDXTag name=\"hr\" components={components}></MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"python-inheritance\"}}>{`Python Inheritance`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Building on from before, we're just making some defaults...`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{}}>{`class Monster:\n    min_hp = 1\n    max_hp = 1\n    min_exp = 1\n    max_exp = 1\n    weapon = 'sword'\n    sound = 'roar'\n\n    def __init__(self, **kwargs):\n        self.hp = random.randint(self.min_hp, self.max_hp)\n        self.exp = random.randint(self.min_exp, self.max_exp)\n        self.color = random.choice(COLORS)\n\n        for key, value in kwargs.items():\n            setattr(self, key, value)\n\n    def battlecry(self):\n        return self.sound.upper()\n\nnew_mon = Monster()\nnew_mon.hp\n# 1\nnew_mon.color\n# 'blue'\n\nfresh = Monster(color='blue', sound='whistling', hp='500', adjective='manxsome')\nfresh.color\n# 'blue'\nfresh.adjective\n# manxsome\n`}</MDXTag></MDXTag>\n<div id=\"inheritance2\"></div>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"-----python-subclassing\"}}>{`---- Python Subclassing`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{}}>{`# building on from monster\n\nclass Goblin(Monster):\n    max_hp = 3\n    max_exp = 2\n    sound = 'squek'\n\ngolbin = Goblin()\ngoblin.hp\n# 2 - now isn't just 1 from the min/max set above!\ngoblin.color\n# 'blue'\n\nclass Troll(Monster):\n    min_hp = 3\n    max_hp = 5\n    min_exp = 2\n    max_exp = 6\n    sound = 'growl'\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`Challenge`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Create a new class named Dragon that extends the Monster class. Don't forget to import Monster from monster. Give your Dragon an integer size attribute.`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{}}>{`from monster import Monster\n\nclass Dragon(Monster):\n    size = 12\n`}</MDXTag></MDXTag>\n<div id=\"inheritance3\"></div>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"-----_--str--_\"}}>{`---- `}{`_`}{` `}<MDXTag name=\"em\" components={components} parentName=\"h3\">{` str `}</MDXTag>{` `}{`_`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`This helps us when we print(object)`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{}}>{`class Monster:\n    ...\n    def __str__(self):\n        return '{} {}, HP: {} ...'.format(self.color.title(), self.__class__.__name__, self.hp, self.exp)\n    ...\n\ndraco = Monster()\nprint(draco)\n# returns the details from the magic method\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`Challenge`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Import Game from game. Make a new class named GameScore that extends Game. Use pass if needed.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Add a `}<MDXTag name=\"strong\" components={components} parentName=\"p\">{`str`}</MDXTag>{` method to GameScore that returns the score in the string \"Player 1: 5; Player 2: 10\", using the correct values from self.score. self.score is a tuple with Player 1's score and Player 2's score like (5, 10).\nYou do not need to define self.score. It comes from the Game class.`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{}}>{`from game import Game\n\nclass GameScore(Game):\n    pass\n\n    def __str__(self):\n        return \"Player 1: {}; Player 2: {}\".format(*self.score)\n`}</MDXTag></MDXTag>\n<div id=\"inheritance4\"></div>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"-----instance-methods\"}}>{`---- Instance Methods`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{}}>{`class Character:\n    exp = 0\n    hp = 10\n\n    def __init__(self, **kwargs):\n        self.name = input(\"Name: \")\n        self.weapon = self.get_weapon()\n        for k, v in kwargs.items():\n            setattr(self, k, v)\n\n    def get_weapon(self):\n        weapon_choice = input(\"Weapon: [S]word, [A]xe: \").lower()\n\n        if weapon_choice in 'sa':\n            if weapon_choice == 's':\n                return 'sword'\n            else\n                return 'axe'\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`Challenge`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Add a score method to Game that takes a player argument. The player argument will be either 1 or 2. Increase that player's value in self.current_score by 1. You'll need to adjust the index (i.e. player = 1 means self.current_score`}{`[0]`}{` needs to increase).`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{}}>{`class Game:\n  def __init__(self):\n    self.current_score = [0, 0]\n\n  def score(self, player):\n    if player in [1,2]:\n        if player == 1:\n            self.current_score[0] += 1\n        elif player == 2:\n            self.current_score[1] += 1\n        return\n`}</MDXTag></MDXTag>\n<div id=\"inheritance5\"></div>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"-----overriding-inheritance\"}}>{`---- Overriding Inheritance`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{}}>{`class Character(Combat):\n    attack_limit = 10\n\n    # pretend that we're overriding the Combat attack method)\n    def attack(self):\n        roll = random.randint(1, self.attack_limit)\n        if self.weapon == 'sword':\n            roll += 1\n        elif self.weapon == 'axe':\n            roll +=2\n        return roll > 4\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`Code Challenge`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Animal.noise() returns self.sound.lower(). Make Sheep.noise() return the uppercased version of the instance's sound.`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{}}>{`from animal import Animal\n\nclass Sheep(Animal):\n    sound = \"Bless\"\n\n    def noise(self):\n        return self.sound.upper()\n`}</MDXTag></MDXTag>\n           </MDXTag>\n  }\n}\n  "]}]}