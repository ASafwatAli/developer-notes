{"remainingRequest":"/Users/okeeffe_d/Project-Imposter/developer-notes/node_modules/docz-core/node_modules/babel-loader/lib/index.js??ref--6-1!/Users/okeeffe_d/Project-Imposter/developer-notes/node_modules/@mdx-js/loader/index.js??ref--6-2!/Users/okeeffe_d/Project-Imposter/developer-notes/node_modules/source-map-loader/index.js!/Users/okeeffe_d/Project-Imposter/developer-notes/manual/Java/Java-Initialising-Arrays.md","dependencies":[{"path":"/Users/okeeffe_d/Project-Imposter/developer-notes/manual/Java/Java-Initialising-Arrays.md","mtime":1551688657440},{"path":"/Users/okeeffe_d/Project-Imposter/developer-notes/node_modules/cache-loader/dist/cjs.js","mtime":1561535530324},{"path":"/Users/okeeffe_d/Project-Imposter/developer-notes/node_modules/docz-core/node_modules/babel-loader/lib/index.js","mtime":1560300163820},{"path":"/Users/okeeffe_d/Project-Imposter/developer-notes/node_modules/@mdx-js/loader/index.js","mtime":1561535530532},{"path":"/Users/okeeffe_d/Project-Imposter/developer-notes/node_modules/source-map-loader/index.js","mtime":1548285283521}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9vYmplY3RXaXRob3V0UHJvcGVydGllcyBmcm9tIi9Vc2Vycy9va2VlZmZlX2QvUHJvamVjdC1JbXBvc3Rlci9kZXZlbG9wZXItbm90ZXMvbm9kZV9tb2R1bGVzL2JhYmVsLXByZXNldC1yZWFjdC1hcHAvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzIjsvKiBAanN4IG1keCAqL2ltcG9ydCBSZWFjdCBmcm9tJ3JlYWN0JztpbXBvcnR7bWR4fWZyb20nQG1keC1qcy9yZWFjdCc7LyogQGpzeCBtZHggKi92YXIgbWFrZVNob3J0Y29kZT1mdW5jdGlvbiBtYWtlU2hvcnRjb2RlKG5hbWUpe3JldHVybiBmdW5jdGlvbiBNRFhEZWZhdWx0U2hvcnRjb2RlKHByb3BzKXtjb25zb2xlLndhcm4oIkNvbXBvbmVudCAiK25hbWUrIiB3YXMgbm90IGltcG9ydGVkLCBleHBvcnRlZCwgb3IgcHJvdmlkZWQgYnkgTURYUHJvdmlkZXIgYXMgZ2xvYmFsIHNjb3BlIik7cmV0dXJuIG1keCgiZGl2Iixwcm9wcyk7fTt9O3ZhciBsYXlvdXRQcm9wcz17fTt2YXIgTURYTGF5b3V0PSJ3cmFwcGVyIjtleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBNRFhDb250ZW50KF9yZWYpe3ZhciBjb21wb25lbnRzPV9yZWYuY29tcG9uZW50cyxwcm9wcz1fb2JqZWN0V2l0aG91dFByb3BlcnRpZXMoX3JlZixbImNvbXBvbmVudHMiXSk7cmV0dXJuIG1keChNRFhMYXlvdXQsT2JqZWN0LmFzc2lnbih7fSxsYXlvdXRQcm9wcyxwcm9wcyx7Y29tcG9uZW50czpjb21wb25lbnRzLG1keFR5cGU6Ik1EWExheW91dCJ9KSxtZHgoImgxIix7ImlkIjoiaW5pdGlhbGlzaW5nLWFycmF5cy1pbi1qYXZhIn0sIkluaXRpYWxpc2luZyBBcnJheXMgaW4gSmF2YSIpLG1keCgicCIsbnVsbCwiQmFzaWMgZXhhbXBsZSBvbiBob3cgdG8gZGVjbGFyZSwgZGVjbGFyZSB3aXRoIGFsbG9jYXRlZCBzaXplIGFuZCBpbml0aWFsaXNlIHdpdGggZGVmYXVsdCB2YWx1ZXM6IiksbWR4KCJwcmUiLG51bGwsbWR4KCJjb2RlIixPYmplY3QuYXNzaWduKHtwYXJlbnROYW1lOiJwcmUifSx7ImNsYXNzTmFtZSI6Imxhbmd1YWdlLWphdmEifSksImludFtdIGFsbG9jQXJyID0gbmV3IGludFsyXTsgLy8gaW5pdCB3aXRoIG1lbW9yeSBmb3IgMiBzcGFjZXNcbmludFtdIGRlY2xhcmVBcnI7IC8vIGRlY2xhcmF0aW9uXG5pbnRbXSB3aXRoVmFsdWVzID0geyBuLmRhdGEgfTsgLy8gc2hvcnRoYW5kIGluaXQgd2l0aCB2YWx1ZXNcbiIpKSxtZHgoImgyIix7ImlkIjoicHVzaC1wb3Atc2hpZnQtdW5zaGlmdCJ9LCJQdXNoLCBwb3AsIHNoaWZ0LCB1bnNoaWZ0IiksbWR4KCJwIixudWxsLCJUaGlzIHJlcXVpcmVzIHRoZSB1c2Ugb2YgIixtZHgoImlubGluZUNvZGUiLHtwYXJlbnROYW1lOiJwIn0sIkxpc3QiKSwiIGFuZCAiLG1keCgiaW5saW5lQ29kZSIse3BhcmVudE5hbWU6InAifSwiQXJyYXlMaXN0IikpLG1keCgicHJlIixudWxsLG1keCgiY29kZSIsT2JqZWN0LmFzc2lnbih7cGFyZW50TmFtZToicHJlIn0seyJjbGFzc05hbWUiOiJsYW5ndWFnZS1qYXZhIn0pLCJBcnJheS5wdXNoICAgIC0+IEFycmF5TGlzdC5hZGQoT2JqZWN0IG8pOyAvLyBBcHBlbmQgdGhlIGxpc3RcbkFycmF5LnBvcCAgICAgLT4gQXJyYXlMaXN0LnJlbW92ZShpbnQgaW5kZXgpOyAvLyBSZW1vdmUgbGlzdFtpbmRleF1cbkFycmF5LnNoaWZ0ICAgLT4gQXJyYXlMaXN0LnJlbW92ZSgwKTsgLy8gUmVtb3ZlIGZpcnN0IGVsZW1lbnRcbkFycmF5LnVuc2hpZnQgLT4gQXJyYXlMaXN0LmFkZChpbnQgaW5kZXgsIE9iamVjdCBvKTsgLy8gUHJlcGVuZCB0aGUgbGlzdFxuIikpLG1keCgicCIsbnVsbCwiRXhhbXBsZToiKSxtZHgoInByZSIsbnVsbCxtZHgoImNvZGUiLE9iamVjdC5hc3NpZ24oe3BhcmVudE5hbWU6InByZSJ9LHsiY2xhc3NOYW1lIjoibGFuZ3VhZ2UtamF2YSJ9KSwiaW1wb3J0IGphdmEudXRpbC5BcnJheUxpc3Q7XG5pbXBvcnQgamF2YS51dGlsLkxpc3Q7XG5cbnB1YmxpYyBjbGFzcyBNYWluIHtcblxuICAgIHB1YmxpYyBzdGF0aWMgdm9pZCBtYWluKFN0cmluZ1tdIGFyZ3MpIHtcblxuICAgICAgICBMaXN0PFN0cmluZz4gYW5pbWFscyA9IG5ldyBBcnJheUxpc3Q8PigpO1xuXG4gICAgICAgIGFuaW1hbHMuYWRkKFwiTGlvblwiKTtcbiAgICAgICAgYW5pbWFscy5hZGQoXCJUaWdlclwiKTtcbiAgICAgICAgYW5pbWFscy5hZGQoXCJDYXRcIik7XG4gICAgICAgIGFuaW1hbHMuYWRkKFwiRG9nXCIpO1xuXG4gICAgICAgIFN5c3RlbS5vdXQucHJpbnRsbihhbmltYWxzKTsgLy8gW0xpb24sIFRpZ2VyLCBDYXQsIERvZ11cblxuICAgICAgICAvLyBhZGQoKSAtPiBwdXNoKCk6IEFkZCBpdGVtcyB0byB0aGUgZW5kIG9mIGFuIGFycmF5XG4gICAgICAgIGFuaW1hbHMuYWRkKFwiRWxlcGhhbnRcIik7XG4gICAgICAgIFN5c3RlbS5vdXQucHJpbnRsbihhbmltYWxzKTsgIC8vIFtMaW9uLCBUaWdlciwgQ2F0LCBEb2csIEVsZXBoYW50XVxuXG4gICAgICAgIC8vIHJlbW92ZSgpIC0+IHBvcCgpOiBSZW1vdmUgYW4gaXRlbSBmcm9tIHRoZSBlbmQgb2YgYW4gYXJyYXlcbiAgICAgICAgYW5pbWFscy5yZW1vdmUoYW5pbWFscy5zaXplKCkgLSAxKTtcbiAgICAgICAgU3lzdGVtLm91dC5wcmludGxuKGFuaW1hbHMpOyAvLyBbTGlvbiwgVGlnZXIsIENhdCwgRG9nXVxuXG4gICAgICAgIC8vIGFkZCgwLFwieHl6XCIpIC0+IHVuc2hpZnQoKTogQWRkIGl0ZW1zIHRvIHRoZSBiZWdpbm5pbmcgb2YgYW4gYXJyYXlcbiAgICAgICAgYW5pbWFscy5hZGQoMCwgXCJQZW5ndWluXCIpO1xuICAgICAgICBTeXN0ZW0ub3V0LnByaW50bG4oYW5pbWFscyk7IC8vIFtQZW5ndWluLCBMaW9uLCBUaWdlciwgQ2F0LCBEb2ddXG5cbiAgICAgICAgLy8gcmVtb3ZlKDApIC0+IHNoaWZ0KCk6IFJlbW92ZSBhbiBpdGVtIGZyb20gdGhlIGJlZ2lubmluZyBvZiBhbiBhcnJheVxuICAgICAgICBhbmltYWxzLnJlbW92ZSgwKTtcbiAgICAgICAgU3lzdGVtLm91dC5wcmludGxuKGFuaW1hbHMpOyAvLyBbTGlvbiwgVGlnZXIsIENhdCwgRG9nXVxuXG4gICAgfVxufVxuIikpKTt9aWYodHlwZW9mIE1EWENvbnRlbnQhPT0ndW5kZWZpbmVkJyYmTURYQ29udGVudCYmTURYQ29udGVudD09PU9iamVjdChNRFhDb250ZW50KSYmT2JqZWN0LmlzRXh0ZW5zaWJsZShNRFhDb250ZW50KSl7T2JqZWN0LmRlZmluZVByb3BlcnR5KE1EWENvbnRlbnQsJ19fZmlsZW1ldGEnLHtlbnVtZXJhYmxlOnRydWUsY29uZmlndXJhYmxlOnRydWUsdmFsdWU6e25hbWU6Ik1EWENvbnRlbnQiLGZpbGVuYW1lOiJtYW51YWwvSmF2YS9KYXZhLUluaXRpYWxpc2luZy1BcnJheXMubWQifX0pO31NRFhDb250ZW50LmlzTURYQ29tcG9uZW50PXRydWU7"},{"version":3,"sources":["/Users/okeeffe_d/Project-Imposter/developer-notes/manual/Java/Java-Initialising-Arrays.md"],"names":["React","mdx","makeShortcode","name","MDXDefaultShortcode","props","console","warn","layoutProps","MDXLayout","MDXContent","components","isMDXComponent"],"mappings":"4LAAA,cACE,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,GAAT,KAAoB,eAApB,CACA,cAGF,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAAAC,IAAI,QAAI,SAASC,CAAAA,mBAAT,CAA6BC,KAA7B,CAAoC,CAChEC,OAAO,CAACC,IAAR,CAAa,aAAeJ,IAAf,CAAsB,yEAAnC,EACA,MAAO,WAASE,KAAT,CAAP,CACD,CAHyB,EAA1B,CAKA,GAAMG,CAAAA,WAAW,CAAG,EAApB,CAGA,GAAMC,CAAAA,SAAS,CAAG,SAAlB,CACA,cAAe,SAASC,CAAAA,UAAT,MAGZ,IAFDC,CAAAA,UAEC,MAFDA,UAEC,CADEN,KACF,+CACD,MAAO,KAAC,SAAD,kBAAeG,WAAf,CAAgCH,KAAhC,EAAuC,UAAU,CAAEM,UAAnD,CAA+D,OAAO,CAAC,WAAvE,GACL,SAAQ,CACN,KAAM,6BADA,CAAR,+BADK,CAIL,gHAJK,CAKL,eAAK,0BAAM,UAAU,CAAC,KAAjB,EAA2B,CAC5B,YAAa,eADe,CAA3B,oKAAL,CALK,CAWL,SAAQ,CACN,KAAM,wBADA,CAAR,6BAXK,CAcL,yCAAgC,kBAAY,UAAU,CAAC,GAAvB,SAAhC,SAAyF,kBAAY,UAAU,CAAC,GAAvB,cAAzF,CAdK,CAeL,eAAK,0BAAM,UAAU,CAAC,KAAjB,EAA2B,CAC5B,YAAa,eADe,CAA3B,iRAAL,CAfK,CAsBL,wBAtBK,CAuBL,eAAK,0BAAM,UAAU,CAAC,KAAjB,EAA2B,CAC5B,YAAa,eADe,CAA3B,8lCAAL,CAvBK,CAAP,CA6DD,C,mRAEDD,UAAU,CAACE,cAAX,CAA4B,IAA5B","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"initialising-arrays-in-java\"\n    }}>{`Initialising Arrays in Java`}</h1>\n    <p>{`Basic example on how to declare, declare with allocated size and initialise with default values:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`int[] allocArr = new int[2]; // init with memory for 2 spaces\nint[] declareArr; // declaration\nint[] withValues = { n.data }; // shorthand init with values\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"push-pop-shift-unshift\"\n    }}>{`Push, pop, shift, unshift`}</h2>\n    <p>{`This requires the use of `}<inlineCode parentName=\"p\">{`List`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`ArrayList`}</inlineCode></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`Array.push    -> ArrayList.add(Object o); // Append the list\nArray.pop     -> ArrayList.remove(int index); // Remove list[index]\nArray.shift   -> ArrayList.remove(0); // Remove first element\nArray.unshift -> ArrayList.add(int index, Object o); // Prepend the list\n`}</code></pre>\n    <p>{`Example:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`import java.util.ArrayList;\nimport java.util.List;\n\npublic class Main {\n\n    public static void main(String[] args) {\n\n        List<String> animals = new ArrayList<>();\n\n        animals.add(\"Lion\");\n        animals.add(\"Tiger\");\n        animals.add(\"Cat\");\n        animals.add(\"Dog\");\n\n        System.out.println(animals); // [Lion, Tiger, Cat, Dog]\n\n        // add() -> push(): Add items to the end of an array\n        animals.add(\"Elephant\");\n        System.out.println(animals);  // [Lion, Tiger, Cat, Dog, Elephant]\n\n        // remove() -> pop(): Remove an item from the end of an array\n        animals.remove(animals.size() - 1);\n        System.out.println(animals); // [Lion, Tiger, Cat, Dog]\n\n        // add(0,\"xyz\") -> unshift(): Add items to the beginning of an array\n        animals.add(0, \"Penguin\");\n        System.out.println(animals); // [Penguin, Lion, Tiger, Cat, Dog]\n\n        // remove(0) -> shift(): Remove an item from the beginning of an array\n        animals.remove(0);\n        System.out.println(animals); // [Lion, Tiger, Cat, Dog]\n\n    }\n}\n`}</code></pre>\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  "]}]}