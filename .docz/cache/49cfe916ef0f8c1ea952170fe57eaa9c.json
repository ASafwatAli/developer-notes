{"remainingRequest":"/Users/okeeffe_d/Business/Documentation/node_modules/babel-loader/lib/index.js?{\"presets\":[[\"/Users/okeeffe_d/Business/Documentation/node_modules/babel-preset-docz/dist/index.js\",{\"flow\":true,\"typescript\":false,\"parseProps\":true}]],\"plugins\":[[\"/Users/okeeffe_d/Business/Documentation/node_modules/docz-utils/lib/named-asset-import.js\",{\"loaderMap\":{\"svg\":{\"ReactComponent\":\"@svgr/webpack?-prettier,-svgo![path]\"}}}]],\"babelrc\":false,\"cacheCompression\":true,\"compact\":true}!/Users/okeeffe_d/Business/Documentation/manual/AWS/AWS-CloudFormation-MasterClass.md","dependencies":[{"path":"/Users/okeeffe_d/Business/Documentation/manual/AWS/AWS-CloudFormation-MasterClass.md","mtime":1548209344244},{"path":"/Users/okeeffe_d/Business/Documentation/node_modules/cache-loader/dist/cjs.js","mtime":1548134640245},{"path":"/Users/okeeffe_d/Business/Documentation/node_modules/babel-loader/lib/index.js","mtime":1548134640227}],"contextDependencies":[],"result":["function _typeof(obj){if(typeof Symbol===\"function\"&&typeof Symbol.iterator===\"symbol\"){_typeof=function _typeof(obj){return typeof obj;};}else{_typeof=function _typeof(obj){return obj&&typeof Symbol===\"function\"&&obj.constructor===Symbol&&obj!==Symbol.prototype?\"symbol\":typeof obj;};}return _typeof(obj);}function _objectWithoutProperties(source,excluded){if(source==null)return{};var target=_objectWithoutPropertiesLoose(source,excluded);var key,i;if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++){key=sourceSymbolKeys[i];if(excluded.indexOf(key)>=0)continue;if(!Object.prototype.propertyIsEnumerable.call(source,key))continue;target[key]=source[key];}}return target;}function _objectWithoutPropertiesLoose(source,excluded){if(source==null)return{};var target={};var sourceKeys=Object.keys(source);var key,i;for(i=0;i<sourceKeys.length;i++){key=sourceKeys[i];if(excluded.indexOf(key)>=0)continue;target[key]=source[key];}return target;}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\");}}function _defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}function _createClass(Constructor,protoProps,staticProps){if(protoProps)_defineProperties(Constructor.prototype,protoProps);if(staticProps)_defineProperties(Constructor,staticProps);return Constructor;}function _possibleConstructorReturn(self,call){if(call&&(_typeof(call)===\"object\"||typeof call===\"function\")){return call;}return _assertThisInitialized(self);}function _assertThisInitialized(self){if(self===void 0){throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");}return self;}function _getPrototypeOf(o){_getPrototypeOf=Object.setPrototypeOf?Object.getPrototypeOf:function _getPrototypeOf(o){return o.__proto__||Object.getPrototypeOf(o);};return _getPrototypeOf(o);}function _inherits(subClass,superClass){if(typeof superClass!==\"function\"&&superClass!==null){throw new TypeError(\"Super expression must either be null or a function\");}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,writable:true,configurable:true}});if(superClass)_setPrototypeOf(subClass,superClass);}function _setPrototypeOf(o,p){_setPrototypeOf=Object.setPrototypeOf||function _setPrototypeOf(o,p){o.__proto__=p;return o;};return _setPrototypeOf(o,p);}import React from'react';import{MDXTag}from'@mdx-js/tag';var MDXContent=/*#__PURE__*/function(_React$Component){_inherits(MDXContent,_React$Component);function MDXContent(props){var _this;_classCallCheck(this,MDXContent);_this=_possibleConstructorReturn(this,_getPrototypeOf(MDXContent).call(this,props));_this.layout=null;return _this;}_createClass(MDXContent,[{key:\"render\",value:function render(){var _this$props=this.props,components=_this$props.components,props=_objectWithoutProperties(_this$props,[\"components\"]);return React.createElement(MDXTag,{name:\"wrapper\",components:components},React.createElement(MDXTag,{name:\"h1\",components:components,props:{\"id\":\"cloudformation-master-class\"}},\"CloudFormation Master Class\"),React.createElement(MDXTag,{name:\"h2\",components:components,props:{\"id\":\"what-is-cloudformation\"}},\"What is CloudFormation\"),React.createElement(MDXTag,{name:\"p\",components:components},\"Having >50 services, CloudFormation was brought in to help develops scaffold out the requires AWS stack.\"),React.createElement(MDXTag,{name:\"p\",components:components},\"Eg. I want a security group, two EC2 machines with it, two elastic IPs, an S3 bucket + a load balancer in front.\"),React.createElement(MDXTag,{name:\"p\",components:components},\"CloudFormation will create all of this in the right order with the exact config.\"),React.createElement(MDXTag,{name:\"h2\",components:components,props:{\"id\":\"benefits\"}},\"Benefits\"),React.createElement(MDXTag,{name:\"ol\",components:components},React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ol\"},\"Infrastructure as code\",React.createElement(MDXTag,{name:\"ul\",components:components,parentName:\"li\"},React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"No manual creation\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"Can be version controlled\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"Changes to infrastructure are reviewed through code\"))),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ol\"},\"Cost\",React.createElement(MDXTag,{name:\"ul\",components:components,parentName:\"li\"},React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"Each resource will be tagged so you can estimate the costs and figure out which costs what\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"Great savings strategy\"))),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ol\"},\"Productivity\",React.createElement(MDXTag,{name:\"ul\",components:components,parentName:\"li\"},React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"Ability to destroy and re-create an infrastructure\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"Automated generation of Diagram for templates\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"All declarative\"))),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ol\"},\"Separation of concern\",React.createElement(MDXTag,{name:\"ul\",components:components,parentName:\"li\"},React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"Many different stacks for many different layers\"))),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ol\"},\"Don't re-invent the wheel\",React.createElement(MDXTag,{name:\"ul\",components:components,parentName:\"li\"},React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"Already so many templates\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"Leverage the docs\")))),React.createElement(MDXTag,{name:\"h2\",components:components,props:{\"id\":\"cloudformation-vs-ansible--terraform\"}},\"CloudFormation vs Ansible / Terraform\"),React.createElement(MDXTag,{name:\"ul\",components:components},React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"CF is native, and also contain the latest\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"CF is state based\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"The others are instruction based - difficult to orchestrate\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"For new services, Ansible / Terraform can take a long time\")),React.createElement(MDXTag,{name:\"h2\",components:components,props:{\"id\":\"first-template\"}},\"First template\"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{\"className\":\"language-yaml\"}},\"---\\nResources:\\n  MyInstance:\\n    Type: AWS::EC2::Instance\\n    Properties:\\n      AvailabilityZone: us-east-1a\\n      ImageId: ami-a4c7edb2\\n      InstanceType: t2.micro\\n\")),React.createElement(MDXTag,{name:\"p\",components:components},\"The stack instance can be created, updated or destroyed.\"),React.createElement(MDXTag,{name:\"p\",components:components},\"You cannot edit the stack itself later, you need to just re-update the stack by uploading a new file.\"),React.createElement(MDXTag,{name:\"p\",components:components},\"The stack itself can clean up instances after itself too.\"),React.createElement(MDXTag,{name:\"h2\",components:components,props:{\"id\":\"yaml-intro\"}},\"YAML Intro\"),React.createElement(MDXTag,{name:\"p\",components:components},\"You can use YAML or JSON for writing it - but JSON is tough for it\"),React.createElement(MDXTag,{name:\"p\",components:components},\"Array support:\"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{}},\"product:\\n    - test  : 1\\n      quantity: 2\\n    - test  : 2\\n      quantity: 4\\n\")),React.createElement(MDXTag,{name:\"h2\",components:components,props:{\"id\":\"creating-a-s3-bucket\"}},\"Creating a S3 Bucket\"),React.createElement(MDXTag,{name:\"p\",components:components},\"Googling for the type, you will get the in depth docs from AWS.\"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{}},\"---\\nResources: # always the start\\n    MyS3Bucket: # template name\\n        Type: \\\"AWS::S3::Bucket\\\"\\n        Properties:\\n            AccessControl: PublicRead\\n            BucketName: \\\"www.site.com\\\"\\n\")),React.createElement(MDXTag,{name:\"h3\",components:components,props:{\"id\":\"types-of-updates\"}},\"Types of updates\"),React.createElement(MDXTag,{name:\"ol\",components:components},React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ol\"},\"Updates with no interruption\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ol\"},\"Replacements are breaking and need to replace the resource\")),React.createElement(MDXTag,{name:\"h3\",components:components,props:{\"id\":\"properties\"}},\"Properties\"),React.createElement(MDXTag,{name:\"p\",components:components},\"On the properties under the docs, you can see info about the properties.\"),React.createElement(MDXTag,{name:\"h3\",components:components,props:{\"id\":\"deleting-the-stack\"}},\"Deleting the stack\"),React.createElement(MDXTag,{name:\"p\",components:components},\"Just right click on the CloudFormation and delete the resources.\"),React.createElement(MDXTag,{name:\"h2\",components:components,props:{\"id\":\"cloudformation-template-options\"}},\"CloudFormation template options\"),React.createElement(MDXTag,{name:\"p\",components:components},\"You have a few template options:\"),React.createElement(MDXTag,{name:\"ol\",components:components},React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ol\"},\"Tags\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ol\"},\"Permissions (IAM role)\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ol\"},\"Notifications Options (SNS topic)\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ol\"},\"Timeouts (minutes before calling failure)\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ol\"},\"Rollback on Failure\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ol\"},\"Stack Policy\")),React.createElement(MDXTag,{name:\"p\",components:components},\"These (if you manually do it) all show up on the \\\"create stack\\\" part of CloudFormation.\"),React.createElement(MDXTag,{name:\"p\",components:components},\"The template review also gives you an opportunity to estimate cost.\"),React.createElement(MDXTag,{name:\"h2\",components:components,props:{\"id\":\"cloudformation-designer\"}},\"CloudFormation Designer\"),React.createElement(MDXTag,{name:\"p\",components:components},\"A visual aid to help build the CF Stack. Ensure the template is also well written.\"),React.createElement(MDXTag,{name:\"p\",components:components},\"You can drag and drop basically everything. Dropping it will give you options to selecting documentation etc.\"),React.createElement(MDXTag,{name:\"p\",components:components},\"It's great for dragging and dropping templates and giving information on that template as well.\"),React.createElement(MDXTag,{name:\"h2\",components:components,props:{\"id\":\"building-blocks\"}},\"Building Blocks\"),React.createElement(MDXTag,{name:\"p\",components:components},\"There are a number of building blocks for each template:\"),React.createElement(MDXTag,{name:\"ol\",components:components},React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ol\"},\"Resources: your AWS resources declared in the template\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ol\"},\"Parameters: the dynamic inputs for your template\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ol\"},\"Mappings: the static variables for your template\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ol\"},\"Outputs: References to what has been created\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ol\"},\"Conditionals: List of conditions to perform resource creation\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ol\"},\"Metadata\")),React.createElement(MDXTag,{name:\"h2\",components:components,props:{\"id\":\"template-helpers\"}},\"Template helpers\"),React.createElement(MDXTag,{name:\"ol\",components:components},React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ol\"},\"References\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ol\"},\"Functions\")),React.createElement(MDXTag,{name:\"h2\",components:components,props:{\"id\":\"cloudformation-parameters\"}},\"CloudFormation Parameters\"),React.createElement(MDXTag,{name:\"h3\",components:components,props:{\"id\":\"overview\"}},\"Overview\"),React.createElement(MDXTag,{name:\"p\",components:components},\"What are they? The way to provide inputs to your AWS CloudFormation template.\"),React.createElement(MDXTag,{name:\"p\",components:components},\"They're important to know about it:\"),React.createElement(MDXTag,{name:\"ol\",components:components},React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ol\"},\"You want to reuse your templates across the company\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ol\"},\"Some inputs can not be determined ahead of time\")),React.createElement(MDXTag,{name:\"p\",components:components},\"The major benefit: you won't have to re-upload a template to change its content.\"),React.createElement(MDXTag,{name:\"h3\",components:components,props:{\"id\":\"theory-and-hands-on\"}},\"Theory and hands on\"),React.createElement(MDXTag,{name:\"p\",components:components},\"Parameters can be controlled by all these settings:\"),React.createElement(MDXTag,{name:\"ol\",components:components},React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ol\"},\"Type:\")),React.createElement(MDXTag,{name:\"ul\",components:components},React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"String\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"Number\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"CommaDelimitedList\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"li\"},\"List<Type>\")),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"AWS Parameter (to help catch invalid values - match against existing values in the AWS Account)\")),React.createElement(MDXTag,{name:\"ol\",components:components,props:{\"start\":2}},React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ol\"},\"Description\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ol\"},\"Constraints\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ol\"},\"ConstraintDescription (String)\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ol\"},\"Min/MaxLength\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ol\"},\"Min/MaxValue\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ol\"},\"Defaults\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ol\"},\"AllowedValues (array)\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ol\"},\"AllowedPattern (regexp)\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ol\"},\"NoEcho (Boolean)\")),React.createElement(MDXTag,{name:\"p\",components:components},\"This can be found in the \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"0-parameters-hands-on.yaml\"),\".\"),React.createElement(MDXTag,{name:\"p\",components:components},\"Again - check the docs.\"),React.createElement(MDXTag,{name:\"p\",components:components},\"To reference a parameter, you then go with \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"Key: !Ref Reference\"),\".\"),React.createElement(MDXTag,{name:\"p\",components:components},\"If you have \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"!Select\"),\" for a CommaDelimitedList, you need to go \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"Key: !Select [ArrayNumber, !Ref Reference]\"),\".\"),React.createElement(MDXTag,{name:\"h2\",components:components,props:{\"id\":\"how-to-reference-a-parameter\"}},\"How to reference a parameter\"),React.createElement(MDXTag,{name:\"ul\",components:components},React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"Using the Fn::Ref function.\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"Shorthand in YAML is !Ref.\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"Can reference block, not just parameter\")),React.createElement(MDXTag,{name:\"h2\",components:components,props:{\"id\":\"resources\"}},\"Resources\"),React.createElement(MDXTag,{name:\"p\",components:components},\"Resources are the core of your CloudFormation template. They represent the different AWS Components that will be created and configured.\"),React.createElement(MDXTag,{name:\"p\",components:components},\"They are declared and can be references by eachother. AWS figures out creation, updates, deletes etc.\"),React.createElement(MDXTag,{name:\"p\",components:components},\"There are over 224 types of resources.\"),React.createElement(MDXTag,{name:\"p\",components:components},\"They are identified using the form \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"AWS::aws-product-name::data-type-name\"),\".\"),React.createElement(MDXTag,{name:\"h3\",components:components,props:{\"id\":\"reading-the-docs-for-an-es2-instance\"}},\"Reading the docs for an ES2 Instance\"),React.createElement(MDXTag,{name:\"p\",components:components},\"If you look at the docs, if comes up with both JSON and YAML docs.\"),React.createElement(MDXTag,{name:\"h3\",components:components,props:{\"id\":\"optional-attributes-for-resources\"}},\"Optional Attributes for Resources\"),React.createElement(MDXTag,{name:\"ol\",components:components},React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ol\"},\"DependsOn: very useful to draw a dependency between two resources. For example, only create an ECS cluster after creating an ASG (auto scaling group).\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ol\"},\"DeletionPolicy: protect resource from being deleted even if cloudformation is deleted.\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ol\"},\"CreationPolicy: more info on CFN\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ol\"},\"Metadata: anything you want!\")),React.createElement(MDXTag,{name:\"h3\",components:components,props:{\"id\":\"faq-for-resources\"}},\"FAQ for resources\"),React.createElement(MDXTag,{name:\"ol\",components:components},React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ol\"},\"Can I create a dynamic a dynamic amount of resources? No you can perform code generation. The work around is the \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"li\"},\"troposphere\"),\" Python library.\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ol\"},\"Is every AWS Service supported? Almost. Only a select few niches are not there.\")),React.createElement(MDXTag,{name:\"h2\",components:components,props:{\"id\":\"mappings\"}},\"Mappings\"),React.createElement(MDXTag,{name:\"p\",components:components},\"What are mappings? Fixed ariables within your CF Template. Great for dev vs prod, regions, AMI types etc.\"),React.createElement(MDXTag,{name:\"p\",components:components},\"Every mapping has top, middle and bottom.\"),React.createElement(MDXTag,{name:\"p\",components:components},\"Great to use when you know in advance:\"),React.createElement(MDXTag,{name:\"ul\",components:components},React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"Region\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"AZ\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"AWSAccount\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"Environment (dev vs prod)\")),React.createElement(MDXTag,{name:\"p\",components:components},\"They allow safer control over the template. Use parameters when the values are \",React.createElement(MDXTag,{name:\"em\",components:components,parentName:\"p\"},\"really\"),\" user specific.\"),React.createElement(MDXTag,{name:\"h3\",components:components,props:{\"id\":\"fnfindinmap---accessing-mapping-values\"}},\"Fn::FindInMap - Accessing Mapping Values\"),React.createElement(MDXTag,{name:\"p\",components:components},\"Use Fn::FindInMap to return a named value from a specific key.\"),React.createElement(MDXTag,{name:\"ul\",components:components},React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"!FindInMap \",\"[ MapName, TopLevelKey, SecondLevelKey ]\")),React.createElement(MDXTag,{name:\"p\",components:components},\"Example:\"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{\"className\":\"language-yaml\"}},\"AWSTemplateFormatVersion: '2010-09-09'\\nMappings:\\n  RegionMap:\\n    us-east-1:\\n      '32': 'ami-6411e20d'\\n      '64': 'ami-7a11e213'\\nResources:\\n  myEC2Instance:\\n    Type: 'AWS::EC2::Instance'\\n    Properties:\\n      ImageId: !FindInMap [RegionMap, !Ref 'AWS::Region', 32]\\n      InstanceType: m1.small\\n\")),React.createElement(MDXTag,{name:\"h3\",components:components,props:{\"id\":\"mappings-in-practise\"}},\"Mappings in practise\"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{\"className\":\"language-yaml\"}},\"Parameters:\\n  EnvironmentName:\\n    Description: Environment Name\\n    Type: String\\n    AllowedValues: [development, production]\\n    ConstraintDescription: must be development or production\\n\\nMappings:\\n  AWSRegionArch2AMI:\\n    us-east-1:\\n      HVM64: ami-6869aa05\\n  EnvironmentToInstantType:\\n    development:\\n      instanceType: t2.micro\\n    production:\\n      instanceType: t2.small\\n\\nResources:\\n  EC2Instance:\\n    Type: AWS::EC2::Instance\\n    Properties:\\n      InstanceType:\\n        !FindInMap [\\n          EnvironmentToInstanceType,\\n          !Ref 'EnvironmentName',\\n          instanceType,\\n        ]\\n      ImageId: !FindInMap [AWSRegionArch2AMI, !Ref 'AWS::Region', HVM64]\\n\")),React.createElement(MDXTag,{name:\"h2\",components:components,props:{\"id\":\"concept-pseudo-parameters\"}},\"Concept: Pseudo Parameters\"),React.createElement(MDXTag,{name:\"ul\",components:components},React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"AWS offers us pseudo params in any CF template.\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"These can be used at any time and are enabled by default.\")),React.createElement(MDXTag,{name:\"ol\",components:components},React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ol\"},\"AWS::AccountId\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ol\"},\"AWS::NotificationsARNs\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ol\"},\"AWS::NoValue\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ol\"},\"AWS::Region\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ol\"},\"AWS::StackId\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ol\"},\"AWS::StackName\")),React.createElement(MDXTag,{name:\"h2\",components:components,props:{\"id\":\"cloudformation-outputs\"}},\"CloudFormation Outputs\"),React.createElement(MDXTag,{name:\"p\",components:components},\"What are they? They are \",React.createElement(MDXTag,{name:\"em\",components:components,parentName:\"p\"},\"optional\"),\" values that we can import into other stacks.\"),React.createElement(MDXTag,{name:\"p\",components:components},\"You can also view the outputs in the AWS Console or in using the AWS CLI.\"),React.createElement(MDXTag,{name:\"p\",components:components},\"They're very useful for example if you define a network CloudFormation, and output the variables such as VPC ID and your Subnet IDs.\"),React.createElement(MDXTag,{name:\"p\",components:components},\"It's the best way to perform some collaboration cross stack. Let the expert handle their part and you handle yours.\"),React.createElement(MDXTag,{name:\"h3\",components:components,props:{\"id\":\"outputs-hands-on\"}},\"Outputs Hands-On\"),React.createElement(MDXTag,{name:\"p\",components:components},\"Creating a SSH Security Group as part of one template. We can create an output that references that security group.\"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{\"className\":\"language-yaml\"}},\"Outputs:\\n  <Logical ID>:\\n    Description: Information about the value\\n    Value: Value to return\\n    Export:\\n      Name: Value to export\\n\")),React.createElement(MDXTag,{name:\"p\",components:components},\"In 0-create-ssh-security-group.yaml\"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{\"className\":\"language-yaml\"}},\"Resources:\\n  # here we define a SSH security group that will be used in the entire company\\n  MyCompanyWideSSHSecurityGroup:\\n    # http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group.html\\n    Type: AWS::EC2::SecurityGroup\\n    Properties:\\n      GroupDescription: Enable SSH access via port 22\\n      SecurityGroupIngress:\\n        # we have a lot of rules because it's a perfect security group\\n        # finance team network\\n        - CidrIp: 10.0.48.0/24\\n          FromPort: 22\\n          IpProtocol: tcp\\n          ToPort: 22\\n          # marketing team network\\n        - CidrIp: 10.0.112.0/24\\n          FromPort: 22\\n          IpProtocol: tcp\\n          ToPort: 22\\n          # application team support network\\n        - CidrIp: 10.0.176.0/24\\n          FromPort: 22\\n          IpProtocol: tcp\\n          ToPort: 22\\n\\nOutputs:\\n  StackSSHSecurityGroup:\\n    Description: The SSH Security Group for our Company\\n    Value: !Ref MyCompanyWideSSHSecurityGroup\\n    Export:\\n      Name: SSHSecurityGroup\\n\")),React.createElement(MDXTag,{name:\"p\",components:components},\"It is important to note that for an \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"output\"),\" to be used anywhere, you need to define an \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"export\"),\" value.\"),React.createElement(MDXTag,{name:\"h3\",components:components,props:{\"id\":\"cross-stack-reference\"}},\"Cross Stack Reference\"),React.createElement(MDXTag,{name:\"p\",components:components},\"We use \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"Fn::ImportValue\"),\" in a simple block:\"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{\"className\":\"language-yaml\"}},\"Resources:\\n  MySecureInstance:\\n    # http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html\\n    Type: AWS::EC2::Instance\\n    Properties:\\n      AvailabilityZone: us-east-1a\\n      ImageId: ami-a4c7edb2\\n      InstanceType: t2.micro\\n      SecurityGroups:\\n        # we reference the output here, using the Fn::ImportValue function\\n        - !ImportValue SSHSecurityGroup\\n\")),React.createElement(MDXTag,{name:\"h2\",components:components,props:{\"id\":\"conditions\"}},\"Conditions\"),React.createElement(MDXTag,{name:\"p\",components:components},\"Conditionals are used to control the creation of resources or outputs based on a condition.\"),React.createElement(MDXTag,{name:\"p\",components:components},\"Conditions can be whatever you want them to be, but common ones are:\"),React.createElement(MDXTag,{name:\"ul\",components:components},React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"Environment (dev/test/prod)\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"AWS Region\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"Any parameter value\")),React.createElement(MDXTag,{name:\"p\",components:components},\"Each condition can reference another condition, parameter value or mapping.\"),React.createElement(MDXTag,{name:\"h3\",components:components,props:{\"id\":\"how-to-define-a-condition\"}},\"How to define a condition?\"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{\"className\":\"language-yaml\"}},\"Conditions:\\n  [Logical ID]: [Intrinsic function]\\n\")),React.createElement(MDXTag,{name:\"p\",components:components},\"Logical ID is for you to choose. It's how you name the condition.\"),React.createElement(MDXTag,{name:\"p\",components:components},\"The intrinsic function (logical) can be any of the following: - Fn::And - Fn::Equals - Fn::If - Fn::Not - Fn::Or\"),React.createElement(MDXTag,{name:\"h2\",components:components,props:{\"id\":\"conditional-hands-on\"}},\"Conditional Hands On\"),React.createElement(MDXTag,{name:\"ul\",components:components},React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"Let's analyze a CF template that optionally creates a volume and mount point only if \\\"prod\\\" is specified as a parameter.\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"It utilizes params, mappings, conditionals, outputs\")),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{\"className\":\"language-yaml\"}},\"AWSTemplateFormatVersion: '2010-09-09'\\nMappings:\\n  RegionMap:\\n    us-east-1:\\n      AMI: 'ami-a4c7edb2'\\n      TestAz: 'us-east-1a'\\n    us-west-1:\\n      AMI: 'ami-6df1e514'\\n      TestAz: 'us-west-1a'\\n    us-west-2:\\n      AMI: 'ami-327f5352'\\n      TestAz: 'us-west-2a'\\n    eu-west-1:\\n      AMI: 'ami-d7b9a2b1'\\n      TestAz: 'eu-west-1a'\\n    sa-east-1:\\n      AMI: 'ami-87dab1eb'\\n      TestAz: 'sa-east-1a'\\n    ap-southeast-1:\\n      AMI: 'ami-77af2014'\\n      TestAz: 'ap-southeast-1a'\\n    ap-southeast-2:\\n      AMI: 'ami-10918173'\\n      TestAz: 'ap-southeast-2a'\\n    ap-northeast-1:\\n      AMI: 'ami-e21cc38c'\\n      TestAz: 'ap-northeast-1a'\\nParameters:\\n  EnvType:\\n    Description: Environment type.\\n    Default: test\\n    Type: String\\n    AllowedValues:\\n      - prod\\n      - test\\n    ConstraintDescription: must specify prod or test.\\n\\nConditions:\\n  CreateProdResources: !Equals [!Ref EnvType, prod]\\n\\nResources:\\n  EC2Instance:\\n    Type: 'AWS::EC2::Instance'\\n    Properties:\\n      ImageId: !FindInMap [RegionMap, !Ref 'AWS::Region', AMI]\\n      InstanceType: t2.micro\\n      AvailabilityZone: !FindInMap [RegionMap, !Ref 'AWS::Region', TestAz]\\n\\n  MountPoint:\\n    Type: 'AWS::EC2::VolumeAttachment'\\n    Condition: CreateProdResources\\n    Properties:\\n      InstanceId: !Ref EC2Instance\\n      VolumeId: !Ref NewVolume\\n      Device: /dev/sdh\\n\\n  NewVolume:\\n    Type: 'AWS::EC2::Volume'\\n    Condition: CreateProdResources\\n    Properties:\\n      Size: 100\\n      AvailabilityZone: !GetAtt EC2Instance.AvailabilityZone\\n\\nOutputs:\\n  VolumeId:\\n    Condition: CreateProdResources\\n    Value: !Ref NewVolume\\n\")),React.createElement(MDXTag,{name:\"p\",components:components},\"Note that \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"conditions\"),\" can not be applied to \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"parameters\"),\".\"),React.createElement(MDXTag,{name:\"h2\",components:components,props:{\"id\":\"fngetatt\"}},\"Fn::GetAtt\"),React.createElement(MDXTag,{name:\"p\",components:components},\"Get an attribute attached to any resource that exists. To know the attributes, check the docs.\"),React.createElement(MDXTag,{name:\"h2\",components:components,props:{\"id\":\"cf-metadata\"}},\"CF Metadata\"),React.createElement(MDXTag,{name:\"p\",components:components},\"This is any optional metadata section to include arbitrary YAML that provide details about the template or resource.\"),React.createElement(MDXTag,{name:\"p\",components:components},\"There are 3 metadata keys that have special meaning:\"),React.createElement(MDXTag,{name:\"ol\",components:components},React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ol\"},\"AWS::CloudFormation::Designer\")),React.createElement(MDXTag,{name:\"p\",components:components},\"Describes how the resources are laid out in your template. This is automatically added by the AWS Designer. This helps the UI (x and y)\"),React.createElement(MDXTag,{name:\"ol\",components:components,props:{\"start\":2}},React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ol\"},\"AWS::CloudFormation::Interface\")),React.createElement(MDXTag,{name:\"p\",components:components},\"Define grouping and ordering of input parameters when they are displayed in the AWS Console.\"),React.createElement(MDXTag,{name:\"ol\",components:components,props:{\"start\":3}},React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ol\"},\"AWS::CloudFormation::Init\")),React.createElement(MDXTag,{name:\"p\",components:components},\"Define configuration tasks for cfn-init. It's the most powerful usage of the metadata. This is very important and a lot to learn about it below.\"),React.createElement(MDXTag,{name:\"h3\",components:components,props:{\"id\":\"awscloudformationdesigner-hands-on\"}},\"AWS::CloudFormation::Designer hands on\"),React.createElement(MDXTag,{name:\"p\",components:components},\"This is automatically added for you but worth deleting for online sharing and usage. When dragging and dropping each resource you will see a huge set of metadata left there. The metadata can also be added to each resource.\"),React.createElement(MDXTag,{name:\"h3\",components:components,props:{\"id\":\"awscloudformationinterface-hands-on\"}},\"AWS::CloudFormation::Interface hands on\"),React.createElement(MDXTag,{name:\"p\",components:components},\"Define grouping and ordering of input parameteres when they are displayed in the AWS Console. This is meant when users must input params manually.\"),React.createElement(MDXTag,{name:\"p\",components:components},\"You provide them with grouping, or sorting, that allow them to input parameters efficiently.\"),React.createElement(MDXTag,{name:\"p\",components:components},\"Example: Group all the EC2 related params together.\"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{\"className\":\"language-yaml\"}},\"---\\nParameters:\\n  KeyName:\\n    Description: Name of an existing EC2 key pair for SSH access to the EC2 instance.\\n    Type: AWS::EC2::KeyPair::KeyName\\n  InstanceType:\\n    Description: EC2 instance type.\\n    Type: String\\n    Default: t2.micro\\n    AllowedValues:\\n      - t2.micro\\n      - t2.small\\n      - t2.medium\\n      - m3.medium\\n      - m3.large\\n      - m3.xlarge\\n      - m3.2xlarge\\n  SSHLocation:\\n    Description: The IP address range that can SSH to the EC2 instance.\\n    Type: String\\n    MinLength: '9'\\n    MaxLength: '18'\\n    Default: 0.0.0.0/0\\n    AllowedPattern: \\\"(\\\\d{1,3})\\\\.(\\\\d{1,3})\\\\.(\\\\d{1,3})\\\\.(\\\\d{1,3})/(\\\\d{1,2})\\\"\\n    ConstraintDescription: Must be a valid IP CIDR range of the form x.x.x.x/x.\\n  VPCID:\\n    Description: VPC to operate in\\n    Type: AWS::EC2::VPC::Id\\n  SubnetID:\\n    Description: Subnet ID\\n    Type: AWS::EC2::Subnet::Id\\n  SecurityGroupID:\\n    Description: Security Group\\n    Type: AWS::EC2::SecurityGroup::Id\\n\\nResources:\\n  MyEC2Instance:\\n    Type: 'AWS::EC2::Instance'\\n    Properties:\\n      AvailabilityZone: us-east-1a\\n      ImageId: ami-a4c7edb2\\n      InstanceType: !Ref InstanceType\\n      SecurityGroups:\\n        - !Ref SecurityGroupID\\n      SubnetID: !Ref SubnetID\\n\\nMetadata:\\n  # This is the important part\\n  AWS::CloudFormation::Interface:\\n    ParameterGroups:\\n      - Label:\\n          default: 'Network Configuration'\\n        Parameters:\\n          - VPCID\\n          - SubnetID\\n          - SecurityGroupID\\n      - Label:\\n          default: 'Amazon EC2 Configuration'\\n        Parameters:\\n          - InstanceType\\n          - KeyName\\n    ParameterLabels:\\n      VPCID:\\n        default: 'Which VPC should this be deployed to?'\\n\")),React.createElement(MDXTag,{name:\"p\",components:components},\"If you deploy a new stack using the above, you will see that the \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"Parameters\"),\" block will then drop you to questions about what configuration you are looking for.\"),React.createElement(MDXTag,{name:\"h2\",components:components,props:{\"id\":\"cfn-init-and-ec2-user-data\"}},\"CFN Init and EC2 User Data\"),React.createElement(MDXTag,{name:\"h3\",components:components,props:{\"id\":\"ec2-user-data-overview\"}},\"EC2 User Data Overview\"),React.createElement(MDXTag,{name:\"p\",components:components},\"Many CF templates will be about provisioning computer resources in your AWS Cloud eg. EC2 instances, autoscaling.\"),React.createElement(MDXTag,{name:\"p\",components:components},\"Usually, you want to the instances to be self configured so that they can perform the job they are supposed to perform.\"),React.createElement(MDXTag,{name:\"p\",components:components},\"You can fully automate the EC2 fleet with CF init.\"),React.createElement(MDXTag,{name:\"p\",components:components},\"Example: an EC2 instance that has php and mysql installed on it.\"),React.createElement(MDXTag,{name:\"p\",components:components},\"We want a user-data script to get this up and going. From the EC2 management console, you can basically use the advanced section to add a \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"/bin/bash\"),\" section. This is already started to become more tedious than what we want.\"),React.createElement(MDXTag,{name:\"p\",components:components},\"How can we do this in CloufFormation?\"),React.createElement(MDXTag,{name:\"p\",components:components},\"The following script can use \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"UserData\"),\" to add the script:\"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{\"className\":\"language-yaml\"}},\"Parameters:\\n  KeyName:\\n    Description: Name of an existing EC2 key pair for SSH access to the EC2 instance.\\n    Type: AWS::EC2::KeyPair::KeyName\\n  SSHLocation:\\n    Description: The IP address range that can be used to SSH to the EC2 instances\\n    Type: String\\n    MinLength: '9'\\n    MaxLength: '18'\\n    Default: 0.0.0.0/0\\n    AllowedPattern: \\\"(\\\\d{1,3})\\\\.(\\\\d{1,3})\\\\.(\\\\d{1,3})\\\\.(\\\\d{1,3})/(\\\\d{1,2})\\\"\\n    ConstraintDescription: must be a valid IP CIDR range of the form x.x.x.x/x.\\n\\nResources:\\n  WebServer:\\n    Type: AWS::EC2::Instance\\n    Properties:\\n      ImageId: ami-a4c7edb2\\n      InstanceType: t2.micro\\n      KeyName: !Ref KeyName\\n      SecurityGroups:\\n        - !Ref WebServerSecurityGroup\\n      UserData:\\n        Fn::Base64: | # everything after will be kept as is\\n          #!/bin/bash\\n          yum update -y\\n          yum install -y httpd24 php56 mysql55-server php56-mysqlnd\\n          service httpd start\\n          chkconfig httpd on\\n          groupadd www\\n          usermod -a -G www ec2-user\\n          chown -R root:www /var/www\\n          chmod 2775 /var/www\\n          find /var/www -type d -exec chmod 2775 {} +\\n          find /var/www -type f -exec chmod 0664 {} +\\n          echo \\\"<?php phpinfo(); ?>\\\" > /var/www/html/phpinfo.php\\n\\n  WebServerSecurityGroup:\\n    Type: AWS::EC2::SecurityGroup\\n    Properties:\\n      GroupDescription: 'Enable HTTP access via port 80 + SSH access'\\n      SecurityGroupIngress:\\n        - CidrIp: 0.0.0.0/0\\n          FromPort: '80'\\n          IpProtocol: tcp\\n          ToPort: '80'\\n        - CidrIp: !Ref SSHLocation\\n          FromPort: '22'\\n          IpProtocol: tcp\\n          ToPort: '22'\\n\")),React.createElement(MDXTag,{name:\"p\",components:components},\"Now that we see the power of this, let's have a look at CF Init.\"),React.createElement(MDXTag,{name:\"h3\",components:components,props:{\"id\":\"cloudformation-init\"}},\"CloudFormation Init\"),React.createElement(MDXTag,{name:\"p\",components:components},\"What is the problem with EC2 user data? Well, what happens if we have a large configuration? What if we want to evolve the state without terminating it? How do we make it readable? How do we know or signal that our EC2 user-data script actually completed successfully?\"),React.createElement(MDXTag,{name:\"p\",components:components},\"Amazon creating CF helper scripts.\"),React.createElement(MDXTag,{name:\"p\",components:components},\"There are 4 python scripts that come directly with Amazon Linux AMI or can be installed using \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"yum\"),\" on non-Amazon Linux. They are:\"),React.createElement(MDXTag,{name:\"ol\",components:components},React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ol\"},\"cfn-init: Used to retrieve and interprety the resouce metadata, installing packages, creating files and starting services.\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ol\"},\"cfn-signal: A simple wrapper to signal an AWS CloudFormation CreationPolicy or WaitCondition, enabling you to sync other resources in the stack with the application being ready. This can give us the yes/no if succssful.\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ol\"},\"cfn-get-metadata: A wrapper script making it easy to retrieve either all metadata defined for a resource or path to a specific key or subtree of the resource metadata.\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ol\"},\"cfn-hup: A daemon to check for updates to metadata and execute custom hooks when the changes are detected.\")),React.createElement(MDXTag,{name:\"p\",components:components},\"The usual flow? cfn-init, then cfn-signal, then optionally cfn-hup.\"),React.createElement(MDXTag,{name:\"h3\",components:components,props:{\"id\":\"awscloudformationinit\"}},\"AWS::CloudFormation::Init\"),React.createElement(MDXTag,{name:\"p\",components:components},\"A config contains the following and is executed in that order:\"),React.createElement(MDXTag,{name:\"ol\",components:components},React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ol\"},\"Packages: install a list of packages on the Linux OS (mysql, wordpress, etc)\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ol\"},\"Groups: define user groups\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ol\"},\"Users: define users, and which group they belong to\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ol\"},\"Sources: download an archive file and place it on the ec2 instance (tar, zip, bz2)\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ol\"},\"Files: create files on the ec2 instance, using inline or can be pulled from a URL\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ol\"},\"Commands: run a series of commands\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ol\"},\"Services: launch a list of sysvinit\")),React.createElement(MDXTag,{name:\"p\",components:components},\"You can also have multiple configs and you can run them sequentially etc.\"),React.createElement(MDXTag,{name:\"h3\",components:components,props:{\"id\":\"packages\"}},\"Packages\"),React.createElement(MDXTag,{name:\"p\",components:components},\"You can install packages from the following repositories:\"),React.createElement(MDXTag,{name:\"ul\",components:components},React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"apt\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"msi\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"python\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"rpm\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"rubygems\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"yum\")),React.createElement(MDXTag,{name:\"p\",components:components},\"Packages are processed in the following order: rpm, yum/apt, and then rubygems and python.\"),React.createElement(MDXTag,{name:\"p\",components:components},\"You can also specify a version if you want.\"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{\"className\":\"language-yaml\"}},\"AWS::CloudFormation::Init:\\n  config:\\n    packages:\\n      rpm:\\n        epel: 'http://download....'\\n      yum:\\n        httpd: [] # means latest\\n        php: []\\n        wordpress: []\\n      rubygems:\\n        chef:\\n          - '0.10.2' # get this version\\n\")),React.createElement(MDXTag,{name:\"h3\",components:components,props:{\"id\":\"groups-and-users\"}},\"Groups and Users\"),React.createElement(MDXTag,{name:\"p\",components:components},\"If you want to have multiple users and groups (with optional gid) in your ec2 instance, you can add groups and users to CF and metadata.\"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{\"className\":\"language-yaml\"}},\"AWS::CloudFormation::Init:\\n  config:\\n    groups:\\n      groupeOne: {}\\n      groupTwo:\\n        gid: '45' #gid = group ID\\n    users:\\n      myUser:\\n        groups:\\n          - 'groupOne'\\n          - 'groupTwo'\\n        uid: '50'\\n        homeDir: '/tmp'\\n\")),React.createElement(MDXTag,{name:\"p\",components:components},\"In the larger example...\"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{\"className\":\"language-yaml\"}},\"AWS::CloudFormation::Init:\\n  config:\\n    groups:\\n      apache: {} # assign any group ID\\n    users:\\n      'apache':\\n        groups:\\n          - 'apache' # user apache belongs to apache\\n\")),React.createElement(MDXTag,{name:\"h3\",components:components,props:{\"id\":\"sources\"}},\"Sources\"),React.createElement(MDXTag,{name:\"p\",components:components},\"These are conveninence for a compressed archieve.\"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{\"className\":\"language-yaml\"}},\"AWS::CloudFormation::Init:\\n  config:\\n    # where to unpack and from where\\n    sources:\\n      '/home/ec2-user/aws-cli': 'https://github.com/aws/aws-cli/tarball/master'\\n\")),React.createElement(MDXTag,{name:\"h3\",components:components,props:{\"id\":\"files\"}},\"Files\"),React.createElement(MDXTag,{name:\"p\",components:components},\"Files can be the most used section. Almost all the full power. It can be a specific URL or written inline for what you are doing.\"),React.createElement(MDXTag,{name:\"p\",components:components},\"Base example:\"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{\"className\":\"language-yaml\"}},\"AWS::CloudFormation::Init:\\n  config:\\n    # where to unpack and from where\\n    files:\\n      /tmp/setup.mysql:\\n        content: !Sub |\\n          CREATE DATABASE ${DBName};\\n          CREATE USER '${DBUsername}'@'localhost' IDENTIFIED BY '${DBPassword}';\\n          GRANT ALL ON ${DBName}.* TO '${DBUsername}'@'localhost';\\n          FLUSH PRIVILEDGES;\\n        mode: '000644'\\n        owner: 'root'\\n        group: 'root'\\n\")),React.createElement(MDXTag,{name:\"p\",components:components},\"Full example:\"),React.createElement(MDXTag,{name:\"p\",components:components},\"Note: !Sub is a function used for making substitution. ie where you see \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"${AWS::StackName}\"),\".\"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{\"className\":\"language-yaml\"}},\"AWS::CloudFormation::Init:\\n  config:\\n    # where to unpack and from where\\n    files:\\n      '/tmp/cwlogs/apacheaccess.conf':\\n        content: !Sub |\\n          [general]\\n          state_file= /var/awslogs/agent-state\\n          [/var/log/httpd/access_log]\\n          file = /var/log/httpd/access_log\\n          log_group_name = ${AWS::StackName}\\n          log_stream_name = {instance_id}/apache.log\\n          datetime_format = %d/%b/%Y:%H:%M:%S\\n        mode: '000400'\\n        owner: apache\\n        group: apache\\n      '/var/www/html/index.php':\\n        content: !Sub |\\n          <?php\\n          echo '<h1>AWS CloudFormation sample PHP application for ${AWS::StackName}</h1>';\\n          ?>\\n        mode: '000644'\\n        owner: apache\\n        group: apache\\n      '/etc/cfn/cfn-hup.conf':\\n        content: !Sub |\\n          [main]\\n          stack=${AWS::StackId}\\n          region=${AWS::Region}\\n        mode: '000400'\\n        owner: 'root'\\n        group: 'root'\\n      '/etc/cfn/hooks.d/cfn-auto-reloader.conf':\\n        content: !Sub |\\n          [cfn-auto-reloader-hook]\\n          triggers=post.update\\n          path=Resources.WebServerHost.Metadata.AWS::CloudFormation::Init\\n          action=/opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource WebServerHost --region ${AWS::Region}\\n        mode: '000400'\\n        owner: 'root'\\n        group: 'root'\\n\")),React.createElement(MDXTag,{name:\"h3\",components:components,props:{\"id\":\"fnsub\"}},\"Fn::Sub\"),React.createElement(MDXTag,{name:\"p\",components:components},\"(Or as !Sub) is used to substitute variables from a text. It's a very handy function that will allow you to fully customize your templates.\"),React.createElement(MDXTag,{name:\"p\",components:components},\"For example, you can combine !Sub with References or AWS Pseudo variables.\"),React.createElement(MDXTag,{name:\"p\",components:components},\"Must be in the form \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"${VarName}\"),\".\"),React.createElement(MDXTag,{name:\"p\",components:components},\"Forms:\"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{\"className\":\"language-yaml\"}},\"# You can do this\\n!Sub\\n  - String\\n  - { Var1Name: Var1Value, Var2Name: Var2Value }\\n\\n# or (more complicated and rarely seen)\\n!Sub String\\n\")),React.createElement(MDXTag,{name:\"h3\",components:components,props:{\"id\":\"commands\"}},\"Commands\"),React.createElement(MDXTag,{name:\"p\",components:components},\"You can run commands one at a time in the \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"alphabetical order\"),\".\"),React.createElement(MDXTag,{name:\"p\",components:components},\"You can set a directory from which that command is run, environment variables etc.\"),React.createElement(MDXTag,{name:\"p\",components:components},\"You can also provide a test to control whether the command is executed or not.\"),React.createElement(MDXTag,{name:\"p\",components:components},\"This should be a last resort. You can execute any of the scripts from the above files in this section.\"),React.createElement(MDXTag,{name:\"p\",components:components},\"Example: call the echo command only if the file doesn't exist\"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{\"className\":\"language-yaml\"}},\"commands:\\n  test:\\n    command: 'echo \\\"$MAGIC\\\" > test.txt'\\n    env:\\n      MAGIC: 'I come from the environment!'\\n    cwd: '~'\\n    test: 'test ! -e ~/test.txt' # check file exists\\n    ignoreErrors: 'false' # fail if is doesn't work\\n\")),React.createElement(MDXTag,{name:\"h3\",components:components,props:{\"id\":\"services\"}},\"Services\"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{\"className\":\"language-yaml\"}},\"AWS::CloudFormation::Init:\\n  config:\\n    services:\\n      sysvinit:\\n        httpd:\\n          enabled: 'true'\\n          ensureRunning: 'true'\\n        sendmail:\\n          enabled: 'false'\\n          ensureRunning: 'false'\\n\")),React.createElement(MDXTag,{name:\"h3\",components:components,props:{\"id\":\"cfn-init-and-signal\"}},\"CFN Init and Signal\"),React.createElement(MDXTag,{name:\"p\",components:components},\"First, we use \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"cfn-init\"),\" to launch the config.\"),React.createElement(MDXTag,{name:\"p\",components:components},\"Then we use \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"cfn-signal\"),\" to tell when the config is complete, which will let CF know that the resource creation has been successful.\"),React.createElement(MDXTag,{name:\"p\",components:components},\"This has to be used in conjuction with a \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"CreationPolicy\"),\".\"),React.createElement(MDXTag,{name:\"p\",components:components},\"This example means waiting a max of 5 minutes for the instance to come online and be self configured. If we don't hear back by \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"cfn-signal\"),\" by the, CF will fail and rollback.\"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{\"className\":\"language-yaml\"}},\"CreationPolicy:\\n  ResourceSignal:\\n    Timeout: PT5M\\n\")),React.createElement(MDXTag,{name:\"p\",components:components},\"This is useful in case of a bad update.\"),React.createElement(MDXTag,{name:\"h3\",components:components,props:{\"id\":\"cfn-hup\"}},\"cfn-hup\"),React.createElement(MDXTag,{name:\"ul\",components:components},React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"Cfn-hup can be used to tell your EC2 instance to look for Metadata changes every 15 minutes and apply the metadata configuration again.\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"It's very powerful but you really need to try it out to understand how it works.\")),React.createElement(MDXTag,{name:\"p\",components:components},\"Example from the \\\"files\\\" declation:\"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{\"className\":\"language-yaml\"}},\"'/etc/cfn/cfn-hup.conf':\\n  content: !Sub |\\n    [main]\\n    stack=${AWS::StackId}\\n    region=${AWS::Region}\\n  mode: '000400'\\n  owner: 'root'\\n  group: 'root'\\n'/etc/cfn/hooks.d/cfn-auto-reloader.conf':\\n  content: !Sub |\\n    [cfn-auto-reloader-hook]\\n    triggers=post.update\\n    path=Resources.WebServerHost.Metadata.AWS::CloudFormation::Init\\n    action=/opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource WebServerHost --region ${AWS::Region}\\n  mode: '000400'\\n  owner: 'root'\\n\")),React.createElement(MDXTag,{name:\"h3\",components:components,props:{\"id\":\"cfn-init-hands-on\"}},\"CFN Init Hands-On\"),React.createElement(MDXTag,{name:\"p\",components:components},\"After loading the CFN Init yaml file into CF, it will go through a series of different events.\"),React.createElement(MDXTag,{name:\"p\",components:components},\"You can under \\\"status reason\\\" if there is a success message sent back.\"),React.createElement(MDXTag,{name:\"p\",components:components},\"You need to practise your !Init skilles. It will be extremely handy for creating EC2 Instances or AutoScaling groups.\"),React.createElement(MDXTag,{name:\"p\",components:components},\"Remember logs for ec2-user data are in \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"/var/log/cloud-init-output.log\"),\" and logs for cfn-init are in \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"/var/log/cfn-init.log\"),\", which is really helpful if commands don't complete like you want them to.\"),React.createElement(MDXTag,{name:\"h2\",components:components,props:{\"id\":\"advanced-cf-concepts\"}},\"Advanced CF Concepts\"),React.createElement(MDXTag,{name:\"p\",components:components},\"Review of current standing:\"),React.createElement(MDXTag,{name:\"ul\",components:components},React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"You can check AWS labs templates from \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"li\"},\"https://github/com/awslabs/aws-cloudformation-templates\"),\" to see what you can understand/see good practise.\")),React.createElement(MDXTag,{name:\"p\",components:components},\"The example with WordPress is what is shown in the course.\"),React.createElement(MDXTag,{name:\"h3\",components:components,props:{\"id\":\"using-the-aws-cli\"}},\"Using the AWS CLI\"),React.createElement(MDXTag,{name:\"p\",components:components},\"We can use the AWS CLI to create, update or delete CF templates.\"),React.createElement(MDXTag,{name:\"p\",components:components},\"Super conventient for when you start automating your deployments.\"),React.createElement(MDXTag,{name:\"p\",components:components},\"Once you've downloaded the AWS config, use \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"aws configure --profile <profile_name>\"),\" to configure a profile with the ID and Secret Access key.\"),React.createElement(MDXTag,{name:\"p\",components:components},\"To run a CF command, you can use something like the following \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"aws cloudformation create-stack --stack-name example-cli-stack --template-body file://0-sample-template.yaml --parameters file://0-parameters.json --profile cf-course --region us-east-1\")),React.createElement(MDXTag,{name:\"p\",components:components},\"We can use the \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"parameters.json\"),\" file to set ParameterKey and ParameterValue for all the keys and values we are looking to share.\"),React.createElement(MDXTag,{name:\"p\",components:components},\"After running the command, what you get back is the \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"StackId\"),\".\"),React.createElement(MDXTag,{name:\"h3\",components:components,props:{\"id\":\"using-troposphere-python-to-generate-cloudformation-templates\"}},\"Using Troposphere (Python) to generate CloudFormation templates\"),React.createElement(MDXTag,{name:\"p\",components:components},\"Troposhere allows you to leverage Python write the templates.\"),React.createElement(MDXTag,{name:\"p\",components:components},\"This means you can start using types in your templates for safety.\"),React.createElement(MDXTag,{name:\"p\",components:components},\"You will also have valid CF and can dynamically generate CloudFormation.\"),React.createElement(MDXTag,{name:\"p\",components:components},\"This means you can also have very complex conditions.\"),React.createElement(MDXTag,{name:\"p\",components:components},\"The disadvantage is that the Python needs to generate the JSON for it to be.\"),React.createElement(MDXTag,{name:\"h3\",components:components,props:{\"id\":\"deletionpolicy\"}},\"DeletionPolicy\"),React.createElement(MDXTag,{name:\"p\",components:components},\"This policy can prevent resources from being deleted, or in some cases, back them up before the deletion. This will help prevent doing something really, really bad.\"),React.createElement(MDXTag,{name:\"p\",components:components},\"Deletion Policy can take up the following values:\"),React.createElement(MDXTag,{name:\"ol\",components:components},React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ol\"},\"Delete: AWS CloudFormation will delete the resource and all its content if applicable during stack deletion (does not apply to S3)\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ol\"},\"Retain: AWS CloudFormation keeps the resource without deleting the resource or its contents when its stack is deleted. You can add this deletion policy to any resource type.\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ol\"},\"Snapshot: For resources that support snapshots (AWS::EC2::Volume, AWS::ElasticCache::CacheCluster etc)\")),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{\"className\":\"language-yaml\"}},\"Resources:\\n  myS3Bucket:\\n    Type: AWS::S3::Bucket\\n    DeletionPolicy: Retain\\n\")),React.createElement(MDXTag,{name:\"p\",components:components},\"In the above example, it will create the S3 Bucket, you will see the bucket created.\"),React.createElement(MDXTag,{name:\"p\",components:components},\"Now if we delete that stack and the deletion policy is retain, you will still have that bucket there.\"),React.createElement(MDXTag,{name:\"h3\",components:components,props:{\"id\":\"custom-resources-with-aws-lambda\"}},\"Custom Resources with AWS Lambda\"),React.createElement(MDXTag,{name:\"p\",components:components},\"Custom resources enable you to write custom provisioning logic in templates that AWS CloudFormation runs anytime you create, update (if you changed the custom resource) or delete stacks.\"),React.createElement(MDXTag,{name:\"p\",components:components},\"For example, you might want to include resources that aren't available as AWS CloudFormation resource types.\"),React.createElement(MDXTag,{name:\"p\",components:components},\"Check online for a walkthrough of custom resources.\"),React.createElement(MDXTag,{name:\"h3\",components:components,props:{\"id\":\"best-practises-to-organize-your-cloudformation-templates\"}},\"Best practises to organize your CloudFormation templates\"),React.createElement(MDXTag,{name:\"ol\",components:components},React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ol\"},\"How to organise templates: you can have a layered architecture (horizontal layers) vs service oriented architecture (vertical layers).\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ol\"},\"Use cross stack references eg. to reference a VPC or subnet.\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ol\"},\"Make sure the template is environment agnostic to do dev / test / prod and across regions / accounts seemlessly.\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ol\"},\"Never embed credentials (use parameters with NoEcho or KMS).\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ol\"},\"Use specific parameters types and constraints.\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ol\"},\"Use CFN Init (& latest version of the helper scripts)\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ol\"},\"Validate templates\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ol\"},\"Don't do anything manual on the elements of the stack - that can cause a state mismatch.\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ol\"},\"Verify changes with changesets (and avoid disasters).\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ol\"},\"Use stack policies to prevent critical components from being deleted after create (such as your most valuable RDS database).\")),React.createElement(MDXTag,{name:\"h3\",components:components,props:{\"id\":\"cost-estimate-for-templates\"}},\"Cost estimate for templates\"),React.createElement(MDXTag,{name:\"p\",components:components},\"You can estimate the cost of a stack very easily.\"),React.createElement(MDXTag,{name:\"p\",components:components},\"For this, just upload the stack onto the AWS console, enter the params and click \\\"cost\\\".\"));}}]);return MDXContent;}(React.Component);export{MDXContent as default};MDXContent.__docgenInfo={\"description\":\"\",\"methods\":[],\"displayName\":\"MDXContent\"};",{"version":3,"sources":["/Users/okeeffe_d/Business/Documentation/manual/AWS/AWS-CloudFormation-MasterClass.md"],"names":["React","MDXTag","MDXContent","props","layout","components","Component"],"mappings":"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","sourcesContent":["\n  import React from 'react'\n  import { MDXTag } from '@mdx-js/tag'\n  \n\nexport default class MDXContent extends React.Component {\n  constructor(props) {\n    super(props)\n    this.layout = null\n  }\n  render() {\n    const { components, ...props } = this.props\n\n    return <MDXTag\n             name=\"wrapper\"\n             \n             components={components}><MDXTag name=\"h1\" components={components} props={{\"id\":\"cloudformation-master-class\"}}>{`CloudFormation Master Class`}</MDXTag>\n{/* TOC -->autoauto- [CloudFormation Master Class](#cloudformation-master-class)auto    - [What is CloudFormation](#what-is-cloudformation)auto    - [Benefits](#benefits)auto    - [CloudFormation vs Ansible / Terraform](#cloudformation-vs-ansible--terraform)auto    - [First template](#first-template)auto    - [YAML Intro](#yaml-intro)auto    - [Creating a S3 Bucket](#creating-a-s3-bucket)auto        - [Types of updates](#types-of-updates)auto        - [Properties](#properties)auto        - [Deleting the stack](#deleting-the-stack)auto    - [CloudFormation template options](#cloudformation-template-options)auto    - [CloudFormation Designer](#cloudformation-designer)auto    - [Building Blocks](#building-blocks)auto    - [Template helpers](#template-helpers)auto    - [CloudFormation Parameters](#cloudformation-parameters)auto        - [Overview](#overview)auto        - [Theory and hands on](#theory-and-hands-on)auto    - [How to reference a parameter](#how-to-reference-a-parameter)auto    - [Resources](#resources)auto        - [Reading the docs for an ES2 Instance](#reading-the-docs-for-an-es2-instance)auto        - [Optional Attributes for Resources](#optional-attributes-for-resources)auto        - [FAQ for resources](#faq-for-resources)auto    - [Mappings](#mappings)auto        - [Fn::FindInMap - Accessing Mapping Values](#fnfindinmap---accessing-mapping-values)auto        - [Mappings in practise](#mappings-in-practise)auto    - [Concept: Pseudo Parameters](#concept-pseudo-parameters)auto    - [CloudFormation Outputs](#cloudformation-outputs)auto        - [Outputs Hands-On](#outputs-hands-on)auto        - [Cross Stack Reference](#cross-stack-reference)auto    - [Conditions](#conditions)auto        - [How to define a condition?](#how-to-define-a-condition)auto    - [Conditional Hands On](#conditional-hands-on)auto    - [Fn::GetAtt](#fngetatt)auto    - [CF Metadata](#cf-metadata)auto        - [AWS::CloudFormation::Designer hands on](#awscloudformationdesigner-hands-on)auto        - [AWS::CloudFormation::Interface hands on](#awscloudformationinterface-hands-on)auto    - [CFN Init and EC2 User Data](#cfn-init-and-ec2-user-data)auto        - [EC2 User Data Overview](#ec2-user-data-overview)auto        - [CloudFormation Init](#cloudformation-init)auto        - [AWS::CloudFormation::Init](#awscloudformationinit)auto        - [Packages](#packages)auto        - [Groups and Users](#groups-and-users)auto        - [Sources](#sources)auto        - [Files](#files)auto        - [Fn::Sub](#fnsub)auto        - [Commands](#commands)auto        - [Services](#services)auto        - [CFN Init and Signal](#cfn-init-and-signal)auto        - [cfn-hup](#cfn-hup)auto        - [CFN Init Hands-On](#cfn-init-hands-on)auto    - [Advanced CF Concepts](#advanced-cf-concepts)auto        - [Using the AWS CLI](#using-the-aws-cli)auto        - [Using Troposphere (Python) to generate CloudFormation templates](#using-troposphere-python-to-generate-cloudformation-templates)auto        - [DeletionPolicy](#deletionpolicy)auto        - [Custom Resources with AWS Lambda](#custom-resources-with-aws-lambda)auto        - [Best practises to organize your CloudFormation templates](#best-practises-to-organize-your-cloudformation-templates)auto        - [Cost estimate for templates](#cost-estimate-for-templates)autoauto<!-- /TOC */}\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"what-is-cloudformation\"}}>{`What is CloudFormation`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Having >50 services, CloudFormation was brought in to help develops scaffold out the requires AWS stack.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Eg. I want a security group, two EC2 machines with it, two elastic IPs, an S3 bucket + a load balancer in front.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`CloudFormation will create all of this in the right order with the exact config.`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"benefits\"}}>{`Benefits`}</MDXTag>\n<MDXTag name=\"ol\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ol\">{`Infrastructure as code`}<MDXTag name=\"ul\" components={components} parentName=\"li\">\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`No manual creation`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Can be version controlled`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Changes to infrastructure are reviewed through code`}</MDXTag>\n</MDXTag></MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ol\">{`Cost`}<MDXTag name=\"ul\" components={components} parentName=\"li\">\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Each resource will be tagged so you can estimate the costs and figure out which costs what`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Great savings strategy`}</MDXTag>\n</MDXTag></MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ol\">{`Productivity`}<MDXTag name=\"ul\" components={components} parentName=\"li\">\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Ability to destroy and re-create an infrastructure`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Automated generation of Diagram for templates`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`All declarative`}</MDXTag>\n</MDXTag></MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ol\">{`Separation of concern`}<MDXTag name=\"ul\" components={components} parentName=\"li\">\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Many different stacks for many different layers`}</MDXTag>\n</MDXTag></MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ol\">{`Don't re-invent the wheel`}<MDXTag name=\"ul\" components={components} parentName=\"li\">\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Already so many templates`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Leverage the docs`}</MDXTag>\n</MDXTag></MDXTag>\n</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"cloudformation-vs-ansible--terraform\"}}>{`CloudFormation vs Ansible / Terraform`}</MDXTag>\n<MDXTag name=\"ul\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`CF is native, and also contain the latest`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`CF is state based`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`The others are instruction based - difficult to orchestrate`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`For new services, Ansible / Terraform can take a long time`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"first-template\"}}>{`First template`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-yaml\"}}>{`---\nResources:\n  MyInstance:\n    Type: AWS::EC2::Instance\n    Properties:\n      AvailabilityZone: us-east-1a\n      ImageId: ami-a4c7edb2\n      InstanceType: t2.micro\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`The stack instance can be created, updated or destroyed.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`You cannot edit the stack itself later, you need to just re-update the stack by uploading a new file.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`The stack itself can clean up instances after itself too.`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"yaml-intro\"}}>{`YAML Intro`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`You can use YAML or JSON for writing it - but JSON is tough for it`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Array support:`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{}}>{`product:\n    - test  : 1\n      quantity: 2\n    - test  : 2\n      quantity: 4\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"creating-a-s3-bucket\"}}>{`Creating a S3 Bucket`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Googling for the type, you will get the in depth docs from AWS.`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{}}>{`---\nResources: # always the start\n    MyS3Bucket: # template name\n        Type: \"AWS::S3::Bucket\"\n        Properties:\n            AccessControl: PublicRead\n            BucketName: \"www.site.com\"\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"types-of-updates\"}}>{`Types of updates`}</MDXTag>\n<MDXTag name=\"ol\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ol\">{`Updates with no interruption`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ol\">{`Replacements are breaking and need to replace the resource`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"properties\"}}>{`Properties`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`On the properties under the docs, you can see info about the properties.`}</MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"deleting-the-stack\"}}>{`Deleting the stack`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Just right click on the CloudFormation and delete the resources.`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"cloudformation-template-options\"}}>{`CloudFormation template options`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`You have a few template options:`}</MDXTag>\n<MDXTag name=\"ol\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ol\">{`Tags`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ol\">{`Permissions (IAM role)`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ol\">{`Notifications Options (SNS topic)`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ol\">{`Timeouts (minutes before calling failure)`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ol\">{`Rollback on Failure`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ol\">{`Stack Policy`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"p\" components={components}>{`These (if you manually do it) all show up on the \"create stack\" part of CloudFormation.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`The template review also gives you an opportunity to estimate cost.`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"cloudformation-designer\"}}>{`CloudFormation Designer`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`A visual aid to help build the CF Stack. Ensure the template is also well written.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`You can drag and drop basically everything. Dropping it will give you options to selecting documentation etc.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`It's great for dragging and dropping templates and giving information on that template as well.`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"building-blocks\"}}>{`Building Blocks`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`There are a number of building blocks for each template:`}</MDXTag>\n<MDXTag name=\"ol\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ol\">{`Resources: your AWS resources declared in the template`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ol\">{`Parameters: the dynamic inputs for your template`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ol\">{`Mappings: the static variables for your template`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ol\">{`Outputs: References to what has been created`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ol\">{`Conditionals: List of conditions to perform resource creation`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ol\">{`Metadata`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"template-helpers\"}}>{`Template helpers`}</MDXTag>\n<MDXTag name=\"ol\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ol\">{`References`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ol\">{`Functions`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"cloudformation-parameters\"}}>{`CloudFormation Parameters`}</MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"overview\"}}>{`Overview`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`What are they? The way to provide inputs to your AWS CloudFormation template.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`They're important to know about it:`}</MDXTag>\n<MDXTag name=\"ol\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ol\">{`You want to reuse your templates across the company`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ol\">{`Some inputs can not be determined ahead of time`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"p\" components={components}>{`The major benefit: you won't have to re-upload a template to change its content.`}</MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"theory-and-hands-on\"}}>{`Theory and hands on`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Parameters can be controlled by all these settings:`}</MDXTag>\n<MDXTag name=\"ol\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ol\">{`Type:`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"ul\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`String`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Number`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`CommaDelimitedList`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`List<Type>`}</MDXTag></MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`AWS Parameter (to help catch invalid values - match against existing values in the AWS Account)`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"ol\" components={components} props={{\"start\":2}}>\n<MDXTag name=\"li\" components={components} parentName=\"ol\">{`Description`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ol\">{`Constraints`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ol\">{`ConstraintDescription (String)`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ol\">{`Min/MaxLength`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ol\">{`Min/MaxValue`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ol\">{`Defaults`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ol\">{`AllowedValues (array)`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ol\">{`AllowedPattern (regexp)`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ol\">{`NoEcho (Boolean)`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"p\" components={components}>{`This can be found in the `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`0-parameters-hands-on.yaml`}</MDXTag>{`.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Again - check the docs.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`To reference a parameter, you then go with `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`Key: !Ref Reference`}</MDXTag>{`.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`If you have `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`!Select`}</MDXTag>{` for a CommaDelimitedList, you need to go `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`Key: !Select [ArrayNumber, !Ref Reference]`}</MDXTag>{`.`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"how-to-reference-a-parameter\"}}>{`How to reference a parameter`}</MDXTag>\n<MDXTag name=\"ul\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Using the Fn::Ref function.`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Shorthand in YAML is !Ref.`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Can reference block, not just parameter`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"resources\"}}>{`Resources`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Resources are the core of your CloudFormation template. They represent the different AWS Components that will be created and configured.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`They are declared and can be references by eachother. AWS figures out creation, updates, deletes etc.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`There are over 224 types of resources.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`They are identified using the form `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`AWS::aws-product-name::data-type-name`}</MDXTag>{`.`}</MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"reading-the-docs-for-an-es2-instance\"}}>{`Reading the docs for an ES2 Instance`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`If you look at the docs, if comes up with both JSON and YAML docs.`}</MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"optional-attributes-for-resources\"}}>{`Optional Attributes for Resources`}</MDXTag>\n<MDXTag name=\"ol\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ol\">{`DependsOn: very useful to draw a dependency between two resources. For example, only create an ECS cluster after creating an ASG (auto scaling group).`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ol\">{`DeletionPolicy: protect resource from being deleted even if cloudformation is deleted.`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ol\">{`CreationPolicy: more info on CFN`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ol\">{`Metadata: anything you want!`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"faq-for-resources\"}}>{`FAQ for resources`}</MDXTag>\n<MDXTag name=\"ol\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ol\">{`Can I create a dynamic a dynamic amount of resources? No you can perform code generation. The work around is the `}<MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`troposphere`}</MDXTag>{` Python library.`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ol\">{`Is every AWS Service supported? Almost. Only a select few niches are not there.`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"mappings\"}}>{`Mappings`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`What are mappings? Fixed ariables within your CF Template. Great for dev vs prod, regions, AMI types etc.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Every mapping has top, middle and bottom.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Great to use when you know in advance:`}</MDXTag>\n<MDXTag name=\"ul\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Region`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`AZ`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`AWSAccount`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Environment (dev vs prod)`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"p\" components={components}>{`They allow safer control over the template. Use parameters when the values are `}<MDXTag name=\"em\" components={components} parentName=\"p\">{`really`}</MDXTag>{` user specific.`}</MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"fnfindinmap---accessing-mapping-values\"}}>{`Fn::FindInMap - Accessing Mapping Values`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Use Fn::FindInMap to return a named value from a specific key.`}</MDXTag>\n<MDXTag name=\"ul\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`!FindInMap `}{`[ MapName, TopLevelKey, SecondLevelKey ]`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Example:`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-yaml\"}}>{`AWSTemplateFormatVersion: '2010-09-09'\nMappings:\n  RegionMap:\n    us-east-1:\n      '32': 'ami-6411e20d'\n      '64': 'ami-7a11e213'\nResources:\n  myEC2Instance:\n    Type: 'AWS::EC2::Instance'\n    Properties:\n      ImageId: !FindInMap [RegionMap, !Ref 'AWS::Region', 32]\n      InstanceType: m1.small\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"mappings-in-practise\"}}>{`Mappings in practise`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-yaml\"}}>{`Parameters:\n  EnvironmentName:\n    Description: Environment Name\n    Type: String\n    AllowedValues: [development, production]\n    ConstraintDescription: must be development or production\n\nMappings:\n  AWSRegionArch2AMI:\n    us-east-1:\n      HVM64: ami-6869aa05\n  EnvironmentToInstantType:\n    development:\n      instanceType: t2.micro\n    production:\n      instanceType: t2.small\n\nResources:\n  EC2Instance:\n    Type: AWS::EC2::Instance\n    Properties:\n      InstanceType:\n        !FindInMap [\n          EnvironmentToInstanceType,\n          !Ref 'EnvironmentName',\n          instanceType,\n        ]\n      ImageId: !FindInMap [AWSRegionArch2AMI, !Ref 'AWS::Region', HVM64]\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"concept-pseudo-parameters\"}}>{`Concept: Pseudo Parameters`}</MDXTag>\n<MDXTag name=\"ul\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`AWS offers us pseudo params in any CF template.`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`These can be used at any time and are enabled by default.`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"ol\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ol\">{`AWS::AccountId`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ol\">{`AWS::NotificationsARNs`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ol\">{`AWS::NoValue`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ol\">{`AWS::Region`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ol\">{`AWS::StackId`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ol\">{`AWS::StackName`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"cloudformation-outputs\"}}>{`CloudFormation Outputs`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`What are they? They are `}<MDXTag name=\"em\" components={components} parentName=\"p\">{`optional`}</MDXTag>{` values that we can import into other stacks.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`You can also view the outputs in the AWS Console or in using the AWS CLI.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`They're very useful for example if you define a network CloudFormation, and output the variables such as VPC ID and your Subnet IDs.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`It's the best way to perform some collaboration cross stack. Let the expert handle their part and you handle yours.`}</MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"outputs-hands-on\"}}>{`Outputs Hands-On`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Creating a SSH Security Group as part of one template. We can create an output that references that security group.`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-yaml\"}}>{`Outputs:\n  <Logical ID>:\n    Description: Information about the value\n    Value: Value to return\n    Export:\n      Name: Value to export\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`In 0-create-ssh-security-group.yaml`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-yaml\"}}>{`Resources:\n  # here we define a SSH security group that will be used in the entire company\n  MyCompanyWideSSHSecurityGroup:\n    # http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group.html\n    Type: AWS::EC2::SecurityGroup\n    Properties:\n      GroupDescription: Enable SSH access via port 22\n      SecurityGroupIngress:\n        # we have a lot of rules because it's a perfect security group\n        # finance team network\n        - CidrIp: 10.0.48.0/24\n          FromPort: 22\n          IpProtocol: tcp\n          ToPort: 22\n          # marketing team network\n        - CidrIp: 10.0.112.0/24\n          FromPort: 22\n          IpProtocol: tcp\n          ToPort: 22\n          # application team support network\n        - CidrIp: 10.0.176.0/24\n          FromPort: 22\n          IpProtocol: tcp\n          ToPort: 22\n\nOutputs:\n  StackSSHSecurityGroup:\n    Description: The SSH Security Group for our Company\n    Value: !Ref MyCompanyWideSSHSecurityGroup\n    Export:\n      Name: SSHSecurityGroup\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`It is important to note that for an `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`output`}</MDXTag>{` to be used anywhere, you need to define an `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`export`}</MDXTag>{` value.`}</MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"cross-stack-reference\"}}>{`Cross Stack Reference`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`We use `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`Fn::ImportValue`}</MDXTag>{` in a simple block:`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-yaml\"}}>{`Resources:\n  MySecureInstance:\n    # http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html\n    Type: AWS::EC2::Instance\n    Properties:\n      AvailabilityZone: us-east-1a\n      ImageId: ami-a4c7edb2\n      InstanceType: t2.micro\n      SecurityGroups:\n        # we reference the output here, using the Fn::ImportValue function\n        - !ImportValue SSHSecurityGroup\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"conditions\"}}>{`Conditions`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Conditionals are used to control the creation of resources or outputs based on a condition.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Conditions can be whatever you want them to be, but common ones are:`}</MDXTag>\n<MDXTag name=\"ul\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Environment (dev/test/prod)`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`AWS Region`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Any parameter value`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Each condition can reference another condition, parameter value or mapping.`}</MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"how-to-define-a-condition\"}}>{`How to define a condition?`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-yaml\"}}>{`Conditions:\n  [Logical ID]: [Intrinsic function]\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`Logical ID is for you to choose. It's how you name the condition.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`The intrinsic function (logical) can be any of the following: - Fn::And - Fn::Equals - Fn::If - Fn::Not - Fn::Or`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"conditional-hands-on\"}}>{`Conditional Hands On`}</MDXTag>\n<MDXTag name=\"ul\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Let's analyze a CF template that optionally creates a volume and mount point only if \"prod\" is specified as a parameter.`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`It utilizes params, mappings, conditionals, outputs`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-yaml\"}}>{`AWSTemplateFormatVersion: '2010-09-09'\nMappings:\n  RegionMap:\n    us-east-1:\n      AMI: 'ami-a4c7edb2'\n      TestAz: 'us-east-1a'\n    us-west-1:\n      AMI: 'ami-6df1e514'\n      TestAz: 'us-west-1a'\n    us-west-2:\n      AMI: 'ami-327f5352'\n      TestAz: 'us-west-2a'\n    eu-west-1:\n      AMI: 'ami-d7b9a2b1'\n      TestAz: 'eu-west-1a'\n    sa-east-1:\n      AMI: 'ami-87dab1eb'\n      TestAz: 'sa-east-1a'\n    ap-southeast-1:\n      AMI: 'ami-77af2014'\n      TestAz: 'ap-southeast-1a'\n    ap-southeast-2:\n      AMI: 'ami-10918173'\n      TestAz: 'ap-southeast-2a'\n    ap-northeast-1:\n      AMI: 'ami-e21cc38c'\n      TestAz: 'ap-northeast-1a'\nParameters:\n  EnvType:\n    Description: Environment type.\n    Default: test\n    Type: String\n    AllowedValues:\n      - prod\n      - test\n    ConstraintDescription: must specify prod or test.\n\nConditions:\n  CreateProdResources: !Equals [!Ref EnvType, prod]\n\nResources:\n  EC2Instance:\n    Type: 'AWS::EC2::Instance'\n    Properties:\n      ImageId: !FindInMap [RegionMap, !Ref 'AWS::Region', AMI]\n      InstanceType: t2.micro\n      AvailabilityZone: !FindInMap [RegionMap, !Ref 'AWS::Region', TestAz]\n\n  MountPoint:\n    Type: 'AWS::EC2::VolumeAttachment'\n    Condition: CreateProdResources\n    Properties:\n      InstanceId: !Ref EC2Instance\n      VolumeId: !Ref NewVolume\n      Device: /dev/sdh\n\n  NewVolume:\n    Type: 'AWS::EC2::Volume'\n    Condition: CreateProdResources\n    Properties:\n      Size: 100\n      AvailabilityZone: !GetAtt EC2Instance.AvailabilityZone\n\nOutputs:\n  VolumeId:\n    Condition: CreateProdResources\n    Value: !Ref NewVolume\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`Note that `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`conditions`}</MDXTag>{` can not be applied to `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`parameters`}</MDXTag>{`.`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"fngetatt\"}}>{`Fn::GetAtt`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Get an attribute attached to any resource that exists. To know the attributes, check the docs.`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"cf-metadata\"}}>{`CF Metadata`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`This is any optional metadata section to include arbitrary YAML that provide details about the template or resource.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`There are 3 metadata keys that have special meaning:`}</MDXTag>\n<MDXTag name=\"ol\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ol\">{`AWS::CloudFormation::Designer`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Describes how the resources are laid out in your template. This is automatically added by the AWS Designer. This helps the UI (x and y)`}</MDXTag>\n<MDXTag name=\"ol\" components={components} props={{\"start\":2}}>\n<MDXTag name=\"li\" components={components} parentName=\"ol\">{`AWS::CloudFormation::Interface`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Define grouping and ordering of input parameters when they are displayed in the AWS Console.`}</MDXTag>\n<MDXTag name=\"ol\" components={components} props={{\"start\":3}}>\n<MDXTag name=\"li\" components={components} parentName=\"ol\">{`AWS::CloudFormation::Init`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Define configuration tasks for cfn-init. It's the most powerful usage of the metadata. This is very important and a lot to learn about it below.`}</MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"awscloudformationdesigner-hands-on\"}}>{`AWS::CloudFormation::Designer hands on`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`This is automatically added for you but worth deleting for online sharing and usage. When dragging and dropping each resource you will see a huge set of metadata left there. The metadata can also be added to each resource.`}</MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"awscloudformationinterface-hands-on\"}}>{`AWS::CloudFormation::Interface hands on`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Define grouping and ordering of input parameteres when they are displayed in the AWS Console. This is meant when users must input params manually.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`You provide them with grouping, or sorting, that allow them to input parameters efficiently.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Example: Group all the EC2 related params together.`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-yaml\"}}>{`---\nParameters:\n  KeyName:\n    Description: Name of an existing EC2 key pair for SSH access to the EC2 instance.\n    Type: AWS::EC2::KeyPair::KeyName\n  InstanceType:\n    Description: EC2 instance type.\n    Type: String\n    Default: t2.micro\n    AllowedValues:\n      - t2.micro\n      - t2.small\n      - t2.medium\n      - m3.medium\n      - m3.large\n      - m3.xlarge\n      - m3.2xlarge\n  SSHLocation:\n    Description: The IP address range that can SSH to the EC2 instance.\n    Type: String\n    MinLength: '9'\n    MaxLength: '18'\n    Default: 0.0.0.0/0\n    AllowedPattern: \"(\\\\d{1,3})\\\\.(\\\\d{1,3})\\\\.(\\\\d{1,3})\\\\.(\\\\d{1,3})/(\\\\d{1,2})\"\n    ConstraintDescription: Must be a valid IP CIDR range of the form x.x.x.x/x.\n  VPCID:\n    Description: VPC to operate in\n    Type: AWS::EC2::VPC::Id\n  SubnetID:\n    Description: Subnet ID\n    Type: AWS::EC2::Subnet::Id\n  SecurityGroupID:\n    Description: Security Group\n    Type: AWS::EC2::SecurityGroup::Id\n\nResources:\n  MyEC2Instance:\n    Type: 'AWS::EC2::Instance'\n    Properties:\n      AvailabilityZone: us-east-1a\n      ImageId: ami-a4c7edb2\n      InstanceType: !Ref InstanceType\n      SecurityGroups:\n        - !Ref SecurityGroupID\n      SubnetID: !Ref SubnetID\n\nMetadata:\n  # This is the important part\n  AWS::CloudFormation::Interface:\n    ParameterGroups:\n      - Label:\n          default: 'Network Configuration'\n        Parameters:\n          - VPCID\n          - SubnetID\n          - SecurityGroupID\n      - Label:\n          default: 'Amazon EC2 Configuration'\n        Parameters:\n          - InstanceType\n          - KeyName\n    ParameterLabels:\n      VPCID:\n        default: 'Which VPC should this be deployed to?'\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`If you deploy a new stack using the above, you will see that the `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`Parameters`}</MDXTag>{` block will then drop you to questions about what configuration you are looking for.`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"cfn-init-and-ec2-user-data\"}}>{`CFN Init and EC2 User Data`}</MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"ec2-user-data-overview\"}}>{`EC2 User Data Overview`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Many CF templates will be about provisioning computer resources in your AWS Cloud eg. EC2 instances, autoscaling.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Usually, you want to the instances to be self configured so that they can perform the job they are supposed to perform.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`You can fully automate the EC2 fleet with CF init.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Example: an EC2 instance that has php and mysql installed on it.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`We want a user-data script to get this up and going. From the EC2 management console, you can basically use the advanced section to add a `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`/bin/bash`}</MDXTag>{` section. This is already started to become more tedious than what we want.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`How can we do this in CloufFormation?`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`The following script can use `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`UserData`}</MDXTag>{` to add the script:`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-yaml\"}}>{`Parameters:\n  KeyName:\n    Description: Name of an existing EC2 key pair for SSH access to the EC2 instance.\n    Type: AWS::EC2::KeyPair::KeyName\n  SSHLocation:\n    Description: The IP address range that can be used to SSH to the EC2 instances\n    Type: String\n    MinLength: '9'\n    MaxLength: '18'\n    Default: 0.0.0.0/0\n    AllowedPattern: \"(\\\\d{1,3})\\\\.(\\\\d{1,3})\\\\.(\\\\d{1,3})\\\\.(\\\\d{1,3})/(\\\\d{1,2})\"\n    ConstraintDescription: must be a valid IP CIDR range of the form x.x.x.x/x.\n\nResources:\n  WebServer:\n    Type: AWS::EC2::Instance\n    Properties:\n      ImageId: ami-a4c7edb2\n      InstanceType: t2.micro\n      KeyName: !Ref KeyName\n      SecurityGroups:\n        - !Ref WebServerSecurityGroup\n      UserData:\n        Fn::Base64: | # everything after will be kept as is\n          #!/bin/bash\n          yum update -y\n          yum install -y httpd24 php56 mysql55-server php56-mysqlnd\n          service httpd start\n          chkconfig httpd on\n          groupadd www\n          usermod -a -G www ec2-user\n          chown -R root:www /var/www\n          chmod 2775 /var/www\n          find /var/www -type d -exec chmod 2775 {} +\n          find /var/www -type f -exec chmod 0664 {} +\n          echo \"<?php phpinfo(); ?>\" > /var/www/html/phpinfo.php\n\n  WebServerSecurityGroup:\n    Type: AWS::EC2::SecurityGroup\n    Properties:\n      GroupDescription: 'Enable HTTP access via port 80 + SSH access'\n      SecurityGroupIngress:\n        - CidrIp: 0.0.0.0/0\n          FromPort: '80'\n          IpProtocol: tcp\n          ToPort: '80'\n        - CidrIp: !Ref SSHLocation\n          FromPort: '22'\n          IpProtocol: tcp\n          ToPort: '22'\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`Now that we see the power of this, let's have a look at CF Init.`}</MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"cloudformation-init\"}}>{`CloudFormation Init`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`What is the problem with EC2 user data? Well, what happens if we have a large configuration? What if we want to evolve the state without terminating it? How do we make it readable? How do we know or signal that our EC2 user-data script actually completed successfully?`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Amazon creating CF helper scripts.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`There are 4 python scripts that come directly with Amazon Linux AMI or can be installed using `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`yum`}</MDXTag>{` on non-Amazon Linux. They are:`}</MDXTag>\n<MDXTag name=\"ol\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ol\">{`cfn-init: Used to retrieve and interprety the resouce metadata, installing packages, creating files and starting services.`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ol\">{`cfn-signal: A simple wrapper to signal an AWS CloudFormation CreationPolicy or WaitCondition, enabling you to sync other resources in the stack with the application being ready. This can give us the yes/no if succssful.`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ol\">{`cfn-get-metadata: A wrapper script making it easy to retrieve either all metadata defined for a resource or path to a specific key or subtree of the resource metadata.`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ol\">{`cfn-hup: A daemon to check for updates to metadata and execute custom hooks when the changes are detected.`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"p\" components={components}>{`The usual flow? cfn-init, then cfn-signal, then optionally cfn-hup.`}</MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"awscloudformationinit\"}}>{`AWS::CloudFormation::Init`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`A config contains the following and is executed in that order:`}</MDXTag>\n<MDXTag name=\"ol\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ol\">{`Packages: install a list of packages on the Linux OS (mysql, wordpress, etc)`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ol\">{`Groups: define user groups`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ol\">{`Users: define users, and which group they belong to`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ol\">{`Sources: download an archive file and place it on the ec2 instance (tar, zip, bz2)`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ol\">{`Files: create files on the ec2 instance, using inline or can be pulled from a URL`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ol\">{`Commands: run a series of commands`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ol\">{`Services: launch a list of sysvinit`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"p\" components={components}>{`You can also have multiple configs and you can run them sequentially etc.`}</MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"packages\"}}>{`Packages`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`You can install packages from the following repositories:`}</MDXTag>\n<MDXTag name=\"ul\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`apt`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`msi`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`python`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`rpm`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`rubygems`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`yum`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Packages are processed in the following order: rpm, yum/apt, and then rubygems and python.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`You can also specify a version if you want.`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-yaml\"}}>{`AWS::CloudFormation::Init:\n  config:\n    packages:\n      rpm:\n        epel: 'http://download....'\n      yum:\n        httpd: [] # means latest\n        php: []\n        wordpress: []\n      rubygems:\n        chef:\n          - '0.10.2' # get this version\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"groups-and-users\"}}>{`Groups and Users`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`If you want to have multiple users and groups (with optional gid) in your ec2 instance, you can add groups and users to CF and metadata.`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-yaml\"}}>{`AWS::CloudFormation::Init:\n  config:\n    groups:\n      groupeOne: {}\n      groupTwo:\n        gid: '45' #gid = group ID\n    users:\n      myUser:\n        groups:\n          - 'groupOne'\n          - 'groupTwo'\n        uid: '50'\n        homeDir: '/tmp'\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`In the larger example...`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-yaml\"}}>{`AWS::CloudFormation::Init:\n  config:\n    groups:\n      apache: {} # assign any group ID\n    users:\n      'apache':\n        groups:\n          - 'apache' # user apache belongs to apache\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"sources\"}}>{`Sources`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`These are conveninence for a compressed archieve.`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-yaml\"}}>{`AWS::CloudFormation::Init:\n  config:\n    # where to unpack and from where\n    sources:\n      '/home/ec2-user/aws-cli': 'https://github.com/aws/aws-cli/tarball/master'\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"files\"}}>{`Files`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Files can be the most used section. Almost all the full power. It can be a specific URL or written inline for what you are doing.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Base example:`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-yaml\"}}>{`AWS::CloudFormation::Init:\n  config:\n    # where to unpack and from where\n    files:\n      /tmp/setup.mysql:\n        content: !Sub |\n          CREATE DATABASE \\${DBName};\n          CREATE USER '\\${DBUsername}'@'localhost' IDENTIFIED BY '\\${DBPassword}';\n          GRANT ALL ON \\${DBName}.* TO '\\${DBUsername}'@'localhost';\n          FLUSH PRIVILEDGES;\n        mode: '000644'\n        owner: 'root'\n        group: 'root'\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`Full example:`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Note: !Sub is a function used for making substitution. ie where you see `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`\\${AWS::StackName}`}</MDXTag>{`.`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-yaml\"}}>{`AWS::CloudFormation::Init:\n  config:\n    # where to unpack and from where\n    files:\n      '/tmp/cwlogs/apacheaccess.conf':\n        content: !Sub |\n          [general]\n          state_file= /var/awslogs/agent-state\n          [/var/log/httpd/access_log]\n          file = /var/log/httpd/access_log\n          log_group_name = \\${AWS::StackName}\n          log_stream_name = {instance_id}/apache.log\n          datetime_format = %d/%b/%Y:%H:%M:%S\n        mode: '000400'\n        owner: apache\n        group: apache\n      '/var/www/html/index.php':\n        content: !Sub |\n          <?php\n          echo '<h1>AWS CloudFormation sample PHP application for \\${AWS::StackName}</h1>';\n          ?>\n        mode: '000644'\n        owner: apache\n        group: apache\n      '/etc/cfn/cfn-hup.conf':\n        content: !Sub |\n          [main]\n          stack=\\${AWS::StackId}\n          region=\\${AWS::Region}\n        mode: '000400'\n        owner: 'root'\n        group: 'root'\n      '/etc/cfn/hooks.d/cfn-auto-reloader.conf':\n        content: !Sub |\n          [cfn-auto-reloader-hook]\n          triggers=post.update\n          path=Resources.WebServerHost.Metadata.AWS::CloudFormation::Init\n          action=/opt/aws/bin/cfn-init -v --stack \\${AWS::StackName} --resource WebServerHost --region \\${AWS::Region}\n        mode: '000400'\n        owner: 'root'\n        group: 'root'\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"fnsub\"}}>{`Fn::Sub`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`(Or as !Sub) is used to substitute variables from a text. It's a very handy function that will allow you to fully customize your templates.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`For example, you can combine !Sub with References or AWS Pseudo variables.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Must be in the form `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`\\${VarName}`}</MDXTag>{`.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Forms:`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-yaml\"}}>{`# You can do this\n!Sub\n  - String\n  - { Var1Name: Var1Value, Var2Name: Var2Value }\n\n# or (more complicated and rarely seen)\n!Sub String\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"commands\"}}>{`Commands`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`You can run commands one at a time in the `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`alphabetical order`}</MDXTag>{`.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`You can set a directory from which that command is run, environment variables etc.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`You can also provide a test to control whether the command is executed or not.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`This should be a last resort. You can execute any of the scripts from the above files in this section.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Example: call the echo command only if the file doesn't exist`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-yaml\"}}>{`commands:\n  test:\n    command: 'echo \"\\$MAGIC\" > test.txt'\n    env:\n      MAGIC: 'I come from the environment!'\n    cwd: '~'\n    test: 'test ! -e ~/test.txt' # check file exists\n    ignoreErrors: 'false' # fail if is doesn't work\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"services\"}}>{`Services`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-yaml\"}}>{`AWS::CloudFormation::Init:\n  config:\n    services:\n      sysvinit:\n        httpd:\n          enabled: 'true'\n          ensureRunning: 'true'\n        sendmail:\n          enabled: 'false'\n          ensureRunning: 'false'\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"cfn-init-and-signal\"}}>{`CFN Init and Signal`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`First, we use `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`cfn-init`}</MDXTag>{` to launch the config.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Then we use `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`cfn-signal`}</MDXTag>{` to tell when the config is complete, which will let CF know that the resource creation has been successful.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`This has to be used in conjuction with a `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`CreationPolicy`}</MDXTag>{`.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`This example means waiting a max of 5 minutes for the instance to come online and be self configured. If we don't hear back by `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`cfn-signal`}</MDXTag>{` by the, CF will fail and rollback.`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-yaml\"}}>{`CreationPolicy:\n  ResourceSignal:\n    Timeout: PT5M\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`This is useful in case of a bad update.`}</MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"cfn-hup\"}}>{`cfn-hup`}</MDXTag>\n<MDXTag name=\"ul\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Cfn-hup can be used to tell your EC2 instance to look for Metadata changes every 15 minutes and apply the metadata configuration again.`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`It's very powerful but you really need to try it out to understand how it works.`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Example from the \"files\" declation:`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-yaml\"}}>{`'/etc/cfn/cfn-hup.conf':\n  content: !Sub |\n    [main]\n    stack=\\${AWS::StackId}\n    region=\\${AWS::Region}\n  mode: '000400'\n  owner: 'root'\n  group: 'root'\n'/etc/cfn/hooks.d/cfn-auto-reloader.conf':\n  content: !Sub |\n    [cfn-auto-reloader-hook]\n    triggers=post.update\n    path=Resources.WebServerHost.Metadata.AWS::CloudFormation::Init\n    action=/opt/aws/bin/cfn-init -v --stack \\${AWS::StackName} --resource WebServerHost --region \\${AWS::Region}\n  mode: '000400'\n  owner: 'root'\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"cfn-init-hands-on\"}}>{`CFN Init Hands-On`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`After loading the CFN Init yaml file into CF, it will go through a series of different events.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`You can under \"status reason\" if there is a success message sent back.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`You need to practise your !Init skilles. It will be extremely handy for creating EC2 Instances or AutoScaling groups.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Remember logs for ec2-user data are in `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`/var/log/cloud-init-output.log`}</MDXTag>{` and logs for cfn-init are in `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`/var/log/cfn-init.log`}</MDXTag>{`, which is really helpful if commands don't complete like you want them to.`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"advanced-cf-concepts\"}}>{`Advanced CF Concepts`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Review of current standing:`}</MDXTag>\n<MDXTag name=\"ul\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`You can check AWS labs templates from `}<MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`https://github/com/awslabs/aws-cloudformation-templates`}</MDXTag>{` to see what you can understand/see good practise.`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"p\" components={components}>{`The example with WordPress is what is shown in the course.`}</MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"using-the-aws-cli\"}}>{`Using the AWS CLI`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`We can use the AWS CLI to create, update or delete CF templates.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Super conventient for when you start automating your deployments.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Once you've downloaded the AWS config, use `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`aws configure --profile <profile_name>`}</MDXTag>{` to configure a profile with the ID and Secret Access key.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`To run a CF command, you can use something like the following `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`aws cloudformation create-stack --stack-name example-cli-stack --template-body file://0-sample-template.yaml --parameters file://0-parameters.json --profile cf-course --region us-east-1`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`We can use the `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`parameters.json`}</MDXTag>{` file to set ParameterKey and ParameterValue for all the keys and values we are looking to share.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`After running the command, what you get back is the `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`StackId`}</MDXTag>{`.`}</MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"using-troposphere-python-to-generate-cloudformation-templates\"}}>{`Using Troposphere (Python) to generate CloudFormation templates`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Troposhere allows you to leverage Python write the templates.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`This means you can start using types in your templates for safety.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`You will also have valid CF and can dynamically generate CloudFormation.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`This means you can also have very complex conditions.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`The disadvantage is that the Python needs to generate the JSON for it to be.`}</MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"deletionpolicy\"}}>{`DeletionPolicy`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`This policy can prevent resources from being deleted, or in some cases, back them up before the deletion. This will help prevent doing something really, really bad.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Deletion Policy can take up the following values:`}</MDXTag>\n<MDXTag name=\"ol\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ol\">{`Delete: AWS CloudFormation will delete the resource and all its content if applicable during stack deletion (does not apply to S3)`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ol\">{`Retain: AWS CloudFormation keeps the resource without deleting the resource or its contents when its stack is deleted. You can add this deletion policy to any resource type.`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ol\">{`Snapshot: For resources that support snapshots (AWS::EC2::Volume, AWS::ElasticCache::CacheCluster etc)`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-yaml\"}}>{`Resources:\n  myS3Bucket:\n    Type: AWS::S3::Bucket\n    DeletionPolicy: Retain\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`In the above example, it will create the S3 Bucket, you will see the bucket created.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Now if we delete that stack and the deletion policy is retain, you will still have that bucket there.`}</MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"custom-resources-with-aws-lambda\"}}>{`Custom Resources with AWS Lambda`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Custom resources enable you to write custom provisioning logic in templates that AWS CloudFormation runs anytime you create, update (if you changed the custom resource) or delete stacks.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`For example, you might want to include resources that aren't available as AWS CloudFormation resource types.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Check online for a walkthrough of custom resources.`}</MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"best-practises-to-organize-your-cloudformation-templates\"}}>{`Best practises to organize your CloudFormation templates`}</MDXTag>\n<MDXTag name=\"ol\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ol\">{`How to organise templates: you can have a layered architecture (horizontal layers) vs service oriented architecture (vertical layers).`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ol\">{`Use cross stack references eg. to reference a VPC or subnet.`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ol\">{`Make sure the template is environment agnostic to do dev / test / prod and across regions / accounts seemlessly.`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ol\">{`Never embed credentials (use parameters with NoEcho or KMS).`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ol\">{`Use specific parameters types and constraints.`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ol\">{`Use CFN Init (& latest version of the helper scripts)`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ol\">{`Validate templates`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ol\">{`Don't do anything manual on the elements of the stack - that can cause a state mismatch.`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ol\">{`Verify changes with changesets (and avoid disasters).`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ol\">{`Use stack policies to prevent critical components from being deleted after create (such as your most valuable RDS database).`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"cost-estimate-for-templates\"}}>{`Cost estimate for templates`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`You can estimate the cost of a stack very easily.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`For this, just upload the stack onto the AWS console, enter the params and click \"cost\".`}</MDXTag>\n           </MDXTag>\n  }\n}\n  "]}]}