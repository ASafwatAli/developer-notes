{"remainingRequest":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/docz-core/node_modules/babel-loader/lib/index.js??ref--6-1!/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/@mdx-js/loader/index.js??ref--6-2!/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/source-map-loader/index.js!/Users/dennis.okeeffe/Project-Imposter/developer-notes/manual/Stripe/Spring-Stripe-Configuration.md","dependencies":[{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/manual/Stripe/Spring-Stripe-Configuration.md","mtime":1578800990275},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/cache-loader/dist/cjs.js","mtime":1564095360956},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/docz-core/node_modules/babel-loader/lib/index.js","mtime":1562568123838},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/@mdx-js/loader/index.js","mtime":1565139338792},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/source-map-loader/index.js","mtime":1564095361765}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/dennis.okeeffe/Project-Imposter/developer-notes/manual/Stripe/Spring-Stripe-Configuration.md"],"names":["React","mdx","makeShortcode","name","MDXDefaultShortcode","props","console","warn","layoutProps","MDXLayout","MDXContent","components","isMDXComponent"],"mappings":"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","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"java-spring-stripe-configuration\"\n    }}>{`Java Spring Stripe Configuration`}</h1>\n    <p>{`In this short example, we are going to \"Hello, World!\" a Stripe charge!`}</p>\n    <h2 {...{\n      \"id\": \"resources\"\n    }}>{`Resources`}</h2>\n    <ol>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"https://docs.dennisokeeffe.com/manual-java-gradle-intro\"\n        }}>{`Gradle Intro Docs`}</a></li>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"https://spring.io/guides/gs/rest-service/\"\n        }}>{`Spring Guide to Rest Services`}</a></li>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"https://stripe.com/docs/api\"\n        }}>{`Stripe API`}</a></li>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"https://stackabuse.com/stripe-integration-with-java-spring-for-payment-processing/\"\n        }}>{`Stripe with Spring`}</a></li>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"https://github.com/stripe/stripe-java#usage\"\n        }}>{`Stripe Github Java Usage`}</a></li>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/http/ResponseEntity.html\"\n        }}>{`Spring ResponseEntity`}</a></li>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"https://www.tutorialspoint.com/spring_boot/spring_boot_service_components.htm\"\n        }}>{`Tutorials Point: Service Components`}</a></li>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"https://gist.github.com/fteychene/1e5c30fc86d7623084d0\"\n        }}>{`Basic Spring Boot Gitignore file`}</a></li>\n    </ol>\n    <h2 {...{\n      \"id\": \"setup\"\n    }}>{`Setup`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`mkdir hello-spring-stripe && cd hello-spring-stripe\nmkdir -p src/main/java/stripe\ntouch build.gradle src/main/java/stripe/StripeCharge.java src/main/java/stripe/StripeChageController.java src/main/java/stripe/Application.java .env\n# init gradle\ngradle wrapper\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"setup-buildgradle\"\n    }}>{`Setup build.gradle`}</h2>\n    <p>{`Add the following for Stripe + Spring:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`buildscript {\n    repositories {\n        mavenCentral()\n    }\n    dependencies {\n        classpath(\"org.springframework.boot:spring-boot-gradle-plugin:2.2.1.RELEASE\")\n    }\n}\n\napply plugin: 'java'\napply plugin: 'eclipse'\napply plugin: 'idea'\napply plugin: 'org.springframework.boot'\napply plugin: 'io.spring.dependency-management'\n\nbootJar {\n    baseName = 'hello-spring-jar'\n    version =  '0.1.0'\n}\n\nrepositories {\n    mavenCentral()\n}\n\nsourceCompatibility = 1.8\ntargetCompatibility = 1.8\n\ndependencies {\n    compile(\"com.stripe:stripe-java:16.5.1\")\n    compile(\"org.springframework.boot:spring-boot-starter-web\")\n    compile(\"io.github.cdimascio:java-dotenv:5.1.3\")\n    testCompile('org.springframework.boot:spring-boot-starter-test')\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"set-up-dotenv-file\"\n    }}>{`Set up dotenv file`}</h2>\n    <p>{`We are using a local dotenv file for this \"Hello, World!\" level example.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`# required\nSK_TEST_KEY=sk_...\n# not required\nPK_TEST_KEY=pk_...\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"setting-up-the-main-application\"\n    }}>{`Setting up the main application`}</h2>\n    <p>{`In `}<inlineCode parentName=\"p\">{`src/main/java/stripe/Application.java`}</inlineCode>{`, add the following:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`package stripecharge;\n\nimport org.springframework.boot.SpringApplication;\nimport org.springframework.boot.autoconfigure.SpringBootApplication;\n\n@SpringBootApplication\npublic class Application {\n\n  public static void main(String[] args) {\n    SpringApplication.run(Application.class, args);\n  }\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"setting-up-the-model\"\n    }}>{`Setting up the model`}</h2>\n    <p>{`In `}<inlineCode parentName=\"p\">{`src/main/java/stripe/StripeCharge.java`}</inlineCode>{`:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`package stripecharge;\n\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class StripeCharge {\n\n  private final long amount;\n  private final String receiptEmail;\n  private final String source;\n  private final String currency;\n\n  public StripeCharge(long amount, String receiptEmail) {\n    this.amount = amount;\n    this.source = \"tok_visa\";\n    this.currency = \"usd\";\n    this.receiptEmail = receiptEmail;\n  }\n\n  public Map<String, Object> getCharge() {\n    Map<String, Object> params = new HashMap<String, Object>();\n    params.put(\"amount\", this.amount);\n    params.put(\"currency\", this.currency);\n    // source should obtained with Stripe.js\n    params.put(\"source\", this.source);\n    params.put(\n      \"description\",\n      \"My First Test Charge (created for API docs)\"\n    );\n    params.put(\"receipt_email\",this.receiptEmail);\n    return params;\n  }\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"setting-up-the-controller\"\n    }}>{`Setting up the controller`}</h2>\n    <p>{`In `}<inlineCode parentName=\"p\">{`src/main/java/stripe/StripeChargeController.java`}</inlineCode>{`:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`package stripecharge;\n\n// NOTE: RequestMapping + RequestParam not required for this demo\n// but kept in for reference purposes if wanted to play around later\nimport java.util.concurrent.atomic.AtomicLong;\nimport org.springframework.web.bind.annotation.RequestMapping;\nimport org.springframework.web.bind.annotation.PostMapping;\nimport org.springframework.web.bind.annotation.RequestParam;\nimport org.springframework.web.bind.annotation.RequestBody;\nimport org.springframework.http.ResponseEntity;\nimport org.springframework.http.HttpStatus;\nimport org.springframework.web.bind.annotation.RestController;\nimport io.github.cdimascio.dotenv.Dotenv;\nimport com.stripe.Stripe;\nimport com.stripe.exception.StripeException;\nimport com.stripe.model.Charge;\nimport com.stripe.net.RequestOptions;\n\n@RestController\n@RequestMapping(\"/api\")\npublic class StripeChargeController {\n\n  @PostMapping(\"/charge\")\n  public ResponseEntity<String> createCharge(@RequestBody StripeCharge stripeCharge) {\n    try {\n      // for demonstrations sake, using .env file\n      Dotenv dotenv = Dotenv.load();\n\n      // creating the charge\n      Stripe.apiKey = dotenv.get(\"SK_TEST_KEY\");\n      Charge charge = Charge.create(stripeCharge.getCharge());\n      System.out.println(charge);\n      return new ResponseEntity<String>(\"Success\", HttpStatus.CREATED);\n    } catch (StripeException e) {\n      e.printStackTrace();\n      return new ResponseEntity<String>(\"Failure\", HttpStatus.INTERNAL_SERVER_ERROR);\n\n    }\n  }\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"build-run-and-ping\"\n    }}>{`Build, Run and Ping`}</h2>\n    <p>{`Run `}<inlineCode parentName=\"p\">{`./gradlew build`}</inlineCode>{` to build to project or `}<inlineCode parentName=\"p\">{`./gradlew bootRun`}</inlineCode>{` to build and run.`}</p>\n    <p>{`Once the project is running, we can ping `}<inlineCode parentName=\"p\">{`http POST http://localhost:8080/api/charge amount:=200 receiptEmail=hello@example.com`}</inlineCode>{` (using HTTPie) and we get a response like the following:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-s\"\n      }}>{`HTTP/1.1 201\nContent-Length: 7\nContent-Type: application/json;charset=UTF-8\nDate: Sun, 12 Jan 2020 03:33:10 GMT\n\nSuccess\n`}</code></pre>\n    <p>{`Check your Stripe Dashboard under `}<inlineCode parentName=\"p\">{`Developer > Events`}</inlineCode>{` and you'll see we have successfully made a payment! Hooray!`}</p>\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  "]}]}