{"remainingRequest":"/Users/okeeffe_d/Project-Imposter/developer-notes/node_modules/docz-core/node_modules/babel-loader/lib/index.js??ref--6-1!/Users/okeeffe_d/Project-Imposter/developer-notes/node_modules/@mdx-js/loader/index.js??ref--6-2!/Users/okeeffe_d/Project-Imposter/developer-notes/node_modules/source-map-loader/index.js!/Users/okeeffe_d/Project-Imposter/developer-notes/manual/Nginx/Nginx-Nodejs-Docker.md","dependencies":[{"path":"/Users/okeeffe_d/Project-Imposter/developer-notes/manual/Nginx/Nginx-Nodejs-Docker.md","mtime":1548282824959},{"path":"/Users/okeeffe_d/Project-Imposter/developer-notes/node_modules/cache-loader/dist/cjs.js","mtime":1561535530324},{"path":"/Users/okeeffe_d/Project-Imposter/developer-notes/node_modules/docz-core/node_modules/babel-loader/lib/index.js","mtime":1560300163820},{"path":"/Users/okeeffe_d/Project-Imposter/developer-notes/node_modules/@mdx-js/loader/index.js","mtime":1561535530532},{"path":"/Users/okeeffe_d/Project-Imposter/developer-notes/node_modules/source-map-loader/index.js","mtime":1548285283521}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9vYmplY3RXaXRob3V0UHJvcGVydGllcyBmcm9tIi9Vc2Vycy9va2VlZmZlX2QvUHJvamVjdC1JbXBvc3Rlci9kZXZlbG9wZXItbm90ZXMvbm9kZV9tb2R1bGVzL2JhYmVsLXByZXNldC1yZWFjdC1hcHAvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzIjsvKiBAanN4IG1keCAqL2ltcG9ydCBSZWFjdCBmcm9tJ3JlYWN0JztpbXBvcnR7bWR4fWZyb20nQG1keC1qcy9yZWFjdCc7LyogQGpzeCBtZHggKi92YXIgbWFrZVNob3J0Y29kZT1mdW5jdGlvbiBtYWtlU2hvcnRjb2RlKG5hbWUpe3JldHVybiBmdW5jdGlvbiBNRFhEZWZhdWx0U2hvcnRjb2RlKHByb3BzKXtjb25zb2xlLndhcm4oIkNvbXBvbmVudCAiK25hbWUrIiB3YXMgbm90IGltcG9ydGVkLCBleHBvcnRlZCwgb3IgcHJvdmlkZWQgYnkgTURYUHJvdmlkZXIgYXMgZ2xvYmFsIHNjb3BlIik7cmV0dXJuIG1keCgiZGl2Iixwcm9wcyk7fTt9O3ZhciBsYXlvdXRQcm9wcz17fTt2YXIgTURYTGF5b3V0PSJ3cmFwcGVyIjtleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBNRFhDb250ZW50KF9yZWYpe3ZhciBjb21wb25lbnRzPV9yZWYuY29tcG9uZW50cyxwcm9wcz1fb2JqZWN0V2l0aG91dFByb3BlcnRpZXMoX3JlZixbImNvbXBvbmVudHMiXSk7cmV0dXJuIG1keChNRFhMYXlvdXQsT2JqZWN0LmFzc2lnbih7fSxsYXlvdXRQcm9wcyxwcm9wcyx7Y29tcG9uZW50czpjb21wb25lbnRzLG1keFR5cGU6Ik1EWExheW91dCJ9KSxtZHgoImgxIix7ImlkIjoiZG9ja2VyLWNvbnRhaW5lci13aXRoLW5naW54LWFuZC1ub2RlanMifSwiRG9ja2VyIGNvbnRhaW5lciB3aXRoIE5naW54IGFuZCBOb2RlanMiKSxtZHgoInAiLG51bGwsIkZpcnN0IGNyZWF0ZSBhIGRpcmVjdG9yeSBmb3IgYm90aCAiLG1keCgiaW5saW5lQ29kZSIse3BhcmVudE5hbWU6InAifSwibmdpbngiKSwiIGFuZCAiLG1keCgiaW5saW5lQ29kZSIse3BhcmVudE5hbWU6InAifSwibm9kZWpzIiksIi4iKSxtZHgoInAiLG51bGwsIldpdGhpbiB0aGUgTm9kZSBmb2xkZXIsIGNyZWF0ZSBhICIsbWR4KCJpbmxpbmVDb2RlIix7cGFyZW50TmFtZToicCJ9LCJEb2NrZXJmaWxlIiksIiB0aGF0IGNvbnRhaW5zIHRoZSBmb2xsb3dpbmcgdG8gZXhwb3NlIGFuIGFwcCBydW5uaW5nIG9uIGEgcGFydGljdWxhciBwb3J0OiIpLG1keCgicHJlIixudWxsLG1keCgiY29kZSIsT2JqZWN0LmFzc2lnbih7cGFyZW50TmFtZToicHJlIn0se30pLCJGUk9NIG1oYXJ0L2FscGluZS1ub2RlXG4jIFByZXRlbmQgdG8gY29weSB0aGUgbm9kZSBhcHAgZW50cnlcbiMgZnJvbSBjdXJyZW50IGZvbGRlclxuQ09QWSBpbmRleC5qcyAuXG4jIEV4cG9zZSB0aGUgcG9ydCB0aGF0IGl0IGlzIHJ1bm5pbmcgb25cbkVYUE9TRSAzMDAwXG4jIFJ1biBub2RlIC0gY2hhbmNlcyBhcmUgeW91IHdhbnQgcG0yIGhlcmVcbkNNRCBub2RlIGluZGV4LmpzXG4iKSksbWR4KCJwIixudWxsLCJUaGVuIHdlIGNhbiBidWlsZCB3aXRoICIsbWR4KCJpbmxpbmVDb2RlIix7cGFyZW50TmFtZToicCJ9LCJkb2NrZXIgYnVpbHQgLXQgZm9vL25vZGUgLiIpKSxtZHgoInAiLG51bGwsIkFmdGVyIHRoZSBidWlsZCwgcnVuIHRoZSBjb250YWluZXIgd2l0aCBwb3J0IDMwMDAgZXhwb3NlZCB1c2luZyAiLG1keCgiaW5saW5lQ29kZSIse3BhcmVudE5hbWU6InAifSwiZG9ja2VyIHJ1biAtZCAtcCAzMDAwOjMwMDAgLS1uYW1lIG5vZGUtYXBwIGZvby9ub2RlIiksIi4iKSxtZHgoInAiLG51bGwsIkZpcnN0LCB3ZSBjYW4gdGVzdCB0aGUgTmdpbnggbGF0ZXN0IGNvbnRhaW5lciBjb250YWluZXIgdXNpbmcgIixtZHgoImlubGluZUNvZGUiLHtwYXJlbnROYW1lOiJwIn0sImRvY2tlciBydW4gLS1ybSAtcCA4MDAwOjgwIG5naW54IiksIiB0byB0ZXN0IG91dCBuZ2lueDpsYXRlc3QuIFRoaXMganVzdCByZW1vdmVzIHRoZSBjb250YWluZXIgYWZ0ZXIgcnVubmluZy4iKSxtZHgoInAiLG51bGwsIkluIHRoZSAiLG1keCgiaW5saW5lQ29kZSIse3BhcmVudE5hbWU6InAifSwibmdpbngiKSwiIGZvbGRlciwgd2UgY2FuIGNyZWF0ZSAiLG1keCgiaW5saW5lQ29kZSIse3BhcmVudE5hbWU6InAifSwiZGVmYXVsdC5jb25mIiksIiBmaWxlIHRvIG92ZXJ3cml0ZSB0aGUgaW5pdGlhbCBvbmUuIiksbWR4KCJwIixudWxsLCJJZiBzZXR0aW5ncyBhcmUgbm90IGRlZmluZWQgYmVsb3csIE5naW54IHdpbGwgdXNlIHRoZSBkZWZhdWx0IHZhbHVlcy4iKSxtZHgoInByZSIsbnVsbCxtZHgoImNvZGUiLE9iamVjdC5hc3NpZ24oe3BhcmVudE5hbWU6InByZSJ9LHt9KSwiIyBjb25maWdcbnNlcnZlciB7XG4gICAgbG9jYXRpb24gLyB7XG4gICAgICAgICMgaG9zdCBuYW1lIGZpcnN0XG4gICAgICAgIHByb3h5X3NldF9oZWFkZXIgSG9zdCAkaG9zdDtcbiAgICAgICAgIyBleHRyYSBoZWFkZXJzIGZvciBob3N0IElQIGFkZHJlc3NcbiAgICAgICAgcHJveHlfc2V0X2hlYWRlciBYLVJlYWwtSVAgJHJlbW90ZV9hZGRyO1xuICAgICAgICBwcm94eV9zZXRfaGVhZGVyIFgtRm9yd2FyZGVkLUZvciAkcHJveHlfYWRkX3hfZm9yd2FyZGVkX2ZvcjtcbiAgICAgICAgIyBwYXNzaW5nIHByb3RvY29sIHVzZWQgKGh0dHAgfCBodHRwcylcbiAgICAgICAgcHJveHlfc2V0X2hlYWRlciBYLUZvcndhcmRlZC1Qcm90byAkc2NoZW1lO1xuICAgICAgICAjIHdoZXJlIHRvIHByb3h5IHJlcXMgdG9cbiAgICAgICAgcHJveHlfcGFzcyBodHRwOi8vYXBwOjMwMDA7XG4gICAgfVxufVxuIikpLG1keCgicCIsbnVsbCwiRm9yIHRoZSBEb2NrZXIgZmlsZS4iKSxtZHgoInByZSIsbnVsbCxtZHgoImNvZGUiLE9iamVjdC5hc3NpZ24oe3BhcmVudE5hbWU6InByZSJ9LHt9KSwiRlJPTSBuZ2lueFxuQ09QWSBkZWZhdWx0LmNvbmcgL2V0Yy9uZ2lueC9jb25mLmQvXG4iKSksbWR4KCJwIixudWxsLCJUaGVuIGJ1aWxkIG91dCB0aGlzIGZpbGUgdXNpbmcgIixtZHgoImlubGluZUNvZGUiLHtwYXJlbnROYW1lOiJwIn0sImRvY2tlciBidWlsdCAtdCBmb28vbmdpbnggLiIpLCIuIiksbWR4KCJwIixudWxsLCJSdW5uaW5nIGl0OiAiLG1keCgiaW5saW5lQ29kZSIse3BhcmVudE5hbWU6InAifSwiZG9ja2VyIHJ1biAtcCA4MDAwOjgwIC0tbGluayBub2RlLWFwcDphcHAgLS1uYW1lIG5naW54LXByb3h5IGZvby9uZ2lueCIpKSxtZHgoInAiLG51bGwsIlNpbmNlIHdlIGV4cG9zZSAzMDAwIGZvciB0aGUgbm9kZS1hcHAsIHdlIGRvIG5vdCBuZWVkIHRvIHJlZG8gdGhhdC4iKSk7fWlmKHR5cGVvZiBNRFhDb250ZW50IT09J3VuZGVmaW5lZCcmJk1EWENvbnRlbnQmJk1EWENvbnRlbnQ9PT1PYmplY3QoTURYQ29udGVudCkmJk9iamVjdC5pc0V4dGVuc2libGUoTURYQ29udGVudCkpe09iamVjdC5kZWZpbmVQcm9wZXJ0eShNRFhDb250ZW50LCdfX2ZpbGVtZXRhJyx7ZW51bWVyYWJsZTp0cnVlLGNvbmZpZ3VyYWJsZTp0cnVlLHZhbHVlOntuYW1lOiJNRFhDb250ZW50IixmaWxlbmFtZToibWFudWFsL05naW54L05naW54LU5vZGVqcy1Eb2NrZXIubWQifX0pO31NRFhDb250ZW50LmlzTURYQ29tcG9uZW50PXRydWU7"},{"version":3,"sources":["/Users/okeeffe_d/Project-Imposter/developer-notes/manual/Nginx/Nginx-Nodejs-Docker.md"],"names":["React","mdx","makeShortcode","name","MDXDefaultShortcode","props","console","warn","layoutProps","MDXLayout","MDXContent","components","isMDXComponent"],"mappings":"4LAAA,cACE,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,GAAT,KAAoB,eAApB,CACA,cAGF,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAAAC,IAAI,QAAI,SAASC,CAAAA,mBAAT,CAA6BC,KAA7B,CAAoC,CAChEC,OAAO,CAACC,IAAR,CAAa,aAAeJ,IAAf,CAAsB,yEAAnC,EACA,MAAO,WAASE,KAAT,CAAP,CACD,CAHyB,EAA1B,CAKA,GAAMG,CAAAA,WAAW,CAAG,EAApB,CAGA,GAAMC,CAAAA,SAAS,CAAG,SAAlB,CACA,cAAe,SAASC,CAAAA,UAAT,MAGZ,IAFDC,CAAAA,UAEC,MAFDA,UAEC,CADEN,KACF,+CACD,MAAO,KAAC,SAAD,kBAAeG,WAAf,CAAgCH,KAAhC,EAAuC,UAAU,CAAEM,UAAnD,CAA+D,OAAO,CAAC,WAAvE,GACL,SAAQ,CACN,KAAM,wCADA,CAAR,0CADK,CAIL,kDAAyC,kBAAY,UAAU,CAAC,GAAvB,UAAzC,SAAmG,kBAAY,UAAU,CAAC,GAAvB,WAAnG,KAJK,CAKL,iDAAwC,kBAAY,UAAU,CAAC,GAAvB,eAAxC,+EALK,CAML,eAAK,0BAAM,UAAU,CAAC,KAAjB,EAA2B,EAA3B,gOAAL,CANK,CAeL,uCAA8B,kBAAY,UAAU,CAAC,GAAvB,+BAA9B,CAfK,CAgBL,gFAAuE,kBAAY,UAAU,CAAC,GAAvB,wDAAvE,KAhBK,CAiBL,8EAAqE,kBAAY,UAAU,CAAC,GAAvB,qCAArE,6EAjBK,CAkBL,uBAAc,kBAAY,UAAU,CAAC,GAAvB,UAAd,2BAA0F,kBAAY,UAAU,CAAC,GAAvB,iBAA1F,uCAlBK,CAmBL,qFAnBK,CAoBL,eAAK,0BAAM,UAAU,CAAC,KAAjB,EAA2B,EAA3B,ucAAL,CApBK,CAmCL,oCAnCK,CAoCL,eAAK,0BAAM,UAAU,CAAC,KAAjB,EAA2B,EAA3B,uDAAL,CApCK,CAuCL,+CAAsC,kBAAY,UAAU,CAAC,GAAvB,gCAAtC,KAvCK,CAwCL,4BAAmB,kBAAY,UAAU,CAAC,GAAvB,2EAAnB,CAxCK,CAyCL,mFAzCK,CAAP,CA2CD,C,+QAEDD,UAAU,CAACE,cAAX,CAA4B,IAA5B","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"docker-container-with-nginx-and-nodejs\"\n    }}>{`Docker container with Nginx and Nodejs`}</h1>\n    <p>{`First create a directory for both `}<inlineCode parentName=\"p\">{`nginx`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`nodejs`}</inlineCode>{`.`}</p>\n    <p>{`Within the Node folder, create a `}<inlineCode parentName=\"p\">{`Dockerfile`}</inlineCode>{` that contains the following to expose an app running on a particular port:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`FROM mhart/alpine-node\n# Pretend to copy the node app entry\n# from current folder\nCOPY index.js .\n# Expose the port that it is running on\nEXPOSE 3000\n# Run node - chances are you want pm2 here\nCMD node index.js\n`}</code></pre>\n    <p>{`Then we can build with `}<inlineCode parentName=\"p\">{`docker built -t foo/node .`}</inlineCode></p>\n    <p>{`After the build, run the container with port 3000 exposed using `}<inlineCode parentName=\"p\">{`docker run -d -p 3000:3000 --name node-app foo/node`}</inlineCode>{`.`}</p>\n    <p>{`First, we can test the Nginx latest container container using `}<inlineCode parentName=\"p\">{`docker run --rm -p 8000:80 nginx`}</inlineCode>{` to test out nginx:latest. This just removes the container after running.`}</p>\n    <p>{`In the `}<inlineCode parentName=\"p\">{`nginx`}</inlineCode>{` folder, we can create `}<inlineCode parentName=\"p\">{`default.conf`}</inlineCode>{` file to overwrite the initial one.`}</p>\n    <p>{`If settings are not defined below, Nginx will use the default values.`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`# config\nserver {\n    location / {\n        # host name first\n        proxy_set_header Host $host;\n        # extra headers for host IP address\n        proxy_set_header X-Real-IP $remote_addr;\n        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n        # passing protocol used (http | https)\n        proxy_set_header X-Forwarded-Proto $scheme;\n        # where to proxy reqs to\n        proxy_pass http://app:3000;\n    }\n}\n`}</code></pre>\n    <p>{`For the Docker file.`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`FROM nginx\nCOPY default.cong /etc/nginx/conf.d/\n`}</code></pre>\n    <p>{`Then build out this file using `}<inlineCode parentName=\"p\">{`docker built -t foo/nginx .`}</inlineCode>{`.`}</p>\n    <p>{`Running it: `}<inlineCode parentName=\"p\">{`docker run -p 8000:80 --link node-app:app --name nginx-proxy foo/nginx`}</inlineCode></p>\n    <p>{`Since we expose 3000 for the node-app, we do not need to redo that.`}</p>\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  "]}]}