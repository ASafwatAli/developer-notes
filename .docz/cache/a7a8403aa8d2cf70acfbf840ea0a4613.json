{"remainingRequest":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/docz-core/node_modules/babel-loader/lib/index.js??ref--6-1!/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/@mdx-js/loader/index.js??ref--6-2!/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/source-map-loader/index.js!/Users/dennis.okeeffe/Project-Imposter/developer-notes/manual/PHP/PHP-Unit-Tests.md","dependencies":[{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/manual/PHP/PHP-Unit-Tests.md","mtime":1562563032074},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/cache-loader/dist/cjs.js","mtime":1564095360956},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/docz-core/node_modules/babel-loader/lib/index.js","mtime":1562568123838},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/@mdx-js/loader/index.js","mtime":1565139338792},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/source-map-loader/index.js","mtime":1564095361765}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9vYmplY3RXaXRob3V0UHJvcGVydGllcyBmcm9tIi9Vc2Vycy9kZW5uaXMub2tlZWZmZS9Qcm9qZWN0LUltcG9zdGVyL2RldmVsb3Blci1ub3Rlcy9ub2RlX21vZHVsZXMvYmFiZWwtcHJlc2V0LXJlYWN0LWFwcC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0V2l0aG91dFByb3BlcnRpZXMiOy8qIEBqc3ggbWR4ICovaW1wb3J0IFJlYWN0IGZyb20ncmVhY3QnO2ltcG9ydHttZHh9ZnJvbSdAbWR4LWpzL3JlYWN0JzsvKiBAanN4IG1keCAqL3ZhciBtYWtlU2hvcnRjb2RlPWZ1bmN0aW9uIG1ha2VTaG9ydGNvZGUobmFtZSl7cmV0dXJuIGZ1bmN0aW9uIE1EWERlZmF1bHRTaG9ydGNvZGUocHJvcHMpe2NvbnNvbGUud2FybigiQ29tcG9uZW50ICIrbmFtZSsiIHdhcyBub3QgaW1wb3J0ZWQsIGV4cG9ydGVkLCBvciBwcm92aWRlZCBieSBNRFhQcm92aWRlciBhcyBnbG9iYWwgc2NvcGUiKTtyZXR1cm4gbWR4KCJkaXYiLHByb3BzKTt9O307dmFyIGxheW91dFByb3BzPXt9O3ZhciBNRFhMYXlvdXQ9IndyYXBwZXIiO2V4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIE1EWENvbnRlbnQoX3JlZil7dmFyIGNvbXBvbmVudHM9X3JlZi5jb21wb25lbnRzLHByb3BzPV9vYmplY3RXaXRob3V0UHJvcGVydGllcyhfcmVmLFsiY29tcG9uZW50cyJdKTtyZXR1cm4gbWR4KE1EWExheW91dCxPYmplY3QuYXNzaWduKHt9LGxheW91dFByb3BzLHByb3BzLHtjb21wb25lbnRzOmNvbXBvbmVudHMsbWR4VHlwZToiTURYTGF5b3V0In0pLG1keCgiaDEiLHsiaWQiOiJwaHAtdW5pdC10ZXN0aW5nIn0sIlBIUCBVbml0IFRlc3RpbmciKSxtZHgoInAiLG51bGwsIlRoaXMgaXMgc2ltcGx5IGEgYmFzaWMgZXhhbXBsZSBvZiB0aGUgbGF5b3V0LiIpLG1keCgicCIsbnVsbCwiRW5zdXJlICIsbWR4KCJpbmxpbmVDb2RlIix7cGFyZW50TmFtZToicCJ9LCJwaHB1bml0IiksIiBpcyBkb3dubG9hZGVkIGFuZCBhZGQgaXQgdG8geW91ciAiLG1keCgiaW5saW5lQ29kZSIse3BhcmVudE5hbWU6InAifSwiJFBBVEgiKSwiLiIpLG1keCgicCIsbnVsbCwiRnJvbSwgaGVyZSBydW4gIixtZHgoImlubGluZUNvZGUiLHtwYXJlbnROYW1lOiJwIn0sInBocHVuaXQucGhhciBwYXRoL3RvL3Rlc3QucGhwIiksIi4iKSxtZHgoImgyIix7ImlkIjoiYmFzaWMtZXhhbXBsZSJ9LCJCYXNpYyBleGFtcGxlIiksbWR4KCJoMyIseyJpZCI6ImFuYWdyYW0tZnVuY3Rpb24tdG8tdGVzdCJ9LCJBbmFncmFtIGZ1bmN0aW9uIHRvIHRlc3QiKSxtZHgoInByZSIsbnVsbCxtZHgoImNvZGUiLE9iamVjdC5hc3NpZ24oe3BhcmVudE5hbWU6InByZSJ9LHsiY2xhc3NOYW1lIjoibGFuZ3VhZ2UtcGhwIn0pLCI8P3BocFxuLy8gYW5hZ3JhbXMucGhwXG5cbmZ1bmN0aW9uIGFuYWdyYW1zKCRhLCAkYilcbntcbiAgICAkcmVnQSA9IHByZWdfcmVwbGFjZShcIi9bXmEtel0vaVwiLCBcIlwiLCAkYSk7XG4gICAgJHJlZ0IgPSBwcmVnX3JlcGxhY2UoXCIvW15hLXpdL2lcIiwgXCJcIiwgJGIpO1xuXG4gICAgJHJlZ0EgPSBzdHJ0b2xvd2VyKCRyZWdBKTtcbiAgICAkc3BsaXRBID0gc3RyX3NwbGl0KCRyZWdBKTtcbiAgICBzb3J0KCRzcGxpdEEpO1xuXG4gICAgJHJlZ0IgPSBzdHJ0b2xvd2VyKCRyZWdCKTtcbiAgICAkc3BsaXRCID0gc3RyX3NwbGl0KCRyZWdCKTtcbiAgICBzb3J0KCRzcGxpdEIpO1xuXG4gICAgJHJlc0EgPSBpbXBsb2RlKFwiXCIsICRzcGxpdEEpO1xuICAgICRyZXNCID0gaW1wbG9kZShcIlwiLCAkc3BsaXRCKTtcblxuICAgIHJldHVybiAkcmVzQSA9PSAkcmVzQjtcbn1cbiIpKSxtZHgoImgzIix7ImlkIjoicnVubmluZy10aGUtdGVzdCJ9LCJSdW5uaW5nIHRoZSB0ZXN0IiksbWR4KCJwIixudWxsLG1keCgiaW5saW5lQ29kZSIse3BhcmVudE5hbWU6InAifSwicGhwdW5pdC5waGFyIGFuYWdyYW1zX3Rlc3QucGhwIikpLG1keCgicHJlIixudWxsLG1keCgiY29kZSIsT2JqZWN0LmFzc2lnbih7cGFyZW50TmFtZToicHJlIn0seyJjbGFzc05hbWUiOiJsYW5ndWFnZS1waHAifSksIjw/cGhwXG4vLyBhbmFncmFtc190ZXN0LnBocFxucmVxdWlyZSBcImFuYWdyYW1zLnBocFwiO1xuXG5jbGFzcyBBbmFncmFtc1Rlc3QgZXh0ZW5kcyBQSFBVbml0XFxGcmFtZXdvcmtcXFRlc3RDYXNlXG57XG4gICAgcHVibGljIGZ1bmN0aW9uIHRlc3RBbmFncmFtc0Jhc2ljKClcbiAgICB7XG4gICAgICAgICRhID0gXCJ0b2t5b1wiO1xuICAgICAgICAkYiA9IFwia3lvdG9cIjtcbiAgICAgICAgJHRoaXMtPmFzc2VydEVxdWFscyh0cnVlLCBhbmFncmFtcygkYSwkYikpO1xuICAgIH1cblxuXG4gICAgcHVibGljIGZ1bmN0aW9uIHRlc3RBbmFncmFtc1dpdGhDYXBpdGFscygpXG4gICAge1xuICAgICAgICAvLyAkdGhpcy0+bWFya1Rlc3RTa2lwcGVkKCdTa2lwcGVkLicpO1xuICAgICAgICAkYSA9IFwiVG9reW9cIjtcbiAgICAgICAgJGIgPSBcImt5b3RvXCI7XG4gICAgICAgICR0aGlzLT5hc3NlcnRFcXVhbHModHJ1ZSwgYW5hZ3JhbXMoJGEsJGIpKTtcbiAgICB9XG5cbiAgICBwdWJsaWMgZnVuY3Rpb24gdGVzdEFuYWdyYW1zV2l0aFB1bmN0dWF0aW9uKClcbiAgICB7XG4gICAgICAgIC8vICR0aGlzLT5tYXJrVGVzdFNraXBwZWQoJ1NraXBwZWQuJyk7XG4gICAgICAgICRhID0gXCJUbyAgMzVrIDJANHlvXCI7XG4gICAgICAgICRiID0gXCJrWW9UbzIyMyEhXCI7XG4gICAgICAgICR0aGlzLT5hc3NlcnRFcXVhbHModHJ1ZSwgYW5hZ3JhbXMoJGEsJGIpKTtcbiAgICB9XG59XG4iKSkpO31pZih0eXBlb2YgTURYQ29udGVudCE9PSd1bmRlZmluZWQnJiZNRFhDb250ZW50JiZNRFhDb250ZW50PT09T2JqZWN0KE1EWENvbnRlbnQpJiZPYmplY3QuaXNFeHRlbnNpYmxlKE1EWENvbnRlbnQpKXtPYmplY3QuZGVmaW5lUHJvcGVydHkoTURYQ29udGVudCwnX19maWxlbWV0YScse2VudW1lcmFibGU6dHJ1ZSxjb25maWd1cmFibGU6dHJ1ZSx2YWx1ZTp7bmFtZToiTURYQ29udGVudCIsZmlsZW5hbWU6Im1hbnVhbC9QSFAvUEhQLVVuaXQtVGVzdHMubWQifX0pO31NRFhDb250ZW50LmlzTURYQ29tcG9uZW50PXRydWU7"},{"version":3,"sources":["/Users/dennis.okeeffe/Project-Imposter/developer-notes/manual/PHP/PHP-Unit-Tests.md"],"names":["React","mdx","makeShortcode","name","MDXDefaultShortcode","props","console","warn","layoutProps","MDXLayout","MDXContent","components","isMDXComponent"],"mappings":"iMAAA,cACE,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,GAAT,KAAoB,eAApB,CACA,cAGF,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAAAC,IAAI,QAAI,SAASC,CAAAA,mBAAT,CAA6BC,KAA7B,CAAoC,CAChEC,OAAO,CAACC,IAAR,CAAa,aAAeJ,IAAf,CAAsB,yEAAnC,EACA,MAAO,WAASE,KAAT,CAAP,CACD,CAHyB,EAA1B,CAKA,GAAMG,CAAAA,WAAW,CAAG,EAApB,CAGA,GAAMC,CAAAA,SAAS,CAAG,SAAlB,CACA,cAAe,SAASC,CAAAA,UAAT,MAGZ,IAFDC,CAAAA,UAEC,MAFDA,UAEC,CADEN,KACF,+CACD,MAAO,KAAC,SAAD,kBAAeG,WAAf,CAAgCH,KAAhC,EAAuC,UAAU,CAAEM,UAAnD,CAA+D,OAAO,CAAC,WAAvE,GACL,SAAQ,CACN,KAAM,kBADA,CAAR,oBADK,CAIL,6DAJK,CAKL,uBAAc,kBAAY,UAAU,CAAC,GAAvB,YAAd,sCAAuG,kBAAY,UAAU,CAAC,GAAvB,UAAvG,KALK,CAML,+BAAsB,kBAAY,UAAU,CAAC,GAAvB,kCAAtB,KANK,CAOL,SAAQ,CACN,KAAM,eADA,CAAR,iBAPK,CAUL,SAAQ,CACN,KAAM,0BADA,CAAR,4BAVK,CAaL,eAAK,0BAAM,UAAU,CAAC,KAAjB,EAA2B,CAC5B,YAAa,cADe,CAA3B,gcAAL,CAbK,CAqCL,SAAQ,CACN,KAAM,kBADA,CAAR,oBArCK,CAwCL,aAAG,kBAAY,UAAU,CAAC,GAAvB,mCAAH,CAxCK,CAyCL,eAAK,0BAAM,UAAU,CAAC,KAAjB,EAA2B,CAC5B,YAAa,cADe,CAA3B,4tBAAL,CAzCK,CAAP,CA2ED,C,wQAEDD,UAAU,CAACE,cAAX,CAA4B,IAA5B","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"php-unit-testing\"\n    }}>{`PHP Unit Testing`}</h1>\n    <p>{`This is simply a basic example of the layout.`}</p>\n    <p>{`Ensure `}<inlineCode parentName=\"p\">{`phpunit`}</inlineCode>{` is downloaded and add it to your `}<inlineCode parentName=\"p\">{`$PATH`}</inlineCode>{`.`}</p>\n    <p>{`From, here run `}<inlineCode parentName=\"p\">{`phpunit.phar path/to/test.php`}</inlineCode>{`.`}</p>\n    <h2 {...{\n      \"id\": \"basic-example\"\n    }}>{`Basic example`}</h2>\n    <h3 {...{\n      \"id\": \"anagram-function-to-test\"\n    }}>{`Anagram function to test`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-php\"\n      }}>{`<?php\n// anagrams.php\n\nfunction anagrams($a, $b)\n{\n    $regA = preg_replace(\"/[^a-z]/i\", \"\", $a);\n    $regB = preg_replace(\"/[^a-z]/i\", \"\", $b);\n\n    $regA = strtolower($regA);\n    $splitA = str_split($regA);\n    sort($splitA);\n\n    $regB = strtolower($regB);\n    $splitB = str_split($regB);\n    sort($splitB);\n\n    $resA = implode(\"\", $splitA);\n    $resB = implode(\"\", $splitB);\n\n    return $resA == $resB;\n}\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"running-the-test\"\n    }}>{`Running the test`}</h3>\n    <p><inlineCode parentName=\"p\">{`phpunit.phar anagrams_test.php`}</inlineCode></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-php\"\n      }}>{`<?php\n// anagrams_test.php\nrequire \"anagrams.php\";\n\nclass AnagramsTest extends PHPUnit\\\\Framework\\\\TestCase\n{\n    public function testAnagramsBasic()\n    {\n        $a = \"tokyo\";\n        $b = \"kyoto\";\n        $this->assertEquals(true, anagrams($a,$b));\n    }\n\n\n    public function testAnagramsWithCapitals()\n    {\n        // $this->markTestSkipped('Skipped.');\n        $a = \"Tokyo\";\n        $b = \"kyoto\";\n        $this->assertEquals(true, anagrams($a,$b));\n    }\n\n    public function testAnagramsWithPunctuation()\n    {\n        // $this->markTestSkipped('Skipped.');\n        $a = \"To  35k 2@4yo\";\n        $b = \"kYoTo223!!\";\n        $this->assertEquals(true, anagrams($a,$b));\n    }\n}\n`}</code></pre>\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  "]}]}