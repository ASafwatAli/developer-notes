{"remainingRequest":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/docz-core/node_modules/babel-loader/lib/index.js??ref--6-1!/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/@mdx-js/loader/index.js??ref--6-2!/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/source-map-loader/index.js!/Users/dennis.okeeffe/Project-Imposter/developer-notes/manual/Java/Gradle-Intro.md","dependencies":[{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/manual/Java/Gradle-Intro.md","mtime":1577684951654},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/cache-loader/dist/cjs.js","mtime":1581496618588},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/docz-core/node_modules/babel-loader/lib/index.js","mtime":1578565694890},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/@mdx-js/loader/index.js","mtime":1581496618277},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/source-map-loader/index.js","mtime":1580255490569}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/dennis.okeeffe/Project-Imposter/developer-notes/manual/Java/Gradle-Intro.md"],"names":["React","mdx","makeShortcode","name","MDXDefaultShortcode","props","console","warn","layoutProps","MDXLayout","MDXContent","components","isMDXComponent"],"mappings":"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","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"gradle-intro\"\n    }}>{`Gradle Intro`}</h1>\n    <p>{`References:`}</p>\n    <ol>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"https://guides.gradle.org/consuming-jvm-libraries/\"\n        }}>{`https://guides.gradle.org/consuming-jvm-libraries/`}</a></li>\n    </ol>\n    <h2 {...{\n      \"id\": \"create-project--add-gradle\"\n    }}>{`Create Project + Add Gradle`}</h2>\n    <p>{`Ensure you have `}<a parentName=\"p\" {...{\n        \"href\": \"https://gradle.org/install\"\n      }}>{`installed Gradle first`}</a>{`.`}</p>\n    <p>{`For Mac users, `}<inlineCode parentName=\"p\">{`brew install gradle`}</inlineCode>{` will get you up and going.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`mkdir consuming-jvm-libraries\ncd consuming-jvm-libraries\ngradle wrapper\n`}</code></pre>\n    <p>{`You should get `}<inlineCode parentName=\"p\">{`BUILD SUCCESSUL`}</inlineCode>{` output.`}</p>\n    <h2 {...{\n      \"id\": \"generating-base-files\"\n    }}>{`Generating base files`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`touch settings.gradle build.gradle\n\n# write into settings.gradle\nrootProject.name = \"appName\"\n\n# write into build.gradle\napply plugin : 'java'\n\nrepositories {\n    jcenter()\n}\n`}</code></pre>\n    <p>{`We are using `}<inlineCode parentName=\"p\">{`JCenter`}</inlineCode>{` as the repository to grab our external package.`}</p>\n    <blockquote>\n      <p parentName=\"blockquote\"><em parentName=\"p\">{`In order to find artifacts you have to tell Gradle where to look. Gradle supports two specialized repository types - Maven & Ivy, among others. In addition, Gradle supports simplified configuration for the most popular centralized repositories - JCenter, Maven Central, and Google’s Android repository. In this guide you are using JCenter as it has access to all of the repositories hosted on Maven Central as well as many more that are published to Bintray.`}</em></p>\n    </blockquote>\n    <h2 {...{\n      \"id\": \"adding-the-dependency\"\n    }}>{`Adding the dependency`}</h2>\n    <p>{`In this particular project, we want to use `}<inlineCode parentName=\"p\">{`JFiglet`}</inlineCode>{` to add some Ascii-art.`}</p>\n    <p>{`Add the following to the `}<inlineCode parentName=\"p\">{`build.gradle`}</inlineCode>{` file:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`dependencies {\n    implementation 'com.github.lalyos:jfiglet:0.0.8'\n}\n`}</code></pre>\n    <p>{`Note that Gralde supports a variety of noitations. The one used here is known as `}<inlineCode parentName=\"p\">{`Maven coordinates`}</inlineCode>{`.`}</p>\n    <blockquote>\n      <p parentName=\"blockquote\"><em parentName=\"p\">{`Adding a dependency has two parts: one is the dependency itself and the other is the configuration to which it is added. The latter term is used in Gradle to effectively group dependencies together by context. The current build uses the implementation configuration, which is provided by the Java Plugin.`}</em></p>\n    </blockquote>\n    <p>{`The purpose of the `}<inlineCode parentName=\"p\">{`implementation`}</inlineCode>{` configuration is to collect dependencies that are used by a library or application and add them to the compilation classpath, but not export them via any of its APIs. As this is a stand-alone application, all dependencies can be placed in this configuration for purposes of application construction. This makes the use of the JFiglet library an implementation detail that can be changed a later date without affecting any clients.`}</p>\n    <p>{`You can inspect all of the dependencies you have added on a per-configuration basis, by using the dependencies task that is built into Gradle `}<inlineCode parentName=\"p\">{`./gradlew dependencies --configuration implementation`}</inlineCode>{`.`}</p>\n    <h2 {...{\n      \"id\": \"building-the-application\"\n    }}>{`Building the application`}</h2>\n    <p>{`In the `}<inlineCode parentName=\"p\">{`src/main/java`}</inlineCode>{`, folder, place `}<inlineCode parentName=\"p\">{`AppName.java`}</inlineCode>{` with the following:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`import java.io.IOException;\nimport com.github.lalyos.jfiglet.FigletFont;\n\npublic class AppName {\n    public static void main(String[] args) throws IOException {\n        String asciiArt = FigletFont.convertOneLine(\"Hello, \" + args[0]);\n        System.out.println(asciiArt);\n    }\n}\n`}</code></pre>\n    <p>{`Building the application is easy with `}<inlineCode parentName=\"p\">{`./gradlew jar`}</inlineCode>{`.`}</p>\n    <h2 {...{\n      \"id\": \"distribution\"\n    }}>{`Distribution`}</h2>\n    <p>{`Given that this is a application that we will want to distribute, edit `}<inlineCode parentName=\"p\">{`build.gradle`}</inlineCode>{` again and add the Application plugin:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`apply plugin : 'application'\nmainClassName = 'AppName'\n`}</code></pre>\n    <p>{`If we now build with `}<inlineCode parentName=\"p\">{`./gradlew build`}</inlineCode>{` we will notice `}<inlineCode parentName=\"p\">{`build/distributions`}</inlineCode>{` has a `}<inlineCode parentName=\"p\">{`.zip`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`.tar`}</inlineCode>{` archive that we can use `}<inlineCode parentName=\"p\">{`./gradlew installDist`}</inlineCode>{` to install the application into the `}<inlineCode parentName=\"p\">{`build/install`}</inlineCode>{` folder for validation purposes.`}</p>\n    <p>{`We can now run our application with:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`cd build/install/greeterApp\n./bin/greeterApp Gradle\n\n# output\n  _   _          _   _                  ____                      _   _\n | | | |   ___  | | | |   ___          / ___|  _ __    __ _    __| | | |   ___\n | |_| |  / _ \\\\ | | | |  / _ \\\\        | |  _  | '__|  / _\\` |  / _\\` | | |  / _ \\\\\n |  _  | |  __/ | | | | | (_) |  _    | |_| | | |    | (_| | | (_| | | | |  __/\n |_| |_|  \\\\___| |_| |_|  \\\\___/  ( )    \\\\____| |_|     \\\\__,_|  \\\\__,_| |_|  \\\\___|\n                                |/\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"summary\"\n    }}>{`Summary`}</h2>\n    <p>{`You've now figured out how to:`}</p>\n    <ol>\n      <li parentName=\"ol\">{`How to configure repositories and dependencies.`}</li>\n      <li parentName=\"ol\">{`Build an application consuming external dependencies.`}</li>\n      <li parentName=\"ol\">{`Distribute an application with all external dependencies.`}</li>\n    </ol>\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  "]}]}