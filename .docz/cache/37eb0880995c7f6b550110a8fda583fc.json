{"remainingRequest":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/docz-core/node_modules/babel-loader/lib/index.js??ref--6-1!/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/@mdx-js/loader/index.js??ref--6-2!/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/source-map-loader/index.js!/Users/dennis.okeeffe/Project-Imposter/developer-notes/manual/Puppeteer/Recorder.md","dependencies":[{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/manual/Puppeteer/Recorder.md","mtime":1562563032079},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/cache-loader/dist/cjs.js","mtime":1564095360956},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/docz-core/node_modules/babel-loader/lib/index.js","mtime":1562568123838},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/@mdx-js/loader/index.js","mtime":1565139338792},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/source-map-loader/index.js","mtime":1564095361765}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9vYmplY3RXaXRob3V0UHJvcGVydGllcyBmcm9tIi9Vc2Vycy9kZW5uaXMub2tlZWZmZS9Qcm9qZWN0LUltcG9zdGVyL2RldmVsb3Blci1ub3Rlcy9ub2RlX21vZHVsZXMvYmFiZWwtcHJlc2V0LXJlYWN0LWFwcC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0V2l0aG91dFByb3BlcnRpZXMiOy8qIEBqc3ggbWR4ICovaW1wb3J0IFJlYWN0IGZyb20ncmVhY3QnO2ltcG9ydHttZHh9ZnJvbSdAbWR4LWpzL3JlYWN0JzsvKiBAanN4IG1keCAqL3ZhciBtYWtlU2hvcnRjb2RlPWZ1bmN0aW9uIG1ha2VTaG9ydGNvZGUobmFtZSl7cmV0dXJuIGZ1bmN0aW9uIE1EWERlZmF1bHRTaG9ydGNvZGUocHJvcHMpe2NvbnNvbGUud2FybigiQ29tcG9uZW50ICIrbmFtZSsiIHdhcyBub3QgaW1wb3J0ZWQsIGV4cG9ydGVkLCBvciBwcm92aWRlZCBieSBNRFhQcm92aWRlciBhcyBnbG9iYWwgc2NvcGUiKTtyZXR1cm4gbWR4KCJkaXYiLHByb3BzKTt9O307dmFyIGxheW91dFByb3BzPXt9O3ZhciBNRFhMYXlvdXQ9IndyYXBwZXIiO2V4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIE1EWENvbnRlbnQoX3JlZil7dmFyIGNvbXBvbmVudHM9X3JlZi5jb21wb25lbnRzLHByb3BzPV9vYmplY3RXaXRob3V0UHJvcGVydGllcyhfcmVmLFsiY29tcG9uZW50cyJdKTtyZXR1cm4gbWR4KE1EWExheW91dCxPYmplY3QuYXNzaWduKHt9LGxheW91dFByb3BzLHByb3BzLHtjb21wb25lbnRzOmNvbXBvbmVudHMsbWR4VHlwZToiTURYTGF5b3V0In0pLG1keCgiaDEiLHsiaWQiOiJwdXBwZXRlZXItcmVjb3JkZXIifSwiUHVwcGV0ZWVyIFJlY29yZGVyIiksbWR4KCJwIixudWxsLCJVc2UgdGhpcyB0byBjb252ZXJ0IGEgZGIuanNvbiBldmVudHMgZmlsZSBpbnRvIHNvbWV0aW5nIHVzYWJsZSB3aXRoIHB1cHBldGVlci4iKSxtZHgoImgyIix7ImlkIjoiaW5zdGFsbCJ9LCJJbnN0YWxsIiksbWR4KCJwIixudWxsLCJDdXJyZW50bHkgdGhpcyBpcyBhIGxpYiBmaWxlIHRoYXQgbmVlZHMgdG8gYmUgaW5zdGFsbGVkIHVzaW5nIGtyYXRvcy4iKSxtZHgoImgyIix7ImlkIjoidXNhZ2UifSwiVXNhZ2UiKSxtZHgoInAiLG51bGwsIlVzZSB0aGUgIixtZHgoImlubGluZUNvZGUiLHtwYXJlbnROYW1lOiJwIn0sIkVtaXR0ZXIiKSwiIGNvbW1vbiBKUyBjbGFzcyB0byBoYW5kbGUgdGhpcy4gRW5zdXJlIHlvdSBzdWIgdG8gdGhlIGV2ZW50ICIsbWR4KCJpbmxpbmVDb2RlIix7cGFyZW50TmFtZToicCJ9LCJhY3Rpb24iKSwiLiIpLG1keCgicHJlIixudWxsLG1keCgiY29kZSIsT2JqZWN0LmFzc2lnbih7cGFyZW50TmFtZToicHJlIn0seyJjbGFzc05hbWUiOiJsYW5ndWFnZS1qYXZhc2NyaXB0In0pLCIvLyBFeGFtcGxlIG9mIGVtaXNzaW9uIHdpdGggdHlwZSBpbmZlcnJlZFxuaGFuZGxlUHJpbWFyeUNsaWNrID0gKGUpID0+IHtcbiAgICBFbWl0dGVyLmVtaXQoJ2FjdGlvbicsIHtcbiAgICAgICAgZXZlbnQ6ICdDb21wb25lbnRBTExhbmRpbmdPbmUuaGFuZGxlUHJpbWFyeUNsaWNrJyxcbiAgICAgICAgZTogZS50YXJnZXRcbiAgICB9KTtcblxuICAgIGNvbnN0IHsgcm91dGVyIH0gPSB0aGlzLnByb3BzO1xuICAgIHJvdXRlci5wdXNoKCcvdGVzdFR3bycpO1xufTtcblxuLy8gRXhhbXBsZSBvZiBlbWlzc2lvbiB3aXRoIHR5cGUgbWFudWFsbHkgc3BlY2lmaWVkXG5oYW5kbGVMaW5rID0gKGUpID0+IHtcbiAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgRW1pdHRlci5lbWl0KCdhY3Rpb24nLCB7XG4gICAgICAgIGV2ZW50OiAnQ29tcG9uZW50QUxMYW5kaW5nT25lLmhhbmRsZUxpbmsnLFxuICAgICAgICB0eXBlOiAnbGluaycsXG4gICAgICAgIGU6IGUudGFyZ2V0XG4gICAgfSk7XG5cbiAgICBjb25zdCB7IHJvdXRlciB9ID0gdGhpcy5wcm9wcztcbiAgICByb3V0ZXIucHVzaCgnL3Rlc3RUd28nKTtcbn07XG4iKSksbWR4KCJoMiIseyJpZCI6ImdlbmVyYXRpbmctdGhlLXRlc3RzIn0sIkdlbmVyYXRpbmcgdGhlIHRlc3RzIiksbWR4KCJwIixudWxsLCJUaGUgcmVjb3JkZXIgcmVsaWVzIG9uIEpTT04gREIgYW5kIHVzaW5nIHRoZSAiLG1keCgiaW5saW5lQ29kZSIse3BhcmVudE5hbWU6InAifSwiZXZlbnRzIiksIiBlbmRwb2ludC4iKSxtZHgoInByZSIsbnVsbCxtZHgoImNvZGUiLE9iamVjdC5hc3NpZ24oe3BhcmVudE5hbWU6InByZSJ9LHt9KSwiIyB1c2FnZVxubm9kZSBwYXRoL3RvL3JlY29yZGVyXG4iKSksbWR4KCJwIixudWxsLCJUaGUgY29uc29sZSBsb2cgb3V0cHV0IGZvciB0aGlzIGd1eSBjYW4gdGhlbiBiZSB0cmFuc2ZlcnJlZCB0byBhIHRlc3QgZmlsZSB0byB1c2Ugd2l0aCBQdXBwZXRlZXIuIikpO31pZih0eXBlb2YgTURYQ29udGVudCE9PSd1bmRlZmluZWQnJiZNRFhDb250ZW50JiZNRFhDb250ZW50PT09T2JqZWN0KE1EWENvbnRlbnQpJiZPYmplY3QuaXNFeHRlbnNpYmxlKE1EWENvbnRlbnQpKXtPYmplY3QuZGVmaW5lUHJvcGVydHkoTURYQ29udGVudCwnX19maWxlbWV0YScse2VudW1lcmFibGU6dHJ1ZSxjb25maWd1cmFibGU6dHJ1ZSx2YWx1ZTp7bmFtZToiTURYQ29udGVudCIsZmlsZW5hbWU6Im1hbnVhbC9QdXBwZXRlZXIvUmVjb3JkZXIubWQifX0pO31NRFhDb250ZW50LmlzTURYQ29tcG9uZW50PXRydWU7"},{"version":3,"sources":["/Users/dennis.okeeffe/Project-Imposter/developer-notes/manual/Puppeteer/Recorder.md"],"names":["React","mdx","makeShortcode","name","MDXDefaultShortcode","props","console","warn","layoutProps","MDXLayout","MDXContent","components","isMDXComponent"],"mappings":"iMAAA,cACE,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,GAAT,KAAoB,eAApB,CACA,cAGF,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAAAC,IAAI,QAAI,SAASC,CAAAA,mBAAT,CAA6BC,KAA7B,CAAoC,CAChEC,OAAO,CAACC,IAAR,CAAa,aAAeJ,IAAf,CAAsB,yEAAnC,EACA,MAAO,WAASE,KAAT,CAAP,CACD,CAHyB,EAA1B,CAKA,GAAMG,CAAAA,WAAW,CAAG,EAApB,CAGA,GAAMC,CAAAA,SAAS,CAAG,SAAlB,CACA,cAAe,SAASC,CAAAA,UAAT,MAGZ,IAFDC,CAAAA,UAEC,MAFDA,UAEC,CADEN,KACF,+CACD,MAAO,KAAC,SAAD,kBAAeG,WAAf,CAAgCH,KAAhC,EAAuC,UAAU,CAAEM,UAAnD,CAA+D,OAAO,CAAC,WAAvE,GACL,SAAQ,CACN,KAAM,oBADA,CAAR,sBADK,CAIL,8FAJK,CAKL,SAAQ,CACN,KAAM,SADA,CAAR,WALK,CAQL,qFARK,CASL,SAAQ,CACN,KAAM,OADA,CAAR,SATK,CAYL,wBAAe,kBAAY,UAAU,CAAC,GAAvB,YAAf,iEAAmI,kBAAY,UAAU,CAAC,GAAvB,WAAnI,KAZK,CAaL,eAAK,0BAAM,UAAU,CAAC,KAAjB,EAA2B,CAC5B,YAAa,qBADe,CAA3B,qkBAAL,CAbK,CAuCL,SAAQ,CACN,KAAM,sBADA,CAAR,wBAvCK,CA0CL,6DAAoD,kBAAY,UAAU,CAAC,GAAvB,WAApD,cA1CK,CA2CL,eAAK,0BAAM,UAAU,CAAC,KAAjB,EAA2B,EAA3B,qCAAL,CA3CK,CA8CL,iHA9CK,CAAP,CAgDD,C,wQAEDD,UAAU,CAACE,cAAX,CAA4B,IAA5B","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"puppeteer-recorder\"\n    }}>{`Puppeteer Recorder`}</h1>\n    <p>{`Use this to convert a db.json events file into someting usable with puppeteer.`}</p>\n    <h2 {...{\n      \"id\": \"install\"\n    }}>{`Install`}</h2>\n    <p>{`Currently this is a lib file that needs to be installed using kratos.`}</p>\n    <h2 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h2>\n    <p>{`Use the `}<inlineCode parentName=\"p\">{`Emitter`}</inlineCode>{` common JS class to handle this. Ensure you sub to the event `}<inlineCode parentName=\"p\">{`action`}</inlineCode>{`.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`// Example of emission with type inferred\nhandlePrimaryClick = (e) => {\n    Emitter.emit('action', {\n        event: 'ComponentALLandingOne.handlePrimaryClick',\n        e: e.target\n    });\n\n    const { router } = this.props;\n    router.push('/testTwo');\n};\n\n// Example of emission with type manually specified\nhandleLink = (e) => {\n    e.preventDefault();\n    Emitter.emit('action', {\n        event: 'ComponentALLandingOne.handleLink',\n        type: 'link',\n        e: e.target\n    });\n\n    const { router } = this.props;\n    router.push('/testTwo');\n};\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"generating-the-tests\"\n    }}>{`Generating the tests`}</h2>\n    <p>{`The recorder relies on JSON DB and using the `}<inlineCode parentName=\"p\">{`events`}</inlineCode>{` endpoint.`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`# usage\nnode path/to/recorder\n`}</code></pre>\n    <p>{`The console log output for this guy can then be transferred to a test file to use with Puppeteer.`}</p>\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  "]}]}