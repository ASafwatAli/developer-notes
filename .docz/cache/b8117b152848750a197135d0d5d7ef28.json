{"remainingRequest":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/docz-core/node_modules/babel-loader/lib/index.js??ref--6-1!/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/@mdx-js/loader/index.js??ref--6-2!/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/source-map-loader/index.js!/Users/dennis.okeeffe/Project-Imposter/developer-notes/manual/Redis/Redis-Kue-Nodejs.md","dependencies":[{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/manual/Redis/Redis-Kue-Nodejs.md","mtime":1562563032085},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/cache-loader/dist/cjs.js","mtime":1564095360956},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/docz-core/node_modules/babel-loader/lib/index.js","mtime":1562568123838},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/@mdx-js/loader/index.js","mtime":1565139338792},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/source-map-loader/index.js","mtime":1564095361765}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9vYmplY3RXaXRob3V0UHJvcGVydGllcyBmcm9tIi9Vc2Vycy9kZW5uaXMub2tlZWZmZS9Qcm9qZWN0LUltcG9zdGVyL2RldmVsb3Blci1ub3Rlcy9ub2RlX21vZHVsZXMvYmFiZWwtcHJlc2V0LXJlYWN0LWFwcC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0V2l0aG91dFByb3BlcnRpZXMiOy8qIEBqc3ggbWR4ICovaW1wb3J0IFJlYWN0IGZyb20ncmVhY3QnO2ltcG9ydHttZHh9ZnJvbSdAbWR4LWpzL3JlYWN0JzsvKiBAanN4IG1keCAqL3ZhciBtYWtlU2hvcnRjb2RlPWZ1bmN0aW9uIG1ha2VTaG9ydGNvZGUobmFtZSl7cmV0dXJuIGZ1bmN0aW9uIE1EWERlZmF1bHRTaG9ydGNvZGUocHJvcHMpe2NvbnNvbGUud2FybigiQ29tcG9uZW50ICIrbmFtZSsiIHdhcyBub3QgaW1wb3J0ZWQsIGV4cG9ydGVkLCBvciBwcm92aWRlZCBieSBNRFhQcm92aWRlciBhcyBnbG9iYWwgc2NvcGUiKTtyZXR1cm4gbWR4KCJkaXYiLHByb3BzKTt9O307dmFyIGxheW91dFByb3BzPXt9O3ZhciBNRFhMYXlvdXQ9IndyYXBwZXIiO2V4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIE1EWENvbnRlbnQoX3JlZil7dmFyIGNvbXBvbmVudHM9X3JlZi5jb21wb25lbnRzLHByb3BzPV9vYmplY3RXaXRob3V0UHJvcGVydGllcyhfcmVmLFsiY29tcG9uZW50cyJdKTtyZXR1cm4gbWR4KE1EWExheW91dCxPYmplY3QuYXNzaWduKHt9LGxheW91dFByb3BzLHByb3BzLHtjb21wb25lbnRzOmNvbXBvbmVudHMsbWR4VHlwZToiTURYTGF5b3V0In0pLG1keCgiaDEiLHsiaWQiOiJyZWRpcy1xdWV1ZXMtYW5kLWZvcmtpbmctd2l0aC1rdWUifSwiUmVkaXMgcXVldWVzIGFuZCBmb3JraW5nIHdpdGggS3VlIiksbWR4KCJwIixudWxsLCJSZWZlcmVuY2UgdGhlc2UgbGlua3M6IiksbWR4KCJwIixudWxsLG1keCgiYSIsT2JqZWN0LmFzc2lnbih7cGFyZW50TmFtZToicCJ9LHsiaHJlZiI6Imh0dHBzOi8vbWVkaXVtLmNvbS9ATm9yYmVydGRlTGFuZ2VuL2NvbW11bmljYXRpbmctYmV0d2Vlbi1ub2RlanMtcHJvY2Vzc2VzLTRlNjhiZTQyYjkxNyJ9KSwiaHR0cHM6Ly9tZWRpdW0uY29tL0BOb3JiZXJ0ZGVMYW5nZW4vY29tbXVuaWNhdGluZy1iZXR3ZWVuLW5vZGVqcy1wcm9jZXNzZXMtNGU2OGJlNDJiOTE3IiksIlxuIixtZHgoImEiLE9iamVjdC5hc3NpZ24oe3BhcmVudE5hbWU6InAifSx7ImhyZWYiOiJodHRwczovL21lZGl1bS5jb20vQG5pcmF0YXR0cmkvd29ya2Vycy1hbmQtbm9kZS1rdWUtaXQtdXAtMWMxMjE1ZDliZGRmIn0pLCJodHRwczovL21lZGl1bS5jb20vQG5pcmF0YXR0cmkvd29ya2Vycy1hbmQtbm9kZS1rdWUtaXQtdXAtMWMxMjE1ZDliZGRmIiksIlxuIixtZHgoImEiLE9iamVjdC5hc3NpZ24oe3BhcmVudE5hbWU6InAifSx7ImhyZWYiOiJodHRwczovL2dpdGh1Yi5jb20vQXV0b21hdHRpYy9rdWUifSksImh0dHBzOi8vZ2l0aHViLmNvbS9BdXRvbWF0dGljL2t1ZSIpKSxtZHgoImgyIix7ImlkIjoidGxkciJ9LCJ0bDtkciIpLG1keCgicHJlIixudWxsLG1keCgiY29kZSIsT2JqZWN0LmFzc2lnbih7cGFyZW50TmFtZToicHJlIn0seyJjbGFzc05hbWUiOiJsYW5ndWFnZS1qYXZhc2NyaXB0In0pLCJjb25zdCB7IGZvcmsgfSA9IHJlcXVpcmUoJ2NoaWxkX3Byb2Nlc3MnKTtcblxuY29uc3Qga3VlID0gcmVxdWlyZSgna3VlJyk7XG5rdWUuYXBwLmxpc3RlbigzMDUwKTtcbmNvbnN0IHBvcnQgPSBwcm9jZXNzLmVudi5SRURJU19QT1JUID8gcHJvY2Vzcy5lbnYuUkVESVNfUE9SVCA6ICc2Mzc5JztcbmNvbnN0IGhvc3QgPSBwcm9jZXNzLmVudi5SRURJU19IT1NUID8gcHJvY2Vzcy5lbnYuUkVESVNfSE9TVCA6ICcxMjcuMC4wLjEnO1xuXG5sZXQgcXVldWUgPSBrdWUuY3JlYXRlUXVldWUoe1xuICByZWRpczoge1xuICAgIGhvc3Q6IGhvc3QsXG4gICAgcG9ydDogcG9ydFxuICB9XG59KTtcblxucXVldWUucHJvY2VzcygnYnVpbGQnLCAxLCAoam9iLCBkb25lKSA9PiB7XG4gIHJ1bihqb2IsIGRvbmUpO1xufSk7XG5cbmNvbnN0IHJ1biA9IGFzeW5jIChqb2IsIGRvbmUpID0+IHtcbiAgdHJ5IHtcbiAgICBjb25zdCB7IGRhdGEgfSA9IGpvYi5kYXRhO1xuICAgIC8vIHByb2Nlc3MgaXMgYSBmb3JrZWQgcHJvY2Vzc1xuICAgIGNvbnN0IGNvbXB1dGUgPSBmb3JrKCcuL3Byb2Nlc3Nlcy9idWlsZFdlYi5qcycpO1xuICAgIGNvbXB1dGUuc2VuZChkYXRhKTtcblxuICAgIGNvbXB1dGUub24oJ21lc3NhZ2UnLCAoXykgPT4ge1xuICAgICAgcmV0dXJuIGRvbmUoKTtcbiAgICB9KTtcbiAgfSBjYXRjaCAoZXJyKSB7XG4gICAgY29uc29sZS5lcnJvcihlcnIpO1xuICAgIHJldHVybiBkb25lKG5ldyBFcnJvcihKU09OLnN0cmluZ2lmeShlcnIpKSk7XG4gIH1cbn07XG5cbm1vZHVsZS5leHBvcnRzID0gKGFwcCkgPT4ge1xuICBhcHAucG9zdCgnLycsIGFzeW5jIGZ1bmN0aW9uKHJlcSwgcmVzKSB7XG4gICAgdHJ5IHtcbiAgICAgIC8vIENyZWF0ZSBhIGZvcmsgZm9yIGEgcHJvY2Vzc1xuICAgICAgY29uc3QgYnVpbGRKb2IgPSBxdWV1ZVxuICAgICAgICAuY3JlYXRlKCdidWlsZCcsIHtcbiAgICAgICAgICAvLyBKb2IgVHlwZVxuICAgICAgICAgIHByb2plY3Q6IHByb2plY3QsIC8vIEpvYiBEYXRhXG4gICAgICAgICAgZGF0YTogcmVxLmJvZHlcbiAgICAgICAgfSlcbiAgICAgICAgLnJlbW92ZU9uQ29tcGxldGUodHJ1ZSkgLy8gUkVNT1ZFIFRIRSBKT0IgRlJPTSBUSEUgUVVFVUUgT05DRSBJVCdTIENPTVBMRVRFRFxuICAgICAgICAuYXR0ZW1wdHMoNSkgLy8gVGhlIG1heGltdW0gbnVtYmVyIG9mIHJldHJpZXMgeW91IHdhbnQgdGhlIGpvYiB0byBoYXZlXG4gICAgICAgIC5iYWNrb2ZmKHsgZGVsYXk6IDYwICogMTAwMCwgdHlwZTogJ2V4cG9uZW50aWFsJyB9KSAvLyBUaW1lIGJldHdlZW4gcmV0cmllcy4gUmVhZCBkb2NzLlxuICAgICAgICAuc2F2ZSgpOyAvLyBQRVJTSVNUIFRIRSBEQU1OIEpPQiBMT0xcblxuICAgICAgYnVpbGRKb2Iub24oJ2ZhaWxlZCcsIGZ1bmN0aW9uKGVycm9yTWVzc2FnZSkge1xuICAgICAgICBjb25zb2xlLmxvZygnSm9iIGZhaWxlZCcpO1xuICAgICAgICBsZXQgZXJyb3IgPSBKU09OLnBhcnNlKGVycm9yTWVzc2FnZSk7XG4gICAgICAgIC8vIGVycm9yIG5vdyBjb250YWlucyB0aGUgb2JqZWN0IHBhc3NlZCBmcm9tIHRoZSB3b3JrZXIgd2hlbiB0aGUgam9iIGZhaWxlZFxuICAgICAgICBjb25zb2xlLmxvZyhlcnJvcik7IC8vIENoZWNrIGl0IG91dCBmb3IgeW91cnNlbGZcbiAgICAgICAgLy8gY2FsbCBwYWdlcmR1dHkgb3Igd2hhdGV2ZXIgamF6eiB5b3Ugd2FubmEgZG8gaW4gY2FzZSBvZiBmYWlsdXJlXG4gICAgICB9KTtcblxuICAgICAgcmVzLnN0YXR1cygyMDApLnNlbmQoJ0J1aWxkaW5nICcgKyBwcm9qZWN0KTtcbiAgICB9IGNhdGNoIChlcnIpIHtcbiAgICAgIHJldHVybiByZXMuc3RhdHVzKDUwMCkuc2VuZCgnRmFpbGVkJyk7XG4gICAgfVxuICB9KTtcbn07XG5cbi8vIGJ1aWxkV2ViLmpzXG5jb25zdCBydW4gPSBhc3luYyAoZGF0YSkgPT4ge1xuICB0cnkge1xuICAgIHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgcHJvY2Vzcy5zZW5kKCdEb25lJyk7XG4gICAgfSwgMzAwMCk7XG4gIH0gY2F0Y2ggKGVycikge1xuICAgIGNvbnNvbGUuZXJyb3IoZXJyKTtcbiAgfVxufTtcblxucHJvY2Vzcy5vbignbWVzc2FnZScsIChkYXRhKSA9PiB7XG4gIHJ1bihkYXRhKTtcbn0pO1xuIikpKTt9aWYodHlwZW9mIE1EWENvbnRlbnQhPT0ndW5kZWZpbmVkJyYmTURYQ29udGVudCYmTURYQ29udGVudD09PU9iamVjdChNRFhDb250ZW50KSYmT2JqZWN0LmlzRXh0ZW5zaWJsZShNRFhDb250ZW50KSl7T2JqZWN0LmRlZmluZVByb3BlcnR5KE1EWENvbnRlbnQsJ19fZmlsZW1ldGEnLHtlbnVtZXJhYmxlOnRydWUsY29uZmlndXJhYmxlOnRydWUsdmFsdWU6e25hbWU6Ik1EWENvbnRlbnQiLGZpbGVuYW1lOiJtYW51YWwvUmVkaXMvUmVkaXMtS3VlLU5vZGVqcy5tZCJ9fSk7fU1EWENvbnRlbnQuaXNNRFhDb21wb25lbnQ9dHJ1ZTs="},{"version":3,"sources":["/Users/dennis.okeeffe/Project-Imposter/developer-notes/manual/Redis/Redis-Kue-Nodejs.md"],"names":["React","mdx","makeShortcode","name","MDXDefaultShortcode","props","console","warn","layoutProps","MDXLayout","MDXContent","components","isMDXComponent"],"mappings":"iMAAA,cACE,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,GAAT,KAAoB,eAApB,CACA,cAGF,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAAAC,IAAI,QAAI,SAASC,CAAAA,mBAAT,CAA6BC,KAA7B,CAAoC,CAChEC,OAAO,CAACC,IAAR,CAAa,aAAeJ,IAAf,CAAsB,yEAAnC,EACA,MAAO,WAASE,KAAT,CAAP,CACD,CAHyB,EAA1B,CAKA,GAAMG,CAAAA,WAAW,CAAG,EAApB,CAGA,GAAMC,CAAAA,SAAS,CAAG,SAAlB,CACA,cAAe,SAASC,CAAAA,UAAT,MAGZ,IAFDC,CAAAA,UAEC,MAFDA,UAEC,CADEN,KACF,+CACD,MAAO,KAAC,SAAD,kBAAeG,WAAf,CAAgCH,KAAhC,EAAuC,UAAU,CAAEM,UAAnD,CAA+D,OAAO,CAAC,WAAvE,GACL,SAAQ,CACN,KAAM,mCADA,CAAR,qCADK,CAIL,sCAJK,CAKL,aAAG,uBAAG,UAAU,CAAC,GAAd,EAAsB,CACrB,OAAQ,yFADa,CAAtB,4FAAH,MAGF,uBAAG,UAAU,CAAC,GAAd,EAAsB,CAChB,OAAQ,wEADQ,CAAtB,2EAHE,MAMF,uBAAG,UAAU,CAAC,GAAd,EAAsB,CAChB,OAAQ,mCADQ,CAAtB,sCANE,CALK,CAcL,SAAQ,CACN,KAAM,MADA,CAAR,SAdK,CAiBL,eAAK,0BAAM,UAAU,CAAC,KAAjB,EAA2B,CAC5B,YAAa,qBADe,CAA3B,gkEAAL,CAjBK,CAAP,CAmGD,C,4QAEDD,UAAU,CAACE,cAAX,CAA4B,IAA5B","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"redis-queues-and-forking-with-kue\"\n    }}>{`Redis queues and forking with Kue`}</h1>\n    <p>{`Reference these links:`}</p>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"https://medium.com/@NorbertdeLangen/communicating-between-nodejs-processes-4e68be42b917\"\n      }}>{`https://medium.com/@NorbertdeLangen/communicating-between-nodejs-processes-4e68be42b917`}</a>{`\n`}<a parentName=\"p\" {...{\n        \"href\": \"https://medium.com/@niratattri/workers-and-node-kue-it-up-1c1215d9bddf\"\n      }}>{`https://medium.com/@niratattri/workers-and-node-kue-it-up-1c1215d9bddf`}</a>{`\n`}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/Automattic/kue\"\n      }}>{`https://github.com/Automattic/kue`}</a></p>\n    <h2 {...{\n      \"id\": \"tldr\"\n    }}>{`tl;dr`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`const { fork } = require('child_process');\n\nconst kue = require('kue');\nkue.app.listen(3050);\nconst port = process.env.REDIS_PORT ? process.env.REDIS_PORT : '6379';\nconst host = process.env.REDIS_HOST ? process.env.REDIS_HOST : '127.0.0.1';\n\nlet queue = kue.createQueue({\n  redis: {\n    host: host,\n    port: port\n  }\n});\n\nqueue.process('build', 1, (job, done) => {\n  run(job, done);\n});\n\nconst run = async (job, done) => {\n  try {\n    const { data } = job.data;\n    // process is a forked process\n    const compute = fork('./processes/buildWeb.js');\n    compute.send(data);\n\n    compute.on('message', (_) => {\n      return done();\n    });\n  } catch (err) {\n    console.error(err);\n    return done(new Error(JSON.stringify(err)));\n  }\n};\n\nmodule.exports = (app) => {\n  app.post('/', async function(req, res) {\n    try {\n      // Create a fork for a process\n      const buildJob = queue\n        .create('build', {\n          // Job Type\n          project: project, // Job Data\n          data: req.body\n        })\n        .removeOnComplete(true) // REMOVE THE JOB FROM THE QUEUE ONCE IT'S COMPLETED\n        .attempts(5) // The maximum number of retries you want the job to have\n        .backoff({ delay: 60 * 1000, type: 'exponential' }) // Time between retries. Read docs.\n        .save(); // PERSIST THE DAMN JOB LOL\n\n      buildJob.on('failed', function(errorMessage) {\n        console.log('Job failed');\n        let error = JSON.parse(errorMessage);\n        // error now contains the object passed from the worker when the job failed\n        console.log(error); // Check it out for yourself\n        // call pagerduty or whatever jazz you wanna do in case of failure\n      });\n\n      res.status(200).send('Building ' + project);\n    } catch (err) {\n      return res.status(500).send('Failed');\n    }\n  });\n};\n\n// buildWeb.js\nconst run = async (data) => {\n  try {\n    setTimeout(() => {\n      process.send('Done');\n    }, 3000);\n  } catch (err) {\n    console.error(err);\n  }\n};\n\nprocess.on('message', (data) => {\n  run(data);\n});\n`}</code></pre>\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  "]}]}