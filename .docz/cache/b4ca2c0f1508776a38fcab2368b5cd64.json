{"remainingRequest":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/docz-core/node_modules/babel-loader/lib/index.js??ref--6-1!/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/@mdx-js/loader/index.js??ref--6-2!/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/source-map-loader/index.js!/Users/dennis.okeeffe/Project-Imposter/developer-notes/manual/Stripe/Rails-Stripe-Configuration.md","dependencies":[{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/manual/Stripe/Rails-Stripe-Configuration.md","mtime":1578866550736},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/cache-loader/dist/cjs.js","mtime":1564095360956},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/docz-core/node_modules/babel-loader/lib/index.js","mtime":1562568123838},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/@mdx-js/loader/index.js","mtime":1565139338792},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/source-map-loader/index.js","mtime":1564095361765}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9vYmplY3RXaXRob3V0UHJvcGVydGllcyBmcm9tIi9Vc2Vycy9kZW5uaXMub2tlZWZmZS9Qcm9qZWN0LUltcG9zdGVyL2RldmVsb3Blci1ub3Rlcy9ub2RlX21vZHVsZXMvYmFiZWwtcHJlc2V0LXJlYWN0LWFwcC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0V2l0aG91dFByb3BlcnRpZXMiOy8qIEBqc3ggbWR4ICovaW1wb3J0IFJlYWN0IGZyb20ncmVhY3QnO2ltcG9ydHttZHh9ZnJvbSdAbWR4LWpzL3JlYWN0JzsvKiBAanN4IG1keCAqL3ZhciBtYWtlU2hvcnRjb2RlPWZ1bmN0aW9uIG1ha2VTaG9ydGNvZGUobmFtZSl7cmV0dXJuIGZ1bmN0aW9uIE1EWERlZmF1bHRTaG9ydGNvZGUocHJvcHMpe2NvbnNvbGUud2FybigiQ29tcG9uZW50ICIrbmFtZSsiIHdhcyBub3QgaW1wb3J0ZWQsIGV4cG9ydGVkLCBvciBwcm92aWRlZCBieSBNRFhQcm92aWRlciBhcyBnbG9iYWwgc2NvcGUiKTtyZXR1cm4gbWR4KCJkaXYiLHByb3BzKTt9O307dmFyIGxheW91dFByb3BzPXt9O3ZhciBNRFhMYXlvdXQ9IndyYXBwZXIiO2V4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIE1EWENvbnRlbnQoX3JlZil7dmFyIGNvbXBvbmVudHM9X3JlZi5jb21wb25lbnRzLHByb3BzPV9vYmplY3RXaXRob3V0UHJvcGVydGllcyhfcmVmLFsiY29tcG9uZW50cyJdKTtyZXR1cm4gbWR4KE1EWExheW91dCxPYmplY3QuYXNzaWduKHt9LGxheW91dFByb3BzLHByb3BzLHtjb21wb25lbnRzOmNvbXBvbmVudHMsbWR4VHlwZToiTURYTGF5b3V0In0pLG1keCgiaDEiLHsiaWQiOiJyYWlscy1zdHJpcGUtY29uZmlndXJhdGlvbiJ9LCJSYWlscyBTdHJpcGUgQ29uZmlndXJhdGlvbiIpLG1keCgiaDIiLHsiaWQiOiJyZWZlcmVuY2VzIn0sIlJlZmVyZW5jZXMiKSxtZHgoIm9sIixudWxsLG1keCgibGkiLHtwYXJlbnROYW1lOiJvbCJ9LG1keCgiYSIsT2JqZWN0LmFzc2lnbih7cGFyZW50TmFtZToibGkifSx7ImhyZWYiOiJodHRwczovL2d1aWRlcy5ydWJ5b25yYWlscy5vcmcvYXBpX2FwcC5odG1sIn0pLCJVc2luZyBSYWlscyBmb3IgQVBJIG9ubHkiKSksbWR4KCJsaSIse3BhcmVudE5hbWU6Im9sIn0sbWR4KCJhIixPYmplY3QuYXNzaWduKHtwYXJlbnROYW1lOiJsaSJ9LHsiaHJlZiI6Imh0dHBzOi8vZ2l0aHViLmNvbS9zdHJpcGUvc3RyaXBlLXJ1YnkifSksIlN0cmlwZSBSdWJ5IEdpdGh1YiIpKSxtZHgoImxpIix7cGFyZW50TmFtZToib2wifSxtZHgoImEiLE9iamVjdC5hc3NpZ24oe3BhcmVudE5hbWU6ImxpIn0seyJocmVmIjoiaHR0cHM6Ly9naXRodWIuY29tL2JrZWVwZXJzL2RvdGVudiJ9KSwiRG90ZW52IFJ1YnkgR2l0aHViIikpLG1keCgibGkiLHtwYXJlbnROYW1lOiJvbCJ9LG1keCgiYSIsT2JqZWN0LmFzc2lnbih7cGFyZW50TmFtZToibGkifSx7ImhyZWYiOiJodHRwOi8vd3d3Lnh5enB1Yi5jb20vZW4vcnVieS1vbi1yYWlscy8zLjIvc2NhZmZvbGRfYW5sZWdlbi5odG1sIn0pLCJTY2FmZm9sZGluZyByb3V0ZXMiKSksbWR4KCJsaSIse3BhcmVudE5hbWU6Im9sIn0sbWR4KCJhIixPYmplY3QuYXNzaWduKHtwYXJlbnROYW1lOiJsaSJ9LHsiaHJlZiI6Imh0dHBzOi8vdGhvdWdodGJvdC5jb20vYmxvZy9iYWNrLXRvLWJhc2ljcy1odHRwLXJlcXVlc3RzIn0pLCJIVFRQIFJlcXVlc3RzIGluIFJhaWxzIEFwcHMiKSksbWR4KCJsaSIse3BhcmVudE5hbWU6Im9sIn0sbWR4KCJhIixPYmplY3QuYXNzaWduKHtwYXJlbnROYW1lOiJsaSJ9LHsiaHJlZiI6Imh0dHBzOi8vZ3VpZGVzLnJ1YnlvbnJhaWxzLm9yZy92NS4yL2FjdGlvbl9jb250cm9sbGVyX292ZXJ2aWV3Lmh0bWwifSksIkFjdGlvbiBDb250cm9sbGxlciBPdmVydmlldyIpKSksbWR4KCJoMiIseyJpZCI6ImdldHRpbmctc3RhcnRlZCJ9LCJHZXR0aW5nIFN0YXJ0ZWQiKSxtZHgoInAiLG51bGwsIkFzc3VtaW5nIHlvdSBoYXZlIFJhaWxzIGluc3RhbGxlZCwgcnVuIHRoZSBmb2xsb3dpbmc6IiksbWR4KCJwcmUiLG51bGwsbWR4KCJjb2RlIixPYmplY3QuYXNzaWduKHtwYXJlbnROYW1lOiJwcmUifSx7ImNsYXNzTmFtZSI6Imxhbmd1YWdlLXNoZWxsIn0pLCJyYWlscyBuZXcgcnVieS1yYWlscy1zdHJpcGVcbmNkIHJ1YnktcmFpbHMtc3RyaXBlXG4iKSksbWR4KCJwIixudWxsLCJBZGQgdGhlIGZvbGxvd2luZyB0byB0aGUgdG9wIG9mIHlvdXIgIixtZHgoImlubGluZUNvZGUiLHtwYXJlbnROYW1lOiJwIn0sIkdlbWZpbGUiKSwiIGZvciB1cyB0byByZWFkIGxvY2FsIGRvdGVudiB2YWx1ZXMgYW5kIGJ1bmRsZSBTdHJpcGUuIiksbWR4KCJwcmUiLG51bGwsbWR4KCJjb2RlIixPYmplY3QuYXNzaWduKHtwYXJlbnROYW1lOiJwcmUifSx7ImNsYXNzTmFtZSI6Imxhbmd1YWdlLXJ1YnkifSksImdlbSAnZG90ZW52LXJhaWxzJywgZ3JvdXBzOiBbOmRldmVsb3BtZW50LCA6dGVzdF1cbmdlbSAnc3RyaXBlJ1xuIikpLG1keCgicCIsbnVsbCwiT24gdGhlIGNvbnNvbGUsIHJ1biAiLG1keCgiaW5saW5lQ29kZSIse3BhcmVudE5hbWU6InAifSwiYnVuZGxlIiksIi4iKSxtZHgoImgyIix7ImlkIjoic2NhZmZvbGRpbmctdGhlLWNoYXJnZXMtcm91dGUifSwiU2NhZmZvbGRpbmcgdGhlIENoYXJnZXMgUm91dGUiKSxtZHgoInAiLG51bGwsIkZyb20gdGhlIGNvbnNvbGUgcnVuOiIpLG1keCgicHJlIixudWxsLG1keCgiY29kZSIsT2JqZWN0LmFzc2lnbih7cGFyZW50TmFtZToicHJlIn0seyJjbGFzc05hbWUiOiJsYW5ndWFnZS1zaGVsbCJ9KSwicmFpbHMgZ2VuZXJhdGUgY29udHJvbGxlciBDaGFyZ2VzIGNyZWF0ZVxuIikpLG1keCgicCIsbnVsbCwiVGhpcyB3aWxsIHNjYWZmb2xkIG91ciAiLG1keCgiaW5saW5lQ29kZSIse3BhcmVudE5hbWU6InAifSwiYXBwL2NvbnRyb2xsZXJzL2NoYXJnZXNfY29udHJvbGxlci5yYiIpLCIgY29udHJvbGxlci4iKSxtZHgoInAiLG51bGwsIkluc2lkZSB0aGF0LCBsZXQncyB1cGRhdGUgdGhlIGNvZGU6IiksbWR4KCJwcmUiLG51bGwsbWR4KCJjb2RlIixPYmplY3QuYXNzaWduKHtwYXJlbnROYW1lOiJwcmUifSx7ImNsYXNzTmFtZSI6Imxhbmd1YWdlLXJ1YnkifSksInJlcXVpcmUgJ3N0cmlwZSdcblxuY2xhc3MgQ2hhcmdlc0NvbnRyb2xsZXIgPCBBcHBsaWNhdGlvbkNvbnRyb2xsZXJcbiAgIyBQT1NUIC9jaGFyZ2VcbiAgIyBQT1NUIC9jaGFyZ2UuanNvblxuICBkZWYgY3JlYXRlXG4gICAgIyBgc291cmNlYCBpcyBvYnRhaW5lZCB3aXRoIFN0cmlwZS5qczsgc2VlIGh0dHBzOi8vc3RyaXBlLmNvbS9kb2NzL3BheW1lbnRzL2FjY2VwdC1hLXBheW1lbnQtY2hhcmdlcyN3ZWItY3JlYXRlLXRva2VuXG4gICAgY2hhcmdlID0gU3RyaXBlOjpDaGFyZ2UuY3JlYXRlKHtcbiAgICAgIGFtb3VudDogcGFyYW1zWzphbW91bnRdLFxuICAgICAgY3VycmVuY3k6ICdhdWQnLFxuICAgICAgc291cmNlOiAndG9rX2FtZXgnLFxuICAgICAgcmVjZWlwdF9lbWFpbDogcGFyYW1zWzpyZWNlaXB0X2VtYWlsXSxcbiAgICAgIGRlc2NyaXB0aW9uOiAnTXkgRmlyc3QgVGVzdCBDaGFyZ2UgKGNyZWF0ZWQgZm9yIEFQSSBkb2NzKScsXG4gICAgfSlcbiAgICByZW5kZXIganNvbjogY2hhcmdlXG4gIGVuZFxuZW5kXG4iKSksbWR4KCJwIixudWxsLCJUaGlzIGNvZGUgd2lsbCBtYWtlIGEgY2hhcmdlIHRvIFN0cmlwZSB1c2luZyB0aGUgSlNPTiBib2R5IHBhcmFtcyAiLG1keCgiaW5saW5lQ29kZSIse3BhcmVudE5hbWU6InAifSwiYW1vdW50IiksIiBhbmQgIixtZHgoImlubGluZUNvZGUiLHtwYXJlbnROYW1lOiJwIn0sInJlY2VpcHRfZW1haWwiKSwiLiIpLG1keCgicCIsbnVsbCwiSWYgdGhlIGNoYXJnZSBpcyBzdWNjZXNzZnVsLCBpdCB3aWxsIHJldHVybiB0aGUgY2hhcmdlIGluZm9ybWF0aW9uIGFzIEpTT04uIiksbWR4KCJoMiIseyJpZCI6InVwZGF0aW5nLWNvbmZpZ3JvdXRlc3JiIn0sIlVwZGF0aW5nIGNvbmZpZy9yb3V0ZXMucmIiKSxtZHgoInAiLG51bGwsIkVuc3VyZSByb3V0ZXMgaGFzIHRoZSBmb2xsb3dpbmcgZm9yIFBPU1Q6IiksbWR4KCJwcmUiLG51bGwsbWR4KCJjb2RlIixPYmplY3QuYXNzaWduKHtwYXJlbnROYW1lOiJwcmUifSx7ImNsYXNzTmFtZSI6Imxhbmd1YWdlLXJ1YnkifSksIlJhaWxzLmFwcGxpY2F0aW9uLnJvdXRlcy5kcmF3IGRvXG4gICMgLi4uIHRoZSByZXN0IGlzIG9taXR0ZWQgZm9yIGJyZXZpdHlcbiAgcG9zdCAnY2hhcmdlcy9jcmVhdGUnXG4gICMgRm9yIGRldGFpbHMgb24gdGhlIERTTCBhdmFpbGFibGUgd2l0aGluIHRoaXMgZmlsZSwgc2VlIGh0dHA6Ly9ndWlkZXMucnVieW9ucmFpbHMub3JnL3JvdXRpbmcuaHRtbFxuZW5kXG4iKSksbWR4KCJwIixudWxsLCJUaGlzIGVuc3VyZXMgdGhhdCB3ZSBjYW4gc2VuZCBhIFBPU1QgcmVxdWVzdCB0byAiLG1keCgiaW5saW5lQ29kZSIse3BhcmVudE5hbWU6InAifSwiaHR0cDovL2xvY2FsaG9zdDpQT1JUL2NoYXJnZXMvY3JlYXRlIiksIiB3aGVuIHdlIHJ1biB0aGUgc2VydmVyLiIpLG1keCgiaDIiLHsiaWQiOiJydW5uaW5nLXRoZS1jb2RlIn0sIlJ1bm5pbmcgdGhlIGNvZGUiKSxtZHgoInAiLG51bGwsIlJ1biAiLG1keCgiaW5saW5lQ29kZSIse3BhcmVudE5hbWU6InAifSwicmFpbHMgc2VydmVyIiksIiB0byBnZXQgb3VyIHNlcnZlciB1cCBhbmQgcnVubmluZyAoZGVmYXVsdGluZyB0byAzMDAwKSwgdGhlbiBjYWxsICIsbWR4KCJpbmxpbmVDb2RlIix7cGFyZW50TmFtZToicCJ9LCJodHRwIFBPU1QgaHR0cDovL2xvY2FsaG9zdDozMDAwL2NoYXJnZXMvY3JlYXRlIGFtb3VudDo9MTcwMCByZWNlaXB0X2VtYWlsPWhlbGxvX3JhaWxzQGV4YW1wbGUuY29tIiksIiAodXNpbmcgSFRUUGllKSBhbmQgd2Ugd2lsbCBnZXQgYmFjayBvdXIgY2hhcmdlIHJlc3VsdHMgc2VudCBhcyBKU09OLiBIb29yYXkhIikpO31pZih0eXBlb2YgTURYQ29udGVudCE9PSd1bmRlZmluZWQnJiZNRFhDb250ZW50JiZNRFhDb250ZW50PT09T2JqZWN0KE1EWENvbnRlbnQpJiZPYmplY3QuaXNFeHRlbnNpYmxlKE1EWENvbnRlbnQpKXtPYmplY3QuZGVmaW5lUHJvcGVydHkoTURYQ29udGVudCwnX19maWxlbWV0YScse2VudW1lcmFibGU6dHJ1ZSxjb25maWd1cmFibGU6dHJ1ZSx2YWx1ZTp7bmFtZToiTURYQ29udGVudCIsZmlsZW5hbWU6Im1hbnVhbC9TdHJpcGUvUmFpbHMtU3RyaXBlLUNvbmZpZ3VyYXRpb24ubWQifX0pO31NRFhDb250ZW50LmlzTURYQ29tcG9uZW50PXRydWU7"},{"version":3,"sources":["/Users/dennis.okeeffe/Project-Imposter/developer-notes/manual/Stripe/Rails-Stripe-Configuration.md"],"names":["React","mdx","makeShortcode","name","MDXDefaultShortcode","props","console","warn","layoutProps","MDXLayout","MDXContent","components","isMDXComponent"],"mappings":"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","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"rails-stripe-configuration\"\n    }}>{`Rails Stripe Configuration`}</h1>\n    <h2 {...{\n      \"id\": \"references\"\n    }}>{`References`}</h2>\n    <ol>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"https://guides.rubyonrails.org/api_app.html\"\n        }}>{`Using Rails for API only`}</a></li>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"https://github.com/stripe/stripe-ruby\"\n        }}>{`Stripe Ruby Github`}</a></li>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"https://github.com/bkeepers/dotenv\"\n        }}>{`Dotenv Ruby Github`}</a></li>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"http://www.xyzpub.com/en/ruby-on-rails/3.2/scaffold_anlegen.html\"\n        }}>{`Scaffolding routes`}</a></li>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"https://thoughtbot.com/blog/back-to-basics-http-requests\"\n        }}>{`HTTP Requests in Rails Apps`}</a></li>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"https://guides.rubyonrails.org/v5.2/action_controller_overview.html\"\n        }}>{`Action Controlller Overview`}</a></li>\n    </ol>\n    <h2 {...{\n      \"id\": \"getting-started\"\n    }}>{`Getting Started`}</h2>\n    <p>{`Assuming you have Rails installed, run the following:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`rails new ruby-rails-stripe\ncd ruby-rails-stripe\n`}</code></pre>\n    <p>{`Add the following to the top of your `}<inlineCode parentName=\"p\">{`Gemfile`}</inlineCode>{` for us to read local dotenv values and bundle Stripe.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-ruby\"\n      }}>{`gem 'dotenv-rails', groups: [:development, :test]\ngem 'stripe'\n`}</code></pre>\n    <p>{`On the console, run `}<inlineCode parentName=\"p\">{`bundle`}</inlineCode>{`.`}</p>\n    <h2 {...{\n      \"id\": \"scaffolding-the-charges-route\"\n    }}>{`Scaffolding the Charges Route`}</h2>\n    <p>{`From the console run:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`rails generate controller Charges create\n`}</code></pre>\n    <p>{`This will scaffold our `}<inlineCode parentName=\"p\">{`app/controllers/charges_controller.rb`}</inlineCode>{` controller.`}</p>\n    <p>{`Inside that, let's update the code:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-ruby\"\n      }}>{`require 'stripe'\n\nclass ChargesController < ApplicationController\n  # POST /charge\n  # POST /charge.json\n  def create\n    # \\`source\\` is obtained with Stripe.js; see https://stripe.com/docs/payments/accept-a-payment-charges#web-create-token\n    charge = Stripe::Charge.create({\n      amount: params[:amount],\n      currency: 'aud',\n      source: 'tok_amex',\n      receipt_email: params[:receipt_email],\n      description: 'My First Test Charge (created for API docs)',\n    })\n    render json: charge\n  end\nend\n`}</code></pre>\n    <p>{`This code will make a charge to Stripe using the JSON body params `}<inlineCode parentName=\"p\">{`amount`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`receipt_email`}</inlineCode>{`.`}</p>\n    <p>{`If the charge is successful, it will return the charge information as JSON.`}</p>\n    <h2 {...{\n      \"id\": \"updating-configroutesrb\"\n    }}>{`Updating config/routes.rb`}</h2>\n    <p>{`Ensure routes has the following for POST:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-ruby\"\n      }}>{`Rails.application.routes.draw do\n  # ... the rest is omitted for brevity\n  post 'charges/create'\n  # For details on the DSL available within this file, see http://guides.rubyonrails.org/routing.html\nend\n`}</code></pre>\n    <p>{`This ensures that we can send a POST request to `}<inlineCode parentName=\"p\">{`http://localhost:PORT/charges/create`}</inlineCode>{` when we run the server.`}</p>\n    <h2 {...{\n      \"id\": \"running-the-code\"\n    }}>{`Running the code`}</h2>\n    <p>{`Run `}<inlineCode parentName=\"p\">{`rails server`}</inlineCode>{` to get our server up and running (defaulting to 3000), then call `}<inlineCode parentName=\"p\">{`http POST http://localhost:3000/charges/create amount:=1700 receipt_email=hello_rails@example.com`}</inlineCode>{` (using HTTPie) and we will get back our charge results sent as JSON. Hooray!`}</p>\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  "]}]}