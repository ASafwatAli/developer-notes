{"remainingRequest":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/docz-core/node_modules/babel-loader/lib/index.js??ref--6-1!/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/@mdx-js/loader/index.js??ref--6-2!/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/source-map-loader/index.js!/Users/dennis.okeeffe/Project-Imposter/developer-notes/manual/Python/Python-Object-Orientated.md","dependencies":[{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/manual/Python/Python-Object-Orientated.md","mtime":1562563032080},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/cache-loader/dist/cjs.js","mtime":1564095360956},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/docz-core/node_modules/babel-loader/lib/index.js","mtime":1562568123838},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/@mdx-js/loader/index.js","mtime":1565139338792},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/source-map-loader/index.js","mtime":1564095361765}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9vYmplY3RXaXRob3V0UHJvcGVydGllcyBmcm9tIi9Vc2Vycy9kZW5uaXMub2tlZWZmZS9Qcm9qZWN0LUltcG9zdGVyL2RldmVsb3Blci1ub3Rlcy9ub2RlX21vZHVsZXMvYmFiZWwtcHJlc2V0LXJlYWN0LWFwcC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0V2l0aG91dFByb3BlcnRpZXMiOy8qIEBqc3ggbWR4ICovaW1wb3J0IFJlYWN0IGZyb20ncmVhY3QnO2ltcG9ydHttZHh9ZnJvbSdAbWR4LWpzL3JlYWN0JzsvKiBAanN4IG1keCAqL3ZhciBtYWtlU2hvcnRjb2RlPWZ1bmN0aW9uIG1ha2VTaG9ydGNvZGUobmFtZSl7cmV0dXJuIGZ1bmN0aW9uIE1EWERlZmF1bHRTaG9ydGNvZGUocHJvcHMpe2NvbnNvbGUud2FybigiQ29tcG9uZW50ICIrbmFtZSsiIHdhcyBub3QgaW1wb3J0ZWQsIGV4cG9ydGVkLCBvciBwcm92aWRlZCBieSBNRFhQcm92aWRlciBhcyBnbG9iYWwgc2NvcGUiKTtyZXR1cm4gbWR4KCJkaXYiLHByb3BzKTt9O307dmFyIGxheW91dFByb3BzPXt9O3ZhciBNRFhMYXlvdXQ9IndyYXBwZXIiO2V4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIE1EWENvbnRlbnQoX3JlZil7dmFyIGNvbXBvbmVudHM9X3JlZi5jb21wb25lbnRzLHByb3BzPV9vYmplY3RXaXRob3V0UHJvcGVydGllcyhfcmVmLFsiY29tcG9uZW50cyJdKTtyZXR1cm4gbWR4KE1EWExheW91dCxPYmplY3QuYXNzaWduKHt9LGxheW91dFByb3BzLHByb3BzLHtjb21wb25lbnRzOmNvbXBvbmVudHMsbWR4VHlwZToiTURYTGF5b3V0In0pLG1keCgiZGl2Iix7aWQ6InNlY3Rpb24ifSksbWR4KCJociIsbnVsbCksbWR4KCJoMiIseyJpZCI6Im9iamVjdHMifSwiT2JqZWN0cyIpLG1keCgiZGl2Iix7aWQ6Im9iamVjdHMxIn0pLG1keCgiaDMiLHsiaWQiOiItLS0tLWNyZWF0aW5nLWluc3RhbmNlcyJ9LCItLS0tIENyZWF0aW5nIEluc3RhbmNlcyIpLG1keCgicHJlIixudWxsLG1keCgiY29kZSIsT2JqZWN0LmFzc2lnbih7cGFyZW50TmFtZToicHJlIn0se30pLCI+Pj4gY2xhc3MgTW9uc3Rlcjpcbi4uLiAgICAgaGl0X3BvaW50cz0xXG4uLi4gICAgIGNvbG9yPVwiYmx1ZVwiXG4uLi4gICAgIHdlYXBvbj1cInN3b3JkXCJcbi4uLlxuPj4+IG1vbnN0ZXIgPSBNb25zdGVyKClcbj4+PiBtb25zdGVyLmhpdF9wb2ludHNcbjFcbj4+PiBtb25zdGVyLndlYXBvblxuJ3N3b3JkJ1xuPj4+IG1vbnN0ZXIuY29sb3JcbidibHVlJ1xuXG4jIGp1Ymp1YiBpbnN0YW5jZVxuPj4+IGp1Ymp1YiA9IE1vbnN0ZXIoKVxuPj4+IHR5cGUoanVianViKVxuPHR5cGUgJ2luc3RhbmNlJz5cbj4+PiBqdWJqdWIuaGl0X3BvaW50c1xuMVxuPj4+IGp1Ymp1Yi5oaXRfcG9pbnRzID0gNVxuPj4+IGp1Ymp1Yi5oaXRfcG9pbnRzXG41XG4iKSksbWR4KCJkaXYiLHtpZDoib2JqZWN0czIifSksbWR4KCJoMyIseyJpZCI6Ii0tLS0tY2xhc3MtbWV0aG9kcyJ9LCItLS0tIENsYXNzIE1ldGhvZHMiKSxtZHgoInByZSIsbnVsbCxtZHgoImNvZGUiLE9iamVjdC5hc3NpZ24oe3BhcmVudE5hbWU6InByZSJ9LHt9KSwiPj4+IGNsYXNzIE1ldGhvZHM6XG4uLi4gICAgIGEgPSAyXG4uLi4gICAgIHNvdW5kPVwicm9hclwiXG4uLi4gICAgIGRlZiBiYXR0bGVjcnkoc2VsZik6XG4uLi4gICAgICAgICAgICAgcmV0dXJuIHNlbGYuc291bmQudXBwZXIoKVxuLi4uXG4+Pj4gZ2VuZXJhbCA9IE1ldGhvZHMoKVxuPj4+IGdlbmVyYWwuYmF0dGxlY3J5KClcbidST0FSJ1xuIikpLG1keCgicCIsbnVsbCwiQ29kZSBDaGFsbGVuZ2UiKSxtZHgoInByZSIsbnVsbCxtZHgoImNvZGUiLE9iamVjdC5hc3NpZ24oe3BhcmVudE5hbWU6InByZSJ9LHt9KSwiY2xhc3MgU3RvcmU6XG4gICAgb3BlbiA9IDlcbiAgICBjbG9zZSA9IDE4XG5cbiAgICBkZWYgaG91cnMoc2VsZik6XG4gICAgICAgIHJldHVybiBcIldlJ3JlIG9wZW4gZnJvbSB7fSB0byB7fVwiLmZvcm1hdChzZWxmLm9wZW4sIHNlbGYuY2xvc2UpXG4iKSksbWR4KCJkaXYiLHtpZDoib2JqZWN0czMifSksbWR4KCJoMyIseyJpZCI6Ii0tLS0tXy0taW5pdC0tXyJ9LCItLS0tICIsIl8iLCIgIixtZHgoImVtIix7cGFyZW50TmFtZToiaDMifSwiIGluaXQgIiksIiAiLCJfIiksbWR4KCJwIixudWxsLCJEZWFsaW5nIHdpdGggdGhlIGR1bmRlciBpbml0ISIpLG1keCgicHJlIixudWxsLG1keCgiY29kZSIsT2JqZWN0LmFzc2lnbih7cGFyZW50TmFtZToicHJlIn0se30pLCJjbGFzcyBNb25zdGVyOlxuICAgIGRlZiBfX2luaXRfXyhzZWxmLCAqKmt3YXJncyk6XG4gICAgICAgIHNlbGYuaGl0X3BvaW50cyA9IGt3YXJncy5nZXQoJ2hpdF9wb2ludHMnLCA1KVxuICAgICAgICBzZWxmLndlYXBvbiA9IGt3YXJncy5nZXQoJ3dlYXBvbicsICdzd29yZCcpXG4gICAgICAgIHNlbGYuY29sb3IgPSBrd2FyZ3MuZ2V0KCdjb2xvcicsICd5ZWxsb3cnKVxuICAgICAgICBzZWxmLnNvdW5kID0ga3dhcmdzLmdldCgnc291bmQnLCAneWVsbCcpXG5cbm1vbnN0ZXIgPSBNb25zdGVyKGhpdF9wb2ludHM9MjIsIGNvbG9yPVwiZ3JlZW5cIilcbiIpKSxtZHgoImRpdiIse2lkOiJpbmhlcml0YW5jZSJ9KSxtZHgoImhyIixudWxsKSxtZHgoImgyIix7ImlkIjoicHl0aG9uLWluaGVyaXRhbmNlIn0sIlB5dGhvbiBJbmhlcml0YW5jZSIpLG1keCgicCIsbnVsbCwiQnVpbGRpbmcgb24gZnJvbSBiZWZvcmUsIHdlJ3JlIGp1c3QgbWFraW5nIHNvbWUgZGVmYXVsdHMuLi4iKSxtZHgoInByZSIsbnVsbCxtZHgoImNvZGUiLE9iamVjdC5hc3NpZ24oe3BhcmVudE5hbWU6InByZSJ9LHt9KSwiY2xhc3MgTW9uc3RlcjpcbiAgICBtaW5faHAgPSAxXG4gICAgbWF4X2hwID0gMVxuICAgIG1pbl9leHAgPSAxXG4gICAgbWF4X2V4cCA9IDFcbiAgICB3ZWFwb24gPSAnc3dvcmQnXG4gICAgc291bmQgPSAncm9hcidcblxuICAgIGRlZiBfX2luaXRfXyhzZWxmLCAqKmt3YXJncyk6XG4gICAgICAgIHNlbGYuaHAgPSByYW5kb20ucmFuZGludChzZWxmLm1pbl9ocCwgc2VsZi5tYXhfaHApXG4gICAgICAgIHNlbGYuZXhwID0gcmFuZG9tLnJhbmRpbnQoc2VsZi5taW5fZXhwLCBzZWxmLm1heF9leHApXG4gICAgICAgIHNlbGYuY29sb3IgPSByYW5kb20uY2hvaWNlKENPTE9SUylcblxuICAgICAgICBmb3Iga2V5LCB2YWx1ZSBpbiBrd2FyZ3MuaXRlbXMoKTpcbiAgICAgICAgICAgIHNldGF0dHIoc2VsZiwga2V5LCB2YWx1ZSlcblxuICAgIGRlZiBiYXR0bGVjcnkoc2VsZik6XG4gICAgICAgIHJldHVybiBzZWxmLnNvdW5kLnVwcGVyKClcblxubmV3X21vbiA9IE1vbnN0ZXIoKVxubmV3X21vbi5ocFxuIyAxXG5uZXdfbW9uLmNvbG9yXG4jICdibHVlJ1xuXG5mcmVzaCA9IE1vbnN0ZXIoY29sb3I9J2JsdWUnLCBzb3VuZD0nd2hpc3RsaW5nJywgaHA9JzUwMCcsIGFkamVjdGl2ZT0nbWFueHNvbWUnKVxuZnJlc2guY29sb3JcbiMgJ2JsdWUnXG5mcmVzaC5hZGplY3RpdmVcbiMgbWFueHNvbWVcbiIpKSxtZHgoImRpdiIse2lkOiJpbmhlcml0YW5jZTIifSksbWR4KCJoMyIseyJpZCI6Ii0tLS0tcHl0aG9uLXN1YmNsYXNzaW5nIn0sIi0tLS0gUHl0aG9uIFN1YmNsYXNzaW5nIiksbWR4KCJwcmUiLG51bGwsbWR4KCJjb2RlIixPYmplY3QuYXNzaWduKHtwYXJlbnROYW1lOiJwcmUifSx7fSksIiMgYnVpbGRpbmcgb24gZnJvbSBtb25zdGVyXG5cbmNsYXNzIEdvYmxpbihNb25zdGVyKTpcbiAgICBtYXhfaHAgPSAzXG4gICAgbWF4X2V4cCA9IDJcbiAgICBzb3VuZCA9ICdzcXVlaydcblxuZ29sYmluID0gR29ibGluKClcbmdvYmxpbi5ocFxuIyAyIC0gbm93IGlzbid0IGp1c3QgMSBmcm9tIHRoZSBtaW4vbWF4IHNldCBhYm92ZSFcbmdvYmxpbi5jb2xvclxuIyAnYmx1ZSdcblxuY2xhc3MgVHJvbGwoTW9uc3Rlcik6XG4gICAgbWluX2hwID0gM1xuICAgIG1heF9ocCA9IDVcbiAgICBtaW5fZXhwID0gMlxuICAgIG1heF9leHAgPSA2XG4gICAgc291bmQgPSAnZ3Jvd2wnXG4iKSksbWR4KCJwIixudWxsLCJDaGFsbGVuZ2UiKSxtZHgoInAiLG51bGwsIkNyZWF0ZSBhIG5ldyBjbGFzcyBuYW1lZCBEcmFnb24gdGhhdCBleHRlbmRzIHRoZSBNb25zdGVyIGNsYXNzLiBEb24ndCBmb3JnZXQgdG8gaW1wb3J0IE1vbnN0ZXIgZnJvbSBtb25zdGVyLiBHaXZlIHlvdXIgRHJhZ29uIGFuIGludGVnZXIgc2l6ZSBhdHRyaWJ1dGUuIiksbWR4KCJwcmUiLG51bGwsbWR4KCJjb2RlIixPYmplY3QuYXNzaWduKHtwYXJlbnROYW1lOiJwcmUifSx7fSksImZyb20gbW9uc3RlciBpbXBvcnQgTW9uc3RlclxuXG5jbGFzcyBEcmFnb24oTW9uc3Rlcik6XG4gICAgc2l6ZSA9IDEyXG4iKSksbWR4KCJkaXYiLHtpZDoiaW5oZXJpdGFuY2UzIn0pLG1keCgiaDMiLHsiaWQiOiItLS0tLV8tLXN0ci0tXyJ9LCItLS0tICIsIl8iLCIgIixtZHgoImVtIix7cGFyZW50TmFtZToiaDMifSwiIHN0ciAiKSwiICIsIl8iKSxtZHgoInAiLG51bGwsIlRoaXMgaGVscHMgdXMgd2hlbiB3ZSBwcmludChvYmplY3QpIiksbWR4KCJwcmUiLG51bGwsbWR4KCJjb2RlIixPYmplY3QuYXNzaWduKHtwYXJlbnROYW1lOiJwcmUifSx7fSksImNsYXNzIE1vbnN0ZXI6XG4gICAgLi4uXG4gICAgZGVmIF9fc3RyX18oc2VsZik6XG4gICAgICAgIHJldHVybiAne30ge30sIEhQOiB7fSAuLi4nLmZvcm1hdChzZWxmLmNvbG9yLnRpdGxlKCksIHNlbGYuX19jbGFzc19fLl9fbmFtZV9fLCBzZWxmLmhwLCBzZWxmLmV4cClcbiAgICAuLi5cblxuZHJhY28gPSBNb25zdGVyKClcbnByaW50KGRyYWNvKVxuIyByZXR1cm5zIHRoZSBkZXRhaWxzIGZyb20gdGhlIG1hZ2ljIG1ldGhvZFxuIikpLG1keCgicCIsbnVsbCwiQ2hhbGxlbmdlIiksbWR4KCJwIixudWxsLCJJbXBvcnQgR2FtZSBmcm9tIGdhbWUuIE1ha2UgYSBuZXcgY2xhc3MgbmFtZWQgR2FtZVNjb3JlIHRoYXQgZXh0ZW5kcyBHYW1lLiBVc2UgcGFzcyBpZiBuZWVkZWQuIiksbWR4KCJwIixudWxsLCJBZGQgYSAiLG1keCgic3Ryb25nIix7cGFyZW50TmFtZToicCJ9LCJzdHIiKSwiIG1ldGhvZCB0byBHYW1lU2NvcmUgdGhhdCByZXR1cm5zIHRoZSBzY29yZSBpbiB0aGUgc3RyaW5nIFwiUGxheWVyIDE6IDU7IFBsYXllciAyOiAxMFwiLCB1c2luZyB0aGUgY29ycmVjdCB2YWx1ZXMgZnJvbSBzZWxmLnNjb3JlLiBzZWxmLnNjb3JlIGlzIGEgdHVwbGUgd2l0aCBQbGF5ZXIgMSdzIHNjb3JlIGFuZCBQbGF5ZXIgMidzIHNjb3JlIGxpa2UgKDUsIDEwKS5cbllvdSBkbyBub3QgbmVlZCB0byBkZWZpbmUgc2VsZi5zY29yZS4gSXQgY29tZXMgZnJvbSB0aGUgR2FtZSBjbGFzcy4iKSxtZHgoInByZSIsbnVsbCxtZHgoImNvZGUiLE9iamVjdC5hc3NpZ24oe3BhcmVudE5hbWU6InByZSJ9LHt9KSwiZnJvbSBnYW1lIGltcG9ydCBHYW1lXG5cbmNsYXNzIEdhbWVTY29yZShHYW1lKTpcbiAgICBwYXNzXG5cbiAgICBkZWYgX19zdHJfXyhzZWxmKTpcbiAgICAgICAgcmV0dXJuIFwiUGxheWVyIDE6IHt9OyBQbGF5ZXIgMjoge31cIi5mb3JtYXQoKnNlbGYuc2NvcmUpXG4iKSksbWR4KCJkaXYiLHtpZDoiaW5oZXJpdGFuY2U0In0pLG1keCgiaDMiLHsiaWQiOiItLS0tLWluc3RhbmNlLW1ldGhvZHMifSwiLS0tLSBJbnN0YW5jZSBNZXRob2RzIiksbWR4KCJwcmUiLG51bGwsbWR4KCJjb2RlIixPYmplY3QuYXNzaWduKHtwYXJlbnROYW1lOiJwcmUifSx7fSksImNsYXNzIENoYXJhY3RlcjpcbiAgICBleHAgPSAwXG4gICAgaHAgPSAxMFxuXG4gICAgZGVmIF9faW5pdF9fKHNlbGYsICoqa3dhcmdzKTpcbiAgICAgICAgc2VsZi5uYW1lID0gaW5wdXQoXCJOYW1lOiBcIilcbiAgICAgICAgc2VsZi53ZWFwb24gPSBzZWxmLmdldF93ZWFwb24oKVxuICAgICAgICBmb3IgaywgdiBpbiBrd2FyZ3MuaXRlbXMoKTpcbiAgICAgICAgICAgIHNldGF0dHIoc2VsZiwgaywgdilcblxuICAgIGRlZiBnZXRfd2VhcG9uKHNlbGYpOlxuICAgICAgICB3ZWFwb25fY2hvaWNlID0gaW5wdXQoXCJXZWFwb246IFtTXXdvcmQsIFtBXXhlOiBcIikubG93ZXIoKVxuXG4gICAgICAgIGlmIHdlYXBvbl9jaG9pY2UgaW4gJ3NhJzpcbiAgICAgICAgICAgIGlmIHdlYXBvbl9jaG9pY2UgPT0gJ3MnOlxuICAgICAgICAgICAgICAgIHJldHVybiAnc3dvcmQnXG4gICAgICAgICAgICBlbHNlXG4gICAgICAgICAgICAgICAgcmV0dXJuICdheGUnXG4iKSksbWR4KCJwIixudWxsLCJDaGFsbGVuZ2UiKSxtZHgoInAiLG51bGwsIkFkZCBhIHNjb3JlIG1ldGhvZCB0byBHYW1lIHRoYXQgdGFrZXMgYSBwbGF5ZXIgYXJndW1lbnQuIFRoZSBwbGF5ZXIgYXJndW1lbnQgd2lsbCBiZSBlaXRoZXIgMSBvciAyLiBJbmNyZWFzZSB0aGF0IHBsYXllcidzIHZhbHVlIGluIHNlbGYuY3VycmVudF9zY29yZSBieSAxLiBZb3UnbGwgbmVlZCB0byBhZGp1c3QgdGhlIGluZGV4IChpLmUuIHBsYXllciA9IDEgbWVhbnMgc2VsZi5jdXJyZW50X3Njb3JlIiwiWzBdIiwiIG5lZWRzIHRvIGluY3JlYXNlKS4iKSxtZHgoInByZSIsbnVsbCxtZHgoImNvZGUiLE9iamVjdC5hc3NpZ24oe3BhcmVudE5hbWU6InByZSJ9LHt9KSwiY2xhc3MgR2FtZTpcbiAgZGVmIF9faW5pdF9fKHNlbGYpOlxuICAgIHNlbGYuY3VycmVudF9zY29yZSA9IFswLCAwXVxuXG4gIGRlZiBzY29yZShzZWxmLCBwbGF5ZXIpOlxuICAgIGlmIHBsYXllciBpbiBbMSwyXTpcbiAgICAgICAgaWYgcGxheWVyID09IDE6XG4gICAgICAgICAgICBzZWxmLmN1cnJlbnRfc2NvcmVbMF0gKz0gMVxuICAgICAgICBlbGlmIHBsYXllciA9PSAyOlxuICAgICAgICAgICAgc2VsZi5jdXJyZW50X3Njb3JlWzFdICs9IDFcbiAgICAgICAgcmV0dXJuXG4iKSksbWR4KCJkaXYiLHtpZDoiaW5oZXJpdGFuY2U1In0pLG1keCgiaDMiLHsiaWQiOiItLS0tLW92ZXJyaWRpbmctaW5oZXJpdGFuY2UifSwiLS0tLSBPdmVycmlkaW5nIEluaGVyaXRhbmNlIiksbWR4KCJwcmUiLG51bGwsbWR4KCJjb2RlIixPYmplY3QuYXNzaWduKHtwYXJlbnROYW1lOiJwcmUifSx7fSksImNsYXNzIENoYXJhY3RlcihDb21iYXQpOlxuICAgIGF0dGFja19saW1pdCA9IDEwXG5cbiAgICAjIHByZXRlbmQgdGhhdCB3ZSdyZSBvdmVycmlkaW5nIHRoZSBDb21iYXQgYXR0YWNrIG1ldGhvZClcbiAgICBkZWYgYXR0YWNrKHNlbGYpOlxuICAgICAgICByb2xsID0gcmFuZG9tLnJhbmRpbnQoMSwgc2VsZi5hdHRhY2tfbGltaXQpXG4gICAgICAgIGlmIHNlbGYud2VhcG9uID09ICdzd29yZCc6XG4gICAgICAgICAgICByb2xsICs9IDFcbiAgICAgICAgZWxpZiBzZWxmLndlYXBvbiA9PSAnYXhlJzpcbiAgICAgICAgICAgIHJvbGwgKz0yXG4gICAgICAgIHJldHVybiByb2xsID4gNFxuIikpLG1keCgicCIsbnVsbCwiQ29kZSBDaGFsbGVuZ2UiKSxtZHgoInAiLG51bGwsIkFuaW1hbC5ub2lzZSgpIHJldHVybnMgc2VsZi5zb3VuZC5sb3dlcigpLiBNYWtlIFNoZWVwLm5vaXNlKCkgcmV0dXJuIHRoZSB1cHBlcmNhc2VkIHZlcnNpb24gb2YgdGhlIGluc3RhbmNlJ3Mgc291bmQuIiksbWR4KCJwcmUiLG51bGwsbWR4KCJjb2RlIixPYmplY3QuYXNzaWduKHtwYXJlbnROYW1lOiJwcmUifSx7fSksImZyb20gYW5pbWFsIGltcG9ydCBBbmltYWxcblxuY2xhc3MgU2hlZXAoQW5pbWFsKTpcbiAgICBzb3VuZCA9IFwiQmxlc3NcIlxuXG4gICAgZGVmIG5vaXNlKHNlbGYpOlxuICAgICAgICByZXR1cm4gc2VsZi5zb3VuZC51cHBlcigpXG4iKSkpO31pZih0eXBlb2YgTURYQ29udGVudCE9PSd1bmRlZmluZWQnJiZNRFhDb250ZW50JiZNRFhDb250ZW50PT09T2JqZWN0KE1EWENvbnRlbnQpJiZPYmplY3QuaXNFeHRlbnNpYmxlKE1EWENvbnRlbnQpKXtPYmplY3QuZGVmaW5lUHJvcGVydHkoTURYQ29udGVudCwnX19maWxlbWV0YScse2VudW1lcmFibGU6dHJ1ZSxjb25maWd1cmFibGU6dHJ1ZSx2YWx1ZTp7bmFtZToiTURYQ29udGVudCIsZmlsZW5hbWU6Im1hbnVhbC9QeXRob24vUHl0aG9uLU9iamVjdC1PcmllbnRhdGVkLm1kIn19KTt9TURYQ29udGVudC5pc01EWENvbXBvbmVudD10cnVlOw=="},{"version":3,"sources":["/Users/dennis.okeeffe/Project-Imposter/developer-notes/manual/Python/Python-Object-Orientated.md"],"names":["React","mdx","makeShortcode","name","MDXDefaultShortcode","props","console","warn","layoutProps","MDXLayout","MDXContent","components","isMDXComponent"],"mappings":"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","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <div id=\"section\"></div>\n    <hr></hr>\n    <h2 {...{\n      \"id\": \"objects\"\n    }}>{`Objects`}</h2>\n    <div id=\"objects1\"></div>\n    <h3 {...{\n      \"id\": \"-----creating-instances\"\n    }}>{`---- Creating Instances`}</h3>\n    <pre><code parentName=\"pre\" {...{}}>{`>>> class Monster:\n...     hit_points=1\n...     color=\"blue\"\n...     weapon=\"sword\"\n...\n>>> monster = Monster()\n>>> monster.hit_points\n1\n>>> monster.weapon\n'sword'\n>>> monster.color\n'blue'\n\n# jubjub instance\n>>> jubjub = Monster()\n>>> type(jubjub)\n<type 'instance'>\n>>> jubjub.hit_points\n1\n>>> jubjub.hit_points = 5\n>>> jubjub.hit_points\n5\n`}</code></pre>\n    <div id=\"objects2\"></div>\n    <h3 {...{\n      \"id\": \"-----class-methods\"\n    }}>{`---- Class Methods`}</h3>\n    <pre><code parentName=\"pre\" {...{}}>{`>>> class Methods:\n...     a = 2\n...     sound=\"roar\"\n...     def battlecry(self):\n...             return self.sound.upper()\n...\n>>> general = Methods()\n>>> general.battlecry()\n'ROAR'\n`}</code></pre>\n    <p>{`Code Challenge`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`class Store:\n    open = 9\n    close = 18\n\n    def hours(self):\n        return \"We're open from {} to {}\".format(self.open, self.close)\n`}</code></pre>\n    <div id=\"objects3\"></div>\n    <h3 {...{\n      \"id\": \"-----_--init--_\"\n    }}>{`---- `}{`_`}{` `}<em parentName=\"h3\">{` init `}</em>{` `}{`_`}</h3>\n    <p>{`Dealing with the dunder init!`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`class Monster:\n    def __init__(self, **kwargs):\n        self.hit_points = kwargs.get('hit_points', 5)\n        self.weapon = kwargs.get('weapon', 'sword')\n        self.color = kwargs.get('color', 'yellow')\n        self.sound = kwargs.get('sound', 'yell')\n\nmonster = Monster(hit_points=22, color=\"green\")\n`}</code></pre>\n    <div id=\"inheritance\"></div>\n    <hr></hr>\n    <h2 {...{\n      \"id\": \"python-inheritance\"\n    }}>{`Python Inheritance`}</h2>\n    <p>{`Building on from before, we're just making some defaults...`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`class Monster:\n    min_hp = 1\n    max_hp = 1\n    min_exp = 1\n    max_exp = 1\n    weapon = 'sword'\n    sound = 'roar'\n\n    def __init__(self, **kwargs):\n        self.hp = random.randint(self.min_hp, self.max_hp)\n        self.exp = random.randint(self.min_exp, self.max_exp)\n        self.color = random.choice(COLORS)\n\n        for key, value in kwargs.items():\n            setattr(self, key, value)\n\n    def battlecry(self):\n        return self.sound.upper()\n\nnew_mon = Monster()\nnew_mon.hp\n# 1\nnew_mon.color\n# 'blue'\n\nfresh = Monster(color='blue', sound='whistling', hp='500', adjective='manxsome')\nfresh.color\n# 'blue'\nfresh.adjective\n# manxsome\n`}</code></pre>\n    <div id=\"inheritance2\"></div>\n    <h3 {...{\n      \"id\": \"-----python-subclassing\"\n    }}>{`---- Python Subclassing`}</h3>\n    <pre><code parentName=\"pre\" {...{}}>{`# building on from monster\n\nclass Goblin(Monster):\n    max_hp = 3\n    max_exp = 2\n    sound = 'squek'\n\ngolbin = Goblin()\ngoblin.hp\n# 2 - now isn't just 1 from the min/max set above!\ngoblin.color\n# 'blue'\n\nclass Troll(Monster):\n    min_hp = 3\n    max_hp = 5\n    min_exp = 2\n    max_exp = 6\n    sound = 'growl'\n`}</code></pre>\n    <p>{`Challenge`}</p>\n    <p>{`Create a new class named Dragon that extends the Monster class. Don't forget to import Monster from monster. Give your Dragon an integer size attribute.`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`from monster import Monster\n\nclass Dragon(Monster):\n    size = 12\n`}</code></pre>\n    <div id=\"inheritance3\"></div>\n    <h3 {...{\n      \"id\": \"-----_--str--_\"\n    }}>{`---- `}{`_`}{` `}<em parentName=\"h3\">{` str `}</em>{` `}{`_`}</h3>\n    <p>{`This helps us when we print(object)`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`class Monster:\n    ...\n    def __str__(self):\n        return '{} {}, HP: {} ...'.format(self.color.title(), self.__class__.__name__, self.hp, self.exp)\n    ...\n\ndraco = Monster()\nprint(draco)\n# returns the details from the magic method\n`}</code></pre>\n    <p>{`Challenge`}</p>\n    <p>{`Import Game from game. Make a new class named GameScore that extends Game. Use pass if needed.`}</p>\n    <p>{`Add a `}<strong parentName=\"p\">{`str`}</strong>{` method to GameScore that returns the score in the string \"Player 1: 5; Player 2: 10\", using the correct values from self.score. self.score is a tuple with Player 1's score and Player 2's score like (5, 10).\nYou do not need to define self.score. It comes from the Game class.`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`from game import Game\n\nclass GameScore(Game):\n    pass\n\n    def __str__(self):\n        return \"Player 1: {}; Player 2: {}\".format(*self.score)\n`}</code></pre>\n    <div id=\"inheritance4\"></div>\n    <h3 {...{\n      \"id\": \"-----instance-methods\"\n    }}>{`---- Instance Methods`}</h3>\n    <pre><code parentName=\"pre\" {...{}}>{`class Character:\n    exp = 0\n    hp = 10\n\n    def __init__(self, **kwargs):\n        self.name = input(\"Name: \")\n        self.weapon = self.get_weapon()\n        for k, v in kwargs.items():\n            setattr(self, k, v)\n\n    def get_weapon(self):\n        weapon_choice = input(\"Weapon: [S]word, [A]xe: \").lower()\n\n        if weapon_choice in 'sa':\n            if weapon_choice == 's':\n                return 'sword'\n            else\n                return 'axe'\n`}</code></pre>\n    <p>{`Challenge`}</p>\n    <p>{`Add a score method to Game that takes a player argument. The player argument will be either 1 or 2. Increase that player's value in self.current_score by 1. You'll need to adjust the index (i.e. player = 1 means self.current_score`}{`[0]`}{` needs to increase).`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`class Game:\n  def __init__(self):\n    self.current_score = [0, 0]\n\n  def score(self, player):\n    if player in [1,2]:\n        if player == 1:\n            self.current_score[0] += 1\n        elif player == 2:\n            self.current_score[1] += 1\n        return\n`}</code></pre>\n    <div id=\"inheritance5\"></div>\n    <h3 {...{\n      \"id\": \"-----overriding-inheritance\"\n    }}>{`---- Overriding Inheritance`}</h3>\n    <pre><code parentName=\"pre\" {...{}}>{`class Character(Combat):\n    attack_limit = 10\n\n    # pretend that we're overriding the Combat attack method)\n    def attack(self):\n        roll = random.randint(1, self.attack_limit)\n        if self.weapon == 'sword':\n            roll += 1\n        elif self.weapon == 'axe':\n            roll +=2\n        return roll > 4\n`}</code></pre>\n    <p>{`Code Challenge`}</p>\n    <p>{`Animal.noise() returns self.sound.lower(). Make Sheep.noise() return the uppercased version of the instance's sound.`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`from animal import Animal\n\nclass Sheep(Animal):\n    sound = \"Bless\"\n\n    def noise(self):\n        return self.sound.upper()\n`}</code></pre>\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  "]}]}