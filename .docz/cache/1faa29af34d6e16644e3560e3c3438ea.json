{"remainingRequest":"/Users/okeeffe_d/Project-Imposter/developer-notes/node_modules/docz-core/node_modules/babel-loader/lib/index.js??ref--6-1!/Users/okeeffe_d/Project-Imposter/developer-notes/node_modules/@mdx-js/loader/index.js??ref--6-2!/Users/okeeffe_d/Project-Imposter/developer-notes/node_modules/source-map-loader/index.js!/Users/okeeffe_d/Project-Imposter/developer-notes/manual/Design-Patterns/Mediator.md","dependencies":[{"path":"/Users/okeeffe_d/Project-Imposter/developer-notes/manual/Design-Patterns/Mediator.md","mtime":1560999824820},{"path":"/Users/okeeffe_d/Project-Imposter/developer-notes/node_modules/cache-loader/dist/cjs.js","mtime":1561535530324},{"path":"/Users/okeeffe_d/Project-Imposter/developer-notes/node_modules/docz-core/node_modules/babel-loader/lib/index.js","mtime":1560300163820},{"path":"/Users/okeeffe_d/Project-Imposter/developer-notes/node_modules/@mdx-js/loader/index.js","mtime":1561535530532},{"path":"/Users/okeeffe_d/Project-Imposter/developer-notes/node_modules/source-map-loader/index.js","mtime":1548285283521}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9vYmplY3RXaXRob3V0UHJvcGVydGllcyBmcm9tIi9Vc2Vycy9va2VlZmZlX2QvUHJvamVjdC1JbXBvc3Rlci9kZXZlbG9wZXItbm90ZXMvbm9kZV9tb2R1bGVzL2JhYmVsLXByZXNldC1yZWFjdC1hcHAvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzIjsvKiBAanN4IG1keCAqL2ltcG9ydCBSZWFjdCBmcm9tJ3JlYWN0JztpbXBvcnR7bWR4fWZyb20nQG1keC1qcy9yZWFjdCc7LyogQGpzeCBtZHggKi92YXIgbWFrZVNob3J0Y29kZT1mdW5jdGlvbiBtYWtlU2hvcnRjb2RlKG5hbWUpe3JldHVybiBmdW5jdGlvbiBNRFhEZWZhdWx0U2hvcnRjb2RlKHByb3BzKXtjb25zb2xlLndhcm4oIkNvbXBvbmVudCAiK25hbWUrIiB3YXMgbm90IGltcG9ydGVkLCBleHBvcnRlZCwgb3IgcHJvdmlkZWQgYnkgTURYUHJvdmlkZXIgYXMgZ2xvYmFsIHNjb3BlIik7cmV0dXJuIG1keCgiZGl2Iixwcm9wcyk7fTt9O3ZhciBsYXlvdXRQcm9wcz17fTt2YXIgTURYTGF5b3V0PSJ3cmFwcGVyIjtleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBNRFhDb250ZW50KF9yZWYpe3ZhciBjb21wb25lbnRzPV9yZWYuY29tcG9uZW50cyxwcm9wcz1fb2JqZWN0V2l0aG91dFByb3BlcnRpZXMoX3JlZixbImNvbXBvbmVudHMiXSk7cmV0dXJuIG1keChNRFhMYXlvdXQsT2JqZWN0LmFzc2lnbih7fSxsYXlvdXRQcm9wcyxwcm9wcyx7Y29tcG9uZW50czpjb21wb25lbnRzLG1keFR5cGU6Ik1EWExheW91dCJ9KSxtZHgoImgxIix7ImlkIjoibWVkaWF0b3IifSwiTWVkaWF0b3IiKSxtZHgoInAiLG51bGwsIk1lZGlhdG9yIGlzIGEgYmVoYXZpb3VyYWwgZGVzaWduIHBhdHRlcm4gd2hpY2ggaGVscHMgd2hlbiB0aGVyZSBhcmUgbWFueSBvYmplY3RzIGNvbW11bmljYXRpbmcgd2l0aCBlYWNoIG90aGVyLiIpLG1keCgicCIsbnVsbCwiVGhlIE1lZGlhdG9yIGl0c2VsZiBpcyBhbiBvYmplY3QgdGhhdCBlbmNhcHN1bGF0ZXMgaG93IG9uZSBvciBtb3JlIG9iamVjdHMgaW50ZXJhY3Qgd2l0aCBlYWNoIG90aGVyLiBJdCBjb250cm9scyBob3cgdGhlc2Ugb2JqZWN0IGNvbW11bmljYXRpb24gYW5kIHJlc3RpY3RzIGRlcGVuZGVuY2llcyByZXF1aXJlZCB0byBtYW5hZ2UuIiksbWR4KCJoMiIseyJpZCI6ImNvbXBvbmVudHMifSwiQ29tcG9uZW50cyIpLG1keCgidWwiLG51bGwsbWR4KCJsaSIse3BhcmVudE5hbWU6InVsIn0sIk1lZGlhdG9yOiBEZWZpbmVzIGludGVyZmFjZSBmb3IgY29tbXVuaWNhdGlvbiBiZXR3ZWVuICIsbWR4KCJpbmxpbmVDb2RlIix7cGFyZW50TmFtZToibGkifSwiQ29sbGVhZ3VlIiksIiBvYmplY3RzLiIpLG1keCgibGkiLHtwYXJlbnROYW1lOiJ1bCJ9LCJDb25jcmV0ZU1lZGlhdG9yOiBJbXBsZW1lbnRzICIsbWR4KCJpbmxpbmVDb2RlIix7cGFyZW50TmFtZToibGkifSwiTWVkaWF0b3IiKSwiLCBoYXMgYXdhcmVuZXNzIG9mICIsbWR4KCJpbmxpbmVDb2RlIix7cGFyZW50TmFtZToibGkifSwiY29sbGVhZ3VlcyIpLCIgYW5kIGZhY2lsaXRhdGVzIGNvbW11bmljYXRpb24gYmV0d2Vlbi4iKSxtZHgoImxpIix7cGFyZW50TmFtZToidWwifSwiQ29sbGVhZ3VlOiBEZWZpbmVzIGludGVyZmFjZSBmb3IgY29tbXVuaWNhdGlvbiB3aXRoIG90aGVyICIsbWR4KCJpbmxpbmVDb2RlIix7cGFyZW50TmFtZToibGkifSwiQ29sbGVhZ3VlcyIpLCIgdGhyb3VnaCB0aGUgIixtZHgoImlubGluZUNvZGUiLHtwYXJlbnROYW1lOiJsaSJ9LCJNZWRpYXRvciIpLCIuIiksbWR4KCJsaSIse3BhcmVudE5hbWU6InVsIn0sIkNvbmNyZXRlQ29sbGVhZ3VlOiBJbXBsZW1lbnRzIHRoZSAiLG1keCgiaW5saW5lQ29kZSIse3BhcmVudE5hbWU6ImxpIn0sIkNvbGxlYWd1ZSIpLCIgaW50ZXJmYWNlIGFuIGNvbW11bmljYXRlcyB0byBvdGhlciBjb2xsZWFndWVzIHRocm91Z2ggaXRzICIsbWR4KCJpbmxpbmVDb2RlIix7cGFyZW50TmFtZToibGkifSwiTWVkaWF0b3IiKSwiLiIpKSxtZHgoImgyIix7ImlkIjoiZXhhbXBsZSJ9LCJFeGFtcGxlIiksbWR4KCJwIixudWxsLCJJbiB0aGlzIGV4YW1wbGUsIHdlIHdpbGwgaGF2ZSBhICIsbWR4KCJpbmxpbmVDb2RlIix7cGFyZW50TmFtZToicCJ9LCJDb25jcmV0ZU1lZGlhdG9yIiksIiB0aGF0IHdpbGwgZW5zdXJlIGNlcnRhaW4gIixtZHgoImlubGluZUNvZGUiLHtwYXJlbnROYW1lOiJwIn0sIlBhcnRpY2lwYW50cyIpLCIgcmVjZWl2ZSBhIG1lc3NhZ2UgYmFzZWQgb24gdGhlICIsbWR4KCJpbmxpbmVDb2RlIix7cGFyZW50TmFtZToicCJ9LCJQYXJ0aWNpcGFudCIpLCIgc2VuZGluZyB0aGUgIixtZHgoImlubGluZUNvZGUiLHtwYXJlbnROYW1lOiJwIn0sIkJyb2FkY2FzdCIpLCIuIiksbWR4KCJwIixudWxsLCJXZSB3aWxsIHVzZSB0aGUgbWVkaWF0b3IgdG8gZW5zdXJlIG1lc3NhZ2VzIHNlbnQgZnJvbSB0aGUgIixtZHgoImlubGluZUNvZGUiLHtwYXJlbnROYW1lOiJwIn0sIkZpcnN0UGFydGljaXBhbnQiKSwiIGlzIGJyb2FkY2FzdGVkIHRvIGJvdGggIixtZHgoImlubGluZUNvZGUiLHtwYXJlbnROYW1lOiJwIn0sIkZpcnN0UGFydGljaXBhbnQiKSwiIGFuZCAiLG1keCgiaW5saW5lQ29kZSIse3BhcmVudE5hbWU6InAifSwiU2Vjb25kUGFydGljaXBhbnQiKSwiIHdoaWxlIG1lc3NhZ2VzIGZyb20gdGhlICIsbWR4KCJpbmxpbmVDb2RlIix7cGFyZW50TmFtZToicCJ9LCJTZWNvbmRQYXJ0aWNpcGFudCIpLCIgYXJlIG9ubHkgcmVhY2hlZCBieSB0aGUgIixtZHgoImlubGluZUNvZGUiLHtwYXJlbnROYW1lOiJwIn0sIkZpcnN0UGFydGlpY3BhbnQiKSwiIGFuZCBub3QgaXRzZWxmLiIpLG1keCgicCIsbnVsbCwiVGhlIGFic3RyYWN0ICIsbWR4KCJpbmxpbmVDb2RlIix7cGFyZW50TmFtZToicCJ9LCJQYXJ0aWNpcGFudCIpLCIgY2xhc3MgaW4gdGhpcyBleGFtcGxlIGlzIHRoZSAiLG1keCgiaW5saW5lQ29kZSIse3BhcmVudE5hbWU6InAifSwiQ29sbGVhZ3VlIiksIiBhbmQgdGhlIHN1YmNsYXNzZXMgYXJlIHRoZSAiLG1keCgiaW5saW5lQ29kZSIse3BhcmVudE5hbWU6InAifSwiQ29uY3JldGVDb2xsZWFndWUiKSwiIGNsYXNzZXMuIiksbWR4KCJwcmUiLG51bGwsbWR4KCJjb2RlIixPYmplY3QuYXNzaWduKHtwYXJlbnROYW1lOiJwcmUifSx7ImNsYXNzTmFtZSI6Imxhbmd1YWdlLXR5cGVzY3JpcHQifSksImludGVyZmFjZSBNZWRpYXRvciB7XG4gIGJyb2FkY2FzdChtc2c6IFN0cmluZywgc2VuZGVyOiBQYXJ0aWNpcGFudCk6IHZvaWQ7XG59XG5cbmNsYXNzIENvbmNyZXRlTWVkaWF0b3IgaW1wbGVtZW50cyBNZWRpYXRvciB7XG4gIHB1YmxpYyBmaXJzdFBhcnRpY2lwYW50OiBQYXJ0aWNpcGFudDtcbiAgcHVibGljIHNlY29uZFBhcnRpY2lwYW50OiBQYXJ0aWNpcGFudDtcblxuICBicm9hZGNhc3QobXNnOiBTdHJpbmcsIHNlbmRlcjogUGFydGljaXBhbnQpOiB2b2lkIHtcbiAgICBpZiAoc2VuZGVyID09PSB0aGlzLmZpcnN0UGFydGljaXBhbnQpIHtcbiAgICAgIHRoaXMuZmlyc3RQYXJ0aWNpcGFudC5yZWNlaXZlTXNnKG1zZyk7XG4gICAgICB0aGlzLnNlY29uZFBhcnRpY2lwYW50LnJlY2VpdmVNc2cobXNnKTtcbiAgICB9XG5cbiAgICBpZiAoc2VuZGVyID09PSB0aGlzLnNlY29uZFBhcnRpY2lwYW50KSB7XG4gICAgICB0aGlzLmZpcnN0UGFydGljaXBhbnQucmVjZWl2ZU1zZyhtc2cpO1xuICAgIH1cbiAgfVxufVxuXG5hYnN0cmFjdCBjbGFzcyBQYXJ0aWNpcGFudCB7XG4gIHB1YmxpYyBtZWRpYXRvcjogTWVkaWF0b3I7XG5cbiAgY29uc3RydWN0b3IobWVkaWF0b3I6IE1lZGlhdG9yKSB7XG4gICAgdGhpcy5tZWRpYXRvciA9IG1lZGlhdG9yO1xuICB9XG5cbiAgYnJvYWRjYXN0KG1zZzogU3RyaW5nKTogdm9pZCB7XG4gICAgdGhpcy5tZWRpYXRvci5icm9hZGNhc3QobXNnLCB0aGlzKTtcbiAgfVxuXG4gIHJlY2VpdmVNc2cobXNnOiBTdHJpbmcpOiB2b2lkIHtcbiAgICBjb25zb2xlLmxvZygncmVjaWV2ZU1zZzonLCBtc2cpO1xuICB9XG59XG5cbmNsYXNzIEZpcnN0UGFydGljaXBhbnQgZXh0ZW5kcyBQYXJ0aWNpcGFudCB7XG4gIGNvbnN0cnVjdG9yKG1lZGlhdG9yOiBNZWRpYXRvcikge1xuICAgIHN1cGVyKG1lZGlhdG9yKTtcbiAgfVxuXG4gIGJyb2FkY2FzdChtc2c6IFN0cmluZykge1xuICAgIGNvbnNvbGUubG9nKCdGaXJzdCBwYXJ0aWNpcGFudCBjdXN0b21pemVkIGxvZ2ljJyk7XG4gICAgc3VwZXIuYnJvYWRjYXN0KG1zZyk7XG4gIH1cbn1cblxuY2xhc3MgU2Vjb25kUGFydGljaXBhbnQgZXh0ZW5kcyBQYXJ0aWNpcGFudCB7XG4gIGNvbnN0cnVjdG9yKG1lZGlhdG9yOiBNZWRpYXRvcikge1xuICAgIHN1cGVyKG1lZGlhdG9yKTtcbiAgfVxuXG4gIGJyb2FkY2FzdChtc2c6IFN0cmluZykge1xuICAgIGNvbnNvbGUubG9nKCdTZWNvbmQgcGFydGljaXBhbnQgY3VzdG9taXplZCBsb2dpYycpO1xuICAgIHN1cGVyLmJyb2FkY2FzdChtc2cpO1xuICB9XG59XG5cbihmdW5jdGlvbiBtYWluKCkge1xuICBjb25zdCBtZWRpYXRvciA9IG5ldyBDb25jcmV0ZU1lZGlhdG9yKCk7XG4gIGNvbnN0IGZpcnN0UGFydGljaXBhbnQgPSBuZXcgRmlyc3RQYXJ0aWNpcGFudChtZWRpYXRvcik7XG4gIGNvbnN0IHNlY29uZFBhcnRpY2lwYW50ID0gbmV3IFNlY29uZFBhcnRpY2lwYW50KG1lZGlhdG9yKTtcblxuICBtZWRpYXRvci5maXJzdFBhcnRpY2lwYW50ID0gZmlyc3RQYXJ0aWNpcGFudDtcbiAgbWVkaWF0b3Iuc2Vjb25kUGFydGljaXBhbnQgPSBzZWNvbmRQYXJ0aWNpcGFudDtcblxuICBmaXJzdFBhcnRpY2lwYW50LmJyb2FkY2FzdChcbiAgICAnRmlyc3RQYXJ0aWNpcGFudCBzZW5kcyBtZXNzYWdlIHRvIEZpcnN0UGFydGljaXBhbnQsIFNlY29uZFBhcnRpY2lwYW50J1xuICApO1xuICBzZWNvbmRQYXJ0aWNpcGFudC5icm9hZGNhc3QoXG4gICAgJ1NlY29uZFBhcnRpY2lwYW50IHNlbmRzIG1lc3NhZ2UgdG8gRmlyc3RQYXJ0aWNpcGFudCdcbiAgKTtcbn0pKCk7XG4iKSksbWR4KCJoMiIseyJpZCI6InJlc291cmNlcyJ9LCJSZXNvdXJjZXMiKSxtZHgoInVsIixudWxsLG1keCgibGkiLHtwYXJlbnROYW1lOiJ1bCJ9LG1keCgiYSIsT2JqZWN0LmFzc2lnbih7cGFyZW50TmFtZToibGkifSx7ImhyZWYiOiJodHRwczovL3d3dy5pbmZvd29ybGQuY29tL2FydGljbGUvMzIwNDUyOC9ob3ctdG8tdXNlLXRoZS1tZWRpYXRvci1kZXNpZ24tcGF0dGVybi1pbi1jLmh0bWwifSksIk1lZGlhdG9yIGluIEMjIikpKSk7fWlmKHR5cGVvZiBNRFhDb250ZW50IT09J3VuZGVmaW5lZCcmJk1EWENvbnRlbnQmJk1EWENvbnRlbnQ9PT1PYmplY3QoTURYQ29udGVudCkmJk9iamVjdC5pc0V4dGVuc2libGUoTURYQ29udGVudCkpe09iamVjdC5kZWZpbmVQcm9wZXJ0eShNRFhDb250ZW50LCdfX2ZpbGVtZXRhJyx7ZW51bWVyYWJsZTp0cnVlLGNvbmZpZ3VyYWJsZTp0cnVlLHZhbHVlOntuYW1lOiJNRFhDb250ZW50IixmaWxlbmFtZToibWFudWFsL0Rlc2lnbi1QYXR0ZXJucy9NZWRpYXRvci5tZCJ9fSk7fU1EWENvbnRlbnQuaXNNRFhDb21wb25lbnQ9dHJ1ZTs="},{"version":3,"sources":["/Users/okeeffe_d/Project-Imposter/developer-notes/manual/Design-Patterns/Mediator.md"],"names":["React","mdx","makeShortcode","name","MDXDefaultShortcode","props","console","warn","layoutProps","MDXLayout","MDXContent","components","isMDXComponent"],"mappings":"4LAAA,cACE,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,GAAT,KAAoB,eAApB,CACA,cAGF,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAAAC,IAAI,QAAI,SAASC,CAAAA,mBAAT,CAA6BC,KAA7B,CAAoC,CAChEC,OAAO,CAACC,IAAR,CAAa,aAAeJ,IAAf,CAAsB,yEAAnC,EACA,MAAO,WAASE,KAAT,CAAP,CACD,CAHyB,EAA1B,CAKA,GAAMG,CAAAA,WAAW,CAAG,EAApB,CAGA,GAAMC,CAAAA,SAAS,CAAG,SAAlB,CACA,cAAe,SAASC,CAAAA,UAAT,MAGZ,IAFDC,CAAAA,UAEC,MAFDA,UAEC,CADEN,KACF,+CACD,MAAO,KAAC,SAAD,kBAAeG,WAAf,CAAgCH,KAAhC,EAAuC,UAAU,CAAEM,UAAnD,CAA+D,OAAO,CAAC,WAAvE,GACL,SAAQ,CACN,KAAM,UADA,CAAR,YADK,CAIL,+HAJK,CAKL,6MALK,CAML,SAAQ,CACN,KAAM,YADA,CAAR,cANK,CASL,cACE,UAAI,UAAU,CAAC,IAAf,2DAA8E,kBAAY,UAAU,CAAC,IAAvB,cAA9E,aADF,CAEE,UAAI,UAAU,CAAC,IAAf,kCAAqD,kBAAY,UAAU,CAAC,IAAvB,aAArD,uBAAiI,kBAAY,UAAU,CAAC,IAAvB,eAAjI,2CAFF,CAGE,UAAI,UAAU,CAAC,IAAf,+DAAkF,kBAAY,UAAU,CAAC,IAAvB,eAAlF,iBAA0J,kBAAY,UAAU,CAAC,IAAvB,aAA1J,KAHF,CAIE,UAAI,UAAU,CAAC,IAAf,uCAA0D,kBAAY,UAAU,CAAC,IAAvB,cAA1D,+DAA+K,kBAAY,UAAU,CAAC,IAAvB,aAA/K,KAJF,CATK,CAeL,SAAQ,CACN,KAAM,SADA,CAAR,WAfK,CAkBL,gDAAuC,kBAAY,UAAU,CAAC,GAAvB,qBAAvC,8BAAiI,kBAAY,UAAU,CAAC,GAAvB,iBAAjI,oCAA6N,kBAAY,UAAU,CAAC,GAAvB,gBAA7N,iBAAqS,kBAAY,UAAU,CAAC,GAAvB,cAArS,KAlBK,CAmBL,0EAAiE,kBAAY,UAAU,CAAC,GAAvB,qBAAjE,4BAAyJ,kBAAY,UAAU,CAAC,GAAvB,qBAAzJ,SAA8N,kBAAY,UAAU,CAAC,GAAvB,sBAA9N,6BAAwT,kBAAY,UAAU,CAAC,GAAvB,sBAAxT,6BAAkZ,kBAAY,UAAU,CAAC,GAAvB,qBAAlZ,oBAnBK,CAoBL,6BAAoB,kBAAY,UAAU,CAAC,GAAvB,gBAApB,kCAA6G,kBAAY,UAAU,CAAC,GAAvB,cAA7G,gCAAkM,kBAAY,UAAU,CAAC,GAAvB,sBAAlM,aApBK,CAqBL,eAAK,0BAAM,UAAU,CAAC,KAAjB,EAA2B,CAC5B,YAAa,qBADe,CAA3B,8wDAAL,CArBK,CAiGL,SAAQ,CACN,KAAM,WADA,CAAR,aAjGK,CAoGL,cACE,UAAI,UAAU,CAAC,IAAf,EAAoB,uBAAG,UAAU,CAAC,IAAd,EAAuB,CACvC,OAAQ,4FAD+B,CAAvB,mBAApB,CADF,CApGK,CAAP,CA0GD,C,8QAEDD,UAAU,CAACE,cAAX,CAA4B,IAA5B","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"mediator\"\n    }}>{`Mediator`}</h1>\n    <p>{`Mediator is a behavioural design pattern which helps when there are many objects communicating with each other.`}</p>\n    <p>{`The Mediator itself is an object that encapsulates how one or more objects interact with each other. It controls how these object communication and resticts dependencies required to manage.`}</p>\n    <h2 {...{\n      \"id\": \"components\"\n    }}>{`Components`}</h2>\n    <ul>\n      <li parentName=\"ul\">{`Mediator: Defines interface for communication between `}<inlineCode parentName=\"li\">{`Colleague`}</inlineCode>{` objects.`}</li>\n      <li parentName=\"ul\">{`ConcreteMediator: Implements `}<inlineCode parentName=\"li\">{`Mediator`}</inlineCode>{`, has awareness of `}<inlineCode parentName=\"li\">{`colleagues`}</inlineCode>{` and facilitates communication between.`}</li>\n      <li parentName=\"ul\">{`Colleague: Defines interface for communication with other `}<inlineCode parentName=\"li\">{`Colleagues`}</inlineCode>{` through the `}<inlineCode parentName=\"li\">{`Mediator`}</inlineCode>{`.`}</li>\n      <li parentName=\"ul\">{`ConcreteColleague: Implements the `}<inlineCode parentName=\"li\">{`Colleague`}</inlineCode>{` interface an communicates to other colleagues through its `}<inlineCode parentName=\"li\">{`Mediator`}</inlineCode>{`.`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"example\"\n    }}>{`Example`}</h2>\n    <p>{`In this example, we will have a `}<inlineCode parentName=\"p\">{`ConcreteMediator`}</inlineCode>{` that will ensure certain `}<inlineCode parentName=\"p\">{`Participants`}</inlineCode>{` receive a message based on the `}<inlineCode parentName=\"p\">{`Participant`}</inlineCode>{` sending the `}<inlineCode parentName=\"p\">{`Broadcast`}</inlineCode>{`.`}</p>\n    <p>{`We will use the mediator to ensure messages sent from the `}<inlineCode parentName=\"p\">{`FirstParticipant`}</inlineCode>{` is broadcasted to both `}<inlineCode parentName=\"p\">{`FirstParticipant`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`SecondParticipant`}</inlineCode>{` while messages from the `}<inlineCode parentName=\"p\">{`SecondParticipant`}</inlineCode>{` are only reached by the `}<inlineCode parentName=\"p\">{`FirstPartiicpant`}</inlineCode>{` and not itself.`}</p>\n    <p>{`The abstract `}<inlineCode parentName=\"p\">{`Participant`}</inlineCode>{` class in this example is the `}<inlineCode parentName=\"p\">{`Colleague`}</inlineCode>{` and the subclasses are the `}<inlineCode parentName=\"p\">{`ConcreteColleague`}</inlineCode>{` classes.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-typescript\"\n      }}>{`interface Mediator {\n  broadcast(msg: String, sender: Participant): void;\n}\n\nclass ConcreteMediator implements Mediator {\n  public firstParticipant: Participant;\n  public secondParticipant: Participant;\n\n  broadcast(msg: String, sender: Participant): void {\n    if (sender === this.firstParticipant) {\n      this.firstParticipant.receiveMsg(msg);\n      this.secondParticipant.receiveMsg(msg);\n    }\n\n    if (sender === this.secondParticipant) {\n      this.firstParticipant.receiveMsg(msg);\n    }\n  }\n}\n\nabstract class Participant {\n  public mediator: Mediator;\n\n  constructor(mediator: Mediator) {\n    this.mediator = mediator;\n  }\n\n  broadcast(msg: String): void {\n    this.mediator.broadcast(msg, this);\n  }\n\n  receiveMsg(msg: String): void {\n    console.log('recieveMsg:', msg);\n  }\n}\n\nclass FirstParticipant extends Participant {\n  constructor(mediator: Mediator) {\n    super(mediator);\n  }\n\n  broadcast(msg: String) {\n    console.log('First participant customized logic');\n    super.broadcast(msg);\n  }\n}\n\nclass SecondParticipant extends Participant {\n  constructor(mediator: Mediator) {\n    super(mediator);\n  }\n\n  broadcast(msg: String) {\n    console.log('Second participant customized logic');\n    super.broadcast(msg);\n  }\n}\n\n(function main() {\n  const mediator = new ConcreteMediator();\n  const firstParticipant = new FirstParticipant(mediator);\n  const secondParticipant = new SecondParticipant(mediator);\n\n  mediator.firstParticipant = firstParticipant;\n  mediator.secondParticipant = secondParticipant;\n\n  firstParticipant.broadcast(\n    'FirstParticipant sends message to FirstParticipant, SecondParticipant'\n  );\n  secondParticipant.broadcast(\n    'SecondParticipant sends message to FirstParticipant'\n  );\n})();\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"resources\"\n    }}>{`Resources`}</h2>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://www.infoworld.com/article/3204528/how-to-use-the-mediator-design-pattern-in-c.html\"\n        }}>{`Mediator in C#`}</a></li>\n    </ul>\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  "]}]}