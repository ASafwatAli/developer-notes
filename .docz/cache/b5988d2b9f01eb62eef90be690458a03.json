{"remainingRequest":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/docz-core/node_modules/babel-loader/lib/index.js??ref--6-1!/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/@mdx-js/loader/index.js??ref--6-2!/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/source-map-loader/index.js!/Users/dennis.okeeffe/Project-Imposter/developer-notes/manual/Algorithms/String-Scramble.md","dependencies":[{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/manual/Algorithms/String-Scramble.md","mtime":1580975896159},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/cache-loader/dist/cjs.js","mtime":1564095360956},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/docz-core/node_modules/babel-loader/lib/index.js","mtime":1562568123838},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/@mdx-js/loader/index.js","mtime":1565139338792},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/source-map-loader/index.js","mtime":1564095361765}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9vYmplY3RXaXRob3V0UHJvcGVydGllcyBmcm9tIi9Vc2Vycy9kZW5uaXMub2tlZWZmZS9Qcm9qZWN0LUltcG9zdGVyL2RldmVsb3Blci1ub3Rlcy9ub2RlX21vZHVsZXMvYmFiZWwtcHJlc2V0LXJlYWN0LWFwcC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0V2l0aG91dFByb3BlcnRpZXMiOy8qIEBqc3ggbWR4ICovaW1wb3J0IFJlYWN0IGZyb20ncmVhY3QnO2ltcG9ydHttZHh9ZnJvbSdAbWR4LWpzL3JlYWN0JzsvKiBAanN4IG1keCAqL3ZhciBtYWtlU2hvcnRjb2RlPWZ1bmN0aW9uIG1ha2VTaG9ydGNvZGUobmFtZSl7cmV0dXJuIGZ1bmN0aW9uIE1EWERlZmF1bHRTaG9ydGNvZGUocHJvcHMpe2NvbnNvbGUud2FybigiQ29tcG9uZW50ICIrbmFtZSsiIHdhcyBub3QgaW1wb3J0ZWQsIGV4cG9ydGVkLCBvciBwcm92aWRlZCBieSBNRFhQcm92aWRlciBhcyBnbG9iYWwgc2NvcGUiKTtyZXR1cm4gbWR4KCJkaXYiLHByb3BzKTt9O307dmFyIGxheW91dFByb3BzPXt9O3ZhciBNRFhMYXlvdXQ9IndyYXBwZXIiO2V4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIE1EWENvbnRlbnQoX3JlZil7dmFyIGNvbXBvbmVudHM9X3JlZi5jb21wb25lbnRzLHByb3BzPV9vYmplY3RXaXRob3V0UHJvcGVydGllcyhfcmVmLFsiY29tcG9uZW50cyJdKTtyZXR1cm4gbWR4KE1EWExheW91dCxPYmplY3QuYXNzaWduKHt9LGxheW91dFByb3BzLHByb3BzLHtjb21wb25lbnRzOmNvbXBvbmVudHMsbWR4VHlwZToiTURYTGF5b3V0In0pLG1keCgiaDEiLHsiaWQiOiJzdHJpbmctc2NyYW1ibGUifSwiU3RyaW5nIFNjcmFtYmxlIiksbWR4KCJoMiIseyJpZCI6InJlc291cmNlcyJ9LCJSZXNvdXJjZXMiKSxtZHgoIm9sIixudWxsLG1keCgibGkiLHtwYXJlbnROYW1lOiJvbCJ9LG1keCgiYSIsT2JqZWN0LmFzc2lnbih7cGFyZW50TmFtZToibGkifSx7ImhyZWYiOiJodHRwczovL3d3dy5jb2RlcmJ5dGUuY29tL2VkaXRvci9TdHJpbmclMjBTY3JhbWJsZTpKYXZhU2NyaXB0In0pLCJDb2RlckJ5dGUiKSkpLG1keCgiaDIiLHsiaWQiOiJxdWVzdGlvbiJ9LCJRdWVzdGlvbiIpLG1keCgicCIsbnVsbCwiSGF2ZSB0aGUgZnVuY3Rpb24gU3RyaW5nU2NyYW1ibGUoc3RyMSxzdHIyKSB0YWtlIGJvdGggcGFyYW1ldGVycyBiZWluZyBwYXNzZWQgYW5kIHJldHVybiB0aGUgc3RyaW5nIHRydWUgaWYgYSBwb3J0aW9uIG9mIHN0cjEgY2hhcmFjdGVycyBjYW4gYmUgcmVhcnJhbmdlZCB0byBtYXRjaCBzdHIyLCBvdGhlcndpc2UgcmV0dXJuIHRoZSBzdHJpbmcgZmFsc2UuIEZvciBleGFtcGxlOiBpZiBzdHIxIGlzIFwicmtxb2Rsd1wiIGFuZCBzdHIyIGlzIFwid29ybGRcIiB0aGUgb3V0cHV0IHNob3VsZCByZXR1cm4gdHJ1ZS4gUHVuY3R1YXRpb24gYW5kIHN5bWJvbHMgd2lsbCBub3QgYmUgZW50ZXJlZCB3aXRoIHRoZSBwYXJhbWV0ZXJzLiIpLG1keCgiaDIiLHsiaWQiOiJleGFtcGxlcyJ9LCJFeGFtcGxlcyIpLG1keCgicHJlIixudWxsLG1keCgiY29kZSIsT2JqZWN0LmFzc2lnbih7cGFyZW50TmFtZToicHJlIn0seyJjbGFzc05hbWUiOiJsYW5ndWFnZS1zaGVsbCJ9KSwiSW5wdXQ6IFwiY2RvcmVcIiAmIHN0cjI9IFwiY29kZXJcIlxuT3V0cHV0OiB0cnVlXG4iKSksbWR4KCJwcmUiLG51bGwsbWR4KCJjb2RlIixPYmplY3QuYXNzaWduKHtwYXJlbnROYW1lOiJwcmUifSx7ImNsYXNzTmFtZSI6Imxhbmd1YWdlLXNoZWxsIn0pLCJJbnB1dDogXCJoM2xsa29cIiAmIHN0cjIgPSBcImhlbGxvXCJcbk91dHB1dDogZmFsc2VcbiIpKSxtZHgoImgyIix7ImlkIjoiYW5zd2VyIn0sIkFuc3dlciIpLG1keCgicHJlIixudWxsLG1keCgiY29kZSIsT2JqZWN0LmFzc2lnbih7cGFyZW50TmFtZToicHJlIn0seyJjbGFzc05hbWUiOiJsYW5ndWFnZS1qYXZhc2NyaXB0In0pLCJmdW5jdGlvbiBTdHJpbmdTY3JhbWJsZShzdHIxLCBzdHIyKSB7XG4gIC8vIGZvciBlYWNoIGVsZW1lbnQgb2Ygc3RyMiwgcmVtb3ZlIHRoZSBwdW5jdHVhdGlvbiBhbmQgc3ltYm9sc1xuICAvLyB0aGlzIGlzIG1vcmUgZm9yIHJvYnVzdG5lc3NcbiAgbGV0IGZpbHRlcmVkU3RyMSA9IHN0cjEucmVwbGFjZSgvW14wLTlhLXpBLVpdL2dpLCAnJyk7XG4gIGxldCBmaWx0ZXJlZFN0cjIgPSBzdHIyLnJlcGxhY2UoL1teMC05YS16QS1aXS9naSwgJycpO1xuXG4gIGZvciAobGV0IGkgPSAwOyBpIDwgZmlsdGVyZWRTdHIyLmxlbmd0aDsgaSsrKSB7XG4gICAgLy8gcmVwbGFjZSBlbGVtZW50IGlmIGl0IGV4aXN0cyBpbiBmaWx0ZXJlZFN0cjFcbiAgICBpZiAoZmlsdGVyZWRTdHIxLmluZGV4T2YoZmlsdGVyZWRTdHIyW2ldKSA9PT0gLTEpIHtcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG5cbiAgICBmaWx0ZXJlZFN0cjEgPSBmaWx0ZXJlZFN0cjEucmVwbGFjZShmaWx0ZXJlZFN0cjJbaV0sICcnKTtcbiAgfVxuXG4gIHJldHVybiB0cnVlO1xufVxuIikpKTt9aWYodHlwZW9mIE1EWENvbnRlbnQhPT0ndW5kZWZpbmVkJyYmTURYQ29udGVudCYmTURYQ29udGVudD09PU9iamVjdChNRFhDb250ZW50KSYmT2JqZWN0LmlzRXh0ZW5zaWJsZShNRFhDb250ZW50KSl7T2JqZWN0LmRlZmluZVByb3BlcnR5KE1EWENvbnRlbnQsJ19fZmlsZW1ldGEnLHtlbnVtZXJhYmxlOnRydWUsY29uZmlndXJhYmxlOnRydWUsdmFsdWU6e25hbWU6Ik1EWENvbnRlbnQiLGZpbGVuYW1lOiJtYW51YWwvQWxnb3JpdGhtcy9TdHJpbmctU2NyYW1ibGUubWQifX0pO31NRFhDb250ZW50LmlzTURYQ29tcG9uZW50PXRydWU7"},{"version":3,"sources":["/Users/dennis.okeeffe/Project-Imposter/developer-notes/manual/Algorithms/String-Scramble.md"],"names":["React","mdx","makeShortcode","name","MDXDefaultShortcode","props","console","warn","layoutProps","MDXLayout","MDXContent","components","isMDXComponent"],"mappings":"iMAAA,cACE,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,GAAT,KAAoB,eAApB,CACA,cAGF,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAAAC,IAAI,QAAI,SAASC,CAAAA,mBAAT,CAA6BC,KAA7B,CAAoC,CAChEC,OAAO,CAACC,IAAR,CAAa,aAAeJ,IAAf,CAAsB,yEAAnC,EACA,MAAO,WAASE,KAAT,CAAP,CACD,CAHyB,EAA1B,CAKA,GAAMG,CAAAA,WAAW,CAAG,EAApB,CAGA,GAAMC,CAAAA,SAAS,CAAG,SAAlB,CACA,cAAe,SAASC,CAAAA,UAAT,MAGZ,IAFDC,CAAAA,UAEC,MAFDA,UAEC,CADEN,KACF,+CACD,MAAO,KAAC,SAAD,kBAAeG,WAAf,CAAgCH,KAAhC,EAAuC,UAAU,CAAEM,UAAnD,CAA+D,OAAO,CAAC,WAAvE,GACL,SAAQ,CACN,KAAM,iBADA,CAAR,mBADK,CAIL,SAAQ,CACN,KAAM,WADA,CAAR,aAJK,CAOL,cACE,UAAI,UAAU,CAAC,IAAf,EAAoB,uBAAG,UAAU,CAAC,IAAd,EAAuB,CACvC,OAAQ,+DAD+B,CAAvB,cAApB,CADF,CAPK,CAYL,SAAQ,CACN,KAAM,UADA,CAAR,YAZK,CAeL,sXAfK,CAgBL,SAAQ,CACN,KAAM,UADA,CAAR,YAhBK,CAmBL,eAAK,0BAAM,UAAU,CAAC,KAAjB,EAA2B,CAC5B,YAAa,gBADe,CAA3B,uDAAL,CAnBK,CAwBL,eAAK,0BAAM,UAAU,CAAC,KAAjB,EAA2B,CAC5B,YAAa,gBADe,CAA3B,0DAAL,CAxBK,CA6BL,SAAQ,CACN,KAAM,QADA,CAAR,UA7BK,CAgCL,eAAK,0BAAM,UAAU,CAAC,KAAjB,EAA2B,CAC5B,YAAa,qBADe,CAA3B,+hBAAL,CAhCK,CAAP,CAqDD,C,gRAEDD,UAAU,CAACE,cAAX,CAA4B,IAA5B","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"string-scramble\"\n    }}>{`String Scramble`}</h1>\n    <h2 {...{\n      \"id\": \"resources\"\n    }}>{`Resources`}</h2>\n    <ol>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"https://www.coderbyte.com/editor/String%20Scramble:JavaScript\"\n        }}>{`CoderByte`}</a></li>\n    </ol>\n    <h2 {...{\n      \"id\": \"question\"\n    }}>{`Question`}</h2>\n    <p>{`Have the function StringScramble(str1,str2) take both parameters being passed and return the string true if a portion of str1 characters can be rearranged to match str2, otherwise return the string false. For example: if str1 is \"rkqodlw\" and str2 is \"world\" the output should return true. Punctuation and symbols will not be entered with the parameters.`}</p>\n    <h2 {...{\n      \"id\": \"examples\"\n    }}>{`Examples`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`Input: \"cdore\" & str2= \"coder\"\nOutput: true\n`}</code></pre>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`Input: \"h3llko\" & str2 = \"hello\"\nOutput: false\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"answer\"\n    }}>{`Answer`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`function StringScramble(str1, str2) {\n  // for each element of str2, remove the punctuation and symbols\n  // this is more for robustness\n  let filteredStr1 = str1.replace(/[^0-9a-zA-Z]/gi, '');\n  let filteredStr2 = str2.replace(/[^0-9a-zA-Z]/gi, '');\n\n  for (let i = 0; i < filteredStr2.length; i++) {\n    // replace element if it exists in filteredStr1\n    if (filteredStr1.indexOf(filteredStr2[i]) === -1) {\n      return false;\n    }\n\n    filteredStr1 = filteredStr1.replace(filteredStr2[i], '');\n  }\n\n  return true;\n}\n`}</code></pre>\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  "]}]}