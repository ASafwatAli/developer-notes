{"remainingRequest":"/Users/okeeffe_d/Business/Documentation/node_modules/babel-loader/lib/index.js?{\"presets\":[[\"/Users/okeeffe_d/Business/Documentation/node_modules/babel-preset-docz/dist/index.js\",{\"flow\":true,\"typescript\":false,\"parseProps\":true}]],\"plugins\":[[\"/Users/okeeffe_d/Business/Documentation/node_modules/docz-utils/lib/named-asset-import.js\",{\"loaderMap\":{\"svg\":{\"ReactComponent\":\"@svgr/webpack?-prettier,-svgo![path]\"}}}]],\"babelrc\":false,\"cacheCompression\":true,\"compact\":true}!/Users/okeeffe_d/Business/Documentation/manual/Sketchup/naming.md","dependencies":[{"path":"/Users/okeeffe_d/Business/Documentation/manual/Sketchup/naming.md","mtime":1548209344509},{"path":"/Users/okeeffe_d/Business/Documentation/node_modules/cache-loader/dist/cjs.js","mtime":1548134640245},{"path":"/Users/okeeffe_d/Business/Documentation/node_modules/babel-loader/lib/index.js","mtime":1548134640227}],"contextDependencies":[],"result":["function _typeof(obj){if(typeof Symbol===\"function\"&&typeof Symbol.iterator===\"symbol\"){_typeof=function _typeof(obj){return typeof obj;};}else{_typeof=function _typeof(obj){return obj&&typeof Symbol===\"function\"&&obj.constructor===Symbol&&obj!==Symbol.prototype?\"symbol\":typeof obj;};}return _typeof(obj);}function _objectWithoutProperties(source,excluded){if(source==null)return{};var target=_objectWithoutPropertiesLoose(source,excluded);var key,i;if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++){key=sourceSymbolKeys[i];if(excluded.indexOf(key)>=0)continue;if(!Object.prototype.propertyIsEnumerable.call(source,key))continue;target[key]=source[key];}}return target;}function _objectWithoutPropertiesLoose(source,excluded){if(source==null)return{};var target={};var sourceKeys=Object.keys(source);var key,i;for(i=0;i<sourceKeys.length;i++){key=sourceKeys[i];if(excluded.indexOf(key)>=0)continue;target[key]=source[key];}return target;}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\");}}function _defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}function _createClass(Constructor,protoProps,staticProps){if(protoProps)_defineProperties(Constructor.prototype,protoProps);if(staticProps)_defineProperties(Constructor,staticProps);return Constructor;}function _possibleConstructorReturn(self,call){if(call&&(_typeof(call)===\"object\"||typeof call===\"function\")){return call;}return _assertThisInitialized(self);}function _assertThisInitialized(self){if(self===void 0){throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");}return self;}function _getPrototypeOf(o){_getPrototypeOf=Object.setPrototypeOf?Object.getPrototypeOf:function _getPrototypeOf(o){return o.__proto__||Object.getPrototypeOf(o);};return _getPrototypeOf(o);}function _inherits(subClass,superClass){if(typeof superClass!==\"function\"&&superClass!==null){throw new TypeError(\"Super expression must either be null or a function\");}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,writable:true,configurable:true}});if(superClass)_setPrototypeOf(subClass,superClass);}function _setPrototypeOf(o,p){_setPrototypeOf=Object.setPrototypeOf||function _setPrototypeOf(o,p){o.__proto__=p;return o;};return _setPrototypeOf(o,p);}import React from'react';import{MDXTag}from'@mdx-js/tag';var MDXContent=/*#__PURE__*/function(_React$Component){_inherits(MDXContent,_React$Component);function MDXContent(props){var _this;_classCallCheck(this,MDXContent);_this=_possibleConstructorReturn(this,_getPrototypeOf(MDXContent).call(this,props));_this.layout=null;return _this;}_createClass(MDXContent,[{key:\"render\",value:function render(){var _this$props=this.props,components=_this$props.components,props=_objectWithoutProperties(_this$props,[\"components\"]);return React.createElement(MDXTag,{name:\"wrapper\",components:components},React.createElement(MDXTag,{name:\"h1\",components:components,props:{\"id\":\"naming-conventions\"}},\"Naming Conventions\"),React.createElement(MDXTag,{name:\"h2\",components:components,props:{\"id\":\"sketchup-types\"}},\"Sketchup Types\"),React.createElement(MDXTag,{name:\"p\",components:components},\"This may change as changes are made to \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"sketchup\"),\".\"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{\"className\":\"language-javascript\"}},\"// Set what types to set for specific names\\n// in output yaml file depending on\\n// program type and Sketch prefix name\\nconst liftClassTypes = {\\n    react: {\\n        default: 'div',\\n        page: 'page',\\n        section: 'section',\\n        container: 'div',\\n        block: 'div',\\n        button: 'button',\\n        heading: 'h3',\\n        text: 'p',\\n        component: 'div',\\n        nav: 'nav',\\n        link: 'a',\\n        img: 'img',\\n        grid: 'div',\\n        'grid-item': 'div',\\n        icon: 'img',\\n        bg: 'img',\\n        input: 'input',\\n        form: 'form'\\n    },\\n    'react-native': {\\n        default: 'View',\\n        screen: 'Screen',\\n        list: 'FlatList',\\n        view: 'View',\\n        button: 'Button',\\n        text: 'Text',\\n        component: 'View'\\n    },\\n    static: {\\n        default: 'div',\\n        page: 'page',\\n        section: 'section',\\n        container: 'div',\\n        block: 'div',\\n        button: 'button',\\n        heading: 'h3',\\n        text: 'p',\\n        component: 'div',\\n        nav: 'nav',\\n        link: 'a',\\n        img: 'img',\\n        grid: 'div',\\n        'grid-item': 'div',\\n        icon: 'img',\\n        bg: 'img',\\n        input: 'input',\\n        form: 'form'\\n    }\\n};\\n\")),React.createElement(MDXTag,{name:\"p\",components:components},\"For properties that are eligible for children there is an array available:\"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{}},\"// Name props eligible to have text value within tags\\nconst propsEligible = ['Text', 'h1', 'h2', 'h3', 'p', 'button'];\\n\")),React.createElement(MDXTag,{name:\"h3\",components:components,props:{\"id\":\"controlling-new-pages-or-components\"}},\"Controlling new pages, or components\"),React.createElement(MDXTag,{name:\"p\",components:components},\"If a Sketch layer containers the words \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"helper\"),\" or \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"ignore\"),\", that will not be included in the final yml output.\"),React.createElement(MDXTag,{name:\"p\",components:components},\"If the type from the name is \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"page\"),\" or \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"screen\"),\", it will setup a brand new \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"page\"),\" component.\"),React.createElement(MDXTag,{name:\"p\",components:components},\"If type is \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"component\"),\" or \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"section\"),\", it will set up a new file for the component/section.\"),React.createElement(MDXTag,{name:\"p\",components:components},\"Otherwise, if the type is included from above in \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"liftClassTypes\"),\" then the logic will work to figure out what type to associate.\"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{\"className\":\"language-javascript\"}},\"// within deconstruct() function\\nif (l.name.includes('helper') || l.name.includes('ignore')) return;\\n\\n/**\\n * Check key from types and apply type\\n * for component. Ensure split layer name\\n * array element 0 is exact to convention\\n * declared above.\\n */\\nliftClassKeyList.map((d) => {\\n    const lNameSplit = l.name.split('-');\\n    const lType = lNameSplit[0];\\n    if (lType === d) {\\n        if (d === 'page' || d === 'screen') {\\n            component = upperFirst(camelCase(l.name));\\n        } else if (d === 'component' || d === 'section') {\\n            component =\\n                argv._[0] === 'static' ? l.name : upperFirst(camelCase(l.name));\\n            firstChild =\\n                typeof liftClassTypes[argv._[0]][d] !== 'undefined'\\n                    ? liftClassTypes[argv._[0]][d]\\n                    : null;\\n            newFile = true;\\n        } else if (typeof liftClassTypes[argv._[0]][d] !== 'undefined') {\\n            component = liftClassTypes[argv._[0]][d];\\n        }\\n    }\\n});\\nif (!component) return;\\n\")),React.createElement(MDXTag,{name:\"h2\",components:components,props:{\"id\":\"example-reference\"}},\"Example reference\"),React.createElement(MDXTag,{name:\"p\",components:components},\"The following Sketch file has an example of the naming convention in use:\"),React.createElement(MDXTag,{name:\"p\",components:components},React.createElement(MDXTag,{name:\"img\",components:components,parentName:\"p\",props:{\"src\":\"assets/naming.png\",\"alt\":\"Example layout\",\"title\":\"Example Layout\"}})));}}]);return MDXContent;}(React.Component);export{MDXContent as default};MDXContent.__docgenInfo={\"description\":\"\",\"methods\":[],\"displayName\":\"MDXContent\"};",{"version":3,"sources":["/Users/okeeffe_d/Business/Documentation/manual/Sketchup/naming.md"],"names":["React","MDXTag","MDXContent","props","layout","components","Component"],"mappings":"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","sourcesContent":["\n  import React from 'react'\n  import { MDXTag } from '@mdx-js/tag'\n  \n\nexport default class MDXContent extends React.Component {\n  constructor(props) {\n    super(props)\n    this.layout = null\n  }\n  render() {\n    const { components, ...props } = this.props\n\n    return <MDXTag\n             name=\"wrapper\"\n             \n             components={components}><MDXTag name=\"h1\" components={components} props={{\"id\":\"naming-conventions\"}}>{`Naming Conventions`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"sketchup-types\"}}>{`Sketchup Types`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`This may change as changes are made to `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`sketchup`}</MDXTag>{`.`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-javascript\"}}>{`// Set what types to set for specific names\n// in output yaml file depending on\n// program type and Sketch prefix name\nconst liftClassTypes = {\n    react: {\n        default: 'div',\n        page: 'page',\n        section: 'section',\n        container: 'div',\n        block: 'div',\n        button: 'button',\n        heading: 'h3',\n        text: 'p',\n        component: 'div',\n        nav: 'nav',\n        link: 'a',\n        img: 'img',\n        grid: 'div',\n        'grid-item': 'div',\n        icon: 'img',\n        bg: 'img',\n        input: 'input',\n        form: 'form'\n    },\n    'react-native': {\n        default: 'View',\n        screen: 'Screen',\n        list: 'FlatList',\n        view: 'View',\n        button: 'Button',\n        text: 'Text',\n        component: 'View'\n    },\n    static: {\n        default: 'div',\n        page: 'page',\n        section: 'section',\n        container: 'div',\n        block: 'div',\n        button: 'button',\n        heading: 'h3',\n        text: 'p',\n        component: 'div',\n        nav: 'nav',\n        link: 'a',\n        img: 'img',\n        grid: 'div',\n        'grid-item': 'div',\n        icon: 'img',\n        bg: 'img',\n        input: 'input',\n        form: 'form'\n    }\n};\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`For properties that are eligible for children there is an array available:`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{}}>{`// Name props eligible to have text value within tags\nconst propsEligible = ['Text', 'h1', 'h2', 'h3', 'p', 'button'];\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"controlling-new-pages-or-components\"}}>{`Controlling new pages, or components`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`If a Sketch layer containers the words `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`helper`}</MDXTag>{` or `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`ignore`}</MDXTag>{`, that will not be included in the final yml output.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`If the type from the name is `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`page`}</MDXTag>{` or `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`screen`}</MDXTag>{`, it will setup a brand new `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`page`}</MDXTag>{` component.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`If type is `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`component`}</MDXTag>{` or `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`section`}</MDXTag>{`, it will set up a new file for the component/section.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Otherwise, if the type is included from above in `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`liftClassTypes`}</MDXTag>{` then the logic will work to figure out what type to associate.`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-javascript\"}}>{`// within deconstruct() function\nif (l.name.includes('helper') || l.name.includes('ignore')) return;\n\n/**\n * Check key from types and apply type\n * for component. Ensure split layer name\n * array element 0 is exact to convention\n * declared above.\n */\nliftClassKeyList.map((d) => {\n    const lNameSplit = l.name.split('-');\n    const lType = lNameSplit[0];\n    if (lType === d) {\n        if (d === 'page' || d === 'screen') {\n            component = upperFirst(camelCase(l.name));\n        } else if (d === 'component' || d === 'section') {\n            component =\n                argv._[0] === 'static' ? l.name : upperFirst(camelCase(l.name));\n            firstChild =\n                typeof liftClassTypes[argv._[0]][d] !== 'undefined'\n                    ? liftClassTypes[argv._[0]][d]\n                    : null;\n            newFile = true;\n        } else if (typeof liftClassTypes[argv._[0]][d] !== 'undefined') {\n            component = liftClassTypes[argv._[0]][d];\n        }\n    }\n});\nif (!component) return;\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"example-reference\"}}>{`Example reference`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`The following Sketch file has an example of the naming convention in use:`}</MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"img\" components={components} parentName=\"p\" props={{\"src\":\"assets/naming.png\",\"alt\":\"Example layout\",\"title\":\"Example Layout\"}}></MDXTag></MDXTag>\n           </MDXTag>\n  }\n}\n  "]}]}