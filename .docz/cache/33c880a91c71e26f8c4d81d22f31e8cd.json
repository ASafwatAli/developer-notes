{"remainingRequest":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/docz-core/node_modules/babel-loader/lib/index.js??ref--6-1!/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/@mdx-js/loader/index.js??ref--6-2!/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/source-map-loader/index.js!/Users/dennis.okeeffe/Project-Imposter/developer-notes/manual/Stripe/Node-SaaS-With-Stripe.md","dependencies":[{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/manual/Stripe/Node-SaaS-With-Stripe.md","mtime":1562563032091},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/cache-loader/dist/cjs.js","mtime":1564095360956},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/docz-core/node_modules/babel-loader/lib/index.js","mtime":1562568123838},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/@mdx-js/loader/index.js","mtime":1565139338792},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/source-map-loader/index.js","mtime":1564095361765}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9vYmplY3RXaXRob3V0UHJvcGVydGllcyBmcm9tIi9Vc2Vycy9kZW5uaXMub2tlZWZmZS9Qcm9qZWN0LUltcG9zdGVyL2RldmVsb3Blci1ub3Rlcy9ub2RlX21vZHVsZXMvYmFiZWwtcHJlc2V0LXJlYWN0LWFwcC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0V2l0aG91dFByb3BlcnRpZXMiOy8qIEBqc3ggbWR4ICovaW1wb3J0IFJlYWN0IGZyb20ncmVhY3QnO2ltcG9ydHttZHh9ZnJvbSdAbWR4LWpzL3JlYWN0JzsvKiBAanN4IG1keCAqL3ZhciBtYWtlU2hvcnRjb2RlPWZ1bmN0aW9uIG1ha2VTaG9ydGNvZGUobmFtZSl7cmV0dXJuIGZ1bmN0aW9uIE1EWERlZmF1bHRTaG9ydGNvZGUocHJvcHMpe2NvbnNvbGUud2FybigiQ29tcG9uZW50ICIrbmFtZSsiIHdhcyBub3QgaW1wb3J0ZWQsIGV4cG9ydGVkLCBvciBwcm92aWRlZCBieSBNRFhQcm92aWRlciBhcyBnbG9iYWwgc2NvcGUiKTtyZXR1cm4gbWR4KCJkaXYiLHByb3BzKTt9O307dmFyIGxheW91dFByb3BzPXt9O3ZhciBNRFhMYXlvdXQ9IndyYXBwZXIiO2V4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIE1EWENvbnRlbnQoX3JlZil7dmFyIGNvbXBvbmVudHM9X3JlZi5jb21wb25lbnRzLHByb3BzPV9vYmplY3RXaXRob3V0UHJvcGVydGllcyhfcmVmLFsiY29tcG9uZW50cyJdKTtyZXR1cm4gbWR4KE1EWExheW91dCxPYmplY3QuYXNzaWduKHt9LGxheW91dFByb3BzLHByb3BzLHtjb21wb25lbnRzOmNvbXBvbmVudHMsbWR4VHlwZToiTURYTGF5b3V0In0pLG1keCgiaDEiLHsiaWQiOiJub2RlanMtc2Fhcy13aXRoLXN0cmlwZSJ9LCJOb2RlLmpzIFNhYVMgd2l0aCBTdHJpcGUiKSxtZHgoInAiLG51bGwsIlRoZSBiYXNpY3MgcGxhbiBpcyB0bzoiKSxtZHgoIm9sIixudWxsLG1keCgibGkiLHtwYXJlbnROYW1lOiJvbCJ9LCJDcmVhdGUgYSB0ZXN0IGN1c3RvbWVyIGZvciB0aGUgc3Vic2NyaXB0aW9uLiIpLG1keCgibGkiLHtwYXJlbnROYW1lOiJvbCJ9LCJDcmVhdGUgYSBwcm9kdWN0LiIpLG1keCgibGkiLHtwYXJlbnROYW1lOiJvbCJ9LCJDcmVhdGUgYSBwbGFuIGZvciB0aGF0IHByb2R1Y3QuIiksbWR4KCJsaSIse3BhcmVudE5hbWU6Im9sIn0sIkNyZWF0ZSBhIHN1YnNjcmlwdGlvbiBmb3IgdGhhdCBwbGFuLiIpLG1keCgibGkiLHtwYXJlbnROYW1lOiJvbCJ9LCJSZXBlYXRpbmcgZm9yIGEgZmV3IHByb2R1Y3RzLiIpLG1keCgibGkiLHtwYXJlbnROYW1lOiJvbCJ9LCJXcml0aW5nIGEgdGVzdCBzY3JpcHQgdG8gZG8gYWxsIHRoaXMuIiksbWR4KCJsaSIse3BhcmVudE5hbWU6Im9sIn0sIkZldGNoaW5nIGJhY2sgYSBsaXN0IG9mIHN1YnNjcmlwdGlvbnMgZm9yIHRoYXQgcGFydGljdWxhciB1c2VyLiIpLG1keCgibGkiLHtwYXJlbnROYW1lOiJvbCJ9LCJXcml0aW5nIG91dCBhbiBleGFtcGxlIHVzaW5nIEV4cHJlc3Mgc2VydmVycy4iKSksbWR4KCJoMiIseyJpZCI6ImJ1aWxkaW5nLW91dC10aGUtYmFzZS1mdW5jdGlvbnMtdG8tdXNlLWZvci10aGUtZXhwcmVzcy1hcHAifSwiQnVpbGRpbmcgb3V0IHRoZSBiYXNlIGZ1bmN0aW9ucyB0byB1c2UgZm9yIHRoZSBFeHByZXNzIGFwcCIpLG1keCgicHJlIixudWxsLG1keCgiY29kZSIsT2JqZWN0LmFzc2lnbih7cGFyZW50TmFtZToicHJlIn0seyJjbGFzc05hbWUiOiJsYW5ndWFnZS1qYXZhc2NyaXB0In0pLCIvLyBjb250cm9sbGVycy9zdHJpcGUvaW5kZXguanNcbmNvbnN0IHN0cmlwZSA9IHJlcXVpcmUoJ3N0cmlwZScpKHByb2Nlc3MuZW52LlNUUklQRV9TRUNSRVRfS0VZKTtcblxuLyoqXG4gKiBDcmVhdGUgYSBuZXcgY3VzdG9tZXIgYmFzZWQgb2ZmIGFuIGVtYWlsIGFkZHJlc3MuXG4gKlxuICogQHBhcmFtIHtzdHJpbmd9IGVtYWlsXG4gKiBAcmV0dXJucyB7UHJvbWlzZX0gUmVzdWx0IG9mIGF0dGVtcHRpbmcgdG8gY3JlYXRlIGEgY3VzdG9tZXIuXG4gKi9cbmZ1bmN0aW9uIGN1c3RvbWVyQ3JlYXRlKGVtYWlsKSB7XG4gIHJldHVybiBuZXcgUHJvbWlzZShhc3luYyAocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XG4gICAgdHJ5IHtcbiAgICAgIGNvbnN0IGN1c3RvbWVyID0gYXdhaXQgc3RyaXBlLmN1c3RvbWVycy5jcmVhdGUoeyBlbWFpbDogZW1haWwgfSk7XG4gICAgICByZXNvbHZlKGN1c3RvbWVyKTtcbiAgICB9IGNhdGNoIChlcnIpIHtcbiAgICAgIHJlamVjdChlcnIpO1xuICAgIH1cbiAgfSk7XG59XG5cbi8qKlxuICogUmVnaXN0ZXIgYSBuZXcgcHJvZHVjdC5cbiAqIEBleGFtcGxlXG4gKiB7XG4gKiBuYW1lOiAnTXkgU2FhUyBQbGF0Zm9ybScsXG4gKiB0eXBlOiAnc2VydmljZSdcbiAqIH1cbiAqXG4gKiBAcGFyYW0ge09iamVjdH0gZGF0YSBOYW1lIGFuZCB0eXBlIG9mIHByb2R1Y3RcbiAqIEByZXR1cm5zIHtQcm9taXNlfSBSZXF1ZXN0IHRvIGNyZWF0ZSBuZXcgcHJvZHVjdFxuICovXG5mdW5jdGlvbiBwcm9kdWN0Q3JlYXRlKGRhdGEpIHtcbiAgcmV0dXJuIG5ldyBQcm9taXNlKGFzeW5jIChyZXNvbHZlLCByZWplY3QpID0+IHtcbiAgICB0cnkge1xuICAgICAgY29uc3QgcmVzID0gYXdhaXQgc3RyaXBlLnByb2R1Y3RzLmNyZWF0ZShkYXRhKTtcbiAgICAgIHJlc29sdmUocmVzKTtcbiAgICB9IGNhdGNoIChlcnIpIHtcbiAgICAgIHJlamVjdChlcnIpO1xuICAgIH1cbiAgfSk7XG59XG5cbi8qKlxuICogQ3JlYXRlIGEgbmV3IHBsYW4gd2l0aCBhIHByb2R1Y3QuXG4gKiBAZXhhbXBsZVxuICoge1xuICogY3VycmVuY3k6ICd1c2QnLFxuICogaW50ZXJ2YWw6ICdtb250aCcsXG4gKiBwcm9kdWN0OiAncHJvZF9pZCcsXG4gKiBuaWNrbmFtZTogJ1BybyBQbGFuJyxcbiAqIGFtb3VudDogMTJcbiAqIH1cbiAqXG4gKiBAcGFyYW0geyp9IGRhdGFcbiAqIEByZXR1cm5zXG4gKi9cbmZ1bmN0aW9uIHBsYW5DcmVhdGUoZGF0YSkge1xuICByZXR1cm4gbmV3IFByb21pc2UoYXN5bmMgKHJlc29sdmUsIHJlamVjdCkgPT4ge1xuICAgIHRyeSB7XG4gICAgICBjb25zdCByZXMgPSBhd2FpdCBzdHJpcGUucGxhbnMuY3JlYXRlKGRhdGEpO1xuICAgICAgcmVzb2x2ZShyZXMpO1xuICAgIH0gY2F0Y2ggKGVycikge1xuICAgICAgcmVqZWN0KGVycik7XG4gICAgfVxuICB9KTtcbn1cblxuLyoqXG4gKiBDcmVhdGUgYSBuZXcgc3Vic2NyaXB0aW9uIGZvciBhIHVzZXIgYmFzZWQgb24gKiBhIHBsYW4uXG4gKiBAZXhhbXBsZVxuICoge1xuICogY3VzdG9tZXI6ICdjdXN0b21lcl9pZCcsXG4gKiBpdGVtczogW1xuICogICB7XG4gKiAgICAgcGxhbjogJ3BsYW5fYWJjJyxcbiAqICAgICBxdWFudGl0eTogMlxuICogICB9XG4gKiBdXG4gKiB9XG4gKlxuICogQHBhcmFtIHsqfSBkYXRhXG4gKiBAcmV0dXJuc1xuICovXG5mdW5jdGlvbiBzdWJzY3JpcHRpb25DcmVhdGUoZGF0YSkge1xuICByZXR1cm4gbmV3IFByb21pc2UoYXN5bmMgKHJlc29sdmUsIHJlamVjdCkgPT4ge1xuICAgIHRyeSB7XG4gICAgICBjb25zdCByZXMgPSBhd2FpdCBzdHJpcGUuc3Vic2NyaXB0aW9ucy5jcmVhdGUoZGF0YSk7XG4gICAgICByZXNvbHZlKHJlcyk7XG4gICAgfSBjYXRjaCAoZXJyKSB7XG4gICAgICByZWplY3QoZXJyKTtcbiAgICB9XG4gIH0pO1xufVxuXG4vKipcbiAqIEZldGNoIHRoZSBzdWJzY3JpcHRpb24gbGlzdC5cbiAqIEBleGFtcGxlXG4gKiB7XG4gKiB7IGxpbWl0OiA5OSB9LFxuICogY3VzdG9tZXI6ICdjdXNfaWQnXG4gKiB9XG4gKlxuICogQHBhcmFtIHsqfSBkYXRhXG4gKiBAcmV0dXJuc1xuICovXG5mdW5jdGlvbiBzdWJzY3JpcHRpb25MaXN0KGRhdGEpIHtcbiAgcmV0dXJuIG5ldyBQcm9taXNlKGFzeW5jIChyZXNvbHZlLCByZWplY3QpID0+IHtcbiAgICB0cnkge1xuICAgICAgY29uc3QgcmVzID0gYXdhaXQgc3RyaXBlLnN1YnNjcmlwdGlvbnMubGlzdChkYXRhKTtcbiAgICAgIHJlc29sdmUocmVzKTtcbiAgICB9IGNhdGNoIChlcnIpIHtcbiAgICAgIHJlamVjdChlcnIpO1xuICAgIH1cbiAgfSk7XG59XG4iKSkpO31pZih0eXBlb2YgTURYQ29udGVudCE9PSd1bmRlZmluZWQnJiZNRFhDb250ZW50JiZNRFhDb250ZW50PT09T2JqZWN0KE1EWENvbnRlbnQpJiZPYmplY3QuaXNFeHRlbnNpYmxlKE1EWENvbnRlbnQpKXtPYmplY3QuZGVmaW5lUHJvcGVydHkoTURYQ29udGVudCwnX19maWxlbWV0YScse2VudW1lcmFibGU6dHJ1ZSxjb25maWd1cmFibGU6dHJ1ZSx2YWx1ZTp7bmFtZToiTURYQ29udGVudCIsZmlsZW5hbWU6Im1hbnVhbC9TdHJpcGUvTm9kZS1TYWFTLVdpdGgtU3RyaXBlLm1kIn19KTt9TURYQ29udGVudC5pc01EWENvbXBvbmVudD10cnVlOw=="},{"version":3,"sources":["/Users/dennis.okeeffe/Project-Imposter/developer-notes/manual/Stripe/Node-SaaS-With-Stripe.md"],"names":["React","mdx","makeShortcode","name","MDXDefaultShortcode","props","console","warn","layoutProps","MDXLayout","MDXContent","components","isMDXComponent"],"mappings":"iMAAA,cACE,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,GAAT,KAAoB,eAApB,CACA,cAGF,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAAAC,IAAI,QAAI,SAASC,CAAAA,mBAAT,CAA6BC,KAA7B,CAAoC,CAChEC,OAAO,CAACC,IAAR,CAAa,aAAeJ,IAAf,CAAsB,yEAAnC,EACA,MAAO,WAASE,KAAT,CAAP,CACD,CAHyB,EAA1B,CAKA,GAAMG,CAAAA,WAAW,CAAG,EAApB,CAGA,GAAMC,CAAAA,SAAS,CAAG,SAAlB,CACA,cAAe,SAASC,CAAAA,UAAT,MAGZ,IAFDC,CAAAA,UAEC,MAFDA,UAEC,CADEN,KACF,+CACD,MAAO,KAAC,SAAD,kBAAeG,WAAf,CAAgCH,KAAhC,EAAuC,UAAU,CAAEM,UAAnD,CAA+D,OAAO,CAAC,WAAvE,GACL,SAAQ,CACN,KAAM,yBADA,CAAR,4BADK,CAIL,sCAJK,CAKL,cACE,UAAI,UAAU,CAAC,IAAf,iDADF,CAEE,UAAI,UAAU,CAAC,IAAf,sBAFF,CAGE,UAAI,UAAU,CAAC,IAAf,oCAHF,CAIE,UAAI,UAAU,CAAC,IAAf,yCAJF,CAKE,UAAI,UAAU,CAAC,IAAf,kCALF,CAME,UAAI,UAAU,CAAC,IAAf,0CANF,CAOE,UAAI,UAAU,CAAC,IAAf,oEAPF,CAQE,UAAI,UAAU,CAAC,IAAf,kDARF,CALK,CAeL,SAAQ,CACN,KAAM,4DADA,CAAR,8DAfK,CAkBL,eAAK,0BAAM,UAAU,CAAC,KAAjB,EAA2B,CAC5B,YAAa,qBADe,CAA3B,ouEAAL,CAlBK,CAAP,CAyID,C,kRAEDD,UAAU,CAACE,cAAX,CAA4B,IAA5B","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"nodejs-saas-with-stripe\"\n    }}>{`Node.js SaaS with Stripe`}</h1>\n    <p>{`The basics plan is to:`}</p>\n    <ol>\n      <li parentName=\"ol\">{`Create a test customer for the subscription.`}</li>\n      <li parentName=\"ol\">{`Create a product.`}</li>\n      <li parentName=\"ol\">{`Create a plan for that product.`}</li>\n      <li parentName=\"ol\">{`Create a subscription for that plan.`}</li>\n      <li parentName=\"ol\">{`Repeating for a few products.`}</li>\n      <li parentName=\"ol\">{`Writing a test script to do all this.`}</li>\n      <li parentName=\"ol\">{`Fetching back a list of subscriptions for that particular user.`}</li>\n      <li parentName=\"ol\">{`Writing out an example using Express servers.`}</li>\n    </ol>\n    <h2 {...{\n      \"id\": \"building-out-the-base-functions-to-use-for-the-express-app\"\n    }}>{`Building out the base functions to use for the Express app`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`// controllers/stripe/index.js\nconst stripe = require('stripe')(process.env.STRIPE_SECRET_KEY);\n\n/**\n * Create a new customer based off an email address.\n *\n * @param {string} email\n * @returns {Promise} Result of attempting to create a customer.\n */\nfunction customerCreate(email) {\n  return new Promise(async (resolve, reject) => {\n    try {\n      const customer = await stripe.customers.create({ email: email });\n      resolve(customer);\n    } catch (err) {\n      reject(err);\n    }\n  });\n}\n\n/**\n * Register a new product.\n * @example\n * {\n * name: 'My SaaS Platform',\n * type: 'service'\n * }\n *\n * @param {Object} data Name and type of product\n * @returns {Promise} Request to create new product\n */\nfunction productCreate(data) {\n  return new Promise(async (resolve, reject) => {\n    try {\n      const res = await stripe.products.create(data);\n      resolve(res);\n    } catch (err) {\n      reject(err);\n    }\n  });\n}\n\n/**\n * Create a new plan with a product.\n * @example\n * {\n * currency: 'usd',\n * interval: 'month',\n * product: 'prod_id',\n * nickname: 'Pro Plan',\n * amount: 12\n * }\n *\n * @param {*} data\n * @returns\n */\nfunction planCreate(data) {\n  return new Promise(async (resolve, reject) => {\n    try {\n      const res = await stripe.plans.create(data);\n      resolve(res);\n    } catch (err) {\n      reject(err);\n    }\n  });\n}\n\n/**\n * Create a new subscription for a user based on * a plan.\n * @example\n * {\n * customer: 'customer_id',\n * items: [\n *   {\n *     plan: 'plan_abc',\n *     quantity: 2\n *   }\n * ]\n * }\n *\n * @param {*} data\n * @returns\n */\nfunction subscriptionCreate(data) {\n  return new Promise(async (resolve, reject) => {\n    try {\n      const res = await stripe.subscriptions.create(data);\n      resolve(res);\n    } catch (err) {\n      reject(err);\n    }\n  });\n}\n\n/**\n * Fetch the subscription list.\n * @example\n * {\n * { limit: 99 },\n * customer: 'cus_id'\n * }\n *\n * @param {*} data\n * @returns\n */\nfunction subscriptionList(data) {\n  return new Promise(async (resolve, reject) => {\n    try {\n      const res = await stripe.subscriptions.list(data);\n      resolve(res);\n    } catch (err) {\n      reject(err);\n    }\n  });\n}\n`}</code></pre>\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  "]}]}