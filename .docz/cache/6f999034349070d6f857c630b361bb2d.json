{"remainingRequest":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/docz-core/node_modules/babel-loader/lib/index.js??ref--6-1!/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/@mdx-js/loader/index.js??ref--6-2!/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/source-map-loader/index.js!/Users/dennis.okeeffe/Project-Imposter/developer-notes/manual/Design-Patterns/Observer.md","dependencies":[{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/manual/Design-Patterns/Observer.md","mtime":1562563032027},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/cache-loader/dist/cjs.js","mtime":1564095360956},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/docz-core/node_modules/babel-loader/lib/index.js","mtime":1562568123838},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/@mdx-js/loader/index.js","mtime":1565139338792},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/source-map-loader/index.js","mtime":1564095361765}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9vYmplY3RXaXRob3V0UHJvcGVydGllcyBmcm9tIi9Vc2Vycy9kZW5uaXMub2tlZWZmZS9Qcm9qZWN0LUltcG9zdGVyL2RldmVsb3Blci1ub3Rlcy9ub2RlX21vZHVsZXMvYmFiZWwtcHJlc2V0LXJlYWN0LWFwcC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0V2l0aG91dFByb3BlcnRpZXMiOy8qIEBqc3ggbWR4ICovaW1wb3J0IFJlYWN0IGZyb20ncmVhY3QnO2ltcG9ydHttZHh9ZnJvbSdAbWR4LWpzL3JlYWN0JzsvKiBAanN4IG1keCAqL3ZhciBtYWtlU2hvcnRjb2RlPWZ1bmN0aW9uIG1ha2VTaG9ydGNvZGUobmFtZSl7cmV0dXJuIGZ1bmN0aW9uIE1EWERlZmF1bHRTaG9ydGNvZGUocHJvcHMpe2NvbnNvbGUud2FybigiQ29tcG9uZW50ICIrbmFtZSsiIHdhcyBub3QgaW1wb3J0ZWQsIGV4cG9ydGVkLCBvciBwcm92aWRlZCBieSBNRFhQcm92aWRlciBhcyBnbG9iYWwgc2NvcGUiKTtyZXR1cm4gbWR4KCJkaXYiLHByb3BzKTt9O307dmFyIGxheW91dFByb3BzPXt9O3ZhciBNRFhMYXlvdXQ9IndyYXBwZXIiO2V4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIE1EWENvbnRlbnQoX3JlZil7dmFyIGNvbXBvbmVudHM9X3JlZi5jb21wb25lbnRzLHByb3BzPV9vYmplY3RXaXRob3V0UHJvcGVydGllcyhfcmVmLFsiY29tcG9uZW50cyJdKTtyZXR1cm4gbWR4KE1EWExheW91dCxPYmplY3QuYXNzaWduKHt9LGxheW91dFByb3BzLHByb3BzLHtjb21wb25lbnRzOmNvbXBvbmVudHMsbWR4VHlwZToiTURYTGF5b3V0In0pLG1keCgiaDEiLHsiaWQiOiJvYnNlcnZlciJ9LCJPYnNlcnZlciIpLG1keCgiaDIiLHsiaWQiOiJleGFtcGxlIn0sIkV4YW1wbGUiKSxtZHgoInByZSIsbnVsbCxtZHgoImNvZGUiLE9iamVjdC5hc3NpZ24oe3BhcmVudE5hbWU6InByZSJ9LHsiY2xhc3NOYW1lIjoibGFuZ3VhZ2UtdHlwZXNjcmlwdCJ9KSwiaW50ZXJmYWNlIE9ic2VydmVyIHtcbiAgdW5pcXVlSUQ6IHN0cmluZztcbiAgdXBkYXRlKCk6IHZvaWQ7XG59XG5cbmNsYXNzIENvbmNyZXRlT2JzZXJ2ZXIgaW1wbGVtZW50cyBPYnNlcnZlciB7XG4gIHB1YmxpYyB1bmlxdWVJRDogc3RyaW5nO1xuICBjb25zdHJ1Y3Rvcih1bmlxdWVJRDogc3RyaW5nKSB7XG4gICAgdGhpcy51bmlxdWVJRCA9IHVuaXF1ZUlEO1xuICB9XG5cbiAgdXBkYXRlKCk6IHZvaWQge1xuICAgIGNvbnNvbGUubG9nKGAke3RoaXMudW5pcXVlSUR9IHVwZGF0ZXMgc29tZXRoaW5nLi4uYCk7XG4gIH1cbn1cblxuZnVuY3Rpb24gZmluZE9ic2VydmVyKG9iczogT2JzZXJ2ZXJbXSwgdW5pcXVlSUQ6IHN0cmluZykge1xuICBsZXQgaW5kZXggPSAwO1xuICBjb25zdCBleGlzdGVkID0gb2JzLnNvbWUoKG9ic2VydmVyLCBpZHgpID0+IHtcbiAgICBpbmRleCA9IGlkeDtcbiAgICByZXR1cm4gb2JzZXJ2ZXIudW5pcXVlSUQgPT09IHVuaXF1ZUlEO1xuICB9KTtcbiAgcmV0dXJuIHtcbiAgICBleGlzdGVkLFxuICAgIGluZGV4XG4gIH07XG59XG5cbmNsYXNzIFN1YmplY3Qge1xuICBwcml2YXRlIF9vYnNlcnZlcnM6IE9ic2VydmVyW107XG4gIGNvbnN0cnVjdG9yKCkge1xuICAgIHRoaXMuX29ic2VydmVycyA9IFtdO1xuICB9XG5cbiAgcmVnaXN0ZXJPYnNlcnZlcihvYjogT2JzZXJ2ZXIpIHtcbiAgICBjb25zdCBpZDogc3RyaW5nID0gb2IudW5pcXVlSUQ7XG4gICAgaWYgKGZpbmRPYnNlcnZlcih0aGlzLl9vYnNlcnZlcnMsIGlkKS5leGlzdGVkKSB7XG4gICAgICByZXR1cm4gY29uc29sZS5sb2coYE9ic2VydmVyICR7aWR9IGlzIGFscmVhZHkgaW4gbGlzdGApO1xuICAgIH1cbiAgICB0aGlzLl9vYnNlcnZlcnMucHVzaChvYik7XG4gICAgY29uc29sZS5sb2coYE9ic2VydmVyICR7b2IudW5pcXVlSUR9IGlzIHB1c2hlZCBpbnRvIGxpc3RgKTtcbiAgICBjb25zb2xlLmxvZyh0aGlzLl9vYnNlcnZlcnMpO1xuICB9XG5cbiAgcmVtb3ZlT2JzZXJ2ZXIodW5pcXVlSUQ6IHN0cmluZykge1xuICAgIGNvbnN0IHsgZXhpc3RlZCwgaW5kZXggfSA9IGZpbmRPYnNlcnZlcih0aGlzLl9vYnNlcnZlcnMsIHVuaXF1ZUlEKTtcbiAgICBpZiAoZXhpc3RlZCkge1xuICAgICAgdGhpcy5fb2JzZXJ2ZXJzLnNwbGljZShpbmRleCwgMSk7XG4gICAgICBjb25zb2xlLmxvZyhgT2JzZXJ2ZXIgJHt1bmlxdWVJRH0gaXMgcmVtb3ZlZCBmcm9tIGxpc3RgKTtcbiAgICB9IGVsc2Uge1xuICAgICAgY29uc29sZS5sb2coJ09ic2VydmVyIG5vdCBleGlzdGVkJyk7XG4gICAgfVxuICB9XG5cbiAgbm90aWZ5T2JzZXJ2ZXJzKCkge1xuICAgIGNvbnNvbGUubG9nKCdTdWJqZWN0IG5vdGlmeSBhbGwgb2JzZXJ2ZXJzID4+Jyk7XG4gICAgdGhpcy5fb2JzZXJ2ZXJzLm1hcCgob2JzZXJ2ZXIpID0+IHtcbiAgICAgIG9ic2VydmVyLnVwZGF0ZSgpO1xuICAgIH0pO1xuICB9XG59XG5cbihmdW5jdGlvbiBtYWluKCkge1xuICBjb25zdCBzdWJqZWN0ID0gbmV3IFN1YmplY3QoKTtcblxuICBjb25zdCBvYkEgPSBuZXcgQ29uY3JldGVPYnNlcnZlcignQScpO1xuICBjb25zdCBvYkIgPSBuZXcgQ29uY3JldGVPYnNlcnZlcignQicpO1xuICBjb25zdCBvYkMgPSBuZXcgQ29uY3JldGVPYnNlcnZlcignQycpO1xuXG4gIHN1YmplY3QucmVnaXN0ZXJPYnNlcnZlcihvYkEpO1xuICBzdWJqZWN0LnJlZ2lzdGVyT2JzZXJ2ZXIob2JBKTsgLy8gYWxyZWFkeSBleGlzdGVkXG5cbiAgc3ViamVjdC5yZWdpc3Rlck9ic2VydmVyKG9iQik7XG4gIHN1YmplY3QucmVnaXN0ZXJPYnNlcnZlcihvYkMpO1xuXG4gIHN1YmplY3Qubm90aWZ5T2JzZXJ2ZXJzKCk7XG59KSgpO1xuIikpKTt9aWYodHlwZW9mIE1EWENvbnRlbnQhPT0ndW5kZWZpbmVkJyYmTURYQ29udGVudCYmTURYQ29udGVudD09PU9iamVjdChNRFhDb250ZW50KSYmT2JqZWN0LmlzRXh0ZW5zaWJsZShNRFhDb250ZW50KSl7T2JqZWN0LmRlZmluZVByb3BlcnR5KE1EWENvbnRlbnQsJ19fZmlsZW1ldGEnLHtlbnVtZXJhYmxlOnRydWUsY29uZmlndXJhYmxlOnRydWUsdmFsdWU6e25hbWU6Ik1EWENvbnRlbnQiLGZpbGVuYW1lOiJtYW51YWwvRGVzaWduLVBhdHRlcm5zL09ic2VydmVyLm1kIn19KTt9TURYQ29udGVudC5pc01EWENvbXBvbmVudD10cnVlOw=="},{"version":3,"sources":["/Users/dennis.okeeffe/Project-Imposter/developer-notes/manual/Design-Patterns/Observer.md"],"names":["React","mdx","makeShortcode","name","MDXDefaultShortcode","props","console","warn","layoutProps","MDXLayout","MDXContent","components","isMDXComponent"],"mappings":"iMAAA,cACE,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,GAAT,KAAoB,eAApB,CACA,cAGF,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAAAC,IAAI,QAAI,SAASC,CAAAA,mBAAT,CAA6BC,KAA7B,CAAoC,CAChEC,OAAO,CAACC,IAAR,CAAa,aAAeJ,IAAf,CAAsB,yEAAnC,EACA,MAAO,WAASE,KAAT,CAAP,CACD,CAHyB,EAA1B,CAKA,GAAMG,CAAAA,WAAW,CAAG,EAApB,CAGA,GAAMC,CAAAA,SAAS,CAAG,SAAlB,CACA,cAAe,SAASC,CAAAA,UAAT,MAGZ,IAFDC,CAAAA,UAEC,MAFDA,UAEC,CADEN,KACF,+CACD,MAAO,KAAC,SAAD,kBAAeG,WAAf,CAAgCH,KAAhC,EAAuC,UAAU,CAAEM,UAAnD,CAA+D,OAAO,CAAC,WAAvE,GACL,SAAQ,CACN,KAAM,UADA,CAAR,YADK,CAIL,SAAQ,CACN,KAAM,SADA,CAAR,WAJK,CAOL,eAAK,0BAAM,UAAU,CAAC,KAAjB,EAA2B,CAC5B,YAAa,qBADe,CAA3B,ozDAAL,CAPK,CAAP,CAwFD,C,8QAEDD,UAAU,CAACE,cAAX,CAA4B,IAA5B","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"observer\"\n    }}>{`Observer`}</h1>\n    <h2 {...{\n      \"id\": \"example\"\n    }}>{`Example`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-typescript\"\n      }}>{`interface Observer {\n  uniqueID: string;\n  update(): void;\n}\n\nclass ConcreteObserver implements Observer {\n  public uniqueID: string;\n  constructor(uniqueID: string) {\n    this.uniqueID = uniqueID;\n  }\n\n  update(): void {\n    console.log(\\`\\${this.uniqueID} updates something...\\`);\n  }\n}\n\nfunction findObserver(obs: Observer[], uniqueID: string) {\n  let index = 0;\n  const existed = obs.some((observer, idx) => {\n    index = idx;\n    return observer.uniqueID === uniqueID;\n  });\n  return {\n    existed,\n    index\n  };\n}\n\nclass Subject {\n  private _observers: Observer[];\n  constructor() {\n    this._observers = [];\n  }\n\n  registerObserver(ob: Observer) {\n    const id: string = ob.uniqueID;\n    if (findObserver(this._observers, id).existed) {\n      return console.log(\\`Observer \\${id} is already in list\\`);\n    }\n    this._observers.push(ob);\n    console.log(\\`Observer \\${ob.uniqueID} is pushed into list\\`);\n    console.log(this._observers);\n  }\n\n  removeObserver(uniqueID: string) {\n    const { existed, index } = findObserver(this._observers, uniqueID);\n    if (existed) {\n      this._observers.splice(index, 1);\n      console.log(\\`Observer \\${uniqueID} is removed from list\\`);\n    } else {\n      console.log('Observer not existed');\n    }\n  }\n\n  notifyObservers() {\n    console.log('Subject notify all observers >>');\n    this._observers.map((observer) => {\n      observer.update();\n    });\n  }\n}\n\n(function main() {\n  const subject = new Subject();\n\n  const obA = new ConcreteObserver('A');\n  const obB = new ConcreteObserver('B');\n  const obC = new ConcreteObserver('C');\n\n  subject.registerObserver(obA);\n  subject.registerObserver(obA); // already existed\n\n  subject.registerObserver(obB);\n  subject.registerObserver(obC);\n\n  subject.notifyObservers();\n})();\n`}</code></pre>\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  "]}]}