{"remainingRequest":"/Users/okeeffe_d/Business/Documentation/node_modules/babel-loader/lib/index.js?{\"presets\":[[\"/Users/okeeffe_d/Business/Documentation/node_modules/babel-preset-docz/dist/index.js\",{\"flow\":true,\"typescript\":false,\"parseProps\":true}]],\"plugins\":[[\"/Users/okeeffe_d/Business/Documentation/node_modules/docz-utils/lib/named-asset-import.js\",{\"loaderMap\":{\"svg\":{\"ReactComponent\":\"@svgr/webpack?-prettier,-svgo![path]\"}}}]],\"babelrc\":false,\"cacheCompression\":true,\"compact\":true}!/Users/okeeffe_d/Business/Documentation/manual/PHP/php-cheat-sheet.md","dependencies":[{"path":"/Users/okeeffe_d/Business/Documentation/manual/PHP/php-cheat-sheet.md","mtime":1548209344393},{"path":"/Users/okeeffe_d/Business/Documentation/node_modules/cache-loader/dist/cjs.js","mtime":1548134640245},{"path":"/Users/okeeffe_d/Business/Documentation/node_modules/babel-loader/lib/index.js","mtime":1548134640227}],"contextDependencies":[],"result":["function _typeof(obj){if(typeof Symbol===\"function\"&&typeof Symbol.iterator===\"symbol\"){_typeof=function _typeof(obj){return typeof obj;};}else{_typeof=function _typeof(obj){return obj&&typeof Symbol===\"function\"&&obj.constructor===Symbol&&obj!==Symbol.prototype?\"symbol\":typeof obj;};}return _typeof(obj);}function _objectWithoutProperties(source,excluded){if(source==null)return{};var target=_objectWithoutPropertiesLoose(source,excluded);var key,i;if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++){key=sourceSymbolKeys[i];if(excluded.indexOf(key)>=0)continue;if(!Object.prototype.propertyIsEnumerable.call(source,key))continue;target[key]=source[key];}}return target;}function _objectWithoutPropertiesLoose(source,excluded){if(source==null)return{};var target={};var sourceKeys=Object.keys(source);var key,i;for(i=0;i<sourceKeys.length;i++){key=sourceKeys[i];if(excluded.indexOf(key)>=0)continue;target[key]=source[key];}return target;}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\");}}function _defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}function _createClass(Constructor,protoProps,staticProps){if(protoProps)_defineProperties(Constructor.prototype,protoProps);if(staticProps)_defineProperties(Constructor,staticProps);return Constructor;}function _possibleConstructorReturn(self,call){if(call&&(_typeof(call)===\"object\"||typeof call===\"function\")){return call;}return _assertThisInitialized(self);}function _assertThisInitialized(self){if(self===void 0){throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");}return self;}function _getPrototypeOf(o){_getPrototypeOf=Object.setPrototypeOf?Object.getPrototypeOf:function _getPrototypeOf(o){return o.__proto__||Object.getPrototypeOf(o);};return _getPrototypeOf(o);}function _inherits(subClass,superClass){if(typeof superClass!==\"function\"&&superClass!==null){throw new TypeError(\"Super expression must either be null or a function\");}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,writable:true,configurable:true}});if(superClass)_setPrototypeOf(subClass,superClass);}function _setPrototypeOf(o,p){_setPrototypeOf=Object.setPrototypeOf||function _setPrototypeOf(o,p){o.__proto__=p;return o;};return _setPrototypeOf(o,p);}import React from'react';import{MDXTag}from'@mdx-js/tag';var MDXContent=/*#__PURE__*/function(_React$Component){_inherits(MDXContent,_React$Component);function MDXContent(props){var _this;_classCallCheck(this,MDXContent);_this=_possibleConstructorReturn(this,_getPrototypeOf(MDXContent).call(this,props));_this.layout=null;return _this;}_createClass(MDXContent,[{key:\"render\",value:function render(){var _this$props=this.props,components=_this$props.components,props=_objectWithoutProperties(_this$props,[\"components\"]);return React.createElement(MDXTag,{name:\"wrapper\",components:components},React.createElement(MDXTag,{name:\"h1\",components:components,props:{\"id\":\"php-help-sheet\"}},\"PHP Help Sheet\"),React.createElement(MDXTag,{name:\"h2\",components:components,props:{\"id\":\"treehouse-php-classes\"}},\"Treehouse PHP Classes\"),React.createElement(MDXTag,{name:\"blockquote\",components:components},React.createElement(MDXTag,{name:\"p\",components:components,parentName:\"blockquote\"},\"PHP OOP\\nclasses\\nrecipe.php\\ncookbook.php\")),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{\"className\":\"language-php\"}},\"// recipe.php\\n\\n<?php\\n\\nclass Recipe\\n{\\n    private $title;\\n    public $ingredients = array();\\n    public $instruction = array();\\n    public $yield;\\n    public $tag = array();\\n    public $source = 'Alena Holligan';\\n\\n    private $measurements = array(\\n        \\\"tsp\\\",\\n        \\\"tbsp\\\",\\n        \\\"cup\\\",\\n        \\\"oz\\\",\\n        \\\"lb\\\",\\n        \\\"fl oz\\\",\\n        \\\"pint\\\",\\n        \\\"quart\\\",\\n        \\\"gallon\\\"\\n    );\\n\\n    public function displayRecipe()\\n    {\\n        return $this->title . \\\"by\\\" . $this->source;\\n    }\\n\\n    public function addIngredient($item, $amount = null, $measure=null)\\n    {\\n        if ($amount != null && !is_float($amount) && !is_int($amount)) {\\n            exit(\\\"The amount must be a float: \\\") . gettype($amount) . \\\" $amount given\\\");\\n        }\\n\\n        if ($measure != null && !in_array(strtolower($measure), $this->measurements)) {\\n            exit(\\\"Please enter a valid measurement: \\\" . implode(\\\", \\\", $this->measurements));\\n        }\\n\\n        $this->ingredients[] = array (\\n            \\\"item\\\" => ucwords($item),\\n            \\\"amount\\\" => $amount,\\n            \\\"measure\\\" => strtolower($measure)\\n        );\\n    }\\n\\n    public function getIngredients()\\n    {\\n        return $this->ingredients;\\n    }\\n\\n    public function setTitle($title)\\n    {\\n        $this->title = ucword($title);\\n    }\\n\\n    public function getTitle()\\n    {\\n        return $this->title;\\n    }\\n\\n}\\n\\n?>\\n\\n// cookbook.php\\n\\n<?php\\n\\ninclude \\\"classes/recipes.php\\\";\\n\\n$recipe1 = new Recipe();\\necho $recipe1->source;\\n$recipe1->source(\\\"Grandma Holligan\\\");\\necho $recipe1->source;\\n$recipe1->setTitle(\\\"My first recipe\\\");\\n$recipe1->getTitle();\\n\\n$recipe1->addIngredient(\\\"egg\\\",1);\\n$recipe1->addIngredient(\\\"flour\\\",2,\\\"cup\\\");\\n\\n$recipe2 = new Recipe();\\n$recipe2->source = \\\"Betty Crocker\\\";\\n$recipe1->setTitle = \\\"My second recipe\\\";\\n\\necho $recipe1->source;\\necho $recipe2->source;\\n\\necho $recipe1->displayRecipe();\\necho $recipe2->displayRecipe();\\n\\nforeach ($recipe1->getIngredients() as $ing) {\\n    echo \\\"\\n\\\" . $ing[\\\"amount\\\"] . \\\" \\\" . $ing[\\\"measure\\\"] . \\\" \\\" . $ing[\\\"item\\\"];\\n}\\n\\nvar_dump($recipe1);\\n\\n?>\\n\")),React.createElement(MDXTag,{name:\"h2\",components:components,props:{\"id\":\"php-access-modifiers\"}},\"PHP Access Modifiers\"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{\"className\":\"language-php\"}},\"<?php\\n\\nclass Render {\\n\\n  public static function displayDimensions($size) {\\n      return $size[0] . \\\" x \\\" . $size[1];\\n  }\\n\\n  public static function detailsKitchen($room) {\\n       return \\\"Kitchen Dimensions: \\\" . self::displayDimensions($room->getDimensions());\\n  }\\n\\n}\\n\\n?>\\n\")),React.createElement(MDXTag,{name:\"h2\",components:components,props:{\"id\":\"php-magic-methods-and-constants\"}},\"PHP Magic Methods and Constants\"),React.createElement(MDXTag,{name:\"p\",components:components},\"Some magic constants:\"),React.createElement(MDXTag,{name:\"p\",components:components},React.createElement(MDXTag,{name:\"strong\",components:components,parentName:\"p\"},\"CLASS\"),React.createElement(MDXTag,{name:\"strong\",components:components,parentName:\"p\"},\"FILE\")),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{\"className\":\"language-php\"}},\"<?php\\nclass Example\\n{\\n\\n    public function __construct($title = null)\\n    {\\n        $this->setTitle($title);\\n    }\\n\\n    public function __toString()\\n    {\\n        $output = \\\"You are calling a \\\" . __CLASS__ . \\\" object with the title \\\"\\\";\\n        $output .= $this->getTitle() . \\\"\\\"\\\";\\n        $output .= \\\"\\nIt is stored in \\\" . basename(__FILE__) . \\\" at \\\" . __DIR__ . \\\".\\\";\\n        $output .= \\\"\\nThis display is from line \\\" . __LINE__ . \\\" in method \\\" . __METHOD__;\\n        $output .= \\\"\\nThe following methods are available for objects of this class: \\n\\\";\\n        $output .= implode(\\\"\\n\\\", get_class_methods(__CLASS__));\\n        return $output;\\n    }\\n}\\n\\nclass Render\\n{\\n\\n    public function __toString()\\n    {\\n        $output = \\\"The following methods are available for \\\" . __CLASS__ . \\\" objects: \\n\\\";\\n        $output .= implode(\\\"\\n\\\", get_class_methods(__CLASS__));\\n        return $output;\\n    }\\n}\\n\\n$example = new Example(\\\"Name\\\");\\necho $example;\\n\\n?>\\n\\n<?php\\n\\nclass Fish\\n{\\n    public $common_name;\\n    public $flavor;\\n    public $record_weight;\\n\\n    public function __construct($name, $flavor, $record) {\\n      $this->common_name = $name;\\n      $this->flavor = $flavor;\\n      $this->record_weight = $record;\\n    }\\n\\n    public function getInfo() {\\n      return \\\"A {$this->common_name} is an {$this->flavor} flavored fish. The world record weight is {$this->record_weight}.\\\";\\n    }\\n}\\n\\n$bass = new Fish(\\\"Largemouth Bass\\\", \\\"Excellent\\\", \\\"22 pounds 5 ounces\\\");\\n\\n?>\\n\")),React.createElement(MDXTag,{name:\"h2\",components:components,props:{\"id\":\"php-collections\"}},\"PHP Collections\"),React.createElement(MDXTag,{name:\"p\",components:components},\"recipecollection.php\"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{\"className\":\"language-php\"}},\"<?\\n\\nclass RecipeCollection\\n{\\n    private $title;\\n    private $recipes = array();\\n\\n    // has constructor here and setter and getters\\n\\n    public function addRecipe($recipe) {\\n        $this->recipes[] = $recipe;\\n    }\\n\\n    public function getRecipe() {\\n        return $this->recipes;\\n    }\\n}\\n\\n?>\\n\")),React.createElement(MDXTag,{name:\"h2\",components:components,props:{\"id\":\"php-arrays\"}},\"PHP Arrays\"),React.createElement(MDXTag,{name:\"p\",components:components},\"Create\\n$myArray = array();\"),React.createElement(MDXTag,{name:\"p\",components:components},\"Push into\\n$myArray[] = \\\"\\xADSom\\xADeth\\xADing\\xAD\\\";\"),React.createElement(MDXTag,{name:\"p\",components:components},\"Push to associ\\xADative\\n$myArr\\xADay\",\"[\\xAD'key']\",\" = \\\"\\xADVal\\xADue\\\";\"),React.createElement(MDXTag,{name:\"p\",components:components},\"Create numeric\\n$myArray = array(\\xAD'va\\xADlue', 'value2');\"),React.createElement(MDXTag,{name:\"p\",components:components},\"Create associ\\xADative\\n$a = array(\\xAD'ke\\xADy'=\\xAD>'v\\xADal');\"),React.createElement(MDXTag,{name:\"p\",components:components},\"Print from numeric\\necho $myArr\\xADay\",\"[0]\",\";\"),React.createElement(MDXTag,{name:\"p\",components:components},\"Print from associ\\xADative\\necho $myArr\\xADay\",\"[\\xAD'key']\",\";\"),React.createElement(MDXTag,{name:\"p\",components:components},\"Associ\\xADative arrays\\nKeys are strings\"),React.createElement(MDXTag,{name:\"p\",components:components},\"Numeric arrays\\nKeys are numbers: 0,1,2,3,4\"),React.createElement(MDXTag,{name:\"h2\",components:components,props:{\"id\":\"php-array-functions\"}},\"PHP Array Functions\"),React.createElement(MDXTag,{name:\"p\",components:components},\"array_diff (arr1, arr2 ...)\\narray_filter (arr, function)\\narray_flip (arr)\\narray_intersect (arr1, arr2 ...)\\narray_merge (arr1, arr2 ...)\\narray_pop (arr)\\narray_push (arr, var1, var2 ...)\\narray_reverse (arr)\\narray_keys(array $array [, mixed $search_value = null \",\"[, bool $strict = false ]\",\"] )\\narray_search (needle, arr)\\narray_walk (arr, function)\\ncount (count)\\nin_array (needle, haystack)\"),React.createElement(MDXTag,{name:\"p\",components:components},\"// ARRAY EXAMPLES\"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{\"className\":\"language-php\"}},\"<?php\\n    // add code below this comment\\nclass Subdivision\\n{\\n  public $houses = array();\\n\\n  public function filterHouseColor($color)\\n  {\\n    $return = array();\\n    foreach ($this->houses as $house) {\\n      if ($house->roof_color == $color || $house->wall_color == $color) {\\n        $return[] = $house;\\n      }\\n    }\\n    return $return;\\n  }\\n}\\n\\n?>\\n\\n<? php\\n\\npublic function getCombinedIngredients()\\n{\\n    $ingredients = array();\\n    foreach ($this->recipes as $recipe) {\\n        foreach($recipe->getIngredients() as $ing) {\\n            $item = $ing[\\\"item\\\"];\\n\\n            if (strpos($item, \\\",\\\")) {\\n                $item = strstr($item, \\\",\\\", true);\\n            }\\n\\n            if (in_array($item.\\\"s\\\", $ingredients)) {\\n                $item.=\\\"s\\\";\\n            } else if (in_array(substr($item, 0, -1), $ingredients)) {\\n                $item = substr($item, 0, -1);\\n            }\\n\\n            $ingredients[$item] = array (\\n                $ing[\\\"amount\\\"],\\n                $ing[\\\"measure\\\"]\\n            );\\n        }\\n    }\\n\\n    return $ingredients;\\n}\\n\\n?>\\n\")),React.createElement(MDXTag,{name:\"h2\",components:components,props:{\"id\":\"php-control-flow-logic\"}},\"PHP Control Flow Logic\"),React.createElement(MDXTag,{name:\"p\",components:components},\"if (condi\\xADtion) {\\n... }\\nelseif (condi\\xADtion) {\\n... }\\nelse {\\n... }\"),React.createElement(MDXTag,{name:\"p\",components:components},\"FOR loop\\nfor (initi\\xADalize; condition; update) { ... }\"),React.createElement(MDXTag,{name:\"p\",components:components},\"WHILE loop\\nwhile (condi\\xADtion) { ... }\"),React.createElement(MDXTag,{name:\"p\",components:components},\"FOREACH loop\\nforeach ($array as $value) { ... }\"),React.createElement(MDXTag,{name:\"p\",components:components},\"DO WHILE\\ndo { ... ;} while (condi\\xADtion)\"),React.createElement(MDXTag,{name:\"p\",components:components},\"SWITCH ($s) {\\ncase 1:\\n...\\nbreak;\\ncase 2:\\n...\\nbreak;\\ndefault:\\n...\\n}\"),React.createElement(MDXTag,{name:\"h2\",components:components,props:{\"id\":\"php-ifelseif-statements-within-a-web-document\"}},\"PHP if/elseif statements within a web document\"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{\"className\":\"language-php\"}},\"<?php\\n\\n$bool = false;\\n\\n?>\\n\\n<?php if ($bool) : ?>\\n\\n    <div>\\n        <p><?php echo \\\"Bool is true\\\"?></p>\\n    </div>\\n\\n<?php elseif (!$bool) : ?>\\n\\n    <div>\\n        <p><?php echo \\\"Elseif works\\\"?></p>\\n    </div>\\n\\n<?php else : ?>\\n\\n    <div>\\n        <p><?php echo \\\"Bool is false\\\"?></p>\\n    </div>\\n\\n<?php endif; ?>\\n\")),React.createElement(MDXTag,{name:\"h2\",components:components,props:{\"id\":\"php-general-functions\"}},\"PHP General Functions\"),React.createElement(MDXTag,{name:\"p\",components:components},\"isset()\\ntest for variable exists\\nempty()\\ntest for empty variable\\nmail($to, $subject, $msg, 'From: ' . $email)\\nmail function\\nmysqli\\xAD\",React.createElement(MDXTag,{name:\"em\",components:components,parentName:\"p\"},\"fe\\xADtch\\xAD_ar\\xADray\\xAD($r\\xADesult)\\nfetch each row of a query (in $result)\\nheader()\\nsend a header from the server\\nis_num\\xADeric()\\ntest to see if a value is number\\nexit()\\ncauses script to stop immedi\\xADately\\ntrim($\\xADstring)\\ntrims leading and trailing spaces\\nmysqli\\xAD_re\\xADal\"),\"\\xADesc\\xADape\\xAD_st\\xADrin\\xADg($\\xADstring)\\nescapes special characters\\nstr_re\\xADpla\\xADce('a', 'b', $string)\\nreplace a with b in a string\\nexplode(', ' , $string)\\nmake string into array\\nimplode(', \\\" $string)\\nmake array into string\\nsubstr ($string, start, len)\\ngrabs a substring\\npreg_m\\xADatc\\xADh('\\xADregex', $string)\\nmatches regular expres\\xADsions\\npreg_r\\xADepl\\xADace\\xAD('r\\xADegex', $replace, $string)\\nreplaces characters in a string by regex\"),React.createElement(MDXTag,{name:\"h2\",components:components,props:{\"id\":\"php-regex-functions\"}},\"PHP Regex Functions\"),React.createElement(MDXTag,{name:\"p\",components:components},\"ereg (pattern, str)\\nsplit (pattern, str)\\nereg_replace (pattern, replace, str)\\npreg_grep (pattern, arr)\\npreg_match (pattern, str)\\npreg_match_all (pattern, str, arr)\\npreg_replace (pattern, replace, str)\\npreg_split (pattern, str)\"),React.createElement(MDXTag,{name:\"h2\",components:components,props:{\"id\":\"php-string-functions\"}},\"PHP String Functions\"),React.createElement(MDXTag,{name:\"p\",components:components},\"crypt (str, salt)\\nexplode (sep, str)\\nimplode (glue, arr)\\nnl2br (str)\\nsprintf (frmt, args)\\nstrip_tags (str, allowed_tags)\\nstr_replace (search, replace, str)\\nstrpos (str, needle)\\nstrrev (str)\\nstrstr (str, needle)\\nstrtolower (str)\\nstrtoupper (str)\\nsubstr (string, start, len)\"),React.createElement(MDXTag,{name:\"h2\",components:components,props:{\"id\":\"php-file-system-functions\"}},\"PHP File System Functions\"),React.createElement(MDXTag,{name:\"p\",components:components},\"clearstatcache ()\\ncopy (source, dest)\\nfclose (handle)\\nfgets (handle, len)\\nfile (file)\\nfilemtime (file)\\nfilesize (file)\\nfile_exists (file)\\nfopen (file, mode)\\nfread (handle, len)\\nfwrite (handle, str)\\nreadfile (file)clearstatcache ()\\ncopy (source, dest)\\nfclose (handle)\\nfgets (handle, len)\\nfile (file)\\nfilemtime (file)\\nfilesize (file)\\nfile_exists (file)\\nfopen (file, mode)\\nfread (handle, len)\\nfwrite (handle, str)\\nreadfile (file)\"),React.createElement(MDXTag,{name:\"h2\",components:components,props:{\"id\":\"php-datetime-functions\"}},\"PHP Date/Time Functions\"),React.createElement(MDXTag,{name:\"p\",components:components},\"checkdate (month, day, year)\\ndate (format, timestamp)\\ngetdate (timestamp)\\nmktime (hr, min, sec, month, day, yr)\\nstrftime (formatstring, timestamp)\\nstrtotime (str)\\ntime ()\"),React.createElement(MDXTag,{name:\"h2\",components:components,props:{\"id\":\"php-date-formatting\"}},\"PHP Date Formatting\"),React.createElement(MDXTag,{name:\"p\",components:components},\"Y\\n4 digit year (2008)\\ny\\n2 digit year (08)\\nF\\nLong month (January)\\nM\\nShort month (Jan)\\nm\\nMonth \\u2074 (01 to 12)\\nn\\nMonth (1 to 12)\\nD\\nShort day name (Mon)\\nl\\nLong day name (Monday) (lowercase L)\\nd\\nDay \\u2074 (01 to 31)\\nj\\nDay (1 to 31)\"),React.createElement(MDXTag,{name:\"p\",components:components},\"h\\n12 Hour \\u2074 (01 to 12)\\ng\\n12 Hour (1 to 12)\\nH\\n24 Hour \\u2074 (00 to 23)\\nG\\n24 Hour (0 to 23)\\ni\\nMinutes \\u2074 (00 to 59)\\ns\\nSeconds \\u2074 (00 to 59)\"),React.createElement(MDXTag,{name:\"p\",components:components},\"w\\nDay of week \\xB9 (0 to 6)\\nz\\nDay of year (0 to 365)\\nW\\nWeek of year \\xB2 (1 to 53)\\nt\\nDays in month (28 to 31)\"),React.createElement(MDXTag,{name:\"p\",components:components},\"a\\nam or pm\\nA\\nAM or PM\\nB\\nSwatch Internet Time (000 to 999)\\nS\\nOrdinal Suffix (st, nd, rd, th)\"),React.createElement(MDXTag,{name:\"p\",components:components},\"T\\nTimezone of machine (GMT)\\nZ\\nTimezone offset (seconds)\\nO\\nGMT offset (hours) (+0200)\\nI\\nDaylight saving (1 or 0)\\nL\\nLeap year (1 or 0)\"),React.createElement(MDXTag,{name:\"p\",components:components},\"U\\nSeconds since Epoch \\xB3\\nc\\nISO 8601 (PHP 5) (2008-\\xAD07-\\xAD31T\\xAD18:\\xAD30:\\xAD13+\\xAD01:00)\\nr\\nRFC 2822 (Thu, 31 Jul 2008 18:30:13 +0100)\"),React.createElement(MDXTag,{name:\"h2\",components:components,props:{\"id\":\"accessing-deep-arrays-to-find-values\"}},\"Accessing deep arrays to find values\"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{\"className\":\"language-php\"}},\"$locations = Timber::get_terms('locations');\\n\\n        $data = [];\\n        $exclusion = [];\\n\\n        foreach($locations as $location) {\\n            $data[] = [\\n                \\\"location\\\" => $location,\\n                \\\"posts\\\" => Locations::getPostsForLocation($location,$count,$exclusion)\\n            ];\\n\\n            // add posts with current ids to array to check against\\n            foreach ($data as $key => $value) {\\n                if ($value[\\\"posts\\\"]) {\\n                    $posts = $value[\\\"posts\\\"];\\n                    foreach($posts as $key => $value) {\\n                        if (in_array($value->id, $exclusion)) {\\n                            unset($posts[$key]);\\n                        } else {\\n                            array_push($exclusion, $value->id);\\n                        }\\n                    }\\n                }\\n            }\\n        }\\n\")));}}]);return MDXContent;}(React.Component);export{MDXContent as default};MDXContent.__docgenInfo={\"description\":\"\",\"methods\":[],\"displayName\":\"MDXContent\"};",{"version":3,"sources":["/Users/okeeffe_d/Business/Documentation/manual/PHP/php-cheat-sheet.md"],"names":["React","MDXTag","MDXContent","props","layout","components","Component"],"mappings":"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","sourcesContent":["\n  import React from 'react'\n  import { MDXTag } from '@mdx-js/tag'\n  \n\nexport default class MDXContent extends React.Component {\n  constructor(props) {\n    super(props)\n    this.layout = null\n  }\n  render() {\n    const { components, ...props } = this.props\n\n    return <MDXTag\n             name=\"wrapper\"\n             \n             components={components}><MDXTag name=\"h1\" components={components} props={{\"id\":\"php-help-sheet\"}}>{`PHP Help Sheet`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"treehouse-php-classes\"}}>{`Treehouse PHP Classes`}</MDXTag>\n<MDXTag name=\"blockquote\" components={components}>\n<MDXTag name=\"p\" components={components} parentName=\"blockquote\">{`PHP OOP\nclasses\nrecipe.php\ncookbook.php`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-php\"}}>{`// recipe.php\n\n<?php\n\nclass Recipe\n{\n    private \\$title;\n    public \\$ingredients = array();\n    public \\$instruction = array();\n    public \\$yield;\n    public \\$tag = array();\n    public \\$source = 'Alena Holligan';\n\n    private \\$measurements = array(\n        \"tsp\",\n        \"tbsp\",\n        \"cup\",\n        \"oz\",\n        \"lb\",\n        \"fl oz\",\n        \"pint\",\n        \"quart\",\n        \"gallon\"\n    );\n\n    public function displayRecipe()\n    {\n        return \\$this->title . \"by\" . \\$this->source;\n    }\n\n    public function addIngredient(\\$item, \\$amount = null, \\$measure=null)\n    {\n        if (\\$amount != null && !is_float(\\$amount) && !is_int(\\$amount)) {\n            exit(\"The amount must be a float: \") . gettype(\\$amount) . \" \\$amount given\");\n        }\n\n        if (\\$measure != null && !in_array(strtolower(\\$measure), \\$this->measurements)) {\n            exit(\"Please enter a valid measurement: \" . implode(\", \", \\$this->measurements));\n        }\n\n        \\$this->ingredients[] = array (\n            \"item\" => ucwords(\\$item),\n            \"amount\" => \\$amount,\n            \"measure\" => strtolower(\\$measure)\n        );\n    }\n\n    public function getIngredients()\n    {\n        return \\$this->ingredients;\n    }\n\n    public function setTitle(\\$title)\n    {\n        \\$this->title = ucword(\\$title);\n    }\n\n    public function getTitle()\n    {\n        return \\$this->title;\n    }\n\n}\n\n?>\n\n// cookbook.php\n\n<?php\n\ninclude \"classes/recipes.php\";\n\n\\$recipe1 = new Recipe();\necho \\$recipe1->source;\n\\$recipe1->source(\"Grandma Holligan\");\necho \\$recipe1->source;\n\\$recipe1->setTitle(\"My first recipe\");\n\\$recipe1->getTitle();\n\n\\$recipe1->addIngredient(\"egg\",1);\n\\$recipe1->addIngredient(\"flour\",2,\"cup\");\n\n\\$recipe2 = new Recipe();\n\\$recipe2->source = \"Betty Crocker\";\n\\$recipe1->setTitle = \"My second recipe\";\n\necho \\$recipe1->source;\necho \\$recipe2->source;\n\necho \\$recipe1->displayRecipe();\necho \\$recipe2->displayRecipe();\n\nforeach (\\$recipe1->getIngredients() as \\$ing) {\n    echo \"\\n\" . \\$ing[\"amount\"] . \" \" . \\$ing[\"measure\"] . \" \" . \\$ing[\"item\"];\n}\n\nvar_dump(\\$recipe1);\n\n?>\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"php-access-modifiers\"}}>{`PHP Access Modifiers`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-php\"}}>{`<?php\n\nclass Render {\n\n  public static function displayDimensions(\\$size) {\n      return \\$size[0] . \" x \" . \\$size[1];\n  }\n\n  public static function detailsKitchen(\\$room) {\n       return \"Kitchen Dimensions: \" . self::displayDimensions(\\$room->getDimensions());\n  }\n\n}\n\n?>\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"php-magic-methods-and-constants\"}}>{`PHP Magic Methods and Constants`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Some magic constants:`}</MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"strong\" components={components} parentName=\"p\">{`CLASS`}</MDXTag>\n<MDXTag name=\"strong\" components={components} parentName=\"p\">{`FILE`}</MDXTag></MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-php\"}}>{`<?php\nclass Example\n{\n\n    public function __construct(\\$title = null)\n    {\n        \\$this->setTitle(\\$title);\n    }\n\n    public function __toString()\n    {\n        \\$output = \"You are calling a \" . __CLASS__ . \" object with the title \\\"\";\n        \\$output .= \\$this->getTitle() . \"\\\"\";\n        \\$output .= \"\\nIt is stored in \" . basename(__FILE__) . \" at \" . __DIR__ . \".\";\n        \\$output .= \"\\nThis display is from line \" . __LINE__ . \" in method \" . __METHOD__;\n        \\$output .= \"\\nThe following methods are available for objects of this class: \\n\";\n        \\$output .= implode(\"\\n\", get_class_methods(__CLASS__));\n        return \\$output;\n    }\n}\n\nclass Render\n{\n\n    public function __toString()\n    {\n        \\$output = \"The following methods are available for \" . __CLASS__ . \" objects: \\n\";\n        \\$output .= implode(\"\\n\", get_class_methods(__CLASS__));\n        return \\$output;\n    }\n}\n\n\\$example = new Example(\"Name\");\necho \\$example;\n\n?>\n\n<?php\n\nclass Fish\n{\n    public \\$common_name;\n    public \\$flavor;\n    public \\$record_weight;\n\n    public function __construct(\\$name, \\$flavor, \\$record) {\n      \\$this->common_name = \\$name;\n      \\$this->flavor = \\$flavor;\n      \\$this->record_weight = \\$record;\n    }\n\n    public function getInfo() {\n      return \"A {\\$this->common_name} is an {\\$this->flavor} flavored fish. The world record weight is {\\$this->record_weight}.\";\n    }\n}\n\n\\$bass = new Fish(\"Largemouth Bass\", \"Excellent\", \"22 pounds 5 ounces\");\n\n?>\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"php-collections\"}}>{`PHP Collections`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`recipecollection.php`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-php\"}}>{`<?\n\nclass RecipeCollection\n{\n    private \\$title;\n    private \\$recipes = array();\n\n    // has constructor here and setter and getters\n\n    public function addRecipe(\\$recipe) {\n        \\$this->recipes[] = \\$recipe;\n    }\n\n    public function getRecipe() {\n        return \\$this->recipes;\n    }\n}\n\n?>\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"php-arrays\"}}>{`PHP Arrays`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Create\n\\$myArray = array();`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Push into\n\\$myArray[] = \"­Som­eth­ing­\";`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Push to associ­ative\n\\$myArr­ay`}{`[­'key']`}{` = \"­Val­ue\";`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Create numeric\n\\$myArray = array(­'va­lue', 'value2');`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Create associ­ative\n\\$a = array(­'ke­y'=­>'v­al');`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Print from numeric\necho \\$myArr­ay`}{`[0]`}{`;`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Print from associ­ative\necho \\$myArr­ay`}{`[­'key']`}{`;`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Associ­ative arrays\nKeys are strings`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Numeric arrays\nKeys are numbers: 0,1,2,3,4`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"php-array-functions\"}}>{`PHP Array Functions`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`array_diff (arr1, arr2 ...)\narray_filter (arr, function)\narray_flip (arr)\narray_intersect (arr1, arr2 ...)\narray_merge (arr1, arr2 ...)\narray_pop (arr)\narray_push (arr, var1, var2 ...)\narray_reverse (arr)\narray_keys(array \\$array [, mixed \\$search_value = null `}{`[, bool \\$strict = false ]`}{`] )\narray_search (needle, arr)\narray_walk (arr, function)\ncount (count)\nin_array (needle, haystack)`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`// ARRAY EXAMPLES`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-php\"}}>{`<?php\n    // add code below this comment\nclass Subdivision\n{\n  public \\$houses = array();\n\n  public function filterHouseColor(\\$color)\n  {\n    \\$return = array();\n    foreach (\\$this->houses as \\$house) {\n      if (\\$house->roof_color == \\$color || \\$house->wall_color == \\$color) {\n        \\$return[] = \\$house;\n      }\n    }\n    return \\$return;\n  }\n}\n\n?>\n\n<? php\n\npublic function getCombinedIngredients()\n{\n    \\$ingredients = array();\n    foreach (\\$this->recipes as \\$recipe) {\n        foreach(\\$recipe->getIngredients() as \\$ing) {\n            \\$item = \\$ing[\"item\"];\n\n            if (strpos(\\$item, \",\")) {\n                \\$item = strstr(\\$item, \",\", true);\n            }\n\n            if (in_array(\\$item.\"s\", \\$ingredients)) {\n                \\$item.=\"s\";\n            } else if (in_array(substr(\\$item, 0, -1), \\$ingredients)) {\n                \\$item = substr(\\$item, 0, -1);\n            }\n\n            \\$ingredients[\\$item] = array (\n                \\$ing[\"amount\"],\n                \\$ing[\"measure\"]\n            );\n        }\n    }\n\n    return \\$ingredients;\n}\n\n?>\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"php-control-flow-logic\"}}>{`PHP Control Flow Logic`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`if (condi­tion) {\n... }\nelseif (condi­tion) {\n... }\nelse {\n... }`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`FOR loop\nfor (initi­alize; condition; update) { ... }`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`WHILE loop\nwhile (condi­tion) { ... }`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`FOREACH loop\nforeach (\\$array as \\$value) { ... }`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`DO WHILE\ndo { ... ;} while (condi­tion)`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`SWITCH (\\$s) {\ncase 1:\n...\nbreak;\ncase 2:\n...\nbreak;\ndefault:\n...\n}`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"php-ifelseif-statements-within-a-web-document\"}}>{`PHP if/elseif statements within a web document`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-php\"}}>{`<?php\n\n\\$bool = false;\n\n?>\n\n<?php if (\\$bool) : ?>\n\n    <div>\n        <p><?php echo \"Bool is true\"?></p>\n    </div>\n\n<?php elseif (!\\$bool) : ?>\n\n    <div>\n        <p><?php echo \"Elseif works\"?></p>\n    </div>\n\n<?php else : ?>\n\n    <div>\n        <p><?php echo \"Bool is false\"?></p>\n    </div>\n\n<?php endif; ?>\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"php-general-functions\"}}>{`PHP General Functions`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`isset()\ntest for variable exists\nempty()\ntest for empty variable\nmail(\\$to, \\$subject, \\$msg, 'From: ' . \\$email)\nmail function\nmysqli­`}<MDXTag name=\"em\" components={components} parentName=\"p\">{`fe­tch­_ar­ray­(\\$r­esult)\nfetch each row of a query (in \\$result)\nheader()\nsend a header from the server\nis_num­eric()\ntest to see if a value is number\nexit()\ncauses script to stop immedi­ately\ntrim(\\$­string)\ntrims leading and trailing spaces\nmysqli­_re­al`}</MDXTag>{`­esc­ape­_st­rin­g(\\$­string)\nescapes special characters\nstr_re­pla­ce('a', 'b', \\$string)\nreplace a with b in a string\nexplode(', ' , \\$string)\nmake string into array\nimplode(', \" \\$string)\nmake array into string\nsubstr (\\$string, start, len)\ngrabs a substring\npreg_m­atc­h('­regex', \\$string)\nmatches regular expres­sions\npreg_r­epl­ace­('r­egex', \\$replace, \\$string)\nreplaces characters in a string by regex`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"php-regex-functions\"}}>{`PHP Regex Functions`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`ereg (pattern, str)\nsplit (pattern, str)\nereg_replace (pattern, replace, str)\npreg_grep (pattern, arr)\npreg_match (pattern, str)\npreg_match_all (pattern, str, arr)\npreg_replace (pattern, replace, str)\npreg_split (pattern, str)`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"php-string-functions\"}}>{`PHP String Functions`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`crypt (str, salt)\nexplode (sep, str)\nimplode (glue, arr)\nnl2br (str)\nsprintf (frmt, args)\nstrip_tags (str, allowed_tags)\nstr_replace (search, replace, str)\nstrpos (str, needle)\nstrrev (str)\nstrstr (str, needle)\nstrtolower (str)\nstrtoupper (str)\nsubstr (string, start, len)`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"php-file-system-functions\"}}>{`PHP File System Functions`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`clearstatcache ()\ncopy (source, dest)\nfclose (handle)\nfgets (handle, len)\nfile (file)\nfilemtime (file)\nfilesize (file)\nfile_exists (file)\nfopen (file, mode)\nfread (handle, len)\nfwrite (handle, str)\nreadfile (file)clearstatcache ()\ncopy (source, dest)\nfclose (handle)\nfgets (handle, len)\nfile (file)\nfilemtime (file)\nfilesize (file)\nfile_exists (file)\nfopen (file, mode)\nfread (handle, len)\nfwrite (handle, str)\nreadfile (file)`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"php-datetime-functions\"}}>{`PHP Date/Time Functions`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`checkdate (month, day, year)\ndate (format, timestamp)\ngetdate (timestamp)\nmktime (hr, min, sec, month, day, yr)\nstrftime (formatstring, timestamp)\nstrtotime (str)\ntime ()`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"php-date-formatting\"}}>{`PHP Date Formatting`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Y\n4 digit year (2008)\ny\n2 digit year (08)\nF\nLong month (January)\nM\nShort month (Jan)\nm\nMonth ⁴ (01 to 12)\nn\nMonth (1 to 12)\nD\nShort day name (Mon)\nl\nLong day name (Monday) (lowercase L)\nd\nDay ⁴ (01 to 31)\nj\nDay (1 to 31)`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`h\n12 Hour ⁴ (01 to 12)\ng\n12 Hour (1 to 12)\nH\n24 Hour ⁴ (00 to 23)\nG\n24 Hour (0 to 23)\ni\nMinutes ⁴ (00 to 59)\ns\nSeconds ⁴ (00 to 59)`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`w\nDay of week ¹ (0 to 6)\nz\nDay of year (0 to 365)\nW\nWeek of year ² (1 to 53)\nt\nDays in month (28 to 31)`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`a\nam or pm\nA\nAM or PM\nB\nSwatch Internet Time (000 to 999)\nS\nOrdinal Suffix (st, nd, rd, th)`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`T\nTimezone of machine (GMT)\nZ\nTimezone offset (seconds)\nO\nGMT offset (hours) (+0200)\nI\nDaylight saving (1 or 0)\nL\nLeap year (1 or 0)`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`U\nSeconds since Epoch ³\nc\nISO 8601 (PHP 5) (2008-­07-­31T­18:­30:­13+­01:00)\nr\nRFC 2822 (Thu, 31 Jul 2008 18:30:13 +0100)`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"accessing-deep-arrays-to-find-values\"}}>{`Accessing deep arrays to find values`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-php\"}}>{`\\$locations = Timber::get_terms('locations');\n\n        \\$data = [];\n        \\$exclusion = [];\n\n        foreach(\\$locations as \\$location) {\n            \\$data[] = [\n                \"location\" => \\$location,\n                \"posts\" => Locations::getPostsForLocation(\\$location,\\$count,\\$exclusion)\n            ];\n\n            // add posts with current ids to array to check against\n            foreach (\\$data as \\$key => \\$value) {\n                if (\\$value[\"posts\"]) {\n                    \\$posts = \\$value[\"posts\"];\n                    foreach(\\$posts as \\$key => \\$value) {\n                        if (in_array(\\$value->id, \\$exclusion)) {\n                            unset(\\$posts[\\$key]);\n                        } else {\n                            array_push(\\$exclusion, \\$value->id);\n                        }\n                    }\n                }\n            }\n        }\n`}</MDXTag></MDXTag>\n           </MDXTag>\n  }\n}\n  "]}]}