{"remainingRequest":"/Users/okeeffe_d/Business/Documentation/node_modules/babel-loader/lib/index.js?{\"presets\":[[\"/Users/okeeffe_d/Business/Documentation/node_modules/babel-preset-docz/dist/index.js\",{\"flow\":true,\"typescript\":false,\"parseProps\":true}]],\"plugins\":[[\"/Users/okeeffe_d/Business/Documentation/node_modules/docz-utils/lib/named-asset-import.js\",{\"loaderMap\":{\"svg\":{\"ReactComponent\":\"@svgr/webpack?-prettier,-svgo![path]\"}}}]],\"babelrc\":false,\"cacheCompression\":true,\"compact\":true}!/Users/okeeffe_d/Business/Documentation/manual/Lift/react-native.md","dependencies":[{"path":"/Users/okeeffe_d/Business/Documentation/manual/Lift/react-native.md","mtime":1548209344362},{"path":"/Users/okeeffe_d/Business/Documentation/node_modules/cache-loader/dist/cjs.js","mtime":1548134640245},{"path":"/Users/okeeffe_d/Business/Documentation/node_modules/babel-loader/lib/index.js","mtime":1548134640227}],"contextDependencies":[],"result":["function _typeof(obj){if(typeof Symbol===\"function\"&&typeof Symbol.iterator===\"symbol\"){_typeof=function _typeof(obj){return typeof obj;};}else{_typeof=function _typeof(obj){return obj&&typeof Symbol===\"function\"&&obj.constructor===Symbol&&obj!==Symbol.prototype?\"symbol\":typeof obj;};}return _typeof(obj);}function _objectWithoutProperties(source,excluded){if(source==null)return{};var target=_objectWithoutPropertiesLoose(source,excluded);var key,i;if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++){key=sourceSymbolKeys[i];if(excluded.indexOf(key)>=0)continue;if(!Object.prototype.propertyIsEnumerable.call(source,key))continue;target[key]=source[key];}}return target;}function _objectWithoutPropertiesLoose(source,excluded){if(source==null)return{};var target={};var sourceKeys=Object.keys(source);var key,i;for(i=0;i<sourceKeys.length;i++){key=sourceKeys[i];if(excluded.indexOf(key)>=0)continue;target[key]=source[key];}return target;}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\");}}function _defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}function _createClass(Constructor,protoProps,staticProps){if(protoProps)_defineProperties(Constructor.prototype,protoProps);if(staticProps)_defineProperties(Constructor,staticProps);return Constructor;}function _possibleConstructorReturn(self,call){if(call&&(_typeof(call)===\"object\"||typeof call===\"function\")){return call;}return _assertThisInitialized(self);}function _assertThisInitialized(self){if(self===void 0){throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");}return self;}function _getPrototypeOf(o){_getPrototypeOf=Object.setPrototypeOf?Object.getPrototypeOf:function _getPrototypeOf(o){return o.__proto__||Object.getPrototypeOf(o);};return _getPrototypeOf(o);}function _inherits(subClass,superClass){if(typeof superClass!==\"function\"&&superClass!==null){throw new TypeError(\"Super expression must either be null or a function\");}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,writable:true,configurable:true}});if(superClass)_setPrototypeOf(subClass,superClass);}function _setPrototypeOf(o,p){_setPrototypeOf=Object.setPrototypeOf||function _setPrototypeOf(o,p){o.__proto__=p;return o;};return _setPrototypeOf(o,p);}import React from'react';import{MDXTag}from'@mdx-js/tag';var MDXContent=/*#__PURE__*/function(_React$Component){_inherits(MDXContent,_React$Component);function MDXContent(props){var _this;_classCallCheck(this,MDXContent);_this=_possibleConstructorReturn(this,_getPrototypeOf(MDXContent).call(this,props));_this.layout=null;return _this;}_createClass(MDXContent,[{key:\"render\",value:function render(){var _this$props=this.props,components=_this$props.components,props=_objectWithoutProperties(_this$props,[\"components\"]);return React.createElement(MDXTag,{name:\"wrapper\",components:components},React.createElement(MDXTag,{name:\"h1\",components:components,props:{\"id\":\"lift---react-native\"}},\"Lift - React Native\"),React.createElement(MDXTag,{name:\"h2\",components:components,props:{\"id\":\"process-to-get-from-a-to-b\"}},\"Process to get from A to B\"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{\"className\":\"language-shell\"}},\"expo init [project-name]\\ncd [project-name]\\nprj react-native\\ntouch up.yml\\n# Add in some lift code\\nkratos install lift react-native\\nshotgun run\\nlift up\\nshotgun run\\nawsmobile init -y\\nawsmobile publish\\nexpo start --lan\\n\")),React.createElement(MDXTag,{name:\"h3\",components:components,props:{\"id\":\"quick-example\"}},\"Quick Example\"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{\"className\":\"language-yml\"}},\"react-native:\\n  - node:\\n      components:\\n        - CounterOne\\n        - LoginTwo\\n        - OnboardingThree\\n        - OnboardingFive\\n      screens:\\n        - screenName: Login\\n          components:\\n            - LoginTwo\\n        - screenName: Counter\\n          components:\\n            - CounterOne\\n        - screenName: Info\\n          components:\\n            - OnboardingThree\\n        - screenName: Onboarding\\n          components:\\n            - OnboardingFive\\n      router:\\n        stackName: StackMain\\n        initialRouteName: StackTabBar\\n        navigator:\\n          - StackTabBar:\\n              stackName: StackTabBar\\n              initialRouteName: Login\\n              navigator:\\n                - Login:\\n                    navigator: []\\n                - Counter:\\n                    navigator: []\\n                - Info:\\n                    navigator: []\\n                - Onboarding:\\n                    navigator: []\\n\")),React.createElement(MDXTag,{name:\"h2\",components:components,props:{\"id\":\"live-example-to-use\"}},\"Live example to use\"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{\"className\":\"language-yml\"}},\"react-native:\\n  - node:\\n      components:\\n        - CounterOne\\n        - LoginTwo\\n        - OnboardingThree\\n        - OnboardingFive\\n      screens:\\n        - screenName: Login\\n          components:\\n            - LoginTwo\\n        - screenName: Counter\\n          components:\\n            - CounterOne\\n        - screenName: Info\\n          components:\\n            - OnboardingThree\\n        - screenName: Onboarding\\n          components:\\n            - OnboardingFive\\n      router:\\n        stackName: StackMain\\n        initialRouteName: StackTabBar\\n        navigator:\\n          - StackTabBar:\\n              stackName: StackTabBar\\n              initialRouteName: Login\\n              navigator:\\n                - Login:\\n                    navigator: []\\n                - Counter:\\n                    navigator: []\\n                - Info:\\n                    navigator: []\\n                - Onboarding:\\n                    navigator: []\\n\")),React.createElement(MDXTag,{name:\"h2\",components:components,props:{\"id\":\"layout\"}},\"Layout\"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{\"className\":\"language-yml\"}},\"react-native:\\n  - node:\\n      projectName: App example\\n      bucketName: app-example\\n      components:\\n        - LoginOne\\n        - OnboardingOne\\n      screens:\\n        - screenName: NewsFeed\\n          detailScreen: NewsFeedDetail\\n          components:\\n            - LoginOne\\n        - screenName: ScreenOne\\n          components:\\n            - OnboardingOne\\n      router:\\n        stackName: StackRoot\\n        initialRouteName: StackTabBar\\n        navigator:\\n          - StackTabBar:\\n              stackName: StackTabBar\\n              initialRouteName: ScreenOne\\n              navigator:\\n                - StackFeed:\\n                    stackName: StackFeed\\n                    initialRouteName: ScreenOne\\n                    navigator:\\n                      - ScreenOne:\\n                          navigator: []\\n                      - ScreenTwo:\\n                          navigator: []\\n                - StackInfo:\\n                    stackName: StackInfo\\n                    initialRouteName: ScreenOne\\n                    navigator:\\n                      - ScreenThree:\\n                          navigator: []\\n                      - ScreenFour:\\n                          navigator: []\\n                - Profile:\\n                    navigator: []\\n      colors:\\n        cBlack: '#000'\\n        cWhite: '#FFF'\\n        cPrimary: '#ECF0F1'\\n        cSecondary: '#BDC3C7'\\n        cLink: '#3498DB'\\n        cInfo: '#3498DB'\\n        cSuccess: '#2ECC71'\\n        cError: '#E74C3C'\\n        cWarning: '#F1C40F'\\n        cLight: '#ECF0F1'\\n        cDark: '#222'\\n      fonts:\\n        fPrimary: Open Sans\\n        fSecondary: Open Sans\\n\")),React.createElement(MDXTag,{name:\"h3\",components:components,props:{\"id\":\"importing-components\"}},\"Importing components\"),React.createElement(MDXTag,{name:\"p\",components:components},\"The following will attempt to kratos install the components required:\"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{\"className\":\"language-yml\"}},\"react-native:\\n  - node:\\n      projectName: App example\\n      bucketName: app-example\\n      components:\\n        - LoginOne\\n        - OnboardingOne\\n\")),React.createElement(MDXTag,{name:\"h3\",components:components,props:{\"id\":\"router\"}},\"Router\"),React.createElement(MDXTag,{name:\"p\",components:components},\"To build out the router, recursively assign some details. If the navigator is not empty, it will iterate. If the name includes 'TabBar', it will build a tab bar.\"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{\"className\":\"language-yml\"}},\"react-native:\\n  - node:\\n      router:\\n        stackName: StackRoot\\n        initialRouteName: StackTabBar\\n        navigator:\\n          - StackTabBar:\\n              stackName: StackTabBar\\n              initialRouteName: ScreenOne\\n              navigator:\\n                - StackFeed:\\n                    stackName: StackFeed\\n                    initialRouteName: ScreenOne\\n                    navigator:\\n                      - ScreenOne:\\n                          navigator: []\\n                      - ScreenTwo:\\n                          navigator: []\\n                - StackInfo:\\n                    stackName: StackInfo\\n                    initialRouteName: ScreenOne\\n                    navigator:\\n                      - ScreenThree:\\n                          navigator: []\\n                      - ScreenFour:\\n                          navigator: []\\n                - Profile:\\n                    navigator: []\\n\")),React.createElement(MDXTag,{name:\"h3\",components:components,props:{\"id\":\"screens\"}},\"Screens\"),React.createElement(MDXTag,{name:\"p\",components:components},\"If you want to build out screens, do the following:\"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{\"className\":\"language-yml\"}},\"react-native:\\n  - node:\\n      screens:\\n        - screenName: NewsFeed\\n          detailScreen: NewsFeedDetail\\n          components:\\n            - LoginOne\\n        - screenName: ScreenOne\\n          components:\\n            - OnboardingOne\\n\")));}}]);return MDXContent;}(React.Component);export{MDXContent as default};MDXContent.__docgenInfo={\"description\":\"\",\"methods\":[],\"displayName\":\"MDXContent\"};",{"version":3,"sources":["/Users/okeeffe_d/Business/Documentation/manual/Lift/react-native.md"],"names":["React","MDXTag","MDXContent","props","layout","components","Component"],"mappings":"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","sourcesContent":["\n  import React from 'react'\n  import { MDXTag } from '@mdx-js/tag'\n  \n\nexport default class MDXContent extends React.Component {\n  constructor(props) {\n    super(props)\n    this.layout = null\n  }\n  render() {\n    const { components, ...props } = this.props\n\n    return <MDXTag\n             name=\"wrapper\"\n             \n             components={components}><MDXTag name=\"h1\" components={components} props={{\"id\":\"lift---react-native\"}}>{`Lift - React Native`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"process-to-get-from-a-to-b\"}}>{`Process to get from A to B`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-shell\"}}>{`expo init [project-name]\ncd [project-name]\nprj react-native\ntouch up.yml\n# Add in some lift code\nkratos install lift react-native\nshotgun run\nlift up\nshotgun run\nawsmobile init -y\nawsmobile publish\nexpo start --lan\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"quick-example\"}}>{`Quick Example`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-yml\"}}>{`react-native:\n  - node:\n      components:\n        - CounterOne\n        - LoginTwo\n        - OnboardingThree\n        - OnboardingFive\n      screens:\n        - screenName: Login\n          components:\n            - LoginTwo\n        - screenName: Counter\n          components:\n            - CounterOne\n        - screenName: Info\n          components:\n            - OnboardingThree\n        - screenName: Onboarding\n          components:\n            - OnboardingFive\n      router:\n        stackName: StackMain\n        initialRouteName: StackTabBar\n        navigator:\n          - StackTabBar:\n              stackName: StackTabBar\n              initialRouteName: Login\n              navigator:\n                - Login:\n                    navigator: []\n                - Counter:\n                    navigator: []\n                - Info:\n                    navigator: []\n                - Onboarding:\n                    navigator: []\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"live-example-to-use\"}}>{`Live example to use`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-yml\"}}>{`react-native:\n  - node:\n      components:\n        - CounterOne\n        - LoginTwo\n        - OnboardingThree\n        - OnboardingFive\n      screens:\n        - screenName: Login\n          components:\n            - LoginTwo\n        - screenName: Counter\n          components:\n            - CounterOne\n        - screenName: Info\n          components:\n            - OnboardingThree\n        - screenName: Onboarding\n          components:\n            - OnboardingFive\n      router:\n        stackName: StackMain\n        initialRouteName: StackTabBar\n        navigator:\n          - StackTabBar:\n              stackName: StackTabBar\n              initialRouteName: Login\n              navigator:\n                - Login:\n                    navigator: []\n                - Counter:\n                    navigator: []\n                - Info:\n                    navigator: []\n                - Onboarding:\n                    navigator: []\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"layout\"}}>{`Layout`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-yml\"}}>{`react-native:\n  - node:\n      projectName: App example\n      bucketName: app-example\n      components:\n        - LoginOne\n        - OnboardingOne\n      screens:\n        - screenName: NewsFeed\n          detailScreen: NewsFeedDetail\n          components:\n            - LoginOne\n        - screenName: ScreenOne\n          components:\n            - OnboardingOne\n      router:\n        stackName: StackRoot\n        initialRouteName: StackTabBar\n        navigator:\n          - StackTabBar:\n              stackName: StackTabBar\n              initialRouteName: ScreenOne\n              navigator:\n                - StackFeed:\n                    stackName: StackFeed\n                    initialRouteName: ScreenOne\n                    navigator:\n                      - ScreenOne:\n                          navigator: []\n                      - ScreenTwo:\n                          navigator: []\n                - StackInfo:\n                    stackName: StackInfo\n                    initialRouteName: ScreenOne\n                    navigator:\n                      - ScreenThree:\n                          navigator: []\n                      - ScreenFour:\n                          navigator: []\n                - Profile:\n                    navigator: []\n      colors:\n        cBlack: '#000'\n        cWhite: '#FFF'\n        cPrimary: '#ECF0F1'\n        cSecondary: '#BDC3C7'\n        cLink: '#3498DB'\n        cInfo: '#3498DB'\n        cSuccess: '#2ECC71'\n        cError: '#E74C3C'\n        cWarning: '#F1C40F'\n        cLight: '#ECF0F1'\n        cDark: '#222'\n      fonts:\n        fPrimary: Open Sans\n        fSecondary: Open Sans\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"importing-components\"}}>{`Importing components`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`The following will attempt to kratos install the components required:`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-yml\"}}>{`react-native:\n  - node:\n      projectName: App example\n      bucketName: app-example\n      components:\n        - LoginOne\n        - OnboardingOne\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"router\"}}>{`Router`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`To build out the router, recursively assign some details. If the navigator is not empty, it will iterate. If the name includes 'TabBar', it will build a tab bar.`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-yml\"}}>{`react-native:\n  - node:\n      router:\n        stackName: StackRoot\n        initialRouteName: StackTabBar\n        navigator:\n          - StackTabBar:\n              stackName: StackTabBar\n              initialRouteName: ScreenOne\n              navigator:\n                - StackFeed:\n                    stackName: StackFeed\n                    initialRouteName: ScreenOne\n                    navigator:\n                      - ScreenOne:\n                          navigator: []\n                      - ScreenTwo:\n                          navigator: []\n                - StackInfo:\n                    stackName: StackInfo\n                    initialRouteName: ScreenOne\n                    navigator:\n                      - ScreenThree:\n                          navigator: []\n                      - ScreenFour:\n                          navigator: []\n                - Profile:\n                    navigator: []\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"screens\"}}>{`Screens`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`If you want to build out screens, do the following:`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-yml\"}}>{`react-native:\n  - node:\n      screens:\n        - screenName: NewsFeed\n          detailScreen: NewsFeedDetail\n          components:\n            - LoginOne\n        - screenName: ScreenOne\n          components:\n            - OnboardingOne\n`}</MDXTag></MDXTag>\n           </MDXTag>\n  }\n}\n  "]}]}