{"remainingRequest":"/Users/okeeffe_d/Project-Imposter/developer-notes/node_modules/docz-core/node_modules/babel-loader/lib/index.js??ref--6-1!/Users/okeeffe_d/Project-Imposter/developer-notes/node_modules/@mdx-js/loader/index.js??ref--6-2!/Users/okeeffe_d/Project-Imposter/developer-notes/node_modules/source-map-loader/index.js!/Users/okeeffe_d/Project-Imposter/developer-notes/manual/Testing/puppeteer.md","dependencies":[{"path":"/Users/okeeffe_d/Project-Imposter/developer-notes/manual/Testing/puppeteer.md","mtime":1548282824946},{"path":"/Users/okeeffe_d/Project-Imposter/developer-notes/node_modules/cache-loader/dist/cjs.js","mtime":1561535530324},{"path":"/Users/okeeffe_d/Project-Imposter/developer-notes/node_modules/docz-core/node_modules/babel-loader/lib/index.js","mtime":1560300163820},{"path":"/Users/okeeffe_d/Project-Imposter/developer-notes/node_modules/@mdx-js/loader/index.js","mtime":1561535530532},{"path":"/Users/okeeffe_d/Project-Imposter/developer-notes/node_modules/source-map-loader/index.js","mtime":1548285283521}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9vYmplY3RXaXRob3V0UHJvcGVydGllcyBmcm9tIi9Vc2Vycy9va2VlZmZlX2QvUHJvamVjdC1JbXBvc3Rlci9kZXZlbG9wZXItbm90ZXMvbm9kZV9tb2R1bGVzL2JhYmVsLXByZXNldC1yZWFjdC1hcHAvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzIjsvKiBAanN4IG1keCAqL2ltcG9ydCBSZWFjdCBmcm9tJ3JlYWN0JztpbXBvcnR7bWR4fWZyb20nQG1keC1qcy9yZWFjdCc7LyogQGpzeCBtZHggKi92YXIgbWFrZVNob3J0Y29kZT1mdW5jdGlvbiBtYWtlU2hvcnRjb2RlKG5hbWUpe3JldHVybiBmdW5jdGlvbiBNRFhEZWZhdWx0U2hvcnRjb2RlKHByb3BzKXtjb25zb2xlLndhcm4oIkNvbXBvbmVudCAiK25hbWUrIiB3YXMgbm90IGltcG9ydGVkLCBleHBvcnRlZCwgb3IgcHJvdmlkZWQgYnkgTURYUHJvdmlkZXIgYXMgZ2xvYmFsIHNjb3BlIik7cmV0dXJuIG1keCgiZGl2Iixwcm9wcyk7fTt9O3ZhciBsYXlvdXRQcm9wcz17fTt2YXIgTURYTGF5b3V0PSJ3cmFwcGVyIjtleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBNRFhDb250ZW50KF9yZWYpe3ZhciBjb21wb25lbnRzPV9yZWYuY29tcG9uZW50cyxwcm9wcz1fb2JqZWN0V2l0aG91dFByb3BlcnRpZXMoX3JlZixbImNvbXBvbmVudHMiXSk7cmV0dXJuIG1keChNRFhMYXlvdXQsT2JqZWN0LmFzc2lnbih7fSxsYXlvdXRQcm9wcyxwcm9wcyx7Y29tcG9uZW50czpjb21wb25lbnRzLG1keFR5cGU6Ik1EWExheW91dCJ9KSxtZHgoImhyIixudWxsKSxtZHgoInAiLG51bGwsIkF1dGhvcjogRGVubmlzIE8nS2VlZmZlIiksbWR4KCJoMiIseyJpZCI6InNlY3Rpb24tdGVzdGluZyJ9LCJTZWN0aW9uOiBUZXN0aW5nIiksbWR4KCJoMSIseyJpZCI6InB1cHBldGVlciJ9LCJQdXBwZXRlZXIiKSxtZHgoImgyIix7ImlkIjoicmVzb3VyY2VzIn0sIlJlc291cmNlcyIpLG1keCgidWwiLG51bGwsbWR4KCJsaSIse3BhcmVudE5hbWU6InVsIn0sbWR4KCJhIixPYmplY3QuYXNzaWduKHtwYXJlbnROYW1lOiJsaSJ9LHsiaHJlZiI6Imh0dHBzOi8vbW9jaGFqcy5vcmcvIn0pLCJNb2NoYSBXZWJzaXRlIikpLG1keCgibGkiLHtwYXJlbnROYW1lOiJ1bCJ9LG1keCgiYSIsT2JqZWN0LmFzc2lnbih7cGFyZW50TmFtZToibGkifSx7ImhyZWYiOiJodHRwOi8vd3d3LmNoYWlqcy5jb20vYXBpLyJ9KSwiQ2hhaSBBUEkiKSksbWR4KCJsaSIse3BhcmVudE5hbWU6InVsIn0sbWR4KCJhIixPYmplY3QuYXNzaWduKHtwYXJlbnROYW1lOiJsaSJ9LHsiaHJlZiI6Imh0dHA6Ly9haXJibmIuaW8vZW56eW1lL2RvY3MvYXBpLyJ9KSwiRW56eW1lIEFQSSIpKSxtZHgoImxpIix7cGFyZW50TmFtZToidWwifSxtZHgoImEiLE9iamVjdC5hc3NpZ24oe3BhcmVudE5hbWU6ImxpIn0seyJocmVmIjoiaHR0cHM6Ly9naXRodWIuY29tL0dvb2dsZUNocm9tZS9wdXBwZXRlZXIvYmxvYi9tYXN0ZXIvZG9jcy9hcGkubWQifSksIlB1cHBldGVlciBBUEkiKSkpLG1keCgiaDIiLHsiaWQiOiJ1c2FnZSJ9LCJVc2FnZSIpLG1keCgicCIsbnVsbCwiVG8gdGVzdCB0aGUgVUkgaXRzZWxmLCB3ZSBjYW4gdXNlIFB1cHBldGVlciwgQ2hyb21lJ3MgSGVhZGxlc3MgQnJvd3NlciB0byBldmFsdWF0ZSBvbiB0aGUgVUkgaXRzZWxmLiBQdXBwZXRlZXIgY2FuIGFsc28gYmUgc2V0IHRvIGhhdmUgIixtZHgoImlubGluZUNvZGUiLHtwYXJlbnROYW1lOiJwIn0sImhlYWRsZXNzOiBmYWxzZSIpLCIsIGFsbG93aW5nIHRoZSB1c2VyIHRvIHJlY29yZCBvciB3YXRjaCB0aGUgdGVzdCBvbiB0aGVpciBzY3JlZW4uIiksbWR4KCJwcmUiLG51bGwsbWR4KCJjb2RlIixPYmplY3QuYXNzaWduKHtwYXJlbnROYW1lOiJwcmUifSx7ImNsYXNzTmFtZSI6Imxhbmd1YWdlLWphdmFzY3JpcHQifSksImNvbnN0IHB1cHBldGVlciA9IHJlcXVpcmUoJ3B1cHBldGVlcicpO1xuXG4vLyBUZXN0IHN1aXRlXG5kZXNjcmliZSgnUGFnZUhvbWUgZnVuY3Rpb25hbGl0eScsICgpID0+IHtcbiAgLy8gVGVzdCBzdWl0ZSB3aXRoaW4gYW5vdGhlciB0ZXN0IHN1aXRlIC0gdXNlZnVsIGZvciBzdWJzZWN0aW9uaW5nIHRlc3RzIHdpdGhpbiBhIGNvbXBvbmVudC9wYWdlXG4gIGRlc2NyaWJlKCdTaW1wbGUgUHVwcGV0ZWVyIFVJIHRlc3QgZm9yIGZvcm0gZWxlbWVudHMnLCAoKSA9PiB7XG4gICAgaXQoJ2ZpcnN0TmFtZSBhbmQgbGFzdE5hbWUgZnJvbSBQdXBwZXRlZXIgZGVlcCBlcXVhbCBleHBlY3RlZCBzY2hlbWEnLCBhc3luYyAoKSA9PiB7XG4gICAgICBjb25zdCBleHBlY3RlZCA9IHtcbiAgICAgICAgZmlyc3ROYW1lOiAnSGVsbG8nLFxuICAgICAgICBsYXN0TmFtZTogJ1dvcmxkJ1xuICAgICAgfTtcblxuICAgICAgY29uc3QgYnJvd3NlciA9IGF3YWl0IHB1cHBldGVlci5sYXVuY2goeyBoZWFkbGVzczogZmFsc2UgfSk7XG4gICAgICBjb25zdCBwYWdlID0gYXdhaXQgYnJvd3Nlci5uZXdQYWdlKCk7XG4gICAgICBhd2FpdCBwYWdlLmdvdG8oJ2h0dHA6Ly9sb2NhbGhvc3Q6MzAwMCcpO1xuICAgICAgYXdhaXQgcGFnZS5zY3JlZW5zaG90KHsgcGF0aDogJ2V4YW1wbGUucG5nJyB9KTsgLy8gY3JlYXRlIGFuIGV4YW1wbGUgc2NyZWVuc2hvdCBvZiBjdXJyZW50IFVJIHN0YXRlXG4gICAgICBhd2FpdCBwYWdlLnR5cGUoJ2lucHV0W25hbWU9XCJmaXJzdE5hbWVcIl0nLCAnSGVsbG8nKTtcbiAgICAgIGNvbnN0IGZpcnN0TmFtZSA9IGF3YWl0IHBhZ2UuJGV2YWwoXG4gICAgICAgICdpbnB1dFtuYW1lPVwiZmlyc3ROYW1lXCJdJyxcbiAgICAgICAgKGVsKSA9PiBlbC52YWx1ZVxuICAgICAgKTtcblxuICAgICAgYXdhaXQgcGFnZS53YWl0Rm9yKDUwMCk7XG4gICAgICBhd2FpdCBwYWdlLmNsaWNrKCcjbmV4dCcpO1xuICAgICAgYXdhaXQgcGFnZS53YWl0Rm9yU2VsZWN0b3IoJ2lucHV0W25hbWU9XCJsYXN0TmFtZVwiXScpO1xuICAgICAgYXdhaXQgcGFnZS50eXBlKCdpbnB1dFtuYW1lPVwibGFzdE5hbWVcIl0nLCAnV29ybGQnKTtcbiAgICAgIGNvbnN0IGxhc3ROYW1lID0gYXdhaXQgcGFnZS4kZXZhbChcbiAgICAgICAgJ2lucHV0W25hbWU9XCJsYXN0TmFtZVwiXScsXG4gICAgICAgIChlbCkgPT4gZWwudmFsdWVcbiAgICAgICk7XG5cbiAgICAgIGF3YWl0IHBhZ2Uud2FpdEZvcig1MDApO1xuICAgICAgY29uc3QgZm9ybURhdGEgPSB7XG4gICAgICAgIGZpcnN0TmFtZTogZmlyc3ROYW1lLFxuICAgICAgICBsYXN0TmFtZTogbGFzdE5hbWVcbiAgICAgIH07XG5cbiAgICAgIGF3YWl0IGJyb3dzZXIuY2xvc2UoKTtcblxuICAgICAgZXhwZWN0KGZvcm1EYXRhKS50by5kZWVwLmVxdWFsKGV4cGVjdGVkKTsgLy8gZXZhdWF0ZXMgdG8gdHJ1ZSBpZiBmb3JtIGZpZWxkcyBob2xkIGNvcnJlY3QgdmFsdWVcbiAgICB9KTtcbiAgfSk7XG59KTtcbiIpKSxtZHgoImgyIix7ImlkIjoibG9nZ2luZyJ9LCJMb2dnaW5nIiksbWR4KCJwcmUiLG51bGwsbWR4KCJjb2RlIixPYmplY3QuYXNzaWduKHtwYXJlbnROYW1lOiJwcmUifSx7fSksIi8vIG91dHB1dCBsb2dzXG5wYWdlLm9uKCdjb25zb2xlJywgbXNnID0+IGNvbnNvbGUubG9nKCdQQUdFIExPRzonLCBtc2cudGV4dCgpKSk7XG5cbi8vIHNob3cgZGV2dG9vbHNcbmNvbnN0IGJyb3dzZXIgPSBhd2FpdCBwdXBwZXRlZXIubGF1bmNoKHtkZXZ0b29sczogdHJ1ZX0pO1xuIikpKTt9aWYodHlwZW9mIE1EWENvbnRlbnQhPT0ndW5kZWZpbmVkJyYmTURYQ29udGVudCYmTURYQ29udGVudD09PU9iamVjdChNRFhDb250ZW50KSYmT2JqZWN0LmlzRXh0ZW5zaWJsZShNRFhDb250ZW50KSl7T2JqZWN0LmRlZmluZVByb3BlcnR5KE1EWENvbnRlbnQsJ19fZmlsZW1ldGEnLHtlbnVtZXJhYmxlOnRydWUsY29uZmlndXJhYmxlOnRydWUsdmFsdWU6e25hbWU6Ik1EWENvbnRlbnQiLGZpbGVuYW1lOiJtYW51YWwvVGVzdGluZy9wdXBwZXRlZXIubWQifX0pO31NRFhDb250ZW50LmlzTURYQ29tcG9uZW50PXRydWU7"},{"version":3,"sources":["/Users/okeeffe_d/Project-Imposter/developer-notes/manual/Testing/puppeteer.md"],"names":["React","mdx","makeShortcode","name","MDXDefaultShortcode","props","console","warn","layoutProps","MDXLayout","MDXContent","components","isMDXComponent"],"mappings":"4LAAA,cACE,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,GAAT,KAAoB,eAApB,CACA,cAGF,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAAAC,IAAI,QAAI,SAASC,CAAAA,mBAAT,CAA6BC,KAA7B,CAAoC,CAChEC,OAAO,CAACC,IAAR,CAAa,aAAeJ,IAAf,CAAsB,yEAAnC,EACA,MAAO,WAASE,KAAT,CAAP,CACD,CAHyB,EAA1B,CAKA,GAAMG,CAAAA,WAAW,CAAG,EAApB,CAGA,GAAMC,CAAAA,SAAS,CAAG,SAAlB,CACA,cAAe,SAASC,CAAAA,UAAT,MAGZ,IAFDC,CAAAA,UAEC,MAFDA,UAEC,CADEN,KACF,+CACD,MAAO,KAAC,SAAD,kBAAeG,WAAf,CAAgCH,KAAhC,EAAuC,UAAU,CAAEM,UAAnD,CAA+D,OAAO,CAAC,WAAvE,GACL,cADK,CAEL,uCAFK,CAGL,SAAQ,CACN,KAAM,iBADA,CAAR,oBAHK,CAML,SAAQ,CACN,KAAM,WADA,CAAR,aANK,CASL,SAAQ,CACN,KAAM,WADA,CAAR,aATK,CAYL,cACE,UAAI,UAAU,CAAC,IAAf,EAAoB,uBAAG,UAAU,CAAC,IAAd,EAAuB,CACvC,OAAQ,sBAD+B,CAAvB,kBAApB,CADF,CAIE,UAAI,UAAU,CAAC,IAAf,EAAoB,uBAAG,UAAU,CAAC,IAAd,EAAuB,CACvC,OAAQ,4BAD+B,CAAvB,aAApB,CAJF,CAOE,UAAI,UAAU,CAAC,IAAf,EAAoB,uBAAG,UAAU,CAAC,IAAd,EAAuB,CACvC,OAAQ,mCAD+B,CAAvB,eAApB,CAPF,CAUE,UAAI,UAAU,CAAC,IAAf,EAAoB,uBAAG,UAAU,CAAC,IAAd,EAAuB,CACvC,OAAQ,mEAD+B,CAAvB,kBAApB,CAVF,CAZK,CA0BL,SAAQ,CACN,KAAM,OADA,CAAR,SA1BK,CA6BL,uJAA8I,kBAAY,UAAU,CAAC,GAAvB,oBAA9I,oEA7BK,CA8BL,eAAK,0BAAM,UAAU,CAAC,KAAjB,EAA2B,CAC5B,YAAa,qBADe,CAA3B,29CAAL,CA9BK,CA4EL,SAAQ,CACN,KAAM,SADA,CAAR,WA5EK,CA+EL,eAAK,0BAAM,UAAU,CAAC,KAAjB,EAA2B,EAA3B,sKAAL,CA/EK,CAAP,CAsFD,C,uQAEDD,UAAU,CAACE,cAAX,CAA4B,IAA5B","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <hr></hr>\n    <p>{`Author: Dennis O'Keeffe`}</p>\n    <h2 {...{\n      \"id\": \"section-testing\"\n    }}>{`Section: Testing`}</h2>\n    <h1 {...{\n      \"id\": \"puppeteer\"\n    }}>{`Puppeteer`}</h1>\n    <h2 {...{\n      \"id\": \"resources\"\n    }}>{`Resources`}</h2>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://mochajs.org/\"\n        }}>{`Mocha Website`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"http://www.chaijs.com/api/\"\n        }}>{`Chai API`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"http://airbnb.io/enzyme/docs/api/\"\n        }}>{`Enzyme API`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://github.com/GoogleChrome/puppeteer/blob/master/docs/api.md\"\n        }}>{`Puppeteer API`}</a></li>\n    </ul>\n    <h2 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h2>\n    <p>{`To test the UI itself, we can use Puppeteer, Chrome's Headless Browser to evaluate on the UI itself. Puppeteer can also be set to have `}<inlineCode parentName=\"p\">{`headless: false`}</inlineCode>{`, allowing the user to record or watch the test on their screen.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`const puppeteer = require('puppeteer');\n\n// Test suite\ndescribe('PageHome functionality', () => {\n  // Test suite within another test suite - useful for subsectioning tests within a component/page\n  describe('Simple Puppeteer UI test for form elements', () => {\n    it('firstName and lastName from Puppeteer deep equal expected schema', async () => {\n      const expected = {\n        firstName: 'Hello',\n        lastName: 'World'\n      };\n\n      const browser = await puppeteer.launch({ headless: false });\n      const page = await browser.newPage();\n      await page.goto('http://localhost:3000');\n      await page.screenshot({ path: 'example.png' }); // create an example screenshot of current UI state\n      await page.type('input[name=\"firstName\"]', 'Hello');\n      const firstName = await page.$eval(\n        'input[name=\"firstName\"]',\n        (el) => el.value\n      );\n\n      await page.waitFor(500);\n      await page.click('#next');\n      await page.waitForSelector('input[name=\"lastName\"]');\n      await page.type('input[name=\"lastName\"]', 'World');\n      const lastName = await page.$eval(\n        'input[name=\"lastName\"]',\n        (el) => el.value\n      );\n\n      await page.waitFor(500);\n      const formData = {\n        firstName: firstName,\n        lastName: lastName\n      };\n\n      await browser.close();\n\n      expect(formData).to.deep.equal(expected); // evauates to true if form fields hold correct value\n    });\n  });\n});\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"logging\"\n    }}>{`Logging`}</h2>\n    <pre><code parentName=\"pre\" {...{}}>{`// output logs\npage.on('console', msg => console.log('PAGE LOG:', msg.text()));\n\n// show devtools\nconst browser = await puppeteer.launch({devtools: true});\n`}</code></pre>\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  "]}]}