{"remainingRequest":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/docz-core/node_modules/babel-loader/lib/index.js??ref--6-1!/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/@mdx-js/loader/index.js??ref--6-2!/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/source-map-loader/index.js!/Users/dennis.okeeffe/Project-Imposter/developer-notes/manual/Go/Go-Tour-Mutexes.md","dependencies":[{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/manual/Go/Go-Tour-Mutexes.md","mtime":1569490724911},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/cache-loader/dist/cjs.js","mtime":1564095360956},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/docz-core/node_modules/babel-loader/lib/index.js","mtime":1562568123838},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/@mdx-js/loader/index.js","mtime":1565139338792},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/source-map-loader/index.js","mtime":1564095361765}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9vYmplY3RXaXRob3V0UHJvcGVydGllcyBmcm9tIi9Vc2Vycy9kZW5uaXMub2tlZWZmZS9Qcm9qZWN0LUltcG9zdGVyL2RldmVsb3Blci1ub3Rlcy9ub2RlX21vZHVsZXMvYmFiZWwtcHJlc2V0LXJlYWN0LWFwcC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0V2l0aG91dFByb3BlcnRpZXMiOy8qIEBqc3ggbWR4ICovaW1wb3J0IFJlYWN0IGZyb20ncmVhY3QnO2ltcG9ydHttZHh9ZnJvbSdAbWR4LWpzL3JlYWN0JzsvKiBAanN4IG1keCAqL3ZhciBtYWtlU2hvcnRjb2RlPWZ1bmN0aW9uIG1ha2VTaG9ydGNvZGUobmFtZSl7cmV0dXJuIGZ1bmN0aW9uIE1EWERlZmF1bHRTaG9ydGNvZGUocHJvcHMpe2NvbnNvbGUud2FybigiQ29tcG9uZW50ICIrbmFtZSsiIHdhcyBub3QgaW1wb3J0ZWQsIGV4cG9ydGVkLCBvciBwcm92aWRlZCBieSBNRFhQcm92aWRlciBhcyBnbG9iYWwgc2NvcGUiKTtyZXR1cm4gbWR4KCJkaXYiLHByb3BzKTt9O307dmFyIGxheW91dFByb3BzPXt9O3ZhciBNRFhMYXlvdXQ9IndyYXBwZXIiO2V4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIE1EWENvbnRlbnQoX3JlZil7dmFyIGNvbXBvbmVudHM9X3JlZi5jb21wb25lbnRzLHByb3BzPV9vYmplY3RXaXRob3V0UHJvcGVydGllcyhfcmVmLFsiY29tcG9uZW50cyJdKTtyZXR1cm4gbWR4KE1EWExheW91dCxPYmplY3QuYXNzaWduKHt9LGxheW91dFByb3BzLHByb3BzLHtjb21wb25lbnRzOmNvbXBvbmVudHMsbWR4VHlwZToiTURYTGF5b3V0In0pLG1keCgiaDEiLHsiaWQiOiJnby10b3VyLW11dGV4ZXMifSwiR28gVG91ciBNdXRleGVzIiksbWR4KCJoMiIseyJpZCI6InN5bmNtdXRleCJ9LCJzeW5jLk11dGV4IiksbWR4KCJwIixudWxsLCJXZSd2ZSBzZWVuIGhvdyBjaGFubmVscyBhcmUgZ3JlYXQgZm9yIGNvbW11bmljYXRpb24gYW1vbmcgZ29yb3V0aW5lcy4iKSxtZHgoInAiLG51bGwsIkJ1dCB3aGF0IGlmIHdlIGRvbid0IG5lZWQgY29tbXVuaWNhdGlvbj8gV2hhdCBpZiB3ZSBqdXN0IHdhbnQgdG8gbWFrZSBzdXJlIG9ubHkgb25lIGdvcm91dGluZSBjYW4gYWNjZXNzIGEgdmFyaWFibGUgYXQgYSB0aW1lIHRvIGF2b2lkIGNvbmZsaWN0cz8iKSxtZHgoInAiLG51bGwsIlRoaXMgY29uY2VwdCBpcyBjYWxsZWQgbXV0dWFsIGV4Y2x1c2lvbiwgYW5kIHRoZSBjb252ZW50aW9uYWwgbmFtZSBmb3IgdGhlIGRhdGEgc3RydWN0dXJlIHRoYXQgcHJvdmlkZXMgaXQgaXMgbXV0ZXguIiksbWR4KCJwIixudWxsLCJHbydzIHN0YW5kYXJkIGxpYnJhcnkgcHJvdmlkZXMgbXV0dWFsIGV4Y2x1c2lvbiB3aXRoICIsbWR4KCJpbmxpbmVDb2RlIix7cGFyZW50TmFtZToicCJ9LCJzeW5jLk11dGV4IiksIiBhbmQgaXRzIHR3byBtZXRob2RzOiIpLG1keCgidWwiLG51bGwsbWR4KCJsaSIse3BhcmVudE5hbWU6InVsIn0sIkxvY2siKSxtZHgoImxpIix7cGFyZW50TmFtZToidWwifSwiVW5sb2NrIikpLG1keCgicCIsbnVsbCwiV2UgY2FuIGRlZmluZSBhIGJsb2NrIG9mIGNvZGUgdG8gYmUgZXhlY3V0ZWQgaW4gbXV0dWFsIGV4Y2x1c2lvbiBieSBzdXJyb3VuZGluZyBpdCB3aXRoIGEgY2FsbCB0byAiLG1keCgiaW5saW5lQ29kZSIse3BhcmVudE5hbWU6InAifSwiTG9jayIpLCIgYW5kICIsbWR4KCJpbmxpbmVDb2RlIix7cGFyZW50TmFtZToicCJ9LCJVbmxvY2siKSwiIGFzIHNob3duIG9uIHRoZSBJbmMgbWV0aG9kLiIpLG1keCgicCIsbnVsbCwiV2UgY2FuIGFsc28gdXNlICIsbWR4KCJpbmxpbmVDb2RlIix7cGFyZW50TmFtZToicCJ9LCJkZWZlciIpLCIgdG8gZW5zdXJlIHRoZSBtdXRleCB3aWxsIGJlIHVubG9ja2VkIGFzIGluIHRoZSAiLG1keCgiaW5saW5lQ29kZSIse3BhcmVudE5hbWU6InAifSwiVmFsdWUiKSwiIG1ldGhvZC4iKSxtZHgoImgyIix7ImlkIjoiYmFzaWMtbXV0ZXgtZXhhbXBsZSJ9LCJCYXNpYyBNdXRleCBFeGFtcGxlIiksbWR4KCJwcmUiLG51bGwsbWR4KCJjb2RlIixPYmplY3QuYXNzaWduKHtwYXJlbnROYW1lOiJwcmUifSx7ImNsYXNzTmFtZSI6Imxhbmd1YWdlLWdvbGFuZyJ9KSwicGFja2FnZSBtYWluXG5cbmltcG9ydCAoXG4gICAgXCJmbXRcIlxuICAgIFwic3luY1wiXG4gICAgXCJ0aW1lXCJcbilcblxuLy8gU2FmZUNvdW50ZXIgaXMgc2FmZSB0byB1c2UgY29uY3VycmVudGx5LlxudHlwZSBTYWZlQ291bnRlciBzdHJ1Y3Qge1xuICAgIHYgICBtYXBbc3RyaW5nXWludFxuICAgIG11eCBzeW5jLk11dGV4XG59XG5cbi8vIEluYyBpbmNyZW1lbnRzIHRoZSBjb3VudGVyIGZvciB0aGUgZ2l2ZW4ga2V5LlxuZnVuYyAoYyAqU2FmZUNvdW50ZXIpIEluYyhrZXkgc3RyaW5nKSB7XG4gICAgYy5tdXguTG9jaygpXG4gICAgLy8gTG9jayBzbyBvbmx5IG9uZSBnb3JvdXRpbmUgYXQgYSB0aW1lIGNhbiBhY2Nlc3MgdGhlIG1hcCBjLnYuXG4gICAgYy52W2tleV0rK1xuICAgIGMubXV4LlVubG9jaygpXG59XG5cbi8vIFZhbHVlIHJldHVybnMgdGhlIGN1cnJlbnQgdmFsdWUgb2YgdGhlIGNvdW50ZXIgZm9yIHRoZSBnaXZlbiBrZXkuXG5mdW5jIChjICpTYWZlQ291bnRlcikgVmFsdWUoa2V5IHN0cmluZykgaW50IHtcbiAgICBjLm11eC5Mb2NrKClcbiAgICAvLyBMb2NrIHNvIG9ubHkgb25lIGdvcm91dGluZSBhdCBhIHRpbWUgY2FuIGFjY2VzcyB0aGUgbWFwIGMudi5cbiAgICBkZWZlciBjLm11eC5VbmxvY2soKVxuICAgIHJldHVybiBjLnZba2V5XVxufVxuXG5mdW5jIG1haW4oKSB7XG4gICAgYyA6PSBTYWZlQ291bnRlcnt2OiBtYWtlKG1hcFtzdHJpbmddaW50KX1cbiAgICBmbXQuUHJpbnRsbihjLnYpIC8vIG1hcFtdXG5cbiAgICBmb3IgaSA6PSAwOyBpIDwgMTAwMDsgaSsrIHtcbiAgICAgICAgZ28gYy5JbmMoXCJzb21la2V5XCIpXG4gICAgfVxuXG4gICAgdGltZS5TbGVlcCh0aW1lLlNlY29uZCkgLy8gZGVsYXkgZHVyaW5nIGFzeW5jIGdvcm91dGluZVxuICAgIGZtdC5QcmludGxuKGMuVmFsdWUoXCJzb21la2V5XCIpKSAvLyAxMDAwXG59XG4iKSkpO31pZih0eXBlb2YgTURYQ29udGVudCE9PSd1bmRlZmluZWQnJiZNRFhDb250ZW50JiZNRFhDb250ZW50PT09T2JqZWN0KE1EWENvbnRlbnQpJiZPYmplY3QuaXNFeHRlbnNpYmxlKE1EWENvbnRlbnQpKXtPYmplY3QuZGVmaW5lUHJvcGVydHkoTURYQ29udGVudCwnX19maWxlbWV0YScse2VudW1lcmFibGU6dHJ1ZSxjb25maWd1cmFibGU6dHJ1ZSx2YWx1ZTp7bmFtZToiTURYQ29udGVudCIsZmlsZW5hbWU6Im1hbnVhbC9Hby9Hby1Ub3VyLU11dGV4ZXMubWQifX0pO31NRFhDb250ZW50LmlzTURYQ29tcG9uZW50PXRydWU7"},{"version":3,"sources":["/Users/dennis.okeeffe/Project-Imposter/developer-notes/manual/Go/Go-Tour-Mutexes.md"],"names":["React","mdx","makeShortcode","name","MDXDefaultShortcode","props","console","warn","layoutProps","MDXLayout","MDXContent","components","isMDXComponent"],"mappings":"iMAAA,cACE,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,GAAT,KAAoB,eAApB,CACA,cAGF,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAAAC,IAAI,QAAI,SAASC,CAAAA,mBAAT,CAA6BC,KAA7B,CAAoC,CAChEC,OAAO,CAACC,IAAR,CAAa,aAAeJ,IAAf,CAAsB,yEAAnC,EACA,MAAO,WAASE,KAAT,CAAP,CACD,CAHyB,EAA1B,CAKA,GAAMG,CAAAA,WAAW,CAAG,EAApB,CAGA,GAAMC,CAAAA,SAAS,CAAG,SAAlB,CACA,cAAe,SAASC,CAAAA,UAAT,MAGZ,IAFDC,CAAAA,UAEC,MAFDA,UAEC,CADEN,KACF,+CACD,MAAO,KAAC,SAAD,kBAAeG,WAAf,CAAgCH,KAAhC,EAAuC,UAAU,CAAEM,UAAnD,CAA+D,OAAO,CAAC,WAAvE,GACL,SAAQ,CACN,KAAM,iBADA,CAAR,mBADK,CAIL,SAAQ,CACN,KAAM,WADA,CAAR,cAJK,CAOL,qFAPK,CAQL,iKARK,CASL,oIATK,CAUL,qEAA4D,kBAAY,UAAU,CAAC,GAAvB,eAA5D,yBAVK,CAWL,cACE,UAAI,UAAU,CAAC,IAAf,SADF,CAEE,UAAI,UAAU,CAAC,IAAf,WAFF,CAXK,CAeL,kHAAyG,kBAAY,UAAU,CAAC,GAAvB,SAAzG,SAAkK,kBAAY,UAAU,CAAC,GAAvB,WAAlK,gCAfK,CAgBL,gCAAuB,kBAAY,UAAU,CAAC,GAAvB,UAAvB,oDAA4H,kBAAY,UAAU,CAAC,GAAvB,UAA5H,YAhBK,CAiBL,SAAQ,CACN,KAAM,qBADA,CAAR,uBAjBK,CAoBL,eAAK,0BAAM,UAAU,CAAC,KAAjB,EAA2B,CAC5B,YAAa,iBADe,CAA3B,w7BAAL,CApBK,CAAP,CAiED,C,wQAEDD,UAAU,CAACE,cAAX,CAA4B,IAA5B","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"go-tour-mutexes\"\n    }}>{`Go Tour Mutexes`}</h1>\n    <h2 {...{\n      \"id\": \"syncmutex\"\n    }}>{`sync.Mutex`}</h2>\n    <p>{`We've seen how channels are great for communication among goroutines.`}</p>\n    <p>{`But what if we don't need communication? What if we just want to make sure only one goroutine can access a variable at a time to avoid conflicts?`}</p>\n    <p>{`This concept is called mutual exclusion, and the conventional name for the data structure that provides it is mutex.`}</p>\n    <p>{`Go's standard library provides mutual exclusion with `}<inlineCode parentName=\"p\">{`sync.Mutex`}</inlineCode>{` and its two methods:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Lock`}</li>\n      <li parentName=\"ul\">{`Unlock`}</li>\n    </ul>\n    <p>{`We can define a block of code to be executed in mutual exclusion by surrounding it with a call to `}<inlineCode parentName=\"p\">{`Lock`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`Unlock`}</inlineCode>{` as shown on the Inc method.`}</p>\n    <p>{`We can also use `}<inlineCode parentName=\"p\">{`defer`}</inlineCode>{` to ensure the mutex will be unlocked as in the `}<inlineCode parentName=\"p\">{`Value`}</inlineCode>{` method.`}</p>\n    <h2 {...{\n      \"id\": \"basic-mutex-example\"\n    }}>{`Basic Mutex Example`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-golang\"\n      }}>{`package main\n\nimport (\n    \"fmt\"\n    \"sync\"\n    \"time\"\n)\n\n// SafeCounter is safe to use concurrently.\ntype SafeCounter struct {\n    v   map[string]int\n    mux sync.Mutex\n}\n\n// Inc increments the counter for the given key.\nfunc (c *SafeCounter) Inc(key string) {\n    c.mux.Lock()\n    // Lock so only one goroutine at a time can access the map c.v.\n    c.v[key]++\n    c.mux.Unlock()\n}\n\n// Value returns the current value of the counter for the given key.\nfunc (c *SafeCounter) Value(key string) int {\n    c.mux.Lock()\n    // Lock so only one goroutine at a time can access the map c.v.\n    defer c.mux.Unlock()\n    return c.v[key]\n}\n\nfunc main() {\n    c := SafeCounter{v: make(map[string]int)}\n    fmt.Println(c.v) // map[]\n\n    for i := 0; i < 1000; i++ {\n        go c.Inc(\"somekey\")\n    }\n\n    time.Sleep(time.Second) // delay during async goroutine\n    fmt.Println(c.Value(\"somekey\")) // 1000\n}\n`}</code></pre>\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  "]}]}