{"remainingRequest":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/docz-core/node_modules/babel-loader/lib/index.js??ref--6-1!/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/@mdx-js/loader/index.js??ref--6-2!/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/source-map-loader/index.js!/Users/dennis.okeeffe/Project-Imposter/developer-notes/manual/Ruby/Ruby-Lambda-Funcs.md","dependencies":[{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/manual/Ruby/Ruby-Lambda-Funcs.md","mtime":1562563032087},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/cache-loader/dist/cjs.js","mtime":1564095360956},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/docz-core/node_modules/babel-loader/lib/index.js","mtime":1562568123838},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/@mdx-js/loader/index.js","mtime":1565139338792},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/source-map-loader/index.js","mtime":1564095361765}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9vYmplY3RXaXRob3V0UHJvcGVydGllcyBmcm9tIi9Vc2Vycy9kZW5uaXMub2tlZWZmZS9Qcm9qZWN0LUltcG9zdGVyL2RldmVsb3Blci1ub3Rlcy9ub2RlX21vZHVsZXMvYmFiZWwtcHJlc2V0LXJlYWN0LWFwcC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0V2l0aG91dFByb3BlcnRpZXMiOy8qIEBqc3ggbWR4ICovaW1wb3J0IFJlYWN0IGZyb20ncmVhY3QnO2ltcG9ydHttZHh9ZnJvbSdAbWR4LWpzL3JlYWN0JzsvKiBAanN4IG1keCAqL3ZhciBtYWtlU2hvcnRjb2RlPWZ1bmN0aW9uIG1ha2VTaG9ydGNvZGUobmFtZSl7cmV0dXJuIGZ1bmN0aW9uIE1EWERlZmF1bHRTaG9ydGNvZGUocHJvcHMpe2NvbnNvbGUud2FybigiQ29tcG9uZW50ICIrbmFtZSsiIHdhcyBub3QgaW1wb3J0ZWQsIGV4cG9ydGVkLCBvciBwcm92aWRlZCBieSBNRFhQcm92aWRlciBhcyBnbG9iYWwgc2NvcGUiKTtyZXR1cm4gbWR4KCJkaXYiLHByb3BzKTt9O307dmFyIGxheW91dFByb3BzPXt9O3ZhciBNRFhMYXlvdXQ9IndyYXBwZXIiO2V4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIE1EWENvbnRlbnQoX3JlZil7dmFyIGNvbXBvbmVudHM9X3JlZi5jb21wb25lbnRzLHByb3BzPV9vYmplY3RXaXRob3V0UHJvcGVydGllcyhfcmVmLFsiY29tcG9uZW50cyJdKTtyZXR1cm4gbWR4KE1EWExheW91dCxPYmplY3QuYXNzaWduKHt9LGxheW91dFByb3BzLHByb3BzLHtjb21wb25lbnRzOmNvbXBvbmVudHMsbWR4VHlwZToiTURYTGF5b3V0In0pLG1keCgiaDEiLHsiaWQiOiJydWJ5LWxhbWJkYS1mdW5jdGlvbnMifSwiUnVieSBMYW1iZGEgRnVuY3Rpb25zIiksbWR4KCJwIixudWxsLCJUaGUgYmFzaWMgZ2lzdCBvZiBkZWNsYXJhdGlvbiBhbmQgdXNhZ2UgaXMgdG8gdXNlIHRoZSAiLG1keCgiaW5saW5lQ29kZSIse3BhcmVudE5hbWU6InAifSwibGFtYmRhIiksIiBrZXl3b3JkLiBOb3RlIHRoYXQgTGFtYmRhIGZ1bmN0aW9ucyBoYXZlIHN1YnRsZSBkaWZmZXJlbmNlcyB0byBQcm9jIGZ1bmN0aW9ucywgYWx0aG91Z2ggdGhleSBib3RoIGRlcml2ZSBmcm9tIHRoZSBQcm9jIG9iamVjdC4iKSxtZHgoInAiLG51bGwsIlRoZSBMYW1iZGEgZnVuY3Rpb24gZW5mb3JjZXMgdGhlIG51bWJlciBvZiBhcmd1bWVudHMgcGFzc2VkLiIpLG1keCgicCIsbnVsbCwiSW4gYWRkaXRpb24sIExhbWJkYSBhbmQgUHJvYyBmdW5jdGlvbnMgdHJlYXQgdGhlICIsbWR4KCJpbmxpbmVDb2RlIix7cGFyZW50TmFtZToicCJ9LCJyZXR1cm4iKSwiIGRpZmZlcmVudGx5LiBMYW1iZGEgd2lsbCByZXR1cm4gZnJvbSB0aGUgc2NvcGUgb2YgdGhhdCBjbG9zdXJlIGZ1bmN0aW9uLCB3aGVyZWFzIFByb2Mgd2lsbCByZXR1cm4gZnJvbSB0aGUgcGFyZW50IHNjb3BlLiIpLG1keCgiaDIiLHsiaWQiOiJzaW1wbGUtZXhhbXBsZSJ9LCJTaW1wbGUgRXhhbXBsZSIpLG1keCgicHJlIixudWxsLG1keCgiY29kZSIsT2JqZWN0LmFzc2lnbih7cGFyZW50TmFtZToicHJlIn0seyJjbGFzc05hbWUiOiJsYW5ndWFnZS1ydWJ5In0pLCIjIGxhbWJkYS5yYlxuY2xhc3MgTGFtYmRhXG4gICAgZGVmIHNlbGYuaGVsbG9cbiAgICAgICAgaGVsbG9Xb3JsZCA9IGxhbWJkYSB7IHJldHVybiBcIkhlbGxvLCBXb3JsZCFcIiB9XG4gICAgICAgIHJlcyA9IGhlbGxvV29ybGQuY2FsbFxuICAgIGVuZFxuXG4gICAgZGVmIHNlbGYuc3VtKGEsIGIpXG4gICAgICAgIHN1bUxhbWJkYSA9IGxhbWJkYSB7fGEsYnwgYSArIGIgfVxuICAgICAgICByZXMgPSBzdW1MYW1iZGEuY2FsbChhLCBiKVxuICAgIGVuZFxuZW5kXG4iKSksbWR4KCJwIixudWxsLCJUZXN0IGZpbGUiKSxtZHgoInByZSIsbnVsbCxtZHgoImNvZGUiLE9iamVjdC5hc3NpZ24oe3BhcmVudE5hbWU6InByZSJ9LHsiY2xhc3NOYW1lIjoibGFuZ3VhZ2UtcnVieSJ9KSwiIyBsYW1iZGFfdGVzdC5yYlxuYmVnaW5cbiAgZ2VtICdtaW5pdGVzdCcsICc+PSA1LjAuMCdcbiAgcmVxdWlyZSAnbWluaXRlc3QvYXV0b3J1bidcbiAgcmVxdWlyZV9yZWxhdGl2ZSAnbGFtYmRhJ1xucmVzY3VlIEdlbTo6TG9hZEVycm9yID0+IGVcbiAgcHV0cyBcIlxcbk1pc3NpbmcgRGVwZW5kZW5jeTpcXG4je2UuYmFja3RyYWNlLmZpcnN0fSAje2UubWVzc2FnZX1cIlxuICBwdXRzICdNaW5pdGVzdCA1LjAgZ2VtIG11c3QgYmUgaW5zdGFsbGVkIGZvciB0aGUgUnVieSB0cmFjay4nXG5yZXNjdWUgTG9hZEVycm9yID0+IGVcbiAgcHV0cyBcIlxcbkVycm9yOlxcbiN7ZS5iYWNrdHJhY2UuZmlyc3R9ICN7ZS5tZXNzYWdlfVwiXG4gIHB1dHMgREFUQS5yZWFkXG4gIGV4aXQgMVxuZW5kXG5cbiMgQ29tbW9uIHRlc3QgZGF0YSB2ZXJzaW9uOiAxLjEuMCBiZTNhZTY2XG5jbGFzcyBMYW1iZGFUZXN0IDwgTWluaXRlc3Q6OlRlc3RcbiAgZGVmIHRlc3RfaGVsbG9fd29ybGRfbGFtYmRhXG4gICAgIyBza2lwXG4gICAgYXNzZXJ0X2VxdWFsIFwiSGVsbG8sIFdvcmxkIVwiLCBMYW1iZGEuaGVsbG9cbiAgZW5kXG5cbiAgZGVmIHRlc3Rfc3VtX2xhbWJkYVxuICAgICMgc2tpcFxuICAgIGFzc2VydF9lcXVhbCAzLCBMYW1iZGEuc3VtKDEsMilcbiAgZW5kXG5lbmRcblxuX19FTkRfX1xuIikpKTt9aWYodHlwZW9mIE1EWENvbnRlbnQhPT0ndW5kZWZpbmVkJyYmTURYQ29udGVudCYmTURYQ29udGVudD09PU9iamVjdChNRFhDb250ZW50KSYmT2JqZWN0LmlzRXh0ZW5zaWJsZShNRFhDb250ZW50KSl7T2JqZWN0LmRlZmluZVByb3BlcnR5KE1EWENvbnRlbnQsJ19fZmlsZW1ldGEnLHtlbnVtZXJhYmxlOnRydWUsY29uZmlndXJhYmxlOnRydWUsdmFsdWU6e25hbWU6Ik1EWENvbnRlbnQiLGZpbGVuYW1lOiJtYW51YWwvUnVieS9SdWJ5LUxhbWJkYS1GdW5jcy5tZCJ9fSk7fU1EWENvbnRlbnQuaXNNRFhDb21wb25lbnQ9dHJ1ZTs="},{"version":3,"sources":["/Users/dennis.okeeffe/Project-Imposter/developer-notes/manual/Ruby/Ruby-Lambda-Funcs.md"],"names":["React","mdx","makeShortcode","name","MDXDefaultShortcode","props","console","warn","layoutProps","MDXLayout","MDXContent","components","isMDXComponent"],"mappings":"iMAAA,cACE,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,GAAT,KAAoB,eAApB,CACA,cAGF,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAAAC,IAAI,QAAI,SAASC,CAAAA,mBAAT,CAA6BC,KAA7B,CAAoC,CAChEC,OAAO,CAACC,IAAR,CAAa,aAAeJ,IAAf,CAAsB,yEAAnC,EACA,MAAO,WAASE,KAAT,CAAP,CACD,CAHyB,EAA1B,CAKA,GAAMG,CAAAA,WAAW,CAAG,EAApB,CAGA,GAAMC,CAAAA,SAAS,CAAG,SAAlB,CACA,cAAe,SAASC,CAAAA,UAAT,MAGZ,IAFDC,CAAAA,UAEC,MAFDA,UAEC,CADEN,KACF,+CACD,MAAO,KAAC,SAAD,kBAAeG,WAAf,CAAgCH,KAAhC,EAAuC,UAAU,CAAEM,UAAnD,CAA+D,OAAO,CAAC,WAAvE,GACL,SAAQ,CACN,KAAM,uBADA,CAAR,yBADK,CAIL,sEAA6D,kBAAY,UAAU,CAAC,GAAvB,WAA7D,mIAJK,CAKL,4EALK,CAML,iEAAwD,kBAAY,UAAU,CAAC,GAAvB,WAAxD,6HANK,CAOL,SAAQ,CACN,KAAM,gBADA,CAAR,kBAPK,CAUL,eAAK,0BAAM,UAAU,CAAC,KAAjB,EAA2B,CAC5B,YAAa,eADe,CAA3B,6QAAL,CAVK,CAyBL,yBAzBK,CA0BL,eAAK,0BAAM,UAAU,CAAC,KAAjB,EAA2B,CAC5B,YAAa,eADe,CAA3B,kqBAAL,CA1BK,CAAP,CA0DD,C,4QAEDD,UAAU,CAACE,cAAX,CAA4B,IAA5B","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"ruby-lambda-functions\"\n    }}>{`Ruby Lambda Functions`}</h1>\n    <p>{`The basic gist of declaration and usage is to use the `}<inlineCode parentName=\"p\">{`lambda`}</inlineCode>{` keyword. Note that Lambda functions have subtle differences to Proc functions, although they both derive from the Proc object.`}</p>\n    <p>{`The Lambda function enforces the number of arguments passed.`}</p>\n    <p>{`In addition, Lambda and Proc functions treat the `}<inlineCode parentName=\"p\">{`return`}</inlineCode>{` differently. Lambda will return from the scope of that closure function, whereas Proc will return from the parent scope.`}</p>\n    <h2 {...{\n      \"id\": \"simple-example\"\n    }}>{`Simple Example`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-ruby\"\n      }}>{`# lambda.rb\nclass Lambda\n    def self.hello\n        helloWorld = lambda { return \"Hello, World!\" }\n        res = helloWorld.call\n    end\n\n    def self.sum(a, b)\n        sumLambda = lambda {|a,b| a + b }\n        res = sumLambda.call(a, b)\n    end\nend\n`}</code></pre>\n    <p>{`Test file`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-ruby\"\n      }}>{`# lambda_test.rb\nbegin\n  gem 'minitest', '>= 5.0.0'\n  require 'minitest/autorun'\n  require_relative 'lambda'\nrescue Gem::LoadError => e\n  puts \"\\\\nMissing Dependency:\\\\n#{e.backtrace.first} #{e.message}\"\n  puts 'Minitest 5.0 gem must be installed for the Ruby track.'\nrescue LoadError => e\n  puts \"\\\\nError:\\\\n#{e.backtrace.first} #{e.message}\"\n  puts DATA.read\n  exit 1\nend\n\n# Common test data version: 1.1.0 be3ae66\nclass LambdaTest < Minitest::Test\n  def test_hello_world_lambda\n    # skip\n    assert_equal \"Hello, World!\", Lambda.hello\n  end\n\n  def test_sum_lambda\n    # skip\n    assert_equal 3, Lambda.sum(1,2)\n  end\nend\n\n__END__\n`}</code></pre>\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  "]}]}