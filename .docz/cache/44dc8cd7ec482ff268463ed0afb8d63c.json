{"remainingRequest":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/docz-core/node_modules/babel-loader/lib/index.js??ref--6-1!/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/@mdx-js/loader/index.js??ref--6-2!/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/source-map-loader/index.js!/Users/dennis.okeeffe/Project-Imposter/developer-notes/manual/Twig/Twig-Cheat-Sheet.md","dependencies":[{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/manual/Twig/Twig-Cheat-Sheet.md","mtime":1562563032098},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/cache-loader/dist/cjs.js","mtime":1581496618588},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/docz-core/node_modules/babel-loader/lib/index.js","mtime":1578565694890},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/@mdx-js/loader/index.js","mtime":1581496618277},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/source-map-loader/index.js","mtime":1580255490569}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/dennis.okeeffe/Project-Imposter/developer-notes/manual/Twig/Twig-Cheat-Sheet.md"],"names":["React","mdx","makeShortcode","name","MDXDefaultShortcode","props","console","warn","layoutProps","MDXLayout","MDXContent","components","isMDXComponent"],"mappings":"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","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"twig-cheat-sheet\"\n    }}>{`TWIG CHEAT SHEET`}</h1>\n    {\n      /* TOC */\n    }\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"#twig-cheat-sheet\"\n        }}>{`TWIG CHEAT SHEET`}</a><ul parentName=\"li\">\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#web-synopsis\"\n            }}>{`Web Synopsis`}</a></li>\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#attributes\"\n            }}>{`Attributes`}</a></li>\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#setting-variables\"\n            }}>{`Setting Variables`}</a></li>\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#filters\"\n            }}>{`Filters`}</a></li>\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#functions\"\n            }}>{`Functions`}</a></li>\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#named-arguments\"\n            }}>{`Named Arguments`}</a></li>\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#control-flow-structure\"\n            }}>{`Control Flow Structure`}</a></li>\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#comments\"\n            }}>{`Comments`}</a></li>\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#include\"\n            }}>{`Include`}</a></li>\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#extends\"\n            }}>{`Extends`}</a></li>\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#template-inheritance\"\n            }}>{`Template Inheritance`}</a></li>\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#manual-escaping\"\n            }}>{`Manual Escaping`}</a></li>\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#macros-add-in-if-you-think-it-is-relevant\"\n            }}>{`Macros (add in if you think it is relevant)`}</a></li>\n        </ul></li>\n    </ul>\n    {\n      /* /TOC */\n    }\n    <p>{`// references`}</p>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"http://twig.sensiolabs.org/doc/templates.html\"\n      }}>{`http://twig.sensiolabs.org/doc/templates.html`}</a></p>\n    <p>{`Ensure you have a highlighter tool.`}</p>\n    <h2 {...{\n      \"id\": \"web-synopsis\"\n    }}>{`Web Synopsis`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-html\"\n      }}>{`<!DOCTYPE html>\n<html>\n    <head>\n        <title>My Webpage</title>\n    </head>\n    <body>\n        <ul id=\"navigation\">\n        {% for item in navigation %}\n            <li><a href=\"{{ item.href }}\">{{ item.caption }}</a></li>\n        {% endfor %}\n        </ul>\n\n        <h1>My Webpage</h1>\n        {{ a_variable }}\n    </body>\n</html>\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"attributes\"\n    }}>{`Attributes`}</h2>\n    <p>{`The application passes variables to the templates for manipulation in the template. Variables may have attributes or elements you can access, too. The visual representation of a variable depends heavily on the application providing it.`}</p>\n    <p>{`You can use a dot (.) to access attributes of a variable (methods or properties of a PHP object, or items of a PHP array), or the so-called \"subscript\" syntax ([]):`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`{{ foo.bar }}\n{{ foo['bar'] }}\n`}</code></pre>\n    <p>{`When the attribute contains special characters (like - that would be interpreted as the minus operator), use the attribute function instead to access the variable attribute:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`{# equivalent to the non-working foo.data-foo #}\n{{ attribute(foo, 'data-foo') }}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"setting-variables\"\n    }}>{`Setting Variables`}</h2>\n    <pre><code parentName=\"pre\" {...{}}>{`{% set foo = 'foo' %}\n{% set foo = [1, 2] %}\n{% set foo = {'foo': 'bar'} %}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"filters\"\n    }}>{`Filters`}</h2>\n    <p>{`Variables can be modified by filters. Filters are separated from the variable by a pipe symbol (|) and may have optional arguments in parentheses. Multiple filters can be chained. The output of one filter is applied to the next.`}</p>\n    <p>{`The following example removes all HTML tags from the name and title-cases it:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`{{ name|striptags|title }}\n`}</code></pre>\n    <p>{`Filters that accept arguments have parentheses around the arguments. This example will join a list by commas:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`{{ list|join(', ') }}\n`}</code></pre>\n    <p>{`To apply a filter on a section of code, wrap it in the filter tag:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`{% filter upper %}\n    This text becomes uppercase\n{% endfilter %}\n`}</code></pre>\n    <p>{`Go to the filters page to learn more about built-in filters.`}</p>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"http://twig.sensiolabs.org/doc/filters/index.html\"\n      }}>{`http://twig.sensiolabs.org/doc/filters/index.html`}</a></p>\n    <h2 {...{\n      \"id\": \"functions\"\n    }}>{`Functions`}</h2>\n    <p>{`Functions can be called to generate content. Functions are called by their name followed by parentheses (()) and may have arguments.`}</p>\n    <p>{`For instance, the range function returns a list containing an arithmetic progression of integers:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`{% for i in range(0, 3) %}\n    {{ i }},\n{% endfor %}\n`}</code></pre>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"http://twig.sensiolabs.org/doc/functions/index.html\"\n      }}>{`http://twig.sensiolabs.org/doc/functions/index.html`}</a></p>\n    <h2 {...{\n      \"id\": \"named-arguments\"\n    }}>{`Named Arguments`}</h2>\n    <p>{`New in version 1.12: Support for named arguments was added in Twig 1.12.`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`{% for i in range(low=1, high=10, step=2) %}\n    {{ i }},\n{% endfor %}\n`}</code></pre>\n    <p>{`Using named arguments makes your templates more explicit about the meaning of the values you pass as arguments:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`{{ data|convert_encoding('UTF-8', 'iso-2022-jp') }}\n\n{# versus #}\n\n{{ data|convert_encoding(from='iso-2022-jp', to='UTF-8') }}\n`}</code></pre>\n    <p>{`Named arguments also allow you to skip some arguments for which you don't want to change the default value:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`{# the first argument is the date format, which defaults to the global date format if null is passed #}\n{{ \"now\"|date(null, \"Europe/Paris\") }}\n\n{# or skip the format value by using a named argument for the time zone #}\n{{ \"now\"|date(timezone=\"Europe/Paris\") }}\n`}</code></pre>\n    <p>{`You can also use both positional and named arguments in one call, in which case positional arguments must always come before named arguments:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`{{ \"now\"|date('d/m/Y H:i', timezone=\"Europe/Paris\") }}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"control-flow-structure\"\n    }}>{`Control Flow Structure`}</h2>\n    <p>{`A control structure refers to all those things that control the flow of a program - conditionals (i.e. if/elseif/else), for-loops, as well as things like blocks. Control structures appear inside {% ... %} blocks.`}</p>\n    <p>{`For example, to display a list of users provided in a variable called users, use the for tag:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-html\"\n      }}>{`<h1>Members</h1>\n<ul>\n    {% for user in users %}\n        <li>{{ user.username|e }}</li>\n    {% endfor %}\n</ul>\n\nThe if tag can be used to test an expression:\n\n{% if users|length > 0 %}\n    <ul>\n        {% for user in users %}\n            <li>{{ user.username|e }}</li>\n        {% endfor %}\n    </ul>\n{% endif %}\n`}</code></pre>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"http://twig.sensiolabs.org/doc/tags/index.html\"\n      }}>{`http://twig.sensiolabs.org/doc/tags/index.html`}</a></p>\n    <h2 {...{\n      \"id\": \"comments\"\n    }}>{`Comments`}</h2>\n    <p>{`To comment-out part of a line in a template, use the comment syntax {# ... #}. This is useful for debugging or to add information for other template designers or yourself:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`{# note: disabled template because we no longer use this\n    {% for user in users %}\n        ...\n    {% endfor %}\n#}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"include\"\n    }}>{`Include`}</h2>\n    <p>{`Includes a partial file`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`{% include 'partials/head.twig' %}\n\n{% for box in boxes %}\n    {{ include('render_box.html') }}\n{% endfor %}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"extends\"\n    }}>{`Extends`}</h2>\n    <p>{`Use extends to include the layout and then use the block headers to import the required content.`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`{% extends \"master.twig\" %}\n\n{% block header %}\n  {% include 'partials/header.twig' with {\n    'title': artist.title\n  } %}\n{% endblock %}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"template-inheritance\"\n    }}>{`Template Inheritance`}</h2>\n    <p>{`The most powerful part of Twig is template inheritance. Template inheritance allows you to build a base \"skeleton\" template that contains all the common elements of your site and defines blocks that child templates can override.`}</p>\n    <p>{`Sounds complicated but it is very basic. It's easier to understand it by starting with an example.`}</p>\n    <p>{`Let's define a base template, base.html, which defines a simple HTML skeleton document that you might use for a simple two-column page:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-html\"\n      }}>{`<!DOCTYPE html>\n<html>\n    <head>\n        {% block head %}\n            <link rel=\"stylesheet\" href=\"style.css\" />\n            <title>{% block title %}{% endblock %} - My Webpage</title>\n        {% endblock %}\n    </head>\n    <body>\n        <div id=\"content\">{% block content %}{% endblock %}</div>\n        <div id=\"footer\">\n            {% block footer %}\n                &copy; Copyright 2011 by <a href=\"http://domain.invalid/\">you</a>.\n            {% endblock %}\n        </div>\n    </body>\n</html>\n`}</code></pre>\n    <p>{`In this example, the block tags define four blocks that child templates can fill in. All the block tag does is to tell the template engine that a child template may override those portions of the template.`}</p>\n    <p>{`A child template might look like this:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-html\"\n      }}>{`{% extends \"base.html\" %}\n\n{% block title %}Index{% endblock %}\n{% block head %}\n    {{ parent() }}\n    <style type=\"text/css\">\n        .important { color: #336699; }\n    </style>\n{% endblock %}\n{% block content %}\n    <h1>Index</h1>\n    <p class=\"important\">\n        Welcome to my awesome homepage.\n    </p>\n{% endblock %}\n`}</code></pre>\n    <p>{`The extends tag is the key here. It tells the template engine that this template \"extends\" another template. When the template system evaluates this template, first it locates the parent. The extends tag should be the first tag in the template.`}</p>\n    <p>{`Note that since the child template doesn't define the footer block, the value from the parent template is used instead.`}</p>\n    <p>{`It's possible to render the contents of the parent block by using the parent function. This gives back the results of the parent block:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-html\"\n      }}>{`{% block sidebar %}\n    <h3>Table Of Contents</h3>\n    ...\n    {{ parent() }}\n{% endblock %}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"manual-escaping\"\n    }}>{`Manual Escaping`}</h2>\n    <p>{`Working with Manual Escaping\nIf manual escaping is enabled, it is your responsibility to escape variables if needed. What to escape? Any variable you don't trust.`}</p>\n    <p>{`Escaping works by piping the variable through the escape or e filter:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`{{ user.username|e }}\n`}</code></pre>\n    <p>{`By default, the escape filter uses the html strategy, but depending on the escaping context, you might want to explicitly use any other available strategies:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`{{ user.username|e('js') }}\n{{ user.username|e('css') }}\n{{ user.username|e('url') }}\n{{ user.username|e('html_attr') }}\n`}</code></pre>\n    <p>{`Working with Automatic Escaping`}</p>\n    <p>{`Whether automatic escaping is enabled or not, you can mark a section of a template to be escaped or not by using the autoescape tag:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`{% autoescape %}\n    Everything will be automatically escaped in this block (using the HTML strategy)\n{% endautoescape %}\n\nBy default, auto-escaping uses the html escaping strategy. If you output variables in other contexts, you need to explicitly escape them with the appropriate escaping strategy:\n\n{% autoescape 'js' %}\n    Everything will be automatically escaped in this block (using the JS strategy)\n{% endautoescape %}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"macros-add-in-if-you-think-it-is-relevant\"\n    }}>{`Macros (add in if you think it is relevant)`}</h2>\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  "]}]}