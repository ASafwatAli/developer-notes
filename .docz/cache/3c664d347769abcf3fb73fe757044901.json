{"remainingRequest":"/Users/okeeffe_d/Project-Imposter/developer-notes/node_modules/docz-core/node_modules/babel-loader/lib/index.js??ref--6-1!/Users/okeeffe_d/Project-Imposter/developer-notes/node_modules/@mdx-js/loader/index.js??ref--6-2!/Users/okeeffe_d/Project-Imposter/developer-notes/node_modules/source-map-loader/index.js!/Users/okeeffe_d/Project-Imposter/developer-notes/manual/Hygen/intro.md","dependencies":[{"path":"/Users/okeeffe_d/Project-Imposter/developer-notes/manual/Hygen/intro.md","mtime":1548282824806},{"path":"/Users/okeeffe_d/Project-Imposter/developer-notes/node_modules/cache-loader/dist/cjs.js","mtime":1561535530324},{"path":"/Users/okeeffe_d/Project-Imposter/developer-notes/node_modules/docz-core/node_modules/babel-loader/lib/index.js","mtime":1560300163820},{"path":"/Users/okeeffe_d/Project-Imposter/developer-notes/node_modules/@mdx-js/loader/index.js","mtime":1561535530532},{"path":"/Users/okeeffe_d/Project-Imposter/developer-notes/node_modules/source-map-loader/index.js","mtime":1548285283521}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/okeeffe_d/Project-Imposter/developer-notes/manual/Hygen/intro.md"],"names":["React","mdx","makeShortcode","name","MDXDefaultShortcode","props","console","warn","layoutProps","MDXLayout","MDXContent","components","isMDXComponent"],"mappings":"4LAAA,cACE,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,GAAT,KAAoB,eAApB,CACA,cAGF,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAAAC,IAAI,QAAI,SAASC,CAAAA,mBAAT,CAA6BC,KAA7B,CAAoC,CAChEC,OAAO,CAACC,IAAR,CAAa,aAAeJ,IAAf,CAAsB,yEAAnC,EACA,MAAO,WAASE,KAAT,CAAP,CACD,CAHyB,EAA1B,CAKA,GAAMG,CAAAA,WAAW,CAAG,EAApB,CAGA,GAAMC,CAAAA,SAAS,CAAG,SAAlB,CACA,cAAe,SAASC,CAAAA,UAAT,MAGZ,IAFDC,CAAAA,UAEC,MAFDA,UAEC,CADEN,KACF,+CACD,MAAO,KAAC,SAAD,kBAAeG,WAAf,CAAgCH,KAAhC,EAAuC,UAAU,CAAEM,UAAnD,CAA+D,OAAO,CAAC,WAAvE,GACL,SAAQ,CACN,KAAM,gBADA,CAAR,kBADK,CAIL,2JAJK,CAKL,SAAQ,CACN,KAAM,OADA,CAAR,SALK,CAQL,cACE,UAAI,UAAU,CAAC,IAAf,EAAoB,uBAAG,UAAU,CAAC,IAAd,EAAuB,CACvC,OAAQ,kBAD+B,CAAvB,kBAApB,CADF,CARK,CAaL,SAAQ,CACN,KAAM,OADA,CAAR,SAbK,CAgBL,qDAhBK,CAiBL,eAAK,0BAAM,UAAU,CAAC,KAAjB,EAA2B,EAA3B,qBAAL,CAjBK,CAmBL,oCAA2B,kBAAY,UAAU,CAAC,GAAvB,eAA3B,4CAnBK,CAoBL,oBAAW,kBAAY,UAAU,CAAC,GAAvB,eAAX,yCApBK,CAqBL,eAAK,0BAAM,UAAU,CAAC,KAAjB,EAA2B,CAC5B,YAAa,qBADe,CAA3B,sxDAAL,CArBK,CA+DL,iJA/DK,CAgEL,eAAK,0BAAM,UAAU,CAAC,KAAjB,EAA2B,CAC5B,YAAa,qBADe,CAA3B,wJAAL,CAhEK,CAyEL,gGAAuF,kBAAY,UAAU,CAAC,GAAvB,cAAvF,0BAzEK,CA0EL,6EAAoE,kBAAY,UAAU,CAAC,GAAvB,0BAApE,KA1EK,CA2EL,SAAQ,CACN,KAAM,wBADA,CAAR,2BA3EK,CA8EL,0DAAiD,kBAAY,UAAU,CAAC,GAAvB,cAAjD,UA9EK,CA+EL,eAAK,0BAAM,UAAU,CAAC,KAAjB,EAA2B,CAC5B,YAAa,qBADe,CAA3B,4OAAL,CA/EK,CA8FL,4GAAmG,kBAAY,UAAU,CAAC,GAAvB,SAAnG,SAA4J,kBAAY,UAAU,CAAC,GAAvB,YAA5J,6DAA4Q,kBAAY,UAAU,CAAC,GAAvB,iBAA5Q,WA9FK,CA+FL,uHAA8G,kBAAY,UAAU,CAAC,GAAvB,iBAA9G,wBAA8L,kBAAY,UAAU,CAAC,GAAvB,gBAA9L,eA/FK,CAgGL,eAAK,0BAAM,UAAU,CAAC,KAAjB,EAA2B,CAC5B,YAAa,qBADe,CAA3B,oEAAL,CAhGK,CAsGL,iCAAwB,kBAAY,UAAU,CAAC,GAAvB,qBAAxB,0BAA8G,kBAAY,UAAU,CAAC,GAAvB,8DAA9G,sDAAyQ,kBAAY,UAAU,CAAC,GAAvB,oCAAzQ,uCAtGK,CAuGL,eAAK,0BAAM,UAAU,CAAC,KAAjB,EAA2B,CAC5B,YAAa,qBADe,CAA3B,oQAAL,CAvGK,CAiHL,sBAAa,kBAAY,UAAU,CAAC,GAAvB,gBAAb,SAA6E,kBAAY,UAAU,CAAC,GAAvB,mBAA7E,sFAjHK,CAkHL,+IAlHK,CAAP,CAoHD,C,iQAEDD,UAAU,CAACE,cAAX,CAA4B,IAA5B","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"intro-to-hygen\"\n    }}>{`Intro to Hygen`}</h1>\n    <p>{`Hygen is a really great template engine that allows us to harness the power of multiple JS libraries and use them to make our lives easier.`}</p>\n    <h2 {...{\n      \"id\": \"links\"\n    }}>{`Links`}</h2>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"http://hygen.io/\"\n        }}>{`Hygen.io site`}</a></li>\n    </ul>\n    <h2 {...{\n      \"id\": \"setup\"\n    }}>{`Setup`}</h2>\n    <p>{`First, ensure that you install Hygen.`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`npm i -g hygen\n`}</code></pre>\n    <p>{`Hygen then uses the `}<inlineCode parentName=\"p\">{`_templates`}</inlineCode>{` folder on direction for what to create.`}</p>\n    <p>{`The `}<inlineCode parentName=\"p\">{`_templates`}</inlineCode>{` folder may have a structure like so:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`_templates\n└── react\n    ├── component\n    │   ├── mocha.ejs.t\n    │   ├── prompt.js\n    │   ├── puppeteer.ejs.t\n    │   ├── readme.ejs.t\n    │   ├── story.ejs.t\n    │   ├── styles.ejs.t\n    │   └── view.ejs.t\n    ├── component-promptless\n    │   ├── mocha.ejs.t\n    │   ├── puppeteer.ejs.t\n    │   ├── readme.ejs.t\n    │   ├── story.ejs.t\n    │   ├── styles.ejs.t\n    │   └── view.ejs.t\n    ├── multi-component\n    │   ├── container.ejs.t\n    │   ├── default.ejs.t\n    │   ├── docs.ejs.t\n    │   ├── mocha.ejs.t\n    │   ├── prompt.js\n    │   ├── puppeteer.ejs.t\n    │   ├── readme.ejs.t\n    │   ├── typeOne.ejs.t\n    │   ├── typeTwo.ejs.t\n    │   └── view.ejs.t\n    ├── reducer\n    │   ├── prompt.js\n    │   └── reducer.ejs.t\n    └── redux-component\n        ├── container.ejs.t\n        ├── mocha.ejs.t\n        ├── prompt.js\n        ├── puppeteer.ejs.t\n        ├── readme.ejs.t\n        ├── story.ejs.t\n        └── view.ejs.t\n`}</code></pre>\n    <p>{`How this works in practise is that you can invoke the following calls and Hygen will generate those files according to the rules:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`# Examples\n\n# Generate the files from react > components\nhygen react component\n# Generate the files from react > reducer\nhygen react reducer\n`}</code></pre>\n    <p>{`Hygen can work using a prompt or without one. I recommend going with, and using `}<inlineCode parentName=\"p\">{`prompt.js`}</inlineCode>{` to set the questions.`}</p>\n    <p>{`For an example from start to finish, I will demonstate using `}<inlineCode parentName=\"p\">{`hygen react component`}</inlineCode>{`.`}</p>\n    <h2 {...{\n      \"id\": \"-hygen-react-component\"\n    }}>{`> hygen react component`}</h2>\n    <p>{`Running the command will first look for a `}<inlineCode parentName=\"p\">{`prompt.js`}</inlineCode>{` file.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`module.exports = [\n    {\n        type: 'input',\n        name: 'name',\n        message: \"What's the name?\"\n    },\n    {\n        type: 'input',\n        name: 'message',\n        message: \"What's the message?\"\n    }\n];\n`}</code></pre>\n    <p>{`Hygen uses Inquirer (which in turn uses RxJS) to create prompts. In this example, answering `}<inlineCode parentName=\"p\">{`name`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`message`}</inlineCode>{` will in turn create variables that are used thorugh the `}<inlineCode parentName=\"p\">{`[file].ejs.t`}</inlineCode>{` files.`}</p>\n    <p>{`Hygen will then go through the rest of the files and export them to where is defined at the top of the `}<inlineCode parentName=\"p\">{`[file].ejs.t`}</inlineCode>{` file. For example, `}<inlineCode parentName=\"p\">{`mocha.ejs.t`}</inlineCode>{` will have:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`---\nto: src/components/<%= name %>/<%= name %>.mocha.js\n---\n`}</code></pre>\n    <p>{`If we enter name `}<inlineCode parentName=\"p\">{`PageTestNewFiles`}</inlineCode>{`, it will output file `}<inlineCode parentName=\"p\">{`src/components/PageTestNewFiles/PageTestNewFiles.mocha.js`}</inlineCode>{`. This will continue for all the files, and so in `}<inlineCode parentName=\"p\">{`src/components/PageTestNewFiles`}</inlineCode>{` we will end up with the following:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-Javascript\"\n      }}>{`PageTestNewFiles\n├── PageTestNewFiles.mocha.js\n├── PageTestNewFiles.puppeteer.js\n├── PageTestNewFiles.storybook.js\n├── README.md\n├── index.js\n└── styles.scss\n`}</code></pre>\n    <p>{`Where `}<inlineCode parentName=\"p\">{`<%= name %>`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`<%= message %>`}</inlineCode>{` is found throughout those files will be in turn replaced with the entered values.`}</p>\n    <p>{`If there are any issues with the Hygen generated files, go to the template file and change the templates to resolve any issues.`}</p>\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  "]}]}