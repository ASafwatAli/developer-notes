{"remainingRequest":"/Users/okeeffe_d/Project-Imposter/developer-notes/node_modules/docz-core/node_modules/babel-loader/lib/index.js??ref--6-1!/Users/okeeffe_d/Project-Imposter/developer-notes/node_modules/@mdx-js/loader/index.js??ref--6-2!/Users/okeeffe_d/Project-Imposter/developer-notes/node_modules/source-map-loader/index.js!/Users/okeeffe_d/Project-Imposter/developer-notes/manual/AWS/S3-Lambda-Subdirectories.md","dependencies":[{"path":"/Users/okeeffe_d/Project-Imposter/developer-notes/manual/AWS/S3-Lambda-Subdirectories.md","mtime":1548282825011},{"path":"/Users/okeeffe_d/Project-Imposter/developer-notes/node_modules/cache-loader/dist/cjs.js","mtime":1561535530324},{"path":"/Users/okeeffe_d/Project-Imposter/developer-notes/node_modules/docz-core/node_modules/babel-loader/lib/index.js","mtime":1560300163820},{"path":"/Users/okeeffe_d/Project-Imposter/developer-notes/node_modules/@mdx-js/loader/index.js","mtime":1561535530532},{"path":"/Users/okeeffe_d/Project-Imposter/developer-notes/node_modules/source-map-loader/index.js","mtime":1548285283521}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9vYmplY3RXaXRob3V0UHJvcGVydGllcyBmcm9tIi9Vc2Vycy9va2VlZmZlX2QvUHJvamVjdC1JbXBvc3Rlci9kZXZlbG9wZXItbm90ZXMvbm9kZV9tb2R1bGVzL2JhYmVsLXByZXNldC1yZWFjdC1hcHAvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzIjsvKiBAanN4IG1keCAqL2ltcG9ydCBSZWFjdCBmcm9tJ3JlYWN0JztpbXBvcnR7bWR4fWZyb20nQG1keC1qcy9yZWFjdCc7LyogQGpzeCBtZHggKi92YXIgbWFrZVNob3J0Y29kZT1mdW5jdGlvbiBtYWtlU2hvcnRjb2RlKG5hbWUpe3JldHVybiBmdW5jdGlvbiBNRFhEZWZhdWx0U2hvcnRjb2RlKHByb3BzKXtjb25zb2xlLndhcm4oIkNvbXBvbmVudCAiK25hbWUrIiB3YXMgbm90IGltcG9ydGVkLCBleHBvcnRlZCwgb3IgcHJvdmlkZWQgYnkgTURYUHJvdmlkZXIgYXMgZ2xvYmFsIHNjb3BlIik7cmV0dXJuIG1keCgiZGl2Iixwcm9wcyk7fTt9O3ZhciBsYXlvdXRQcm9wcz17fTt2YXIgTURYTGF5b3V0PSJ3cmFwcGVyIjtleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBNRFhDb250ZW50KF9yZWYpe3ZhciBjb21wb25lbnRzPV9yZWYuY29tcG9uZW50cyxwcm9wcz1fb2JqZWN0V2l0aG91dFByb3BlcnRpZXMoX3JlZixbImNvbXBvbmVudHMiXSk7cmV0dXJuIG1keChNRFhMYXlvdXQsT2JqZWN0LmFzc2lnbih7fSxsYXlvdXRQcm9wcyxwcm9wcyx7Y29tcG9uZW50czpjb21wb25lbnRzLG1keFR5cGU6Ik1EWExheW91dCJ9KSxtZHgoImgxIix7ImlkIjoic2V0dGluZy11cC1hLWxhbWJkYWNsb3VkZnJvbnQtc2V0dXAtdG8tZmV0Y2gtc3ViZGlyZWN0b3JpZXMtaW4tczMifSwiU2V0dGluZyB1cCBhIExhbWJkYS9DbG91ZGZyb250IHNldHVwIHRvIGZldGNoIHN1YmRpcmVjdG9yaWVzIGluIFMzIiksbWR4KCJoMiIseyJpZCI6ImxpbmtzIn0sIkxpbmtzIiksbWR4KCJ1bCIsbnVsbCxtZHgoImxpIix7cGFyZW50TmFtZToidWwifSxtZHgoImEiLE9iamVjdC5hc3NpZ24oe3BhcmVudE5hbWU6ImxpIn0seyJocmVmIjoiaHR0cHM6Ly9hd3MuYW1hem9uLmNvbS9ibG9ncy9jb21wdXRlL2ltcGxlbWVudGluZy1kZWZhdWx0LWRpcmVjdG9yeS1pbmRleGVzLWluLWFtYXpvbi1zMy1iYWNrZWQtYW1hem9uLWNsb3VkZnJvbnQtb3JpZ2lucy11c2luZy1sYW1iZGFlZGdlLyJ9KSwiVXNlZnVsIGJsb2cgZ3VpZGUiKSksbWR4KCJsaSIse3BhcmVudE5hbWU6InVsIn0sbWR4KCJhIixPYmplY3QuYXNzaWduKHtwYXJlbnROYW1lOiJsaSJ9LHsiaHJlZiI6Imh0dHBzOi8vbWVkaXVtLmNvbS9Ac3ZpbmtsZS9ob3ctdG8tZGVwbG95LWEtcmVhY3QtYXBwLXRvLWEtc3ViZGlyZWN0b3J5LWY2OTRkNDY0MjdjMSJ9KSwiU2VydmluZyBDUkEgZnJvbSBzdWJkaXJlY3RvcmllcyIpKSksbWR4KCJoMiIseyJpZCI6InNldHVwIn0sIlNldHVwIiksbWR4KCJoMyIseyJpZCI6IjEtczMtYnVja2V0In0sIjEuIFMzIEJ1Y2tldCIpLG1keCgicCIsbnVsbCwiU2V0IHVwIGEgcmVzdHJpY3RlZCBTMyBidWNrZXQuIFdpdGhpbiB0aGlzIGJ1Y2tldCwgaGF2ZSBzdWJkaXJlY3RvcmllcyB0aGF0IGhvdXNlIHRoZWlyIG93biBpbmRleC5odG1sIGZpbGUuIiksbWR4KCJoMyIseyJpZCI6IjItc2V0LXVwLWNsb3VkZnJvbnQifSwiMi4gU2V0IHVwIENsb3VkRnJvbnQiKSxtZHgoInAiLG51bGwsIkZvbGxvdyB0aGUgcGVybWlzc2lvbnMgc2V0dXAgaW4gdGhlIGFib3ZlIGFydGljbGUgdG8ga25vdyBob3cgdG8gc2V0IHVwIHRoZSBjb3JyZWN0IGV2ZW50LiIpLG1keCgiaDMiLHsiaWQiOiIzLXRoaXMtaXMtdGhlLXNldHVwLWZvci1hLWphdmFzY3JpcHQtbGFtYmRhLWNhbGwifSwiMy4gVGhpcyBpcyB0aGUgc2V0dXAgZm9yIGEgSmF2YVNjcmlwdCBMYW1iZGEgY2FsbC4iKSxtZHgoInAiLG51bGwsIlRoaXMgbXVzdCBiZSBkb25lIGluIGEgcmVnaW9uIHRoYXQgc3VwcG9ydHMgTGFtYmRhQG5leHQuIiksbWR4KCJwcmUiLG51bGwsbWR4KCJjb2RlIixPYmplY3QuYXNzaWduKHtwYXJlbnROYW1lOiJwcmUifSx7ImNsYXNzTmFtZSI6Imxhbmd1YWdlLWphdmFzY3JpcHQifSksIid1c2Ugc3RyaWN0JztcbmV4cG9ydHMuaGFuZGxlciA9IChldmVudCwgY29udGV4dCwgY2FsbGJhY2spID0+IHtcbiAvLyBFeHRyYWN0IHRoZSByZXF1ZXN0IGZyb20gdGhlIENsb3VkRnJvbnQgZXZlbnQgdGhhdCBpcyBzZW50IHRvIExhbWJkYUBFZGdlXG4gdmFyIHJlcXVlc3QgPSBldmVudC5SZWNvcmRzWzBdLmNmLnJlcXVlc3Q7XG5cbiAvLyBFeHRyYWN0IHRoZSBVUkkgZnJvbSB0aGUgcmVxdWVzdFxuIHZhciBvbGR1cmkgPSByZXF1ZXN0LnVyaTtcblxuIC8vIE1hdGNoIGFueSAnLycgdGhhdCBvY2N1cnMgYXQgdGhlIGVuZCBvZiBhIFVSSS4gUmVwbGFjZSBpdCB3aXRoIGEgZGVmYXVsdCBpbmRleFxuIHZhciBuZXd1cmkgPSBvbGR1cmkucmVwbGFjZSgvXFwvJC8sICcvaW5kZXguaHRtbCcpO1xuXG4gLy8gTG9nIHRoZSBVUkkgYXMgcmVjZWl2ZWQgYnkgQ2xvdWRGcm9udCBhbmQgdGhlIG5ldyBVUkkgdG8gYmUgdXNlZCB0byBmZXRjaCBmcm9tIG9yaWdpblxuIGNvbnNvbGUubG9nKCdPbGQgVVJJOiAnICsgb2xkdXJpKTtcbiBjb25zb2xlLmxvZygnTmV3IFVSSTogJyArIG5ld3VyaSk7XG5cbiAvLyBSZXBsYWNlIHRoZSByZWNlaXZlZCBVUkkgd2l0aCB0aGUgVVJJIHRoYXQgaW5jbHVkZXMgdGhlIGluZGV4IHBhZ2VcbiByZXF1ZXN0LnVyaSA9IG5ld3VyaTtcblxuIC8vIFJldHVybiB0byBDbG91ZEZyb250XG4gcmV0dXJuIGNhbGxiYWNrKG51bGwsIHJlcXVlc3QpO1xufTtcbiIpKSxtZHgoImgzIix7ImlkIjoiZGVwbG95aW5nLWNyYS1hcHAifSwiRGVwbG95aW5nIENSQSBBcHAiKSxtZHgoImgzIix7ImlkIjoiMS11cGRhdGUtcGFja2FnZWpzb24ifSwiMS4gVXBkYXRlIHBhY2thZ2UuanNvbiIpLG1keCgicHJlIixudWxsLG1keCgiY29kZSIsT2JqZWN0LmFzc2lnbih7cGFyZW50TmFtZToicHJlIn0seyJjbGFzc05hbWUiOiJsYW5ndWFnZS1qc29uIn0pLCJcImhvbWVwYWdlXCI6IFwiLlwiLFxuIikpLG1keCgiaDMiLHsiaWQiOiIyLXVwZGF0ZS1yb3V0ZXIifSwiMi4gVXBkYXRlIHJvdXRlciIpLG1keCgicHJlIixudWxsLG1keCgiY29kZSIsT2JqZWN0LmFzc2lnbih7cGFyZW50TmFtZToicHJlIn0seyJjbGFzc05hbWUiOiJsYW5ndWFnZS1qYXZhc2NyaXB0In0pLCJleHBvcnQgY29uc3QgZGV2Um91dGVyID0gKCkgPT4gKFxuIDxSb3V0ZXIgaGlzdG9yeT17YnJvd3Nlckhpc3Rvcnl9PlxuICA8Um91dGUgcGF0aD17Jy9wYWdlLXByb2ZpbGUnfSBjb21wb25lbnQ9e1BhZ2VQcm9maWxlfSAvPlxuICA8Um91dGUgcGF0aD1cIipcIiBleGFjdD17dHJ1ZX0gY29tcG9uZW50PXtQYWdlSG9tZX0gLz5cbiA8L1JvdXRlcj5cbik7XG5cbmV4cG9ydCBjb25zdCBwcm9kUm91dGVyID0gKCkgPT4gKFxuIDxSb3V0ZXIgaGlzdG9yeT17YnJvd3Nlckhpc3Rvcnl9PlxuICA8Um91dGUgcGF0aD17Jy9wYWdlLXByb2ZpbGUnfSBjb21wb25lbnQ9e1BhZ2VQcm9maWxlfSAvPlxuICA8Um91dGUgcGF0aD17Jy8nfSBjb21wb25lbnQ9e1BhZ2VIb21lfSAvPlxuICA8Um91dGUgcGF0aD17JyonfSBleGFjdD17dHJ1ZX0gY29tcG9uZW50PXtQYWdlSG9tZX0gLz5cbiA8L1JvdXRlcj5cbik7XG5cbmV4cG9ydCBjb25zdCByb3V0ZXIgPSAoKSA9PlxuIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAnZGV2ZWxvcG1lbnQnID8gcHJvZFJvdXRlcigpIDogZGV2Um91dGVyKCk7XG4iKSksbWR4KCJoMyIseyJpZCI6IjMtdXBkYXRlLXJvdXRlcnB1c2gtY2FsbHMifSwiMy4gVXBkYXRlIHJvdXRlci5wdXNoIGNhbGxzIiksbWR4KCJwcmUiLG51bGwsbWR4KCJjb2RlIixPYmplY3QuYXNzaWduKHtwYXJlbnROYW1lOiJwcmUifSx7ImNsYXNzTmFtZSI6Imxhbmd1YWdlLWphdmFzY3JpcHQifSksImltcG9ydCBDb25maWcgZnJvbSAnc3JjL2FwcC5qc29uJztcbnJvdXRlci5wdXNoKHByb2Nlc3MuZW52LlBVQkxJQ19VUkwgKyAnL3Rlc3QnKTtcblxuLy8gSW4gdXNlXG5mdW5jdGlvbiBoYW5kbGVMaW5rKGUsIGQpIHtcbiBpZiAoZC5ocmVmWzBdID09PSAnLycpIHtcbiAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICBjb25zdCB7IHJvdXRlciB9ID0gdGhpcy5wcm9wcztcbiAgcm91dGVyLnB1c2goQ29uZmlnLmJhc2VVcmwgKyBkLmhyZWYpO1xuIH1cbn1cbiIpKSxtZHgoImgzIix7ImlkIjoiNC1zZXQtYS1iYXNldXJsLWluLWFwcGpzb24ifSwiNC4gU2V0IGEgYmFzZVVybCBpbiBhcHAuanNvbiIpLG1keCgicHJlIixudWxsLG1keCgiY29kZSIsT2JqZWN0LmFzc2lnbih7cGFyZW50TmFtZToicHJlIn0seyJjbGFzc05hbWUiOiJsYW5ndWFnZS1qc29uIn0pLCJ7XG4gXCJiYXNlVXJsXCI6IFwiL2RhdG8tY21zLXRlc3RcIlxufVxuIikpKTt9aWYodHlwZW9mIE1EWENvbnRlbnQhPT0ndW5kZWZpbmVkJyYmTURYQ29udGVudCYmTURYQ29udGVudD09PU9iamVjdChNRFhDb250ZW50KSYmT2JqZWN0LmlzRXh0ZW5zaWJsZShNRFhDb250ZW50KSl7T2JqZWN0LmRlZmluZVByb3BlcnR5KE1EWENvbnRlbnQsJ19fZmlsZW1ldGEnLHtlbnVtZXJhYmxlOnRydWUsY29uZmlndXJhYmxlOnRydWUsdmFsdWU6e25hbWU6Ik1EWENvbnRlbnQiLGZpbGVuYW1lOiJtYW51YWwvQVdTL1MzLUxhbWJkYS1TdWJkaXJlY3Rvcmllcy5tZCJ9fSk7fU1EWENvbnRlbnQuaXNNRFhDb21wb25lbnQ9dHJ1ZTs="},{"version":3,"sources":["/Users/okeeffe_d/Project-Imposter/developer-notes/manual/AWS/S3-Lambda-Subdirectories.md"],"names":["React","mdx","makeShortcode","name","MDXDefaultShortcode","props","console","warn","layoutProps","MDXLayout","MDXContent","components","isMDXComponent"],"mappings":"4LAAA,cACE,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,GAAT,KAAoB,eAApB,CACA,cAGF,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAAAC,IAAI,QAAI,SAASC,CAAAA,mBAAT,CAA6BC,KAA7B,CAAoC,CAChEC,OAAO,CAACC,IAAR,CAAa,aAAeJ,IAAf,CAAsB,yEAAnC,EACA,MAAO,WAASE,KAAT,CAAP,CACD,CAHyB,EAA1B,CAKA,GAAMG,CAAAA,WAAW,CAAG,EAApB,CAGA,GAAMC,CAAAA,SAAS,CAAG,SAAlB,CACA,cAAe,SAASC,CAAAA,UAAT,MAGZ,IAFDC,CAAAA,UAEC,MAFDA,UAEC,CADEN,KACF,+CACD,MAAO,KAAC,SAAD,kBAAeG,WAAf,CAAgCH,KAAhC,EAAuC,UAAU,CAAEM,UAAnD,CAA+D,OAAO,CAAC,WAAvE,GACL,SAAQ,CACN,KAAM,mEADA,CAAR,sEADK,CAIL,SAAQ,CACN,KAAM,OADA,CAAR,SAJK,CAOL,cACE,UAAI,UAAU,CAAC,IAAf,EAAoB,uBAAG,UAAU,CAAC,IAAd,EAAuB,CACvC,OAAQ,6IAD+B,CAAvB,sBAApB,CADF,CAIE,UAAI,UAAU,CAAC,IAAf,EAAoB,uBAAG,UAAU,CAAC,IAAd,EAAuB,CACvC,OAAQ,sFAD+B,CAAvB,oCAApB,CAJF,CAPK,CAeL,SAAQ,CACN,KAAM,OADA,CAAR,SAfK,CAkBL,SAAQ,CACN,KAAM,aADA,CAAR,gBAlBK,CAqBL,4HArBK,CAsBL,SAAQ,CACN,KAAM,qBADA,CAAR,wBAtBK,CAyBL,0GAzBK,CA0BL,SAAQ,CACN,KAAM,kDADA,CAAR,sDA1BK,CA6BL,wEA7BK,CA8BL,eAAK,0BAAM,UAAU,CAAC,KAAjB,EAA2B,CAC5B,YAAa,qBADe,CAA3B,8tBAAL,CA9BK,CAsDL,SAAQ,CACN,KAAM,mBADA,CAAR,qBAtDK,CAyDL,SAAQ,CACN,KAAM,sBADA,CAAR,0BAzDK,CA4DL,eAAK,0BAAM,UAAU,CAAC,KAAjB,EAA2B,CAC5B,YAAa,eADe,CAA3B,2BAAL,CA5DK,CAgEL,SAAQ,CACN,KAAM,iBADA,CAAR,oBAhEK,CAmEL,eAAK,0BAAM,UAAU,CAAC,KAAjB,EAA2B,CAC5B,YAAa,qBADe,CAA3B,mjBAAL,CAnEK,CAuFL,SAAQ,CACN,KAAM,2BADA,CAAR,+BAvFK,CA0FL,eAAK,0BAAM,UAAU,CAAC,KAAjB,EAA2B,CAC5B,YAAa,qBADe,CAA3B,uQAAL,CA1FK,CAwGL,SAAQ,CACN,KAAM,4BADA,CAAR,gCAxGK,CA2GL,eAAK,0BAAM,UAAU,CAAC,KAAjB,EAA2B,CAC5B,YAAa,eADe,CAA3B,6CAAL,CA3GK,CAAP,CAkHD,C,kRAEDD,UAAU,CAACE,cAAX,CAA4B,IAA5B","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"setting-up-a-lambdacloudfront-setup-to-fetch-subdirectories-in-s3\"\n    }}>{`Setting up a Lambda/Cloudfront setup to fetch subdirectories in S3`}</h1>\n    <h2 {...{\n      \"id\": \"links\"\n    }}>{`Links`}</h2>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://aws.amazon.com/blogs/compute/implementing-default-directory-indexes-in-amazon-s3-backed-amazon-cloudfront-origins-using-lambdaedge/\"\n        }}>{`Useful blog guide`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://medium.com/@svinkle/how-to-deploy-a-react-app-to-a-subdirectory-f694d46427c1\"\n        }}>{`Serving CRA from subdirectories`}</a></li>\n    </ul>\n    <h2 {...{\n      \"id\": \"setup\"\n    }}>{`Setup`}</h2>\n    <h3 {...{\n      \"id\": \"1-s3-bucket\"\n    }}>{`1. S3 Bucket`}</h3>\n    <p>{`Set up a restricted S3 bucket. Within this bucket, have subdirectories that house their own index.html file.`}</p>\n    <h3 {...{\n      \"id\": \"2-set-up-cloudfront\"\n    }}>{`2. Set up CloudFront`}</h3>\n    <p>{`Follow the permissions setup in the above article to know how to set up the correct event.`}</p>\n    <h3 {...{\n      \"id\": \"3-this-is-the-setup-for-a-javascript-lambda-call\"\n    }}>{`3. This is the setup for a JavaScript Lambda call.`}</h3>\n    <p>{`This must be done in a region that supports Lambda@next.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`'use strict';\nexports.handler = (event, context, callback) => {\n // Extract the request from the CloudFront event that is sent to Lambda@Edge\n var request = event.Records[0].cf.request;\n\n // Extract the URI from the request\n var olduri = request.uri;\n\n // Match any '/' that occurs at the end of a URI. Replace it with a default index\n var newuri = olduri.replace(/\\\\/$/, '/index.html');\n\n // Log the URI as received by CloudFront and the new URI to be used to fetch from origin\n console.log('Old URI: ' + olduri);\n console.log('New URI: ' + newuri);\n\n // Replace the received URI with the URI that includes the index page\n request.uri = newuri;\n\n // Return to CloudFront\n return callback(null, request);\n};\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"deploying-cra-app\"\n    }}>{`Deploying CRA App`}</h3>\n    <h3 {...{\n      \"id\": \"1-update-packagejson\"\n    }}>{`1. Update package.json`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`\"homepage\": \".\",\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"2-update-router\"\n    }}>{`2. Update router`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`export const devRouter = () => (\n <Router history={browserHistory}>\n  <Route path={'/page-profile'} component={PageProfile} />\n  <Route path=\"*\" exact={true} component={PageHome} />\n </Router>\n);\n\nexport const prodRouter = () => (\n <Router history={browserHistory}>\n  <Route path={'/page-profile'} component={PageProfile} />\n  <Route path={'/'} component={PageHome} />\n  <Route path={'*'} exact={true} component={PageHome} />\n </Router>\n);\n\nexport const router = () =>\n process.env.NODE_ENV !== 'development' ? prodRouter() : devRouter();\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"3-update-routerpush-calls\"\n    }}>{`3. Update router.push calls`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`import Config from 'src/app.json';\nrouter.push(process.env.PUBLIC_URL + '/test');\n\n// In use\nfunction handleLink(e, d) {\n if (d.href[0] === '/') {\n  e.preventDefault();\n  const { router } = this.props;\n  router.push(Config.baseUrl + d.href);\n }\n}\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"4-set-a-baseurl-in-appjson\"\n    }}>{`4. Set a baseUrl in app.json`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`{\n \"baseUrl\": \"/dato-cms-test\"\n}\n`}</code></pre>\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  "]}]}