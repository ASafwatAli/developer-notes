{"remainingRequest":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/docz-core/node_modules/babel-loader/lib/index.js??ref--6-1!/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/@mdx-js/loader/index.js??ref--6-2!/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/source-map-loader/index.js!/Users/dennis.okeeffe/Project-Imposter/developer-notes/manual/Chef/Chef-Udemy.md","dependencies":[{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/manual/Chef/Chef-Udemy.md","mtime":1562563032019},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/cache-loader/dist/cjs.js","mtime":1581496618588},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/docz-core/node_modules/babel-loader/lib/index.js","mtime":1578565694890},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/@mdx-js/loader/index.js","mtime":1581496618277},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/source-map-loader/index.js","mtime":1580255490569}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/dennis.okeeffe/Project-Imposter/developer-notes/manual/Chef/Chef-Udemy.md"],"names":["React","mdx","makeShortcode","name","MDXDefaultShortcode","props","console","warn","layoutProps","MDXLayout","MDXContent","components","isMDXComponent"],"mappings":"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","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"chef---udemy-course\"\n    }}>{`Chef - Udemy Course`}</h1>\n    {\n      /* TOC */\n    }\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"#chef---udemy-course\"\n        }}>{`Chef - Udemy Course`}</a><ul parentName=\"li\">\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#configuration-management\"\n            }}>{`Configuration Management`}</a></li>\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#infrastructure-as-code\"\n            }}>{`Infrastructure as Code`}</a></li>\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#your-first-chef-recipe\"\n            }}>{`Your First Chef Recipe`}</a></li>\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#chef-resources\"\n            }}>{`Chef Resources`}</a></li>\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#exploring-system-resources\"\n            }}>{`Exploring system resources`}</a></li>\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#convergence-and-desired-state\"\n            }}>{`Convergence and Desired State`}</a></li>\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#creating-an-exercise-work-station\"\n            }}>{`Creating an \"Exercise Work Station\"`}</a></li>\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#organising-resources-with-ruby\"\n            }}>{`Organising Resources with Ruby`}</a></li>\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#cookbooks\"\n            }}>{`Cookbooks`}</a><ul parentName=\"li\">\n              <li parentName=\"ul\"><a parentName=\"li\" {...{\n                  \"href\": \"#how-do-you-keep-track-of-changes-to-the-recipes\"\n                }}>{`How do you keep track of changes to the recipes?`}</a></li>\n              <li parentName=\"ul\"><a parentName=\"li\" {...{\n                  \"href\": \"#cookbook-components\"\n                }}>{`Cookbook Components`}</a></li>\n              <li parentName=\"ul\"><a parentName=\"li\" {...{\n                  \"href\": \"#tracking-changes-to-the-cookbooks\"\n                }}>{`Tracking changes to the Cookbooks`}</a></li>\n              <li parentName=\"ul\"><a parentName=\"li\" {...{\n                  \"href\": \"#setting-up-an-apache-cookbook\"\n                }}>{`Setting up an Apache Cookbook`}</a></li>\n            </ul></li>\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#chef-client\"\n            }}>{`Chef Client`}</a><ul parentName=\"li\">\n              <li parentName=\"ul\"><a parentName=\"li\" {...{\n                  \"href\": \"#include_recipe\"\n                }}>{`include_recipe`}</a></li>\n              <li parentName=\"ul\"><a parentName=\"li\" {...{\n                  \"href\": \"#defaultrb-example\"\n                }}>{`default.rb example`}</a></li>\n            </ul></li>\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#ohai\"\n            }}>{`Ohai`}</a><ul parentName=\"li\">\n              <li parentName=\"ul\"><a parentName=\"li\" {...{\n                  \"href\": \"#an-object-called-node\"\n                }}>{`An object called 'node'`}</a></li>\n            </ul></li>\n        </ul></li>\n    </ul>\n    {\n      /* /TOC */\n    }\n    <h2 {...{\n      \"id\": \"configuration-management\"\n    }}>{`Configuration Management`}</h2>\n    <p>{`Maintaining consistency for server integrity.`}</p>\n    <p>{`The process of configuration can be automated by some extent. When you reach scale, this automation is at the heart of configuration management (IT orchetration).`}</p>\n    <p>{`Imagine we are deploying a web server. If we have a config management solution, this could take minutes instead of hours.`}</p>\n    <p>{`System auditing will also be a hassle for disaster recovery too.`}</p>\n    <p>{`Revision control systems can also be version controlled with `}<inlineCode parentName=\"p\">{`infrastructure as code`}</inlineCode>{` by having these environments scripted.`}</p>\n    <h2 {...{\n      \"id\": \"infrastructure-as-code\"\n    }}>{`Infrastructure as Code`}</h2>\n    <p>{`Examples:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`version control`}</li>\n      <li parentName=\"ul\">{`testing`}</li>\n    </ul>\n    <p>{`These all helps to validate infrastructure code.`}</p>\n    <p>{`You can manage multiple cloud platforms etc.`}</p>\n    <p>{`The three things covered:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`chef development kit`}</li>\n      <li parentName=\"ul\">{`chef client`}</li>\n      <li parentName=\"ul\">{`chef server`}</li>\n    </ul>\n    <p>{`The Chef DK allows you to run local tools to write code and then upload it to a chef server. A node will be a server or machine managed by Chef.`}</p>\n    <p>{`You will get the desired state from the `}<inlineCode parentName=\"p\">{`cookbooks`}</inlineCode>{` or `}<inlineCode parentName=\"p\">{`recipes`}</inlineCode>{`.`}</p>\n    <h2 {...{\n      \"id\": \"your-first-chef-recipe\"\n    }}>{`Your First Chef Recipe`}</h2>\n    <p>{`Create a new file `}<inlineCode parentName=\"p\">{`hello.rb`}</inlineCode>{` and add `}<inlineCode parentName=\"p\">{`hello.txt`}</inlineCode>{` with Hello World.`}</p>\n    <p>{`First, give Chef a file.`}</p>\n    <p>{`Inside of the file:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-ruby\"\n      }}>{`file '/hello.txt' do\n    content 'Hello world!'\nend\n`}</code></pre>\n    <p>{`Running `}<inlineCode parentName=\"p\">{`sudo chef-client --client-mode hello.rb`}</inlineCode>{` will then build that file and update the content.`}</p>\n    <h2 {...{\n      \"id\": \"chef-resources\"\n    }}>{`Chef Resources`}</h2>\n    <p>{`Chef Resources are the fundamental building blocks of working with Chef.`}</p>\n    <p>{`The aim is to build the load balancer.`}</p>\n    <p>{`Resources describe the smallest piece we can configure in the system.`}</p>\n    <h2 {...{\n      \"id\": \"exploring-system-resources\"\n    }}>{`Exploring system resources`}</h2>\n    <p><strong parentName=\"p\">{`Example 1: Package Resource`}</strong></p>\n    <pre><code parentName=\"pre\" {...{}}>{`## Install the http package\npackage 'httd' do\n    action :install\nend\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Example 2: Service Resource`}</strong></p>\n    <pre><code parentName=\"pre\" {...{}}>{`## Run the ntp service\nservice 'ntp' do\n    action [ :enable, :start ]\nend\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Example 3: File Resource`}</strong></p>\n    <pre><code parentName=\"pre\" {...{}}>{`## Create the /etc/motd file\nfile 'etc/motd' do\n    content 'This computer is the property ...'\nend\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Example 4: File Resource`}</strong></p>\n    <pre><code parentName=\"pre\" {...{}}>{`## Remove a file\nfile 'etc/php.ini.default' do\n    action :delete\nend\n`}</code></pre>\n    <p>{`Looking back at the definition of a recipe. `}<inlineCode parentName=\"p\">{`hello.rb`}</inlineCode>{` was an example of a recipe file.`}</p>\n    <p>{`The \"type\" (eg file, service, package) and \"name\" (filename, filepath) should be action'd with \"properties\" (eg content 'Hello World!'). When we list a resource, we take `}<inlineCode parentName=\"p\">{`action`}</inlineCode>{` on that resource (eg `}<inlineCode parentName=\"p\">{`action :create`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`action :delete`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`action :enable`}</inlineCode>{`). The default action is taken if you do not list the action. The default is more of a `}<inlineCode parentName=\"p\">{`create`}</inlineCode>{` or `}<inlineCode parentName=\"p\">{`install`}</inlineCode>{` - it is important to know about what it is as you are writing out recipes.`}</p>\n    <h2 {...{\n      \"id\": \"convergence-and-desired-state\"\n    }}>{`Convergence and Desired State`}</h2>\n    <p>{`With the command `}<inlineCode parentName=\"p\">{`sudo chef-client --local-mode hello.rb`}</inlineCode>{`, when we run `}<inlineCode parentName=\"p\">{`--local-mode`}</inlineCode>{` we did it because the default mode is to talk to a `}<inlineCode parentName=\"p\">{`chef server`}</inlineCode>{`. Once we have a Chef server to work with, we can not use this mode.`}</p>\n    <p>{`What happens if you modify the content of the file that we create directly, what happens when Chef runs again?`}</p>\n    <p>{`Chef will then attempt to `}<inlineCode parentName=\"p\">{`repair`}</inlineCode>{` the file changes.`}</p>\n    <p>{`If we change the ownership for a file, Chef will only take action when it needs to. It will only take action if something is \"out of policy\".`}</p>\n    <h2 {...{\n      \"id\": \"creating-an-exercise-work-station\"\n    }}>{`Creating an \"Exercise Work Station\"`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-ruby\"\n      }}>{`# creating tree and ntp\npackage 'tree' do\n    action :install\nend\n\npackage 'ntp'\n\n# /etc/motd - content ownership\nfile '/etc/motd' do\n    content 'This is the property of me'\n    action :create\n    owner 'root'\n    group 'root'\nend\n`}</code></pre>\n    <p>{`You can also build an array and pass it into a package resource, but if we do that we won't have access to things like versions etc.`}</p>\n    <p>{`Then we can just run `}<inlineCode parentName=\"p\">{`sudo chef-client -z setup.rb`}</inlineCode>{`.`}</p>\n    <p>{`If we re-run the script, no actions will be taken if nothing needs to be modified.`}</p>\n    <h2 {...{\n      \"id\": \"organising-resources-with-ruby\"\n    }}>{`Organising Resources with Ruby`}</h2>\n    <p>{`You can also call recipes from other recipes.`}</p>\n    <p>{`Chef also runs the Ruby files synchronously.`}</p>\n    <h2 {...{\n      \"id\": \"cookbooks\"\n    }}>{`Cookbooks`}</h2>\n    <p>{`Ways to group recipes and put them into useful configurations.`}</p>\n    <p>{`Instead of a single recipe being sent to a server, we send a `}<inlineCode parentName=\"p\">{`cookbook`}</inlineCode>{`.`}</p>\n    <h3 {...{\n      \"id\": \"how-do-you-keep-track-of-changes-to-the-recipes\"\n    }}>{`How do you keep track of changes to the recipes?`}</h3>\n    <p>{`Cookbooks allow a way to package up the recipes and give it a version number and track changes.`}</p>\n    <p><inlineCode parentName=\"p\">{`A fundamental unit of configuration and policy distribution`}</inlineCode></p>\n    <p>{`When creating the cookbook, is describes a config for a particular scenario.`}</p>\n    <p>{`What to use cookbooks for:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Specifiy resources to use and in which order they are applied`}</li>\n      <li parentName=\"ul\">{`Attribute values`}</li>\n      <li parentName=\"ul\">{`File distributions`}</li>\n      <li parentName=\"ul\">{`Templates`}</li>\n      <li parentName=\"ul\">{`Extensions to Chef (lib, definitions and custom resources)`}</li>\n      <li parentName=\"ul\">{`Version Control`}</li>\n    </ul>\n    <p>{`Cookbook components:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`README`}</li>\n      <li parentName=\"ul\">{`metadata`}</li>\n      <li parentName=\"ul\">{`recipes`}</li>\n      <li parentName=\"ul\">{`testing directories (spec + test)`}</li>\n    </ul>\n    <h3 {...{\n      \"id\": \"cookbook-components\"\n    }}>{`Cookbook Components`}</h3>\n    <p>{`We can create cookbooks by using `}<inlineCode parentName=\"p\">{`chef generate [cookbook|other]`}</inlineCode>{`.`}</p>\n    <p>{`When we generate a cookbook, we should give the cookbook a relevant name. Example `}<inlineCode parentName=\"p\">{`chef generate cookbooks/workstation`}</inlineCode>{` to create a `}<inlineCode parentName=\"p\">{`workstation`}</inlineCode>{` book in the `}<inlineCode parentName=\"p\">{`cookbooks`}</inlineCode>{` folder.`}</p>\n    <h3 {...{\n      \"id\": \"tracking-changes-to-the-cookbooks\"\n    }}>{`Tracking changes to the Cookbooks`}</h3>\n    <p>{`Inside of a single repository, changes are generally tracked for a single cook book.`}</p>\n    <h3 {...{\n      \"id\": \"setting-up-an-apache-cookbook\"\n    }}>{`Setting up an Apache Cookbook`}</h3>\n    <p>{`First, create a new cookbook in the cookbooks foler using `}<inlineCode parentName=\"p\">{`chef generate cookbook cookbooks/apache`}</inlineCode></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-ruby\"\n      }}>{`# Server\n\n# 1. http package install (redhat)\npackage 'httpd' do\n    action :install\nend\n\n# 2. configure default apache server file /var/www/html\nfile '/var/www/html/index.html' do\n    content '<h1>Hello from Apache</h1>'\nend\n\n# 3. download apache, enable and start the apache service\npackage 'apache' do\n    action :install\nend\n\nservice 'httpd' do\n    action [ :enable, :start ]\nend\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"chef-client\"\n    }}>{`Chef Client`}</h2>\n    <p>{`How do we apply the recipes from the cookbooks from the Chef client? How do we call multiple recipes at once?`}</p>\n    <p>{`We can use a cook book to define the scenarios here.`}</p>\n    <p>{`Say we want to call a cookbook from a particular recipe.`}</p>\n    <p>{`We can also do `}<inlineCode parentName=\"p\">{`sudo chef-client -z --runlist \"recipe[cookbook::recipe]\"`}</inlineCode>{` to run a particular recipe.`}</p>\n    <p>{`For running multiple cookbook recipes, we could do `}<inlineCode parentName=\"p\">{`sudo chef-client -z --runlist \"recipe[cookbook::recipe],recipe[another-cookbook::recipe]\"`}</inlineCode>{`. This will do a `}<inlineCode parentName=\"p\">{`chef-client`}</inlineCode>{` run in order.`}</p>\n    <p>{`The runlist DOES NOT HAVE A SPACE between recipe declarations.`}</p>\n    <h3 {...{\n      \"id\": \"include_recipe\"\n    }}>{`include_recipe`}</h3>\n    <p>{`The `}<inlineCode parentName=\"p\">{`include_recipe`}</inlineCode>{` method allows you to include a recipe from either the online cookbook stores or from one of our own cookbooks.`}</p>\n    <p>{`This is a great way to `}<inlineCode parentName=\"p\">{`wrap`}</inlineCode>{` cookbooks.`}</p>\n    <p>{`Each of the cookbooks that we generate come with a `}<inlineCode parentName=\"p\">{`default.rb`}</inlineCode>{` recipe. This default recipe can help us call other recipes.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-ruby\"\n      }}>{`# in the default.rb file for a recipe\n\n# example 'cookbook::recipe'\ninclude_recipe 'workstation::setup'\n`}</code></pre>\n    <p>{`If we now run `}<inlineCode parentName=\"p\">{`sudo chef-client -z -r \"recipe[workstation]\"`}</inlineCode>{` and omit the specific recipe, then the `}<inlineCode parentName=\"p\">{`default.rb`}</inlineCode>{` recipe will be used.`}</p>\n    <h3 {...{\n      \"id\": \"defaultrb-example\"\n    }}>{`default.rb example`}</h3>\n    <p>{`Including the server recipe from the apache cookbook.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-ruby\"\n      }}>{`include_recipe 'apache::server'\n`}</code></pre>\n    <p>{`Now we can call sudo chef-client -z -r \"recipe`}{`[apache]`}{`\"\\`.`}</p>\n    <h2 {...{\n      \"id\": \"ohai\"\n    }}>{`Ohai`}</h2>\n    <p>{`We need to think about distribution of the cookbooks to many different nodes.`}</p>\n    <p>{`We may need to know a bit of information about that `}<inlineCode parentName=\"p\">{`node`}</inlineCode>{`. That's where `}<inlineCode parentName=\"p\">{`ohai`}</inlineCode>{` comes in.`}</p>\n    <h3 {...{\n      \"id\": \"an-object-called-node\"\n    }}>{`An object called 'node'`}</h3>\n    <p>{`We can now begin to start thinking of scale - how to deal with 100s or 1000s or similar servers.`}</p>\n    <p>{`This webserver code that we have could be distributed to thousands of nodes, but the config might need to be different on each of these nodes.`}</p>\n    <p>{`What happens if a host specific config needs to be different? Eg. hostname, memory available, IP address etc. These things may very from system to system.`}</p>\n    <p><inlineCode parentName=\"p\">{`Ohai`}</inlineCode>{` is a system discovery tool. It's a command line tool that is required by `}<inlineCode parentName=\"p\">{`chef-client`}</inlineCode>{`.`}</p>\n    <p><inlineCode parentName=\"p\">{`ohai`}</inlineCode>{` gives back all the node system data in JSON. Everytime `}<inlineCode parentName=\"p\">{`chef-client`}</inlineCode>{` is run, it automatically executes an `}<inlineCode parentName=\"p\">{`ohai`}</inlineCode>{` and allows this object (known as the node object) to be accessed. We call these attributes available as `}<inlineCode parentName=\"p\">{`node attributes`}</inlineCode>{`. Each `}<inlineCode parentName=\"p\">{`attribute`}</inlineCode>{` also has `}<inlineCode parentName=\"p\">{`sub-attributes`}</inlineCode>{`.`}</p>\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  "]}]}