{"remainingRequest":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/docz-core/node_modules/babel-loader/lib/index.js??ref--6-1!/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/@mdx-js/loader/index.js??ref--6-2!/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/source-map-loader/index.js!/Users/dennis.okeeffe/Project-Imposter/developer-notes/manual/PHP/php-cheat-sheet.md","dependencies":[{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/manual/PHP/php-cheat-sheet.md","mtime":1562563032075},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/cache-loader/dist/cjs.js","mtime":1564095360956},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/docz-core/node_modules/babel-loader/lib/index.js","mtime":1562568123838},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/@mdx-js/loader/index.js","mtime":1565139338792},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/source-map-loader/index.js","mtime":1564095361765}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/dennis.okeeffe/Project-Imposter/developer-notes/manual/PHP/php-cheat-sheet.md"],"names":["React","mdx","makeShortcode","name","MDXDefaultShortcode","props","console","warn","layoutProps","MDXLayout","MDXContent","components","isMDXComponent"],"mappings":"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","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"php-help-sheet\"\n    }}>{`PHP Help Sheet`}</h1>\n    <h2 {...{\n      \"id\": \"treehouse-php-classes\"\n    }}>{`Treehouse PHP Classes`}</h2>\n    <blockquote>\n      <p parentName=\"blockquote\">{`PHP OOP\nclasses\nrecipe.php\ncookbook.php`}</p>\n    </blockquote>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-php\"\n      }}>{`// recipe.php\n\n<?php\n\nclass Recipe\n{\n    private $title;\n    public $ingredients = array();\n    public $instruction = array();\n    public $yield;\n    public $tag = array();\n    public $source = 'Alena Holligan';\n\n    private $measurements = array(\n        \"tsp\",\n        \"tbsp\",\n        \"cup\",\n        \"oz\",\n        \"lb\",\n        \"fl oz\",\n        \"pint\",\n        \"quart\",\n        \"gallon\"\n    );\n\n    public function displayRecipe()\n    {\n        return $this->title . \"by\" . $this->source;\n    }\n\n    public function addIngredient($item, $amount = null, $measure=null)\n    {\n        if ($amount != null && !is_float($amount) && !is_int($amount)) {\n            exit(\"The amount must be a float: \") . gettype($amount) . \" $amount given\");\n        }\n\n        if ($measure != null && !in_array(strtolower($measure), $this->measurements)) {\n            exit(\"Please enter a valid measurement: \" . implode(\", \", $this->measurements));\n        }\n\n        $this->ingredients[] = array (\n            \"item\" => ucwords($item),\n            \"amount\" => $amount,\n            \"measure\" => strtolower($measure)\n        );\n    }\n\n    public function getIngredients()\n    {\n        return $this->ingredients;\n    }\n\n    public function setTitle($title)\n    {\n        $this->title = ucword($title);\n    }\n\n    public function getTitle()\n    {\n        return $this->title;\n    }\n\n}\n\n?>\n\n// cookbook.php\n\n<?php\n\ninclude \"classes/recipes.php\";\n\n$recipe1 = new Recipe();\necho $recipe1->source;\n$recipe1->source(\"Grandma Holligan\");\necho $recipe1->source;\n$recipe1->setTitle(\"My first recipe\");\n$recipe1->getTitle();\n\n$recipe1->addIngredient(\"egg\",1);\n$recipe1->addIngredient(\"flour\",2,\"cup\");\n\n$recipe2 = new Recipe();\n$recipe2->source = \"Betty Crocker\";\n$recipe1->setTitle = \"My second recipe\";\n\necho $recipe1->source;\necho $recipe2->source;\n\necho $recipe1->displayRecipe();\necho $recipe2->displayRecipe();\n\nforeach ($recipe1->getIngredients() as $ing) {\n    echo \"\\\\n\" . $ing[\"amount\"] . \" \" . $ing[\"measure\"] . \" \" . $ing[\"item\"];\n}\n\nvar_dump($recipe1);\n\n?>\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"php-access-modifiers\"\n    }}>{`PHP Access Modifiers`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-php\"\n      }}>{`<?php\n\nclass Render {\n\n  public static function displayDimensions($size) {\n      return $size[0] . \" x \" . $size[1];\n  }\n\n  public static function detailsKitchen($room) {\n       return \"Kitchen Dimensions: \" . self::displayDimensions($room->getDimensions());\n  }\n\n}\n\n?>\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"php-magic-methods-and-constants\"\n    }}>{`PHP Magic Methods and Constants`}</h2>\n    <p>{`Some magic constants:`}</p>\n    <p><strong parentName=\"p\">{`CLASS`}</strong>{`\n`}<strong parentName=\"p\">{`FILE`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-php\"\n      }}>{`<?php\nclass Example\n{\n\n    public function __construct($title = null)\n    {\n        $this->setTitle($title);\n    }\n\n    public function __toString()\n    {\n        $output = \"You are calling a \" . __CLASS__ . \" object with the title \\\\\"\";\n        $output .= $this->getTitle() . \"\\\\\"\";\n        $output .= \"\\\\nIt is stored in \" . basename(__FILE__) . \" at \" . __DIR__ . \".\";\n        $output .= \"\\\\nThis display is from line \" . __LINE__ . \" in method \" . __METHOD__;\n        $output .= \"\\\\nThe following methods are available for objects of this class: \\\\n\";\n        $output .= implode(\"\\\\n\", get_class_methods(__CLASS__));\n        return $output;\n    }\n}\n\nclass Render\n{\n\n    public function __toString()\n    {\n        $output = \"The following methods are available for \" . __CLASS__ . \" objects: \\\\n\";\n        $output .= implode(\"\\\\n\", get_class_methods(__CLASS__));\n        return $output;\n    }\n}\n\n$example = new Example(\"Name\");\necho $example;\n\n?>\n\n<?php\n\nclass Fish\n{\n    public $common_name;\n    public $flavor;\n    public $record_weight;\n\n    public function __construct($name, $flavor, $record) {\n      $this->common_name = $name;\n      $this->flavor = $flavor;\n      $this->record_weight = $record;\n    }\n\n    public function getInfo() {\n      return \"A {$this->common_name} is an {$this->flavor} flavored fish. The world record weight is {$this->record_weight}.\";\n    }\n}\n\n$bass = new Fish(\"Largemouth Bass\", \"Excellent\", \"22 pounds 5 ounces\");\n\n?>\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"php-collections\"\n    }}>{`PHP Collections`}</h2>\n    <p>{`recipecollection.php`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-php\"\n      }}>{`<?\n\nclass RecipeCollection\n{\n    private $title;\n    private $recipes = array();\n\n    // has constructor here and setter and getters\n\n    public function addRecipe($recipe) {\n        $this->recipes[] = $recipe;\n    }\n\n    public function getRecipe() {\n        return $this->recipes;\n    }\n}\n\n?>\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"php-arrays\"\n    }}>{`PHP Arrays`}</h2>\n    <p>{`Create\n$myArray = array();`}</p>\n    <p>{`Push into\n$myArray[] = \"­Som­eth­ing­\";`}</p>\n    <p>{`Push to associ­ative\n$myArr­ay`}{`[­'key']`}{` = \"­Val­ue\";`}</p>\n    <p>{`Create numeric\n$myArray = array(­'va­lue', 'value2');`}</p>\n    <p>{`Create associ­ative\n$a = array(­'ke­y'=­>'v­al');`}</p>\n    <p>{`Print from numeric\necho $myArr­ay`}{`[0]`}{`;`}</p>\n    <p>{`Print from associ­ative\necho $myArr­ay`}{`[­'key']`}{`;`}</p>\n    <p>{`Associ­ative arrays\nKeys are strings`}</p>\n    <p>{`Numeric arrays\nKeys are numbers: 0,1,2,3,4`}</p>\n    <h2 {...{\n      \"id\": \"php-array-functions\"\n    }}>{`PHP Array Functions`}</h2>\n    <p>{`array_diff (arr1, arr2 ...)\narray_filter (arr, function)\narray_flip (arr)\narray_intersect (arr1, arr2 ...)\narray_merge (arr1, arr2 ...)\narray_pop (arr)\narray_push (arr, var1, var2 ...)\narray_reverse (arr)\narray_keys(array $array [, mixed $search_value = null `}{`[, bool $strict = false ]`}{`] )\narray_search (needle, arr)\narray_walk (arr, function)\ncount (count)\nin_array (needle, haystack)`}</p>\n    <p>{`// ARRAY EXAMPLES`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-php\"\n      }}>{`<?php\n    // add code below this comment\nclass Subdivision\n{\n  public $houses = array();\n\n  public function filterHouseColor($color)\n  {\n    $return = array();\n    foreach ($this->houses as $house) {\n      if ($house->roof_color == $color || $house->wall_color == $color) {\n        $return[] = $house;\n      }\n    }\n    return $return;\n  }\n}\n\n?>\n\n<? php\n\npublic function getCombinedIngredients()\n{\n    $ingredients = array();\n    foreach ($this->recipes as $recipe) {\n        foreach($recipe->getIngredients() as $ing) {\n            $item = $ing[\"item\"];\n\n            if (strpos($item, \",\")) {\n                $item = strstr($item, \",\", true);\n            }\n\n            if (in_array($item.\"s\", $ingredients)) {\n                $item.=\"s\";\n            } else if (in_array(substr($item, 0, -1), $ingredients)) {\n                $item = substr($item, 0, -1);\n            }\n\n            $ingredients[$item] = array (\n                $ing[\"amount\"],\n                $ing[\"measure\"]\n            );\n        }\n    }\n\n    return $ingredients;\n}\n\n?>\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"php-control-flow-logic\"\n    }}>{`PHP Control Flow Logic`}</h2>\n    <p>{`if (condi­tion) {\n... }\nelseif (condi­tion) {\n... }\nelse {\n... }`}</p>\n    <p>{`FOR loop\nfor (initi­alize; condition; update) { ... }`}</p>\n    <p>{`WHILE loop\nwhile (condi­tion) { ... }`}</p>\n    <p>{`FOREACH loop\nforeach ($array as $value) { ... }`}</p>\n    <p>{`DO WHILE\ndo { ... ;} while (condi­tion)`}</p>\n    <p>{`SWITCH ($s) {\ncase 1:\n...\nbreak;\ncase 2:\n...\nbreak;\ndefault:\n...\n}`}</p>\n    <h2 {...{\n      \"id\": \"php-ifelseif-statements-within-a-web-document\"\n    }}>{`PHP if/elseif statements within a web document`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-php\"\n      }}>{`<?php\n\n$bool = false;\n\n?>\n\n<?php if ($bool) : ?>\n\n    <div>\n        <p><?php echo \"Bool is true\"?></p>\n    </div>\n\n<?php elseif (!$bool) : ?>\n\n    <div>\n        <p><?php echo \"Elseif works\"?></p>\n    </div>\n\n<?php else : ?>\n\n    <div>\n        <p><?php echo \"Bool is false\"?></p>\n    </div>\n\n<?php endif; ?>\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"php-general-functions\"\n    }}>{`PHP General Functions`}</h2>\n    <p>{`isset()\ntest for variable exists\nempty()\ntest for empty variable\nmail($to, $subject, $msg, 'From: ' . $email)\nmail function\nmysqli­`}<em parentName=\"p\">{`fe­tch­_ar­ray­($r­esult)\nfetch each row of a query (in $result)\nheader()\nsend a header from the server\nis_num­eric()\ntest to see if a value is number\nexit()\ncauses script to stop immedi­ately\ntrim($­string)\ntrims leading and trailing spaces\nmysqli­_re­al`}</em>{`­esc­ape­_st­rin­g($­string)\nescapes special characters\nstr_re­pla­ce('a', 'b', $string)\nreplace a with b in a string\nexplode(', ' , $string)\nmake string into array\nimplode(', \" $string)\nmake array into string\nsubstr ($string, start, len)\ngrabs a substring\npreg_m­atc­h('­regex', $string)\nmatches regular expres­sions\npreg_r­epl­ace­('r­egex', $replace, $string)\nreplaces characters in a string by regex`}</p>\n    <h2 {...{\n      \"id\": \"php-regex-functions\"\n    }}>{`PHP Regex Functions`}</h2>\n    <p>{`ereg (pattern, str)\nsplit (pattern, str)\nereg_replace (pattern, replace, str)\npreg_grep (pattern, arr)\npreg_match (pattern, str)\npreg_match_all (pattern, str, arr)\npreg_replace (pattern, replace, str)\npreg_split (pattern, str)`}</p>\n    <h2 {...{\n      \"id\": \"php-string-functions\"\n    }}>{`PHP String Functions`}</h2>\n    <p>{`crypt (str, salt)\nexplode (sep, str)\nimplode (glue, arr)\nnl2br (str)\nsprintf (frmt, args)\nstrip_tags (str, allowed_tags)\nstr_replace (search, replace, str)\nstrpos (str, needle)\nstrrev (str)\nstrstr (str, needle)\nstrtolower (str)\nstrtoupper (str)\nsubstr (string, start, len)`}</p>\n    <h2 {...{\n      \"id\": \"php-file-system-functions\"\n    }}>{`PHP File System Functions`}</h2>\n    <p>{`clearstatcache ()\ncopy (source, dest)\nfclose (handle)\nfgets (handle, len)\nfile (file)\nfilemtime (file)\nfilesize (file)\nfile_exists (file)\nfopen (file, mode)\nfread (handle, len)\nfwrite (handle, str)\nreadfile (file)clearstatcache ()\ncopy (source, dest)\nfclose (handle)\nfgets (handle, len)\nfile (file)\nfilemtime (file)\nfilesize (file)\nfile_exists (file)\nfopen (file, mode)\nfread (handle, len)\nfwrite (handle, str)\nreadfile (file)`}</p>\n    <h2 {...{\n      \"id\": \"php-datetime-functions\"\n    }}>{`PHP Date/Time Functions`}</h2>\n    <p>{`checkdate (month, day, year)\ndate (format, timestamp)\ngetdate (timestamp)\nmktime (hr, min, sec, month, day, yr)\nstrftime (formatstring, timestamp)\nstrtotime (str)\ntime ()`}</p>\n    <h2 {...{\n      \"id\": \"php-date-formatting\"\n    }}>{`PHP Date Formatting`}</h2>\n    <p>{`Y\n4 digit year (2008)\ny\n2 digit year (08)\nF\nLong month (January)\nM\nShort month (Jan)\nm\nMonth ⁴ (01 to 12)\nn\nMonth (1 to 12)\nD\nShort day name (Mon)\nl\nLong day name (Monday) (lowercase L)\nd\nDay ⁴ (01 to 31)\nj\nDay (1 to 31)`}</p>\n    <p>{`h\n12 Hour ⁴ (01 to 12)\ng\n12 Hour (1 to 12)\nH\n24 Hour ⁴ (00 to 23)\nG\n24 Hour (0 to 23)\ni\nMinutes ⁴ (00 to 59)\ns\nSeconds ⁴ (00 to 59)`}</p>\n    <p>{`w\nDay of week ¹ (0 to 6)\nz\nDay of year (0 to 365)\nW\nWeek of year ² (1 to 53)\nt\nDays in month (28 to 31)`}</p>\n    <p>{`a\nam or pm\nA\nAM or PM\nB\nSwatch Internet Time (000 to 999)\nS\nOrdinal Suffix (st, nd, rd, th)`}</p>\n    <p>{`T\nTimezone of machine (GMT)\nZ\nTimezone offset (seconds)\nO\nGMT offset (hours) (+0200)\nI\nDaylight saving (1 or 0)\nL\nLeap year (1 or 0)`}</p>\n    <p>{`U\nSeconds since Epoch ³\nc\nISO 8601 (PHP 5) (2008-­07-­31T­18:­30:­13+­01:00)\nr\nRFC 2822 (Thu, 31 Jul 2008 18:30:13 +0100)`}</p>\n    <h2 {...{\n      \"id\": \"accessing-deep-arrays-to-find-values\"\n    }}>{`Accessing deep arrays to find values`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-php\"\n      }}>{`$locations = Timber::get_terms('locations');\n\n        $data = [];\n        $exclusion = [];\n\n        foreach($locations as $location) {\n            $data[] = [\n                \"location\" => $location,\n                \"posts\" => Locations::getPostsForLocation($location,$count,$exclusion)\n            ];\n\n            // add posts with current ids to array to check against\n            foreach ($data as $key => $value) {\n                if ($value[\"posts\"]) {\n                    $posts = $value[\"posts\"];\n                    foreach($posts as $key => $value) {\n                        if (in_array($value->id, $exclusion)) {\n                            unset($posts[$key]);\n                        } else {\n                            array_push($exclusion, $value->id);\n                        }\n                    }\n                }\n            }\n        }\n`}</code></pre>\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  "]}]}