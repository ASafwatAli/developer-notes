{"remainingRequest":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/docz-core/node_modules/babel-loader/lib/index.js??ref--6-1!/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/@mdx-js/loader/index.js??ref--6-2!/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/source-map-loader/index.js!/Users/dennis.okeeffe/Project-Imposter/developer-notes/manual/Java/Java-Initialising-Arrays.md","dependencies":[{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/manual/Java/Java-Initialising-Arrays.md","mtime":1562563032042},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/cache-loader/dist/cjs.js","mtime":1564095360956},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/docz-core/node_modules/babel-loader/lib/index.js","mtime":1562568123838},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/@mdx-js/loader/index.js","mtime":1565139338792},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/source-map-loader/index.js","mtime":1564095361765}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9vYmplY3RXaXRob3V0UHJvcGVydGllcyBmcm9tIi9Vc2Vycy9kZW5uaXMub2tlZWZmZS9Qcm9qZWN0LUltcG9zdGVyL2RldmVsb3Blci1ub3Rlcy9ub2RlX21vZHVsZXMvYmFiZWwtcHJlc2V0LXJlYWN0LWFwcC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0V2l0aG91dFByb3BlcnRpZXMiOy8qIEBqc3ggbWR4ICovaW1wb3J0IFJlYWN0IGZyb20ncmVhY3QnO2ltcG9ydHttZHh9ZnJvbSdAbWR4LWpzL3JlYWN0JzsvKiBAanN4IG1keCAqL3ZhciBtYWtlU2hvcnRjb2RlPWZ1bmN0aW9uIG1ha2VTaG9ydGNvZGUobmFtZSl7cmV0dXJuIGZ1bmN0aW9uIE1EWERlZmF1bHRTaG9ydGNvZGUocHJvcHMpe2NvbnNvbGUud2FybigiQ29tcG9uZW50ICIrbmFtZSsiIHdhcyBub3QgaW1wb3J0ZWQsIGV4cG9ydGVkLCBvciBwcm92aWRlZCBieSBNRFhQcm92aWRlciBhcyBnbG9iYWwgc2NvcGUiKTtyZXR1cm4gbWR4KCJkaXYiLHByb3BzKTt9O307dmFyIGxheW91dFByb3BzPXt9O3ZhciBNRFhMYXlvdXQ9IndyYXBwZXIiO2V4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIE1EWENvbnRlbnQoX3JlZil7dmFyIGNvbXBvbmVudHM9X3JlZi5jb21wb25lbnRzLHByb3BzPV9vYmplY3RXaXRob3V0UHJvcGVydGllcyhfcmVmLFsiY29tcG9uZW50cyJdKTtyZXR1cm4gbWR4KE1EWExheW91dCxPYmplY3QuYXNzaWduKHt9LGxheW91dFByb3BzLHByb3BzLHtjb21wb25lbnRzOmNvbXBvbmVudHMsbWR4VHlwZToiTURYTGF5b3V0In0pLG1keCgiaDEiLHsiaWQiOiJpbml0aWFsaXNpbmctYXJyYXlzLWluLWphdmEifSwiSW5pdGlhbGlzaW5nIEFycmF5cyBpbiBKYXZhIiksbWR4KCJwIixudWxsLCJCYXNpYyBleGFtcGxlIG9uIGhvdyB0byBkZWNsYXJlLCBkZWNsYXJlIHdpdGggYWxsb2NhdGVkIHNpemUgYW5kIGluaXRpYWxpc2Ugd2l0aCBkZWZhdWx0IHZhbHVlczoiKSxtZHgoInByZSIsbnVsbCxtZHgoImNvZGUiLE9iamVjdC5hc3NpZ24oe3BhcmVudE5hbWU6InByZSJ9LHsiY2xhc3NOYW1lIjoibGFuZ3VhZ2UtamF2YSJ9KSwiaW50W10gYWxsb2NBcnIgPSBuZXcgaW50WzJdOyAvLyBpbml0IHdpdGggbWVtb3J5IGZvciAyIHNwYWNlc1xuaW50W10gZGVjbGFyZUFycjsgLy8gZGVjbGFyYXRpb25cbmludFtdIHdpdGhWYWx1ZXMgPSB7IG4uZGF0YSB9OyAvLyBzaG9ydGhhbmQgaW5pdCB3aXRoIHZhbHVlc1xuIikpLG1keCgiaDIiLHsiaWQiOiJwdXNoLXBvcC1zaGlmdC11bnNoaWZ0In0sIlB1c2gsIHBvcCwgc2hpZnQsIHVuc2hpZnQiKSxtZHgoInAiLG51bGwsIlRoaXMgcmVxdWlyZXMgdGhlIHVzZSBvZiAiLG1keCgiaW5saW5lQ29kZSIse3BhcmVudE5hbWU6InAifSwiTGlzdCIpLCIgYW5kICIsbWR4KCJpbmxpbmVDb2RlIix7cGFyZW50TmFtZToicCJ9LCJBcnJheUxpc3QiKSksbWR4KCJwcmUiLG51bGwsbWR4KCJjb2RlIixPYmplY3QuYXNzaWduKHtwYXJlbnROYW1lOiJwcmUifSx7ImNsYXNzTmFtZSI6Imxhbmd1YWdlLWphdmEifSksIkFycmF5LnB1c2ggICAgLT4gQXJyYXlMaXN0LmFkZChPYmplY3Qgbyk7IC8vIEFwcGVuZCB0aGUgbGlzdFxuQXJyYXkucG9wICAgICAtPiBBcnJheUxpc3QucmVtb3ZlKGludCBpbmRleCk7IC8vIFJlbW92ZSBsaXN0W2luZGV4XVxuQXJyYXkuc2hpZnQgICAtPiBBcnJheUxpc3QucmVtb3ZlKDApOyAvLyBSZW1vdmUgZmlyc3QgZWxlbWVudFxuQXJyYXkudW5zaGlmdCAtPiBBcnJheUxpc3QuYWRkKGludCBpbmRleCwgT2JqZWN0IG8pOyAvLyBQcmVwZW5kIHRoZSBsaXN0XG4iKSksbWR4KCJwIixudWxsLCJFeGFtcGxlOiIpLG1keCgicHJlIixudWxsLG1keCgiY29kZSIsT2JqZWN0LmFzc2lnbih7cGFyZW50TmFtZToicHJlIn0seyJjbGFzc05hbWUiOiJsYW5ndWFnZS1qYXZhIn0pLCJpbXBvcnQgamF2YS51dGlsLkFycmF5TGlzdDtcbmltcG9ydCBqYXZhLnV0aWwuTGlzdDtcblxucHVibGljIGNsYXNzIE1haW4ge1xuXG4gICAgcHVibGljIHN0YXRpYyB2b2lkIG1haW4oU3RyaW5nW10gYXJncykge1xuXG4gICAgICAgIExpc3Q8U3RyaW5nPiBhbmltYWxzID0gbmV3IEFycmF5TGlzdDw+KCk7XG5cbiAgICAgICAgYW5pbWFscy5hZGQoXCJMaW9uXCIpO1xuICAgICAgICBhbmltYWxzLmFkZChcIlRpZ2VyXCIpO1xuICAgICAgICBhbmltYWxzLmFkZChcIkNhdFwiKTtcbiAgICAgICAgYW5pbWFscy5hZGQoXCJEb2dcIik7XG5cbiAgICAgICAgU3lzdGVtLm91dC5wcmludGxuKGFuaW1hbHMpOyAvLyBbTGlvbiwgVGlnZXIsIENhdCwgRG9nXVxuXG4gICAgICAgIC8vIGFkZCgpIC0+IHB1c2goKTogQWRkIGl0ZW1zIHRvIHRoZSBlbmQgb2YgYW4gYXJyYXlcbiAgICAgICAgYW5pbWFscy5hZGQoXCJFbGVwaGFudFwiKTtcbiAgICAgICAgU3lzdGVtLm91dC5wcmludGxuKGFuaW1hbHMpOyAgLy8gW0xpb24sIFRpZ2VyLCBDYXQsIERvZywgRWxlcGhhbnRdXG5cbiAgICAgICAgLy8gcmVtb3ZlKCkgLT4gcG9wKCk6IFJlbW92ZSBhbiBpdGVtIGZyb20gdGhlIGVuZCBvZiBhbiBhcnJheVxuICAgICAgICBhbmltYWxzLnJlbW92ZShhbmltYWxzLnNpemUoKSAtIDEpO1xuICAgICAgICBTeXN0ZW0ub3V0LnByaW50bG4oYW5pbWFscyk7IC8vIFtMaW9uLCBUaWdlciwgQ2F0LCBEb2ddXG5cbiAgICAgICAgLy8gYWRkKDAsXCJ4eXpcIikgLT4gdW5zaGlmdCgpOiBBZGQgaXRlbXMgdG8gdGhlIGJlZ2lubmluZyBvZiBhbiBhcnJheVxuICAgICAgICBhbmltYWxzLmFkZCgwLCBcIlBlbmd1aW5cIik7XG4gICAgICAgIFN5c3RlbS5vdXQucHJpbnRsbihhbmltYWxzKTsgLy8gW1Blbmd1aW4sIExpb24sIFRpZ2VyLCBDYXQsIERvZ11cblxuICAgICAgICAvLyByZW1vdmUoMCkgLT4gc2hpZnQoKTogUmVtb3ZlIGFuIGl0ZW0gZnJvbSB0aGUgYmVnaW5uaW5nIG9mIGFuIGFycmF5XG4gICAgICAgIGFuaW1hbHMucmVtb3ZlKDApO1xuICAgICAgICBTeXN0ZW0ub3V0LnByaW50bG4oYW5pbWFscyk7IC8vIFtMaW9uLCBUaWdlciwgQ2F0LCBEb2ddXG5cbiAgICB9XG59XG4iKSkpO31pZih0eXBlb2YgTURYQ29udGVudCE9PSd1bmRlZmluZWQnJiZNRFhDb250ZW50JiZNRFhDb250ZW50PT09T2JqZWN0KE1EWENvbnRlbnQpJiZPYmplY3QuaXNFeHRlbnNpYmxlKE1EWENvbnRlbnQpKXtPYmplY3QuZGVmaW5lUHJvcGVydHkoTURYQ29udGVudCwnX19maWxlbWV0YScse2VudW1lcmFibGU6dHJ1ZSxjb25maWd1cmFibGU6dHJ1ZSx2YWx1ZTp7bmFtZToiTURYQ29udGVudCIsZmlsZW5hbWU6Im1hbnVhbC9KYXZhL0phdmEtSW5pdGlhbGlzaW5nLUFycmF5cy5tZCJ9fSk7fU1EWENvbnRlbnQuaXNNRFhDb21wb25lbnQ9dHJ1ZTs="},{"version":3,"sources":["/Users/dennis.okeeffe/Project-Imposter/developer-notes/manual/Java/Java-Initialising-Arrays.md"],"names":["React","mdx","makeShortcode","name","MDXDefaultShortcode","props","console","warn","layoutProps","MDXLayout","MDXContent","components","isMDXComponent"],"mappings":"iMAAA,cACE,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,GAAT,KAAoB,eAApB,CACA,cAGF,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAAAC,IAAI,QAAI,SAASC,CAAAA,mBAAT,CAA6BC,KAA7B,CAAoC,CAChEC,OAAO,CAACC,IAAR,CAAa,aAAeJ,IAAf,CAAsB,yEAAnC,EACA,MAAO,WAASE,KAAT,CAAP,CACD,CAHyB,EAA1B,CAKA,GAAMG,CAAAA,WAAW,CAAG,EAApB,CAGA,GAAMC,CAAAA,SAAS,CAAG,SAAlB,CACA,cAAe,SAASC,CAAAA,UAAT,MAGZ,IAFDC,CAAAA,UAEC,MAFDA,UAEC,CADEN,KACF,+CACD,MAAO,KAAC,SAAD,kBAAeG,WAAf,CAAgCH,KAAhC,EAAuC,UAAU,CAAEM,UAAnD,CAA+D,OAAO,CAAC,WAAvE,GACL,SAAQ,CACN,KAAM,6BADA,CAAR,+BADK,CAIL,gHAJK,CAKL,eAAK,0BAAM,UAAU,CAAC,KAAjB,EAA2B,CAC5B,YAAa,eADe,CAA3B,oKAAL,CALK,CAWL,SAAQ,CACN,KAAM,wBADA,CAAR,6BAXK,CAcL,yCAAgC,kBAAY,UAAU,CAAC,GAAvB,SAAhC,SAAyF,kBAAY,UAAU,CAAC,GAAvB,cAAzF,CAdK,CAeL,eAAK,0BAAM,UAAU,CAAC,KAAjB,EAA2B,CAC5B,YAAa,eADe,CAA3B,iRAAL,CAfK,CAsBL,wBAtBK,CAuBL,eAAK,0BAAM,UAAU,CAAC,KAAjB,EAA2B,CAC5B,YAAa,eADe,CAA3B,8lCAAL,CAvBK,CAAP,CA6DD,C,mRAEDD,UAAU,CAACE,cAAX,CAA4B,IAA5B","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"initialising-arrays-in-java\"\n    }}>{`Initialising Arrays in Java`}</h1>\n    <p>{`Basic example on how to declare, declare with allocated size and initialise with default values:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`int[] allocArr = new int[2]; // init with memory for 2 spaces\nint[] declareArr; // declaration\nint[] withValues = { n.data }; // shorthand init with values\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"push-pop-shift-unshift\"\n    }}>{`Push, pop, shift, unshift`}</h2>\n    <p>{`This requires the use of `}<inlineCode parentName=\"p\">{`List`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`ArrayList`}</inlineCode></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`Array.push    -> ArrayList.add(Object o); // Append the list\nArray.pop     -> ArrayList.remove(int index); // Remove list[index]\nArray.shift   -> ArrayList.remove(0); // Remove first element\nArray.unshift -> ArrayList.add(int index, Object o); // Prepend the list\n`}</code></pre>\n    <p>{`Example:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`import java.util.ArrayList;\nimport java.util.List;\n\npublic class Main {\n\n    public static void main(String[] args) {\n\n        List<String> animals = new ArrayList<>();\n\n        animals.add(\"Lion\");\n        animals.add(\"Tiger\");\n        animals.add(\"Cat\");\n        animals.add(\"Dog\");\n\n        System.out.println(animals); // [Lion, Tiger, Cat, Dog]\n\n        // add() -> push(): Add items to the end of an array\n        animals.add(\"Elephant\");\n        System.out.println(animals);  // [Lion, Tiger, Cat, Dog, Elephant]\n\n        // remove() -> pop(): Remove an item from the end of an array\n        animals.remove(animals.size() - 1);\n        System.out.println(animals); // [Lion, Tiger, Cat, Dog]\n\n        // add(0,\"xyz\") -> unshift(): Add items to the beginning of an array\n        animals.add(0, \"Penguin\");\n        System.out.println(animals); // [Penguin, Lion, Tiger, Cat, Dog]\n\n        // remove(0) -> shift(): Remove an item from the beginning of an array\n        animals.remove(0);\n        System.out.println(animals); // [Lion, Tiger, Cat, Dog]\n\n    }\n}\n`}</code></pre>\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  "]}]}