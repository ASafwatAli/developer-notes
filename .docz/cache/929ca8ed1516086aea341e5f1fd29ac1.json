{"remainingRequest":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/docz-core/node_modules/babel-loader/lib/index.js??ref--6-1!/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/@mdx-js/loader/index.js??ref--6-2!/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/source-map-loader/index.js!/Users/dennis.okeeffe/Project-Imposter/developer-notes/manual/CSS/RSCSS-Code-Guide.md","dependencies":[{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/manual/CSS/RSCSS-Code-Guide.md","mtime":1562563032018},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/cache-loader/dist/cjs.js","mtime":1581496618588},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/docz-core/node_modules/babel-loader/lib/index.js","mtime":1578565694890},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/@mdx-js/loader/index.js","mtime":1581496618277},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/source-map-loader/index.js","mtime":1580255490569}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9vYmplY3RXaXRob3V0UHJvcGVydGllcyBmcm9tICIvVXNlcnMvZGVubmlzLm9rZWVmZmUvUHJvamVjdC1JbXBvc3Rlci9kZXZlbG9wZXItbm90ZXMvbm9kZV9tb2R1bGVzL2JhYmVsLXByZXNldC1yZWFjdC1hcHAvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzIjsKdmFyIF9qc3hGaWxlTmFtZSA9ICIvVXNlcnMvZGVubmlzLm9rZWVmZmUvUHJvamVjdC1JbXBvc3Rlci9kZXZlbG9wZXItbm90ZXMvbWFudWFsL0NTUy9SU0NTUy1Db2RlLUd1aWRlLm1kIjsKCihmdW5jdGlvbiAoKSB7CiAgdmFyIGVudGVyTW9kdWxlID0gKHR5cGVvZiByZWFjdEhvdExvYWRlckdsb2JhbCAhPT0gJ3VuZGVmaW5lZCcgPyByZWFjdEhvdExvYWRlckdsb2JhbCA6IHJlcXVpcmUoJ3JlYWN0LWhvdC1sb2FkZXInKSkuZW50ZXJNb2R1bGU7CiAgZW50ZXJNb2R1bGUgJiYgZW50ZXJNb2R1bGUobW9kdWxlKTsKfSkoKTsKCnZhciBfX3NpZ25hdHVyZV9fID0gdHlwZW9mIHJlYWN0SG90TG9hZGVyR2xvYmFsICE9PSAndW5kZWZpbmVkJyA/IHJlYWN0SG90TG9hZGVyR2xvYmFsWyJkZWZhdWx0Il0uc2lnbmF0dXJlIDogZnVuY3Rpb24gKGEpIHsKICByZXR1cm4gYTsKfTsKCi8qIEBqc3ggbWR4ICovCmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7CmltcG9ydCB7IG1keCB9IGZyb20gJ0BtZHgtanMvcmVhY3QnOwovKiBAanN4IG1keCAqLwoKdmFyIG1ha2VTaG9ydGNvZGUgPSBmdW5jdGlvbiBtYWtlU2hvcnRjb2RlKG5hbWUpIHsKICByZXR1cm4gZnVuY3Rpb24gTURYRGVmYXVsdFNob3J0Y29kZShwcm9wcykgewogICAgY29uc29sZS53YXJuKCJDb21wb25lbnQgIiArIG5hbWUgKyAiIHdhcyBub3QgaW1wb3J0ZWQsIGV4cG9ydGVkLCBvciBwcm92aWRlZCBieSBNRFhQcm92aWRlciBhcyBnbG9iYWwgc2NvcGUiKTsKICAgIHJldHVybiBtZHgoImRpdiIsIE9iamVjdC5hc3NpZ24oe30sIHByb3BzLCB7CiAgICAgIF9fc291cmNlOiB7CiAgICAgICAgZmlsZU5hbWU6IF9qc3hGaWxlTmFtZSwKICAgICAgICBsaW5lTnVtYmVyOiA5CiAgICAgIH0sCiAgICAgIF9fc2VsZjogdGhpcwogICAgfSkpOwogIH07Cn07Cgp2YXIgbGF5b3V0UHJvcHMgPSB7fTsKdmFyIE1EWExheW91dCA9ICJ3cmFwcGVyIjsKZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gTURYQ29udGVudChfcmVmKSB7CiAgdmFyIGNvbXBvbmVudHMgPSBfcmVmLmNvbXBvbmVudHMsCiAgICAgIHByb3BzID0gX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzKF9yZWYsIFsiY29tcG9uZW50cyJdKTsKCiAgcmV0dXJuIG1keChNRFhMYXlvdXQsIE9iamVjdC5hc3NpZ24oe30sIGxheW91dFByb3BzLCBwcm9wcywgewogICAgY29tcG9uZW50czogY29tcG9uZW50cywKICAgIG1keFR5cGU6ICJNRFhMYXlvdXQiLAogICAgX19zb3VyY2U6IHsKICAgICAgZmlsZU5hbWU6IF9qc3hGaWxlTmFtZSwKICAgICAgbGluZU51bWJlcjogMjAKICAgIH0sCiAgICBfX3NlbGY6IHRoaXMKICB9KSwgbWR4KCJoMSIsIE9iamVjdC5hc3NpZ24oewogICAgImlkIjogInJzY3NzLWNoZWF0LXNoZWV0IgogIH0sIHsKICAgIF9fc291cmNlOiB7CiAgICAgIGZpbGVOYW1lOiBfanN4RmlsZU5hbWUsCiAgICAgIGxpbmVOdW1iZXI6IDIxCiAgICB9LAogICAgX19zZWxmOiB0aGlzCiAgfSksICJSU0NTUyBDSEVBVCBTSEVFVCIpLCBtZHgoInVsIiwgewogICAgX19zb3VyY2U6IHsKICAgICAgZmlsZU5hbWU6IF9qc3hGaWxlTmFtZSwKICAgICAgbGluZU51bWJlcjogMjcKICAgIH0sCiAgICBfX3NlbGY6IHRoaXMKICB9LCBtZHgoImxpIiwgewogICAgcGFyZW50TmFtZTogInVsIiwKICAgIF9fc291cmNlOiB7CiAgICAgIGZpbGVOYW1lOiBfanN4RmlsZU5hbWUsCiAgICAgIGxpbmVOdW1iZXI6IDI4CiAgICB9LAogICAgX19zZWxmOiB0aGlzCiAgfSwgbWR4KCJhIiwgT2JqZWN0LmFzc2lnbih7CiAgICBwYXJlbnROYW1lOiAibGkiCiAgfSwgewogICAgImhyZWYiOiAiI3JzY3NzLWNoZWF0LXNoZWV0IgogIH0sIHsKICAgIF9fc291cmNlOiB7CiAgICAgIGZpbGVOYW1lOiBfanN4RmlsZU5hbWUsCiAgICAgIGxpbmVOdW1iZXI6IDI4CiAgICB9LAogICAgX19zZWxmOiB0aGlzCiAgfSksICJSU0NTUyBDSEVBVCBTSEVFVCIpLCBtZHgoInVsIiwgewogICAgcGFyZW50TmFtZTogImxpIiwKICAgIF9fc291cmNlOiB7CiAgICAgIGZpbGVOYW1lOiBfanN4RmlsZU5hbWUsCiAgICAgIGxpbmVOdW1iZXI6IDMwCiAgICB9LAogICAgX19zZWxmOiB0aGlzCiAgfSwgbWR4KCJsaSIsIHsKICAgIHBhcmVudE5hbWU6ICJ1bCIsCiAgICBfX3NvdXJjZTogewogICAgICBmaWxlTmFtZTogX2pzeEZpbGVOYW1lLAogICAgICBsaW5lTnVtYmVyOiAzMQogICAgfSwKICAgIF9fc2VsZjogdGhpcwogIH0sIG1keCgiYSIsIE9iamVjdC5hc3NpZ24oewogICAgcGFyZW50TmFtZTogImxpIgogIH0sIHsKICAgICJocmVmIjogIiNyc2Nzcy0xLW5hbWluZy1jb21wb25lbnRzIgogIH0sIHsKICAgIF9fc291cmNlOiB7CiAgICAgIGZpbGVOYW1lOiBfanN4RmlsZU5hbWUsCiAgICAgIGxpbmVOdW1iZXI6IDMxCiAgICB9LAogICAgX19zZWxmOiB0aGlzCiAgfSksICJSU0NTUy0xOiBOYW1pbmcgQ29tcG9uZW50cyIpKSwgbWR4KCJsaSIsIHsKICAgIHBhcmVudE5hbWU6ICJ1bCIsCiAgICBfX3NvdXJjZTogewogICAgICBmaWxlTmFtZTogX2pzeEZpbGVOYW1lLAogICAgICBsaW5lTnVtYmVyOiAzNAogICAgfSwKICAgIF9fc2VsZjogdGhpcwogIH0sIG1keCgiYSIsIE9iamVjdC5hc3NpZ24oewogICAgcGFyZW50TmFtZTogImxpIgogIH0sIHsKICAgICJocmVmIjogIiNyc2Nzcy0yLW5hbWluZy1lbGVtZW50cyIKICB9LCB7CiAgICBfX3NvdXJjZTogewogICAgICBmaWxlTmFtZTogX2pzeEZpbGVOYW1lLAogICAgICBsaW5lTnVtYmVyOiAzNAogICAgfSwKICAgIF9fc2VsZjogdGhpcwogIH0pLCAiUlNDU1MtMjogTmFtaW5nIEVsZW1lbnRzIikpLCBtZHgoImxpIiwgewogICAgcGFyZW50TmFtZTogInVsIiwKICAgIF9fc291cmNlOiB7CiAgICAgIGZpbGVOYW1lOiBfanN4RmlsZU5hbWUsCiAgICAgIGxpbmVOdW1iZXI6IDM3CiAgICB9LAogICAgX19zZWxmOiB0aGlzCiAgfSwgbWR4KCJhIiwgT2JqZWN0LmFzc2lnbih7CiAgICBwYXJlbnROYW1lOiAibGkiCiAgfSwgewogICAgImhyZWYiOiAiI3JzY3NzLTMtZWxlbWVudC1zZWxlY3RvcnMiCiAgfSwgewogICAgX19zb3VyY2U6IHsKICAgICAgZmlsZU5hbWU6IF9qc3hGaWxlTmFtZSwKICAgICAgbGluZU51bWJlcjogMzcKICAgIH0sCiAgICBfX3NlbGY6IHRoaXMKICB9KSwgIlJTQ1NTLTM6IEVsZW1lbnQgU2VsZWN0b3JzIikpLCBtZHgoImxpIiwgewogICAgcGFyZW50TmFtZTogInVsIiwKICAgIF9fc291cmNlOiB7CiAgICAgIGZpbGVOYW1lOiBfanN4RmlsZU5hbWUsCiAgICAgIGxpbmVOdW1iZXI6IDQwCiAgICB9LAogICAgX19zZWxmOiB0aGlzCiAgfSwgbWR4KCJhIiwgT2JqZWN0LmFzc2lnbih7CiAgICBwYXJlbnROYW1lOiAibGkiCiAgfSwgewogICAgImhyZWYiOiAiI3JzY3NzLTQtbXVsdGlwbGUtd29yZHMiCiAgfSwgewogICAgX19zb3VyY2U6IHsKICAgICAgZmlsZU5hbWU6IF9qc3hGaWxlTmFtZSwKICAgICAgbGluZU51bWJlcjogNDAKICAgIH0sCiAgICBfX3NlbGY6IHRoaXMKICB9KSwgIlJTQ1NTLTQ6IE11bHRpcGxlIFdvcmRzIikpLCBtZHgoImxpIiwgewogICAgcGFyZW50TmFtZTogInVsIiwKICAgIF9fc291cmNlOiB7CiAgICAgIGZpbGVOYW1lOiBfanN4RmlsZU5hbWUsCiAgICAgIGxpbmVOdW1iZXI6IDQzCiAgICB9LAogICAgX19zZWxmOiB0aGlzCiAgfSwgbWR4KCJhIiwgT2JqZWN0LmFzc2lnbih7CiAgICBwYXJlbnROYW1lOiAibGkiCiAgfSwgewogICAgImhyZWYiOiAiI3JzY3NzLTUtYXZvaWQtdGFnLXNlbGVjdG9ycyIKICB9LCB7CiAgICBfX3NvdXJjZTogewogICAgICBmaWxlTmFtZTogX2pzeEZpbGVOYW1lLAogICAgICBsaW5lTnVtYmVyOiA0MwogICAgfSwKICAgIF9fc2VsZjogdGhpcwogIH0pLCAiUlNDU1MtNTogQXZvaWQgVGFnIFNlbGVjdG9ycyIpKSwgbWR4KCJsaSIsIHsKICAgIHBhcmVudE5hbWU6ICJ1bCIsCiAgICBfX3NvdXJjZTogewogICAgICBmaWxlTmFtZTogX2pzeEZpbGVOYW1lLAogICAgICBsaW5lTnVtYmVyOiA0NgogICAgfSwKICAgIF9fc2VsZjogdGhpcwogIH0sIG1keCgiYSIsIE9iamVjdC5hc3NpZ24oewogICAgcGFyZW50TmFtZTogImxpIgogIH0sIHsKICAgICJocmVmIjogIiNyc2Nzcy02LXZhcmlhbnRzIgogIH0sIHsKICAgIF9fc291cmNlOiB7CiAgICAgIGZpbGVOYW1lOiBfanN4RmlsZU5hbWUsCiAgICAgIGxpbmVOdW1iZXI6IDQ2CiAgICB9LAogICAgX19zZWxmOiB0aGlzCiAgfSksICJSU0NTUy02OiBWYXJpYW50cyIpKSwgbWR4KCJsaSIsIHsKICAgIHBhcmVudE5hbWU6ICJ1bCIsCiAgICBfX3NvdXJjZTogewogICAgICBmaWxlTmFtZTogX2pzeEZpbGVOYW1lLAogICAgICBsaW5lTnVtYmVyOiA0OQogICAgfSwKICAgIF9fc2VsZjogdGhpcwogIH0sIG1keCgiYSIsIE9iamVjdC5hc3NpZ24oewogICAgcGFyZW50TmFtZTogImxpIgogIH0sIHsKICAgICJocmVmIjogIiNyc2Nzcy03LW5hbWluZy12YXJpYW50cyIKICB9LCB7CiAgICBfX3NvdXJjZTogewogICAgICBmaWxlTmFtZTogX2pzeEZpbGVOYW1lLAogICAgICBsaW5lTnVtYmVyOiA0OQogICAgfSwKICAgIF9fc2VsZjogdGhpcwogIH0pLCAiUlNDU1MtNzogTmFtaW5nIFZhcmlhbnRzIikpLCBtZHgoImxpIiwgewogICAgcGFyZW50TmFtZTogInVsIiwKICAgIF9fc291cmNlOiB7CiAgICAgIGZpbGVOYW1lOiBfanN4RmlsZU5hbWUsCiAgICAgIGxpbmVOdW1iZXI6IDUyCiAgICB9LAogICAgX19zZWxmOiB0aGlzCiAgfSwgbWR4KCJhIiwgT2JqZWN0LmFzc2lnbih7CiAgICBwYXJlbnROYW1lOiAibGkiCiAgfSwgewogICAgImhyZWYiOiAiI3JzY3NzLTgtZWxlbWVudC12YXJpYW50cyIKICB9LCB7CiAgICBfX3NvdXJjZTogewogICAgICBmaWxlTmFtZTogX2pzeEZpbGVOYW1lLAogICAgICBsaW5lTnVtYmVyOiA1MgogICAgfSwKICAgIF9fc2VsZjogdGhpcwogIH0pLCAiUlNDU1MtODogRWxlbWVudCBWYXJpYW50cyIpKSwgbWR4KCJsaSIsIHsKICAgIHBhcmVudE5hbWU6ICJ1bCIsCiAgICBfX3NvdXJjZTogewogICAgICBmaWxlTmFtZTogX2pzeEZpbGVOYW1lLAogICAgICBsaW5lTnVtYmVyOiA1NQogICAgfSwKICAgIF9fc2VsZjogdGhpcwogIH0sIG1keCgiYSIsIE9iamVjdC5hc3NpZ24oewogICAgcGFyZW50TmFtZTogImxpIgogIH0sIHsKICAgICJocmVmIjogIiNyc2Nzcy05LW5lc3RlZC1jb21wb25lbnRzIgogIH0sIHsKICAgIF9fc291cmNlOiB7CiAgICAgIGZpbGVOYW1lOiBfanN4RmlsZU5hbWUsCiAgICAgIGxpbmVOdW1iZXI6IDU1CiAgICB9LAogICAgX19zZWxmOiB0aGlzCiAgfSksICJSU0NTUy05OiBOZXN0ZWQgQ29tcG9uZW50cyIpKSwgbWR4KCJsaSIsIHsKICAgIHBhcmVudE5hbWU6ICJ1bCIsCiAgICBfX3NvdXJjZTogewogICAgICBmaWxlTmFtZTogX2pzeEZpbGVOYW1lLAogICAgICBsaW5lTnVtYmVyOiA1OAogICAgfSwKICAgIF9fc2VsZjogdGhpcwogIH0sIG1keCgiYSIsIE9iamVjdC5hc3NpZ24oewogICAgcGFyZW50TmFtZTogImxpIgogIH0sIHsKICAgICJocmVmIjogIiNyc2Nzcy0xMC1zaW1wbGlmeWluZy1uZXN0ZWQtY29tcG9uZW50cyIKICB9LCB7CiAgICBfX3NvdXJjZTogewogICAgICBmaWxlTmFtZTogX2pzeEZpbGVOYW1lLAogICAgICBsaW5lTnVtYmVyOiA1OAogICAgfSwKICAgIF9fc2VsZjogdGhpcwogIH0pLCAiUlNDU1MtMTA6IFNpbXBsaWZ5aW5nIE5lc3RlZCBDb21wb25lbnRzIikpLCBtZHgoImxpIiwgewogICAgcGFyZW50TmFtZTogInVsIiwKICAgIF9fc291cmNlOiB7CiAgICAgIGZpbGVOYW1lOiBfanN4RmlsZU5hbWUsCiAgICAgIGxpbmVOdW1iZXI6IDYxCiAgICB9LAogICAgX19zZWxmOiB0aGlzCiAgfSwgbWR4KCJhIiwgT2JqZWN0LmFzc2lnbih7CiAgICBwYXJlbnROYW1lOiAibGkiCiAgfSwgewogICAgImhyZWYiOiAiI3JzY3NzLTExLWxheW91dHMiCiAgfSwgewogICAgX19zb3VyY2U6IHsKICAgICAgZmlsZU5hbWU6IF9qc3hGaWxlTmFtZSwKICAgICAgbGluZU51bWJlcjogNjEKICAgIH0sCiAgICBfX3NlbGY6IHRoaXMKICB9KSwgIlJTQ1NTLTExOiBMYXlvdXRzIikpLCBtZHgoImxpIiwgewogICAgcGFyZW50TmFtZTogInVsIiwKICAgIF9fc291cmNlOiB7CiAgICAgIGZpbGVOYW1lOiBfanN4RmlsZU5hbWUsCiAgICAgIGxpbmVOdW1iZXI6IDY0CiAgICB9LAogICAgX19zZWxmOiB0aGlzCiAgfSwgbWR4KCJhIiwgT2JqZWN0LmFzc2lnbih7CiAgICBwYXJlbnROYW1lOiAibGkiCiAgfSwgewogICAgImhyZWYiOiAiI3JzY3NzLTEyLWF2b2lkLXBvc2l0aW9uaW5nLXByb3BlcnRpZXMiCiAgfSwgewogICAgX19zb3VyY2U6IHsKICAgICAgZmlsZU5hbWU6IF9qc3hGaWxlTmFtZSwKICAgICAgbGluZU51bWJlcjogNjQKICAgIH0sCiAgICBfX3NlbGY6IHRoaXMKICB9KSwgIlJTQ1NTLTEyOiBBdm9pZCBwb3NpdGlvbmluZyBwcm9wZXJ0aWVzIikpLCBtZHgoImxpIiwgewogICAgcGFyZW50TmFtZTogInVsIiwKICAgIF9fc291cmNlOiB7CiAgICAgIGZpbGVOYW1lOiBfanN4RmlsZU5hbWUsCiAgICAgIGxpbmVOdW1iZXI6IDY3CiAgICB9LAogICAgX19zZWxmOiB0aGlzCiAgfSwgbWR4KCJhIiwgT2JqZWN0LmFzc2lnbih7CiAgICBwYXJlbnROYW1lOiAibGkiCiAgfSwgewogICAgImhyZWYiOiAiI3JzY3NzLTEzLWZpeGVkLWRpbWVuc2lvbnMiCiAgfSwgewogICAgX19zb3VyY2U6IHsKICAgICAgZmlsZU5hbWU6IF9qc3hGaWxlTmFtZSwKICAgICAgbGluZU51bWJlcjogNjcKICAgIH0sCiAgICBfX3NlbGY6IHRoaXMKICB9KSwgIlJTQ1NTLTEzOiBGaXhlZCBEaW1lbnNpb25zIikpLCBtZHgoImxpIiwgewogICAgcGFyZW50TmFtZTogInVsIiwKICAgIF9fc291cmNlOiB7CiAgICAgIGZpbGVOYW1lOiBfanN4RmlsZU5hbWUsCiAgICAgIGxpbmVOdW1iZXI6IDcwCiAgICB9LAogICAgX19zZWxmOiB0aGlzCiAgfSwgbWR4KCJhIiwgT2JqZWN0LmFzc2lnbih7CiAgICBwYXJlbnROYW1lOiAibGkiCiAgfSwgewogICAgImhyZWYiOiAiI3JzY3NzLTE0LWRlZmluZS1wb3NpdGlvbi1pbi1wYXJlbnRzIgogIH0sIHsKICAgIF9fc291cmNlOiB7CiAgICAgIGZpbGVOYW1lOiBfanN4RmlsZU5hbWUsCiAgICAgIGxpbmVOdW1iZXI6IDcwCiAgICB9LAogICAgX19zZWxmOiB0aGlzCiAgfSksICJSU0NTUy0xNDogRGVmaW5lIFBvc2l0aW9uIGluIFBhcmVudHMiKSksIG1keCgibGkiLCB7CiAgICBwYXJlbnROYW1lOiAidWwiLAogICAgX19zb3VyY2U6IHsKICAgICAgZmlsZU5hbWU6IF9qc3hGaWxlTmFtZSwKICAgICAgbGluZU51bWJlcjogNzMKICAgIH0sCiAgICBfX3NlbGY6IHRoaXMKICB9LCBtZHgoImEiLCBPYmplY3QuYXNzaWduKHsKICAgIHBhcmVudE5hbWU6ICJsaSIKICB9LCB7CiAgICAiaHJlZiI6ICIjcnNjc3MtMTUtaGVscGVycyIKICB9LCB7CiAgICBfX3NvdXJjZTogewogICAgICBmaWxlTmFtZTogX2pzeEZpbGVOYW1lLAogICAgICBsaW5lTnVtYmVyOiA3MwogICAgfSwKICAgIF9fc2VsZjogdGhpcwogIH0pLCAiUlNDU1MtMTU6IEhlbHBlcnMiKSksIG1keCgibGkiLCB7CiAgICBwYXJlbnROYW1lOiAidWwiLAogICAgX19zb3VyY2U6IHsKICAgICAgZmlsZU5hbWU6IF9qc3hGaWxlTmFtZSwKICAgICAgbGluZU51bWJlcjogNzYKICAgIH0sCiAgICBfX3NlbGY6IHRoaXMKICB9LCBtZHgoImEiLCBPYmplY3QuYXNzaWduKHsKICAgIHBhcmVudE5hbWU6ICJsaSIKICB9LCB7CiAgICAiaHJlZiI6ICIjcnNjc3MtMTYtbmFtaW5nLWhlbHBlcnMiCiAgfSwgewogICAgX19zb3VyY2U6IHsKICAgICAgZmlsZU5hbWU6IF9qc3hGaWxlTmFtZSwKICAgICAgbGluZU51bWJlcjogNzYKICAgIH0sCiAgICBfX3NlbGY6IHRoaXMKICB9KSwgIlJTQ1NTLTE2OiBOYW1pbmcgSGVscGVycyIpKSwgbWR4KCJsaSIsIHsKICAgIHBhcmVudE5hbWU6ICJ1bCIsCiAgICBfX3NvdXJjZTogewogICAgICBmaWxlTmFtZTogX2pzeEZpbGVOYW1lLAogICAgICBsaW5lTnVtYmVyOiA3OQogICAgfSwKICAgIF9fc2VsZjogdGhpcwogIH0sIG1keCgiYSIsIE9iamVjdC5hc3NpZ24oewogICAgcGFyZW50TmFtZTogImxpIgogIH0sIHsKICAgICJocmVmIjogIiNyc2Nzcy0xNy1vcmdhbmlzaW5nLWhlbHBlcnMiCiAgfSwgewogICAgX19zb3VyY2U6IHsKICAgICAgZmlsZU5hbWU6IF9qc3hGaWxlTmFtZSwKICAgICAgbGluZU51bWJlcjogNzkKICAgIH0sCiAgICBfX3NlbGY6IHRoaXMKICB9KSwgIlJTQ1NTLTE3OiBPcmdhbmlzaW5nIEhlbHBlcnMiKSksIG1keCgibGkiLCB7CiAgICBwYXJlbnROYW1lOiAidWwiLAogICAgX19zb3VyY2U6IHsKICAgICAgZmlsZU5hbWU6IF9qc3hGaWxlTmFtZSwKICAgICAgbGluZU51bWJlcjogODIKICAgIH0sCiAgICBfX3NlbGY6IHRoaXMKICB9LCBtZHgoImEiLCBPYmplY3QuYXNzaWduKHsKICAgIHBhcmVudE5hbWU6ICJsaSIKICB9LCB7CiAgICAiaHJlZiI6ICIjcnNjc3MtMTgtY3NzLXN0cnVjdHVyZSIKICB9LCB7CiAgICBfX3NvdXJjZTogewogICAgICBmaWxlTmFtZTogX2pzeEZpbGVOYW1lLAogICAgICBsaW5lTnVtYmVyOiA4MgogICAgfSwKICAgIF9fc2VsZjogdGhpcwogIH0pLCAiUlNDU1MtMTg6IENTUyBTdHJ1Y3R1cmUiKSksIG1keCgibGkiLCB7CiAgICBwYXJlbnROYW1lOiAidWwiLAogICAgX19zb3VyY2U6IHsKICAgICAgZmlsZU5hbWU6IF9qc3hGaWxlTmFtZSwKICAgICAgbGluZU51bWJlcjogODUKICAgIH0sCiAgICBfX3NlbGY6IHRoaXMKICB9LCBtZHgoImEiLCBPYmplY3QuYXNzaWduKHsKICAgIHBhcmVudE5hbWU6ICJsaSIKICB9LCB7CiAgICAiaHJlZiI6ICIjcnNjc3MtMTktb25lLWNvbXBvbmVudC1wZXItZmlsZSIKICB9LCB7CiAgICBfX3NvdXJjZTogewogICAgICBmaWxlTmFtZTogX2pzeEZpbGVOYW1lLAogICAgICBsaW5lTnVtYmVyOiA4NQogICAgfSwKICAgIF9fc2VsZjogdGhpcwogIH0pLCAiUlNDU1MtMTk6IE9uZSBDb21wb25lbnQgUGVyIEZpbGUiKSksIG1keCgibGkiLCB7CiAgICBwYXJlbnROYW1lOiAidWwiLAogICAgX19zb3VyY2U6IHsKICAgICAgZmlsZU5hbWU6IF9qc3hGaWxlTmFtZSwKICAgICAgbGluZU51bWJlcjogODgKICAgIH0sCiAgICBfX3NlbGY6IHRoaXMKICB9LCBtZHgoImEiLCBPYmplY3QuYXNzaWduKHsKICAgIHBhcmVudE5hbWU6ICJsaSIKICB9LCB7CiAgICAiaHJlZiI6ICIjcnNjc3MtMjAtYXZvaWQtb3Zlcm5lc3RpbmciCiAgfSwgewogICAgX19zb3VyY2U6IHsKICAgICAgZmlsZU5hbWU6IF9qc3hGaWxlTmFtZSwKICAgICAgbGluZU51bWJlcjogODgKICAgIH0sCiAgICBfX3NlbGY6IHRoaXMKICB9KSwgIlJTQ1NTLTIwOiBBdm9pZCBPdmVybmVzdGluZyIpKSwgbWR4KCJsaSIsIHsKICAgIHBhcmVudE5hbWU6ICJ1bCIsCiAgICBfX3NvdXJjZTogewogICAgICBmaWxlTmFtZTogX2pzeEZpbGVOYW1lLAogICAgICBsaW5lTnVtYmVyOiA5MQogICAgfSwKICAgIF9fc2VsZjogdGhpcwogIH0sIG1keCgiYSIsIE9iamVjdC5hc3NpZ24oewogICAgcGFyZW50TmFtZTogImxpIgogIH0sIHsKICAgICJocmVmIjogIiNyc2Nzcy0yMS1waXRmYWxscyIKICB9LCB7CiAgICBfX3NvdXJjZTogewogICAgICBmaWxlTmFtZTogX2pzeEZpbGVOYW1lLAogICAgICBsaW5lTnVtYmVyOiA5MQogICAgfSwKICAgIF9fc2VsZjogdGhpcwogIH0pLCAiUlNDU1MtMjE6IFBpdGZhbGxzIikpLCBtZHgoImxpIiwgewogICAgcGFyZW50TmFtZTogInVsIiwKICAgIF9fc291cmNlOiB7CiAgICAgIGZpbGVOYW1lOiBfanN4RmlsZU5hbWUsCiAgICAgIGxpbmVOdW1iZXI6IDk0CiAgICB9LAogICAgX19zZWxmOiB0aGlzCiAgfSwgbWR4KCJhIiwgT2JqZWN0LmFzc2lnbih7CiAgICBwYXJlbnROYW1lOiAibGkiCiAgfSwgewogICAgImhyZWYiOiAiI3JzY3NzLTIyLWJsZWVkaW5nLXRocm91Z2gtbmVzdGVkLWNvbXBvbmVudHMiCiAgfSwgewogICAgX19zb3VyY2U6IHsKICAgICAgZmlsZU5hbWU6IF9qc3hGaWxlTmFtZSwKICAgICAgbGluZU51bWJlcjogOTQKICAgIH0sCiAgICBfX3NlbGY6IHRoaXMKICB9KSwgIlJTQ1NTLTIyOiBCbGVlZGluZyBUaHJvdWdoIE5lc3RlZCBDb21wb25lbnRzIikpLCBtZHgoImxpIiwgewogICAgcGFyZW50TmFtZTogInVsIiwKICAgIF9fc291cmNlOiB7CiAgICAgIGZpbGVOYW1lOiBfanN4RmlsZU5hbWUsCiAgICAgIGxpbmVOdW1iZXI6IDk3CiAgICB9LAogICAgX19zZWxmOiB0aGlzCiAgfSwgbWR4KCJhIiwgT2JqZWN0LmFzc2lnbih7CiAgICBwYXJlbnROYW1lOiAibGkiCiAgfSwgewogICAgImhyZWYiOiAiI3JzY3NzLTIzLWFwcHJlaGVuc2lvbnMiCiAgfSwgewogICAgX19zb3VyY2U6IHsKICAgICAgZmlsZU5hbWU6IF9qc3hGaWxlTmFtZSwKICAgICAgbGluZU51bWJlcjogOTcKICAgIH0sCiAgICBfX3NlbGY6IHRoaXMKICB9KSwgIlJTQ1NTLTIzOiBBcHByZWhlbnNpb25zIikpKSkpLCBtZHgoImgyIiwgT2JqZWN0LmFzc2lnbih7CiAgICAiaWQiOiAicnNjc3MtMS1uYW1pbmctY29tcG9uZW50cyIKICB9LCB7CiAgICBfX3NvdXJjZTogewogICAgICBmaWxlTmFtZTogX2pzeEZpbGVOYW1lLAogICAgICBsaW5lTnVtYmVyOiAxMDUKICAgIH0sCiAgICBfX3NlbGY6IHRoaXMKICB9KSwgIlJTQ1NTLTE6IE5hbWluZyBDb21wb25lbnRzIiksIG1keCgicCIsIHsKICAgIF9fc291cmNlOiB7CiAgICAgIGZpbGVOYW1lOiBfanN4RmlsZU5hbWUsCiAgICAgIGxpbmVOdW1iZXI6IDEwOAogICAgfSwKICAgIF9fc2VsZjogdGhpcwogIH0sICJDb21wb25lbnRzIHdpbGwgYmUgbmFtZWQgd2l0aCBhdCBsZWFzdCB0d28gd29yZHMsIHNlcGFyYXRlZCBieSBhIGRhc2guIEV4YW1wbGVzIG9mIGNvbXBvbmVudHM6IiksIG1keCgicCIsIHsKICAgIF9fc291cmNlOiB7CiAgICAgIGZpbGVOYW1lOiBfanN4RmlsZU5hbWUsCiAgICAgIGxpbmVOdW1iZXI6IDEwOQogICAgfSwKICAgIF9fc2VsZjogdGhpcwogIH0sICJBIGxpa2UgYnV0dG9uICgubGlrZS1idXR0b24pXG5BIHNlYXJjaCBmb3JtICguc2VhcmNoLWZvcm0pXG5BIG5ld3MgYXJ0aWNsZSBjYXJkICguYXJ0aWNsZS1jYXJkKSIpLCBtZHgoImgyIiwgT2JqZWN0LmFzc2lnbih7CiAgICAiaWQiOiAicnNjc3MtMi1uYW1pbmctZWxlbWVudHMiCiAgfSwgewogICAgX19zb3VyY2U6IHsKICAgICAgZmlsZU5hbWU6IF9qc3hGaWxlTmFtZSwKICAgICAgbGluZU51bWJlcjogMTEyCiAgICB9LAogICAgX19zZWxmOiB0aGlzCiAgfSksICJSU0NTUy0yOiBOYW1pbmcgRWxlbWVudHMiKSwgbWR4KCJwIiwgewogICAgX19zb3VyY2U6IHsKICAgICAgZmlsZU5hbWU6IF9qc3hGaWxlTmFtZSwKICAgICAgbGluZU51bWJlcjogMTE1CiAgICB9LAogICAgX19zZWxmOiB0aGlzCiAgfSwgIkVhY2ggY29tcG9uZW50IG1heSBoYXZlIGVsZW1lbnRzLiBUaGV5IHNob3VsZCBoYXZlIGNsYXNzZXMgdGhhdCBhcmUgb25seSBvbmUgd29yZC4iKSwgbWR4KCJwcmUiLCB7CiAgICBfX3NvdXJjZTogewogICAgICBmaWxlTmFtZTogX2pzeEZpbGVOYW1lLAogICAgICBsaW5lTnVtYmVyOiAxMTYKICAgIH0sCiAgICBfX3NlbGY6IHRoaXMKICB9LCBtZHgoImNvZGUiLCBPYmplY3QuYXNzaWduKHsKICAgIHBhcmVudE5hbWU6ICJwcmUiCiAgfSwgewogICAgImNsYXNzTmFtZSI6ICJsYW5ndWFnZS1jc3MiCiAgfSwgewogICAgX19zb3VyY2U6IHsKICAgICAgZmlsZU5hbWU6IF9qc3hGaWxlTmFtZSwKICAgICAgbGluZU51bWJlcjogMTE2CiAgICB9LAogICAgX19zZWxmOiB0aGlzCiAgfSksICIuc2VhcmNoLWZvcm0ge1xuICAgID4gLmZpZWxkIHtcbiAgICAgICAgLyogLi4uICovXG4gICAgfVxuICAgID4gLmFjdGlvbiB7XG4gICAgICAgIC8qIC4uLiAqL1xuICAgIH1cbn1cbiIpKSwgbWR4KCJoMiIsIE9iamVjdC5hc3NpZ24oewogICAgImlkIjogInJzY3NzLTMtZWxlbWVudC1zZWxlY3RvcnMiCiAgfSwgewogICAgX19zb3VyY2U6IHsKICAgICAgZmlsZU5hbWU6IF9qc3hGaWxlTmFtZSwKICAgICAgbGluZU51bWJlcjogMTI3CiAgICB9LAogICAgX19zZWxmOiB0aGlzCiAgfSksICJSU0NTUy0zOiBFbGVtZW50IFNlbGVjdG9ycyIpLCBtZHgoInAiLCB7CiAgICBfX3NvdXJjZTogewogICAgICBmaWxlTmFtZTogX2pzeEZpbGVOYW1lLAogICAgICBsaW5lTnVtYmVyOiAxMzAKICAgIH0sCiAgICBfX3NlbGY6IHRoaXMKICB9LCAiUHJlZmVyIHRvIHVzZSB0aGUgPiBjaGlsZCBzZWxlY3RvciB3aGVuZXZlciBwb3NzaWJsZS4gVGhpcyBwcmV2ZW50cyBibGVlZGluZyB0aHJvdWdoIG5lc3RlZCBjb21wb25lbnRzLCBhbmQgcGVyZm9ybXMgYmV0dGVyIHRoYW4gZGVzY2VuZGFudCBzZWxlY3RvcnMuIiksIG1keCgicHJlIiwgewogICAgX19zb3VyY2U6IHsKICAgICAgZmlsZU5hbWU6IF9qc3hGaWxlTmFtZSwKICAgICAgbGluZU51bWJlcjogMTMxCiAgICB9LAogICAgX19zZWxmOiB0aGlzCiAgfSwgbWR4KCJjb2RlIiwgT2JqZWN0LmFzc2lnbih7CiAgICBwYXJlbnROYW1lOiAicHJlIgogIH0sIHsKICAgICJjbGFzc05hbWUiOiAibGFuZ3VhZ2UtY3NzIgogIH0sIHsKICAgIF9fc291cmNlOiB7CiAgICAgIGZpbGVOYW1lOiBfanN4RmlsZU5hbWUsCiAgICAgIGxpbmVOdW1iZXI6IDEzMQogICAgfSwKICAgIF9fc2VsZjogdGhpcwogIH0pLCAiLmFydGljbGUtY2FyZCB7XG4gICAgLnRpdGxlIHtcbiAgICAgICAgLyogb2theSAqL1xuICAgIH1cbiAgICA+IC5hdXRob3Ige1xuICAgICAgICAvKiBcdTI3MTMgYmV0dGVyICovXG4gICAgfVxufVxuIikpLCBtZHgoImgyIiwgT2JqZWN0LmFzc2lnbih7CiAgICAiaWQiOiAicnNjc3MtNC1tdWx0aXBsZS13b3JkcyIKICB9LCB7CiAgICBfX3NvdXJjZTogewogICAgICBmaWxlTmFtZTogX2pzeEZpbGVOYW1lLAogICAgICBsaW5lTnVtYmVyOiAxNDIKICAgIH0sCiAgICBfX3NlbGY6IHRoaXMKICB9KSwgIlJTQ1NTLTQ6IE11bHRpcGxlIFdvcmRzIiksIG1keCgicCIsIHsKICAgIF9fc291cmNlOiB7CiAgICAgIGZpbGVOYW1lOiBfanN4RmlsZU5hbWUsCiAgICAgIGxpbmVOdW1iZXI6IDE0NQogICAgfSwKICAgIF9fc2VsZjogdGhpcwogIH0sICJGb3IgdGhvc2UgdGhhdCBuZWVkIHR3byBvciBtb3JlIHdvcmRzLCBjb25jYXRlbmF0ZSB0aGVtIHdpdGhvdXQgZGFzaGVzIG9yIHVuZGVyc2NvcmVzLiIpLCBtZHgoInByZSIsIHsKICAgIF9fc291cmNlOiB7CiAgICAgIGZpbGVOYW1lOiBfanN4RmlsZU5hbWUsCiAgICAgIGxpbmVOdW1iZXI6IDE0NgogICAgfSwKICAgIF9fc2VsZjogdGhpcwogIH0sIG1keCgiY29kZSIsIE9iamVjdC5hc3NpZ24oewogICAgcGFyZW50TmFtZTogInByZSIKICB9LCB7CiAgICAiY2xhc3NOYW1lIjogImxhbmd1YWdlLWNzcyIKICB9LCB7CiAgICBfX3NvdXJjZTogewogICAgICBmaWxlTmFtZTogX2pzeEZpbGVOYW1lLAogICAgICBsaW5lTnVtYmVyOiAxNDYKICAgIH0sCiAgICBfX3NlbGY6IHRoaXMKICB9KSwgIi5wcm9maWxlLWJveCB7XG4gICAgPiAuZmlyc3RuYW1lIHtcbiAgICAgICAgLyogLi4uICovXG4gICAgfVxuICAgID4gLmxhc3RuYW1lIHtcbiAgICAgICAgLyogLi4uICovXG4gICAgfVxuICAgID4gLmF2YXRhciB7XG4gICAgICAgIC8qIC4uLiAqL1xuICAgIH1cbn1cbiIpKSwgbWR4KCJoMiIsIE9iamVjdC5hc3NpZ24oewogICAgImlkIjogInJzY3NzLTUtYXZvaWQtdGFnLXNlbGVjdG9ycyIKICB9LCB7CiAgICBfX3NvdXJjZTogewogICAgICBmaWxlTmFtZTogX2pzeEZpbGVOYW1lLAogICAgICBsaW5lTnVtYmVyOiAxNjAKICAgIH0sCiAgICBfX3NlbGY6IHRoaXMKICB9KSwgIlJTQ1NTLTU6IEF2b2lkIFRhZyBTZWxlY3RvcnMiKSwgbWR4KCJwIiwgewogICAgX19zb3VyY2U6IHsKICAgICAgZmlsZU5hbWU6IF9qc3hGaWxlTmFtZSwKICAgICAgbGluZU51bWJlcjogMTYzCiAgICB9LAogICAgX19zZWxmOiB0aGlzCiAgfSwgIlVzZSBjbGFzc25hbWVzIHdoZW5ldmVyIHBvc3NpYmxlLiBUYWcgc2VsZWN0b3JzIGFyZSBmaW5lLCBidXQgdGhleSBtYXkgY29tZSBhdCBhIHNtYWxsIHBlcmZvcm1hbmNlIHBlbmFsdHkgYW5kIG1heSBub3QgYmUgYXMgZGVzY3JpcHRpdmUuIiksIG1keCgicHJlIiwgewogICAgX19zb3VyY2U6IHsKICAgICAgZmlsZU5hbWU6IF9qc3hGaWxlTmFtZSwKICAgICAgbGluZU51bWJlcjogMTY0CiAgICB9LAogICAgX19zZWxmOiB0aGlzCiAgfSwgbWR4KCJjb2RlIiwgT2JqZWN0LmFzc2lnbih7CiAgICBwYXJlbnROYW1lOiAicHJlIgogIH0sIHsKICAgICJjbGFzc05hbWUiOiAibGFuZ3VhZ2UtY3NzIgogIH0sIHsKICAgIF9fc291cmNlOiB7CiAgICAgIGZpbGVOYW1lOiBfanN4RmlsZU5hbWUsCiAgICAgIGxpbmVOdW1iZXI6IDE2NAogICAgfSwKICAgIF9fc2VsZjogdGhpcwogIH0pLCAiLmFydGljbGUtY2FyZCB7XG4gICAgPiBoMyB7XG4gICAgICAgIC8qIFx1MjcxNyBhdm9pZCAqL1xuICAgIH1cbiAgICA+IC5uYW1lIHtcbiAgICAgICAgLyogXHUyNzEzIGJldHRlciAqL1xuICAgIH1cbn1cbiIpKSwgbWR4KCJoMiIsIE9iamVjdC5hc3NpZ24oewogICAgImlkIjogInJzY3NzLTYtdmFyaWFudHMiCiAgfSwgewogICAgX19zb3VyY2U6IHsKICAgICAgZmlsZU5hbWU6IF9qc3hGaWxlTmFtZSwKICAgICAgbGluZU51bWJlcjogMTc1CiAgICB9LAogICAgX19zZWxmOiB0aGlzCiAgfSksICJSU0NTUy02OiBWYXJpYW50cyIpLCBtZHgoInAiLCB7CiAgICBfX3NvdXJjZTogewogICAgICBmaWxlTmFtZTogX2pzeEZpbGVOYW1lLAogICAgICBsaW5lTnVtYmVyOiAxNzgKICAgIH0sCiAgICBfX3NlbGY6IHRoaXMKICB9LCAiQ29tcG9uZW50cyBtYXkgaGF2ZSB2YXJpYW50cy4gRWxlbWVudHMgbWF5IGhhdmUgdmFyaWFudHMsIHRvby4iKSwgbWR4KCJwIiwgewogICAgX19zb3VyY2U6IHsKICAgICAgZmlsZU5hbWU6IF9qc3hGaWxlTmFtZSwKICAgICAgbGluZU51bWJlcjogMTc5CiAgICB9LAogICAgX19zZWxmOiB0aGlzCiAgfSwgImVnLiIpLCBtZHgoInByZSIsIHsKICAgIF9fc291cmNlOiB7CiAgICAgIGZpbGVOYW1lOiBfanN4RmlsZU5hbWUsCiAgICAgIGxpbmVOdW1iZXI6IDE4MAogICAgfSwKICAgIF9fc2VsZjogdGhpcwogIH0sIG1keCgiY29kZSIsIE9iamVjdC5hc3NpZ24oewogICAgcGFyZW50TmFtZTogInByZSIKICB9LCB7CiAgICAiY2xhc3NOYW1lIjogImxhbmd1YWdlLWNzcyIKICB9LCB7CiAgICBfX3NvdXJjZTogewogICAgICBmaWxlTmFtZTogX2pzeEZpbGVOYW1lLAogICAgICBsaW5lTnVtYmVyOiAxODAKICAgIH0sCiAgICBfX3NlbGY6IHRoaXMKICB9KSwgIi5zZWFyY2gtZm9ybVxuLnNlYXJjaC1mb3JtIC4tcHJlZml4ZWRcbi5zZWFyY2gtZm9ybSAuLWNvbXBhY3RcbiIpKSwgbWR4KCJoMiIsIE9iamVjdC5hc3NpZ24oewogICAgImlkIjogInJzY3NzLTctbmFtaW5nLXZhcmlhbnRzIgogIH0sIHsKICAgIF9fc291cmNlOiB7CiAgICAgIGZpbGVOYW1lOiBfanN4RmlsZU5hbWUsCiAgICAgIGxpbmVOdW1iZXI6IDE4NgogICAgfSwKICAgIF9fc2VsZjogdGhpcwogIH0pLCAiUlNDU1MtNzogTmFtaW5nIFZhcmlhbnRzIiksIG1keCgicCIsIHsKICAgIF9fc291cmNlOiB7CiAgICAgIGZpbGVOYW1lOiBfanN4RmlsZU5hbWUsCiAgICAgIGxpbmVOdW1iZXI6IDE4OQogICAgfSwKICAgIF9fc2VsZjogdGhpcwogIH0sICJDbGFzc25hbWVzIGZvciB2YXJpYW50cyB3aWxsIGJlIHByZWZpeGVkIGJ5IGEgZGFzaCAoLSkuIiksIG1keCgicHJlIiwgewogICAgX19zb3VyY2U6IHsKICAgICAgZmlsZU5hbWU6IF9qc3hGaWxlTmFtZSwKICAgICAgbGluZU51bWJlcjogMTkwCiAgICB9LAogICAgX19zZWxmOiB0aGlzCiAgfSwgbWR4KCJjb2RlIiwgT2JqZWN0LmFzc2lnbih7CiAgICBwYXJlbnROYW1lOiAicHJlIgogIH0sIHt9LCB7CiAgICBfX3NvdXJjZTogewogICAgICBmaWxlTmFtZTogX2pzeEZpbGVOYW1lLAogICAgICBsaW5lTnVtYmVyOiAxOTAKICAgIH0sCiAgICBfX3NlbGY6IHRoaXMKICB9KSwgIi5saWtlLWJ1dHRvbiB7XG4gICYuLXdpZGUgeyAvKiAuLi4gKi8gfVxuICAmLi1zaG9ydCB7IC8qIC4uLiAqLyB9XG4gICYuLWRpc2FibGVkIHsgLyogLi4uICovIH1cbn1cbiIpKSwgbWR4KCJoMiIsIE9iamVjdC5hc3NpZ24oewogICAgImlkIjogInJzY3NzLTgtZWxlbWVudC12YXJpYW50cyIKICB9LCB7CiAgICBfX3NvdXJjZTogewogICAgICBmaWxlTmFtZTogX2pzeEZpbGVOYW1lLAogICAgICBsaW5lTnVtYmVyOiAxOTYKICAgIH0sCiAgICBfX3NlbGY6IHRoaXMKICB9KSwgIlJTQ1NTLTg6IEVsZW1lbnQgVmFyaWFudHMiKSwgbWR4KCJwIiwgewogICAgX19zb3VyY2U6IHsKICAgICAgZmlsZU5hbWU6IF9qc3hGaWxlTmFtZSwKICAgICAgbGluZU51bWJlcjogMTk5CiAgICB9LAogICAgX19zZWxmOiB0aGlzCiAgfSwgIkVsZW1lbnRzIG1heSBhbHNvIGhhdmUgdmFyaWFudHMuIiksIG1keCgicHJlIiwgewogICAgX19zb3VyY2U6IHsKICAgICAgZmlsZU5hbWU6IF9qc3hGaWxlTmFtZSwKICAgICAgbGluZU51bWJlcjogMjAwCiAgICB9LAogICAgX19zZWxmOiB0aGlzCiAgfSwgbWR4KCJjb2RlIiwgT2JqZWN0LmFzc2lnbih7CiAgICBwYXJlbnROYW1lOiAicHJlIgogIH0sIHsKICAgICJjbGFzc05hbWUiOiAibGFuZ3VhZ2UtY3NzIgogIH0sIHsKICAgIF9fc291cmNlOiB7CiAgICAgIGZpbGVOYW1lOiBfanN4RmlsZU5hbWUsCiAgICAgIGxpbmVOdW1iZXI6IDIwMAogICAgfSwKICAgIF9fc2VsZjogdGhpcwogIH0pLCAiLnNob3BwaW5nLWNhcmQge1xuICAgID4gLnRpdGxlIHtcbiAgICAgICAgLyogLi4uICovXG4gICAgfVxuICAgID4gLnRpdGxlLi1zbWFsbCB7XG4gICAgICAgIC8qIC4uLiAqL1xuICAgIH1cbn1cbiIpKSwgbWR4KCJwIiwgewogICAgX19zb3VyY2U6IHsKICAgICAgZmlsZU5hbWU6IF9qc3hGaWxlTmFtZSwKICAgICAgbGluZU51bWJlcjogMjExCiAgICB9LAogICAgX19zZWxmOiB0aGlzCiAgfSwgIkRhc2ggcHJlZml4ZXMiKSwgbWR4KCJwIiwgewogICAgX19zb3VyY2U6IHsKICAgICAgZmlsZU5hbWU6IF9qc3hGaWxlTmFtZSwKICAgICAgbGluZU51bWJlcjogMjEyCiAgICB9LAogICAgX19zZWxmOiB0aGlzCiAgfSwgIkRhc2hlcyBhcmUgdGhlIHByZWZlcnJlZCBwcmVmaXggZm9yIHZhcmlhbnRzLiIpLCBtZHgoInAiLCB7CiAgICBfX3NvdXJjZTogewogICAgICBmaWxlTmFtZTogX2pzeEZpbGVOYW1lLAogICAgICBsaW5lTnVtYmVyOiAyMTMKICAgIH0sCiAgICBfX3NlbGY6IHRoaXMKICB9LCAiSXQgcHJldmVudHMgYW1iaWd1aXR5IHdpdGggZWxlbWVudHMuXG5BIENTUyBjbGFzcyBjYW4gb25seSBzdGFydCB3aXRoIGEgbGV0dGVyLCAiLCAiXyIsICIgb3IgLS5cbkRhc2hlcyBhcmUgZWFzaWVyIHRvIHR5cGUgdGhhbiB1bmRlcnNjb3Jlcy5cbkl0IGtpbmQgb2YgcmVzZW1ibGVzIHN3aXRjaGVzIGluIFVOSVggY29tbWFuZHMgKGdjYyAtTzIgLVdhbGwgLWVtaXQtbGFzdCkuIiksIG1keCgiaDIiLCBPYmplY3QuYXNzaWduKHsKICAgICJpZCI6ICJyc2Nzcy05LW5lc3RlZC1jb21wb25lbnRzIgogIH0sIHsKICAgIF9fc291cmNlOiB7CiAgICAgIGZpbGVOYW1lOiBfanN4RmlsZU5hbWUsCiAgICAgIGxpbmVOdW1iZXI6IDIxNwogICAgfSwKICAgIF9fc2VsZjogdGhpcwogIH0pLCAiUlNDU1MtOTogTmVzdGVkIENvbXBvbmVudHMiKSwgbWR4KCJwIiwgewogICAgX19zb3VyY2U6IHsKICAgICAgZmlsZU5hbWU6IF9qc3hGaWxlTmFtZSwKICAgICAgbGluZU51bWJlcjogMjIwCiAgICB9LAogICAgX19zZWxmOiB0aGlzCiAgfSwgIlNvbWV0aW1lcyBpdCdzIG5lY2Vzc2FyeSB0byBuZXN0IGNvbXBvbmVudHMuIEhlcmUgYXJlIHNvbWUgZ3VpZGVsaW5lcyBmb3IgZG9pbmcgdGhhdC4iKSwgbWR4KCJwcmUiLCB7CiAgICBfX3NvdXJjZTogewogICAgICBmaWxlTmFtZTogX2pzeEZpbGVOYW1lLAogICAgICBsaW5lTnVtYmVyOiAyMjEKICAgIH0sCiAgICBfX3NlbGY6IHRoaXMKICB9LCBtZHgoImNvZGUiLCBPYmplY3QuYXNzaWduKHsKICAgIHBhcmVudE5hbWU6ICJwcmUiCiAgfSwgewogICAgImNsYXNzTmFtZSI6ICJsYW5ndWFnZS1odG1sIgogIH0sIHsKICAgIF9fc291cmNlOiB7CiAgICAgIGZpbGVOYW1lOiBfanN4RmlsZU5hbWUsCiAgICAgIGxpbmVOdW1iZXI6IDIyMQogICAgfSwKICAgIF9fc2VsZjogdGhpcwogIH0pLCAiPGRpdiBjbGFzcz0nYXJ0aWNsZS1saW5rJz5cbiAgPGRpdiBjbGFzcz0ndm90ZS1ib3gnPlxuICAgIC4uLlxuICA8L2Rpdj5cbiAgPGgzIGNsYXNzPSd0aXRsZSc+Li4uPC9oMz5cbiAgPHAgY2xhc3M9J21ldGEnPi4uLjwvcD5cbjwvZGl2PlxuIikpLCBtZHgoInAiLCB7CiAgICBfX3NvdXJjZTogewogICAgICBmaWxlTmFtZTogX2pzeEZpbGVOYW1lLAogICAgICBsaW5lTnVtYmVyOiAyMzEKICAgIH0sCiAgICBfX3NlbGY6IHRoaXMKICB9LCAiQSBjb21wb25lbnQgbWF5IG5lZWQgdG8gYXBwZWFyIGEgY2VydGFpbiB3YXkgd2hlbiBuZXN0ZWQgaW4gYW5vdGhlciBjb21wb25lbnQuIEF2b2lkIG1vZGlmeWluZyB0aGUgbmVzdGVkIGNvbXBvbmVudCBieSByZWFjaGluZyBpbnRvIGl0IGZyb20gdGhlIGNvbnRhaW5pbmcgY29tcG9uZW50LiIpLCBtZHgoInByZSIsIHsKICAgIF9fc291cmNlOiB7CiAgICAgIGZpbGVOYW1lOiBfanN4RmlsZU5hbWUsCiAgICAgIGxpbmVOdW1iZXI6IDIzMgogICAgfSwKICAgIF9fc2VsZjogdGhpcwogIH0sIG1keCgiY29kZSIsIE9iamVjdC5hc3NpZ24oewogICAgcGFyZW50TmFtZTogInByZSIKICB9LCB7CiAgICAiY2xhc3NOYW1lIjogImxhbmd1YWdlLWNzcyIKICB9LCB7CiAgICBfX3NvdXJjZTogewogICAgICBmaWxlTmFtZTogX2pzeEZpbGVOYW1lLAogICAgICBsaW5lTnVtYmVyOiAyMzIKICAgIH0sCiAgICBfX3NlbGY6IHRoaXMKICB9KSwgIi5hcnRpY2xlLWhlYWRlciB7XG4gICAgPiAudm90ZS1ib3ggPiAudXAge1xuICAgICAgICAvKiBcdTI3MTcgYXZvaWQgdGhpcyAqL1xuICAgIH1cbn1cbiIpKSwgbWR4KCJwIiwgewogICAgX19zb3VyY2U6IHsKICAgICAgZmlsZU5hbWU6IF9qc3hGaWxlTmFtZSwKICAgICAgbGluZU51bWJlcjogMjQwCiAgICB9LAogICAgX19zZWxmOiB0aGlzCiAgfSwgIkluc3RlYWQsIHByZWZlciB0byBhZGQgYSB2YXJpYW50IHRvIHRoZSBuZXN0ZWQgY29tcG9uZW50IGFuZCBhcHBseSBpdCBmcm9tIHRoZSBjb250YWluaW5nIGNvbXBvbmVudC4iKSwgbWR4KCJwcmUiLCB7CiAgICBfX3NvdXJjZTogewogICAgICBmaWxlTmFtZTogX2pzeEZpbGVOYW1lLAogICAgICBsaW5lTnVtYmVyOiAyNDEKICAgIH0sCiAgICBfX3NlbGY6IHRoaXMKICB9LCBtZHgoImNvZGUiLCBPYmplY3QuYXNzaWduKHsKICAgIHBhcmVudE5hbWU6ICJwcmUiCiAgfSwgewogICAgImNsYXNzTmFtZSI6ICJsYW5ndWFnZS1odG1sIgogIH0sIHsKICAgIF9fc291cmNlOiB7CiAgICAgIGZpbGVOYW1lOiBfanN4RmlsZU5hbWUsCiAgICAgIGxpbmVOdW1iZXI6IDI0MQogICAgfSwKICAgIF9fc2VsZjogdGhpcwogIH0pLCAiPGRpdiBjbGFzcz0nYXJ0aWNsZS1oZWFkZXInPlxuICA8ZGl2IGNsYXNzPSd2b3RlLWJveCAtaGlnaGxpZ2h0Jz5cbiAgICAuLi5cbiAgPC9kaXY+XG4gIC4uLlxuPC9kaXY+XG4iKSksIG1keCgicHJlIiwgewogICAgX19zb3VyY2U6IHsKICAgICAgZmlsZU5hbWU6IF9qc3hGaWxlTmFtZSwKICAgICAgbGluZU51bWJlcjogMjUwCiAgICB9LAogICAgX19zZWxmOiB0aGlzCiAgfSwgbWR4KCJjb2RlIiwgT2JqZWN0LmFzc2lnbih7CiAgICBwYXJlbnROYW1lOiAicHJlIgogIH0sIHsKICAgICJjbGFzc05hbWUiOiAibGFuZ3VhZ2UtY3NzIgogIH0sIHsKICAgIF9fc291cmNlOiB7CiAgICAgIGZpbGVOYW1lOiBfanN4RmlsZU5hbWUsCiAgICAgIGxpbmVOdW1iZXI6IDI1MAogICAgfSwKICAgIF9fc2VsZjogdGhpcwogIH0pLCAiLnZvdGUtYm94IHtcbiAgICAmLi1oaWdobGlnaHQgPiAudXAge1xuICAgICAgICAvKiAuLi4gKi9cbiAgICB9XG59XG4iKSksIG1keCgiaDIiLCBPYmplY3QuYXNzaWduKHsKICAgICJpZCI6ICJyc2Nzcy0xMC1zaW1wbGlmeWluZy1uZXN0ZWQtY29tcG9uZW50cyIKICB9LCB7CiAgICBfX3NvdXJjZTogewogICAgICBmaWxlTmFtZTogX2pzeEZpbGVOYW1lLAogICAgICBsaW5lTnVtYmVyOiAyNTgKICAgIH0sCiAgICBfX3NlbGY6IHRoaXMKICB9KSwgIlJTQ1NTLTEwOiBTaW1wbGlmeWluZyBOZXN0ZWQgQ29tcG9uZW50cyIpLCBtZHgoInAiLCB7CiAgICBfX3NvdXJjZTogewogICAgICBmaWxlTmFtZTogX2pzeEZpbGVOYW1lLAogICAgICBsaW5lTnVtYmVyOiAyNjEKICAgIH0sCiAgICBfX3NlbGY6IHRoaXMKICB9LCAiU29tZXRpbWVzLCB3aGVuIG5lc3RpbmcgY29tcG9uZW50cywgeW91ciBtYXJrdXAgY2FuIGdldCBkaXJ0eToiKSwgbWR4KCJwcmUiLCB7CiAgICBfX3NvdXJjZTogewogICAgICBmaWxlTmFtZTogX2pzeEZpbGVOYW1lLAogICAgICBsaW5lTnVtYmVyOiAyNjIKICAgIH0sCiAgICBfX3NlbGY6IHRoaXMKICB9LCBtZHgoImNvZGUiLCBPYmplY3QuYXNzaWduKHsKICAgIHBhcmVudE5hbWU6ICJwcmUiCiAgfSwgewogICAgImNsYXNzTmFtZSI6ICJsYW5ndWFnZS1odG1sIgogIH0sIHsKICAgIF9fc291cmNlOiB7CiAgICAgIGZpbGVOYW1lOiBfanN4RmlsZU5hbWUsCiAgICAgIGxpbmVOdW1iZXI6IDI2MgogICAgfSwKICAgIF9fc2VsZjogdGhpcwogIH0pLCAiPGRpdiBjbGFzcz0nc2VhcmNoLWZvcm0nPlxuICA8aW5wdXQgY2xhc3M9J2lucHV0JyB0eXBlPSd0ZXh0Jz5cbiAgPGJ1dHRvbiBjbGFzcz0nc2VhcmNoLWJ1dHRvbiAtcmVkIC1sYXJnZSc+PC9idXR0b24+XG48L2Rpdj5cbllvdSBjYW4gc2ltcGxpZnkgdGhpcyBieSB1c2luZyB5b3VyIENTUyBwcmVwcm9jZXNzb3IncyBAZXh0ZW5kIG1lY2hhbmlzbTpcblxuPGRpdiBjbGFzcz0nc2VhcmNoLWZvcm0nPlxuICA8aW5wdXQgY2xhc3M9J2lucHV0JyB0eXBlPSd0ZXh0Jz5cbiAgPGJ1dHRvbiBjbGFzcz0nc3VibWl0Jz48L2J1dHRvbj5cbjwvZGl2PlxuIikpLCBtZHgoInByZSIsIHsKICAgIF9fc291cmNlOiB7CiAgICAgIGZpbGVOYW1lOiBfanN4RmlsZU5hbWUsCiAgICAgIGxpbmVOdW1iZXI6IDI3NQogICAgfSwKICAgIF9fc2VsZjogdGhpcwogIH0sIG1keCgiY29kZSIsIE9iamVjdC5hc3NpZ24oewogICAgcGFyZW50TmFtZTogInByZSIKICB9LCB7CiAgICAiY2xhc3NOYW1lIjogImxhbmd1YWdlLWNzcyIKICB9LCB7CiAgICBfX3NvdXJjZTogewogICAgICBmaWxlTmFtZTogX2pzeEZpbGVOYW1lLAogICAgICBsaW5lTnVtYmVyOiAyNzUKICAgIH0sCiAgICBfX3NlbGY6IHRoaXMKICB9KSwgIi5zZWFyY2gtZm9ybSB7XG4gICAgPiAuc3VibWl0IHtcbiAgICAgICAgQGV4dGVuZCAuc2VhcmNoLWJ1dHRvbjtcbiAgICAgICAgQGV4dGVuZCAuc2VhcmNoLWJ1dHRvbi4tcmVkO1xuICAgICAgICBAZXh0ZW5kIC5zZWFyY2gtYnV0dG9uLi1sYXJnZTtcbiAgICB9XG59XG4iKSksIG1keCgiaHIiLCB7CiAgICBfX3NvdXJjZTogewogICAgICBmaWxlTmFtZTogX2pzeEZpbGVOYW1lLAogICAgICBsaW5lTnVtYmVyOiAyODUKICAgIH0sCiAgICBfX3NlbGY6IHRoaXMKICB9KSwgbWR4KCJoMiIsIE9iamVjdC5hc3NpZ24oewogICAgImlkIjogInJzY3NzLTExLWxheW91dHMiCiAgfSwgewogICAgX19zb3VyY2U6IHsKICAgICAgZmlsZU5hbWU6IF9qc3hGaWxlTmFtZSwKICAgICAgbGluZU51bWJlcjogMjg2CiAgICB9LAogICAgX19zZWxmOiB0aGlzCiAgfSksICJSU0NTUy0xMTogTGF5b3V0cyIpLCBtZHgoInByZSIsIHsKICAgIF9fc291cmNlOiB7CiAgICAgIGZpbGVOYW1lOiBfanN4RmlsZU5hbWUsCiAgICAgIGxpbmVOdW1iZXI6IDI4OQogICAgfSwKICAgIF9fc2VsZjogdGhpcwogIH0sIG1keCgiY29kZSIsIE9iamVjdC5hc3NpZ24oewogICAgcGFyZW50TmFtZTogInByZSIKICB9LCB7CiAgICAiY2xhc3NOYW1lIjogImxhbmd1YWdlLWh0bWwiCiAgfSwgewogICAgX19zb3VyY2U6IHsKICAgICAgZmlsZU5hbWU6IF9qc3hGaWxlTmFtZSwKICAgICAgbGluZU51bWJlcjogMjg5CiAgICB9LAogICAgX19zZWxmOiB0aGlzCiAgfSksICI8ZGl2IGNsYXNzPVwicmVjaXBlLWl0ZW1cIj5cbiAgICA8ZGl2IGNsYXNzPVwicmVjaXBlLWxpc3RcIj5cbiAgICA8L2Rpdj5cbjwvZGl2PlxuIikpLCBtZHgoImgyIiwgT2JqZWN0LmFzc2lnbih7CiAgICAiaWQiOiAicnNjc3MtMTItYXZvaWQtcG9zaXRpb25pbmctcHJvcGVydGllcyIKICB9LCB7CiAgICBfX3NvdXJjZTogewogICAgICBmaWxlTmFtZTogX2pzeEZpbGVOYW1lLAogICAgICBsaW5lTnVtYmVyOiAyOTYKICAgIH0sCiAgICBfX3NlbGY6IHRoaXMKICB9KSwgIlJTQ1NTLTEyOiBBdm9pZCBwb3NpdGlvbmluZyBwcm9wZXJ0aWVzIiksIG1keCgicCIsIHsKICAgIF9fc291cmNlOiB7CiAgICAgIGZpbGVOYW1lOiBfanN4RmlsZU5hbWUsCiAgICAgIGxpbmVOdW1iZXI6IDI5OQogICAgfSwKICAgIF9fc2VsZjogdGhpcwogIH0sICJDb21wb25lbnRzIHNob3VsZCBiZSBtYWRlIGluIGEgd2F5IHRoYXQgdGhleSdyZSByZXVzYWJsZSBpbiBkaWZmZXJlbnQgY29udGV4dHMuIEF2b2lkIHB1dHRpbmcgdGhlc2UgcHJvcGVydGllcyBpbiBjb21wb25lbnRzOiIpLCBtZHgoInAiLCB7CiAgICBfX3NvdXJjZTogewogICAgICBmaWxlTmFtZTogX2pzeEZpbGVOYW1lLAogICAgICBsaW5lTnVtYmVyOiAzMDAKICAgIH0sCiAgICBfX3NlbGY6IHRoaXMKICB9LCAiUG9zaXRpb25pbmcgKHBvc2l0aW9uLCB0b3AsIGxlZnQsIHJpZ2h0LCBib3R0b20pXG5GbG9hdHMgKGZsb2F0LCBjbGVhcilcbk1hcmdpbnMgKG1hcmdpbilcbkRpbWVuc2lvbnMgKHdpZHRoLCBoZWlnaHQpICIsICIqIiksIG1keCgiaDIiLCBPYmplY3QuYXNzaWduKHsKICAgICJpZCI6ICJyc2Nzcy0xMy1maXhlZC1kaW1lbnNpb25zIgogIH0sIHsKICAgIF9fc291cmNlOiB7CiAgICAgIGZpbGVOYW1lOiBfanN4RmlsZU5hbWUsCiAgICAgIGxpbmVOdW1iZXI6IDMwNAogICAgfSwKICAgIF9fc2VsZjogdGhpcwogIH0pLCAiUlNDU1MtMTM6IEZpeGVkIERpbWVuc2lvbnMiKSwgbWR4KCJwIiwgewogICAgX19zb3VyY2U6IHsKICAgICAgZmlsZU5hbWU6IF9qc3hGaWxlTmFtZSwKICAgICAgbGluZU51bWJlcjogMzA3CiAgICB9LAogICAgX19zZWxmOiB0aGlzCiAgfSwgIkV4Y2VwdGlvbiB0byB0aGVzZSB3b3VsZCBiZSBlbGVtZW50cyB0aGF0IGhhdmUgZml4ZWQgd2lkdGgvaGVpZ2h0cywgc3VjaCBhcyBhdmF0YXJzIGFuZCBsb2dvcy4iKSwgbWR4KCJoMiIsIE9iamVjdC5hc3NpZ24oewogICAgImlkIjogInJzY3NzLTE0LWRlZmluZS1wb3NpdGlvbi1pbi1wYXJlbnRzIgogIH0sIHsKICAgIF9fc291cmNlOiB7CiAgICAgIGZpbGVOYW1lOiBfanN4RmlsZU5hbWUsCiAgICAgIGxpbmVOdW1iZXI6IDMwOAogICAgfSwKICAgIF9fc2VsZjogdGhpcwogIH0pLCAiUlNDU1MtMTQ6IERlZmluZSBQb3NpdGlvbiBpbiBQYXJlbnRzIiksIG1keCgicCIsIHsKICAgIF9fc291cmNlOiB7CiAgICAgIGZpbGVOYW1lOiBfanN4RmlsZU5hbWUsCiAgICAgIGxpbmVOdW1iZXI6IDMxMQogICAgfSwKICAgIF9fc2VsZjogdGhpcwogIH0sICJJZiB5b3UgbmVlZCB0byBkZWZpbmUgdGhlc2UsIHRyeSB0byBkZWZpbmUgdGhlbSBpbiB3aGF0ZXZlciBjb250ZXh0IHRoZXkgd2lsbCBiZSBpbi4gSW4gdGhpcyBleGFtcGxlIGJlbG93LCBub3RpY2UgdGhhdCB0aGUgd2lkdGhzIGFuZCBmbG9hdHMgYXJlIGFwcGxpZWQgb24gdGhlIGxpc3QgY29tcG9uZW50LCBub3QgdGhlIGNvbXBvbmVudCBpdHNlbGYuIiksIG1keCgicHJlIiwgewogICAgX19zb3VyY2U6IHsKICAgICAgZmlsZU5hbWU6IF9qc3hGaWxlTmFtZSwKICAgICAgbGluZU51bWJlcjogMzEyCiAgICB9LAogICAgX19zZWxmOiB0aGlzCiAgfSwgbWR4KCJjb2RlIiwgT2JqZWN0LmFzc2lnbih7CiAgICBwYXJlbnROYW1lOiAicHJlIgogIH0sIHsKICAgICJjbGFzc05hbWUiOiAibGFuZ3VhZ2UtY3NzIgogIH0sIHsKICAgIF9fc291cmNlOiB7CiAgICAgIGZpbGVOYW1lOiBfanN4RmlsZU5hbWUsCiAgICAgIGxpbmVOdW1iZXI6IDMxMgogICAgfSwKICAgIF9fc2VsZjogdGhpcwogIH0pLCAiLmFydGljbGUtbGlzdCB7XG4gICAgJiB7XG4gICAgICAgIEBpbmNsdWRlIGNsZWFyZml4O1xuICAgIH1cblxuICAgID4gLmFydGljbGUtY2FyZCB7XG4gICAgICAgIHdpZHRoOiAzMy4zJTtcbiAgICAgICAgZmxvYXQ6IGxlZnQ7XG4gICAgfVxufVxuXG4uYXJ0aWNsZS1jYXJkIHtcbiAgICAmIHtcbiAgICAgICAgLyogLi4uICovXG4gICAgfVxuICAgID4gLmltYWdlIHtcbiAgICAgICAgLyogLi4uICovXG4gICAgfVxuICAgID4gLnRpdGxlIHtcbiAgICAgICAgLyogLi4uICovXG4gICAgfVxuICAgID4gLmNhdGVnb3J5IHtcbiAgICAgICAgLyogLi4uICovXG4gICAgfVxufVxuIikpLCBtZHgoImhyIiwgewogICAgX19zb3VyY2U6IHsKICAgICAgZmlsZU5hbWU6IF9qc3hGaWxlTmFtZSwKICAgICAgbGluZU51bWJlcjogMzQwCiAgICB9LAogICAgX19zZWxmOiB0aGlzCiAgfSksIG1keCgiaDIiLCBPYmplY3QuYXNzaWduKHsKICAgICJpZCI6ICJyc2Nzcy0xNS1oZWxwZXJzIgogIH0sIHsKICAgIF9fc291cmNlOiB7CiAgICAgIGZpbGVOYW1lOiBfanN4RmlsZU5hbWUsCiAgICAgIGxpbmVOdW1iZXI6IDM0MQogICAgfSwKICAgIF9fc2VsZjogdGhpcwogIH0pLCAiUlNDU1MtMTU6IEhlbHBlcnMiKSwgbWR4KCJwIiwgewogICAgX19zb3VyY2U6IHsKICAgICAgZmlsZU5hbWU6IF9qc3hGaWxlTmFtZSwKICAgICAgbGluZU51bWJlcjogMzQ0CiAgICB9LAogICAgX19zZWxmOiB0aGlzCiAgfSwgIkZvciBnZW5lcmFsLXB1cnBvc2UgY2xhc3NlcyBtZWFudCB0byBvdmVycmlkZSB2YWx1ZXMsIHB1dCB0aGVtIGluIGEgc2VwYXJhdGUgZmlsZSBhbmQgbmFtZSB0aGVtIGJlZ2lubmluZyB3aXRoIGFuIHVuZGVyc2NvcmUuIFRoZXkgYXJlIHR5cGljYWxseSB0aGluZ3MgdGhhdCBhcmUgdGFnZ2VkIHdpdGggIWltcG9ydGFudC4gVXNlIHRoZW0gdmVyeSBzcGFyaW5nbHkuIiksIG1keCgicHJlIiwgewogICAgX19zb3VyY2U6IHsKICAgICAgZmlsZU5hbWU6IF9qc3hGaWxlTmFtZSwKICAgICAgbGluZU51bWJlcjogMzQ1CiAgICB9LAogICAgX19zZWxmOiB0aGlzCiAgfSwgbWR4KCJjb2RlIiwgT2JqZWN0LmFzc2lnbih7CiAgICBwYXJlbnROYW1lOiAicHJlIgogIH0sIHsKICAgICJjbGFzc05hbWUiOiAibGFuZ3VhZ2UtY3NzIgogIH0sIHsKICAgIF9fc291cmNlOiB7CiAgICAgIGZpbGVOYW1lOiBfanN4RmlsZU5hbWUsCiAgICAgIGxpbmVOdW1iZXI6IDM0NQogICAgfSwKICAgIF9fc2VsZjogdGhpcwogIH0pLCAiLl91bm1hcmdpbiB7XG4gICAgbWFyZ2luOiAwICFpbXBvcnRhbnQ7XG59XG4uX2NlbnRlciB7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyICFpbXBvcnRhbnQ7XG59XG4uX3B1bGwtbGVmdCB7XG4gICAgZmxvYXQ6IGxlZnQgIWltcG9ydGFudDtcbn1cbi5fcHVsbC1yaWdodCB7XG4gICAgZmxvYXQ6IHJpZ2h0ICFpbXBvcnRhbnQ7XG59XG4iKSksIG1keCgiaDIiLCBPYmplY3QuYXNzaWduKHsKICAgICJpZCI6ICJyc2Nzcy0xNi1uYW1pbmctaGVscGVycyIKICB9LCB7CiAgICBfX3NvdXJjZTogewogICAgICBmaWxlTmFtZTogX2pzeEZpbGVOYW1lLAogICAgICBsaW5lTnVtYmVyOiAzNjAKICAgIH0sCiAgICBfX3NlbGY6IHRoaXMKICB9KSwgIlJTQ1NTLTE2OiBOYW1pbmcgSGVscGVycyIpLCBtZHgoInAiLCB7CiAgICBfX3NvdXJjZTogewogICAgICBmaWxlTmFtZTogX2pzeEZpbGVOYW1lLAogICAgICBsaW5lTnVtYmVyOiAzNjMKICAgIH0sCiAgICBfX3NlbGY6IHRoaXMKICB9LCAiUHJlZml4IGNsYXNzbmFtZXMgd2l0aCBhbiB1bmRlcnNjb3JlLiBUaGlzIHdpbGwgbWFrZSBpdCBlYXN5IHRvIGRpZmZlcmVudGlhdGUgdGhlbSBmcm9tIG1vZGlmaWVycyBkZWZpbmVkIGluIHRoZSBjb21wb25lbnQuIFVuZGVyc2NvcmVzIGFsc28gbG9vayBhIGJpdCB1Z2x5IHdoaWNoIGlzIGFuIGludGVudGlvbmFsIHNpZGUgZWZmZWN0OiB1c2luZyB0b28gbWFueSBoZWxwZXJzIHNob3VsZCBiZSBkaXNjb3VyYWdlZC4iKSwgbWR4KCJwcmUiLCB7CiAgICBfX3NvdXJjZTogewogICAgICBmaWxlTmFtZTogX2pzeEZpbGVOYW1lLAogICAgICBsaW5lTnVtYmVyOiAzNjQKICAgIH0sCiAgICBfX3NlbGY6IHRoaXMKICB9LCBtZHgoImNvZGUiLCBPYmplY3QuYXNzaWduKHsKICAgIHBhcmVudE5hbWU6ICJwcmUiCiAgfSwgewogICAgImNsYXNzTmFtZSI6ICJsYW5ndWFnZS1odG1sIgogIH0sIHsKICAgIF9fc291cmNlOiB7CiAgICAgIGZpbGVOYW1lOiBfanN4RmlsZU5hbWUsCiAgICAgIGxpbmVOdW1iZXI6IDM2NAogICAgfSwKICAgIF9fc2VsZjogdGhpcwogIH0pLCAiPGRpdiBjbGFzcz0nb3JkZXItZ3JhcGhzIC1zbGltIF91bm1hcmdpbic+XG48L2Rpdj5cbiIpKSwgbWR4KCJoMiIsIE9iamVjdC5hc3NpZ24oewogICAgImlkIjogInJzY3NzLTE3LW9yZ2FuaXNpbmctaGVscGVycyIKICB9LCB7CiAgICBfX3NvdXJjZTogewogICAgICBmaWxlTmFtZTogX2pzeEZpbGVOYW1lLAogICAgICBsaW5lTnVtYmVyOiAzNjkKICAgIH0sCiAgICBfX3NlbGY6IHRoaXMKICB9KSwgIlJTQ1NTLTE3OiBPcmdhbmlzaW5nIEhlbHBlcnMiKSwgbWR4KCJwIiwgewogICAgX19zb3VyY2U6IHsKICAgICAgZmlsZU5hbWU6IF9qc3hGaWxlTmFtZSwKICAgICAgbGluZU51bWJlcjogMzcyCiAgICB9LAogICAgX19zZWxmOiB0aGlzCiAgfSwgIlBsYWNlIGFsbCBoZWxwZXJzIGluIG9uZSBmaWxlIGNhbGxlZCBoZWxwZXJzLiBXaGlsZSB5b3UgY2FuIHNlcGFyYXRlIHRoZW0gaW50byBtdWx0aXBsZSBmaWxlcywgaXQncyB2ZXJ5IHByZWZlcnJhYmxlIHRvIGtlZXAgeW91ciBudW1iZXIgb2YgaGVscGVycyB0byBhIG1pbmltdW0uIiksIG1keCgiaHIiLCB7CiAgICBfX3NvdXJjZTogewogICAgICBmaWxlTmFtZTogX2pzeEZpbGVOYW1lLAogICAgICBsaW5lTnVtYmVyOiAzNzMKICAgIH0sCiAgICBfX3NlbGY6IHRoaXMKICB9KSwgbWR4KCJoMiIsIE9iamVjdC5hc3NpZ24oewogICAgImlkIjogInJzY3NzLTE4LWNzcy1zdHJ1Y3R1cmUiCiAgfSwgewogICAgX19zb3VyY2U6IHsKICAgICAgZmlsZU5hbWU6IF9qc3hGaWxlTmFtZSwKICAgICAgbGluZU51bWJlcjogMzc0CiAgICB9LAogICAgX19zZWxmOiB0aGlzCiAgfSksICJSU0NTUy0xODogQ1NTIFN0cnVjdHVyZSIpLCBtZHgoImgyIiwgT2JqZWN0LmFzc2lnbih7CiAgICAiaWQiOiAicnNjc3MtMTktb25lLWNvbXBvbmVudC1wZXItZmlsZSIKICB9LCB7CiAgICBfX3NvdXJjZTogewogICAgICBmaWxlTmFtZTogX2pzeEZpbGVOYW1lLAogICAgICBsaW5lTnVtYmVyOiAzNzcKICAgIH0sCiAgICBfX3NlbGY6IHRoaXMKICB9KSwgIlJTQ1NTLTE5OiBPbmUgQ29tcG9uZW50IFBlciBGaWxlIiksIG1keCgicCIsIHsKICAgIF9fc291cmNlOiB7CiAgICAgIGZpbGVOYW1lOiBfanN4RmlsZU5hbWUsCiAgICAgIGxpbmVOdW1iZXI6IDM4MAogICAgfSwKICAgIF9fc2VsZjogdGhpcwogIH0sICJGb3IgZWFjaCBjb21wb25lbnQsIHBsYWNlIHRoZW0gaW4gdGhlaXIgb3duIGZpbGUuIiksIG1keCgicHJlIiwgewogICAgX19zb3VyY2U6IHsKICAgICAgZmlsZU5hbWU6IF9qc3hGaWxlTmFtZSwKICAgICAgbGluZU51bWJlcjogMzgxCiAgICB9LAogICAgX19zZWxmOiB0aGlzCiAgfSwgbWR4KCJjb2RlIiwgT2JqZWN0LmFzc2lnbih7CiAgICBwYXJlbnROYW1lOiAicHJlIgogIH0sIHsKICAgICJjbGFzc05hbWUiOiAibGFuZ3VhZ2UtY3NzIgogIH0sIHsKICAgIF9fc291cmNlOiB7CiAgICAgIGZpbGVOYW1lOiBfanN4RmlsZU5hbWUsCiAgICAgIGxpbmVOdW1iZXI6IDM4MQogICAgfSwKICAgIF9fc2VsZjogdGhpcwogIH0pLCAiLyogY3NzL2NvbXBvbmVudHMvc2VhcmNoLWZvcm0uc2NzcyAqL1xuLnNlYXJjaC1mb3JtIHtcbiAgICA+IC5idXR0b24ge1xuICAgICAgICAvKiAuLi4gKi9cbiAgICB9XG4gICAgPiAuZmllbGQge1xuICAgICAgICAvKiAuLi4gKi9cbiAgICB9XG4gICAgPiAubGFiZWwge1xuICAgICAgICAvKiAuLi4gKi9cbiAgICB9XG5cbiAgICAvLyB2YXJpYW50c1xuICAgICYuLXNtYWxsIHtcbiAgICAgICAgLyogLi4uICovXG4gICAgfVxuICAgICYuLXdpZGUge1xuICAgICAgICAvKiAuLi4gKi9cbiAgICB9XG59XG4iKSksIG1keCgicCIsIHsKICAgIF9fc291cmNlOiB7CiAgICAgIGZpbGVOYW1lOiBfanN4RmlsZU5hbWUsCiAgICAgIGxpbmVOdW1iZXI6IDQwNAogICAgfSwKICAgIF9fc2VsZjogdGhpcwogIH0sICJVc2UgZ2xvYiBtYXRjaGluZyIpLCBtZHgoInAiLCB7CiAgICBfX3NvdXJjZTogewogICAgICBmaWxlTmFtZTogX2pzeEZpbGVOYW1lLAogICAgICBsaW5lTnVtYmVyOiA0MDUKICAgIH0sCiAgICBfX3NlbGY6IHRoaXMKICB9LCAiSW4gc2Fzcy1yYWlscyBhbmQgc3R5bHVzLCB0aGlzIG1ha2VzIGluY2x1ZGluZyBhbGwgb2YgdGhlbSBlYXN5OiIpLCBtZHgoInByZSIsIHsKICAgIF9fc291cmNlOiB7CiAgICAgIGZpbGVOYW1lOiBfanN4RmlsZU5hbWUsCiAgICAgIGxpbmVOdW1iZXI6IDQwNgogICAgfSwKICAgIF9fc2VsZjogdGhpcwogIH0sIG1keCgiY29kZSIsIE9iamVjdC5hc3NpZ24oewogICAgcGFyZW50TmFtZTogInByZSIKICB9LCB7CiAgICAiY2xhc3NOYW1lIjogImxhbmd1YWdlLWNzcyIKICB9LCB7CiAgICBfX3NvdXJjZTogewogICAgICBmaWxlTmFtZTogX2pzeEZpbGVOYW1lLAogICAgICBsaW5lTnVtYmVyOiA0MDYKICAgIH0sCiAgICBfX3NlbGY6IHRoaXMKICB9KSwgIkBpbXBvcnQgJ2NvbXBvbmVudHMvKic7XG4iKSksIG1keCgiaDIiLCBPYmplY3QuYXNzaWduKHsKICAgICJpZCI6ICJyc2Nzcy0yMC1hdm9pZC1vdmVybmVzdGluZyIKICB9LCB7CiAgICBfX3NvdXJjZTogewogICAgICBmaWxlTmFtZTogX2pzeEZpbGVOYW1lLAogICAgICBsaW5lTnVtYmVyOiA0MTAKICAgIH0sCiAgICBfX3NlbGY6IHRoaXMKICB9KSwgIlJTQ1NTLTIwOiBBdm9pZCBPdmVybmVzdGluZyIpLCBtZHgoInAiLCB7CiAgICBfX3NvdXJjZTogewogICAgICBmaWxlTmFtZTogX2pzeEZpbGVOYW1lLAogICAgICBsaW5lTnVtYmVyOiA0MTMKICAgIH0sCiAgICBfX3NlbGY6IHRoaXMKICB9LCAiVXNlIG5vIG1vcmUgdGhhbiAxIGxldmVsIG9mIG5lc3RpbmcuIEl0J3MgZWFzeSB0byBnZXQgbG9zdCB3aXRoIHRvbyBtdWNoIG5lc3RpbmcuIiksIG1keCgicHJlIiwgewogICAgX19zb3VyY2U6IHsKICAgICAgZmlsZU5hbWU6IF9qc3hGaWxlTmFtZSwKICAgICAgbGluZU51bWJlcjogNDE0CiAgICB9LAogICAgX19zZWxmOiB0aGlzCiAgfSwgbWR4KCJjb2RlIiwgT2JqZWN0LmFzc2lnbih7CiAgICBwYXJlbnROYW1lOiAicHJlIgogIH0sIHsKICAgICJjbGFzc05hbWUiOiAibGFuZ3VhZ2UtY3NzIgogIH0sIHsKICAgIF9fc291cmNlOiB7CiAgICAgIGZpbGVOYW1lOiBfanN4RmlsZU5hbWUsCiAgICAgIGxpbmVOdW1iZXI6IDQxNAogICAgfSwKICAgIF9fc2VsZjogdGhpcwogIH0pLCAiLyogXHUyNzE3IEF2b2lkOiAzIGxldmVscyBvZiBuZXN0aW5nICovXG4uaW1hZ2UtZnJhbWUge1xuICAgID4gLmRlc2NyaXB0aW9uIHtcbiAgICAgICAgLyogLi4uICovXG5cbiAgICAgICAgPiAuaWNvbiB7XG4gICAgICAgICAgICAvKiAuLi4gKi9cbiAgICAgICAgfVxuICAgIH1cbn1cblxuLyogXHUyNzEzIEJldHRlcjogMiBsZXZlbHMgKi9cbi5pbWFnZS1mcmFtZSB7XG4gICAgPiAuZGVzY3JpcHRpb24ge1xuICAgICAgICAvKiAuLi4gKi9cbiAgICB9XG4gICAgPiAuZGVzY3JpcHRpb24gPiAuaWNvbiB7XG4gICAgICAgIC8qIC4uLiAqL1xuICAgIH1cbn1cbiIpKSwgbWR4KCJociIsIHsKICAgIF9fc291cmNlOiB7CiAgICAgIGZpbGVOYW1lOiBfanN4RmlsZU5hbWUsCiAgICAgIGxpbmVOdW1iZXI6IDQzNwogICAgfSwKICAgIF9fc2VsZjogdGhpcwogIH0pLCBtZHgoImgyIiwgT2JqZWN0LmFzc2lnbih7CiAgICAiaWQiOiAicnNjc3MtMjEtcGl0ZmFsbHMiCiAgfSwgewogICAgX19zb3VyY2U6IHsKICAgICAgZmlsZU5hbWU6IF9qc3hGaWxlTmFtZSwKICAgICAgbGluZU51bWJlcjogNDM4CiAgICB9LAogICAgX19zZWxmOiB0aGlzCiAgfSksICJSU0NTUy0yMTogUGl0ZmFsbHMiKSwgbWR4KCJoMiIsIE9iamVjdC5hc3NpZ24oewogICAgImlkIjogInJzY3NzLTIyLWJsZWVkaW5nLXRocm91Z2gtbmVzdGVkLWNvbXBvbmVudHMiCiAgfSwgewogICAgX19zb3VyY2U6IHsKICAgICAgZmlsZU5hbWU6IF9qc3hGaWxlTmFtZSwKICAgICAgbGluZU51bWJlcjogNDQxCiAgICB9LAogICAgX19zZWxmOiB0aGlzCiAgfSksICJSU0NTUy0yMjogQmxlZWRpbmcgVGhyb3VnaCBOZXN0ZWQgQ29tcG9uZW50cyIpLCBtZHgoInAiLCB7CiAgICBfX3NvdXJjZTogewogICAgICBmaWxlTmFtZTogX2pzeEZpbGVOYW1lLAogICAgICBsaW5lTnVtYmVyOiA0NDQKICAgIH0sCiAgICBfX3NlbGY6IHRoaXMKICB9LCAiQmUgY2FyZWZ1bCBhYm91dCBuZXN0ZWQgY29tcG9uZW50cyB3aXRoIGVsZW1lbnRzIHNoYXJpbmcgdGhlIHNhbWUgbmFtZSBhcyBlbGVtZW50cyBpbiBpdHMgY29udGFpbmVyLiIpLCBtZHgoInByZSIsIHsKICAgIF9fc291cmNlOiB7CiAgICAgIGZpbGVOYW1lOiBfanN4RmlsZU5hbWUsCiAgICAgIGxpbmVOdW1iZXI6IDQ0NQogICAgfSwKICAgIF9fc2VsZjogdGhpcwogIH0sIG1keCgiY29kZSIsIE9iamVjdC5hc3NpZ24oewogICAgcGFyZW50TmFtZTogInByZSIKICB9LCB7CiAgICAiY2xhc3NOYW1lIjogImxhbmd1YWdlLWh0bWwiCiAgfSwgewogICAgX19zb3VyY2U6IHsKICAgICAgZmlsZU5hbWU6IF9qc3hGaWxlTmFtZSwKICAgICAgbGluZU51bWJlcjogNDQ1CiAgICB9LAogICAgX19zZWxmOiB0aGlzCiAgfSksICI8YXJ0aWNsZSBjbGFzcz0nYXJ0aWNsZS1saW5rJz5cbiA8ZGl2IGNsYXNzPSd2b3RlLWJveCc+XG4gICAgPGJ1dHRvbiBjbGFzcz0ndXAnPjwvYnV0dG9uPlxuICAgIDxidXR0b24gY2xhc3M9J2Rvd24nPjwvYnV0dG9uPlxuICAgIDxzcGFuIGNsYXNzPSdjb3VudCc+NDwvc3Bhbj5cbiAgPC9kaXY+XG5cbiAgPGgzIGNsYXNzPSd0aXRsZSc+QXJ0aWNsZSB0aXRsZTwvaDM+XG4gIDxwIGNsYXNzPSdjb3VudCc+MyB2b3RlczwvcD5cbjwvYXJ0aWNsZT5cbiIpKSwgbWR4KCJwcmUiLCB7CiAgICBfX3NvdXJjZTogewogICAgICBmaWxlTmFtZTogX2pzeEZpbGVOYW1lLAogICAgICBsaW5lTnVtYmVyOiA0NTgKICAgIH0sCiAgICBfX3NlbGY6IHRoaXMKICB9LCBtZHgoImNvZGUiLCBPYmplY3QuYXNzaWduKHsKICAgIHBhcmVudE5hbWU6ICJwcmUiCiAgfSwgewogICAgImNsYXNzTmFtZSI6ICJsYW5ndWFnZS1jc3MiCiAgfSwgewogICAgX19zb3VyY2U6IHsKICAgICAgZmlsZU5hbWU6IF9qc3hGaWxlTmFtZSwKICAgICAgbGluZU51bWJlcjogNDU4CiAgICB9LAogICAgX19zZWxmOiB0aGlzCiAgfSksICIuYXJ0aWNsZS1saW5rIHtcbiAgICA+IC50aXRsZSB7XG4gICAgICAgIC8qIC4uLiAqL1xuICAgIH1cbiAgICA+IC5jb3VudCB7XG4gICAgICAgIC8qIC4uLiAoISEhKSAqL1xuICAgIH1cbn1cblxuLnZvdGUtYm94IHtcbiAgICA+IC51cCB7XG4gICAgICAgIC8qIC4uLiAqL1xuICAgIH1cbiAgICA+IC5kb3duIHtcbiAgICAgICAgLyogLi4uICovXG4gICAgfVxuICAgID4gLmNvdW50IHtcbiAgICAgICAgLyogLi4uICovXG4gICAgfVxufVxuIikpLCBtZHgoInAiLCB7CiAgICBfX3NvdXJjZTogewogICAgICBmaWxlTmFtZTogX2pzeEZpbGVOYW1lLAogICAgICBsaW5lTnVtYmVyOiA0ODEKICAgIH0sCiAgICBfX3NlbGY6IHRoaXMKICB9LCAiSW4gdGhpcyBjYXNlLCBpZiAuYXJ0aWNsZS1saW5rID4gLmNvdW50IGRpZCBub3QgaGF2ZSB0aGUgPiAoY2hpbGQpIHNlbGVjdG9yLCBpdCB3aWxsIGFsc28gYXBwbHkgdG8gdGhlIC52b3RlLWJveCAuY291bnQgZWxlbWVudC4gVGhpcyBpcyBvbmUgb2YgdGhlIHJlYXNvbnMgd2h5IGNoaWxkIHNlbGVjdG9ycyBhcmUgcHJlZmVycmVkLiIpLCBtZHgoImhyIiwgewogICAgX19zb3VyY2U6IHsKICAgICAgZmlsZU5hbWU6IF9qc3hGaWxlTmFtZSwKICAgICAgbGluZU51bWJlcjogNDgyCiAgICB9LAogICAgX19zZWxmOiB0aGlzCiAgfSksIG1keCgiaDIiLCBPYmplY3QuYXNzaWduKHsKICAgICJpZCI6ICJyc2Nzcy0yMy1hcHByZWhlbnNpb25zIgogIH0sIHsKICAgIF9fc291cmNlOiB7CiAgICAgIGZpbGVOYW1lOiBfanN4RmlsZU5hbWUsCiAgICAgIGxpbmVOdW1iZXI6IDQ4MwogICAgfSwKICAgIF9fc2VsZjogdGhpcwogIH0pLCAiUlNDU1MtMjM6IEFwcHJlaGVuc2lvbnMiKSwgbWR4KCJwIiwgewogICAgX19zb3VyY2U6IHsKICAgICAgZmlsZU5hbWU6IF9qc3hGaWxlTmFtZSwKICAgICAgbGluZU51bWJlcjogNDg2CiAgICB9LAogICAgX19zZWxmOiB0aGlzCiAgfSwgIlNvbWUgcGVvcGxlIG1heSBoYXZlIGFwcHJlaGVuc2lvbnMgdG8gdGhlc2UgY29udmVudGlvbnMsIHN1Y2ggYXM6IiksIG1keCgicCIsIHsKICAgIF9fc291cmNlOiB7CiAgICAgIGZpbGVOYW1lOiBfanN4RmlsZU5hbWUsCiAgICAgIGxpbmVOdW1iZXI6IDQ4NwogICAgfSwKICAgIF9fc2VsZjogdGhpcwogIH0sICJcIkJ1dCBkYXNoZXMgc3Vja1wiIiksIG1keCgicCIsIHsKICAgIF9fc291cmNlOiB7CiAgICAgIGZpbGVOYW1lOiBfanN4RmlsZU5hbWUsCiAgICAgIGxpbmVOdW1iZXI6IDQ4OAogICAgfSwKICAgIF9fc2VsZjogdGhpcwogIH0sICJZb3UncmUgZnJlZSB0byBvbWl0IHRoZW0gYW5kIGp1c3QgdXNlIHJlZ3VsYXIgd29yZHMsIGJ1dCBrZWVwIHRoZSByZXN0IG9mIHRoZSBpZGVhcyBpbiBwbGFjZSAoY29tcG9uZW50cywgZWxlbWVudHMsIHZhcmlhbnRzKS4iKSwgbWR4KCJwIiwgewogICAgX19zb3VyY2U6IHsKICAgICAgZmlsZU5hbWU6IF9qc3hGaWxlTmFtZSwKICAgICAgbGluZU51bWJlcjogNDg5CiAgICB9LAogICAgX19zZWxmOiB0aGlzCiAgfSwgIlwiQnV0IEkgY2FuJ3QgdGhpbmsgb2YgMiB3b3JkcyFcIiIpLCBtZHgoInAiLCB7CiAgICBfX3NvdXJjZTogewogICAgICBmaWxlTmFtZTogX2pzeEZpbGVOYW1lLAogICAgICBsaW5lTnVtYmVyOiA0OTAKICAgIH0sCiAgICBfX3NlbGY6IHRoaXMKICB9LCAiU29tZSBjb21wb25lbnRzIHdpbGwgb25seSBuZWVkIG9uZSB3b3JkIHRvIGV4cHJlc3MgdGhlaXIgcHVycG9zZSwgc3VjaCBhcyBhbGVydC4gSW4gdGhlc2UgY2FzZXMsIGNvbnNpZGVyIHRoYXQgdXNpbmcgc29tZSBzdWZmaXhlcyB3aWxsIG1ha2UgaXQgY2xlYXJlciB0aGF0IGl0J3MgYSBibG9jay1sZXZlbCBlbGVtZW50OiIpLCBtZHgoInByZSIsIHsKICAgIF9fc291cmNlOiB7CiAgICAgIGZpbGVOYW1lOiBfanN4RmlsZU5hbWUsCiAgICAgIGxpbmVOdW1iZXI6IDQ5MQogICAgfSwKICAgIF9fc2VsZjogdGhpcwogIH0sIG1keCgiY29kZSIsIE9iamVjdC5hc3NpZ24oewogICAgcGFyZW50TmFtZTogInByZSIKICB9LCB7CiAgICAiY2xhc3NOYW1lIjogImxhbmd1YWdlLWNzcyIKICB9LCB7CiAgICBfX3NvdXJjZTogewogICAgICBmaWxlTmFtZTogX2pzeEZpbGVOYW1lLAogICAgICBsaW5lTnVtYmVyOiA0OTEKICAgIH0sCiAgICBfX3NlbGY6IHRoaXMKICB9KSwgIi5hbGVydC1ib3guYWxlcnQtY2FyZCAuYWxlcnQtYmxvY2sgT3IgZm9yIGlubGluZXM6IC5saW5rLWJ1dHRvbiAubGluay1zcGFuO1xuIikpKTsKfQoKaWYgKHR5cGVvZiBNRFhDb250ZW50ICE9PSAndW5kZWZpbmVkJyAmJiBNRFhDb250ZW50ICYmIE1EWENvbnRlbnQgPT09IE9iamVjdChNRFhDb250ZW50KSAmJiBPYmplY3QuaXNFeHRlbnNpYmxlKE1EWENvbnRlbnQpKSB7CiAgT2JqZWN0LmRlZmluZVByb3BlcnR5KE1EWENvbnRlbnQsICdfX2ZpbGVtZXRhJywgewogICAgZW51bWVyYWJsZTogdHJ1ZSwKICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSwKICAgIHZhbHVlOiB7CiAgICAgIG5hbWU6ICJNRFhDb250ZW50IiwKICAgICAgZmlsZW5hbWU6ICJtYW51YWwvQ1NTL1JTQ1NTLUNvZGUtR3VpZGUubWQiCiAgICB9CiAgfSk7Cn0KCk1EWENvbnRlbnQuaXNNRFhDb21wb25lbnQgPSB0cnVlOwo7CgooZnVuY3Rpb24gKCkgewogIHZhciByZWFjdEhvdExvYWRlciA9ICh0eXBlb2YgcmVhY3RIb3RMb2FkZXJHbG9iYWwgIT09ICd1bmRlZmluZWQnID8gcmVhY3RIb3RMb2FkZXJHbG9iYWwgOiByZXF1aXJlKCdyZWFjdC1ob3QtbG9hZGVyJykpLmRlZmF1bHQ7CgogIGlmICghcmVhY3RIb3RMb2FkZXIpIHsKICAgIHJldHVybjsKICB9CgogIHJlYWN0SG90TG9hZGVyLnJlZ2lzdGVyKG1ha2VTaG9ydGNvZGUsICJtYWtlU2hvcnRjb2RlIiwgIi9Vc2Vycy9kZW5uaXMub2tlZWZmZS9Qcm9qZWN0LUltcG9zdGVyL2RldmVsb3Blci1ub3Rlcy9tYW51YWwvQ1NTL1JTQ1NTLUNvZGUtR3VpZGUubWQiKTsKICByZWFjdEhvdExvYWRlci5yZWdpc3RlcihsYXlvdXRQcm9wcywgImxheW91dFByb3BzIiwgIi9Vc2Vycy9kZW5uaXMub2tlZWZmZS9Qcm9qZWN0LUltcG9zdGVyL2RldmVsb3Blci1ub3Rlcy9tYW51YWwvQ1NTL1JTQ1NTLUNvZGUtR3VpZGUubWQiKTsKICByZWFjdEhvdExvYWRlci5yZWdpc3RlcihNRFhMYXlvdXQsICJNRFhMYXlvdXQiLCAiL1VzZXJzL2Rlbm5pcy5va2VlZmZlL1Byb2plY3QtSW1wb3N0ZXIvZGV2ZWxvcGVyLW5vdGVzL21hbnVhbC9DU1MvUlNDU1MtQ29kZS1HdWlkZS5tZCIpOwogIHJlYWN0SG90TG9hZGVyLnJlZ2lzdGVyKE1EWENvbnRlbnQsICJNRFhDb250ZW50IiwgIi9Vc2Vycy9kZW5uaXMub2tlZWZmZS9Qcm9qZWN0LUltcG9zdGVyL2RldmVsb3Blci1ub3Rlcy9tYW51YWwvQ1NTL1JTQ1NTLUNvZGUtR3VpZGUubWQiKTsKfSkoKTsKCjsKCihmdW5jdGlvbiAoKSB7CiAgdmFyIGxlYXZlTW9kdWxlID0gKHR5cGVvZiByZWFjdEhvdExvYWRlckdsb2JhbCAhPT0gJ3VuZGVmaW5lZCcgPyByZWFjdEhvdExvYWRlckdsb2JhbCA6IHJlcXVpcmUoJ3JlYWN0LWhvdC1sb2FkZXInKSkubGVhdmVNb2R1bGU7CiAgbGVhdmVNb2R1bGUgJiYgbGVhdmVNb2R1bGUobW9kdWxlKTsKfSkoKTs="},{"version":3,"sources":["/Users/dennis.okeeffe/Project-Imposter/developer-notes/manual/CSS/RSCSS-Code-Guide.md"],"names":["React","mdx","makeShortcode","name","MDXDefaultShortcode","props","console","warn","layoutProps","MDXLayout","MDXContent","components","isMDXComponent"],"mappings":"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","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"rscss-cheat-sheet\"\n    }}>{`RSCSS CHEAT SHEET`}</h1>\n    {\n      /* TOC */\n    }\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"#rscss-cheat-sheet\"\n        }}>{`RSCSS CHEAT SHEET`}</a><ul parentName=\"li\">\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#rscss-1-naming-components\"\n            }}>{`RSCSS-1: Naming Components`}</a></li>\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#rscss-2-naming-elements\"\n            }}>{`RSCSS-2: Naming Elements`}</a></li>\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#rscss-3-element-selectors\"\n            }}>{`RSCSS-3: Element Selectors`}</a></li>\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#rscss-4-multiple-words\"\n            }}>{`RSCSS-4: Multiple Words`}</a></li>\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#rscss-5-avoid-tag-selectors\"\n            }}>{`RSCSS-5: Avoid Tag Selectors`}</a></li>\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#rscss-6-variants\"\n            }}>{`RSCSS-6: Variants`}</a></li>\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#rscss-7-naming-variants\"\n            }}>{`RSCSS-7: Naming Variants`}</a></li>\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#rscss-8-element-variants\"\n            }}>{`RSCSS-8: Element Variants`}</a></li>\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#rscss-9-nested-components\"\n            }}>{`RSCSS-9: Nested Components`}</a></li>\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#rscss-10-simplifying-nested-components\"\n            }}>{`RSCSS-10: Simplifying Nested Components`}</a></li>\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#rscss-11-layouts\"\n            }}>{`RSCSS-11: Layouts`}</a></li>\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#rscss-12-avoid-positioning-properties\"\n            }}>{`RSCSS-12: Avoid positioning properties`}</a></li>\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#rscss-13-fixed-dimensions\"\n            }}>{`RSCSS-13: Fixed Dimensions`}</a></li>\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#rscss-14-define-position-in-parents\"\n            }}>{`RSCSS-14: Define Position in Parents`}</a></li>\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#rscss-15-helpers\"\n            }}>{`RSCSS-15: Helpers`}</a></li>\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#rscss-16-naming-helpers\"\n            }}>{`RSCSS-16: Naming Helpers`}</a></li>\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#rscss-17-organising-helpers\"\n            }}>{`RSCSS-17: Organising Helpers`}</a></li>\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#rscss-18-css-structure\"\n            }}>{`RSCSS-18: CSS Structure`}</a></li>\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#rscss-19-one-component-per-file\"\n            }}>{`RSCSS-19: One Component Per File`}</a></li>\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#rscss-20-avoid-overnesting\"\n            }}>{`RSCSS-20: Avoid Overnesting`}</a></li>\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#rscss-21-pitfalls\"\n            }}>{`RSCSS-21: Pitfalls`}</a></li>\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#rscss-22-bleeding-through-nested-components\"\n            }}>{`RSCSS-22: Bleeding Through Nested Components`}</a></li>\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#rscss-23-apprehensions\"\n            }}>{`RSCSS-23: Apprehensions`}</a></li>\n        </ul></li>\n    </ul>\n    {\n      /* /TOC */\n    }\n    <h2 {...{\n      \"id\": \"rscss-1-naming-components\"\n    }}>{`RSCSS-1: Naming Components`}</h2>\n    <p>{`Components will be named with at least two words, separated by a dash. Examples of components:`}</p>\n    <p>{`A like button (.like-button)\nA search form (.search-form)\nA news article card (.article-card)`}</p>\n    <h2 {...{\n      \"id\": \"rscss-2-naming-elements\"\n    }}>{`RSCSS-2: Naming Elements`}</h2>\n    <p>{`Each component may have elements. They should have classes that are only one word.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-css\"\n      }}>{`.search-form {\n    > .field {\n        /* ... */\n    }\n    > .action {\n        /* ... */\n    }\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"rscss-3-element-selectors\"\n    }}>{`RSCSS-3: Element Selectors`}</h2>\n    <p>{`Prefer to use the > child selector whenever possible. This prevents bleeding through nested components, and performs better than descendant selectors.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-css\"\n      }}>{`.article-card {\n    .title {\n        /* okay */\n    }\n    > .author {\n        /* ✓ better */\n    }\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"rscss-4-multiple-words\"\n    }}>{`RSCSS-4: Multiple Words`}</h2>\n    <p>{`For those that need two or more words, concatenate them without dashes or underscores.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-css\"\n      }}>{`.profile-box {\n    > .firstname {\n        /* ... */\n    }\n    > .lastname {\n        /* ... */\n    }\n    > .avatar {\n        /* ... */\n    }\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"rscss-5-avoid-tag-selectors\"\n    }}>{`RSCSS-5: Avoid Tag Selectors`}</h2>\n    <p>{`Use classnames whenever possible. Tag selectors are fine, but they may come at a small performance penalty and may not be as descriptive.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-css\"\n      }}>{`.article-card {\n    > h3 {\n        /* ✗ avoid */\n    }\n    > .name {\n        /* ✓ better */\n    }\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"rscss-6-variants\"\n    }}>{`RSCSS-6: Variants`}</h2>\n    <p>{`Components may have variants. Elements may have variants, too.`}</p>\n    <p>{`eg.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-css\"\n      }}>{`.search-form\n.search-form .-prefixed\n.search-form .-compact\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"rscss-7-naming-variants\"\n    }}>{`RSCSS-7: Naming Variants`}</h2>\n    <p>{`Classnames for variants will be prefixed by a dash (-).`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`.like-button {\n  &.-wide { /* ... */ }\n  &.-short { /* ... */ }\n  &.-disabled { /* ... */ }\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"rscss-8-element-variants\"\n    }}>{`RSCSS-8: Element Variants`}</h2>\n    <p>{`Elements may also have variants.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-css\"\n      }}>{`.shopping-card {\n    > .title {\n        /* ... */\n    }\n    > .title.-small {\n        /* ... */\n    }\n}\n`}</code></pre>\n    <p>{`Dash prefixes`}</p>\n    <p>{`Dashes are the preferred prefix for variants.`}</p>\n    <p>{`It prevents ambiguity with elements.\nA CSS class can only start with a letter, `}{`_`}{` or -.\nDashes are easier to type than underscores.\nIt kind of resembles switches in UNIX commands (gcc -O2 -Wall -emit-last).`}</p>\n    <h2 {...{\n      \"id\": \"rscss-9-nested-components\"\n    }}>{`RSCSS-9: Nested Components`}</h2>\n    <p>{`Sometimes it's necessary to nest components. Here are some guidelines for doing that.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-html\"\n      }}>{`<div class='article-link'>\n  <div class='vote-box'>\n    ...\n  </div>\n  <h3 class='title'>...</h3>\n  <p class='meta'>...</p>\n</div>\n`}</code></pre>\n    <p>{`A component may need to appear a certain way when nested in another component. Avoid modifying the nested component by reaching into it from the containing component.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-css\"\n      }}>{`.article-header {\n    > .vote-box > .up {\n        /* ✗ avoid this */\n    }\n}\n`}</code></pre>\n    <p>{`Instead, prefer to add a variant to the nested component and apply it from the containing component.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-html\"\n      }}>{`<div class='article-header'>\n  <div class='vote-box -highlight'>\n    ...\n  </div>\n  ...\n</div>\n`}</code></pre>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-css\"\n      }}>{`.vote-box {\n    &.-highlight > .up {\n        /* ... */\n    }\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"rscss-10-simplifying-nested-components\"\n    }}>{`RSCSS-10: Simplifying Nested Components`}</h2>\n    <p>{`Sometimes, when nesting components, your markup can get dirty:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-html\"\n      }}>{`<div class='search-form'>\n  <input class='input' type='text'>\n  <button class='search-button -red -large'></button>\n</div>\nYou can simplify this by using your CSS preprocessor's @extend mechanism:\n\n<div class='search-form'>\n  <input class='input' type='text'>\n  <button class='submit'></button>\n</div>\n`}</code></pre>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-css\"\n      }}>{`.search-form {\n    > .submit {\n        @extend .search-button;\n        @extend .search-button.-red;\n        @extend .search-button.-large;\n    }\n}\n`}</code></pre>\n    <hr></hr>\n    <h2 {...{\n      \"id\": \"rscss-11-layouts\"\n    }}>{`RSCSS-11: Layouts`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-html\"\n      }}>{`<div class=\"recipe-item\">\n    <div class=\"recipe-list\">\n    </div>\n</div>\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"rscss-12-avoid-positioning-properties\"\n    }}>{`RSCSS-12: Avoid positioning properties`}</h2>\n    <p>{`Components should be made in a way that they're reusable in different contexts. Avoid putting these properties in components:`}</p>\n    <p>{`Positioning (position, top, left, right, bottom)\nFloats (float, clear)\nMargins (margin)\nDimensions (width, height) `}{`*`}</p>\n    <h2 {...{\n      \"id\": \"rscss-13-fixed-dimensions\"\n    }}>{`RSCSS-13: Fixed Dimensions`}</h2>\n    <p>{`Exception to these would be elements that have fixed width/heights, such as avatars and logos.`}</p>\n    <h2 {...{\n      \"id\": \"rscss-14-define-position-in-parents\"\n    }}>{`RSCSS-14: Define Position in Parents`}</h2>\n    <p>{`If you need to define these, try to define them in whatever context they will be in. In this example below, notice that the widths and floats are applied on the list component, not the component itself.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-css\"\n      }}>{`.article-list {\n    & {\n        @include clearfix;\n    }\n\n    > .article-card {\n        width: 33.3%;\n        float: left;\n    }\n}\n\n.article-card {\n    & {\n        /* ... */\n    }\n    > .image {\n        /* ... */\n    }\n    > .title {\n        /* ... */\n    }\n    > .category {\n        /* ... */\n    }\n}\n`}</code></pre>\n    <hr></hr>\n    <h2 {...{\n      \"id\": \"rscss-15-helpers\"\n    }}>{`RSCSS-15: Helpers`}</h2>\n    <p>{`For general-purpose classes meant to override values, put them in a separate file and name them beginning with an underscore. They are typically things that are tagged with !important. Use them very sparingly.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-css\"\n      }}>{`._unmargin {\n    margin: 0 !important;\n}\n._center {\n    text-align: center !important;\n}\n._pull-left {\n    float: left !important;\n}\n._pull-right {\n    float: right !important;\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"rscss-16-naming-helpers\"\n    }}>{`RSCSS-16: Naming Helpers`}</h2>\n    <p>{`Prefix classnames with an underscore. This will make it easy to differentiate them from modifiers defined in the component. Underscores also look a bit ugly which is an intentional side effect: using too many helpers should be discouraged.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-html\"\n      }}>{`<div class='order-graphs -slim _unmargin'>\n</div>\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"rscss-17-organising-helpers\"\n    }}>{`RSCSS-17: Organising Helpers`}</h2>\n    <p>{`Place all helpers in one file called helpers. While you can separate them into multiple files, it's very preferrable to keep your number of helpers to a minimum.`}</p>\n    <hr></hr>\n    <h2 {...{\n      \"id\": \"rscss-18-css-structure\"\n    }}>{`RSCSS-18: CSS Structure`}</h2>\n    <h2 {...{\n      \"id\": \"rscss-19-one-component-per-file\"\n    }}>{`RSCSS-19: One Component Per File`}</h2>\n    <p>{`For each component, place them in their own file.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-css\"\n      }}>{`/* css/components/search-form.scss */\n.search-form {\n    > .button {\n        /* ... */\n    }\n    > .field {\n        /* ... */\n    }\n    > .label {\n        /* ... */\n    }\n\n    // variants\n    &.-small {\n        /* ... */\n    }\n    &.-wide {\n        /* ... */\n    }\n}\n`}</code></pre>\n    <p>{`Use glob matching`}</p>\n    <p>{`In sass-rails and stylus, this makes including all of them easy:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-css\"\n      }}>{`@import 'components/*';\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"rscss-20-avoid-overnesting\"\n    }}>{`RSCSS-20: Avoid Overnesting`}</h2>\n    <p>{`Use no more than 1 level of nesting. It's easy to get lost with too much nesting.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-css\"\n      }}>{`/* ✗ Avoid: 3 levels of nesting */\n.image-frame {\n    > .description {\n        /* ... */\n\n        > .icon {\n            /* ... */\n        }\n    }\n}\n\n/* ✓ Better: 2 levels */\n.image-frame {\n    > .description {\n        /* ... */\n    }\n    > .description > .icon {\n        /* ... */\n    }\n}\n`}</code></pre>\n    <hr></hr>\n    <h2 {...{\n      \"id\": \"rscss-21-pitfalls\"\n    }}>{`RSCSS-21: Pitfalls`}</h2>\n    <h2 {...{\n      \"id\": \"rscss-22-bleeding-through-nested-components\"\n    }}>{`RSCSS-22: Bleeding Through Nested Components`}</h2>\n    <p>{`Be careful about nested components with elements sharing the same name as elements in its container.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-html\"\n      }}>{`<article class='article-link'>\n <div class='vote-box'>\n    <button class='up'></button>\n    <button class='down'></button>\n    <span class='count'>4</span>\n  </div>\n\n  <h3 class='title'>Article title</h3>\n  <p class='count'>3 votes</p>\n</article>\n`}</code></pre>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-css\"\n      }}>{`.article-link {\n    > .title {\n        /* ... */\n    }\n    > .count {\n        /* ... (!!!) */\n    }\n}\n\n.vote-box {\n    > .up {\n        /* ... */\n    }\n    > .down {\n        /* ... */\n    }\n    > .count {\n        /* ... */\n    }\n}\n`}</code></pre>\n    <p>{`In this case, if .article-link > .count did not have the > (child) selector, it will also apply to the .vote-box .count element. This is one of the reasons why child selectors are preferred.`}</p>\n    <hr></hr>\n    <h2 {...{\n      \"id\": \"rscss-23-apprehensions\"\n    }}>{`RSCSS-23: Apprehensions`}</h2>\n    <p>{`Some people may have apprehensions to these conventions, such as:`}</p>\n    <p>{`\"But dashes suck\"`}</p>\n    <p>{`You're free to omit them and just use regular words, but keep the rest of the ideas in place (components, elements, variants).`}</p>\n    <p>{`\"But I can't think of 2 words!\"`}</p>\n    <p>{`Some components will only need one word to express their purpose, such as alert. In these cases, consider that using some suffixes will make it clearer that it's a block-level element:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-css\"\n      }}>{`.alert-box.alert-card .alert-block Or for inlines: .link-button .link-span;\n`}</code></pre>\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  "]}]}