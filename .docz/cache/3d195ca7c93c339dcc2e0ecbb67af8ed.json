{"remainingRequest":"/Users/okeeffe_d/Business/Documentation/node_modules/babel-loader/lib/index.js?{\"presets\":[[\"/Users/okeeffe_d/Business/Documentation/node_modules/babel-preset-docz/dist/index.js\",{\"flow\":true,\"typescript\":false,\"parseProps\":true}]],\"plugins\":[[\"/Users/okeeffe_d/Business/Documentation/node_modules/docz-utils/lib/named-asset-import.js\",{\"loaderMap\":{\"svg\":{\"ReactComponent\":\"@svgr/webpack?-prettier,-svgo![path]\"}}}]],\"babelrc\":false,\"cacheCompression\":true,\"compact\":true}!/Users/okeeffe_d/Business/Documentation/manual/Python/Python-Slack-Bot.md","dependencies":[{"path":"/Users/okeeffe_d/Business/Documentation/manual/Python/Python-Slack-Bot.md","mtime":1548209344420},{"path":"/Users/okeeffe_d/Business/Documentation/node_modules/cache-loader/dist/cjs.js","mtime":1548134640245},{"path":"/Users/okeeffe_d/Business/Documentation/node_modules/babel-loader/lib/index.js","mtime":1548134640227}],"contextDependencies":[],"result":["function _typeof(obj){if(typeof Symbol===\"function\"&&typeof Symbol.iterator===\"symbol\"){_typeof=function _typeof(obj){return typeof obj;};}else{_typeof=function _typeof(obj){return obj&&typeof Symbol===\"function\"&&obj.constructor===Symbol&&obj!==Symbol.prototype?\"symbol\":typeof obj;};}return _typeof(obj);}function _objectWithoutProperties(source,excluded){if(source==null)return{};var target=_objectWithoutPropertiesLoose(source,excluded);var key,i;if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++){key=sourceSymbolKeys[i];if(excluded.indexOf(key)>=0)continue;if(!Object.prototype.propertyIsEnumerable.call(source,key))continue;target[key]=source[key];}}return target;}function _objectWithoutPropertiesLoose(source,excluded){if(source==null)return{};var target={};var sourceKeys=Object.keys(source);var key,i;for(i=0;i<sourceKeys.length;i++){key=sourceKeys[i];if(excluded.indexOf(key)>=0)continue;target[key]=source[key];}return target;}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\");}}function _defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}function _createClass(Constructor,protoProps,staticProps){if(protoProps)_defineProperties(Constructor.prototype,protoProps);if(staticProps)_defineProperties(Constructor,staticProps);return Constructor;}function _possibleConstructorReturn(self,call){if(call&&(_typeof(call)===\"object\"||typeof call===\"function\")){return call;}return _assertThisInitialized(self);}function _assertThisInitialized(self){if(self===void 0){throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");}return self;}function _getPrototypeOf(o){_getPrototypeOf=Object.setPrototypeOf?Object.getPrototypeOf:function _getPrototypeOf(o){return o.__proto__||Object.getPrototypeOf(o);};return _getPrototypeOf(o);}function _inherits(subClass,superClass){if(typeof superClass!==\"function\"&&superClass!==null){throw new TypeError(\"Super expression must either be null or a function\");}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,writable:true,configurable:true}});if(superClass)_setPrototypeOf(subClass,superClass);}function _setPrototypeOf(o,p){_setPrototypeOf=Object.setPrototypeOf||function _setPrototypeOf(o,p){o.__proto__=p;return o;};return _setPrototypeOf(o,p);}import React from'react';import{MDXTag}from'@mdx-js/tag';var MDXContent=/*#__PURE__*/function(_React$Component){_inherits(MDXContent,_React$Component);function MDXContent(props){var _this;_classCallCheck(this,MDXContent);_this=_possibleConstructorReturn(this,_getPrototypeOf(MDXContent).call(this,props));_this.layout=null;return _this;}_createClass(MDXContent,[{key:\"render\",value:function render(){var _this$props=this.props,components=_this$props.components,props=_objectWithoutProperties(_this$props,[\"components\"]);return React.createElement(MDXTag,{name:\"wrapper\",components:components},React.createElement(\"div\",{id:\"section\"}),React.createElement(MDXTag,{name:\"hr\",components:components}),React.createElement(MDXTag,{name:\"h2\",components:components,props:{\"id\":\"intro\"}},\"Intro\"),React.createElement(MDXTag,{name:\"p\",components:components},\"First of all, clone the \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"python_rtmbot\"),\" git repo.\"),React.createElement(MDXTag,{name:\"p\",components:components},\"Then, head to slack.com for your personal account, click \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"build\"),\" from the apps page and add a custom bot.\"),React.createElement(MDXTag,{name:\"p\",components:components},\"Grab the API token and copy it into a \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"rtmbot.conf\"),\" file at the root of your directory.\"),React.createElement(\"div\",{id:\"subsection\"}),React.createElement(MDXTag,{name:\"h3\",components:components,props:{\"id\":\"-----creating-plugins\"}},\"---- Creating plugins\"),React.createElement(MDXTag,{name:\"p\",components:components},\"In the \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"plugins\"),\" folder, create a folder with the name of the plugin and then within the \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"plugin.py\"),\" itself. Inside, you want to ensure you have a \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"outputs = []\"),\" and \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"crontable = []\"),\" list ready to go.\"),React.createElement(MDXTag,{name:\"p\",components:components},\"From here, you can define processes as so: \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"def process_namehere(data):\"),\".\"),React.createElement(MDXTag,{name:\"p\",components:components},\"The data argument is the data recieved by the bot.\"),React.createElement(\"div\",{id:\"banana\"}),React.createElement(MDXTag,{name:\"h3\",components:components,props:{\"id\":\"-----banana-plugin\"}},\"---- Banana Plugin\"),React.createElement(MDXTag,{name:\"p\",components:components},\"In the \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"plugins\"),\" directory, create \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"banana.py\")),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{\"className\":\"language-python\"}},\"import random\\n\\nfrom nltk.tokenize import sent_tokenizem wordpunct_tokenize\\nfrom noun_hound import NounHound\\n\\ncrontable = []\\noutputs = []\\n\\nnh = NounHound()\\n\\ndef process_message(data):\\n        messaage = data['text']\\n        sentences = sent_tokenize(message)\\n        sentences_num = random.randint(0, len(sentences) - 1)\\n        setence = sentences[stence_num]\\n        words = wordpunct_tokenize(sentence)\\n        nouns = nh.process(sentence)\\n        replacement = random.choice(nouns['nouns'])\\n        words[words.index(replacement) = 'banana']\\n        sentences[sentence_num] = ' '.join(words)\\n        outputs.append([data[\\\"channel\\\"], ' '.join(sentences)])\\n\")));}}]);return MDXContent;}(React.Component);export{MDXContent as default};MDXContent.__docgenInfo={\"description\":\"\",\"methods\":[],\"displayName\":\"MDXContent\"};",{"version":3,"sources":["/Users/okeeffe_d/Business/Documentation/manual/Python/Python-Slack-Bot.md"],"names":["React","MDXTag","MDXContent","props","layout","components","Component"],"mappings":"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","sourcesContent":["\n  import React from 'react'\n  import { MDXTag } from '@mdx-js/tag'\n  \n\nexport default class MDXContent extends React.Component {\n  constructor(props) {\n    super(props)\n    this.layout = null\n  }\n  render() {\n    const { components, ...props } = this.props\n\n    return <MDXTag\n             name=\"wrapper\"\n             \n             components={components}><div id=\"section\"></div>\n<MDXTag name=\"hr\" components={components}></MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"intro\"}}>{`Intro`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`First of all, clone the `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`python_rtmbot`}</MDXTag>{` git repo.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Then, head to slack.com for your personal account, click `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`build`}</MDXTag>{` from the apps page and add a custom bot.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Grab the API token and copy it into a `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`rtmbot.conf`}</MDXTag>{` file at the root of your directory.`}</MDXTag>\n<div id=\"subsection\"></div>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"-----creating-plugins\"}}>{`---- Creating plugins`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`In the `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`plugins`}</MDXTag>{` folder, create a folder with the name of the plugin and then within the `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`plugin.py`}</MDXTag>{` itself. Inside, you want to ensure you have a `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`outputs = []`}</MDXTag>{` and `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`crontable = []`}</MDXTag>{` list ready to go.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`From here, you can define processes as so: `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`def process_namehere(data):`}</MDXTag>{`.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`The data argument is the data recieved by the bot.`}</MDXTag>\n<div id=\"banana\"></div>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"-----banana-plugin\"}}>{`---- Banana Plugin`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`In the `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`plugins`}</MDXTag>{` directory, create `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`banana.py`}</MDXTag></MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-python\"}}>{`import random\n\nfrom nltk.tokenize import sent_tokenizem wordpunct_tokenize\nfrom noun_hound import NounHound\n\ncrontable = []\noutputs = []\n\nnh = NounHound()\n\ndef process_message(data):\n        messaage = data['text']\n        sentences = sent_tokenize(message)\n        sentences_num = random.randint(0, len(sentences) - 1)\n        setence = sentences[stence_num]\n        words = wordpunct_tokenize(sentence)\n        nouns = nh.process(sentence)\n        replacement = random.choice(nouns['nouns'])\n        words[words.index(replacement) = 'banana']\n        sentences[sentence_num] = ' '.join(words)\n        outputs.append([data[\"channel\"], ' '.join(sentences)])\n`}</MDXTag></MDXTag>\n           </MDXTag>\n  }\n}\n  "]}]}