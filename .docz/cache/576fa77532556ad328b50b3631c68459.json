{"remainingRequest":"/Users/okeeffe_d/Project-Imposter/developer-notes/node_modules/docz-core/node_modules/babel-loader/lib/index.js??ref--6-1!/Users/okeeffe_d/Project-Imposter/developer-notes/node_modules/@mdx-js/loader/index.js??ref--6-2!/Users/okeeffe_d/Project-Imposter/developer-notes/node_modules/source-map-loader/index.js!/Users/okeeffe_d/Project-Imposter/developer-notes/manual/COMP3520-OS/3-Threads.md","dependencies":[{"path":"/Users/okeeffe_d/Project-Imposter/developer-notes/manual/COMP3520-OS/3-Threads.md","mtime":1548282824983},{"path":"/Users/okeeffe_d/Project-Imposter/developer-notes/node_modules/cache-loader/dist/cjs.js","mtime":1561535530324},{"path":"/Users/okeeffe_d/Project-Imposter/developer-notes/node_modules/docz-core/node_modules/babel-loader/lib/index.js","mtime":1560300163820},{"path":"/Users/okeeffe_d/Project-Imposter/developer-notes/node_modules/@mdx-js/loader/index.js","mtime":1561535530532},{"path":"/Users/okeeffe_d/Project-Imposter/developer-notes/node_modules/source-map-loader/index.js","mtime":1548285283521}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9vYmplY3RXaXRob3V0UHJvcGVydGllcyBmcm9tIi9Vc2Vycy9va2VlZmZlX2QvUHJvamVjdC1JbXBvc3Rlci9kZXZlbG9wZXItbm90ZXMvbm9kZV9tb2R1bGVzL2JhYmVsLXByZXNldC1yZWFjdC1hcHAvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzIjsvKiBAanN4IG1keCAqL2ltcG9ydCBSZWFjdCBmcm9tJ3JlYWN0JztpbXBvcnR7bWR4fWZyb20nQG1keC1qcy9yZWFjdCc7LyogQGpzeCBtZHggKi92YXIgbWFrZVNob3J0Y29kZT1mdW5jdGlvbiBtYWtlU2hvcnRjb2RlKG5hbWUpe3JldHVybiBmdW5jdGlvbiBNRFhEZWZhdWx0U2hvcnRjb2RlKHByb3BzKXtjb25zb2xlLndhcm4oIkNvbXBvbmVudCAiK25hbWUrIiB3YXMgbm90IGltcG9ydGVkLCBleHBvcnRlZCwgb3IgcHJvdmlkZWQgYnkgTURYUHJvdmlkZXIgYXMgZ2xvYmFsIHNjb3BlIik7cmV0dXJuIG1keCgiZGl2Iixwcm9wcyk7fTt9O3ZhciBsYXlvdXRQcm9wcz17fTt2YXIgTURYTGF5b3V0PSJ3cmFwcGVyIjtleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBNRFhDb250ZW50KF9yZWYpe3ZhciBjb21wb25lbnRzPV9yZWYuY29tcG9uZW50cyxwcm9wcz1fb2JqZWN0V2l0aG91dFByb3BlcnRpZXMoX3JlZixbImNvbXBvbmVudHMiXSk7cmV0dXJuIG1keChNRFhMYXlvdXQsT2JqZWN0LmFzc2lnbih7fSxsYXlvdXRQcm9wcyxwcm9wcyx7Y29tcG9uZW50czpjb21wb25lbnRzLG1keFR5cGU6Ik1EWExheW91dCJ9KSxtZHgoImgxIix7ImlkIjoid2Vlay0zLS0tdGhyZWFkcyJ9LCJXZWVrIDMgLSBUaHJlYWRzIiksbWR4KCJoMiIseyJpZCI6InByb2Nlc3Nlcy1hbmQtdGhyZWFkcyJ9LCJQcm9jZXNzZXMgYW5kIFRocmVhZHMiKSxtZHgoInAiLG51bGwsIlByb2Nlc3NlcyBoYXZlIHR3byBjaGFyYWN0ZXJpc3RpY3M6IiksbWR4KCJvbCIsbnVsbCxtZHgoImxpIix7cGFyZW50TmFtZToib2wifSwiUmVzb3VyY2UgT3duZXJzaGlwICIsbWR4KCJ1bCIse3BhcmVudE5hbWU6ImxpIn0sbWR4KCJsaSIse3BhcmVudE5hbWU6InVsIn0sInByb2Nlc3MgaW5jbHVkZXMgYSB2aXJ0dWFsIGFkZHJlc3Mgc3BhY2UgdG8gaG9sZCB0aGUgcHJvY2VzcyBpbWFnZSAiKSxtZHgoImxpIix7cGFyZW50TmFtZToidWwifSwidGhlIE9TIHBlcmZvcm1zIGEgcHJvdGVjdGlvbiBmdW5jdGlvbiB0byBwcmV2ZW50IHVud2FudGVkIGludGVyZmVyZW5jZSBiZXR3ZWVuIHByb2Nlc3NlcyB3aXRoIHJlc3BlY3QgdG8gcmVzb3VyY2VzIikpKSxtZHgoImxpIix7cGFyZW50TmFtZToib2wifSwiU2NoZWR1bGluZy9FeGVjdXRpb24iLG1keCgidWwiLHtwYXJlbnROYW1lOiJsaSJ9LG1keCgibGkiLHtwYXJlbnROYW1lOiJ1bCJ9LCJmb2xsb3dzIGFuIGV4ZWN1dGlvbiBwYXRoIHRoYXQgbWF5IGJlIGludGVybGVhdmVkIHdpdGggb3RoZXIgcHJvY2Vzc2VzICIpLG1keCgibGkiLHtwYXJlbnROYW1lOiJ1bCJ9LCJhIHByb2Nlc3MgaGFzIGFuIGV4ZWN1dGlvbiBzdGF0ZSAoUnVubmluZywgUmVhZHksIGV0Yy4pIGFuZCBhIGRpc3BhdGNoaW5nIHByaW9yaXR5IGFuZCBpcyBzY2hlZHVsZWQgYW5kIGRpc3BhdGNoZWQgYnkgdGhlIE9TIikpKSksbWR4KCJwIixudWxsLCJUaGVzZSB0d28gY2hhcmFjdGVyaXN0aWNzIGFyZSB0cmVhdGVkIGluZGVwZW5kZW50bHkgYnkgbW9kZXJuIG9wZXJhdGluZyBzeXN0ZW1zOlxuLSB0aGUgdW5pdCBvZiBkaXNwYXRjaGluZyBpcyByZWZlcnJlZCB0byBhcyBhICIsbWR4KCJpbmxpbmVDb2RlIix7cGFyZW50TmFtZToicCJ9LCJ0aHJlYWQiKSwiIG9yIGxpZ2h0d2VpZ2h0IHByb2Nlc3Ncbi0gdGhlIHVuaXQgb2YgcmVzb3VyY2Ugb3duZXJzaGlwIGlzIHJlZmVycmVkIHRvIGFzIGEgIixtZHgoImlubGluZUNvZGUiLHtwYXJlbnROYW1lOiJwIn0sInByb2Nlc3MiKSwiIG9yICIsbWR4KCJpbmxpbmVDb2RlIix7cGFyZW50TmFtZToicCJ9LCJ0YXNrIikpLG1keCgiaDIiLHsiaWQiOiJtdWx0aXRocmVhZGluZyJ9LCJNdWx0aXRocmVhZGluZyIpLG1keCgicCIsbnVsbCwiVGhlIGFiaWxpdHkgb2YgYW4gT1MgdG8gc3VwcG9ydCBtdWx0aXBsZSwgY29uY3VycmVjdCBwYXRocyBvZiBleGVjdXRpb24gd2l0aGluIGEgc2luZ2xlIHByb2Nlc3MiKSxtZHgoImgyIix7ImlkIjoicHJvY2VzcyJ9LCJQcm9jZXNzIiksbWR4KCJwIixudWxsLCJUaGUgdW5pdCBvZiByZXNvdXJjZSBhbGxvY2F0aW9uIGFuZCBhIHVuaXQgb2YgcHJvdGVjdGlvbi4iKSxtZHgoInAiLG51bGwsIkEgcHJvY2VzcyBpcyBhc3NvY2lhdGVkIHdpdGg6ICIpLG1keCgidWwiLG51bGwsbWR4KCJsaSIse3BhcmVudE5hbWU6InVsIn0sIkEgdmlydHVhbCBhZGRyZXNzIHNwYWNlIHdoaWNoIGhvbGRzIHRoZSBwcm9jZXNzIGltYWdlICIpLG1keCgibGkiLHtwYXJlbnROYW1lOiJ1bCJ9LCJQcm90ZWN0ZWQgYWNjZXNzIHRvXG4tIFByb2Nlc3NvcnNcbi0gT3RoZXIgcHJvY2Vzc2VzXG4tIEZpbGVzXG4tIEkvTyByZXNvdXJjZXMgIikpLG1keCgiaDIiLHsiaWQiOiJtdWx0aXBsZS10aHJlYWRzLWluLXByb2Nlc3MifSwiTXVsdGlwbGUgdGhyZWFkcyBpbiBQcm9jZXNzIiksbWR4KCJwIixudWxsLCJFYWNoIHRocmVhZCBoYXM6IiksbWR4KCJ1bCIsbnVsbCxtZHgoImxpIix7cGFyZW50TmFtZToidWwifSwiQWNjZXNzIHRvIHRoZSBtZW1vcnkgYW5kIHJlc291cmNlcyBvZiBpdHMgcHJvY2VzcyAoYWxsIHRocmVhZHMgb2YgYSBwcm9jZXNzIHNoYXJlIHRoaXMpIiksbWR4KCJsaSIse3BhcmVudE5hbWU6InVsIn0sIkFuIGV4ZWN1dGlvbiBzdGF0ZSAocnVubmluZywgcmVhZHksIGV0Yy4pIiksbWR4KCJsaSIse3BhcmVudE5hbWU6InVsIn0sIlNhdmVkIHRocmVhZCBjb250ZXh0IHdoZW4gbm90IHJ1bm5pbmcgIiksbWR4KCJsaSIse3BhcmVudE5hbWU6InVsIn0sIkFuIGV4ZWN1dGlvbiBzdGFjayAiKSxtZHgoImxpIix7cGFyZW50TmFtZToidWwifSwiU29tZSBwZXItdGhyZWFkIHN0YXRpYyBzdG9yYWdlIGZvciBsb2NhbCB2YXJpYWJsZXMiKSksbWR4KCJoMiIseyJpZCI6InNpbmdsZS10aHJlYWRlZC12cy1tdWx0aS10aHJlYWRlZCJ9LCJTaW5nbGUtVGhyZWFkZWQgdnMgbXVsdGkgdGhyZWFkZWQiKSxtZHgoInVsIixudWxsLG1keCgibGkiLHtwYXJlbnROYW1lOiJ1bCJ9LCJCb3RoIGhhdmUgIixtZHgoImlubGluZUNvZGUiLHtwYXJlbnROYW1lOiJsaSJ9LCJQcm9jZXNzIENvbnRyb2wgQmxvY2siKSksbWR4KCJsaSIse3BhcmVudE5hbWU6InVsIn0sIkJvdGggaGF2ZSAiLG1keCgiaW5saW5lQ29kZSIse3BhcmVudE5hbWU6ImxpIn0sIlVzZXIgQWRkcmVzcyBTcGFjZSIpKSxtZHgoImxpIix7cGFyZW50TmFtZToidWwifSwiU2luZ2xlIHRocmVhZCBoYXMgYSAiLG1keCgiaW5saW5lQ29kZSIse3BhcmVudE5hbWU6ImxpIn0sIlVzZXIgU3RhY2siKSwiIGFuZCAiLG1keCgiaW5saW5lQ29kZSIse3BhcmVudE5hbWU6ImxpIn0sIktlcm5lbCBTdGFjayIpKSxtZHgoImxpIix7cGFyZW50TmFtZToidWwifSwiTXVsdGl0aHJlYWQgcHJvY2VzcyBoYXMgYSAiLG1keCgiaW5saW5lQ29kZSIse3BhcmVudE5hbWU6ImxpIn0sIlVzZXIgU3RhY2siKSwiLCAiLG1keCgiaW5saW5lQ29kZSIse3BhcmVudE5hbWU6ImxpIn0sIktlcm5lbCBTdGFjayIpLCIsICIsbWR4KCJpbmxpbmVDb2RlIix7cGFyZW50TmFtZToibGkifSwiVGhyZWFkIENvbnRyb2wgQmxvY2siKSwiIHdpdGhpbiBlYWNoIHRocmVhZCIpKSxtZHgoImgyIix7ImlkIjoidGhyZWFkcyJ9LCJUaHJlYWRzIiksbWR4KCJwIixudWxsLCJJbiBPUyB0aGF0IHN1cHBvcnRzIHRocmVhZHM6IHNjaGVkdWxpbmcgYW5kIGRpc3BhdGNoaW5nIGRvbmUgb24gdGhyZWFkIGJhc2lzICIpLG1keCgidWwiLG51bGwsbWR4KCJsaSIse3BhcmVudE5hbWU6InVsIn0sIk1vc3Qgb2YgdGhlIHN0YXRlIGluZm8gZGVhbGluZyB3aXRoIGV4ZWN1dGlvbiBpcyBtYWludGFpbmVkIGluIHRocmVhZC1sZXZlbCBkYXRhIHN0cnVjdHVyZXMgIiksbWR4KCJsaSIse3BhcmVudE5hbWU6InVsIn0sIlNldmVyYWwgYWN0aW9ucyB0aGF0IGFmZmVjdCBhbGwgb2YgdGhlIHRocmVhZHMgaW4gYSBwcm9jZXNzIGFuZCB0aGF0IHRoZSBPUyBtdXN0IG1hbmFnZSBhdCB0aGUgcHJvY2VzcyBsZXZlbFxuLSBTdXNwZW5kaW5nIHByb2Nlc3MgbWVhbnMgYWxsIHRocmVhZHMgb2YgYSBwcm9jZXNzXG4tIFRlcm1pbmF0ZXMgYSBwcm9jZXNzIHRlcm1pbmF0ZXMgYWxsIHRocmVhZHMgd2l0aGluIHRoZSBwcm9jZXNzICIpLG1keCgibGkiLHtwYXJlbnROYW1lOiJ1bCJ9LCJTaW1pbGFyIHRvIHByb2Nlc3NlcywgdGhyZWFkcyBoYXZlIGV4ZWN1dGlvbiBzdGF0ZXMgYW5kIG1heSBzeW5jaHJvbml6ZSB3aXRoIG9uZSBhbm90aGVyLiIpKSxtZHgoImgyIix7ImlkIjoidGhyZWFkLWV4ZWN1dGlvbi1zdGF0ZXMifSwiVGhyZWFkIEV4ZWN1dGlvbiBTdGF0ZXMiKSxtZHgoInAiLG51bGwsIlRocmVlIGJhc2ljIHN0YXRlcyIpLG1keCgib2wiLG51bGwsbWR4KCJsaSIse3BhcmVudE5hbWU6Im9sIn0sIlJ1bm5pbmcgIiksbWR4KCJsaSIse3BhcmVudE5hbWU6Im9sIn0sIlJlYWR5ICIpLG1keCgibGkiLHtwYXJlbnROYW1lOiJvbCJ9LCJCbG9ja2VkICIpKSxtZHgoInAiLG51bGwsIk9wZXJhdGlvbnMgYXNzb2NpYXRlZCB3aXRoIGEgY2hhbmdlIGluIHRocmVhZCBzdGF0ZSAiKSxtZHgoInVsIixudWxsLG1keCgibGkiLHtwYXJlbnROYW1lOiJ1bCJ9LCJTcGF3biAoYW5vdGhlciB0aHJlYWQpXG4tIGFsbG9jYXRlIHJlZ2lzdGVyIGNvbnRleHQgYW5kIHN0YWNrcyAiKSxtZHgoImxpIix7cGFyZW50TmFtZToidWwifSwiQmxvY2tcbi0gbW92ZSB0byBhbiBldmVudCBxdWV1ZSB3YWl0aW5nIGZvciB0aGUgZXZlbnRcbi0gaXNzdWU6IHdpbGwgYmxvY2tpbmcgYSB0aHJlYWQgYmxvY2sgb3RoZXIsIG9yIGFsbCwgdGhyZWFkcyB3aXRoaW4gdGhlIHNhbWUgcHJvY2Vzcz8iKSxtZHgoImxpIix7cGFyZW50TmFtZToidWwifSwiVW5ibG9ja1xuLSBtb3ZlZCB0aGUgdGhlICIsbWR4KCJpbmxpbmVDb2RlIix7cGFyZW50TmFtZToibGkifSwiUmVhZHkiKSwiIHF1ZXVlIGZvciBleGVjdXRpb24iKSxtZHgoImxpIix7cGFyZW50TmFtZToidWwifSwiRmluaXNoICh0aHJlYWQpXG4tIGRlLWFsbG9jYXRlIHJlZ2lzdGVyIGNvbnRleHQgYW5kIHN0YWNrcyAiKSksbWR4KCJoMiIseyJpZCI6InRocmVhZC1zeW5jaHJvbml6YXRpb24ifSwiVGhyZWFkIFN5bmNocm9uaXphdGlvbiIpLG1keCgicCIsbnVsbCwiTmVjZXNzaXR5IHRvIHN5bmMgYWN0aXZpdGllcyBvZiBhbGwgdGhyZWFkcyBhbmQgcHJldmVudCBpbnRlcmZlcmVuY2UgYmV0d2VlbiBlYWNoIG90aGVyLiIpLG1keCgidWwiLG51bGwsbWR4KCJsaSIse3BhcmVudE5hbWU6InVsIn0sImFsbCB0aHJlYWRzIG9mIGEgcHJvY2VzcyBzaGFyZSB0aGUgc2FtZSBhZGRyZXNzIHNwYWNlIGFuZCBvdGhlciByZXNvdXJjZXMgIiksbWR4KCJsaSIse3BhcmVudE5hbWU6InVsIn0sImFueSBhbHRlcmF0aW9uIG9mIGEgcmVzb3VyY2UgYnkgb25lIHRocmVhZCBhZmZlY3RzIHRoZSBvdGhlciB0aHJlYWRzIGluIHRoZSBzYW1lIHByb2Nlc3MgIikpLG1keCgicCIsbnVsbCwiSW4gZ2VuZXJhbCwgdGhlIHRlY2huaXF1ZXMgdXNlZCBmb3IgdGhyZWFkIHN5bmMgYXJlIHRoZSBzYW1lIGFzIHRob3NlIGZvciBwcm9jZXNzIHN5bmMuIiksbWR4KCJoMiIseyJpZCI6InR5cGVzLW9mLXRocmVhZHMifSwiVHlwZXMgb2YgVGhyZWFkcyIpLG1keCgib2wiLG51bGwsbWR4KCJsaSIse3BhcmVudE5hbWU6Im9sIn0sIlVzZXIgTGV2ZWwgVGhyZWFkIChVTFQpIiksbWR4KCJsaSIse3BhcmVudE5hbWU6Im9sIn0sIktlcm5lbCBMZXZlbCBUaHJlYWQgKEtMVCkgIixtZHgoInVsIix7cGFyZW50TmFtZToibGkifSxtZHgoImxpIix7cGFyZW50TmFtZToidWwifSwiYWxzbyBjYWxsZWQga2VybmVsLXN1cHBvcnRlZCB0aHJlYWRzIG9yIGxpZ2h0d2VpZ2h0IHRocmVhZHMiKSkpKSxtZHgoImgyIix7ImlkIjoidXNlci1sZXZlbC10aHJlYWRzIn0sIlVzZXItTGV2ZWwgVGhyZWFkcyIpLG1keCgicCIsbnVsbCwiVGhyZWFkIG1hbmFnZW1lbnQgYWxsIGRvbmUgYnkgYXBwbGljYXRpb24uIiksbWR4KCJ1bCIsbnVsbCxtZHgoImxpIix7cGFyZW50TmFtZToidWwifSwiTXVsdGl0aHJlYWRpbmcgaXMgbWFuYWdlZCBieSBhIHJ1bnRpbWUgdGhyZWFkcyBsaWIgIikpLG1keCgicCIsbnVsbCwiVGhlIGtlcm5lbCBpcyBub3QgYXdhcmUgb2YgdGhlIGV4aXN0ZW5jZSBvZiB0aHJlYWRzICIpLG1keCgidWwiLG51bGwsbWR4KCJsaSIse3BhcmVudE5hbWU6InVsIn0sIk9ubHkgc2NoZWR1bGUgdGhlIHByb2Nlc3MgYXMgYSB1bml0IGFuZCBhc3NpZ25zIGEgc2luZ2xlIGV4ZWN1dGlvbiBzdGF0ZSB0byB0aGF0IHByb2Nlc3MgIikpLG1keCgiaDIiLHsiaWQiOiJkaXNhZHZhbnRhZ2VzLW9mLXVsdCJ9LCJEaXNhZHZhbnRhZ2VzIG9mIFVMVCIpLG1keCgicCIsbnVsbCwiSW4gYSB0eXBpY2FsIE9TIG1hbnkgc3lzdGVtIGNhbGxzIGFyZSBibG9ja2luZyAiKSxtZHgoInVsIixudWxsLG1keCgibGkiLHtwYXJlbnROYW1lOiJ1bCJ9LCJhcyBhIHJlc3VsdCwgd2hlbiBhIFVMVCBleGVjdXRlcyBhIHN5c3RlbSBjYWxsLCBub3Qgb25seSBpcyB0aGUgdGhyZWFkIGJsb2NrZWQsIGJ1dCBhbGwgd2l0aGluIHRoZSBwcm9jZXNzIGFyZSBibG9ja2VkICIpKSxtZHgoInAiLG51bGwsIkluIGEgcHVyZSBVTFQgc3RyYXRlZ3ksIG11bHRpdGhyZWFkZWQgYXBwbGljYXRpb25zIGNhbm5vdCB0YWtlIGFkdmFudGFnZSBvZiBtdWx0aXByb2Nlc3NpbmcuIiksbWR4KCJoMiIseyJpZCI6Imtlcm5lbC1sZXZlbC10aHJlYWRzIn0sIktlcm5lbC1MZXZlbCBUaHJlYWRzIiksbWR4KCJwIixudWxsLCJLZXJuZWwgbWFpbnRhaW5zIGNvbnRleHQgaW5mb3JtYXRpb24gZm9yIHRoZSBwcm9jZXNzIGFuZCB0aGUgdGhyZWFkcy4gIiksbWR4KCJ1bCIsbnVsbCxtZHgoImxpIix7cGFyZW50TmFtZToidWwifSwiTm8gdGhyZWFkIG1hbmFnZW1lbnQgZG9uZSBieSBhcHBsaWNhdGlvbiAiKSksbWR4KCJwIixudWxsLCJTY2hlZHVsaW5nIGlzIGRvbmUgb24gYSB0aHJlYWQgYmFzaXMuIiksbWR4KCJwIixudWxsLCJXaW5kb3dzIGlzIGFuIGV4YW1wbGUgb2YgdGhpcyBhcHByb2FjaC4iKSxtZHgoImgyIix7ImlkIjoiYWR2YW50YWdlcy1vZi1rbHQifSwiQWR2YW50YWdlcyBvZiBLTFQiKSxtZHgoInAiLG51bGwsIlRoZSBrZXJuZWwgY2FuIHNpbXVsdGFuZW91c2x5IHNjaGVkdWxlIG11bHRpcGxlIHRocmVhZHMgZnJvbSB0aGUgc2FtZSBwcm9jZXNzIG9uIG11bHRpcGxlIHByb2Nlc3NvcnMuIiksbWR4KCJwIixudWxsLCJJZiBvbmUgdGhyZWFkIGlzIGJsb2NrZWQsIHRoZSBrZXJuZWwgc2NoZWR1bGVzIGFub3RoZXIgdGhyZWFkIG9mIHRoZSBzYW1lIHByb2Nlc3MuIiksbWR4KCJwIixudWxsLCJLZXJuZWwgcm91dGluZXMgdGhlbXNlbHZlcyBjYW4gYmUgbXVsdGl0aHJlYWRlZC4iKSxtZHgoImgyIix7ImlkIjoibXVsdGljb3JlLS1tdWx0aXRocmVhZGluZyJ9LCJNdWx0aWNvcmUgJiBNdWx0aXRocmVhZGluZyIpLG1keCgicCIsbnVsbCwiQWNoaWV2ZXMgY29uY3VycmVuY3kgd2l0aG91dCB0aGUgb3ZlcmhlYWQgb2YgdXNpbmcgbXVsdGlwbGUgcHJvY2Vzc2VzLiIpLG1keCgicCIsbnVsbCwiVGhyZWFkcyB3aXRoaW4gdGhlIHNhbWUgcHJvY2VzcyBjYW4gZXhjaGFuZ2UgaW5mb3JtYXRpb24gdGhyb3VnaCB0aGVpciBjb21tb24gYWRkcmVzcyBzcGFjZSBhbmQgaGF2ZSBhY2Nlc3MgdG8gdGhlIHNoYXJlZCByZXNvdXJjZXMgb2YgdGhlIHByb2Nlc3MuIiksbWR4KCJ1bCIsbnVsbCxtZHgoImxpIix7cGFyZW50TmFtZToidWwifSwiVGhyZWFkcyBvZiBhbnkgcHJvY2VzcyBjYW4gcnVuIG9uIGFueSBwcm9jZXNzb3IiKSxtZHgoImxpIix7cGFyZW50TmFtZToidWwifSwiU29mdCBhZmZpbml0eTpcbi0gZGlzcGF0Y2hlciB0cmllcyB0byBhc3NpZ24gYSByZWFkeSB0aHJlYWQgdG8gdGhlIHNhbWUgcHJvY2Vzc29yIGl0IGxhc3QgcmFuIG9uXG4tIGhlbHBzIHJldXNlIGRhdGEgc3RpbGwgaW4gdGhhdCBwcm9jZXNzb3IncyBtZW1vcnkgY2FjaGVzIGZyb20gdGhlIHByZXZpb3VzIGV4ZWN1dGlvbiBvZiB0aGUgdGhyZWFkICIpLG1keCgibGkiLHtwYXJlbnROYW1lOiJ1bCJ9LCJIYXJkIGFmZmluaXR5OlxuLSBhbiBhcHBsaWNhdGlvbiByZXN0cmljdHMgdGhyZWFkIGV4ZWN1dGlvbiB0byBjZXJ0YWluIHByb2Nlc3NvcnMiKSksbWR4KCJoMiIseyJpZCI6Im11bHRpY29yZS1jaGFsbGVuZ2VzIn0sIk11bHRpY29yZSBDaGFsbGVuZ2VzIiksbWR4KCJ1bCIsbnVsbCxtZHgoImxpIix7cGFyZW50TmFtZToidWwifSwiRGl2aWRpbmcgYWN0aXZpdGllcyAiKSxtZHgoImxpIix7cGFyZW50TmFtZToidWwifSwiQmFsYW5jZSAiKSxtZHgoImxpIix7cGFyZW50TmFtZToidWwifSwiRGF0YSBzcGxpdHRpbmcgIiksbWR4KCJsaSIse3BhcmVudE5hbWU6InVsIn0sIkRhdGEgZGVwZW5kZW5jeSAiKSxtZHgoImxpIix7cGFyZW50TmFtZToidWwifSwiVGVzdGluZyBhbmQgZGVidWdnaW5nICIpKSxtZHgoImgyIix7ImlkIjoibGludXgtdGhyZWFkcyJ9LCJMaW51eCBUaHJlYWRzIiksbWR4KCJwIixudWxsLCJMaW51eCB1c2VzIHRoZSBzYW1lIGludGVybmFsIHJlcHJlc2VudGF0aW9uIGZvciBwcm9jZXNzZXMgYW5kIHRocmVhZHM7IGEgdGhyZWFkIGlzIHNpbXBseSBhIG5ldyBwcm9jZXNzIChvciB0YXNrKSB0aGF0IGhhcHBlbnMgdG8gc2hhcmUgdGhlIHNhbWUgYWRkcmVzcyBzcGFjZSBhcyBpdHMgcGFyZW50LiIpLG1keCgicCIsbnVsbCwiQSBkaXN0aW5jdGlvbiBpcyBvbmx5IG1hZGUgd2hlbiBhIG5ldyB0aHJlYWQgaXMgY3JlYXRlZCBieSB0aGUgIixtZHgoImlubGluZUNvZGUiLHtwYXJlbnROYW1lOiJwIn0sImNsb25lIiksIiBzeXN0ZW0gY2FsbFxuLSAiLG1keCgiaW5saW5lQ29kZSIse3BhcmVudE5hbWU6InAifSwiZm9yayIpLCIgY3JlYXRlcyBhIG5ldyBwcm9jZXNzIHdpdGggaXRzIG93biBlbnRpcmVseSBuZXcgcHJvY2VzcyBjb250ZXh0XG4tICIsbWR4KCJpbmxpbmVDb2RlIix7cGFyZW50TmFtZToicCJ9LCJjbG9uZSIpLCIgY3JlYXRlcyBhIG5ldyBwcm9jZXNzIHdpdGggaXRzIG93biBpZGVudGl0eSwgYnV0IHRoYXQgaXMgYWxsb3dlZCB0byBzaGFyZSB0aGUgZGF0YSBzdHJ1Y3R1cmVzIG9mIGl0cyBwYXJlbnQiKSxtZHgoInAiLG51bGwsIlVzaW5nICIsbWR4KCJpbmxpbmVDb2RlIix7cGFyZW50TmFtZToicCJ9LCJjbG9uZSIpLCIgZ2l2ZXMgdGhlIGFwcGxpY2F0aW9uIGZpbmUtZ3JhaW5lZCBjb250cm9sIG92ZXIgZXhhY3RseSB3aGF0IGlzIHNoYXJlZCBiZXR3ZWVuIHR3byB0aHJlYWRzLiIpLG1keCgidGFibGUiLG51bGwsbWR4KCJ0aGVhZCIse3BhcmVudE5hbWU6InRhYmxlIn0sbWR4KCJ0ciIse3BhcmVudE5hbWU6InRoZWFkIn0sbWR4KCJ0aCIsT2JqZWN0LmFzc2lnbih7cGFyZW50TmFtZToidHIifSx7ImFsaWduIjpudWxsfSksImZsYWciKSxtZHgoInRoIixPYmplY3QuYXNzaWduKHtwYXJlbnROYW1lOiJ0ciJ9LHsiYWxpZ24iOm51bGx9KSwibWVhbmluZyIpKSksbWR4KCJ0Ym9keSIse3BhcmVudE5hbWU6InRhYmxlIn0sbWR4KCJ0ciIse3BhcmVudE5hbWU6InRib2R5In0sbWR4KCJ0ZCIsT2JqZWN0LmFzc2lnbih7cGFyZW50TmFtZToidHIifSx7ImFsaWduIjpudWxsfSksbWR4KCJpbmxpbmVDb2RlIix7cGFyZW50TmFtZToidGQifSwiQ0xPTkVfRlMiKSksbWR4KCJ0ZCIsT2JqZWN0LmFzc2lnbih7cGFyZW50TmFtZToidHIifSx7ImFsaWduIjpudWxsfSksIkZpbGUtc3lzdGVtIGluZm8gaXMgc2hhcmVkIikpLG1keCgidHIiLHtwYXJlbnROYW1lOiJ0Ym9keSJ9LG1keCgidGQiLE9iamVjdC5hc3NpZ24oe3BhcmVudE5hbWU6InRyIn0seyJhbGlnbiI6bnVsbH0pLG1keCgiaW5saW5lQ29kZSIse3BhcmVudE5hbWU6InRkIn0sIkNMT05FX1ZNIikpLG1keCgidGQiLE9iamVjdC5hc3NpZ24oe3BhcmVudE5hbWU6InRyIn0seyJhbGlnbiI6bnVsbH0pLCJUaGUgc2FtZSBtZW0gc3BhY2UgaXMgc2hhcmVkIikpLG1keCgidHIiLHtwYXJlbnROYW1lOiJ0Ym9keSJ9LG1keCgidGQiLE9iamVjdC5hc3NpZ24oe3BhcmVudE5hbWU6InRyIn0seyJhbGlnbiI6bnVsbH0pLG1keCgiaW5saW5lQ29kZSIse3BhcmVudE5hbWU6InRkIn0sIkNMT05FX1NJR0hBTkQiKSksbWR4KCJ0ZCIsT2JqZWN0LmFzc2lnbih7cGFyZW50TmFtZToidHIifSx7ImFsaWduIjpudWxsfSksIlNpZ25hbCBoYW5kbGVycyBhcmUgc2hhcmVkIikpLG1keCgidHIiLHtwYXJlbnROYW1lOiJ0Ym9keSJ9LG1keCgidGQiLE9iamVjdC5hc3NpZ24oe3BhcmVudE5hbWU6InRyIn0seyJhbGlnbiI6bnVsbH0pLG1keCgiaW5saW5lQ29kZSIse3BhcmVudE5hbWU6InRkIn0sIkNMT05FX0ZJTEVTIikpLG1keCgidGQiLE9iamVjdC5hc3NpZ24oe3BhcmVudE5hbWU6InRyIn0seyJhbGlnbiI6bnVsbH0pLCJUaGUgc2V0IG9mIG9wZW4gZmlsZXMgYXJlIHNoYXJlZCIpKSkpLG1keCgiaDIiLHsiaWQiOiJ3aW5kb3dzLXRocmVhZHMifSwiV2luZG93cyBUaHJlYWRzIiksbWR4KCJwIixudWxsLCJQcm9jZXNzZXMgYW5kIHNlcnZpZXMgcHJvdmlkZWQgYnkgdGhlIFdpbmRvd3MgS2VybmVsIGFyZSByZWxhdGl2ZWx5IHNpbXBsZSBhbmQgZ2VuZXJhbCBwdXJwb3NlLiIpLG1keCgidWwiLG51bGwsbWR4KCJsaSIse3BhcmVudE5hbWU6InVsIn0sImltcGxlbWVudGVkIGFzIG9iamVjdHMgIiksbWR4KCJsaSIse3BhcmVudE5hbWU6InVsIn0sImNyZWF0ZWQgYXMgbmV3IHByb2Nlc3Mgb3IgYSBjb3B5IG9mIGFuIGV4aXN0aW5nIHByb2Nlc3MgIiksbWR4KCJsaSIse3BhcmVudE5hbWU6InVsIn0sImV4ZWMgcHJvYyBtYXkgY29udGFpbiBvbmUgb3IgbW9yZSB0aHJlYWRzICIpLG1keCgibGkiLHtwYXJlbnROYW1lOiJ1bCJ9LCJib3RoIHByb2NzIGFuZCB0aHJlYWQgb2JqZWN0cyBoYXZlIGJ1aWx0LWluIHN5bmMgY2FwYWJpbGl0aWVzIikpLG1keCgicCIsbnVsbCwiV2luZG93cyBtYWtlcyB1c2Ugb2YgdHdvIHR5cGVzIG9mIHByb2Nlc3MtcmVsYXRlZCBvYmplY3RzOiIpLG1keCgicCIsbnVsbCxtZHgoInN0cm9uZyIse3BhcmVudE5hbWU6InAifSwiUHJvY2Vzc2VzIiksIlxuXHUyMDEzIGFuIGVudGl0eSBjb3JyZXNwb25kaW5nIHRvIGEgdXNlciBqb2Igb3IgYXBwbGljYXRpb24gdGhhdCBvd25zIHJlc291cmNlcyIpLG1keCgicCIsbnVsbCxtZHgoInN0cm9uZyIse3BhcmVudE5hbWU6InAifSwiVGhyZWFkcyIpLCJcblx1MjAxMyBhIGRpc3BhdGNoYWJsZSB1bml0IG9mIHdvcmsgdGhhdCBleGVjdXRlcyBzZXF1ZW50aWFsbHkgYW5kIGlzIGludGVycnVwdGlibGUiKSk7fWlmKHR5cGVvZiBNRFhDb250ZW50IT09J3VuZGVmaW5lZCcmJk1EWENvbnRlbnQmJk1EWENvbnRlbnQ9PT1PYmplY3QoTURYQ29udGVudCkmJk9iamVjdC5pc0V4dGVuc2libGUoTURYQ29udGVudCkpe09iamVjdC5kZWZpbmVQcm9wZXJ0eShNRFhDb250ZW50LCdfX2ZpbGVtZXRhJyx7ZW51bWVyYWJsZTp0cnVlLGNvbmZpZ3VyYWJsZTp0cnVlLHZhbHVlOntuYW1lOiJNRFhDb250ZW50IixmaWxlbmFtZToibWFudWFsL0NPTVAzNTIwLU9TLzMtVGhyZWFkcy5tZCJ9fSk7fU1EWENvbnRlbnQuaXNNRFhDb21wb25lbnQ9dHJ1ZTs="},{"version":3,"sources":["/Users/okeeffe_d/Project-Imposter/developer-notes/manual/COMP3520-OS/3-Threads.md"],"names":["React","mdx","makeShortcode","name","MDXDefaultShortcode","props","console","warn","layoutProps","MDXLayout","MDXContent","components","isMDXComponent"],"mappings":"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","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"week-3---threads\"\n    }}>{`Week 3 - Threads`}</h1>\n    <h2 {...{\n      \"id\": \"processes-and-threads\"\n    }}>{`Processes and Threads`}</h2>\n    <p>{`Processes have two characteristics:`}</p>\n    <ol>\n      <li parentName=\"ol\">{`Resource Ownership `}<ul parentName=\"li\">\n          <li parentName=\"ul\">{`process includes a virtual address space to hold the process image `}</li>\n          <li parentName=\"ul\">{`the OS performs a protection function to prevent unwanted interference between processes with respect to resources`}</li>\n        </ul></li>\n      <li parentName=\"ol\">{`Scheduling/Execution`}<ul parentName=\"li\">\n          <li parentName=\"ul\">{`follows an execution path that may be interleaved with other processes `}</li>\n          <li parentName=\"ul\">{`a process has an execution state (Running, Ready, etc.) and a dispatching priority and is scheduled and dispatched by the OS`}</li>\n        </ul></li>\n    </ol>\n    <p>{`These two characteristics are treated independently by modern operating systems:\n- the unit of dispatching is referred to as a `}<inlineCode parentName=\"p\">{`thread`}</inlineCode>{` or lightweight process\n- the unit of resource ownership is referred to as a `}<inlineCode parentName=\"p\">{`process`}</inlineCode>{` or `}<inlineCode parentName=\"p\">{`task`}</inlineCode></p>\n    <h2 {...{\n      \"id\": \"multithreading\"\n    }}>{`Multithreading`}</h2>\n    <p>{`The ability of an OS to support multiple, concurrect paths of execution within a single process`}</p>\n    <h2 {...{\n      \"id\": \"process\"\n    }}>{`Process`}</h2>\n    <p>{`The unit of resource allocation and a unit of protection.`}</p>\n    <p>{`A process is associated with: `}</p>\n    <ul>\n      <li parentName=\"ul\">{`A virtual address space which holds the process image `}</li>\n      <li parentName=\"ul\">{`Protected access to\n- Processors\n- Other processes\n- Files\n- I/O resources `}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"multiple-threads-in-process\"\n    }}>{`Multiple threads in Process`}</h2>\n    <p>{`Each thread has:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Access to the memory and resources of its process (all threads of a process share this)`}</li>\n      <li parentName=\"ul\">{`An execution state (running, ready, etc.)`}</li>\n      <li parentName=\"ul\">{`Saved thread context when not running `}</li>\n      <li parentName=\"ul\">{`An execution stack `}</li>\n      <li parentName=\"ul\">{`Some per-thread static storage for local variables`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"single-threaded-vs-multi-threaded\"\n    }}>{`Single-Threaded vs multi threaded`}</h2>\n    <ul>\n      <li parentName=\"ul\">{`Both have `}<inlineCode parentName=\"li\">{`Process Control Block`}</inlineCode></li>\n      <li parentName=\"ul\">{`Both have `}<inlineCode parentName=\"li\">{`User Address Space`}</inlineCode></li>\n      <li parentName=\"ul\">{`Single thread has a `}<inlineCode parentName=\"li\">{`User Stack`}</inlineCode>{` and `}<inlineCode parentName=\"li\">{`Kernel Stack`}</inlineCode></li>\n      <li parentName=\"ul\">{`Multithread process has a `}<inlineCode parentName=\"li\">{`User Stack`}</inlineCode>{`, `}<inlineCode parentName=\"li\">{`Kernel Stack`}</inlineCode>{`, `}<inlineCode parentName=\"li\">{`Thread Control Block`}</inlineCode>{` within each thread`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"threads\"\n    }}>{`Threads`}</h2>\n    <p>{`In OS that supports threads: scheduling and dispatching done on thread basis `}</p>\n    <ul>\n      <li parentName=\"ul\">{`Most of the state info dealing with execution is maintained in thread-level data structures `}</li>\n      <li parentName=\"ul\">{`Several actions that affect all of the threads in a process and that the OS must manage at the process level\n- Suspending process means all threads of a process\n- Terminates a process terminates all threads within the process `}</li>\n      <li parentName=\"ul\">{`Similar to processes, threads have execution states and may synchronize with one another.`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"thread-execution-states\"\n    }}>{`Thread Execution States`}</h2>\n    <p>{`Three basic states`}</p>\n    <ol>\n      <li parentName=\"ol\">{`Running `}</li>\n      <li parentName=\"ol\">{`Ready `}</li>\n      <li parentName=\"ol\">{`Blocked `}</li>\n    </ol>\n    <p>{`Operations associated with a change in thread state `}</p>\n    <ul>\n      <li parentName=\"ul\">{`Spawn (another thread)\n- allocate register context and stacks `}</li>\n      <li parentName=\"ul\">{`Block\n- move to an event queue waiting for the event\n- issue: will blocking a thread block other, or all, threads within the same process?`}</li>\n      <li parentName=\"ul\">{`Unblock\n- moved the the `}<inlineCode parentName=\"li\">{`Ready`}</inlineCode>{` queue for execution`}</li>\n      <li parentName=\"ul\">{`Finish (thread)\n- de-allocate register context and stacks `}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"thread-synchronization\"\n    }}>{`Thread Synchronization`}</h2>\n    <p>{`Necessity to sync activities of all threads and prevent interference between each other.`}</p>\n    <ul>\n      <li parentName=\"ul\">{`all threads of a process share the same address space and other resources `}</li>\n      <li parentName=\"ul\">{`any alteration of a resource by one thread affects the other threads in the same process `}</li>\n    </ul>\n    <p>{`In general, the techniques used for thread sync are the same as those for process sync.`}</p>\n    <h2 {...{\n      \"id\": \"types-of-threads\"\n    }}>{`Types of Threads`}</h2>\n    <ol>\n      <li parentName=\"ol\">{`User Level Thread (ULT)`}</li>\n      <li parentName=\"ol\">{`Kernel Level Thread (KLT) `}<ul parentName=\"li\">\n          <li parentName=\"ul\">{`also called kernel-supported threads or lightweight threads`}</li>\n        </ul></li>\n    </ol>\n    <h2 {...{\n      \"id\": \"user-level-threads\"\n    }}>{`User-Level Threads`}</h2>\n    <p>{`Thread management all done by application.`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Multithreading is managed by a runtime threads lib `}</li>\n    </ul>\n    <p>{`The kernel is not aware of the existence of threads `}</p>\n    <ul>\n      <li parentName=\"ul\">{`Only schedule the process as a unit and assigns a single execution state to that process `}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"disadvantages-of-ult\"\n    }}>{`Disadvantages of ULT`}</h2>\n    <p>{`In a typical OS many system calls are blocking `}</p>\n    <ul>\n      <li parentName=\"ul\">{`as a result, when a ULT executes a system call, not only is the thread blocked, but all within the process are blocked `}</li>\n    </ul>\n    <p>{`In a pure ULT strategy, multithreaded applications cannot take advantage of multiprocessing.`}</p>\n    <h2 {...{\n      \"id\": \"kernel-level-threads\"\n    }}>{`Kernel-Level Threads`}</h2>\n    <p>{`Kernel maintains context information for the process and the threads. `}</p>\n    <ul>\n      <li parentName=\"ul\">{`No thread management done by application `}</li>\n    </ul>\n    <p>{`Scheduling is done on a thread basis.`}</p>\n    <p>{`Windows is an example of this approach.`}</p>\n    <h2 {...{\n      \"id\": \"advantages-of-klt\"\n    }}>{`Advantages of KLT`}</h2>\n    <p>{`The kernel can simultaneously schedule multiple threads from the same process on multiple processors.`}</p>\n    <p>{`If one thread is blocked, the kernel schedules another thread of the same process.`}</p>\n    <p>{`Kernel routines themselves can be multithreaded.`}</p>\n    <h2 {...{\n      \"id\": \"multicore--multithreading\"\n    }}>{`Multicore & Multithreading`}</h2>\n    <p>{`Achieves concurrency without the overhead of using multiple processes.`}</p>\n    <p>{`Threads within the same process can exchange information through their common address space and have access to the shared resources of the process.`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Threads of any process can run on any processor`}</li>\n      <li parentName=\"ul\">{`Soft affinity:\n- dispatcher tries to assign a ready thread to the same processor it last ran on\n- helps reuse data still in that processor's memory caches from the previous execution of the thread `}</li>\n      <li parentName=\"ul\">{`Hard affinity:\n- an application restricts thread execution to certain processors`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"multicore-challenges\"\n    }}>{`Multicore Challenges`}</h2>\n    <ul>\n      <li parentName=\"ul\">{`Dividing activities `}</li>\n      <li parentName=\"ul\">{`Balance `}</li>\n      <li parentName=\"ul\">{`Data splitting `}</li>\n      <li parentName=\"ul\">{`Data dependency `}</li>\n      <li parentName=\"ul\">{`Testing and debugging `}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"linux-threads\"\n    }}>{`Linux Threads`}</h2>\n    <p>{`Linux uses the same internal representation for processes and threads; a thread is simply a new process (or task) that happens to share the same address space as its parent.`}</p>\n    <p>{`A distinction is only made when a new thread is created by the `}<inlineCode parentName=\"p\">{`clone`}</inlineCode>{` system call\n- `}<inlineCode parentName=\"p\">{`fork`}</inlineCode>{` creates a new process with its own entirely new process context\n- `}<inlineCode parentName=\"p\">{`clone`}</inlineCode>{` creates a new process with its own identity, but that is allowed to share the data structures of its parent`}</p>\n    <p>{`Using `}<inlineCode parentName=\"p\">{`clone`}</inlineCode>{` gives the application fine-grained control over exactly what is shared between two threads.`}</p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`flag`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`meaning`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`CLONE_FS`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`File-system info is shared`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`CLONE_VM`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`The same mem space is shared`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`CLONE_SIGHAND`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Signal handlers are shared`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`CLONE_FILES`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`The set of open files are shared`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <h2 {...{\n      \"id\": \"windows-threads\"\n    }}>{`Windows Threads`}</h2>\n    <p>{`Processes and servies provided by the Windows Kernel are relatively simple and general purpose.`}</p>\n    <ul>\n      <li parentName=\"ul\">{`implemented as objects `}</li>\n      <li parentName=\"ul\">{`created as new process or a copy of an existing process `}</li>\n      <li parentName=\"ul\">{`exec proc may contain one or more threads `}</li>\n      <li parentName=\"ul\">{`both procs and thread objects have built-in sync capabilities`}</li>\n    </ul>\n    <p>{`Windows makes use of two types of process-related objects:`}</p>\n    <p><strong parentName=\"p\">{`Processes`}</strong>{`\n– an entity corresponding to a user job or application that owns resources`}</p>\n    <p><strong parentName=\"p\">{`Threads`}</strong>{`\n– a dispatchable unit of work that executes sequentially and is interruptible`}</p>\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  "]}]}