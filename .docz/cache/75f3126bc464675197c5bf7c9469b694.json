{"remainingRequest":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/docz-core/node_modules/babel-loader/lib/index.js??ref--6-1!/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/@mdx-js/loader/index.js??ref--6-2!/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/source-map-loader/index.js!/Users/dennis.okeeffe/Project-Imposter/developer-notes/manual/Scala/Scala-Expressions.md","dependencies":[{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/manual/Scala/Scala-Expressions.md","mtime":1562563032088},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/cache-loader/dist/cjs.js","mtime":1564095360956},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/docz-core/node_modules/babel-loader/lib/index.js","mtime":1562568123838},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/@mdx-js/loader/index.js","mtime":1565139338792},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/source-map-loader/index.js","mtime":1564095361765}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9vYmplY3RXaXRob3V0UHJvcGVydGllcyBmcm9tIi9Vc2Vycy9kZW5uaXMub2tlZWZmZS9Qcm9qZWN0LUltcG9zdGVyL2RldmVsb3Blci1ub3Rlcy9ub2RlX21vZHVsZXMvYmFiZWwtcHJlc2V0LXJlYWN0LWFwcC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0V2l0aG91dFByb3BlcnRpZXMiOy8qIEBqc3ggbWR4ICovaW1wb3J0IFJlYWN0IGZyb20ncmVhY3QnO2ltcG9ydHttZHh9ZnJvbSdAbWR4LWpzL3JlYWN0JzsvKiBAanN4IG1keCAqL3ZhciBtYWtlU2hvcnRjb2RlPWZ1bmN0aW9uIG1ha2VTaG9ydGNvZGUobmFtZSl7cmV0dXJuIGZ1bmN0aW9uIE1EWERlZmF1bHRTaG9ydGNvZGUocHJvcHMpe2NvbnNvbGUud2FybigiQ29tcG9uZW50ICIrbmFtZSsiIHdhcyBub3QgaW1wb3J0ZWQsIGV4cG9ydGVkLCBvciBwcm92aWRlZCBieSBNRFhQcm92aWRlciBhcyBnbG9iYWwgc2NvcGUiKTtyZXR1cm4gbWR4KCJkaXYiLHByb3BzKTt9O307dmFyIGxheW91dFByb3BzPXt9O3ZhciBNRFhMYXlvdXQ9IndyYXBwZXIiO2V4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIE1EWENvbnRlbnQoX3JlZil7dmFyIGNvbXBvbmVudHM9X3JlZi5jb21wb25lbnRzLHByb3BzPV9vYmplY3RXaXRob3V0UHJvcGVydGllcyhfcmVmLFsiY29tcG9uZW50cyJdKTtyZXR1cm4gbWR4KE1EWExheW91dCxPYmplY3QuYXNzaWduKHt9LGxheW91dFByb3BzLHByb3BzLHtjb21wb25lbnRzOmNvbXBvbmVudHMsbWR4VHlwZToiTURYTGF5b3V0In0pLG1keCgiaDEiLHsiaWQiOiJzY2FsYS1leHByZXNzaW9ucy1hbmQtZnVuY3Rpb25zIn0sIlNjYWxhIEV4cHJlc3Npb25zIGFuZCBGdW5jdGlvbnMiKSxtZHgoInAiLG51bGwsIkFzIG9wcG9zZWQgdG8gaW5zdHJ1Y3Rpb25zLCBldmVyeXRoaW5nIGluIFNjYWxhIGlzIGNvbnNpZGVyZWQgYW4gIixtZHgoImlubGluZUNvZGUiLHtwYXJlbnROYW1lOiJwIn0sImV4cHJlc3Npb24iKSwiLiBFdmVuIGlmL2Vsc2Ugc3RhdGVtZW50cyB0aGVtc2VsdmVzIGluIFNjYWxhIGFyZSBleHByZXNzaW9ucy4iKSxtZHgoImgyIix7ImlkIjoiZm9yLWxvb3BzIn0sIkZvciBMb29wcyIpLG1keCgicCIsbnVsbCwiRm9yIGxvb3BzIGFyZSBub3QgcmVjb21tZW5kZWQgaW4gU2NhbGEuIFRoZXkgcmV0dXJuICIsbWR4KCJpbmxpbmVDb2RlIix7cGFyZW50TmFtZToicCJ9LCJVbml0IiksIiB3aGljaCBpbiBpdHNlbGYgaXMgZXF1aXZhbGVudCB0byIsbWR4KCJpbmxpbmVDb2RlIix7cGFyZW50TmFtZToicCJ9LCJudWxsIiksIi4gVGhpcyBpcyB0aGUgY2FzZSBmb3Igc2lkZSBlZmZlY3RzIC0gYW4gaW50ZXJncmFsIHBhcnQgb2YgdW5kZXJzdGFuZGluZyBTY2FsYS4iKSxtZHgoImgyIix7ImlkIjoiY29kZS1ibG9ja3MifSwiQ29kZSBCbG9ja3MiKSxtZHgoInAiLG51bGwsIk5vdGUgdGhhdCBpZiB5b3Ugd3JpdGUgYSBjb2RlIGJsb2NrLCB0aGUgbGFzdCB2YWx1ZSBpbiB0aGUgY29kZSBibG9jayBpcyByZXR1cm5lZCBhcyB0aGUgdmFsdWUuIiksbWR4KCJwcmUiLG51bGwsbWR4KCJjb2RlIixPYmplY3QuYXNzaWduKHtwYXJlbnROYW1lOiJwcmUifSx7ImNsYXNzTmFtZSI6Imxhbmd1YWdlLXNjYWxhIn0pLCJ2YWwgY29kZUJsb2NrID0ge1xuICAgIHZhbCBhID0gMVxuICAgIHZhbCBiID0gMlxuXG4gICAgaWYoYSA8IGIpIFwiaGlcIiBlbHNlIFwiYnllXCJcbn1cblxucHJpbnRsbihjb2RlQmxvY2spXG4vLyBldmFsdWF0ZXMgdG8gXCJoaVwiXG4iKSksbWR4KCJoMiIseyJpZCI6ImV4YW1wbGVzLW9mLWV4cHJlc3Npb25zLWFuZC1zaWRlLWVmZmVjdHMifSwiRXhhbXBsZXMgb2YgRXhwcmVzc2lvbnMgYW5kIFNpZGUgRWZmZWN0cyIpLG1keCgicHJlIixudWxsLG1keCgiY29kZSIsT2JqZWN0LmFzc2lnbih7cGFyZW50TmFtZToicHJlIn0seyJjbGFzc05hbWUiOiJsYW5ndWFnZS1zY2FsYSJ9KSwiXCJoZWxsb1wiIC8vIHR5cGUgU3RyaW5nXG5wcmludGxuKFwiaGVsbG9cIikgLy8gdHlwZSBVbml0XG5cbi8vIHR5cGUgQm9vbGVhblxudmFsIGEgPSB7XG4gICAgMiA8IDNcbn1cblxuLy8gdHlwZSBJbnQgdmFsdWUgMTBcbnZhbCBiID0ge1xuICAgIGlmKGEpIDEyMyBlbHNlIDMyMVxuICAgIDEwXG59XG5cbi8vIGMgaXMgb2YgdHlwZSBVbml0XG52YXIgaSA9IDBcbnZhbCBjID0gd2hpbGUgKGkgPCAxMCkge1xuICAgIGkgKz0gMVxufVxuIikpLG1keCgiaDIiLHsiaWQiOiJmdW5jdGlvbnMifSwiRnVuY3Rpb25zIiksbWR4KCJwcmUiLG51bGwsbWR4KCJjb2RlIixPYmplY3QuYXNzaWduKHtwYXJlbnROYW1lOiJwcmUifSx7ImNsYXNzTmFtZSI6Imxhbmd1YWdlLXNjYWxhIn0pLCJvYmplY3QgRnVuY3Rpb25zIGV4dGVuZHMgQXBwIHtcbiAgICAvLyB0aGlzIHdvcmtzIGJlY2F1c2Ugd2Uga25vdyBldmVyeXRoaW5nIGlzIGFuIGV4cHJlc3Npb25cbiAgICBkZWYgZnVuY3Rpb25FeGFtcGxlKGE6IFN0cmluZywgYjogSW50KTogU3RyaW5nID0gYSArIFwiIFwiICsgYlxuXG4gICAgZGVmIHBhcmFtZXRlcmxlc3NGdW5jKCk6IEludCA9IDQyXG4gICAgcHJpbnRsbihwYXJhbWV0ZXJsZXNzRnVuYygpKVxuICAgIC8vIGFsc28gdmFsaWQgaW4gU2NhbGEgdG8gY2FsbCBmdW5jXG4gICAgcHJpbnRsbihwYXJhbWV0ZXJsZXNzRnVuYylcblxuICAgIGRlZiByZXBldGVyRnVuYyhhOiBTdHJpbmcsIG46IEludCk6IFN0cmluZyAgPSB7XG4gICAgICAgIGlmIChuID09IDEpIGFcbiAgICAgICAgZWxzZSBhICsgcmVwZXRlckZ1bmMoYSwgbi0xKVxuICAgIH1cbn1cbiIpKSk7fWlmKHR5cGVvZiBNRFhDb250ZW50IT09J3VuZGVmaW5lZCcmJk1EWENvbnRlbnQmJk1EWENvbnRlbnQ9PT1PYmplY3QoTURYQ29udGVudCkmJk9iamVjdC5pc0V4dGVuc2libGUoTURYQ29udGVudCkpe09iamVjdC5kZWZpbmVQcm9wZXJ0eShNRFhDb250ZW50LCdfX2ZpbGVtZXRhJyx7ZW51bWVyYWJsZTp0cnVlLGNvbmZpZ3VyYWJsZTp0cnVlLHZhbHVlOntuYW1lOiJNRFhDb250ZW50IixmaWxlbmFtZToibWFudWFsL1NjYWxhL1NjYWxhLUV4cHJlc3Npb25zLm1kIn19KTt9TURYQ29udGVudC5pc01EWENvbXBvbmVudD10cnVlOw=="},{"version":3,"sources":["/Users/dennis.okeeffe/Project-Imposter/developer-notes/manual/Scala/Scala-Expressions.md"],"names":["React","mdx","makeShortcode","name","MDXDefaultShortcode","props","console","warn","layoutProps","MDXLayout","MDXContent","components","isMDXComponent"],"mappings":"iMAAA,cACE,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,GAAT,KAAoB,eAApB,CACA,cAGF,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAAAC,IAAI,QAAI,SAASC,CAAAA,mBAAT,CAA6BC,KAA7B,CAAoC,CAChEC,OAAO,CAACC,IAAR,CAAa,aAAeJ,IAAf,CAAsB,yEAAnC,EACA,MAAO,WAASE,KAAT,CAAP,CACD,CAHyB,EAA1B,CAKA,GAAMG,CAAAA,WAAW,CAAG,EAApB,CAGA,GAAMC,CAAAA,SAAS,CAAG,SAAlB,CACA,cAAe,SAASC,CAAAA,UAAT,MAGZ,IAFDC,CAAAA,UAEC,MAFDA,UAEC,CADEN,KACF,+CACD,MAAO,KAAC,SAAD,kBAAeG,WAAf,CAAgCH,KAAhC,EAAuC,UAAU,CAAEM,UAAnD,CAA+D,OAAO,CAAC,WAAvE,GACL,SAAQ,CACN,KAAM,iCADA,CAAR,mCADK,CAIL,iFAAwE,kBAAY,UAAU,CAAC,GAAvB,eAAxE,kEAJK,CAKL,SAAQ,CACN,KAAM,WADA,CAAR,aALK,CAQL,oEAA2D,kBAAY,UAAU,CAAC,GAAvB,SAA3D,qCAAgJ,kBAAY,UAAU,CAAC,GAAvB,SAAhJ,mFARK,CASL,SAAQ,CACN,KAAM,aADA,CAAR,eATK,CAYL,+GAZK,CAaL,eAAK,0BAAM,UAAU,CAAC,KAAjB,EAA2B,CAC5B,YAAa,gBADe,CAA3B,4IAAL,CAbK,CAyBL,SAAQ,CACN,KAAM,0CADA,CAAR,4CAzBK,CA4BL,eAAK,0BAAM,UAAU,CAAC,KAAjB,EAA2B,CAC5B,YAAa,gBADe,CAA3B,8PAAL,CA5BK,CAkDL,SAAQ,CACN,KAAM,WADA,CAAR,aAlDK,CAqDL,eAAK,0BAAM,UAAU,CAAC,KAAjB,EAA2B,CAC5B,YAAa,gBADe,CAA3B,0bAAL,CArDK,CAAP,CAuED,C,6QAEDD,UAAU,CAACE,cAAX,CAA4B,IAA5B","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"scala-expressions-and-functions\"\n    }}>{`Scala Expressions and Functions`}</h1>\n    <p>{`As opposed to instructions, everything in Scala is considered an `}<inlineCode parentName=\"p\">{`expression`}</inlineCode>{`. Even if/else statements themselves in Scala are expressions.`}</p>\n    <h2 {...{\n      \"id\": \"for-loops\"\n    }}>{`For Loops`}</h2>\n    <p>{`For loops are not recommended in Scala. They return `}<inlineCode parentName=\"p\">{`Unit`}</inlineCode>{` which in itself is equivalent to`}<inlineCode parentName=\"p\">{`null`}</inlineCode>{`. This is the case for side effects - an intergral part of understanding Scala.`}</p>\n    <h2 {...{\n      \"id\": \"code-blocks\"\n    }}>{`Code Blocks`}</h2>\n    <p>{`Note that if you write a code block, the last value in the code block is returned as the value.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-scala\"\n      }}>{`val codeBlock = {\n    val a = 1\n    val b = 2\n\n    if(a < b) \"hi\" else \"bye\"\n}\n\nprintln(codeBlock)\n// evaluates to \"hi\"\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"examples-of-expressions-and-side-effects\"\n    }}>{`Examples of Expressions and Side Effects`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-scala\"\n      }}>{`\"hello\" // type String\nprintln(\"hello\") // type Unit\n\n// type Boolean\nval a = {\n    2 < 3\n}\n\n// type Int value 10\nval b = {\n    if(a) 123 else 321\n    10\n}\n\n// c is of type Unit\nvar i = 0\nval c = while (i < 10) {\n    i += 1\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"functions\"\n    }}>{`Functions`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-scala\"\n      }}>{`object Functions extends App {\n    // this works because we know everything is an expression\n    def functionExample(a: String, b: Int): String = a + \" \" + b\n\n    def parameterlessFunc(): Int = 42\n    println(parameterlessFunc())\n    // also valid in Scala to call func\n    println(parameterlessFunc)\n\n    def repeterFunc(a: String, n: Int): String  = {\n        if (n == 1) a\n        else a + repeterFunc(a, n-1)\n    }\n}\n`}</code></pre>\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  "]}]}