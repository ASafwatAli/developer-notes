{"remainingRequest":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/docz-core/node_modules/babel-loader/lib/index.js??ref--6-1!/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/@mdx-js/loader/index.js??ref--6-2!/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/source-map-loader/index.js!/Users/dennis.okeeffe/Project-Imposter/developer-notes/manual/Testing/puppeteer.md","dependencies":[{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/manual/Testing/puppeteer.md","mtime":1562563032097},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/cache-loader/dist/cjs.js","mtime":1564095360956},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/docz-core/node_modules/babel-loader/lib/index.js","mtime":1562568123838},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/@mdx-js/loader/index.js","mtime":1565139338792},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/source-map-loader/index.js","mtime":1564095361765}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9vYmplY3RXaXRob3V0UHJvcGVydGllcyBmcm9tIi9Vc2Vycy9kZW5uaXMub2tlZWZmZS9Qcm9qZWN0LUltcG9zdGVyL2RldmVsb3Blci1ub3Rlcy9ub2RlX21vZHVsZXMvYmFiZWwtcHJlc2V0LXJlYWN0LWFwcC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0V2l0aG91dFByb3BlcnRpZXMiOy8qIEBqc3ggbWR4ICovaW1wb3J0IFJlYWN0IGZyb20ncmVhY3QnO2ltcG9ydHttZHh9ZnJvbSdAbWR4LWpzL3JlYWN0JzsvKiBAanN4IG1keCAqL3ZhciBtYWtlU2hvcnRjb2RlPWZ1bmN0aW9uIG1ha2VTaG9ydGNvZGUobmFtZSl7cmV0dXJuIGZ1bmN0aW9uIE1EWERlZmF1bHRTaG9ydGNvZGUocHJvcHMpe2NvbnNvbGUud2FybigiQ29tcG9uZW50ICIrbmFtZSsiIHdhcyBub3QgaW1wb3J0ZWQsIGV4cG9ydGVkLCBvciBwcm92aWRlZCBieSBNRFhQcm92aWRlciBhcyBnbG9iYWwgc2NvcGUiKTtyZXR1cm4gbWR4KCJkaXYiLHByb3BzKTt9O307dmFyIGxheW91dFByb3BzPXt9O3ZhciBNRFhMYXlvdXQ9IndyYXBwZXIiO2V4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIE1EWENvbnRlbnQoX3JlZil7dmFyIGNvbXBvbmVudHM9X3JlZi5jb21wb25lbnRzLHByb3BzPV9vYmplY3RXaXRob3V0UHJvcGVydGllcyhfcmVmLFsiY29tcG9uZW50cyJdKTtyZXR1cm4gbWR4KE1EWExheW91dCxPYmplY3QuYXNzaWduKHt9LGxheW91dFByb3BzLHByb3BzLHtjb21wb25lbnRzOmNvbXBvbmVudHMsbWR4VHlwZToiTURYTGF5b3V0In0pLG1keCgiaHIiLG51bGwpLG1keCgicCIsbnVsbCwiQXV0aG9yOiBEZW5uaXMgTydLZWVmZmUiKSxtZHgoImgyIix7ImlkIjoic2VjdGlvbi10ZXN0aW5nIn0sIlNlY3Rpb246IFRlc3RpbmciKSxtZHgoImgxIix7ImlkIjoicHVwcGV0ZWVyIn0sIlB1cHBldGVlciIpLG1keCgiaDIiLHsiaWQiOiJyZXNvdXJjZXMifSwiUmVzb3VyY2VzIiksbWR4KCJ1bCIsbnVsbCxtZHgoImxpIix7cGFyZW50TmFtZToidWwifSxtZHgoImEiLE9iamVjdC5hc3NpZ24oe3BhcmVudE5hbWU6ImxpIn0seyJocmVmIjoiaHR0cHM6Ly9tb2NoYWpzLm9yZy8ifSksIk1vY2hhIFdlYnNpdGUiKSksbWR4KCJsaSIse3BhcmVudE5hbWU6InVsIn0sbWR4KCJhIixPYmplY3QuYXNzaWduKHtwYXJlbnROYW1lOiJsaSJ9LHsiaHJlZiI6Imh0dHA6Ly93d3cuY2hhaWpzLmNvbS9hcGkvIn0pLCJDaGFpIEFQSSIpKSxtZHgoImxpIix7cGFyZW50TmFtZToidWwifSxtZHgoImEiLE9iamVjdC5hc3NpZ24oe3BhcmVudE5hbWU6ImxpIn0seyJocmVmIjoiaHR0cDovL2FpcmJuYi5pby9lbnp5bWUvZG9jcy9hcGkvIn0pLCJFbnp5bWUgQVBJIikpLG1keCgibGkiLHtwYXJlbnROYW1lOiJ1bCJ9LG1keCgiYSIsT2JqZWN0LmFzc2lnbih7cGFyZW50TmFtZToibGkifSx7ImhyZWYiOiJodHRwczovL2dpdGh1Yi5jb20vR29vZ2xlQ2hyb21lL3B1cHBldGVlci9ibG9iL21hc3Rlci9kb2NzL2FwaS5tZCJ9KSwiUHVwcGV0ZWVyIEFQSSIpKSksbWR4KCJoMiIseyJpZCI6InVzYWdlIn0sIlVzYWdlIiksbWR4KCJwIixudWxsLCJUbyB0ZXN0IHRoZSBVSSBpdHNlbGYsIHdlIGNhbiB1c2UgUHVwcGV0ZWVyLCBDaHJvbWUncyBIZWFkbGVzcyBCcm93c2VyIHRvIGV2YWx1YXRlIG9uIHRoZSBVSSBpdHNlbGYuIFB1cHBldGVlciBjYW4gYWxzbyBiZSBzZXQgdG8gaGF2ZSAiLG1keCgiaW5saW5lQ29kZSIse3BhcmVudE5hbWU6InAifSwiaGVhZGxlc3M6IGZhbHNlIiksIiwgYWxsb3dpbmcgdGhlIHVzZXIgdG8gcmVjb3JkIG9yIHdhdGNoIHRoZSB0ZXN0IG9uIHRoZWlyIHNjcmVlbi4iKSxtZHgoInByZSIsbnVsbCxtZHgoImNvZGUiLE9iamVjdC5hc3NpZ24oe3BhcmVudE5hbWU6InByZSJ9LHsiY2xhc3NOYW1lIjoibGFuZ3VhZ2UtamF2YXNjcmlwdCJ9KSwiY29uc3QgcHVwcGV0ZWVyID0gcmVxdWlyZSgncHVwcGV0ZWVyJyk7XG5cbi8vIFRlc3Qgc3VpdGVcbmRlc2NyaWJlKCdQYWdlSG9tZSBmdW5jdGlvbmFsaXR5JywgKCkgPT4ge1xuICAvLyBUZXN0IHN1aXRlIHdpdGhpbiBhbm90aGVyIHRlc3Qgc3VpdGUgLSB1c2VmdWwgZm9yIHN1YnNlY3Rpb25pbmcgdGVzdHMgd2l0aGluIGEgY29tcG9uZW50L3BhZ2VcbiAgZGVzY3JpYmUoJ1NpbXBsZSBQdXBwZXRlZXIgVUkgdGVzdCBmb3IgZm9ybSBlbGVtZW50cycsICgpID0+IHtcbiAgICBpdCgnZmlyc3ROYW1lIGFuZCBsYXN0TmFtZSBmcm9tIFB1cHBldGVlciBkZWVwIGVxdWFsIGV4cGVjdGVkIHNjaGVtYScsIGFzeW5jICgpID0+IHtcbiAgICAgIGNvbnN0IGV4cGVjdGVkID0ge1xuICAgICAgICBmaXJzdE5hbWU6ICdIZWxsbycsXG4gICAgICAgIGxhc3ROYW1lOiAnV29ybGQnXG4gICAgICB9O1xuXG4gICAgICBjb25zdCBicm93c2VyID0gYXdhaXQgcHVwcGV0ZWVyLmxhdW5jaCh7IGhlYWRsZXNzOiBmYWxzZSB9KTtcbiAgICAgIGNvbnN0IHBhZ2UgPSBhd2FpdCBicm93c2VyLm5ld1BhZ2UoKTtcbiAgICAgIGF3YWl0IHBhZ2UuZ290bygnaHR0cDovL2xvY2FsaG9zdDozMDAwJyk7XG4gICAgICBhd2FpdCBwYWdlLnNjcmVlbnNob3QoeyBwYXRoOiAnZXhhbXBsZS5wbmcnIH0pOyAvLyBjcmVhdGUgYW4gZXhhbXBsZSBzY3JlZW5zaG90IG9mIGN1cnJlbnQgVUkgc3RhdGVcbiAgICAgIGF3YWl0IHBhZ2UudHlwZSgnaW5wdXRbbmFtZT1cImZpcnN0TmFtZVwiXScsICdIZWxsbycpO1xuICAgICAgY29uc3QgZmlyc3ROYW1lID0gYXdhaXQgcGFnZS4kZXZhbChcbiAgICAgICAgJ2lucHV0W25hbWU9XCJmaXJzdE5hbWVcIl0nLFxuICAgICAgICAoZWwpID0+IGVsLnZhbHVlXG4gICAgICApO1xuXG4gICAgICBhd2FpdCBwYWdlLndhaXRGb3IoNTAwKTtcbiAgICAgIGF3YWl0IHBhZ2UuY2xpY2soJyNuZXh0Jyk7XG4gICAgICBhd2FpdCBwYWdlLndhaXRGb3JTZWxlY3RvcignaW5wdXRbbmFtZT1cImxhc3ROYW1lXCJdJyk7XG4gICAgICBhd2FpdCBwYWdlLnR5cGUoJ2lucHV0W25hbWU9XCJsYXN0TmFtZVwiXScsICdXb3JsZCcpO1xuICAgICAgY29uc3QgbGFzdE5hbWUgPSBhd2FpdCBwYWdlLiRldmFsKFxuICAgICAgICAnaW5wdXRbbmFtZT1cImxhc3ROYW1lXCJdJyxcbiAgICAgICAgKGVsKSA9PiBlbC52YWx1ZVxuICAgICAgKTtcblxuICAgICAgYXdhaXQgcGFnZS53YWl0Rm9yKDUwMCk7XG4gICAgICBjb25zdCBmb3JtRGF0YSA9IHtcbiAgICAgICAgZmlyc3ROYW1lOiBmaXJzdE5hbWUsXG4gICAgICAgIGxhc3ROYW1lOiBsYXN0TmFtZVxuICAgICAgfTtcblxuICAgICAgYXdhaXQgYnJvd3Nlci5jbG9zZSgpO1xuXG4gICAgICBleHBlY3QoZm9ybURhdGEpLnRvLmRlZXAuZXF1YWwoZXhwZWN0ZWQpOyAvLyBldmF1YXRlcyB0byB0cnVlIGlmIGZvcm0gZmllbGRzIGhvbGQgY29ycmVjdCB2YWx1ZVxuICAgIH0pO1xuICB9KTtcbn0pO1xuIikpLG1keCgiaDIiLHsiaWQiOiJsb2dnaW5nIn0sIkxvZ2dpbmciKSxtZHgoInByZSIsbnVsbCxtZHgoImNvZGUiLE9iamVjdC5hc3NpZ24oe3BhcmVudE5hbWU6InByZSJ9LHt9KSwiLy8gb3V0cHV0IGxvZ3NcbnBhZ2Uub24oJ2NvbnNvbGUnLCBtc2cgPT4gY29uc29sZS5sb2coJ1BBR0UgTE9HOicsIG1zZy50ZXh0KCkpKTtcblxuLy8gc2hvdyBkZXZ0b29sc1xuY29uc3QgYnJvd3NlciA9IGF3YWl0IHB1cHBldGVlci5sYXVuY2goe2RldnRvb2xzOiB0cnVlfSk7XG4iKSkpO31pZih0eXBlb2YgTURYQ29udGVudCE9PSd1bmRlZmluZWQnJiZNRFhDb250ZW50JiZNRFhDb250ZW50PT09T2JqZWN0KE1EWENvbnRlbnQpJiZPYmplY3QuaXNFeHRlbnNpYmxlKE1EWENvbnRlbnQpKXtPYmplY3QuZGVmaW5lUHJvcGVydHkoTURYQ29udGVudCwnX19maWxlbWV0YScse2VudW1lcmFibGU6dHJ1ZSxjb25maWd1cmFibGU6dHJ1ZSx2YWx1ZTp7bmFtZToiTURYQ29udGVudCIsZmlsZW5hbWU6Im1hbnVhbC9UZXN0aW5nL3B1cHBldGVlci5tZCJ9fSk7fU1EWENvbnRlbnQuaXNNRFhDb21wb25lbnQ9dHJ1ZTs="},{"version":3,"sources":["/Users/dennis.okeeffe/Project-Imposter/developer-notes/manual/Testing/puppeteer.md"],"names":["React","mdx","makeShortcode","name","MDXDefaultShortcode","props","console","warn","layoutProps","MDXLayout","MDXContent","components","isMDXComponent"],"mappings":"iMAAA,cACE,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,GAAT,KAAoB,eAApB,CACA,cAGF,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAAAC,IAAI,QAAI,SAASC,CAAAA,mBAAT,CAA6BC,KAA7B,CAAoC,CAChEC,OAAO,CAACC,IAAR,CAAa,aAAeJ,IAAf,CAAsB,yEAAnC,EACA,MAAO,WAASE,KAAT,CAAP,CACD,CAHyB,EAA1B,CAKA,GAAMG,CAAAA,WAAW,CAAG,EAApB,CAGA,GAAMC,CAAAA,SAAS,CAAG,SAAlB,CACA,cAAe,SAASC,CAAAA,UAAT,MAGZ,IAFDC,CAAAA,UAEC,MAFDA,UAEC,CADEN,KACF,+CACD,MAAO,KAAC,SAAD,kBAAeG,WAAf,CAAgCH,KAAhC,EAAuC,UAAU,CAAEM,UAAnD,CAA+D,OAAO,CAAC,WAAvE,GACL,cADK,CAEL,uCAFK,CAGL,SAAQ,CACN,KAAM,iBADA,CAAR,oBAHK,CAML,SAAQ,CACN,KAAM,WADA,CAAR,aANK,CASL,SAAQ,CACN,KAAM,WADA,CAAR,aATK,CAYL,cACE,UAAI,UAAU,CAAC,IAAf,EAAoB,uBAAG,UAAU,CAAC,IAAd,EAAuB,CACvC,OAAQ,sBAD+B,CAAvB,kBAApB,CADF,CAIE,UAAI,UAAU,CAAC,IAAf,EAAoB,uBAAG,UAAU,CAAC,IAAd,EAAuB,CACvC,OAAQ,4BAD+B,CAAvB,aAApB,CAJF,CAOE,UAAI,UAAU,CAAC,IAAf,EAAoB,uBAAG,UAAU,CAAC,IAAd,EAAuB,CACvC,OAAQ,mCAD+B,CAAvB,eAApB,CAPF,CAUE,UAAI,UAAU,CAAC,IAAf,EAAoB,uBAAG,UAAU,CAAC,IAAd,EAAuB,CACvC,OAAQ,mEAD+B,CAAvB,kBAApB,CAVF,CAZK,CA0BL,SAAQ,CACN,KAAM,OADA,CAAR,SA1BK,CA6BL,uJAA8I,kBAAY,UAAU,CAAC,GAAvB,oBAA9I,oEA7BK,CA8BL,eAAK,0BAAM,UAAU,CAAC,KAAjB,EAA2B,CAC5B,YAAa,qBADe,CAA3B,29CAAL,CA9BK,CA4EL,SAAQ,CACN,KAAM,SADA,CAAR,WA5EK,CA+EL,eAAK,0BAAM,UAAU,CAAC,KAAjB,EAA2B,EAA3B,sKAAL,CA/EK,CAAP,CAsFD,C,uQAEDD,UAAU,CAACE,cAAX,CAA4B,IAA5B","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <hr></hr>\n    <p>{`Author: Dennis O'Keeffe`}</p>\n    <h2 {...{\n      \"id\": \"section-testing\"\n    }}>{`Section: Testing`}</h2>\n    <h1 {...{\n      \"id\": \"puppeteer\"\n    }}>{`Puppeteer`}</h1>\n    <h2 {...{\n      \"id\": \"resources\"\n    }}>{`Resources`}</h2>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://mochajs.org/\"\n        }}>{`Mocha Website`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"http://www.chaijs.com/api/\"\n        }}>{`Chai API`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"http://airbnb.io/enzyme/docs/api/\"\n        }}>{`Enzyme API`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://github.com/GoogleChrome/puppeteer/blob/master/docs/api.md\"\n        }}>{`Puppeteer API`}</a></li>\n    </ul>\n    <h2 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h2>\n    <p>{`To test the UI itself, we can use Puppeteer, Chrome's Headless Browser to evaluate on the UI itself. Puppeteer can also be set to have `}<inlineCode parentName=\"p\">{`headless: false`}</inlineCode>{`, allowing the user to record or watch the test on their screen.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`const puppeteer = require('puppeteer');\n\n// Test suite\ndescribe('PageHome functionality', () => {\n  // Test suite within another test suite - useful for subsectioning tests within a component/page\n  describe('Simple Puppeteer UI test for form elements', () => {\n    it('firstName and lastName from Puppeteer deep equal expected schema', async () => {\n      const expected = {\n        firstName: 'Hello',\n        lastName: 'World'\n      };\n\n      const browser = await puppeteer.launch({ headless: false });\n      const page = await browser.newPage();\n      await page.goto('http://localhost:3000');\n      await page.screenshot({ path: 'example.png' }); // create an example screenshot of current UI state\n      await page.type('input[name=\"firstName\"]', 'Hello');\n      const firstName = await page.$eval(\n        'input[name=\"firstName\"]',\n        (el) => el.value\n      );\n\n      await page.waitFor(500);\n      await page.click('#next');\n      await page.waitForSelector('input[name=\"lastName\"]');\n      await page.type('input[name=\"lastName\"]', 'World');\n      const lastName = await page.$eval(\n        'input[name=\"lastName\"]',\n        (el) => el.value\n      );\n\n      await page.waitFor(500);\n      const formData = {\n        firstName: firstName,\n        lastName: lastName\n      };\n\n      await browser.close();\n\n      expect(formData).to.deep.equal(expected); // evauates to true if form fields hold correct value\n    });\n  });\n});\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"logging\"\n    }}>{`Logging`}</h2>\n    <pre><code parentName=\"pre\" {...{}}>{`// output logs\npage.on('console', msg => console.log('PAGE LOG:', msg.text()));\n\n// show devtools\nconst browser = await puppeteer.launch({devtools: true});\n`}</code></pre>\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  "]}]}