{"remainingRequest":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/docz-core/node_modules/babel-loader/lib/index.js??ref--6-1!/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/@mdx-js/loader/index.js??ref--6-2!/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/source-map-loader/index.js!/Users/dennis.okeeffe/Project-Imposter/developer-notes/manual/Hygen/intro.md","dependencies":[{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/manual/Hygen/intro.md","mtime":1562563032039},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/cache-loader/dist/cjs.js","mtime":1581496618588},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/docz-core/node_modules/babel-loader/lib/index.js","mtime":1578565694890},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/@mdx-js/loader/index.js","mtime":1581496618277},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/source-map-loader/index.js","mtime":1580255490569}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/dennis.okeeffe/Project-Imposter/developer-notes/manual/Hygen/intro.md"],"names":["React","mdx","makeShortcode","name","MDXDefaultShortcode","props","console","warn","layoutProps","MDXLayout","MDXContent","components","isMDXComponent"],"mappings":"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","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"intro-to-hygen\"\n    }}>{`Intro to Hygen`}</h1>\n    <p>{`Hygen is a really great template engine that allows us to harness the power of multiple JS libraries and use them to make our lives easier.`}</p>\n    <h2 {...{\n      \"id\": \"links\"\n    }}>{`Links`}</h2>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"http://hygen.io/\"\n        }}>{`Hygen.io site`}</a></li>\n    </ul>\n    <h2 {...{\n      \"id\": \"setup\"\n    }}>{`Setup`}</h2>\n    <p>{`First, ensure that you install Hygen.`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`npm i -g hygen\n`}</code></pre>\n    <p>{`Hygen then uses the `}<inlineCode parentName=\"p\">{`_templates`}</inlineCode>{` folder on direction for what to create.`}</p>\n    <p>{`The `}<inlineCode parentName=\"p\">{`_templates`}</inlineCode>{` folder may have a structure like so:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`_templates\n└── react\n    ├── component\n    │   ├── mocha.ejs.t\n    │   ├── prompt.js\n    │   ├── puppeteer.ejs.t\n    │   ├── readme.ejs.t\n    │   ├── story.ejs.t\n    │   ├── styles.ejs.t\n    │   └── view.ejs.t\n    ├── component-promptless\n    │   ├── mocha.ejs.t\n    │   ├── puppeteer.ejs.t\n    │   ├── readme.ejs.t\n    │   ├── story.ejs.t\n    │   ├── styles.ejs.t\n    │   └── view.ejs.t\n    ├── multi-component\n    │   ├── container.ejs.t\n    │   ├── default.ejs.t\n    │   ├── docs.ejs.t\n    │   ├── mocha.ejs.t\n    │   ├── prompt.js\n    │   ├── puppeteer.ejs.t\n    │   ├── readme.ejs.t\n    │   ├── typeOne.ejs.t\n    │   ├── typeTwo.ejs.t\n    │   └── view.ejs.t\n    ├── reducer\n    │   ├── prompt.js\n    │   └── reducer.ejs.t\n    └── redux-component\n        ├── container.ejs.t\n        ├── mocha.ejs.t\n        ├── prompt.js\n        ├── puppeteer.ejs.t\n        ├── readme.ejs.t\n        ├── story.ejs.t\n        └── view.ejs.t\n`}</code></pre>\n    <p>{`How this works in practise is that you can invoke the following calls and Hygen will generate those files according to the rules:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`# Examples\n\n# Generate the files from react > components\nhygen react component\n# Generate the files from react > reducer\nhygen react reducer\n`}</code></pre>\n    <p>{`Hygen can work using a prompt or without one. I recommend going with, and using `}<inlineCode parentName=\"p\">{`prompt.js`}</inlineCode>{` to set the questions.`}</p>\n    <p>{`For an example from start to finish, I will demonstate using `}<inlineCode parentName=\"p\">{`hygen react component`}</inlineCode>{`.`}</p>\n    <h2 {...{\n      \"id\": \"-hygen-react-component\"\n    }}>{`> hygen react component`}</h2>\n    <p>{`Running the command will first look for a `}<inlineCode parentName=\"p\">{`prompt.js`}</inlineCode>{` file.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`module.exports = [\n    {\n        type: 'input',\n        name: 'name',\n        message: \"What's the name?\"\n    },\n    {\n        type: 'input',\n        name: 'message',\n        message: \"What's the message?\"\n    }\n];\n`}</code></pre>\n    <p>{`Hygen uses Inquirer (which in turn uses RxJS) to create prompts. In this example, answering `}<inlineCode parentName=\"p\">{`name`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`message`}</inlineCode>{` will in turn create variables that are used thorugh the `}<inlineCode parentName=\"p\">{`[file].ejs.t`}</inlineCode>{` files.`}</p>\n    <p>{`Hygen will then go through the rest of the files and export them to where is defined at the top of the `}<inlineCode parentName=\"p\">{`[file].ejs.t`}</inlineCode>{` file. For example, `}<inlineCode parentName=\"p\">{`mocha.ejs.t`}</inlineCode>{` will have:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`---\nto: src/components/<%= name %>/<%= name %>.mocha.js\n---\n`}</code></pre>\n    <p>{`If we enter name `}<inlineCode parentName=\"p\">{`PageTestNewFiles`}</inlineCode>{`, it will output file `}<inlineCode parentName=\"p\">{`src/components/PageTestNewFiles/PageTestNewFiles.mocha.js`}</inlineCode>{`. This will continue for all the files, and so in `}<inlineCode parentName=\"p\">{`src/components/PageTestNewFiles`}</inlineCode>{` we will end up with the following:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-Javascript\"\n      }}>{`PageTestNewFiles\n├── PageTestNewFiles.mocha.js\n├── PageTestNewFiles.puppeteer.js\n├── PageTestNewFiles.storybook.js\n├── README.md\n├── index.js\n└── styles.scss\n`}</code></pre>\n    <p>{`Where `}<inlineCode parentName=\"p\">{`<%= name %>`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`<%= message %>`}</inlineCode>{` is found throughout those files will be in turn replaced with the entered values.`}</p>\n    <p>{`If there are any issues with the Hygen generated files, go to the template file and change the templates to resolve any issues.`}</p>\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  "]}]}