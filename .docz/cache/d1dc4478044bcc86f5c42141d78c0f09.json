{"remainingRequest":"/Users/okeeffe_d/Business/Documentation/node_modules/babel-loader/lib/index.js?{\"presets\":[[\"/Users/okeeffe_d/Business/Documentation/node_modules/babel-preset-docz/dist/index.js\",{\"flow\":true,\"typescript\":false,\"parseProps\":true}]],\"plugins\":[[\"/Users/okeeffe_d/Business/Documentation/node_modules/docz-utils/lib/named-asset-import.js\",{\"loaderMap\":{\"svg\":{\"ReactComponent\":\"@svgr/webpack?-prettier,-svgo![path]\"}}}],\"/Users/okeeffe_d/Business/Documentation/node_modules/react-hot-loader/babel.js\"],\"babelrc\":false,\"cacheCompression\":false,\"compact\":false}!/Users/okeeffe_d/Business/Documentation/manual/WordPress/WP-PC-Cheat-Sheet.md","dependencies":[{"path":"/Users/okeeffe_d/Business/Documentation/manual/WordPress/WP-PC-Cheat-Sheet.md","mtime":1548209344490},{"path":"/Users/okeeffe_d/Business/Documentation/node_modules/cache-loader/dist/cjs.js","mtime":1548134640245},{"path":"/Users/okeeffe_d/Business/Documentation/node_modules/babel-loader/lib/index.js","mtime":1548134640227}],"contextDependencies":[],"result":["var _jsxFileName = \"/Users/okeeffe_d/Business/Documentation/manual/WordPress/WP-PC-Cheat-Sheet.md\";\n\n(function () {\n  var enterModule = require('react-hot-loader').enterModule;\n\n  enterModule && enterModule(module);\n})();\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport React from 'react';\nimport { MDXTag } from '@mdx-js/tag';\n\nvar MDXContent =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(MDXContent, _React$Component);\n\n  function MDXContent(props) {\n    var _this;\n\n    _classCallCheck(this, MDXContent);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MDXContent).call(this, props));\n    _this.layout = null;\n    return _this;\n  }\n\n  _createClass(MDXContent, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          components = _this$props.components,\n          props = _objectWithoutProperties(_this$props, [\"components\"]);\n\n      return React.createElement(MDXTag, {\n        name: \"wrapper\",\n        components: components,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14\n        },\n        __self: this\n      }, React.createElement(MDXTag, {\n        name: \"h1\",\n        components: components,\n        props: {\n          \"id\": \"wp-pres-company-cheat-sheet\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      }, \"WP PRES COMPANY CHEAT SHEET\"), React.createElement(MDXTag, {\n        name: \"ul\",\n        components: components,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }, React.createElement(MDXTag, {\n        name: \"li\",\n        components: components,\n        parentName: \"ul\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }, React.createElement(MDXTag, {\n        name: \"a\",\n        components: components,\n        parentName: \"li\",\n        props: {\n          \"href\": \"#wp-pres-company-cheat-sheet\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }, \"WP PRES COMPANY CHEAT SHEET\"), React.createElement(MDXTag, {\n        name: \"ul\",\n        components: components,\n        parentName: \"li\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }, React.createElement(MDXTag, {\n        name: \"li\",\n        components: components,\n        parentName: \"ul\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, React.createElement(MDXTag, {\n        name: \"a\",\n        components: components,\n        parentName: \"li\",\n        props: {\n          \"href\": \"#wppres-1-faq\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, \"WPPRES-1: FAQ\")), React.createElement(MDXTag, {\n        name: \"li\",\n        components: components,\n        parentName: \"ul\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, React.createElement(MDXTag, {\n        name: \"a\",\n        components: components,\n        parentName: \"li\",\n        props: {\n          \"href\": \"#wppres-2-custom-type-relationships\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, \"WPPRES-2: Custom Type Relationships\")), React.createElement(MDXTag, {\n        name: \"li\",\n        components: components,\n        parentName: \"ul\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, React.createElement(MDXTag, {\n        name: \"a\",\n        components: components,\n        parentName: \"li\",\n        props: {\n          \"href\": \"#wppres-3-example-of-rendering-a-twig-file-using-timber-wp-functions\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, \"WPPRES-3: Example of Rendering a .twig file using Timber WP functions\")), React.createElement(MDXTag, {\n        name: \"li\",\n        components: components,\n        parentName: \"ul\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, React.createElement(MDXTag, {\n        name: \"a\",\n        components: components,\n        parentName: \"li\",\n        props: {\n          \"href\": \"#wppres-4-example-php-functionsphp\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, \"WPPRES-4: Example PHP functions.php\")), React.createElement(MDXTag, {\n        name: \"li\",\n        components: components,\n        parentName: \"ul\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, React.createElement(MDXTag, {\n        name: \"a\",\n        components: components,\n        parentName: \"li\",\n        props: {\n          \"href\": \"#wppres-5-creating-ajax-loading-example\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, \"WPPRES-5: Creating AJAX (Loading example)\"))))), React.createElement(MDXTag, {\n        name: \"h2\",\n        components: components,\n        props: {\n          \"id\": \"wppres-1-faq\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, \"WPPRES-1: FAQ\"), React.createElement(MDXTag, {\n        name: \"p\",\n        components: components,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, React.createElement(MDXTag, {\n        name: \"strong\",\n        components: components,\n        parentName: \"p\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, \"Q: I'm having a database connection failure through MAMP\")), React.createElement(MDXTag, {\n        name: \"p\",\n        components: components,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, \"A: Double check the wp_options in the siteurl and home settings and that they correctly match MAMP. If you are on the default MAMP ports, you may need localhost:8888 in both addresses. Also check the wp_config.php file in your text editor to ensure the content URL is also correct.\"), React.createElement(MDXTag, {\n        name: \"p\",\n        components: components,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, \"Also be sure to check your /etc/hosts file to see what address and terms are set up and that you restart the mySQL daemon, MAMP and Sequel Pro.\"), React.createElement(MDXTag, {\n        name: \"p\",\n        components: components,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, React.createElement(MDXTag, {\n        name: \"strong\",\n        components: components,\n        parentName: \"p\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, \"Q: Adjust get_posts posts_per_page for a data\", \"[\\\"term\\\"]\", \" request\")), React.createElement(MDXTag, {\n        name: \"p\",\n        components: components,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, \"A: Add it as an argument in twig or create a custom function adjusting the posts_per_page. You can pass any get_posts properties as arguments here.\"), React.createElement(MDXTag, {\n        name: \"p\",\n        components: components,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, React.createElement(MDXTag, {\n        name: \"strong\",\n        components: components,\n        parentName: \"p\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, \"Q: Where can I find what I need?\")), React.createElement(MDXTag, {\n        name: \"p\",\n        components: components,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, \"A: Check against the staging website if it is up to grab things like taxonomies, types, and to figure out the layout.\"), React.createElement(MDXTag, {\n        name: \"h2\",\n        components: components,\n        props: {\n          \"id\": \"wppres-2-custom-type-relationships\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, \"WPPRES-2: Custom Type Relationships\"), React.createElement(MDXTag, {\n        name: \"pre\",\n        components: components,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, React.createElement(MDXTag, {\n        name: \"code\",\n        components: components,\n        parentName: \"pre\",\n        props: {\n          \"className\": \"language-php\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, \"// in author-articles.php\\n\\n// be sure to require it in the functions.php file!\\n\\n<?php\\n\\nclass AuthorArticles {\\n\\n    // Get all locations w/ recent posts\\n    public static function getAuthorArticles($author) {\\n\\n        $args = new WP_Query([\\n            'post_type' => 'post',\\n            'no_found_rows' => true,\\n            'fields' => 'ids',\\n            'orderby' => 'date',\\n            'order' => 'desc',\\n            'meta_query' => [\\n                    [\\n                        'key' => 'article_author',\\n                        'value' => $author,\\n                        'compare' => 'LIKE'\\n                    ]\\n                ]\\n        ]);\\n\\n        $postIds = $args->get_posts();\\n\\n        $results = Timber::get_posts($postIds);\\n\\n        return Timber::get_posts($postIds);\\n    }\\n\\n}\\n\\n?>\\n\\n// example in use\\n// Author Template - single-authors.php file\\n\\n<?php\\n\\n/* Template Name: Author */\\n\\n$data = Context::getDefaultContext();\\n\\n$data['author'] = Timber::get_post();\\n\\n$data['posts'] = AuthorArticles::getAuthorArticles($data['author']->id);\\n\\n$data['breadcrumbs'] = [\\n    [\\n        'text' => 'Authors',\\n        'url' => $data['site']->url .'/authors'\\n    ]\\n];\\n\\n\\nTimber::render('author.twig', $data);\\n\\n?>\\n\")), React.createElement(MDXTag, {\n        name: \"h2\",\n        components: components,\n        props: {\n          \"id\": \"wppres-3-example-of-rendering-a-twig-file-using-timber-wp-functions\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, \"WPPRES-3: Example of Rendering a .twig file using Timber WP functions\"), React.createElement(MDXTag, {\n        name: \"ul\",\n        components: components,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, React.createElement(MDXTag, {\n        name: \"li\",\n        components: components,\n        parentName: \"ul\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, \"using the above examples\")), React.createElement(MDXTag, {\n        name: \"pre\",\n        components: components,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, React.createElement(MDXTag, {\n        name: \"code\",\n        components: components,\n        parentName: \"pre\",\n        props: {\n          \"className\": \"language-html\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, \"// __author.twig__\\n\\n{% if post.article_author %}\\n{% set author = TimberPost(post.get_field('article_author')) %}\\n<div class=\\\"author-container\\\">\\n    <p>Article By</p>\\n    <div class=\\\"author\\\">\\n        <div class=\\\"image\\\">\\n            {% set image = TimberImage(author.get_thumbnail) %}\\n            {% include 'partials/image.twig' with {\\n                image: image,\\n                size: 'square_400'\\n            } %}\\n        </div>\\n        <div class=\\\"info\\\">\\n            <h3 class=\\\"title\\\">{{ author.title }}</h3>\\n            {% for social in author.get_field('social') %}\\n                <div class='social'>\\n                    <a href='{{ social.url }}' target=\\\"_blank\\\" class='icon'>\\n                        <i class='{{ socialIcons[social.network] }}'></i>\\n                    </a>\\n                    <a href='{{ social.url }}' target=\\\"_blank\\\">\\n                        <span>{{ social.display }}</span>\\n                    </a>\\n                </div>\\n            {% endfor %}\\n            <a class=\\\"authorlink\\\" href=\\\"{{ author.link }}\\\">View Author Page</a>\\n        </div>\\n    </div>\\n</div>\\n{% endif %}\\n\\n***\\n\\n// __list.twig__\\n\\n<div class=\\\"list -post\\\">\\n    <ul class=\\\"list-items\\\">\\n    {% for post in posts %}\\n        {% include 'partials/post/list-item.twig' %}\\n    {% else %}\\n        <p>Sorry, no posts matched your criteria</p>\\n    {% endfor %}\\n    </ul>\\n</div>\\n\\n***\\n\\n__list-item.twig__\\n\\n<li class=\\\"list-item -post tile\\\">\\n    <a href=\\\"#\\\">\\n        <div class=\\\"image\\\">\\n            <img src=\\\"{{ post.get_thumbnail }}\\\" alt=\\\"\\\">\\n        </div>\\n        <div class=\\\"info\\\">\\n            <h3 class=\\\"title\\\">{{ post.title }}</h3>\\n            <p>{{ post.intro }}</p>\\n            <div class=\\\"read-more\\\">\\n                <a href=\\\"{{ post.link }}\\\">read more ></a>\\n            </div>\\n        </div>\\n    </a>\\n</li>\\n\")), React.createElement(MDXTag, {\n        name: \"h2\",\n        components: components,\n        props: {\n          \"id\": \"wppres-4-example-php-functionsphp\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }, \"WPPRES-4: Example PHP functions.php\"), React.createElement(MDXTag, {\n        name: \"pre\",\n        components: components,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }, React.createElement(MDXTag, {\n        name: \"code\",\n        components: components,\n        parentName: \"pre\",\n        props: {\n          \"className\": \"language-php\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }, \"<?php\\n\\nadd_filter('show_admin_bar', '__return_false');\\n\\nrequire_once('functions/routes.php');\\nrequire_once('functions/twig.php');\\nrequire_once('functions/theme_support.php');\\nrequire_once('functions/enqueue_scripts.php');\\nrequire_once('functions/acf.php');\\nrequire_once('functions/timber.php');\\nrequire_once('functions/context.php');\\nrequire_once('functions/locations.php');\\nrequire_once('functions/author_articles.php');\\nrequire_once('functions/infobox.php');\\n\\nif (!is_admin()) {\\n    require_once('functions/post_filters.php');\\n}\\n\\n?>\\n\")), React.createElement(MDXTag, {\n        name: \"h2\",\n        components: components,\n        props: {\n          \"id\": \"wppres-5-creating-ajax-loading-example\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }, \"WPPRES-5: Creating AJAX (Loading example)\"), React.createElement(MDXTag, {\n        name: \"p\",\n        components: components,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }, \"Using twig, variables were passed down to be used for things such as \", React.createElement(MDXTag, {\n        name: \"inlineCode\",\n        components: components,\n        parentName: \"p\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }, \"loadmore.twig\"), \", while a PHP class, routes and functions were set up to interact with the JS file.\"), React.createElement(MDXTag, {\n        name: \"p\",\n        components: components,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }, React.createElement(MDXTag, {\n        name: \"strong\",\n        components: components,\n        parentName: \"p\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }, \"function.php\")), React.createElement(MDXTag, {\n        name: \"pre\",\n        components: components,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }, React.createElement(MDXTag, {\n        name: \"code\",\n        components: components,\n        parentName: \"pre\",\n        props: {\n          \"className\": \"language-php\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }, \"<?php\\n...\\nrequire_once('functions/load_more.php');\\n...\\n?>\\n\")), React.createElement(MDXTag, {\n        name: \"p\",\n        components: components,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      }, React.createElement(MDXTag, {\n        name: \"strong\",\n        components: components,\n        parentName: \"p\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      }, \"loadmore.php\")), React.createElement(MDXTag, {\n        name: \"pre\",\n        components: components,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      }, React.createElement(MDXTag, {\n        name: \"code\",\n        components: components,\n        parentName: \"pre\",\n        props: {\n          \"className\": \"language-php\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      }, \"<?php\\n\\nclass LoadMore {\\n    public function loadNextSet($params) {\\n        $perPage = 6;\\n        $page = $params['page'];\\n        $category = $params['cat'];\\n        $data = Context::getDefaultContext();\\n        $data['category'] = new TimberTerm($category);\\n        $data['tag'] = 'tag';\\n\\n        $posts = $data['category']->get_posts([\\n          'posts_per_page' => $perPage,\\n          'orderby' => 'date',\\n          'order' => 'DESC',\\n          'offset' => ($perPage*$page) + 3,\\n        ]);\\n\\n        $data['posts'] = $posts;\\n\\n        Timber::render('partials/post/grid.twig', $data);\\n        exit();\\n    }\\n}\\n\\n?>\\n\")), React.createElement(MDXTag, {\n        name: \"p\",\n        components: components,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228\n        },\n        __self: this\n      }, React.createElement(MDXTag, {\n        name: \"strong\",\n        components: components,\n        parentName: \"p\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228\n        },\n        __self: this\n      }, \"routes.php\")), React.createElement(MDXTag, {\n        name: \"pre\",\n        components: components,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229\n        },\n        __self: this\n      }, React.createElement(MDXTag, {\n        name: \"code\",\n        components: components,\n        parentName: \"pre\",\n        props: {\n          \"className\": \"language-php\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229\n        },\n        __self: this\n      }, \"...\\n// $params are the :section, :cat and :page args\\nRoutes::map(':section/:cat/:page', function($params){\\n    $articles = new LoadMore();\\n    echo $articles->loadNextSet($params);\\n});\\n...\\n\")), React.createElement(MDXTag, {\n        name: \"pre\",\n        components: components,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237\n        },\n        __self: this\n      }, React.createElement(MDXTag, {\n        name: \"code\",\n        components: components,\n        parentName: \"pre\",\n        props: {},\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237\n        },\n        __self: this\n      }, \"__loadmore.twig__\\n\\n```html\\n<div class=\\\"loadmore-container\\\" data-page='1' data-section='{{ section }}' data-category='{{ category }}'>\\n    <a>Load More</a>\\n</div>\\n\")), React.createElement(MDXTag, {\n        name: \"p\",\n        components: components,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244\n        },\n        __self: this\n      }, React.createElement(MDXTag, {\n        name: \"strong\",\n        components: components,\n        parentName: \"p\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244\n        },\n        __self: this\n      }, \"load-more.js\")), React.createElement(MDXTag, {\n        name: \"pre\",\n        components: components,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245\n        },\n        __self: this\n      }, React.createElement(MDXTag, {\n        name: \"code\",\n        components: components,\n        parentName: \"pre\",\n        props: {\n          \"className\": \"language-javascript\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245\n        },\n        __self: this\n      }, \"var titleTagline = require('./title-tagline.js');\\n\\nvar loadMore = {\\n    $loadMoreContainer: $('.loadmore-container'),\\n    category: $('.loadmore-container').data('category'),\\n    section: $('.loadmore-container').data('section'),\\n    search: $('.loadmore-container').data('search'),\\n    page: $('.loadmore-container').data('page'),\\n    base_url: $('meta[name=base_url]').attr('content'),\\n    perPage: 6,\\n\\n    init: function() {\\n        // Show mega-menu when mega-menu link is focused\\n        loadMore.$loadMoreContainer.on('click', function(e) {\\n            e.preventDefault();\\n            if ($('ul.grid').length > 0) {\\n                loadMore.loadNextSection();\\n            } else {\\n                loadMore.loadNextSearch();\\n            }\\n        });\\n    },\\n\\n    loadNextSection: function() {\\n        return $.ajax({\\n            url:\\n                loadMore.base_url +\\n                '/section/' +\\n                loadMore.section +\\n                '/' +\\n                loadMore.category +\\n                '/' +\\n                loadMore.page,\\n            type: 'GET',\\n            success: loadMore.resultsSection,\\n            error: loadMore.outputError\\n        });\\n    },\\n\\n    loadNextSearch: function() {\\n        var urlString = loadMore.search;\\n        urlString = urlString.replace(' ', '+');\\n        console.log(urlString);\\n        return $.ajax({\\n            url:\\n                loadMore.base_url +\\n                '/search/' +\\n                urlString +\\n                '/' +\\n                loadMore.page,\\n            type: 'GET',\\n            success: loadMore.resultsSearch,\\n            error: loadMore.outputError\\n        });\\n    },\\n\\n    resultsSection: function(data) {\\n        var numPosts = $(data).find('li.-post').length;\\n        loadMore.page = parseInt(loadMore.page) + 1;\\n        var render = $(data)\\n            .find('li.-post')\\n            .unwrap();\\n        $('ul.grid')\\n            .last()\\n            .append(render);\\n\\n        if (numPosts < loadMore.perPage) {\\n            loadMore.hideViewAll();\\n        }\\n\\n        titleTagline.init();\\n        titleTagline.doneResizing();\\n    },\\n\\n    resultsSearch: function(data) {\\n        console.log(data);\\n\\n        var numPosts = $(data).find('li.list-item').length;\\n        loadMore.page = parseInt(loadMore.page) + 1;\\n\\n        var render = $(data)\\n            .find('li.list-item')\\n            .unwrap();\\n        $('ul.list')\\n            .last()\\n            .append(render);\\n\\n        if (numPosts < loadMore.perPage) {\\n            loadMore.hideViewAll();\\n        }\\n    },\\n\\n    hideViewAll: function() {\\n        loadMore.$loadMoreContainer.css('display', 'none');\\n    }\\n};\\n\\nmodule.exports = {\\n    init: loadMore.init\\n};\\n\")), React.createElement(MDXTag, {\n        name: \"p\",\n        components: components,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 346\n        },\n        __self: this\n      }, React.createElement(MDXTag, {\n        name: \"strong\",\n        components: components,\n        parentName: \"p\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 346\n        },\n        __self: this\n      }, \"loadmore.php\")), React.createElement(MDXTag, {\n        name: \"pre\",\n        components: components,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 347\n        },\n        __self: this\n      }, React.createElement(MDXTag, {\n        name: \"code\",\n        components: components,\n        parentName: \"pre\",\n        props: {\n          \"className\": \"language-php\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 347\n        },\n        __self: this\n      }, \"<?php\\n\\nclass LoadMore {\\n    public function loadNextLocationsSet($params) {\\n        $perPage = 6;\\n        $page = $params['page'];\\n        $category = $params['cat'];\\n        $data = Context::getDefaultContext();\\n        $data['category'] = new TimberTerm($category);\\n        $data['tag'] = 'tag';\\n\\n        $posts = $data['category']->get_posts([\\n          'posts_per_page' => $perPage,\\n          'orderby' => 'date',\\n          'order' => 'DESC',\\n          'offset' => ($perPage*$page) + 3,\\n        ]);\\n\\n        $data['posts'] = $posts;\\n\\n        Timber::render('partials/post/grid.twig', $data);\\n        exit();\\n    }\\n\\n    public function loadNextSearchSet($params) {\\n        $perPage = 6;\\n        $page = (int)$params['page'];\\n        $field = $params['search'];\\n        $offset = ($perPage*$page) + 4;\\n        $data = Context::getDefaultContext();\\n        $search = get_query_var('s');\\n        $searchTerm = htmlspecialchars($field);\\n\\n        $data['posts'] = SearchTerms::getSearchArticles($field, $offset, $perPage);\\n\\n        Timber::render('partials/post/list.twig', $data);\\n        exit();\\n    }\\n\\n    public function loadNextInspirationsSet($params) {\\n\\n        $exclusion = [];\\n\\n        $perPage = 6;\\n        $page = $params['page'];\\n        $category = $params['cat'];\\n        $data = Context::getDefaultContext();\\n        $data['category'] = new TimberTerm($category);\\n        $data['tag'] = 'tag';\\n\\n        if($featuredIds = $data['category']->featured) {\\n            $data['categoryFeatured'] = Timber::get_posts($featuredIds);\\n            $exclusion = self::updateExclusionList($data['categoryFeatured'], $exclusion);\\n        }\\n\\n        $posts = $data['category']->get_posts([\\n            'posts_per_page' => $perPage,\\n            'orderby' => 'date',\\n            'order' => 'DESC',\\n            'offset' => ($perPage*$page) + 4,\\n            'post__not_in' => $exclusion,\\n        ]);\\n\\n        $data['posts'] = $posts;\\n\\n        Timber::render('partials/post/grid.twig', $data);\\n        exit();\\n    }\\n\\n    static function updateExclusionList($original, $exclusion) {\\n        foreach($original as $post) {\\n            if($post) {\\n                array_push($exclusion, $post->id);\\n            }\\n        }\\n        return $exclusion;\\n    }\\n}\\n\\n?>\\n\")), React.createElement(MDXTag, {\n        name: \"h2\",\n        components: components,\n        props: {\n          \"id\": \"wppres-6-custom-search-terms\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 428\n        },\n        __self: this\n      }, \"WPPRES-6: Custom Search Terms\"), React.createElement(MDXTag, {\n        name: \"p\",\n        components: components,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 429\n        },\n        __self: this\n      }, \"This example was taken from YAC when it was required to search for a CPT ID and then use it to get some post ids returned with the latest meta data values.\"), React.createElement(MDXTag, {\n        name: \"pre\",\n        components: components,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 430\n        },\n        __self: this\n      }, React.createElement(MDXTag, {\n        name: \"code\",\n        components: components,\n        parentName: \"pre\",\n        props: {\n          \"className\": \"language-php\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 430\n        },\n        __self: this\n      }, \"// from functions > search_term.php\\n\\nglobal $wpdb;\\n\\n$park_ids = [];\\n$meta_arrays = [];\\n$posts_park = [];\\n\\nif (strlen($search_term) > 3) {\\n\\n    $park_post_type='parks';\\n    $park_post_status='publish';\\n\\n    // get the park ids that relate to the search\\n    $park_args = $wpdb->get_col( $wpdb->prepare(\\n            \\\"\\n            SELECT ID\\n            FROM $wpdb->posts WP\\n            WHERE WP.post_title LIKE '%%%s%%'\\n            AND post_type='%s'\\n            AND post_status='%s'\\n            \\\",\\n            esc_sql($search_term),\\n            esc_sql($park_post_type),\\n            esc_sql($park_post_status)\\n        )\\n    );\\n\\n    $park_ids = $park_args;\\n\\n    if ($park_ids != null ) {\\n\\n        $park_ids = esc_sql( $park_ids );\\n        $park_ids_str = \\\"'[^0-9]*\\\" . implode( \\\"[^0-9]*'|'[^0-9]*\\\", $park_ids ) . \\\"[^0-9]*'\\\";\\n        $park = 'park';\\n\\n        //find the parks\\n        $init_park = $wpdb->get_col( $wpdb->prepare(\\n                \\\"\\n                SELECT WP.ID\\n                FROM $wpdb->posts WP\\n                INNER JOIN $wpdb->postmeta PM\\n                ON ( WP.ID = PM.post_id )\\n                WHERE 1=1\\n                AND ( ( PM.meta_key = %s\\n                AND PM.meta_value REGEXP {$park_ids_str} ) )\\n                AND WP.post_type = 'post'\\n                AND (WP.post_status = 'publish')\\n                GROUP BY WP.ID\\n                ORDER BY WP.post_title DESC, WP.post_date DESC\\n                \\\",\\n                esc_sql($park)\\n            )\\n        );\\n\\n        // grab post results to allow metadata\\n        // comparison for park\\n        $results = Timber::get_posts($init_park);\\n\\n        // filter the results to ensure posts are associated with\\n        // the latest and correct `park` value\\n        if ($results) {\\n            foreach ($results as $result) {\\n                if (array_intersect($result->custom['park'], $park_ids)) {\\n                    $posts_park[] = $result->id;\\n                }\\n            }\\n        }\\n    }\\n}\\n\")));\n    }\n  }, {\n    key: \"__reactstandin__regenerateByEval\",\n    // @ts-ignore\n    value: function __reactstandin__regenerateByEval(key, code) {\n      // @ts-ignore\n      this[key] = eval(code);\n    }\n  }]);\n\n  return MDXContent;\n}(React.Component);\n\nexport { MDXContent as default };\n;\n\n(function () {\n  var reactHotLoader = require('react-hot-loader').default;\n\n  var leaveModule = require('react-hot-loader').leaveModule;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(MDXContent, \"MDXContent\", \"/Users/okeeffe_d/Business/Documentation/manual/WordPress/WP-PC-Cheat-Sheet.md\");\n  leaveModule(module);\n})();\n\n;\nMDXContent.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"MDXContent\"\n};",{"version":3,"sources":["/Users/okeeffe_d/Business/Documentation/manual/WordPress/WP-PC-Cheat-Sheet.md"],"names":["React","MDXTag","MDXContent","props","layout","components","Component"],"mappings":"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","sourcesContent":["\n  import React from 'react'\n  import { MDXTag } from '@mdx-js/tag'\n  \n\nexport default class MDXContent extends React.Component {\n  constructor(props) {\n    super(props)\n    this.layout = null\n  }\n  render() {\n    const { components, ...props } = this.props\n\n    return <MDXTag\n             name=\"wrapper\"\n             \n             components={components}><MDXTag name=\"h1\" components={components} props={{\"id\":\"wp-pres-company-cheat-sheet\"}}>{`WP PRES COMPANY CHEAT SHEET`}</MDXTag>\n{/* TOC */}\n<MDXTag name=\"ul\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"a\" components={components} parentName=\"li\" props={{\"href\":\"#wp-pres-company-cheat-sheet\"}}>{`WP PRES COMPANY CHEAT SHEET`}</MDXTag><MDXTag name=\"ul\" components={components} parentName=\"li\">\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"a\" components={components} parentName=\"li\" props={{\"href\":\"#wppres-1-faq\"}}>{`WPPRES-1: FAQ`}</MDXTag></MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"a\" components={components} parentName=\"li\" props={{\"href\":\"#wppres-2-custom-type-relationships\"}}>{`WPPRES-2: Custom Type Relationships`}</MDXTag></MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"a\" components={components} parentName=\"li\" props={{\"href\":\"#wppres-3-example-of-rendering-a-twig-file-using-timber-wp-functions\"}}>{`WPPRES-3: Example of Rendering a .twig file using Timber WP functions`}</MDXTag></MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"a\" components={components} parentName=\"li\" props={{\"href\":\"#wppres-4-example-php-functionsphp\"}}>{`WPPRES-4: Example PHP functions.php`}</MDXTag></MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"a\" components={components} parentName=\"li\" props={{\"href\":\"#wppres-5-creating-ajax-loading-example\"}}>{`WPPRES-5: Creating AJAX (Loading example)`}</MDXTag></MDXTag>\n</MDXTag></MDXTag>\n</MDXTag>\n{/* /TOC */}\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"wppres-1-faq\"}}>{`WPPRES-1: FAQ`}</MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"strong\" components={components} parentName=\"p\">{`Q: I'm having a database connection failure through MAMP`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`A: Double check the wp_options in the siteurl and home settings and that they correctly match MAMP. If you are on the default MAMP ports, you may need localhost:8888 in both addresses. Also check the wp_config.php file in your text editor to ensure the content URL is also correct.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Also be sure to check your /etc/hosts file to see what address and terms are set up and that you restart the mySQL daemon, MAMP and Sequel Pro.`}</MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"strong\" components={components} parentName=\"p\">{`Q: Adjust get_posts posts_per_page for a data`}{`[\"term\"]`}{` request`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`A: Add it as an argument in twig or create a custom function adjusting the posts_per_page. You can pass any get_posts properties as arguments here.`}</MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"strong\" components={components} parentName=\"p\">{`Q: Where can I find what I need?`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`A: Check against the staging website if it is up to grab things like taxonomies, types, and to figure out the layout.`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"wppres-2-custom-type-relationships\"}}>{`WPPRES-2: Custom Type Relationships`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-php\"}}>{`// in author-articles.php\n\n// be sure to require it in the functions.php file!\n\n<?php\n\nclass AuthorArticles {\n\n    // Get all locations w/ recent posts\n    public static function getAuthorArticles(\\$author) {\n\n        \\$args = new WP_Query([\n            'post_type' => 'post',\n            'no_found_rows' => true,\n            'fields' => 'ids',\n            'orderby' => 'date',\n            'order' => 'desc',\n            'meta_query' => [\n                    [\n                        'key' => 'article_author',\n                        'value' => \\$author,\n                        'compare' => 'LIKE'\n                    ]\n                ]\n        ]);\n\n        \\$postIds = \\$args->get_posts();\n\n        \\$results = Timber::get_posts(\\$postIds);\n\n        return Timber::get_posts(\\$postIds);\n    }\n\n}\n\n?>\n\n// example in use\n// Author Template - single-authors.php file\n\n<?php\n\n/* Template Name: Author */\n\n\\$data = Context::getDefaultContext();\n\n\\$data['author'] = Timber::get_post();\n\n\\$data['posts'] = AuthorArticles::getAuthorArticles(\\$data['author']->id);\n\n\\$data['breadcrumbs'] = [\n    [\n        'text' => 'Authors',\n        'url' => \\$data['site']->url .'/authors'\n    ]\n];\n\n\nTimber::render('author.twig', \\$data);\n\n?>\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"wppres-3-example-of-rendering-a-twig-file-using-timber-wp-functions\"}}>{`WPPRES-3: Example of Rendering a .twig file using Timber WP functions`}</MDXTag>\n<MDXTag name=\"ul\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`using the above examples`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-html\"}}>{`// __author.twig__\n\n{% if post.article_author %}\n{% set author = TimberPost(post.get_field('article_author')) %}\n<div class=\"author-container\">\n    <p>Article By</p>\n    <div class=\"author\">\n        <div class=\"image\">\n            {% set image = TimberImage(author.get_thumbnail) %}\n            {% include 'partials/image.twig' with {\n                image: image,\n                size: 'square_400'\n            } %}\n        </div>\n        <div class=\"info\">\n            <h3 class=\"title\">{{ author.title }}</h3>\n            {% for social in author.get_field('social') %}\n                <div class='social'>\n                    <a href='{{ social.url }}' target=\"_blank\" class='icon'>\n                        <i class='{{ socialIcons[social.network] }}'></i>\n                    </a>\n                    <a href='{{ social.url }}' target=\"_blank\">\n                        <span>{{ social.display }}</span>\n                    </a>\n                </div>\n            {% endfor %}\n            <a class=\"authorlink\" href=\"{{ author.link }}\">View Author Page</a>\n        </div>\n    </div>\n</div>\n{% endif %}\n\n***\n\n// __list.twig__\n\n<div class=\"list -post\">\n    <ul class=\"list-items\">\n    {% for post in posts %}\n        {% include 'partials/post/list-item.twig' %}\n    {% else %}\n        <p>Sorry, no posts matched your criteria</p>\n    {% endfor %}\n    </ul>\n</div>\n\n***\n\n__list-item.twig__\n\n<li class=\"list-item -post tile\">\n    <a href=\"#\">\n        <div class=\"image\">\n            <img src=\"{{ post.get_thumbnail }}\" alt=\"\">\n        </div>\n        <div class=\"info\">\n            <h3 class=\"title\">{{ post.title }}</h3>\n            <p>{{ post.intro }}</p>\n            <div class=\"read-more\">\n                <a href=\"{{ post.link }}\">read more ></a>\n            </div>\n        </div>\n    </a>\n</li>\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"wppres-4-example-php-functionsphp\"}}>{`WPPRES-4: Example PHP functions.php`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-php\"}}>{`<?php\n\nadd_filter('show_admin_bar', '__return_false');\n\nrequire_once('functions/routes.php');\nrequire_once('functions/twig.php');\nrequire_once('functions/theme_support.php');\nrequire_once('functions/enqueue_scripts.php');\nrequire_once('functions/acf.php');\nrequire_once('functions/timber.php');\nrequire_once('functions/context.php');\nrequire_once('functions/locations.php');\nrequire_once('functions/author_articles.php');\nrequire_once('functions/infobox.php');\n\nif (!is_admin()) {\n    require_once('functions/post_filters.php');\n}\n\n?>\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"wppres-5-creating-ajax-loading-example\"}}>{`WPPRES-5: Creating AJAX (Loading example)`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Using twig, variables were passed down to be used for things such as `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`loadmore.twig`}</MDXTag>{`, while a PHP class, routes and functions were set up to interact with the JS file.`}</MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"strong\" components={components} parentName=\"p\">{`function.php`}</MDXTag></MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-php\"}}>{`<?php\n...\nrequire_once('functions/load_more.php');\n...\n?>\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"strong\" components={components} parentName=\"p\">{`loadmore.php`}</MDXTag></MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-php\"}}>{`<?php\n\nclass LoadMore {\n    public function loadNextSet(\\$params) {\n        \\$perPage = 6;\n        \\$page = \\$params['page'];\n        \\$category = \\$params['cat'];\n        \\$data = Context::getDefaultContext();\n        \\$data['category'] = new TimberTerm(\\$category);\n        \\$data['tag'] = 'tag';\n\n        \\$posts = \\$data['category']->get_posts([\n          'posts_per_page' => \\$perPage,\n          'orderby' => 'date',\n          'order' => 'DESC',\n          'offset' => (\\$perPage*\\$page) + 3,\n        ]);\n\n        \\$data['posts'] = \\$posts;\n\n        Timber::render('partials/post/grid.twig', \\$data);\n        exit();\n    }\n}\n\n?>\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"strong\" components={components} parentName=\"p\">{`routes.php`}</MDXTag></MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-php\"}}>{`...\n// \\$params are the :section, :cat and :page args\nRoutes::map(':section/:cat/:page', function(\\$params){\n    \\$articles = new LoadMore();\n    echo \\$articles->loadNextSet(\\$params);\n});\n...\n`}</MDXTag></MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{}}>{`__loadmore.twig__\n\n\\`\\`\\`html\n<div class=\"loadmore-container\" data-page='1' data-section='{{ section }}' data-category='{{ category }}'>\n    <a>Load More</a>\n</div>\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"strong\" components={components} parentName=\"p\">{`load-more.js`}</MDXTag></MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-javascript\"}}>{`var titleTagline = require('./title-tagline.js');\n\nvar loadMore = {\n    \\$loadMoreContainer: \\$('.loadmore-container'),\n    category: \\$('.loadmore-container').data('category'),\n    section: \\$('.loadmore-container').data('section'),\n    search: \\$('.loadmore-container').data('search'),\n    page: \\$('.loadmore-container').data('page'),\n    base_url: \\$('meta[name=base_url]').attr('content'),\n    perPage: 6,\n\n    init: function() {\n        // Show mega-menu when mega-menu link is focused\n        loadMore.\\$loadMoreContainer.on('click', function(e) {\n            e.preventDefault();\n            if (\\$('ul.grid').length > 0) {\n                loadMore.loadNextSection();\n            } else {\n                loadMore.loadNextSearch();\n            }\n        });\n    },\n\n    loadNextSection: function() {\n        return \\$.ajax({\n            url:\n                loadMore.base_url +\n                '/section/' +\n                loadMore.section +\n                '/' +\n                loadMore.category +\n                '/' +\n                loadMore.page,\n            type: 'GET',\n            success: loadMore.resultsSection,\n            error: loadMore.outputError\n        });\n    },\n\n    loadNextSearch: function() {\n        var urlString = loadMore.search;\n        urlString = urlString.replace(' ', '+');\n        console.log(urlString);\n        return \\$.ajax({\n            url:\n                loadMore.base_url +\n                '/search/' +\n                urlString +\n                '/' +\n                loadMore.page,\n            type: 'GET',\n            success: loadMore.resultsSearch,\n            error: loadMore.outputError\n        });\n    },\n\n    resultsSection: function(data) {\n        var numPosts = \\$(data).find('li.-post').length;\n        loadMore.page = parseInt(loadMore.page) + 1;\n        var render = \\$(data)\n            .find('li.-post')\n            .unwrap();\n        \\$('ul.grid')\n            .last()\n            .append(render);\n\n        if (numPosts < loadMore.perPage) {\n            loadMore.hideViewAll();\n        }\n\n        titleTagline.init();\n        titleTagline.doneResizing();\n    },\n\n    resultsSearch: function(data) {\n        console.log(data);\n\n        var numPosts = \\$(data).find('li.list-item').length;\n        loadMore.page = parseInt(loadMore.page) + 1;\n\n        var render = \\$(data)\n            .find('li.list-item')\n            .unwrap();\n        \\$('ul.list')\n            .last()\n            .append(render);\n\n        if (numPosts < loadMore.perPage) {\n            loadMore.hideViewAll();\n        }\n    },\n\n    hideViewAll: function() {\n        loadMore.\\$loadMoreContainer.css('display', 'none');\n    }\n};\n\nmodule.exports = {\n    init: loadMore.init\n};\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"strong\" components={components} parentName=\"p\">{`loadmore.php`}</MDXTag></MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-php\"}}>{`<?php\n\nclass LoadMore {\n    public function loadNextLocationsSet(\\$params) {\n        \\$perPage = 6;\n        \\$page = \\$params['page'];\n        \\$category = \\$params['cat'];\n        \\$data = Context::getDefaultContext();\n        \\$data['category'] = new TimberTerm(\\$category);\n        \\$data['tag'] = 'tag';\n\n        \\$posts = \\$data['category']->get_posts([\n          'posts_per_page' => \\$perPage,\n          'orderby' => 'date',\n          'order' => 'DESC',\n          'offset' => (\\$perPage*\\$page) + 3,\n        ]);\n\n        \\$data['posts'] = \\$posts;\n\n        Timber::render('partials/post/grid.twig', \\$data);\n        exit();\n    }\n\n    public function loadNextSearchSet(\\$params) {\n        \\$perPage = 6;\n        \\$page = (int)\\$params['page'];\n        \\$field = \\$params['search'];\n        \\$offset = (\\$perPage*\\$page) + 4;\n        \\$data = Context::getDefaultContext();\n        \\$search = get_query_var('s');\n        \\$searchTerm = htmlspecialchars(\\$field);\n\n        \\$data['posts'] = SearchTerms::getSearchArticles(\\$field, \\$offset, \\$perPage);\n\n        Timber::render('partials/post/list.twig', \\$data);\n        exit();\n    }\n\n    public function loadNextInspirationsSet(\\$params) {\n\n        \\$exclusion = [];\n\n        \\$perPage = 6;\n        \\$page = \\$params['page'];\n        \\$category = \\$params['cat'];\n        \\$data = Context::getDefaultContext();\n        \\$data['category'] = new TimberTerm(\\$category);\n        \\$data['tag'] = 'tag';\n\n        if(\\$featuredIds = \\$data['category']->featured) {\n            \\$data['categoryFeatured'] = Timber::get_posts(\\$featuredIds);\n            \\$exclusion = self::updateExclusionList(\\$data['categoryFeatured'], \\$exclusion);\n        }\n\n        \\$posts = \\$data['category']->get_posts([\n            'posts_per_page' => \\$perPage,\n            'orderby' => 'date',\n            'order' => 'DESC',\n            'offset' => (\\$perPage*\\$page) + 4,\n            'post__not_in' => \\$exclusion,\n        ]);\n\n        \\$data['posts'] = \\$posts;\n\n        Timber::render('partials/post/grid.twig', \\$data);\n        exit();\n    }\n\n    static function updateExclusionList(\\$original, \\$exclusion) {\n        foreach(\\$original as \\$post) {\n            if(\\$post) {\n                array_push(\\$exclusion, \\$post->id);\n            }\n        }\n        return \\$exclusion;\n    }\n}\n\n?>\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"wppres-6-custom-search-terms\"}}>{`WPPRES-6: Custom Search Terms`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`This example was taken from YAC when it was required to search for a CPT ID and then use it to get some post ids returned with the latest meta data values.`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-php\"}}>{`// from functions > search_term.php\n\nglobal \\$wpdb;\n\n\\$park_ids = [];\n\\$meta_arrays = [];\n\\$posts_park = [];\n\nif (strlen(\\$search_term) > 3) {\n\n    \\$park_post_type='parks';\n    \\$park_post_status='publish';\n\n    // get the park ids that relate to the search\n    \\$park_args = \\$wpdb->get_col( \\$wpdb->prepare(\n            \"\n            SELECT ID\n            FROM \\$wpdb->posts WP\n            WHERE WP.post_title LIKE '%%%s%%'\n            AND post_type='%s'\n            AND post_status='%s'\n            \",\n            esc_sql(\\$search_term),\n            esc_sql(\\$park_post_type),\n            esc_sql(\\$park_post_status)\n        )\n    );\n\n    \\$park_ids = \\$park_args;\n\n    if (\\$park_ids != null ) {\n\n        \\$park_ids = esc_sql( \\$park_ids );\n        \\$park_ids_str = \"'[^0-9]*\" . implode( \"[^0-9]*'|'[^0-9]*\", \\$park_ids ) . \"[^0-9]*'\";\n        \\$park = 'park';\n\n        //find the parks\n        \\$init_park = \\$wpdb->get_col( \\$wpdb->prepare(\n                \"\n                SELECT WP.ID\n                FROM \\$wpdb->posts WP\n                INNER JOIN \\$wpdb->postmeta PM\n                ON ( WP.ID = PM.post_id )\n                WHERE 1=1\n                AND ( ( PM.meta_key = %s\n                AND PM.meta_value REGEXP {\\$park_ids_str} ) )\n                AND WP.post_type = 'post'\n                AND (WP.post_status = 'publish')\n                GROUP BY WP.ID\n                ORDER BY WP.post_title DESC, WP.post_date DESC\n                \",\n                esc_sql(\\$park)\n            )\n        );\n\n        // grab post results to allow metadata\n        // comparison for park\n        \\$results = Timber::get_posts(\\$init_park);\n\n        // filter the results to ensure posts are associated with\n        // the latest and correct \\`park\\` value\n        if (\\$results) {\n            foreach (\\$results as \\$result) {\n                if (array_intersect(\\$result->custom['park'], \\$park_ids)) {\n                    \\$posts_park[] = \\$result->id;\n                }\n            }\n        }\n    }\n}\n`}</MDXTag></MDXTag>\n           </MDXTag>\n  }\n}\n  "]}]}