{"remainingRequest":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/docz-core/node_modules/babel-loader/lib/index.js??ref--6-1!/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/@mdx-js/loader/index.js??ref--6-2!/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/source-map-loader/index.js!/Users/dennis.okeeffe/Project-Imposter/developer-notes/manual/Principles/Principles.md","dependencies":[{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/manual/Principles/Principles.md","mtime":1562563032077},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/cache-loader/dist/cjs.js","mtime":1581496618588},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/docz-core/node_modules/babel-loader/lib/index.js","mtime":1578565694890},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/@mdx-js/loader/index.js","mtime":1581496618277},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/source-map-loader/index.js","mtime":1580255490569}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/dennis.okeeffe/Project-Imposter/developer-notes/manual/Principles/Principles.md"],"names":["React","mdx","makeShortcode","name","MDXDefaultShortcode","props","console","warn","layoutProps","MDXLayout","MDXContent","components","require","isMDXComponent"],"mappings":"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","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"#styling-guidelines-and-principles\"\n        }}>{`Styling Guidelines and Principles`}</a><ul parentName=\"li\">\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#challenges\"\n            }}>{`Challenges`}</a><ul parentName=\"li\">\n              <li parentName=\"ul\"><a parentName=\"li\" {...{\n                  \"href\": \"#current-challenges\"\n                }}>{`Current challenges`}</a></li>\n              <li parentName=\"ul\"><a parentName=\"li\" {...{\n                  \"href\": \"#naming-challenges\"\n                }}>{`Naming challenges`}</a></li>\n            </ul></li>\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#naming-conventions\"\n            }}>{`Naming conventions`}</a><ul parentName=\"li\">\n              <li parentName=\"ul\"><a parentName=\"li\" {...{\n                  \"href\": \"#links\"\n                }}>{`Links`}</a></li>\n            </ul></li>\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#types\"\n            }}>{`Types`}</a></li>\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#ordering\"\n            }}>{`Ordering`}</a></li>\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#example-layout\"\n            }}>{`Example layout`}</a></li>\n        </ul></li>\n    </ul>\n    <h1 {...{\n      \"id\": \"styling-guidelines-and-principles\"\n    }}>{`Styling Guidelines and Principles`}</h1>\n    <h2 {...{\n      \"id\": \"challenges\"\n    }}>{`Challenges`}</h2>\n    <h3 {...{\n      \"id\": \"current-challenges\"\n    }}>{`Current challenges`}</h3>\n    <ol>\n      <li parentName=\"ol\">{`Standardising style configuration:`}<ul parentName=\"li\">\n          <li parentName=\"ul\">{`themes`}</li>\n          <li parentName=\"ul\">{`colours`}</li>\n          <li parentName=\"ul\">{`animation`}</li>\n          <li parentName=\"ul\">{`elevation`}</li>\n          <li parentName=\"ul\">{`typography`}</li>\n          <li parentName=\"ul\">{`grid`}</li>\n          <li parentName=\"ul\">{`breakpoints`}</li>\n          <li parentName=\"ul\">{`iconography`}</li>\n          <li parentName=\"ul\">{`naming conventions`}</li>\n          <li parentName=\"ul\">{`style order`}</li>\n          <li parentName=\"ul\">{`rules for classing`}</li>\n          <li parentName=\"ul\">{`relation to design`}</li>\n        </ul></li>\n      <li parentName=\"ol\">{`Standardising file system layout:`}<ul parentName=\"li\">\n          <li parentName=\"ul\">{`themes`}</li>\n          <li parentName=\"ul\">{`flexibility`}</li>\n          <li parentName=\"ul\">{`subdirectory structure (images, fonts, utils)`}</li>\n        </ul></li>\n      <li parentName=\"ol\">{`Code quality`}<ul parentName=\"li\">\n          <li parentName=\"ul\">{`documentaiton`}</li>\n          <li parentName=\"ul\">{`testing`}</li>\n          <li parentName=\"ul\">{`reusability`}</li>\n          <li parentName=\"ul\">{`callback ability when updating repos`}</li>\n          <li parentName=\"ul\">{`accessibility`}</li>\n          <li parentName=\"ul\">{`dependency abuse`}</li>\n        </ul></li>\n      <li parentName=\"ol\">{`Resources`}<ul parentName=\"li\">\n          <li parentName=\"ul\">{`references and direction`}</li>\n          <li parentName=\"ul\">{`onboarding`}</li>\n        </ul></li>\n    </ol>\n    <h3 {...{\n      \"id\": \"naming-challenges\"\n    }}>{`Naming challenges`}</h3>\n    <p>{`A list of challeneges when thinking of naming conventions:`}</p>\n    <ol>\n      <li parentName=\"ol\">{`How can styling conventions apply between frameworks?`}</li>\n      <li parentName=\"ol\">{`What conventions do we need to sacrifice between different frameworks?`}</li>\n      <li parentName=\"ol\">{`How is this consumable for both the dev and designer ecosystem?`}</li>\n      <li parentName=\"ol\">{`What file structures do we incorporate between partials to make them easily reusable.`}</li>\n      <li parentName=\"ol\">{`How can we define class names that work for all the different types of code we write?`}</li>\n      <li parentName=\"ol\">{`How can we efficiently document and test our code?`}</li>\n      <li parentName=\"ol\">{`How can we maintain consistency in the way we write our styling?`}</li>\n      <li parentName=\"ol\">{`How can we enforce accessible, high standards for our HTML?`}</li>\n      <li parentName=\"ol\">{`How can we decouple and standardise things such as grids, animation speeds, iconography etc.?`}</li>\n    </ol>\n    <h2 {...{\n      \"id\": \"naming-conventions\"\n    }}>{`Naming conventions`}</h2>\n    <h3 {...{\n      \"id\": \"links\"\n    }}>{`Links`}</h3>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"http://thesassway.com/advanced/modular-css-naming-conventions\"\n        }}>{`Modular Sass`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"http://rscss.io/\"\n        }}>{`RSCSS`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"http://a11y-style-guide.com/style-guide/\"\n        }}>{`A11y Style Guide`}</a></li>\n    </ul>\n    <h2 {...{\n      \"id\": \"types\"\n    }}>{`Types`}</h2>\n    <p>{`Predetermined types by level:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-yml\"\n      }}>{`body:\n  header: # @classname header\n    # @children\n  # Top level for each section\n  section: # @classname section-name\n    # @children\n    container: # @classname container-name\n      # Base selection of rules\n      ? block\n      # @children\n      grid:\n        ? grid-item\n        # @children\n      table:\n        # @children\n        table-header:\n          # @children\n        table-data:\n          # @chidlren\n      list:\n        # react native only\n        list-item:\n          # @children\n      # ... more, maybe article etc\n      nav:\n        nav-item:\n          # @children\n  component: # @classname component-name\n    # Specific component based styling\n    # @children\n    # Base selection of rules\n    ? block\n    # @children\n    grid:\n      ? grid-item\n      # @children\n    table:\n      # @children\n      table-header:\n        # @children\n      table-data:\n        # @chidlren\n    list:\n      # react native only\n      list-item:\n        # @children\n    # ... more, maybe article etc\n    nav:\n      nav-item:\n        # @children\n  footer: # @classname footer - but maybe should be more specific\n    # @children\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"ordering\"\n    }}>{`Ordering`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-scss\"\n      }}>{`.selector {\n    /* Mixins + Extends */\n    @extend .selector-to-extend-from;\n    @include mixin;\n\n    /* Positioning */\n    position: absolute;\n    z-index: 10;\n    top: 0;\n    right: 0;\n\n    /* Display & Box Model */\n    display: inline-block;\n    overflow: hidden;\n    box-sizing: border-box;\n    padding: 10px;\n    border: 10px solid #333;\n    margin: 10px;\n\n    /* Sizing */\n    max-width: 100px;\n    width: 100%;\n    height: 100px;\n\n    /* Background */\n    background-color: #000;\n\n    /* Text */\n    font-family: sans-serif;\n    font-size: 16px;\n    line-height: 1.4;\n    text-align: right;\n    color: #fff\n\n    /* Transitions */\n    transition: all $speed ease-out;\n\n    /* Other */\n    cursor: pointer;\n\n    /* Modifiers */\n    &:last-of-type {\n        // Repeat Ordering Rules\n    }\n\n    &:hover,\n    &:focus {\n        // Repeat Ordering Rules\n    }\n\n    /* Media Breaks */\n    @include grid-media($mobile-grid) {\n        // Repeat Ordering Rules\n    }\n\n    /* Second-tier elements */\n    .selector-child {\n        // Repeat Ordering Rules\n    }\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"example-layout\"\n    }}>{`Example layout`}</h2>\n    <p><img alt=\"Example layout\" src={require(\"../assets/example-layout.png\")} /></p>\n    <p>{`The aim is that regardless of whether or not we are using a template engine, JSX, html or whatever that uses/doesn't use partials or components of some form that we are able to maintain consistency.`}</p>\n    <p>{`In the above image, let's look at how we would implement in a template engine like twig and then in React:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-html\"\n      }}>{`<!-- Section partial ~/partials/page-offers/section-offers.twig (TODO: decide naming strutures?) -->\n<section class=\"section-offers\">\n    <div class=\"container-content\">\n        <div class=\"block-content\"></div>\n        <div class=\"block-header\"></div>\n        <div class=\"grid-offers\">\n            {% for offer in offers %}\n                <div class=\"grid-offer\">\n                    {% include 'partials/component-offer/offer.twig' with {offer: offer} %}\n                </div>\n            {% endfor %}\n        </div>\n    </div>\n</section>\n\n<!-- Section partial ~/partials/page-offers/component-offer.twig (TODO: decide naming strutures?) -->\n<div class=\"component-offer\">\n    <div class=\"block-image\">\n        <img src=\"{{ offer.imgSource }}\" alt=\"{{ offer.alt }}\" class=\"offer-image\">\n    </div>\n    <div class=\"block-title\">\n        <h3 class=\"offer-title\">{{ offer.title }}</h3>\n    </div>\n</div>\n`}</code></pre>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`// components/SectionOffers/index.js\nimport React, { Component } from 'react';\nimport Images from 'img/Image';\nimport Offer from 'components/Offer';\n\nclass SectionOffers extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            offers = [...]\n        };\n    }\n\n    /**\n     * Render the <Home /> component\n     * @return {Home} Home page component\n     */\n    render() {\n        const { membershipCardId, profile } = this.props;\n\n        console.log(this.state.renderCode);\n        return (\n            <section className=\"section-offers\">\n                <div className=\"container-content\">\n                    <div className=\"block-content\"></div>\n                    <div className=\"block-header\"></div>\n                    <div className=\"grid-offers\">\n                        {offers.map(d, i) => (\n                            <div className=\"grid-offer\">\n                                <Offer offer={d} />\n                            </div>\n                        )}\n                    </div>\n                </div>\n            </section>\n        );\n    }\n}\n\nexport default SectionOffers;\n\n// components/Offer/index.js\n// ENSURE THAT ANY COMPONENT WE BUILD FOR\n// IS STATELESS\nimport React, { Component } from 'react';\nimport { Link } from 'react-router';\nimport Images from 'img/Image';\n\nexport default Offer = (props) => (\n    <div className=\"component-offer\">\n        <div className=\"block-image\">\n            <img src={props.imgSource} alt={props.imgAlt} className=\"offer-image\">\n        </div>\n        <div className=\"block-title\">\n            <h3 className=\"offer-title\">{props.offerTitle</h3>\n        </div>\n    </div>\n);\n`}</code></pre>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-scss\"\n      }}>{`// in other base files\n// base/_container.scss\n.container {\n  // keep vars elsewhere\n  max-width: $max-width;\n  // center\n  margin: 0 auto;\n  // set base padding rules\n  // containers should only have padding\n  padding: 80px 20px;\n\n  // set base overrides\n  @include grid-media($mobile) {\n    padding: 10px;\n  }\n}\n\n// base/_block.scss\n.block {\n  // if blocks get basic rules\n}\n\n// base/_grid.scss\n.grid {\n  // our base grid rules\n  // given we are enforcing STANDARD rules\n  // ensure you use the direct child selector\n  > .grid-item {\n    // item rules\n  }\n}\n\n// Component or partial: SectionOffers\n// sections/_section-offers.scss\n// every file should only go three levels deep\n// level one: parent\n// level two: any child of parent (parent should prevent bleed through)\n// level three: modifiers, sibling classes, media breaks\n.section-offers {\n  // should handle:\n  // padding\n  // background color\n  padding: 80px 20px;\n\n  @include grid-media($mobile) {\n    padding: 40px 20px;\n  }\n\n  .container-content {\n    // should handle central gutter\n    @extend .container;\n    // ^ brings in things like margin: 0 auto;\n  }\n\n  .block-content {\n    // blocks should only have margin-bottom\n    margin-bottom: 20px;\n\n    @include grid-media($mobile) {\n    }\n  }\n\n  .block-header {\n  }\n\n  // another pre-determined type\n  .grid-offers {\n    @extend .grid;\n  }\n\n  // note that this is still level two\n  // and doesn't fall in component scss\n  .grid-offer {\n    @extend .grid-item;\n  }\n}\n\n// components or react level styling\n// components/_offers.scss\n.component-offer {\n  // begin rules again\n  position: relative;\n  // ...\n\n  .block-image {\n    // ...\n  }\n\n  .offer-image {\n    // ...\n  }\n\n  .block-title {\n    // ...\n  }\n\n  .offer-title {\n    // ...\n  }\n}\n`}</code></pre>\n    <p>{`In the case of a React Native app, set the styles object to be equivalent but without nesting:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`// Component or partial: SectionOffers\n// sections/_section-offers.scss\n// every file should only go three levels deep\n// level one: parent\n// level two: any child of parent (parent should prevent bleed through)\n// level three: modifiers, sibling classes, media breaks\nconst sectionOffers = {\n    containerContent {\n        @extend .container;\n    }\n\n    blockContent {\n        // blocks should only have margin-bottom\n        margin-bottom: 20px;\n\n        @include grid-media($mobile) {\n        }\n    }\n\n    blockHeader {\n    }\n\n    // another pre-determined type\n    gridOffers {\n        @extend .grid;\n    }\n\n    // note that this is still level two\n    // and doesn't fall in component scss\n    gridOffer {\n        @extend .grid-item;\n    }\n}\n\n// Offer component\nconst styles = {\n    // components or react level styling\n    // components/_offers.scss\n    offer: {\n        // begin rules again\n        position: \"relative\";\n        // ...\n    }\n\n    offerimage: {\n        // ...\n    }\n\n    offerTitle {\n        // ...\n    }\n}\n`}</code></pre>\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  "]}]}