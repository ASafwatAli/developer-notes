{"remainingRequest":"/Users/okeeffe_d/Project-Imposter/developer-notes/node_modules/docz-core/node_modules/babel-loader/lib/index.js??ref--6-1!/Users/okeeffe_d/Project-Imposter/developer-notes/node_modules/@mdx-js/loader/index.js??ref--6-2!/Users/okeeffe_d/Project-Imposter/developer-notes/node_modules/source-map-loader/index.js!/Users/okeeffe_d/Project-Imposter/developer-notes/manual/Kubernetes/Helm-Redis.md","dependencies":[{"path":"/Users/okeeffe_d/Project-Imposter/developer-notes/manual/Kubernetes/Helm-Redis.md","mtime":1548314738671},{"path":"/Users/okeeffe_d/Project-Imposter/developer-notes/node_modules/cache-loader/dist/cjs.js","mtime":1561535530324},{"path":"/Users/okeeffe_d/Project-Imposter/developer-notes/node_modules/docz-core/node_modules/babel-loader/lib/index.js","mtime":1560300163820},{"path":"/Users/okeeffe_d/Project-Imposter/developer-notes/node_modules/@mdx-js/loader/index.js","mtime":1561535530532},{"path":"/Users/okeeffe_d/Project-Imposter/developer-notes/node_modules/source-map-loader/index.js","mtime":1548285283521}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9vYmplY3RXaXRob3V0UHJvcGVydGllcyBmcm9tIi9Vc2Vycy9va2VlZmZlX2QvUHJvamVjdC1JbXBvc3Rlci9kZXZlbG9wZXItbm90ZXMvbm9kZV9tb2R1bGVzL2JhYmVsLXByZXNldC1yZWFjdC1hcHAvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzIjsvKiBAanN4IG1keCAqL2ltcG9ydCBSZWFjdCBmcm9tJ3JlYWN0JztpbXBvcnR7bWR4fWZyb20nQG1keC1qcy9yZWFjdCc7LyogQGpzeCBtZHggKi92YXIgbWFrZVNob3J0Y29kZT1mdW5jdGlvbiBtYWtlU2hvcnRjb2RlKG5hbWUpe3JldHVybiBmdW5jdGlvbiBNRFhEZWZhdWx0U2hvcnRjb2RlKHByb3BzKXtjb25zb2xlLndhcm4oIkNvbXBvbmVudCAiK25hbWUrIiB3YXMgbm90IGltcG9ydGVkLCBleHBvcnRlZCwgb3IgcHJvdmlkZWQgYnkgTURYUHJvdmlkZXIgYXMgZ2xvYmFsIHNjb3BlIik7cmV0dXJuIG1keCgiZGl2Iixwcm9wcyk7fTt9O3ZhciBsYXlvdXRQcm9wcz17fTt2YXIgTURYTGF5b3V0PSJ3cmFwcGVyIjtleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBNRFhDb250ZW50KF9yZWYpe3ZhciBjb21wb25lbnRzPV9yZWYuY29tcG9uZW50cyxwcm9wcz1fb2JqZWN0V2l0aG91dFByb3BlcnRpZXMoX3JlZixbImNvbXBvbmVudHMiXSk7cmV0dXJuIG1keChNRFhMYXlvdXQsT2JqZWN0LmFzc2lnbih7fSxsYXlvdXRQcm9wcyxwcm9wcyx7Y29tcG9uZW50czpjb21wb25lbnRzLG1keFR5cGU6Ik1EWExheW91dCJ9KSxtZHgoImgxIix7ImlkIjoiaW5zdGFsbGluZy1yZWRpcy13aXRoLWhlbG0ifSwiSW5zdGFsbGluZyBSZWRpcyB3aXRoIEhlbG0iKSxtZHgoInAiLG51bGwsIkVuc3VyZSB0aGF0IHlvdSBoYXZlIGNvbmZpZ3VyZWQgSGVsbSBmaXJzdCBhbmQgYXBwbGllZCB0aGUgYXBwcm9wcmlhdGUgUkJBQyAoc2VlIEhlbG0gSW50cm8gZm9yIG1vcmUpLiIpLG1keCgiaDIiLHsiaWQiOiJpbnN0YWxsaW5nIn0sIkluc3RhbGxpbmciKSxtZHgoInByZSIsbnVsbCxtZHgoImNvZGUiLE9iamVjdC5hc3NpZ24oe3BhcmVudE5hbWU6InByZSJ9LHsiY2xhc3NOYW1lIjoibGFuZ3VhZ2Utc2hlbGwifSksImhlbG0gaW5zdGFsbCAtLW5hbWUgcmVkaXNoYSBzdGFibGUvcmVkaXMtaGFcbiIpKSxtZHgoInAiLG51bGwsIldoYXQgeW91IHNob3VsZCBnZXQgYmFjayBzaG91bGQgYmUgc2ltaWxhciB0byB0aGUgZm9sbG93aW5nOiIpLG1keCgicHJlIixudWxsLG1keCgiY29kZSIsT2JqZWN0LmFzc2lnbih7cGFyZW50TmFtZToicHJlIn0seyJjbGFzc05hbWUiOiJsYW5ndWFnZS1zaGVsbCJ9KSwiTkFNRTogICByZWRpc2hhXG5MQVNUIERFUExPWUVEOiBUaHUgSmFuIDI0IDE4OjE3OjMxIDIwMTlcbk5BTUVTUEFDRTogZGVmYXVsdFxuU1RBVFVTOiBERVBMT1lFRFxuXG5SRVNPVVJDRVM6XG49PT4gdjEvUG9kKHJlbGF0ZWQpXG5OQU1FICAgICAgICAgICAgICAgICAgICAgICBSRUFEWSAgU1RBVFVTICAgUkVTVEFSVFMgIEFHRVxucmVkaXNoYS1yZWRpcy1oYS1zZXJ2ZXItMCAgMC8yICAgIFBlbmRpbmcgIDAgICAgICAgICAwc1xuXG49PT4gdjEvQ29uZmlnTWFwXG5OQU1FICAgICAgICAgICAgICAgICAgICAgICAgREFUQSAgQUdFXG5yZWRpc2hhLXJlZGlzLWhhLWNvbmZpZ21hcCAgMyAgICAgMHNcbnJlZGlzaGEtcmVkaXMtaGEtcHJvYmVzICAgICAyICAgICAwc1xuXG49PT4gdjEvU2VydmljZVxuTkFNRSAgICAgICAgICAgICAgICAgICAgICAgICBUWVBFICAgICAgIENMVVNURVItSVAgICAgICBFWFRFUk5BTC1JUCAgUE9SVChTKSAgICAgICAgICAgICBBR0VcbnJlZGlzaGEtcmVkaXMtaGEtYW5ub3VuY2UtMCAgQ2x1c3RlcklQICAxMC4xMDAuMjQuOTQgICAgPG5vbmU+ICAgICAgIDYzNzkvVENQLDI2Mzc5L1RDUCAgMHNcbnJlZGlzaGEtcmVkaXMtaGEtYW5ub3VuY2UtMSAgQ2x1c3RlcklQICAxMC4xMDAuMTQyLjE1MCAgPG5vbmU+ICAgICAgIDYzNzkvVENQLDI2Mzc5L1RDUCAgMHNcbnJlZGlzaGEtcmVkaXMtaGEtYW5ub3VuY2UtMiAgQ2x1c3RlcklQICAxMC4xMDAuMjcuMjAyICAgPG5vbmU+ICAgICAgIDYzNzkvVENQLDI2Mzc5L1RDUCAgMHNcbnJlZGlzaGEtcmVkaXMtaGEgICAgICAgICAgICAgQ2x1c3RlcklQICBOb25lICAgICAgICAgICAgPG5vbmU+ICAgICAgIDYzNzkvVENQLDI2Mzc5L1RDUCAgMHNcblxuPT0+IHYxL1N0YXRlZnVsU2V0XG5OQU1FICAgICAgICAgICAgICAgICAgICAgREVTSVJFRCAgQ1VSUkVOVCAgQUdFXG5yZWRpc2hhLXJlZGlzLWhhLXNlcnZlciAgMyAgICAgICAgMSAgICAgICAgMHNcblxuXG5OT1RFUzpcblJlZGlzIGNhbiBiZSBhY2Nlc3NlZCB2aWEgcG9ydCA2Mzc5IGFuZCBTZW50aW5lbCBjYW4gYmUgYWNjZXNzZWQgdmlhIHBvcnQgMjYzNzkgb24gdGhlIGZvbGxvd2luZyBETlMgbmFtZSBmcm9tIHdpdGhpbiB5b3VyIGNsdXN0ZXI6XG5yZWRpc2hhLXJlZGlzLWhhLmRlZmF1bHQuc3ZjLmNsdXN0ZXIubG9jYWxcblxuVG8gY29ubmVjdCB0byB5b3VyIFJlZGlzIHNlcnZlcjpcbjEuIFJ1biBhIFJlZGlzIHBvZCB0aGF0IHlvdSBjYW4gdXNlIGFzIGEgY2xpZW50OlxuXG4gICBrdWJlY3RsIGV4ZWMgLWl0IHJlZGlzaGEtcmVkaXMtaGEtc2VydmVyLTAgc2ggLW4gZGVmYXVsdFxuXG4yLiBDb25uZWN0IHVzaW5nIHRoZSBSZWRpcyBDTEk6XG5cbiAgcmVkaXMtY2xpIC1oIHJlZGlzaGEtcmVkaXMtaGEuZGVmYXVsdC5zdmMuY2x1c3Rlci5sb2NhbFxuIikpLG1keCgicCIsbnVsbCwiRW5zdXJlIHRvIGRlbGV0ZSBieSB1c2luZyAiLG1keCgiaW5saW5lQ29kZSIse3BhcmVudE5hbWU6InAifSwiaGVsbSBkZWxldGUgPE5BTUU+IiksIi4iKSk7fWlmKHR5cGVvZiBNRFhDb250ZW50IT09J3VuZGVmaW5lZCcmJk1EWENvbnRlbnQmJk1EWENvbnRlbnQ9PT1PYmplY3QoTURYQ29udGVudCkmJk9iamVjdC5pc0V4dGVuc2libGUoTURYQ29udGVudCkpe09iamVjdC5kZWZpbmVQcm9wZXJ0eShNRFhDb250ZW50LCdfX2ZpbGVtZXRhJyx7ZW51bWVyYWJsZTp0cnVlLGNvbmZpZ3VyYWJsZTp0cnVlLHZhbHVlOntuYW1lOiJNRFhDb250ZW50IixmaWxlbmFtZToibWFudWFsL0t1YmVybmV0ZXMvSGVsbS1SZWRpcy5tZCJ9fSk7fU1EWENvbnRlbnQuaXNNRFhDb21wb25lbnQ9dHJ1ZTs="},{"version":3,"sources":["/Users/okeeffe_d/Project-Imposter/developer-notes/manual/Kubernetes/Helm-Redis.md"],"names":["React","mdx","makeShortcode","name","MDXDefaultShortcode","props","console","warn","layoutProps","MDXLayout","MDXContent","components","isMDXComponent"],"mappings":"4LAAA,cACE,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,GAAT,KAAoB,eAApB,CACA,cAGF,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAAAC,IAAI,QAAI,SAASC,CAAAA,mBAAT,CAA6BC,KAA7B,CAAoC,CAChEC,OAAO,CAACC,IAAR,CAAa,aAAeJ,IAAf,CAAsB,yEAAnC,EACA,MAAO,WAASE,KAAT,CAAP,CACD,CAHyB,EAA1B,CAKA,GAAMG,CAAAA,WAAW,CAAG,EAApB,CAGA,GAAMC,CAAAA,SAAS,CAAG,SAAlB,CACA,cAAe,SAASC,CAAAA,UAAT,MAGZ,IAFDC,CAAAA,UAEC,MAFDA,UAEC,CADEN,KACF,+CACD,MAAO,KAAC,SAAD,kBAAeG,WAAf,CAAgCH,KAAhC,EAAuC,UAAU,CAAEM,UAAnD,CAA+D,OAAO,CAAC,WAAvE,GACL,SAAQ,CACN,KAAM,4BADA,CAAR,8BADK,CAIL,sHAJK,CAKL,SAAQ,CACN,KAAM,YADA,CAAR,cALK,CAQL,eAAK,0BAAM,UAAU,CAAC,KAAjB,EAA2B,CAC5B,YAAa,gBADe,CAA3B,kDAAL,CARK,CAYL,4EAZK,CAaL,eAAK,0BAAM,UAAU,CAAC,KAAjB,EAA2B,CAC5B,YAAa,gBADe,CAA3B,64CAAL,CAbK,CAuDL,0CAAiC,kBAAY,UAAU,CAAC,GAAvB,uBAAjC,KAvDK,CAAP,CAyDD,C,2QAEDD,UAAU,CAACE,cAAX,CAA4B,IAA5B","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"installing-redis-with-helm\"\n    }}>{`Installing Redis with Helm`}</h1>\n    <p>{`Ensure that you have configured Helm first and applied the appropriate RBAC (see Helm Intro for more).`}</p>\n    <h2 {...{\n      \"id\": \"installing\"\n    }}>{`Installing`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`helm install --name redisha stable/redis-ha\n`}</code></pre>\n    <p>{`What you should get back should be similar to the following:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`NAME:   redisha\nLAST DEPLOYED: Thu Jan 24 18:17:31 2019\nNAMESPACE: default\nSTATUS: DEPLOYED\n\nRESOURCES:\n==> v1/Pod(related)\nNAME                       READY  STATUS   RESTARTS  AGE\nredisha-redis-ha-server-0  0/2    Pending  0         0s\n\n==> v1/ConfigMap\nNAME                        DATA  AGE\nredisha-redis-ha-configmap  3     0s\nredisha-redis-ha-probes     2     0s\n\n==> v1/Service\nNAME                         TYPE       CLUSTER-IP      EXTERNAL-IP  PORT(S)             AGE\nredisha-redis-ha-announce-0  ClusterIP  10.100.24.94    <none>       6379/TCP,26379/TCP  0s\nredisha-redis-ha-announce-1  ClusterIP  10.100.142.150  <none>       6379/TCP,26379/TCP  0s\nredisha-redis-ha-announce-2  ClusterIP  10.100.27.202   <none>       6379/TCP,26379/TCP  0s\nredisha-redis-ha             ClusterIP  None            <none>       6379/TCP,26379/TCP  0s\n\n==> v1/StatefulSet\nNAME                     DESIRED  CURRENT  AGE\nredisha-redis-ha-server  3        1        0s\n\n\nNOTES:\nRedis can be accessed via port 6379 and Sentinel can be accessed via port 26379 on the following DNS name from within your cluster:\nredisha-redis-ha.default.svc.cluster.local\n\nTo connect to your Redis server:\n1. Run a Redis pod that you can use as a client:\n\n   kubectl exec -it redisha-redis-ha-server-0 sh -n default\n\n2. Connect using the Redis CLI:\n\n  redis-cli -h redisha-redis-ha.default.svc.cluster.local\n`}</code></pre>\n    <p>{`Ensure to delete by using `}<inlineCode parentName=\"p\">{`helm delete <NAME>`}</inlineCode>{`.`}</p>\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  "]}]}