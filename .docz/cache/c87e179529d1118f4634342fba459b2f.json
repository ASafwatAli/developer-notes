{"remainingRequest":"/Users/okeeffe_d/Business/Documentation/node_modules/babel-loader/lib/index.js?{\"presets\":[[\"/Users/okeeffe_d/Business/Documentation/node_modules/babel-preset-docz/dist/index.js\",{\"flow\":true,\"typescript\":false,\"parseProps\":true}]],\"plugins\":[[\"/Users/okeeffe_d/Business/Documentation/node_modules/docz-utils/lib/named-asset-import.js\",{\"loaderMap\":{\"svg\":{\"ReactComponent\":\"@svgr/webpack?-prettier,-svgo![path]\"}}}]],\"babelrc\":false,\"cacheCompression\":true,\"compact\":true}!/Users/okeeffe_d/Business/Documentation/manual/Go/Go-Lang-Overview.md","dependencies":[{"path":"/Users/okeeffe_d/Business/Documentation/manual/Go/Go-Lang-Overview.md","mtime":1548209344318},{"path":"/Users/okeeffe_d/Business/Documentation/node_modules/cache-loader/dist/cjs.js","mtime":1548134640245},{"path":"/Users/okeeffe_d/Business/Documentation/node_modules/babel-loader/lib/index.js","mtime":1548134640227}],"contextDependencies":[],"result":["function _typeof(obj){if(typeof Symbol===\"function\"&&typeof Symbol.iterator===\"symbol\"){_typeof=function _typeof(obj){return typeof obj;};}else{_typeof=function _typeof(obj){return obj&&typeof Symbol===\"function\"&&obj.constructor===Symbol&&obj!==Symbol.prototype?\"symbol\":typeof obj;};}return _typeof(obj);}function _objectWithoutProperties(source,excluded){if(source==null)return{};var target=_objectWithoutPropertiesLoose(source,excluded);var key,i;if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++){key=sourceSymbolKeys[i];if(excluded.indexOf(key)>=0)continue;if(!Object.prototype.propertyIsEnumerable.call(source,key))continue;target[key]=source[key];}}return target;}function _objectWithoutPropertiesLoose(source,excluded){if(source==null)return{};var target={};var sourceKeys=Object.keys(source);var key,i;for(i=0;i<sourceKeys.length;i++){key=sourceKeys[i];if(excluded.indexOf(key)>=0)continue;target[key]=source[key];}return target;}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\");}}function _defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}function _createClass(Constructor,protoProps,staticProps){if(protoProps)_defineProperties(Constructor.prototype,protoProps);if(staticProps)_defineProperties(Constructor,staticProps);return Constructor;}function _possibleConstructorReturn(self,call){if(call&&(_typeof(call)===\"object\"||typeof call===\"function\")){return call;}return _assertThisInitialized(self);}function _assertThisInitialized(self){if(self===void 0){throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");}return self;}function _getPrototypeOf(o){_getPrototypeOf=Object.setPrototypeOf?Object.getPrototypeOf:function _getPrototypeOf(o){return o.__proto__||Object.getPrototypeOf(o);};return _getPrototypeOf(o);}function _inherits(subClass,superClass){if(typeof superClass!==\"function\"&&superClass!==null){throw new TypeError(\"Super expression must either be null or a function\");}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,writable:true,configurable:true}});if(superClass)_setPrototypeOf(subClass,superClass);}function _setPrototypeOf(o,p){_setPrototypeOf=Object.setPrototypeOf||function _setPrototypeOf(o,p){o.__proto__=p;return o;};return _setPrototypeOf(o,p);}import React from'react';import{MDXTag}from'@mdx-js/tag';var MDXContent=/*#__PURE__*/function(_React$Component){_inherits(MDXContent,_React$Component);function MDXContent(props){var _this;_classCallCheck(this,MDXContent);_this=_possibleConstructorReturn(this,_getPrototypeOf(MDXContent).call(this,props));_this.layout=null;return _this;}_createClass(MDXContent,[{key:\"render\",value:function render(){var _this$props=this.props,components=_this$props.components,props=_objectWithoutProperties(_this$props,[\"components\"]);return React.createElement(MDXTag,{name:\"wrapper\",components:components},React.createElement(MDXTag,{name:\"h1\",components:components,props:{\"id\":\"go-language-overview\"}},\"Go Language Overview\"),React.createElement(MDXTag,{name:\"ul\",components:components},React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},React.createElement(MDXTag,{name:\"a\",components:components,parentName:\"li\",props:{\"href\":\"#go-language-overview\"}},\"Go Language Overview\"),React.createElement(MDXTag,{name:\"ul\",components:components,parentName:\"li\"},React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},React.createElement(MDXTag,{name:\"a\",components:components,parentName:\"li\",props:{\"href\":\"#types\"}},\"Types\")),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},React.createElement(MDXTag,{name:\"a\",components:components,parentName:\"li\",props:{\"href\":\"#packages---public-and-private-variables\"}},\"Packages - public and private variables\")),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},React.createElement(MDXTag,{name:\"a\",components:components,parentName:\"li\",props:{\"href\":\"#variables\"}},\"Variables\"),React.createElement(MDXTag,{name:\"ul\",components:components,parentName:\"li\"},React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},React.createElement(MDXTag,{name:\"a\",components:components,parentName:\"li\",props:{\"href\":\"#variable-declarations-and-assigning\"}},\"Variable declarations and assigning\")))),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},React.createElement(MDXTag,{name:\"a\",components:components,parentName:\"li\",props:{\"href\":\"#functions\"}},\"Functions\"),React.createElement(MDXTag,{name:\"ul\",components:components,parentName:\"li\"},React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},React.createElement(MDXTag,{name:\"a\",components:components,parentName:\"li\",props:{\"href\":\"#multiple-return-values\"}},\"Multiple return values\")),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},React.createElement(MDXTag,{name:\"a\",components:components,parentName:\"li\",props:{\"href\":\"#the-go-formatting-tool\"}},\"The Go Formatting Tool\")))),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},React.createElement(MDXTag,{name:\"a\",components:components,parentName:\"li\",props:{\"href\":\"#control-structures\"}},\"Control Structures\"),React.createElement(MDXTag,{name:\"ul\",components:components,parentName:\"li\"},React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},React.createElement(MDXTag,{name:\"a\",components:components,parentName:\"li\",props:{\"href\":\"#for-loops\"}},\"For loops\")),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},React.createElement(MDXTag,{name:\"a\",components:components,parentName:\"li\",props:{\"href\":\"#if-statements\"}},\"If statements\")),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},React.createElement(MDXTag,{name:\"a\",components:components,parentName:\"li\",props:{\"href\":\"#switch-statement\"}},\"Switch statement\")))),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},React.createElement(MDXTag,{name:\"a\",components:components,parentName:\"li\",props:{\"href\":\"#data-structures\"}},\"Data Structures\"),React.createElement(MDXTag,{name:\"ul\",components:components,parentName:\"li\"},React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},React.createElement(MDXTag,{name:\"a\",components:components,parentName:\"li\",props:{\"href\":\"#pointers\"}},\"Pointers\")),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},React.createElement(MDXTag,{name:\"a\",components:components,parentName:\"li\",props:{\"href\":\"#arrays\"}},\"Arrays\")),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},React.createElement(MDXTag,{name:\"a\",components:components,parentName:\"li\",props:{\"href\":\"#slices\"}},\"Slices\")),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},React.createElement(MDXTag,{name:\"a\",components:components,parentName:\"li\",props:{\"href\":\"#maps\"}},\"Maps\")))),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},React.createElement(MDXTag,{name:\"a\",components:components,parentName:\"li\",props:{\"href\":\"#custom-types\"}},\"Custom Types\"),React.createElement(MDXTag,{name:\"ul\",components:components,parentName:\"li\"},React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},React.createElement(MDXTag,{name:\"a\",components:components,parentName:\"li\",props:{\"href\":\"#methods\"}},\"Methods\")),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},React.createElement(MDXTag,{name:\"a\",components:components,parentName:\"li\",props:{\"href\":\"#structs\"}},\"Structs\")),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},React.createElement(MDXTag,{name:\"a\",components:components,parentName:\"li\",props:{\"href\":\"#interfaces\"}},\"Interfaces\"),React.createElement(MDXTag,{name:\"ul\",components:components,parentName:\"li\"},React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},React.createElement(MDXTag,{name:\"a\",components:components,parentName:\"li\",props:{\"href\":\"#challenge\"}},\"Challenge\")))))),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},React.createElement(MDXTag,{name:\"a\",components:components,parentName:\"li\",props:{\"href\":\"#concurrency\"}},\"Concurrency\"),React.createElement(MDXTag,{name:\"ul\",components:components,parentName:\"li\"},React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},React.createElement(MDXTag,{name:\"a\",components:components,parentName:\"li\",props:{\"href\":\"#channels\"}},\"Channels\"),React.createElement(MDXTag,{name:\"ul\",components:components,parentName:\"li\"},React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},React.createElement(MDXTag,{name:\"a\",components:components,parentName:\"li\",props:{\"href\":\"#challenge-1\"}},\"Challenge\")))))),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},React.createElement(MDXTag,{name:\"a\",components:components,parentName:\"li\",props:{\"href\":\"#summary\"}},\"Summary\"))))),React.createElement(MDXTag,{name:\"h2\",components:components,props:{\"id\":\"types\"}},\"Types\"),React.createElement(MDXTag,{name:\"ul\",components:components},React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"int, int8 etc\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"bool\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"string\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"float32, float64 (64 by default)\")),React.createElement(MDXTag,{name:\"h2\",components:components,props:{\"id\":\"packages---public-and-private-variables\"}},\"Packages - public and private variables\"),React.createElement(MDXTag,{name:\"p\",components:components},\"When it comes to declaring variables, to have them available to other files when the package is imported, declare the variable with a capital letter.\"),React.createElement(MDXTag,{name:\"p\",components:components},\"Lowercase variables are private.\"),React.createElement(MDXTag,{name:\"h2\",components:components,props:{\"id\":\"variables\"}},\"Variables\"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{\"className\":\"language-go\"}},\"// outside of func\\nvar greeting = \\\"hello\\\"\\n\\nfunc main() {\\n    // inside of func\\n    greeting := \\\"Hello from Go\\\"\\n    fmt.Println(test)\\n    fmt.Println(greeting)\\n}\\n\")),React.createElement(MDXTag,{name:\"h3\",components:components,props:{\"id\":\"variable-declarations-and-assigning\"}},\"Variable declarations and assigning\"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{\"className\":\"language-go\"}},\"func main() {\\n    var a int\\n    a = 2\\n    var b, c int\\n    b = 2\\n    c = 3\\n    d := 5  // same as var d = 5\\n    var e = 10 // type is inferred\\n\\n    // you'll need to use all the above variables\\n    // otherwise there will be a declaration err\\n    // thrown\\n}\\n\")),React.createElement(MDXTag,{name:\"ul\",components:components},React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"Variable names must start with a letter\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"Uppercase variables and funcs can be used outside of the package\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"Lowercase cannot\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"Declaring type can come after the variable name eg \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"li\"},\"var floating float64 = 1.4\")),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"Casting \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"li\"},\"float64(variable)\")),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"Errors are thrown for mismatched types\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"For scope, you are able to declare blocks by themselves - Each package is a implicit block\")),React.createElement(MDXTag,{name:\"h2\",components:components,props:{\"id\":\"functions\"}},\"Functions\"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{\"className\":\"language-go\"}},\"// not available outside the package\\nfunc main() {\\n    myFunction()\\n}\\n\\nfunc myFunction() {\\n    fmt.Println(\\\"Running myFunction\\\")\\n}\\n\\nfunc MyPublicFunction() {\\n    fmt.Println(\\\"Running MyPublicFunction\\\")\\n}\\n\")),React.createElement(MDXTag,{name:\"p\",components:components},\"You can enforce type safety for parameters by adding the type expected to the function \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"func myFunc(test string, number int) {}\")),React.createElement(MDXTag,{name:\"ul\",components:components},React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"Go doesn't allow default parameter values\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"No named values\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"No method overloading\")),React.createElement(MDXTag,{name:\"p\",components:components},\"For returning a certain value, you can enfore this by the following\"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{}},\"func myFunc(test string, number int) int {}\\nfunc myFuncTwo(numberOne int, number int) (sum int) {\\n    return number + numberOne;\\n}\\nfunc myFuncThree(number int) (difference int) {\\n    difference = number + 4;\\n}\\n\")),React.createElement(MDXTag,{name:\"h3\",components:components,props:{\"id\":\"multiple-return-values\"}},\"Multiple return values\"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{\"className\":\"language-go\"}},\"package main\\n\\nimport (\\n    \\\"fmt\\\",\\n    \\\"math\\\",\\n    \\\"log\\\"\\n)\\n\\nfunc main() {\\n    squareRoot, err := squareRoot(-1)\\n    if err != nil {\\n        log.Fatal(err)\\n    }\\n    fmt.Println(squareRoot)\\n}\\n\\nfunc squareRoot(x float64) (float64, error) {\\n    x < 0 {\\n        return 0, fmt.Errorf(\\\"Can't take a negative number\\\")\\n    }\\n    return math.Sqrt(x), nil\\n}\\n\")),React.createElement(MDXTag,{name:\"p\",components:components},\"As for errors\"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{\"className\":\"language-go\"}},\"package main\\n\\nimport (\\n    \\\"fmt\\\",\\n    \\\"os\\\"\\n)\\n\\n// panic errors - no good!\\nfunc mainBad() {\\n    fileInfo, _ := os.Stat(\\\"existent.txt\\\")\\n    fmt.Println(fileInfo.Size())\\n    fileInfo, _ := os.Stat(\\\"nonexistent.txt\\\")\\n    fmt.Println(fileInfo.Size())\\n}\\n\\n// instead, do this\\nfunc main() {\\n    fileInfo, error := os.Stat(\\\"existent.txt\\\")\\n    if error != nil {\\n        fmt.Println(error)\\n    } else {\\n        fmt.Println(fileInfo.Size())\\n    }\\n    fileInfo, error := os.Stat(\\\"nonexistent.txt\\\")\\n    if error != nil {\\n        fmt.Println(error)\\n    } else {\\n        fmt.Println(fileInfo.Size())\\n    }\\n}\\n\")),React.createElement(MDXTag,{name:\"h3\",components:components,props:{\"id\":\"the-go-formatting-tool\"}},\"The Go Formatting Tool\"),React.createElement(MDXTag,{name:\"p\",components:components},React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"go fmt <filename>\"),\" will update the file itself and it will nicely format it.\"),React.createElement(MDXTag,{name:\"h2\",components:components,props:{\"id\":\"control-structures\"}},\"Control Structures\"),React.createElement(MDXTag,{name:\"h3\",components:components,props:{\"id\":\"for-loops\"}},\"For loops\"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{\"className\":\"language-go\"}},\"for i := 1; i <= 3; i++ {\\n    fmt.Println(i)\\n}\\n\")),React.createElement(MDXTag,{name:\"h3\",components:components,props:{\"id\":\"if-statements\"}},\"If statements\"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{\"className\":\"language-go\"}},\"if true {\\n    fmt.Println(\\\"You'll come here\\\")\\n} else if false {\\n    // ...\\n} else {\\n    // ...\\n}\\n\")),React.createElement(MDXTag,{name:\"h3\",components:components,props:{\"id\":\"switch-statement\"}},\"Switch statement\"),React.createElement(MDXTag,{name:\"p\",components:components},\"Switch statements look like they do not need a break.\"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{\"className\":\"language-go\"}},\"switch doorNumber {\\n    case 1:\\n        fmt.Println(\\\"new car \\\")\\n    case 2:\\n        // ...\\n    default:\\n        // ...\\n}\\n\")),React.createElement(MDXTag,{name:\"h2\",components:components,props:{\"id\":\"data-structures\"}},\"Data Structures\"),React.createElement(MDXTag,{name:\"h3\",components:components,props:{\"id\":\"pointers\"}},\"Pointers\"),React.createElement(MDXTag,{name:\"p\",components:components},\"You can create a pointer to a variable too.\"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{\"className\":\"language-go\"}},\"package main\\n\\nimport \\\"fmt\\\"\\n\\nfunc main() {\\n    var aValue float64 = 1.23\\n    var aPointer *float64 = &aValue\\n    fmt.Println(\\\"aPointer\\\", aPointer)\\n    fmt.Println(\\\"*aPointer\\\", *aPointer)\\n}\\n\\n/*\\n    Prints\\n    aPointer 0xc42000a3b8\\n    *aPointer 1.23\\n */\\n\")),React.createElement(MDXTag,{name:\"p\",components:components},\"There are situations where the pointer is better to use than using a value directly.\"),React.createElement(MDXTag,{name:\"ol\",components:components},React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ol\"},\"Functions that need to affect their argument. Args in funcs are always passed by value. The function recieves a copy of the value.\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ol\"},\"Passing a complex value to a function - example a complex struct\")),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{\"className\":\"language-go\"}},\"// Example\\npackage main\\n\\nimport \\\"fmt\\\"\\n\\n// Not using the pointer\\nfunc main() {\\n    num := 8.2\\n    halve(num)\\n    fmt.Println(num)\\n}\\n\\nfunc halve(number float64) {\\n    number = number / 2;\\n    fmt.Println(number)\\n}\\n\\n// Using the pointer\\npackage main\\n\\nimport \\\"fmt\\\"\\n\\n// Not using the pointer\\nfunc main() {\\n    num := 8.2\\n    halve(&num)\\n    fmt.Println(num)\\n}\\n\\nfunc halve(number *float64) {\\n    *number = *number / 2\\n    fmt.Println(*number)\\n}\\n\")),React.createElement(MDXTag,{name:\"h3\",components:components,props:{\"id\":\"arrays\"}},\"Arrays\"),React.createElement(MDXTag,{name:\"p\",components:components},\"Slices are used more commonly used than arrays, but given they are built on arrays, we'll explore arrays first.\"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{\"className\":\"language-go\"}},\"func main() {\\n    var months [3]string // array of three strings\\n    months[0] = \\\"Jan\\\"\\n    months[1] = \\\"Feb\\\"\\n    months[2] = \\\"Mar\\\"\\n    fmt.Println(months[0])\\n    // also could be months := [3]string{\\\"Jan\\\", \\\"Feb\\\", \\\"Mar\\\"}\\n\\n    for i := 0; i < len(months); i++ {\\n        fmt.Println(months[i])\\n    }\\n\\n    // another way to loop through the array\\n    for i, month := range months {\\n        fmt.Println(month)\\n    }\\n\\n    // omit the index\\n    for _, month := range months {\\n        fmt.Println(month)\\n    }\\n}\\n\")),React.createElement(MDXTag,{name:\"p\",components:components},\"The main limitation arrays are used are because you cannot assign values to an array larger than it's initial allocated memory size.\"),React.createElement(MDXTag,{name:\"h3\",components:components,props:{\"id\":\"slices\"}},\"Slices\"),React.createElement(MDXTag,{name:\"p\",components:components},\"Slices also represent an array. Slices are easier to work with.\"),React.createElement(MDXTag,{name:\"p\",components:components},\"While \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"len\"),\" shows the length, \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"cap\"),\" shows the capacity of how it can grow.\"),React.createElement(MDXTag,{name:\"p\",components:components},React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"append\"),\" can be used to append to a slice.\"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{\"className\":\"language-go\"}},\"package main\\n\\nimport \\\"fmt\\\"\\n\\nfunc main() {\\n    a := [5]int{0,1,2,3,4}\\n    s1 := a[0:3]\\n    s2 := a[2:5]\\n    fmt.Println(a, s1, s2)\\n    // prints [0 1 2 3 4] [0 1 2] [2 3 4]\\n    a[2] = 88\\n    fmt.Println(a, s1, s2)\\n    // prints [0 1 88 3 4] [0 1 88] [2 3 88]\\n    s1 = s1[0:4]\\n    fmt.Println(a, s1, s2)\\n    // prints [0 1 88 3 4] [0 1 88 3] [88 3 4]\\n    s2 = s2[0:4] // throws an error\\n    s2 = append(s2, 5) // returns a new slice\\n    fmt.Println(a, s1, s2)\\n    // prints [0 1 88 3 4] [0 1 88 3] [88 3 4 5]\\n    s2[0] = 999\\n    // prints [0 1 88 3 4] [0 1 88 3] [999 3 4 5]\\n\\n    // Declaring an array on its own\\n    s3 := []int{1, 2, 3}\\n    fmt.Println(s3) // prints [1 2 3]\\n    s3 = append(s3, 4, 5)\\n    fmt.Println(s3) // [1 2 3 4 5]\\n}\\n\")),React.createElement(MDXTag,{name:\"h3\",components:components,props:{\"id\":\"maps\"}},\"Maps\"),React.createElement(MDXTag,{name:\"p\",components:components},\"Slices are good for storing collections, but the only way to get elements back is by the index.\"),React.createElement(MDXTag,{name:\"p\",components:components},\"While in most collections you have dictionaries, hashes, hash maps, Go refers to these data structures as \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"Maps\"),\".\"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{\"className\":\"language-go\"}},\"func main() {\\n    ages := map[string]float64{}\\n    ages[\\\"Alice\\\"] = 12\\n    ages[\\\"Bob\\\"] = 9\\n    fmt.Println(ages) // prints map[Alice:12 Bob:9]\\n}\\n\")),React.createElement(MDXTag,{name:\"p\",components:components},\"Similar to arrays or slices, we can use a literal to prefill the values.\"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{\"className\":\"language-go\"}},\"func main() {\\n    ages := map[string]float64{\\\"Alice\\\":12, \\\"Bob\\\":9}\\n    fmt.Println(ages) // prints map[Alice:12 Bob:9]\\n    for name, age := range ages {\\n        fmt.Println(name, age)\\n    }\\n\\n    for _, age := range ages {\\n        fmt.Println(age)\\n    }\\n\\n    for name := range ages {\\n        fmt.Println(name)\\n    }\\n}\\n\")),React.createElement(MDXTag,{name:\"h2\",components:components,props:{\"id\":\"custom-types\"}},\"Custom Types\"),React.createElement(MDXTag,{name:\"p\",components:components},\"We can use the \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"type\"),\" keyword to define a type and it's underlying type.\"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{\"className\":\"language-go\"}},\"package main\\n\\nimport \\\"fmt\\\"\\n\\ntype Minutes int\\ntype Hours int\\n\\nfunc main() {\\n    minutes := Minutes(37)\\n    hours := Hours(37)\\n\\n    fmt.Println(minutes, hours)\\n}\\n\")),React.createElement(MDXTag,{name:\"p\",components:components},\"We can also compare custom types to their underlying type. However two custom types with the same underlying type cannot be compared.\"),React.createElement(MDXTag,{name:\"p\",components:components},\"The more commonly used aggregate type is a Struct which is how we can base custom types on them.\"),React.createElement(MDXTag,{name:\"h3\",components:components,props:{\"id\":\"methods\"}},\"Methods\"),React.createElement(MDXTag,{name:\"p\",components:components},\"Define new behaviours for types.\"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{\"className\":\"language-go\"}},\"package main\\n\\nimport (\\n    \\\"fmt\\\"\\n    \\\"strings\\\"\\n)\\n\\ntype Title string\\n\\n// the following has an extra reciever arg t\\nfunc (t Title) FixCase() string {\\n    return strings.Title(string(t))\\n}\\n\\nfunc main() {\\n    name := Title(\\\"the matrix\\\")\\n    fixed := name.FixCase()\\n    fmt.Println(fixed)\\n}\\n\")),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{\"className\":\"language-go\"}},\"package main\\n\\nimport (\\n    \\\"fmt\\\"\\n)\\n\\ntype Hours int\\n\\nfunc (h *Hours) Increment() Hours {\\n  *h = (*h + 1) % 24\\n  return *h\\n}\\n\\nfunc main() {\\n  hours := Hours(23)\\n  hours.Increment()\\n  fmt.Println(hours) // Prints \\\"0\\\"\\n}\\n\")),React.createElement(MDXTag,{name:\"h3\",components:components,props:{\"id\":\"structs\"}},\"Structs\"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{\"className\":\"language-go\"}},\"package main\\n\\nimport \\\"fmt\\\"\\n\\ntype Monitor struct {\\n    Resolution  string\\n    Connector   string\\n    Value       float64 // fields with a name and a type\\n}\\n\\nfunc main() {\\n    monitor := Monitor{}\\n    monitor.Resolution = \\\"1080p\\\"\\n    monitor.Connector = \\\"HDMI\\\"\\n    monitor.Value = 249.99\\n    fmt.Println(monitor.Resolution, monitor.Connector, monitor.Value)\\n\\n    // could also go monitor := Monitor{\\\"1080p\\\", \\\"HDMI\\\", 249.99}\\n}\\n\")),React.createElement(MDXTag,{name:\"p\",components:components},\"If you init and allocate a struct, it will initialise with some default values.\"),React.createElement(MDXTag,{name:\"p\",components:components},\"You can also add a \\\"exported\\\" get and set method to help enforce the concept of private variables.\"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{\"className\":\"language-go\"}},\"package main\\n\\nimport (\\n    \\\"fmt\\\"\\n)\\n\\ntype Clock struct {\\n  Hours int\\n  Minutes int\\n}\\n\\n// DEFINE A \\\"Noon\\\" FUNCTION HERE\\nfunc Noon(hours int, min int) Clock {\\n  c := Clock{}\\n  c.Hours = 12\\n  c.Minutes = 0\\n\\n  return c\\n}\\n\\nfunc main() {\\n  c := Noon(12, 10)\\n  fmt.Println(c)\\n}\\n\")),React.createElement(MDXTag,{name:\"h3\",components:components,props:{\"id\":\"interfaces\"}},\"Interfaces\"),React.createElement(MDXTag,{name:\"p\",components:components},\"When you have a concrete type, you know what it is and what it can do. An interface is defining what something is but not what it can do.\"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{\"className\":\"language-go\"}},\"type FourLegged interface {\\n    Walk()\\n    Sit()\\n}\\n\")),React.createElement(MDXTag,{name:\"p\",components:components},\"Implementation in practise\"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{\"className\":\"language-go\"}},\"type Part interface {\\n    Specs() string\\n    Price() string\\n}\\n\\nfunc Summary(part Part) string {\\n    return part.Specs() + \\\"/n\\\" + part.Price()\\n}\\n\")),React.createElement(MDXTag,{name:\"p\",components:components},\"If we create slice with that type as well, then we can use that slice for anything that satisfies the interface. This could allow us to slice, append to the slice and use the range to iterate through.\"),React.createElement(MDXTag,{name:\"h4\",components:components,props:{\"id\":\"challenge\"}},\"Challenge\"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{\"className\":\"language-go\"}},\"// calendar.go\\npackage calendar\\n\\nimport \\\"fmt\\\"\\n\\ntype Calendar struct {\\n  Year int\\n  Month int\\n  Day int\\n}\\n\\nfunc (c Calendar) Display() {\\n  fmt.Printf(\\\"%04d-%02d-%02d\\\", c.Year, c.Month, c.Day)\\n}\\n\\n// clock.go\\npackage clock\\n\\nimport \\\"fmt\\\"\\n\\ntype Clock struct {\\n    Hours int\\n    Minutes int\\n}\\n\\nfunc (c Clock) Display() {\\n    fmt.Printf(\\\"%02d:%02d\\\", c.Hours, c.Minutes)\\n}\\n\\n// schedule.go\\npackage schedule\\n\\n// DECLARE A Displayable INTERFACE HERE\\ntype Displayable interface {\\n    Display()\\n}\\n// DECLARE A Print FUNCTION HERE\\nfunc Print(display Displayable) {\\n    display.Display()\\n}\\n\")),React.createElement(MDXTag,{name:\"h2\",components:components,props:{\"id\":\"concurrency\"}},\"Concurrency\"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{\"className\":\"language-go\"}},\"package main\\n\\nimport (\\n    \\\"fmt\\\"\\n    \\\"time\\\"\\n)\\n\\nfunc longTask() {\\n    fmt.Println(\\\"Starting long task\\\")\\n    time.Sleep(3 * time.Second)\\n    fmt.Println(\\\"Long task finished\\\")\\n}\\n\\nfunc main() {\\n    go longTask()\\n    go longTask()\\n    go longTask()\\n    time.Sleep(4 * time.Second) // just for show - we can use channels instead\\n}\\n\")),React.createElement(MDXTag,{name:\"h3\",components:components,props:{\"id\":\"channels\"}},\"Channels\"),React.createElement(MDXTag,{name:\"p\",components:components},\"We can't simply try to use the time.Sleep with the keyword go given that the go routine doesn't give a value right away.\"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{\"className\":\"language-go\"}},\"package main\\n\\nimport (\\n    \\\"fmt\\\"\\n    \\\"math/rand\\\"\\n    \\\"time\\\"\\n)\\n\\nfunc longTask() int {\\n    delay := rand.Intn(5)\\n    fmt.Println(\\\"Starting long task\\\")\\n    time.Sleep(time.Duration(delay) * time.Second)\\n    fmt.Println(\\\"Long task finished\\\")\\n    return delay\\n}\\n\\nfunc main() {\\n    rand.Seed(time.Now().Unix())\\n    time := longTask()\\n    fmt.Println(\\\"Took\\\", time, \\\"seconds\\\")\\n}\\n\")),React.createElement(MDXTag,{name:\"p\",components:components},\"What we can do instead is use a channel to pass a message back to the main go routine.\"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{\"className\":\"language-go\"}},\"package main\\n\\nimport (\\n    \\\"fmt\\\"\\n    \\\"math/rand\\\"\\n    \\\"time\\\"\\n)\\n\\n// notice we get rid of the int return value\\nfunc longTask(channel chan int) {\\n    delay := rand.Intn(5)\\n    fmt.Println(\\\"Starting long task\\\")\\n    time.Sleep(time.Duration(delay) * time.Second)\\n    fmt.Println(\\\"Long task finished\\\")\\n    channel <- delay\\n}\\n\\nfunc main() {\\n    rand.Seed(time.Now().Unix())\\n    channel := make(chan int)\\n    for i := 1; i <= 3; i++ {\\n        go longTask(channel)\\n    }\\n    // uses the arrow prefix\\n    for i := 1; i <= 3; i++ {\\n        fmt.Println(\\\"Took\\\", <-channel, \\\"seconds\\\")\\n    }\\n}\\n\")),React.createElement(MDXTag,{name:\"h4\",components:components,props:{\"id\":\"challenge-1\"}},\"Challenge\"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{}},\"package channels\\n\\nfunc readFromChannel() string {\\n    // CREATE A CHANNEL FOR string VALUES HERE\\n    channel := make(chan string)\\n    // HERE, CALL writeToChannel AS A GOROUTINE, AND PASS IT YOUR CHANNEL\\n    go writeToChannel(channel)\\n    // HERE, READ A STRING FROM YOUR CHANNEL AND RETURN IT\\n    return <-channel\\n}\\n\")),React.createElement(MDXTag,{name:\"h2\",components:components,props:{\"id\":\"summary\"}},\"Summary\"),React.createElement(MDXTag,{name:\"p\",components:components},\"In the course, we've looked at:\"),React.createElement(MDXTag,{name:\"ul\",components:components},React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"Packages\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"Type\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"Functions\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"Go format tool\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"Arrays, Slices and Maps\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"Structs for field aggregation - Adding methods - Interfaces\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"Using Go routines and Channels\")));}}]);return MDXContent;}(React.Component);export{MDXContent as default};MDXContent.__docgenInfo={\"description\":\"\",\"methods\":[],\"displayName\":\"MDXContent\"};",{"version":3,"sources":["/Users/okeeffe_d/Business/Documentation/manual/Go/Go-Lang-Overview.md"],"names":["React","MDXTag","MDXContent","props","layout","components","Component"],"mappings":"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","sourcesContent":["\n  import React from 'react'\n  import { MDXTag } from '@mdx-js/tag'\n  \n\nexport default class MDXContent extends React.Component {\n  constructor(props) {\n    super(props)\n    this.layout = null\n  }\n  render() {\n    const { components, ...props } = this.props\n\n    return <MDXTag\n             name=\"wrapper\"\n             \n             components={components}><MDXTag name=\"h1\" components={components} props={{\"id\":\"go-language-overview\"}}>{`Go Language Overview`}</MDXTag>\n{/* TOC */}\n<MDXTag name=\"ul\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"a\" components={components} parentName=\"li\" props={{\"href\":\"#go-language-overview\"}}>{`Go Language Overview`}</MDXTag><MDXTag name=\"ul\" components={components} parentName=\"li\">\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"a\" components={components} parentName=\"li\" props={{\"href\":\"#types\"}}>{`Types`}</MDXTag></MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"a\" components={components} parentName=\"li\" props={{\"href\":\"#packages---public-and-private-variables\"}}>{`Packages - public and private variables`}</MDXTag></MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"a\" components={components} parentName=\"li\" props={{\"href\":\"#variables\"}}>{`Variables`}</MDXTag><MDXTag name=\"ul\" components={components} parentName=\"li\">\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"a\" components={components} parentName=\"li\" props={{\"href\":\"#variable-declarations-and-assigning\"}}>{`Variable declarations and assigning`}</MDXTag></MDXTag>\n</MDXTag></MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"a\" components={components} parentName=\"li\" props={{\"href\":\"#functions\"}}>{`Functions`}</MDXTag><MDXTag name=\"ul\" components={components} parentName=\"li\">\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"a\" components={components} parentName=\"li\" props={{\"href\":\"#multiple-return-values\"}}>{`Multiple return values`}</MDXTag></MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"a\" components={components} parentName=\"li\" props={{\"href\":\"#the-go-formatting-tool\"}}>{`The Go Formatting Tool`}</MDXTag></MDXTag>\n</MDXTag></MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"a\" components={components} parentName=\"li\" props={{\"href\":\"#control-structures\"}}>{`Control Structures`}</MDXTag><MDXTag name=\"ul\" components={components} parentName=\"li\">\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"a\" components={components} parentName=\"li\" props={{\"href\":\"#for-loops\"}}>{`For loops`}</MDXTag></MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"a\" components={components} parentName=\"li\" props={{\"href\":\"#if-statements\"}}>{`If statements`}</MDXTag></MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"a\" components={components} parentName=\"li\" props={{\"href\":\"#switch-statement\"}}>{`Switch statement`}</MDXTag></MDXTag>\n</MDXTag></MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"a\" components={components} parentName=\"li\" props={{\"href\":\"#data-structures\"}}>{`Data Structures`}</MDXTag><MDXTag name=\"ul\" components={components} parentName=\"li\">\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"a\" components={components} parentName=\"li\" props={{\"href\":\"#pointers\"}}>{`Pointers`}</MDXTag></MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"a\" components={components} parentName=\"li\" props={{\"href\":\"#arrays\"}}>{`Arrays`}</MDXTag></MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"a\" components={components} parentName=\"li\" props={{\"href\":\"#slices\"}}>{`Slices`}</MDXTag></MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"a\" components={components} parentName=\"li\" props={{\"href\":\"#maps\"}}>{`Maps`}</MDXTag></MDXTag>\n</MDXTag></MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"a\" components={components} parentName=\"li\" props={{\"href\":\"#custom-types\"}}>{`Custom Types`}</MDXTag><MDXTag name=\"ul\" components={components} parentName=\"li\">\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"a\" components={components} parentName=\"li\" props={{\"href\":\"#methods\"}}>{`Methods`}</MDXTag></MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"a\" components={components} parentName=\"li\" props={{\"href\":\"#structs\"}}>{`Structs`}</MDXTag></MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"a\" components={components} parentName=\"li\" props={{\"href\":\"#interfaces\"}}>{`Interfaces`}</MDXTag><MDXTag name=\"ul\" components={components} parentName=\"li\">\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"a\" components={components} parentName=\"li\" props={{\"href\":\"#challenge\"}}>{`Challenge`}</MDXTag></MDXTag>\n</MDXTag></MDXTag>\n</MDXTag></MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"a\" components={components} parentName=\"li\" props={{\"href\":\"#concurrency\"}}>{`Concurrency`}</MDXTag><MDXTag name=\"ul\" components={components} parentName=\"li\">\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"a\" components={components} parentName=\"li\" props={{\"href\":\"#channels\"}}>{`Channels`}</MDXTag><MDXTag name=\"ul\" components={components} parentName=\"li\">\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"a\" components={components} parentName=\"li\" props={{\"href\":\"#challenge-1\"}}>{`Challenge`}</MDXTag></MDXTag>\n</MDXTag></MDXTag>\n</MDXTag></MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"a\" components={components} parentName=\"li\" props={{\"href\":\"#summary\"}}>{`Summary`}</MDXTag></MDXTag>\n</MDXTag></MDXTag>\n</MDXTag>\n{/* /TOC */}\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"types\"}}>{`Types`}</MDXTag>\n<MDXTag name=\"ul\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`int, int8 etc`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`bool`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`string`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`float32, float64 (64 by default)`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"packages---public-and-private-variables\"}}>{`Packages - public and private variables`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`When it comes to declaring variables, to have them available to other files when the package is imported, declare the variable with a capital letter.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Lowercase variables are private.`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"variables\"}}>{`Variables`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-go\"}}>{`// outside of func\nvar greeting = \"hello\"\n\nfunc main() {\n    // inside of func\n    greeting := \"Hello from Go\"\n    fmt.Println(test)\n    fmt.Println(greeting)\n}\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"variable-declarations-and-assigning\"}}>{`Variable declarations and assigning`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-go\"}}>{`func main() {\n    var a int\n    a = 2\n    var b, c int\n    b = 2\n    c = 3\n    d := 5  // same as var d = 5\n    var e = 10 // type is inferred\n\n    // you'll need to use all the above variables\n    // otherwise there will be a declaration err\n    // thrown\n}\n`}</MDXTag></MDXTag>\n<MDXTag name=\"ul\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Variable names must start with a letter`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Uppercase variables and funcs can be used outside of the package`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Lowercase cannot`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Declaring type can come after the variable name eg `}<MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`var floating float64 = 1.4`}</MDXTag></MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Casting `}<MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`float64(variable)`}</MDXTag></MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Errors are thrown for mismatched types`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`For scope, you are able to declare blocks by themselves - Each package is a implicit block`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"functions\"}}>{`Functions`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-go\"}}>{`// not available outside the package\nfunc main() {\n    myFunction()\n}\n\nfunc myFunction() {\n    fmt.Println(\"Running myFunction\")\n}\n\nfunc MyPublicFunction() {\n    fmt.Println(\"Running MyPublicFunction\")\n}\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`You can enforce type safety for parameters by adding the type expected to the function `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`func myFunc(test string, number int) {}`}</MDXTag></MDXTag>\n<MDXTag name=\"ul\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Go doesn't allow default parameter values`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`No named values`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`No method overloading`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"p\" components={components}>{`For returning a certain value, you can enfore this by the following`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{}}>{`func myFunc(test string, number int) int {}\nfunc myFuncTwo(numberOne int, number int) (sum int) {\n    return number + numberOne;\n}\nfunc myFuncThree(number int) (difference int) {\n    difference = number + 4;\n}\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"multiple-return-values\"}}>{`Multiple return values`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-go\"}}>{`package main\n\nimport (\n    \"fmt\",\n    \"math\",\n    \"log\"\n)\n\nfunc main() {\n    squareRoot, err := squareRoot(-1)\n    if err != nil {\n        log.Fatal(err)\n    }\n    fmt.Println(squareRoot)\n}\n\nfunc squareRoot(x float64) (float64, error) {\n    x < 0 {\n        return 0, fmt.Errorf(\"Can't take a negative number\")\n    }\n    return math.Sqrt(x), nil\n}\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`As for errors`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-go\"}}>{`package main\n\nimport (\n    \"fmt\",\n    \"os\"\n)\n\n// panic errors - no good!\nfunc mainBad() {\n    fileInfo, _ := os.Stat(\"existent.txt\")\n    fmt.Println(fileInfo.Size())\n    fileInfo, _ := os.Stat(\"nonexistent.txt\")\n    fmt.Println(fileInfo.Size())\n}\n\n// instead, do this\nfunc main() {\n    fileInfo, error := os.Stat(\"existent.txt\")\n    if error != nil {\n        fmt.Println(error)\n    } else {\n        fmt.Println(fileInfo.Size())\n    }\n    fileInfo, error := os.Stat(\"nonexistent.txt\")\n    if error != nil {\n        fmt.Println(error)\n    } else {\n        fmt.Println(fileInfo.Size())\n    }\n}\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"the-go-formatting-tool\"}}>{`The Go Formatting Tool`}</MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`go fmt <filename>`}</MDXTag>{` will update the file itself and it will nicely format it.`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"control-structures\"}}>{`Control Structures`}</MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"for-loops\"}}>{`For loops`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-go\"}}>{`for i := 1; i <= 3; i++ {\n    fmt.Println(i)\n}\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"if-statements\"}}>{`If statements`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-go\"}}>{`if true {\n    fmt.Println(\"You'll come here\")\n} else if false {\n    // ...\n} else {\n    // ...\n}\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"switch-statement\"}}>{`Switch statement`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Switch statements look like they do not need a break.`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-go\"}}>{`switch doorNumber {\n    case 1:\n        fmt.Println(\"new car \")\n    case 2:\n        // ...\n    default:\n        // ...\n}\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"data-structures\"}}>{`Data Structures`}</MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"pointers\"}}>{`Pointers`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`You can create a pointer to a variable too.`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-go\"}}>{`package main\n\nimport \"fmt\"\n\nfunc main() {\n    var aValue float64 = 1.23\n    var aPointer *float64 = &aValue\n    fmt.Println(\"aPointer\", aPointer)\n    fmt.Println(\"*aPointer\", *aPointer)\n}\n\n/*\n    Prints\n    aPointer 0xc42000a3b8\n    *aPointer 1.23\n */\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`There are situations where the pointer is better to use than using a value directly.`}</MDXTag>\n<MDXTag name=\"ol\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ol\">{`Functions that need to affect their argument. Args in funcs are always passed by value. The function recieves a copy of the value.`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ol\">{`Passing a complex value to a function - example a complex struct`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-go\"}}>{`// Example\npackage main\n\nimport \"fmt\"\n\n// Not using the pointer\nfunc main() {\n    num := 8.2\n    halve(num)\n    fmt.Println(num)\n}\n\nfunc halve(number float64) {\n    number = number / 2;\n    fmt.Println(number)\n}\n\n// Using the pointer\npackage main\n\nimport \"fmt\"\n\n// Not using the pointer\nfunc main() {\n    num := 8.2\n    halve(&num)\n    fmt.Println(num)\n}\n\nfunc halve(number *float64) {\n    *number = *number / 2\n    fmt.Println(*number)\n}\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"arrays\"}}>{`Arrays`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Slices are used more commonly used than arrays, but given they are built on arrays, we'll explore arrays first.`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-go\"}}>{`func main() {\n    var months [3]string // array of three strings\n    months[0] = \"Jan\"\n    months[1] = \"Feb\"\n    months[2] = \"Mar\"\n    fmt.Println(months[0])\n    // also could be months := [3]string{\"Jan\", \"Feb\", \"Mar\"}\n\n    for i := 0; i < len(months); i++ {\n        fmt.Println(months[i])\n    }\n\n    // another way to loop through the array\n    for i, month := range months {\n        fmt.Println(month)\n    }\n\n    // omit the index\n    for _, month := range months {\n        fmt.Println(month)\n    }\n}\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`The main limitation arrays are used are because you cannot assign values to an array larger than it's initial allocated memory size.`}</MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"slices\"}}>{`Slices`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Slices also represent an array. Slices are easier to work with.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`While `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`len`}</MDXTag>{` shows the length, `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`cap`}</MDXTag>{` shows the capacity of how it can grow.`}</MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`append`}</MDXTag>{` can be used to append to a slice.`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-go\"}}>{`package main\n\nimport \"fmt\"\n\nfunc main() {\n    a := [5]int{0,1,2,3,4}\n    s1 := a[0:3]\n    s2 := a[2:5]\n    fmt.Println(a, s1, s2)\n    // prints [0 1 2 3 4] [0 1 2] [2 3 4]\n    a[2] = 88\n    fmt.Println(a, s1, s2)\n    // prints [0 1 88 3 4] [0 1 88] [2 3 88]\n    s1 = s1[0:4]\n    fmt.Println(a, s1, s2)\n    // prints [0 1 88 3 4] [0 1 88 3] [88 3 4]\n    s2 = s2[0:4] // throws an error\n    s2 = append(s2, 5) // returns a new slice\n    fmt.Println(a, s1, s2)\n    // prints [0 1 88 3 4] [0 1 88 3] [88 3 4 5]\n    s2[0] = 999\n    // prints [0 1 88 3 4] [0 1 88 3] [999 3 4 5]\n\n    // Declaring an array on its own\n    s3 := []int{1, 2, 3}\n    fmt.Println(s3) // prints [1 2 3]\n    s3 = append(s3, 4, 5)\n    fmt.Println(s3) // [1 2 3 4 5]\n}\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"maps\"}}>{`Maps`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Slices are good for storing collections, but the only way to get elements back is by the index.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`While in most collections you have dictionaries, hashes, hash maps, Go refers to these data structures as `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`Maps`}</MDXTag>{`.`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-go\"}}>{`func main() {\n    ages := map[string]float64{}\n    ages[\"Alice\"] = 12\n    ages[\"Bob\"] = 9\n    fmt.Println(ages) // prints map[Alice:12 Bob:9]\n}\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`Similar to arrays or slices, we can use a literal to prefill the values.`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-go\"}}>{`func main() {\n    ages := map[string]float64{\"Alice\":12, \"Bob\":9}\n    fmt.Println(ages) // prints map[Alice:12 Bob:9]\n    for name, age := range ages {\n        fmt.Println(name, age)\n    }\n\n    for _, age := range ages {\n        fmt.Println(age)\n    }\n\n    for name := range ages {\n        fmt.Println(name)\n    }\n}\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"custom-types\"}}>{`Custom Types`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`We can use the `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`type`}</MDXTag>{` keyword to define a type and it's underlying type.`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-go\"}}>{`package main\n\nimport \"fmt\"\n\ntype Minutes int\ntype Hours int\n\nfunc main() {\n    minutes := Minutes(37)\n    hours := Hours(37)\n\n    fmt.Println(minutes, hours)\n}\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`We can also compare custom types to their underlying type. However two custom types with the same underlying type cannot be compared.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`The more commonly used aggregate type is a Struct which is how we can base custom types on them.`}</MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"methods\"}}>{`Methods`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Define new behaviours for types.`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-go\"}}>{`package main\n\nimport (\n    \"fmt\"\n    \"strings\"\n)\n\ntype Title string\n\n// the following has an extra reciever arg t\nfunc (t Title) FixCase() string {\n    return strings.Title(string(t))\n}\n\nfunc main() {\n    name := Title(\"the matrix\")\n    fixed := name.FixCase()\n    fmt.Println(fixed)\n}\n`}</MDXTag></MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-go\"}}>{`package main\n\nimport (\n    \"fmt\"\n)\n\ntype Hours int\n\nfunc (h *Hours) Increment() Hours {\n  *h = (*h + 1) % 24\n  return *h\n}\n\nfunc main() {\n  hours := Hours(23)\n  hours.Increment()\n  fmt.Println(hours) // Prints \"0\"\n}\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"structs\"}}>{`Structs`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-go\"}}>{`package main\n\nimport \"fmt\"\n\ntype Monitor struct {\n    Resolution  string\n    Connector   string\n    Value       float64 // fields with a name and a type\n}\n\nfunc main() {\n    monitor := Monitor{}\n    monitor.Resolution = \"1080p\"\n    monitor.Connector = \"HDMI\"\n    monitor.Value = 249.99\n    fmt.Println(monitor.Resolution, monitor.Connector, monitor.Value)\n\n    // could also go monitor := Monitor{\"1080p\", \"HDMI\", 249.99}\n}\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`If you init and allocate a struct, it will initialise with some default values.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`You can also add a \"exported\" get and set method to help enforce the concept of private variables.`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-go\"}}>{`package main\n\nimport (\n    \"fmt\"\n)\n\ntype Clock struct {\n  Hours int\n  Minutes int\n}\n\n// DEFINE A \"Noon\" FUNCTION HERE\nfunc Noon(hours int, min int) Clock {\n  c := Clock{}\n  c.Hours = 12\n  c.Minutes = 0\n\n  return c\n}\n\nfunc main() {\n  c := Noon(12, 10)\n  fmt.Println(c)\n}\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"interfaces\"}}>{`Interfaces`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`When you have a concrete type, you know what it is and what it can do. An interface is defining what something is but not what it can do.`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-go\"}}>{`type FourLegged interface {\n    Walk()\n    Sit()\n}\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`Implementation in practise`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-go\"}}>{`type Part interface {\n    Specs() string\n    Price() string\n}\n\nfunc Summary(part Part) string {\n    return part.Specs() + \"/n\" + part.Price()\n}\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`If we create slice with that type as well, then we can use that slice for anything that satisfies the interface. This could allow us to slice, append to the slice and use the range to iterate through.`}</MDXTag>\n<MDXTag name=\"h4\" components={components} props={{\"id\":\"challenge\"}}>{`Challenge`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-go\"}}>{`// calendar.go\npackage calendar\n\nimport \"fmt\"\n\ntype Calendar struct {\n  Year int\n  Month int\n  Day int\n}\n\nfunc (c Calendar) Display() {\n  fmt.Printf(\"%04d-%02d-%02d\", c.Year, c.Month, c.Day)\n}\n\n// clock.go\npackage clock\n\nimport \"fmt\"\n\ntype Clock struct {\n    Hours int\n    Minutes int\n}\n\nfunc (c Clock) Display() {\n    fmt.Printf(\"%02d:%02d\", c.Hours, c.Minutes)\n}\n\n// schedule.go\npackage schedule\n\n// DECLARE A Displayable INTERFACE HERE\ntype Displayable interface {\n    Display()\n}\n// DECLARE A Print FUNCTION HERE\nfunc Print(display Displayable) {\n    display.Display()\n}\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"concurrency\"}}>{`Concurrency`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-go\"}}>{`package main\n\nimport (\n    \"fmt\"\n    \"time\"\n)\n\nfunc longTask() {\n    fmt.Println(\"Starting long task\")\n    time.Sleep(3 * time.Second)\n    fmt.Println(\"Long task finished\")\n}\n\nfunc main() {\n    go longTask()\n    go longTask()\n    go longTask()\n    time.Sleep(4 * time.Second) // just for show - we can use channels instead\n}\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"channels\"}}>{`Channels`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`We can't simply try to use the time.Sleep with the keyword go given that the go routine doesn't give a value right away.`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-go\"}}>{`package main\n\nimport (\n    \"fmt\"\n    \"math/rand\"\n    \"time\"\n)\n\nfunc longTask() int {\n    delay := rand.Intn(5)\n    fmt.Println(\"Starting long task\")\n    time.Sleep(time.Duration(delay) * time.Second)\n    fmt.Println(\"Long task finished\")\n    return delay\n}\n\nfunc main() {\n    rand.Seed(time.Now().Unix())\n    time := longTask()\n    fmt.Println(\"Took\", time, \"seconds\")\n}\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`What we can do instead is use a channel to pass a message back to the main go routine.`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-go\"}}>{`package main\n\nimport (\n    \"fmt\"\n    \"math/rand\"\n    \"time\"\n)\n\n// notice we get rid of the int return value\nfunc longTask(channel chan int) {\n    delay := rand.Intn(5)\n    fmt.Println(\"Starting long task\")\n    time.Sleep(time.Duration(delay) * time.Second)\n    fmt.Println(\"Long task finished\")\n    channel <- delay\n}\n\nfunc main() {\n    rand.Seed(time.Now().Unix())\n    channel := make(chan int)\n    for i := 1; i <= 3; i++ {\n        go longTask(channel)\n    }\n    // uses the arrow prefix\n    for i := 1; i <= 3; i++ {\n        fmt.Println(\"Took\", <-channel, \"seconds\")\n    }\n}\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h4\" components={components} props={{\"id\":\"challenge-1\"}}>{`Challenge`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{}}>{`package channels\n\nfunc readFromChannel() string {\n    // CREATE A CHANNEL FOR string VALUES HERE\n    channel := make(chan string)\n    // HERE, CALL writeToChannel AS A GOROUTINE, AND PASS IT YOUR CHANNEL\n    go writeToChannel(channel)\n    // HERE, READ A STRING FROM YOUR CHANNEL AND RETURN IT\n    return <-channel\n}\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"summary\"}}>{`Summary`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`In the course, we've looked at:`}</MDXTag>\n<MDXTag name=\"ul\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Packages`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Type`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Functions`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Go format tool`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Arrays, Slices and Maps`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Structs for field aggregation - Adding methods - Interfaces`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Using Go routines and Channels`}</MDXTag>\n</MDXTag>\n           </MDXTag>\n  }\n}\n  "]}]}