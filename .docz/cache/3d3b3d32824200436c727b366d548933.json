{"remainingRequest":"/Users/okeeffe_d/Project-Imposter/developer-notes/node_modules/docz-core/node_modules/babel-loader/lib/index.js??ref--6-1!/Users/okeeffe_d/Project-Imposter/developer-notes/node_modules/@mdx-js/loader/index.js??ref--6-2!/Users/okeeffe_d/Project-Imposter/developer-notes/node_modules/source-map-loader/index.js!/Users/okeeffe_d/Project-Imposter/developer-notes/manual/Style/base-mixins.md","dependencies":[{"path":"/Users/okeeffe_d/Project-Imposter/developer-notes/manual/Style/base-mixins.md","mtime":1548282824916},{"path":"/Users/okeeffe_d/Project-Imposter/developer-notes/node_modules/cache-loader/dist/cjs.js","mtime":1561535530324},{"path":"/Users/okeeffe_d/Project-Imposter/developer-notes/node_modules/docz-core/node_modules/babel-loader/lib/index.js","mtime":1560300163820},{"path":"/Users/okeeffe_d/Project-Imposter/developer-notes/node_modules/@mdx-js/loader/index.js","mtime":1561535530532},{"path":"/Users/okeeffe_d/Project-Imposter/developer-notes/node_modules/source-map-loader/index.js","mtime":1548285283521}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9vYmplY3RXaXRob3V0UHJvcGVydGllcyBmcm9tIi9Vc2Vycy9va2VlZmZlX2QvUHJvamVjdC1JbXBvc3Rlci9kZXZlbG9wZXItbm90ZXMvbm9kZV9tb2R1bGVzL2JhYmVsLXByZXNldC1yZWFjdC1hcHAvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzIjsvKiBAanN4IG1keCAqL2ltcG9ydCBSZWFjdCBmcm9tJ3JlYWN0JztpbXBvcnR7bWR4fWZyb20nQG1keC1qcy9yZWFjdCc7LyogQGpzeCBtZHggKi92YXIgbWFrZVNob3J0Y29kZT1mdW5jdGlvbiBtYWtlU2hvcnRjb2RlKG5hbWUpe3JldHVybiBmdW5jdGlvbiBNRFhEZWZhdWx0U2hvcnRjb2RlKHByb3BzKXtjb25zb2xlLndhcm4oIkNvbXBvbmVudCAiK25hbWUrIiB3YXMgbm90IGltcG9ydGVkLCBleHBvcnRlZCwgb3IgcHJvdmlkZWQgYnkgTURYUHJvdmlkZXIgYXMgZ2xvYmFsIHNjb3BlIik7cmV0dXJuIG1keCgiZGl2Iixwcm9wcyk7fTt9O3ZhciBsYXlvdXRQcm9wcz17fTt2YXIgTURYTGF5b3V0PSJ3cmFwcGVyIjtleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBNRFhDb250ZW50KF9yZWYpe3ZhciBjb21wb25lbnRzPV9yZWYuY29tcG9uZW50cyxwcm9wcz1fb2JqZWN0V2l0aG91dFByb3BlcnRpZXMoX3JlZixbImNvbXBvbmVudHMiXSk7cmV0dXJuIG1keChNRFhMYXlvdXQsT2JqZWN0LmFzc2lnbih7fSxsYXlvdXRQcm9wcyxwcm9wcyx7Y29tcG9uZW50czpjb21wb25lbnRzLG1keFR5cGU6Ik1EWExheW91dCJ9KSxtZHgoImgxIix7ImlkIjoic3R5bGVzLS1iYXNlLS1taXhpbnMifSwiU3R5bGVzID4gQmFzZSA+IE1peGlucyIpLG1keCgicCIsbnVsbCwiVGhlIG1peGlucyBmaWxlIGlzIHRoZSBwbGFjZSB0byBzdG9yZSBhbGwgb2YgdGhlIGZ1bmN0aW9uYWwgU2FzcyBtaXhpbnMgdXNlZCB0aHJvdWdob3V0IHRoZSBwcm9qZWN0LiIpLG1keCgiaDIiLHsiaWQiOiJpbmxpbmUtYmxvY2stbGlzdCJ9LCJpbmxpbmUtYmxvY2stbGlzdCIpLG1keCgicHJlIixudWxsLG1keCgiY29kZSIsT2JqZWN0LmFzc2lnbih7cGFyZW50TmFtZToicHJlIn0seyJjbGFzc05hbWUiOiJsYW5ndWFnZS1jc3MifSksIi8vIGlubGluZS1ibG9jayBsaXN0XG5AbWl4aW4gaW5saW5lLWJsb2NrLWxpc3QoJHBhZGRpbmc6IGZhbHNlKSB7XG4gICAgbWFyZ2luOiAwO1xuICAgIHBhZGRpbmc6IDA7XG4gICAgYm9yZGVyOiAwO1xuICAgIEBpbmNsdWRlIGNsZWFyZml4O1xuXG4gICAgbGkge1xuICAgICAgICBsaXN0LXN0eWxlLXR5cGU6IG5vbmU7XG4gICAgICAgIEBpbmNsdWRlIGlubGluZS1ibG9jaygpO1xuICAgICAgICB3aGl0ZS1zcGFjZTogbm93cmFwO1xuICAgICAgICBAaWYgJHBhZGRpbmcge1xuICAgICAgICAgICAgcGFkZGluZzoge1xuICAgICAgICAgICAgICAgIGxlZnQ6ICRwYWRkaW5nO1xuICAgICAgICAgICAgICAgIHJpZ2h0OiAkcGFkZGluZztcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbn1cbiIpKSxtZHgoImgyIix7ImlkIjoib21lZ2EtcmVzZXQifSwib21lZ2EtcmVzZXQiKSxtZHgoInByZSIsbnVsbCxtZHgoImNvZGUiLE9iamVjdC5hc3NpZ24oe3BhcmVudE5hbWU6InByZSJ9LHsiY2xhc3NOYW1lIjoibGFuZ3VhZ2UtY3NzIn0pLCJAbWl4aW4gb21lZ2EtcmVzZXQoJG50aCkge1xuICAgICY6bnRoLWNoaWxkKCN7JG50aH0pIHtcbiAgICAgICAgbWFyZ2luLXJpZ2h0OiBmbGV4LWd1dHRlcigpO1xuICAgIH1cbiAgICAmOm50aC1jaGlsZCgjeyRudGh9ICsgMSkge1xuICAgICAgICBjbGVhcjogbm9uZTtcbiAgICB9XG59XG4iKSksbWR4KCJoMiIseyJpZCI6ImZvbnQtc2l6ZSJ9LCJmb250LXNpemUiKSxtZHgoInByZSIsbnVsbCxtZHgoImNvZGUiLE9iamVjdC5hc3NpZ24oe3BhcmVudE5hbWU6InByZSJ9LHsiY2xhc3NOYW1lIjoibGFuZ3VhZ2UtY3NzIn0pLCJAbWl4aW4gZm9udC1zaXplKCRmb250U2l6ZSwgJGxpbmVIZWlnaHQ6IG51bGwpIHtcbiAgICBmb250LXNpemU6ICRmb250U2l6ZTtcbiAgICBmb250LXNpemU6IHJlbSgkZm9udFNpemUpIC8gMC42MjU7XG5cbiAgICBAaWYgKCRsaW5lSGVpZ2h0KSB7XG4gICAgICAgIGxpbmUtaGVpZ2h0OiBlbSgkbGluZUhlaWdodCwgJGZvbnRTaXplKTtcbiAgICB9IEBlbHNlIHtcbiAgICAgICAgbGluZS1oZWlnaHQ6IGluaGVyaXQ7XG4gICAgfVxufVxuIikpLG1keCgiaDIiLHsiaWQiOiJpbmxpbmUtYmxvY2sifSwiaW5saW5lLWJsb2NrIiksbWR4KCJwcmUiLG51bGwsbWR4KCJjb2RlIixPYmplY3QuYXNzaWduKHtwYXJlbnROYW1lOiJwcmUifSx7ImNsYXNzTmFtZSI6Imxhbmd1YWdlLWNzcyJ9KSwiLy8gaW5saW5lLWJsb2NrIGZvciBvbGQgYnJvd3NlcnNcbkBtaXhpbiBpbmxpbmUtYmxvY2soKSB7XG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgICp6b29tOiAxO1xuICAgICpkaXNwbGF5OiBpbmxpbmU7XG59XG4iKSksbWR4KCJoMiIseyJpZCI6InJlc2V0LWJveC1tb2RlbCJ9LCJyZXNldC1ib3gtbW9kZWwiKSxtZHgoInByZSIsbnVsbCxtZHgoImNvZGUiLE9iamVjdC5hc3NpZ24oe3BhcmVudE5hbWU6InByZSJ9LHsiY2xhc3NOYW1lIjoibGFuZ3VhZ2UtY3NzIn0pLCJAbWl4aW4gcmVzZXQtYm94LW1vZGVsIHtcbiAgICBtYXJnaW46IDA7XG4gICAgcGFkZGluZzogMDtcbiAgICBib3JkZXI6IDA7XG59XG4iKSksbWR4KCJoMiIseyJpZCI6ImFic29sdXRlLWZpbGwifSwiYWJzb2x1dGUtZmlsbCIpLG1keCgicHJlIixudWxsLG1keCgiY29kZSIsT2JqZWN0LmFzc2lnbih7cGFyZW50TmFtZToicHJlIn0seyJjbGFzc05hbWUiOiJsYW5ndWFnZS1jc3MifSksIkBtaXhpbiBhYnNvbHV0ZS1maWxsIHtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgdG9wOiAwO1xuICAgIGxlZnQ6IDA7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgaGVpZ2h0OiAxMDAlO1xufVxuIikpLG1keCgiaDIiLHsiaWQiOiJoZWFkaW5ncyJ9LCJoZWFkaW5ncyIpLG1keCgicHJlIixudWxsLG1keCgiY29kZSIsT2JqZWN0LmFzc2lnbih7cGFyZW50TmFtZToicHJlIn0seyJjbGFzc05hbWUiOiJsYW5ndWFnZS1jc3MifSksIkBtaXhpbiBoZWFkaW5ncygkZnJvbTogMSwgJHRvOiA2KSB7XG4gICAgQGZvciAkaSBmcm9tICRmcm9tIHRocm91Z2ggJHRvIHtcbiAgICAgICAgaCN7JGl9IHtcbiAgICAgICAgICAgIEBjb250ZW50O1xuICAgICAgICB9XG4gICAgfVxufVxuIikpLG1keCgiaDIiLHsiaWQiOiJiYWNrZ3JvdW5kLWltYWdlIn0sImJhY2tncm91bmQtaW1hZ2UiKSxtZHgoInByZSIsbnVsbCxtZHgoImNvZGUiLE9iamVjdC5hc3NpZ24oe3BhcmVudE5hbWU6InByZSJ9LHsiY2xhc3NOYW1lIjoibGFuZ3VhZ2UtY3NzIn0pLCJAbWl4aW4gYmFja2dyb3VuZC1pbWFnZSgkcGF0aCkge1xuICAgIGJhY2tncm91bmQtaW1hZ2U6IHVybCguLi9pbWcvI3skcGF0aH0ucG5nKTtcbiAgICBiYWNrZ3JvdW5kLWltYWdlOiBsaW5lYXItZ3JhZGllbnQodHJhbnNwYXJlbnQsIHRyYW5zcGFyZW50KSwgdXJsKC4uL2ltZy8jeyRwYXRofS5zdmcpO1xufVxuIikpLG1keCgiaDIiLHsiaWQiOiJyZXNldC11bCJ9LCJyZXNldC11bCIpLG1keCgicHJlIixudWxsLG1keCgiY29kZSIsT2JqZWN0LmFzc2lnbih7cGFyZW50TmFtZToicHJlIn0seyJjbGFzc05hbWUiOiJsYW5ndWFnZS1jc3MifSksIi8qIFJlc2V0IHVub3JkZXJlZCBsaXN0IHN0eWxlICovXG5AbWl4aW4gcmVzZXQtdWwge1xuICAgIGxpc3Qtc3R5bGUtdHlwZTogbm9uZTtcbiAgICBtYXJnaW46IDA7XG4gICAgcGFkZGluZzogMDtcbiAgICBvdmVyZmxvdzogYXV0bztcbn1cbiIpKSxtZHgoImgyIix7ImlkIjoiaGlkZS10ZXh0In0sImhpZGUtdGV4dCIpLG1keCgicHJlIixudWxsLG1keCgiY29kZSIsT2JqZWN0LmFzc2lnbih7cGFyZW50TmFtZToicHJlIn0seyJjbGFzc05hbWUiOiJsYW5ndWFnZS1jc3MifSksIkBtaXhpbiBoaWRlLXRleHQge1xuICAgIG92ZXJmbG93OiBoaWRkZW47XG4gICAgdGV4dC1pbmRlbnQ6IDEwMSU7XG4gICAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcbn1cbiIpKSxtZHgoImgyIix7ImlkIjoiX25lYXQtcGFyc2UtbWVkaWEifSwiXyIsIm5lYXQtcGFyc2UtbWVkaWEiKSxtZHgoInAiLG51bGwsIlN3YXBzIG5lYXQgMi4wIHRvIGRlc2t0b3AgZmlyc3QiKSxtZHgoInByZSIsbnVsbCxtZHgoImNvZGUiLE9iamVjdC5hc3NpZ24oe3BhcmVudE5hbWU6InByZSJ9LHsiY2xhc3NOYW1lIjoibGFuZ3VhZ2UtY3NzIn0pLCJAZnVuY3Rpb24gX25lYXQtcGFyc2UtbWVkaWEoJG1lZGlhKSB7XG4gICAgQGlmIHR5cGUtb2YoJG1lZGlhKSA9PSBudW1iZXIge1xuICAgICAgICBAcmV0dXJuIFwib25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6ICN7JG1lZGlhfSlcIjtcbiAgICB9IEBlbHNlIGlmIHR5cGUtb2YoJG1lZGlhKSA9PSBzdHJpbmcge1xuICAgICAgICBAcmV0dXJuIFwiI3skbWVkaWF9XCI7XG4gICAgfVxufVxuIikpLG1keCgiaDIiLHsiaWQiOiJiYWNrZ3JvdW5kLWNvbG9yIn0sImJhY2tncm91bmQtY29sb3IiKSxtZHgoInAiLG51bGwsIlNldCBkZWZhdWx0IGJhY2tncm91bmQtY29sb3IgdHJhbnNpdGlvbi4iKSxtZHgoInByZSIsbnVsbCxtZHgoImNvZGUiLE9iamVjdC5hc3NpZ24oe3BhcmVudE5hbWU6InByZSJ9LHsiY2xhc3NOYW1lIjoibGFuZ3VhZ2UtY3NzIn0pLCJAbWl4aW4gYmFja2dyb3VuZC1jb2xvciRjb2xvciwgJGxpZ2h0ZW46IGZhbHNlKSB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogJGNvbG9yO1xuICAgIHRyYW5zaXRpb246IGJhY2tncm91bmQtY29sb3IgNjAwbXMgZWFzZS1pbjtcblxuICAgICY6aG92ZXIsXG4gICAgJjphY3RpdmUge1xuICAgICAgICBAaWYgJGxpZ2h0ZW4ge1xuICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogbGlnaHRlbigkY29sb3IsIDMwJSk7XG4gICAgICAgIH0gQGVsc2Uge1xuICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogZGFya2VuKCRjb2xvciwgMzAlKTtcbiAgICAgICAgfVxuICAgIH1cbn1cbiIpKSxtZHgoImgyIix7ImlkIjoiY29sb3IifSwiY29sb3IiKSxtZHgoInByZSIsbnVsbCxtZHgoImNvZGUiLE9iamVjdC5hc3NpZ24oe3BhcmVudE5hbWU6InByZSJ9LHsiY2xhc3NOYW1lIjoibGFuZ3VhZ2UtY3NzIn0pLCJAbWl4aW4gY29sb3IoJGNvbG9yLCAkbGlnaHRlbjogZmFsc2UpIHtcbiAgICBjb2xvcjogJGNvbG9yO1xuICAgIHRyYW5zaXRpb246IGNvbG9yIDYwMG1zIGVhc2UtaW47XG5cbiAgICAmOmhvdmVyLFxuICAgICY6YWN0aXZlIHtcbiAgICAgICAgQGlmICRsaWdodGVuIHtcbiAgICAgICAgICAgIGNvbG9yOiBsaWdodGVuKCRjb2xvciwgMzAlKTtcbiAgICAgICAgfSBAZWxzZSB7XG4gICAgICAgICAgICBjb2xvcjogZGFya2VuKCRjb2xvciwgMzAlKTtcbiAgICAgICAgfVxuICAgIH1cbn1cbiIpKSk7fWlmKHR5cGVvZiBNRFhDb250ZW50IT09J3VuZGVmaW5lZCcmJk1EWENvbnRlbnQmJk1EWENvbnRlbnQ9PT1PYmplY3QoTURYQ29udGVudCkmJk9iamVjdC5pc0V4dGVuc2libGUoTURYQ29udGVudCkpe09iamVjdC5kZWZpbmVQcm9wZXJ0eShNRFhDb250ZW50LCdfX2ZpbGVtZXRhJyx7ZW51bWVyYWJsZTp0cnVlLGNvbmZpZ3VyYWJsZTp0cnVlLHZhbHVlOntuYW1lOiJNRFhDb250ZW50IixmaWxlbmFtZToibWFudWFsL1N0eWxlL2Jhc2UtbWl4aW5zLm1kIn19KTt9TURYQ29udGVudC5pc01EWENvbXBvbmVudD10cnVlOw=="},{"version":3,"sources":["/Users/okeeffe_d/Project-Imposter/developer-notes/manual/Style/base-mixins.md"],"names":["React","mdx","makeShortcode","name","MDXDefaultShortcode","props","console","warn","layoutProps","MDXLayout","MDXContent","components","isMDXComponent"],"mappings":"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","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"styles--base--mixins\"\n    }}>{`Styles > Base > Mixins`}</h1>\n    <p>{`The mixins file is the place to store all of the functional Sass mixins used throughout the project.`}</p>\n    <h2 {...{\n      \"id\": \"inline-block-list\"\n    }}>{`inline-block-list`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-css\"\n      }}>{`// inline-block list\n@mixin inline-block-list($padding: false) {\n    margin: 0;\n    padding: 0;\n    border: 0;\n    @include clearfix;\n\n    li {\n        list-style-type: none;\n        @include inline-block();\n        white-space: nowrap;\n        @if $padding {\n            padding: {\n                left: $padding;\n                right: $padding;\n            }\n        }\n    }\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"omega-reset\"\n    }}>{`omega-reset`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-css\"\n      }}>{`@mixin omega-reset($nth) {\n    &:nth-child(#{$nth}) {\n        margin-right: flex-gutter();\n    }\n    &:nth-child(#{$nth} + 1) {\n        clear: none;\n    }\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"font-size\"\n    }}>{`font-size`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-css\"\n      }}>{`@mixin font-size($fontSize, $lineHeight: null) {\n    font-size: $fontSize;\n    font-size: rem($fontSize) / 0.625;\n\n    @if ($lineHeight) {\n        line-height: em($lineHeight, $fontSize);\n    } @else {\n        line-height: inherit;\n    }\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"inline-block\"\n    }}>{`inline-block`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-css\"\n      }}>{`// inline-block for old browsers\n@mixin inline-block() {\n    display: inline-block;\n    *zoom: 1;\n    *display: inline;\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"reset-box-model\"\n    }}>{`reset-box-model`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-css\"\n      }}>{`@mixin reset-box-model {\n    margin: 0;\n    padding: 0;\n    border: 0;\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"absolute-fill\"\n    }}>{`absolute-fill`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-css\"\n      }}>{`@mixin absolute-fill {\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"headings\"\n    }}>{`headings`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-css\"\n      }}>{`@mixin headings($from: 1, $to: 6) {\n    @for $i from $from through $to {\n        h#{$i} {\n            @content;\n        }\n    }\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"background-image\"\n    }}>{`background-image`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-css\"\n      }}>{`@mixin background-image($path) {\n    background-image: url(../img/#{$path}.png);\n    background-image: linear-gradient(transparent, transparent), url(../img/#{$path}.svg);\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"reset-ul\"\n    }}>{`reset-ul`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-css\"\n      }}>{`/* Reset unordered list style */\n@mixin reset-ul {\n    list-style-type: none;\n    margin: 0;\n    padding: 0;\n    overflow: auto;\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"hide-text\"\n    }}>{`hide-text`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-css\"\n      }}>{`@mixin hide-text {\n    overflow: hidden;\n    text-indent: 101%;\n    white-space: nowrap;\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"_neat-parse-media\"\n    }}>{`_`}{`neat-parse-media`}</h2>\n    <p>{`Swaps neat 2.0 to desktop first`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-css\"\n      }}>{`@function _neat-parse-media($media) {\n    @if type-of($media) == number {\n        @return \"only screen and (max-width: #{$media})\";\n    } @else if type-of($media) == string {\n        @return \"#{$media}\";\n    }\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"background-color\"\n    }}>{`background-color`}</h2>\n    <p>{`Set default background-color transition.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-css\"\n      }}>{`@mixin background-color$color, $lighten: false) {\n    background-color: $color;\n    transition: background-color 600ms ease-in;\n\n    &:hover,\n    &:active {\n        @if $lighten {\n            background-color: lighten($color, 30%);\n        } @else {\n            background-color: darken($color, 30%);\n        }\n    }\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"color\"\n    }}>{`color`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-css\"\n      }}>{`@mixin color($color, $lighten: false) {\n    color: $color;\n    transition: color 600ms ease-in;\n\n    &:hover,\n    &:active {\n        @if $lighten {\n            color: lighten($color, 30%);\n        } @else {\n            color: darken($color, 30%);\n        }\n    }\n}\n`}</code></pre>\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  "]}]}