{"remainingRequest":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/docz-core/node_modules/babel-loader/lib/index.js??ref--6-1!/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/@mdx-js/loader/index.js??ref--6-2!/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/source-map-loader/index.js!/Users/dennis.okeeffe/Project-Imposter/developer-notes/manual/Unity/How-To-Make-A-Video-Game.md","dependencies":[{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/manual/Unity/How-To-Make-A-Video-Game.md","mtime":1562563032099},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/cache-loader/dist/cjs.js","mtime":1581496618588},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/docz-core/node_modules/babel-loader/lib/index.js","mtime":1578565694890},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/@mdx-js/loader/index.js","mtime":1581496618277},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/source-map-loader/index.js","mtime":1580255490569}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/dennis.okeeffe/Project-Imposter/developer-notes/manual/Unity/How-To-Make-A-Video-Game.md"],"names":["React","mdx","makeShortcode","name","MDXDefaultShortcode","props","console","warn","layoutProps","MDXLayout","MDXContent","components","isMDXComponent"],"mappings":"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","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"how-to-make-a-video-game\"\n    }}>{`How to make a video game`}</h1>\n    {\n      /* TOC */\n    }\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"#how-to-make-a-video-game\"\n        }}>{`How to make a video game`}</a>{` - `}<a parentName=\"li\" {...{\n          \"href\": \"#what-is-a-game-engine\"\n        }}>{`What is a game engine?`}</a><ul parentName=\"li\">\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#part-2\"\n            }}>{`Part 2`}</a><ul parentName=\"li\">\n              <li parentName=\"ul\"><a parentName=\"li\" {...{\n                  \"href\": \"#unity-interface\"\n                }}>{`Unity Interface`}</a><ul parentName=\"li\">\n                  <li parentName=\"ul\"><a parentName=\"li\" {...{\n                      \"href\": \"#prefabs\"\n                    }}>{`Prefabs`}</a></li>\n                </ul></li>\n              <li parentName=\"ul\"><a parentName=\"li\" {...{\n                  \"href\": \"#setup-the-project\"\n                }}>{`Setup the project`}</a></li>\n              <li parentName=\"ul\"><a parentName=\"li\" {...{\n                  \"href\": \"#navigating-the-scene-view\"\n                }}>{`Navigating the Scene View`}</a></li>\n              <li parentName=\"ul\"><a parentName=\"li\" {...{\n                  \"href\": \"#position-the-camera\"\n                }}>{`Position the camera`}</a></li>\n              <li parentName=\"ul\"><a parentName=\"li\" {...{\n                  \"href\": \"#image-effects-and-asset-stores\"\n                }}>{`Image effects and asset stores`}</a></li>\n            </ul></li>\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#programming-games\"\n            }}>{`Programming Games`}</a><ul parentName=\"li\">\n              <li parentName=\"ul\"><a parentName=\"li\" {...{\n                  \"href\": \"#programming-with-c-with-unity\"\n                }}>{`Programming with C# with Unity`}</a></li>\n              <li parentName=\"ul\"><a parentName=\"li\" {...{\n                  \"href\": \"#gather-player-input\"\n                }}>{`Gather Player Input`}</a></li>\n              <li parentName=\"ul\"><a parentName=\"li\" {...{\n                  \"href\": \"#moving-a-player-with-animation\"\n                }}>{`Moving a player with animation`}</a></li>\n              <li parentName=\"ul\"><a parentName=\"li\" {...{\n                  \"href\": \"#quaternions\"\n                }}>{`Quaternions`}</a><ul parentName=\"li\">\n                  <li parentName=\"ul\"><a parentName=\"li\" {...{\n                      \"href\": \"#target-rotation\"\n                    }}>{`Target rotation`}</a></li>\n                </ul></li>\n              <li parentName=\"ul\"><a parentName=\"li\" {...{\n                  \"href\": \"#making-a-follow-camera\"\n                }}>{`Making a follow camera`}</a></li>\n            </ul></li>\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#section-3\"\n            }}>{`Section 3`}</a><ul parentName=\"li\">\n              <li parentName=\"ul\"><a parentName=\"li\" {...{\n                  \"href\": \"#adding-the-flies-to-the-swamp\"\n                }}>{`Adding the flies to the swamp`}</a></li>\n              <li parentName=\"ul\"><a parentName=\"li\" {...{\n                  \"href\": \"#adding-the-fly-pickup\"\n                }}>{`Adding the Fly Pickup`}</a><ul parentName=\"li\">\n                  <li parentName=\"ul\"><a parentName=\"li\" {...{\n                      \"href\": \"#pickup-particles\"\n                    }}>{`Pickup Particles`}</a></li>\n                </ul></li>\n              <li parentName=\"ul\"><a parentName=\"li\" {...{\n                  \"href\": \"#creating-the-enemy-in-the-game\"\n                }}>{`Creating the enemy in the game`}</a></li>\n              <li parentName=\"ul\"><a parentName=\"li\" {...{\n                  \"href\": \"#monitor-player-health\"\n                }}>{`Monitor Player Health`}</a></li>\n              <li parentName=\"ul\"><a parentName=\"li\" {...{\n                  \"href\": \"#managing-the-game-state\"\n                }}>{`Managing the game state`}</a></li>\n            </ul></li>\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#adding-audio\"\n            }}>{`Adding Audio`}</a><ul parentName=\"li\">\n              <li parentName=\"ul\"><a parentName=\"li\" {...{\n                  \"href\": \"#game-audio\"\n                }}>{`Game audio`}</a></li>\n              <li parentName=\"ul\"><a parentName=\"li\" {...{\n                  \"href\": \"#controlling-sounds-on-game-objects\"\n                }}>{`Controlling sounds on game objects`}</a></li>\n              <li parentName=\"ul\"><a parentName=\"li\" {...{\n                  \"href\": \"#audio-mixing\"\n                }}>{`Audio mixing`}</a></li>\n              <li parentName=\"ul\"><a parentName=\"li\" {...{\n                  \"href\": \"#exporting-the-game\"\n                }}>{`Exporting the game`}</a></li>\n            </ul></li>\n        </ul></li>\n    </ul>\n    {\n      /* /TOC */\n    }\n    <p>{`How are games made?`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Game designers`}</li>\n      <li parentName=\"ul\">{`Game artists`}</li>\n      <li parentName=\"ul\">{`Game developers`}</li>\n    </ul>\n    <p>{`These roles can be between one or thousands of people.`}</p>\n    <p>{`Game artists deal with what you see and hear in the game.`}</p>\n    <h3 {...{\n      \"id\": \"what-is-a-game-engine\"\n    }}>{`What is a game engine?`}</h3>\n    <p>{`Game engines help deal with things like the physics and rendering graphics.`}</p>\n    <p>{`A game engine is a framework for building games that helps coordinate things like assets and gives you all the tools you need to start coding.`}</p>\n    <p>{`A game engine is not a 3D art engine.`}</p>\n    <p>{`We are Unity as it is easier to learn when you are just getting started.`}</p>\n    <h2 {...{\n      \"id\": \"part-2\"\n    }}>{`Part 2`}</h2>\n    <h3 {...{\n      \"id\": \"unity-interface\"\n    }}>{`Unity Interface`}</h3>\n    <p>{`Create a `}<inlineCode parentName=\"p\">{`_Scenes`}</inlineCode>{` folder.`}</p>\n    <p>{`Game assets are `}<inlineCode parentName=\"p\">{`a piece of media for the game`}</inlineCode>{`. This could be sounds, scripts or models etc.`}</p>\n    <h4 {...{\n      \"id\": \"prefabs\"\n    }}>{`Prefabs`}</h4>\n    <p>{`Stores several objects together. An example `}<inlineCode parentName=\"p\">{`prefab`}</inlineCode>{` is the frog which contains the 3d model, the texture and the animation together.`}</p>\n    <h3 {...{\n      \"id\": \"setup-the-project\"\n    }}>{`Setup the project`}</h3>\n    <p>{`Games use `}<inlineCode parentName=\"p\">{`real time rendering`}</inlineCode>{` where it is drawn at the frame rate. Generally you want to aim for 60fps or higher. This will make is look as smooth as possible.`}</p>\n    <p>{`We can go to `}<inlineCode parentName=\"p\">{`Window > Lighting > Settings`}</inlineCode>{` to adjust things about how the scene is lit.`}</p>\n    <p>{`To adjust the player settings go to `}<inlineCode parentName=\"p\">{`Edit > Project Settings > Player`}</inlineCode>{`.`}</p>\n    <p>{`For quality, go to `}<inlineCode parentName=\"p\">{`Edit > Project Settings > Quality`}</inlineCode>{`.`}</p>\n    <h3 {...{\n      \"id\": \"navigating-the-scene-view\"\n    }}>{`Navigating the Scene View`}</h3>\n    <p>{`The `}<inlineCode parentName=\"p\">{`environment`}</inlineCode>{` prefab links a bunch of Maya elements and groups them as a prefab.`}</p>\n    <p>{`Our environment prefab already has a light associated with it. Ensure after adding that you re-generate the light in the settings.`}</p>\n    <p>{`Anything with a green square is outlining a game object.`}</p>\n    <p>{`After selecting an object, you can use the 3d axis to change the transform of the axis.`}</p>\n    <p>{`On the top left, we can change the tools from position to rotation etc and with similar methods to before, we can rotate the axis.`}</p>\n    <p>{`We can also just use the `}<inlineCode parentName=\"p\">{`qwer`}</inlineCode>{` keys to change between tools.`}</p>\n    <p>{`We can also switch between `}<inlineCode parentName=\"p\">{`global`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`local`}</inlineCode>{` space to help move things around.`}</p>\n    <h3 {...{\n      \"id\": \"position-the-camera\"\n    }}>{`Position the camera`}</h3>\n    <p>{`The scenes looks good so far, but it we need to update the camera.`}</p>\n    <p>{`At the top of the scene window, we have `}<inlineCode parentName=\"p\">{`scene`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`game`}</inlineCode>{` tabs. If we select `}<inlineCode parentName=\"p\">{`game`}</inlineCode>{`, we get to see how the game will look when we play it. We can either write code to control to camera or change the transform.`}</p>\n    <h3 {...{\n      \"id\": \"image-effects-and-asset-stores\"\n    }}>{`Image effects and asset stores`}</h3>\n    <p>{`An image effect can change things like colours etc.`}</p>\n    <p>{`Once we click on the asset store, we can build or share models to use.`}</p>\n    <p>{`Unity is component based so we can add things that way. We can now create a post processing profile to use.`}</p>\n    <h2 {...{\n      \"id\": \"programming-games\"\n    }}>{`Programming Games`}</h2>\n    <h3 {...{\n      \"id\": \"programming-with-c-with-unity\"\n    }}>{`Programming with C# with Unity`}</h3>\n    <p>{`JavaScript is also able to be used, but far less adopted by the Unity commmunity.`}</p>\n    <p>{`After creating a file, you will run into the `}<inlineCode parentName=\"p\">{`Start`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`Update`}</inlineCode>{` methods that are able to run at each frame so that we can edit the code to do specific things.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-csharp\"\n      }}>{`using System.Collections;\nusing System.Collections.Generic;\nusing UnityEngine;\n\npublic class PlayerMovement : MonoBehaviour {\n    private Animator playerAnimator;\n    private float moveHorizontal;\n    private float moveVertical;\n    private Vector3 movement;\n\n    // Use this for initialization\n    void Start () {\n\n    }\n\n    // Update is called once per frame\n    void Update () {\n\n    }\n}\n`}</code></pre>\n    <p>{`Public and private are differing `}<inlineCode parentName=\"p\">{`accessibility levels`}</inlineCode>{`. The second keyword in a declaration is the `}<inlineCode parentName=\"p\">{`type`}</inlineCode>{`.`}</p>\n    <h3 {...{\n      \"id\": \"gather-player-input\"\n    }}>{`Gather Player Input`}</h3>\n    <p>{`We need to record which button they are pressing in each frame.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-csharp\"\n      }}>{`using System.Collections;\nusing System.Collections.Generic;\nusing UnityEngine;\n\npublic class PlayerMovement : MonoBehaviour {\n    private Animator playerAnimator;\n    private float moveHorizontal;\n    private float moveVertical;\n    private Vector3 movement;\n\n    // Use this for initialization\n    void Start () {\n\n    }\n\n    // Update is called once per frame\n    void Update () {\n        moveHorizontal = Input.GetAxisRaw(\"Horizontal\");\n        moveVertical = Input.GetAxisRaw(\"Vertical\");\n\n        movement = new Vector3(moveHorizontal, 0.0f, moveVertical);\n    }\n}\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"moving-a-player-with-animation\"\n    }}>{`Moving a player with animation`}</h3>\n    <p>{`After adding the script to update the script, we need to animate the frog.`}</p>\n    <p>{`The animator components with now be on the inspector for the player.`}</p>\n    <p>{`We will use the playerAnimator to access to Animator component.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-csharp\"\n      }}>{`using System.Collections;\nusing System.Collections.Generic;\nusing UnityEngine;\n\npublic class PlayerMovement : MonoBehaviour {\n    private Animator playerAnimator;\n    private float moveHorizontal;\n    private float moveVertical;\n    private Vector3 movement;\n\n    // Use this for initialization\n    void Start () {\n        // special method to get the \"Animator\" component\n        playerAnimator = GetComponent<Animator>();\n    }\n\n    // Update is called once per frame\n    void Update () {\n        moveHorizontal = Input.GetAxisRaw(\"Horizontal\");\n        moveVertical = Input.GetAxisRaw(\"Vertical\");\n\n        movement = new Vector3(moveHorizontal, 0.0f, moveVertical);\n    }\n\n    // this is code that runs after the \\`update\\` method\n    // this method doesn't run that often without\n    // significant gameplay slow down\n    void FixedUpdate() {\n        if (movement != Vector3.zero) {\n            playerAnimator.SetFloat(\"Speed\", 3f);\n        } else {\n            playerAnimator.SetFloat(\"Speed\", 0);\n        }\n    }\n}\n`}</code></pre>\n    <p>{`So far we haven't told the frog how to change direction or to have the camera follow the movement.`}</p>\n    <h3 {...{\n      \"id\": \"quaternions\"\n    }}>{`Quaternions`}</h3>\n    <p>{`Behind the scenes, Unity stores the rotational values as `}<inlineCode parentName=\"p\">{`Quaternions`}</inlineCode>{`. Most games ending will use these to solve rotational issues.`}</p>\n    <h4 {...{\n      \"id\": \"target-rotation\"\n    }}>{`Target rotation`}</h4>\n    <p>{`The rigid body and box collider is how the objects like `}<inlineCode parentName=\"p\">{`Player`}</inlineCode>{` can interact with the physics and turning.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-csharp\"\n      }}>{`using System.Collections;\nusing System.Collections.Generic;\nusing UnityEngine;\n\npublic class PlayerMovement : MonoBehaviour {\n    private Animator playerAnimator;\n    private float moveHorizontal;\n    private float moveVertical;\n    private Vector3 movement;\n    private float turningSpeed = 20f;\n    private Rigidbody playerRigidBody;\n\n    // Use this for initialization\n    void Start () {\n        // Gather components from the player object\n        // special method to get the \"Animator\" component\n        playerAnimator = GetComponent<Animator> ();\n        playerRigidBody = GetComponent<Rigidbody> ();\n    }\n\n    // Update is called once per frame\n    void Update () {\n        moveHorizontal = Input.GetAxisRaw (\"Horizontal\");\n        moveVertical = Input.GetAxisRaw (\"Vertical\");\n\n        movement = new Vector3(moveHorizontal, 0.0f, moveVertical);\n    }\n\n    // this is code that runs after the \\`update\\` method\n    // this method doesn't run that often without\n    // significant gameplay slow down\n    void FixedUpdate() {\n        if (movement != Vector3.zero) {\n            playerAnimator.SetFloat (\"Speed\", 3f);\n        } else {\n            playerAnimator.SetFloat (\"Speed\", 0);\n        }\n    }\n}\n`}</code></pre>\n    <p>{`We need to perform a `}<inlineCode parentName=\"p\">{`Lerp`}</inlineCode>{` to change the variable from one to another over time.`}</p>\n    <p>{`Unity also doesn't save any change settings when you are playing the game.`}</p>\n    <h3 {...{\n      \"id\": \"making-a-follow-camera\"\n    }}>{`Making a follow camera`}</h3>\n    <p>{`This will have the camera to always follow the parent.`}</p>\n    <p>{`We can use `}<inlineCode parentName=\"p\">{`[SerializeField]`}</inlineCode>{` to expose fields from the code into the inspector.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-csharp\"\n      }}>{`using System.Collections;\nusing System.Collections.Generic;\nusing UnityEngine;\n\npublic class FollowCamera : MonoBehaviour {\n\n    [SerializeField]\n    private Transform player;\n    [SerializeField]\n    private Vector3 offset;\n    private float cameraFollowSpeed = 5f;\n\n    // Update is called once per frame\n    void Update () {\n        Vector3 newPosition = player.position + offset;\n\n        // Smooth transition\n        transform.position = Vector3.Lerp(transform.position, newPosition, cameraFollowSpeed + Time.deltaTime);\n    }\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"section-3\"\n    }}>{`Section 3`}</h2>\n    <h3 {...{\n      \"id\": \"adding-the-flies-to-the-swamp\"\n    }}>{`Adding the flies to the swamp`}</h3>\n    <p>{`Let's add an objective to the game (pickup).`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-csharp\"\n      }}>{`using System.Collections;\nusing System.Collections.Generic;\nusing UnityEngine;\n\npublic class FlyMovement : MonoBehaviour {\n    [SerializeField]\n    private Transform center;\n    private float flySpeed;\n\n    // Use this for initialization\n    void Start () {\n        flySpeed = Random.Range (300f, 700f);\n    }\n\n    // Update is called once per frame\n    void Update () {\n        transform.RotateAround (center.position, Vector3.up, flySpeed * Time.deltaTime);\n    }\n}\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"adding-the-fly-pickup\"\n    }}>{`Adding the Fly Pickup`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-csharp\"\n      }}>{`using System.Collections;\nusing System.Collections.Generic;\nusing UnityEngine;\n\npublic class FlyPickup : MonoBehaviour {\n    // Trigger\n    void OnTriggerEnter(Collider other) {\n        // if collider is the player, execute...\n        if (other.CompareTag (\"Player\")) {\n            Destroy (gameObject);\n        }\n    }\n}\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"pickup-particles\"\n    }}>{`Pickup Particles`}</h4>\n    <p>{`Particle systems are a game object which generates multiple systems.`}</p>\n    <p>{`As for their destruction:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-csharp\"\n      }}>{`using System.Collections;\nusing System.Collections.Generic;\nusing UnityEngine;\n\npublic class PickupParticlesDestruction : MonoBehaviour {\n\n    // Use this for initialization\n    void Start () {\n        Destroy (gameObject, 5f);\n    }\n}\n`}</code></pre>\n    <p>{`You can also create scripts that aren't attached to a 3d model in the scene view.`}</p>\n    <p>{`You can create an empty object from the left hand sidebar. Reset the transform and rename.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-csharp\"\n      }}>{`// Fly Spawner\nusing System.Collections;\nusing System.Collections.Generic;\nusing UnityEngine;\n\npublic class FlyPickup : MonoBehaviour {\n    [SerializeField]\n    private GameObject pickupPrefab;\n\n    // Trigger\n    void OnTriggerEnter(Collider other) {\n        // if collider is the player, execute...\n        if (other.CompareTag (\"Player\")) {\n            // add pickup particles\n            // Quaternion.identity returns no rotation\n            Instantiate (pickupPrefab, transform.position, Quaternion.identity);\n            // Decrement total flies\n            FlySpawner.totalFlies--;\n            Destroy (gameObject);\n        }\n    }\n}\n`}</code></pre>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-csharp\"\n      }}>{`// Fly Pickup\nusing System.Collections;\nusing System.Collections.Generic;\nusing UnityEngine;\n\npublic class FlyPickup : MonoBehaviour {\n    [SerializeField]\n    private GameObject pickupPrefab;\n\n    // Trigger\n    void OnTriggerEnter(Collider other) {\n        // if collider is the player, execute...\n        if (other.CompareTag (\"Player\")) {\n            // add pickup particles\n            // Quaternion.identity returns no rotation\n            Instantiate (pickupPrefab, transform.position, Quaternion.identity);\n            // Decrement total flies\n            FlySpawner.totalFlies--;\n            Destroy (gameObject);\n        }\n    }\n}\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"creating-the-enemy-in-the-game\"\n    }}>{`Creating the enemy in the game`}</h3>\n    <p>{`The bird game object needs to know where the player is. It's known as path finding.`}</p>\n    <p>{`Unity makes path finding very easy.`}</p>\n    <p>{`With the `}<inlineCode parentName=\"p\">{`Nav Mesh Agent`}</inlineCode>{`, you can set the following for the bird:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`Speed: 5\nAngular Speed: 720\nStopping Distance: 5\nRadius: 1\nHeight: 4\n`}</code></pre>\n    <p>{`We now need to create a `}<inlineCode parentName=\"p\">{`Nav Mesh`}</inlineCode>{`. The `}<inlineCode parentName=\"p\">{`NavMeshAgent`}</inlineCode>{` allows us to set a destination target that the \"enemy\" can follow. It is a component that can be attached to a game object so that it can interact with the `}<inlineCode parentName=\"p\">{`NavMesh`}</inlineCode>{`.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-csharp\"\n      }}>{`// BirdMovement.cs\nusing System.Collections;\nusing System.Collections.Generic;\nusing UnityEngine;\n\npublic class BirdMovement : MonoBehaviour {\n\n    [SerializeField]\n    private Transform target;\n    private UnityEngine.AI.NavMeshAgent birdAgent;\n    private Animator birdAnimator;\n\n    // Use this for initialization\n    void Start () {\n        birdAgent = GetComponent<UnityEngine.AI.NavMeshAgent> ();\n        birdAnimator = GetComponent<Animator> ();\n    }\n\n    // Update is called once per frame\n    void Update () {\n        // Set the bird's destination\n        birdAgent.SetDestination (target.position);\n\n        // Measure the magnitude of the NavMeshAgent's velocity\n        float speed = birdAgent.velocity.magnitude;\n\n        // Pass the velocity to the animator component\n        birdAnimator.SetFloat(\"Speed\", speed);\n    }\n}\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"monitor-player-health\"\n    }}>{`Monitor Player Health`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-csharp\"\n      }}>{`using System.Collections;\nusing System.Collections.Generic;\nusing UnityEngine;\n\npublic class PlayerHealth : MonoBehaviour {\n    public bool alive;\n    [SerializeField]\n    private GameObject pickupPrefab;\n    // Use this for initialization\n    void Start () {\n        alive = true;\n    }\n\n    void OnTriggerEnter(Collider other) {\n        if (other.CompareTag (\"Enemy\") && alive == true) {\n            alive = false;\n\n            // Create the pickup particles\n            Instantiate(pickupPrefab, transform.position, Quaternion.identity);\n        }\n    }\n}\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"managing-the-game-state\"\n    }}>{`Managing the game state`}</h3>\n    <p>{`How do we know when the game has started and when we need to restart?`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-csharp\"\n      }}>{`using System.Collections;\nusing System.Collections.Generic;\nusing UnityEngine;\nusing UnityEngine.UI;\nusing UnityEngine.SceneManagement;\n\npublic class GameState : MonoBehaviour {\n    private bool gameStarted = false;\n    [SerializeField]\n    private Text gameStateText;\n    [SerializeField]\n    private GameObject player;\n    [SerializeField]\n    private BirdMovement birdMovement;\n    [SerializeField]\n    private FollowCamera followCamera;\n    private float restartDelay = 3f;\n    private float restartTimer;\n    private PlayerMovement playerMovement;\n    private PlayerHealth playerHealth;\n\n    // Use this for initialization\n    void Start () {\n        Cursor.visible = false;\n\n        playerMovement = player.GetComponent<PlayerMovement> ();\n        playerHealth = player.GetComponent<PlayerHealth> ();\n\n        // do not allow player to move before the game\n        playerMovement.enabled = false;\n        // prevent bird\n        birdMovement.enabled = false;\n        // prevent follow camear\n        followCamera.enabled = false;\n    }\n\n    // Update is called once per frame\n    void Update () {\n        // If the game is not sarted and the player presses the space bar...\n        if (gameStarted == false && Input.GetKeyUp(KeyCode.Space)) {\n            // ... start the game\n            StartGame();\n        }\n\n        // If player is no longer alive ...\n        if (playerHealth.alive == false) {\n            // ...end the game\n            EndGame();\n\n            // ... increment timer to count up to restarting...\n            restartTimer = restartTimer + Time.deltaTime;\n\n            // ...and if it reaches the restart delay...\n            if (restartTimer >= restartDelay) {\n                // reload scene\n                SceneManager.LoadScene(SceneManager.GetActiveScene().buildIndex);\n            }\n        }\n    }\n\n    private void StartGame() {\n        gameStarted = true;\n\n        // set main text to see through\n        gameStateText.color = Color.clear;\n\n        // allow player to move\n        playerMovement.enabled = true;\n        birdMovement.enabled = true;\n        followCamera.enabled = true;\n    }\n\n    private void EndGame() {\n        gameStarted = false;\n\n        gameStateText.text = \"Game Over\";\n        // set main text to see through\n        gameStateText.color = Color.white;\n\n        // remove player from game\n        player.SetActive (false);\n    }\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"adding-audio\"\n    }}>{`Adding Audio`}</h2>\n    <h3 {...{\n      \"id\": \"game-audio\"\n    }}>{`Game audio`}</h3>\n    <p>{`We can add the `}<inlineCode parentName=\"p\">{`Audio Source`}</inlineCode>{` component and select the sounds.`}</p>\n    <p>{`We can also randomly generate a sound to help add something natural.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-csharp\"\n      }}>{`using System.Collections;\nusing System.Collections.Generic;\nusing UnityEngine;\n\npublic class RandomSoundPlayer : MonoBehaviour {\n    private AudioSource audioSource;\n    [SerializeField]\n    private List<AudioClip> soundClips = new List<AudioClip>();\n    [SerializeField]\n    private float soundTimerDelay = 3f;\n    private float soundTimer;\n\n    // Use this for initialization\n    void Start () {\n        audioSource = GetComponent<AudioSource>();\n    }\n\n    // Update is called once per frame\n    void Update () {\n        // incredment a timer to count up to restarting\n        soundTimer = soundTimer + Time.deltaTime;\n\n        // if the timer reaches the delay...\n        if (soundTimer >= soundTimerDelay) {\n            soundTimer = 0f;\n            // choose a random sound\n            AudioClip randomSound = soundClips[Random.Range(0, soundClips.Count)];\n            audioSource.PlayOneShot (randomSound);\n        }\n    }\n}\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"controlling-sounds-on-game-objects\"\n    }}>{`Controlling sounds on game objects`}</h3>\n    <p>{`Add another empty game child and add the audio but select `}<inlineCode parentName=\"p\">{`play on awake`}</inlineCode>{` off.`}</p>\n    <p>{`To make sounds 3d, we need to change the spatial blend. We also need to make sure the game camera and distance are set correctly.`}</p>\n    <p>{`We need to update the scripts to ensure that these clips play at the appropriate time.`}</p>\n    <h3 {...{\n      \"id\": \"audio-mixing\"\n    }}>{`Audio mixing`}</h3>\n    <p>{`Use the audio mixer, create groups and assign these groups via the `}<inlineCode parentName=\"p\">{`AudioComponent`}</inlineCode>{` on the hierarchy or prefab.`}</p>\n    <h3 {...{\n      \"id\": \"exporting-the-game\"\n    }}>{`Exporting the game`}</h3>\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  "]}]}