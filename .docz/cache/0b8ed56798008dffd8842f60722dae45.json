{"remainingRequest":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/docz-core/node_modules/babel-loader/lib/index.js??ref--6-1!/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/@mdx-js/loader/index.js??ref--6-2!/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/source-map-loader/index.js!/Users/dennis.okeeffe/Project-Imposter/developer-notes/manual/Ruby/Ruby-On-Rails.md","dependencies":[{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/manual/Ruby/Ruby-On-Rails.md","mtime":1578866551704},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/cache-loader/dist/cjs.js","mtime":1564095360956},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/docz-core/node_modules/babel-loader/lib/index.js","mtime":1562568123838},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/@mdx-js/loader/index.js","mtime":1565139338792},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/source-map-loader/index.js","mtime":1564095361765}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/dennis.okeeffe/Project-Imposter/developer-notes/manual/Ruby/Ruby-On-Rails.md"],"names":["React","mdx","makeShortcode","name","MDXDefaultShortcode","props","console","warn","layoutProps","MDXLayout","MDXContent","components","isMDXComponent"],"mappings":"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","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"ruby-on-rails\"\n    }}>{`Ruby On Rails`}</h1>\n    <h2 {...{\n      \"id\": \"resources\"\n    }}>{`Resources`}</h2>\n    <ol>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"https://guides.rubyonrails.org/getting_started.html\"\n        }}>{`Getting Start with Rails`}</a></li>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"https://thoughtbot.com/blog/back-to-basics-http-requests\"\n        }}>{`HTTP Requests in Rails Apps`}</a></li>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"https://guides.rubyonrails.org/v5.2/action_controller_overview.html\"\n        }}>{`Action Controlller Overview`}</a></li>\n    </ol>\n    <h2 {...{\n      \"id\": \"tldr\"\n    }}>{`tl;dr`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`rails new [app] # scaffold new app\nrails server # serve on 3000\nbundle install --without production # install dev deps\nrails generate scaffold User name:string email:string # generate basic User schema\nrails generate controller Welcome index # generate new Welcome page\nrails destroy model User # rollback created User\nrails db:migrate # migrate database\nrails db:rollback # undo previous db command\nrails db:migrate VERSION=0 # migrate all the way back to the beginning\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"rake\"\n    }}>{`Rake`}</h3>\n    <ul>\n      <li parentName=\"ul\">{`rake = Ruby Make`}</li>\n      <li parentName=\"ul\">{`rake used extensively before Rails 5`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`rails db:migrate`}</inlineCode>{` === `}<inlineCode parentName=\"li\">{`bundle exec rake db:migrate`}</inlineCode></li>\n    </ul>\n    <h3 {...{\n      \"id\": \"installation\"\n    }}>{`Installation`}</h3>\n    <p><inlineCode parentName=\"p\">{`sudo gem install rails (-v 2.3.8)`}</inlineCode></p>\n    <p>{`Or use `}<inlineCode parentName=\"p\">{`rvm`}</inlineCode>{` or `}<inlineCode parentName=\"p\">{`asdf`}</inlineCode>{`. Follow those instructions from their respective sites.`}</p>\n    <h3 {...{\n      \"id\": \"up-and-running\"\n    }}>{`Up and Running`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`rails new [project-name]\ncd [project-name]\nbundle install # may need to \\`bundle update\\`\nrails server # start the server on port 3000\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"hello-world\"\n    }}>{`Hello World`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`rails new hello-world\ncd hello-world\nrails server # start server on port 3000\n`}</code></pre>\n    <p>{`To change our default page, we can update the `}<inlineCode parentName=\"p\">{`application`}</inlineCode>{` controller and `}<inlineCode parentName=\"p\">{`config/routes.rb`}</inlineCode>{` file.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-ruby\"\n      }}>{`# app/controllers/application_controller\nclass ApplicationController < ActionController::Base\n  def hello\n    render html: \"Hello, world!\"\n  end\nend\n\n# config/routes.rb\nRails.application.routes.draw do\n  # For details on the DSL available within this file, see http://guides.rubyonrails.org/routing.html\n  root 'application#hello'\nend\n`}</code></pre>\n    <p>{`Now if we refresh the page, we should get a basic \"Hello, world!\" string!`}</p>\n    <h2 {...{\n      \"id\": \"generating-a-schema\"\n    }}>{`Generating A Schema`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`rails generate scaffold User name:string email:string # generate basic User schema\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"migrating-new-schemas-to-a-database\"\n    }}>{`Migrating New Schemas To A Database`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`rails db:migrate\n# for older versions\nbundle exec rake db:migrate\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"crud-operations-for-the-records\"\n    }}>{`CRUD Operations For The Records`}</h2>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`URL`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Action`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Purpose`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`/users`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`index`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`List all users`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`/users/1`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`show`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Page to show user with ID 1`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`/users/new`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`new`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Page to make a new user`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`/users/1/edit`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`edit`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Page to edit user with ID 1`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <h3 {...{\n      \"id\": \"setting-users-to-root\"\n    }}>{`Setting /users to root`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-ruby\"\n      }}>{`# config/routes.rb\nRails.application.routes.draw do\n  resources :users\n  # For details on the DSL available within this file, see http://guides.rubyonrails.org/routing.html\n  root 'users#index'\nend\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"a-generated-controller\"\n    }}>{`A Generated Controller`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-ruby\"\n      }}>{`class UsersController < ApplicationController\n  # ...\n\n  # GET /users\n  # GET /users.json\n  def index\n    @users = User.all\n  end\n\n  # ...\nend\n`}</code></pre>\n    <p>{`The `}<inlineCode parentName=\"p\">{`@users = User.all`}</inlineCode>{` fetches all users from the database and stores them in the variable `}<inlineCode parentName=\"p\">{`@users`}</inlineCode>{`.`}</p>\n    <h2 {...{\n      \"id\": \"models\"\n    }}>{`Models`}</h2>\n    <p>{`Using the generated data models, we can set validations and relationships.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-ruby\"\n      }}>{`class Micropost < ApplicationRecord\n  validates :content, length: {maximum: 140}, presence: true\n  belongs_to :user\nend\n\nclass User < ApplicationRecord\n  has_many :microposts\n  validates :content, length: {maximum: 140}\nend\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"building-static-pages\"\n    }}>{`Building Static Pages`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`> rails generate controller StaticPages home help\nRunning via Spring preloader in process 53372\n      create  app/controllers/static_pages_controller.rb\n       route  get 'static_pages/home'\nget 'static_pages/help'\n      invoke  erb\n      create    app/views/static_pages\n      create    app/views/static_pages/home.html.erb\n      create    app/views/static_pages/help.html.erb\n      invoke  test_unit\n      create    test/controllers/static_pages_controller_test.rb\n      invoke  helper\n      create    app/helpers/static_pages_helper.rb\n      invoke    test_unit\n      invoke  assets\n      invoke    coffee\n      create      app/assets/javascripts/static_pages.coffee\n      invoke    scss\n      create      app/assets/stylesheets/static_pages.scss\n`}</code></pre>\n    <p>{`This will build a StaticPages controller and pages `}<inlineCode parentName=\"p\">{`home`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`help`}</inlineCode>{`.`}</p>\n    <p>{`Build that controller using `}<inlineCode parentName=\"p\">{`StaticPages`}</inlineCode>{` would also work if we used the snake case version `}<inlineCode parentName=\"p\">{`static_pages`}</inlineCode>{`.`}</p>\n    <p>{`We can undo things by running `}<inlineCode parentName=\"p\">{`rails destroy controller StaticPages home help`}</inlineCode>{`.`}</p>\n    <p>{`After the pages are generated, we can see it has been added to to our `}<inlineCode parentName=\"p\">{`config/routes.db`}</inlineCode>{` file:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-ruby\"\n      }}>{`Rails.application.routes.draw do\n  get 'static_pages/home'\n  get 'static_pages/help'\n  # ... rest omitted for brevity\nend\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"understanding-how-static-pages-work\"\n    }}>{`Understanding How Static Pages Work`}</h3>\n    <p>{`We can find the logic for our controller coming from `}<inlineCode parentName=\"p\">{`app/controllers/static_pages_controller.rb`}</inlineCode>{`:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-ruby\"\n      }}>{`class StaticPagesController < ApplicationController\n  def home\n  end\n\n  def help\n  end\nend\n`}</code></pre>\n    <p>{`While these methods in Ruby wouldn't do much, the story is different for Rails. First of all, notice that our Controller inherits from the `}<inlineCode parentName=\"p\">{`ApplicationController`}</inlineCode>{`. Rails looks in the Static Pages controller for the URL `}<inlineCode parentName=\"p\">{`/static_pages/home`}</inlineCode>{`, executes the code in the `}<inlineCode parentName=\"p\">{`home`}</inlineCode>{` method and then renders the view.`}</p>\n    <p>{`Given the `}<inlineCode parentName=\"p\">{`home`}</inlineCode>{` action is empty, all the visit to the URL mentioned prior does is render the view.`}</p>\n    <h2 {...{\n      \"id\": \"updating-the-test-helper\"\n    }}>{`Updating The Test Helper`}</h2>\n    <p>{`If you update `}<inlineCode parentName=\"p\">{`test/test_helper.rb`}</inlineCode>{` and update the lines post-last `}<inlineCode parentName=\"p\">{`require`}</inlineCode>{` to include the following, you can use the `}<inlineCode parentName=\"p\">{`Minitest Reporter`}</inlineCode>{`:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-ruby\"\n      }}>{`# ... omitted\nrequire \"minitest/reporters\"\nMinitest::Reporters.use!\n# ... omitted\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"automating-the-running-of-tests\"\n    }}>{`Automating The Running Of Tests`}</h3>\n    <p>{`We can use `}<inlineCode parentName=\"p\">{`Guard`}</inlineCode>{` to do this for us in an equivalent to `}<inlineCode parentName=\"p\">{`watch`}</inlineCode>{` mode!`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`bundle exec guard init\n`}</code></pre>\n    <p>{`For the sake of Git, it is recommended to add the `}<inlineCode parentName=\"p\">{`guard/`}</inlineCode>{` folder into `}<inlineCode parentName=\"p\">{`.gitignore`}</inlineCode>{`.`}</p>\n    <h2 {...{\n      \"id\": \"model-relationships\"\n    }}>{`Model Relationships`}</h2>\n    <p>{`In Ruby, we can model relationships using the following:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`rails generate model Relationship follower_id:integer followed_id:integer\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"adding-an-index-to-db-schemas\"\n    }}>{`Adding An Index To DB Schemas`}</h2>\n    <p>{`Assuming we created the relationship in the above section, we could update the file `}<inlineCode parentName=\"p\">{`db/migrate/[timestamp]_create_relationships.rb`}</inlineCode>{` for indexes:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-ruby\"\n      }}>{`class CreateRelationships < ActiveRecord::Migration[5.0]\n  def change\n    create_table :relationships do |t|\n      t.integer :follower_id\n      t.integer :followed_id\n      t.timestamps\n    end\n\n    # For the indexes\n    add_index :relationships, :follower_id\n    add_index :relationships, :followed_id\n    add_index :relationships, [:follower_id, :followed_id], unique: true\n  end\nend\n`}</code></pre>\n    <p>{`Re-running `}<inlineCode parentName=\"p\">{`rails db:migrate`}</inlineCode>{` will update the relationships for the database.`}</p>\n    <h3 {...{\n      \"id\": \"implementing-the-has-many-relationship\"\n    }}>{`Implementing The Has-Many Relationship`}</h3>\n    <p>{`For the example of `}<inlineCode parentName=\"p\">{`User`}</inlineCode>{`, we can update `}<inlineCode parentName=\"p\">{`app/models/user.rb`}</inlineCode>{` to have the following:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-ruby\"\n      }}>{`# Note: dependent: :destory will remove relationships when the entity is destroyed\nclass User < ApplicationRecord\n  has_many :microposts, dependent: :destroy\n  has_many :active_relationships, class_name: \"Relationships\", foreign_key: \"follower_id\", dependent: :destroy\nend\n`}</code></pre>\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  "]}]}