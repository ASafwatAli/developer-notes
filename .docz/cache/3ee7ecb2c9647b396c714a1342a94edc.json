{"remainingRequest":"/Users/okeeffe_d/Business/Documentation/node_modules/babel-loader/lib/index.js?{\"presets\":[[\"/Users/okeeffe_d/Business/Documentation/node_modules/babel-preset-docz/dist/index.js\",{\"flow\":true,\"typescript\":false,\"parseProps\":true}]],\"plugins\":[[\"/Users/okeeffe_d/Business/Documentation/node_modules/docz-utils/lib/named-asset-import.js\",{\"loaderMap\":{\"svg\":{\"ReactComponent\":\"@svgr/webpack?-prettier,-svgo![path]\"}}}]],\"babelrc\":false,\"cacheCompression\":true,\"compact\":true}!/Users/okeeffe_d/Business/Documentation/manual/WordPress/WP-PC-Cheat-Sheet.md","dependencies":[{"path":"/Users/okeeffe_d/Business/Documentation/manual/WordPress/WP-PC-Cheat-Sheet.md","mtime":1548209344490},{"path":"/Users/okeeffe_d/Business/Documentation/node_modules/cache-loader/dist/cjs.js","mtime":1548134640245},{"path":"/Users/okeeffe_d/Business/Documentation/node_modules/babel-loader/lib/index.js","mtime":1548134640227}],"contextDependencies":[],"result":["function _typeof(obj){if(typeof Symbol===\"function\"&&typeof Symbol.iterator===\"symbol\"){_typeof=function _typeof(obj){return typeof obj;};}else{_typeof=function _typeof(obj){return obj&&typeof Symbol===\"function\"&&obj.constructor===Symbol&&obj!==Symbol.prototype?\"symbol\":typeof obj;};}return _typeof(obj);}function _objectWithoutProperties(source,excluded){if(source==null)return{};var target=_objectWithoutPropertiesLoose(source,excluded);var key,i;if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++){key=sourceSymbolKeys[i];if(excluded.indexOf(key)>=0)continue;if(!Object.prototype.propertyIsEnumerable.call(source,key))continue;target[key]=source[key];}}return target;}function _objectWithoutPropertiesLoose(source,excluded){if(source==null)return{};var target={};var sourceKeys=Object.keys(source);var key,i;for(i=0;i<sourceKeys.length;i++){key=sourceKeys[i];if(excluded.indexOf(key)>=0)continue;target[key]=source[key];}return target;}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\");}}function _defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}function _createClass(Constructor,protoProps,staticProps){if(protoProps)_defineProperties(Constructor.prototype,protoProps);if(staticProps)_defineProperties(Constructor,staticProps);return Constructor;}function _possibleConstructorReturn(self,call){if(call&&(_typeof(call)===\"object\"||typeof call===\"function\")){return call;}return _assertThisInitialized(self);}function _assertThisInitialized(self){if(self===void 0){throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");}return self;}function _getPrototypeOf(o){_getPrototypeOf=Object.setPrototypeOf?Object.getPrototypeOf:function _getPrototypeOf(o){return o.__proto__||Object.getPrototypeOf(o);};return _getPrototypeOf(o);}function _inherits(subClass,superClass){if(typeof superClass!==\"function\"&&superClass!==null){throw new TypeError(\"Super expression must either be null or a function\");}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,writable:true,configurable:true}});if(superClass)_setPrototypeOf(subClass,superClass);}function _setPrototypeOf(o,p){_setPrototypeOf=Object.setPrototypeOf||function _setPrototypeOf(o,p){o.__proto__=p;return o;};return _setPrototypeOf(o,p);}import React from'react';import{MDXTag}from'@mdx-js/tag';var MDXContent=/*#__PURE__*/function(_React$Component){_inherits(MDXContent,_React$Component);function MDXContent(props){var _this;_classCallCheck(this,MDXContent);_this=_possibleConstructorReturn(this,_getPrototypeOf(MDXContent).call(this,props));_this.layout=null;return _this;}_createClass(MDXContent,[{key:\"render\",value:function render(){var _this$props=this.props,components=_this$props.components,props=_objectWithoutProperties(_this$props,[\"components\"]);return React.createElement(MDXTag,{name:\"wrapper\",components:components},React.createElement(MDXTag,{name:\"h1\",components:components,props:{\"id\":\"wp-pres-company-cheat-sheet\"}},\"WP PRES COMPANY CHEAT SHEET\"),React.createElement(MDXTag,{name:\"ul\",components:components},React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},React.createElement(MDXTag,{name:\"a\",components:components,parentName:\"li\",props:{\"href\":\"#wp-pres-company-cheat-sheet\"}},\"WP PRES COMPANY CHEAT SHEET\"),React.createElement(MDXTag,{name:\"ul\",components:components,parentName:\"li\"},React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},React.createElement(MDXTag,{name:\"a\",components:components,parentName:\"li\",props:{\"href\":\"#wppres-1-faq\"}},\"WPPRES-1: FAQ\")),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},React.createElement(MDXTag,{name:\"a\",components:components,parentName:\"li\",props:{\"href\":\"#wppres-2-custom-type-relationships\"}},\"WPPRES-2: Custom Type Relationships\")),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},React.createElement(MDXTag,{name:\"a\",components:components,parentName:\"li\",props:{\"href\":\"#wppres-3-example-of-rendering-a-twig-file-using-timber-wp-functions\"}},\"WPPRES-3: Example of Rendering a .twig file using Timber WP functions\")),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},React.createElement(MDXTag,{name:\"a\",components:components,parentName:\"li\",props:{\"href\":\"#wppres-4-example-php-functionsphp\"}},\"WPPRES-4: Example PHP functions.php\")),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},React.createElement(MDXTag,{name:\"a\",components:components,parentName:\"li\",props:{\"href\":\"#wppres-5-creating-ajax-loading-example\"}},\"WPPRES-5: Creating AJAX (Loading example)\"))))),React.createElement(MDXTag,{name:\"h2\",components:components,props:{\"id\":\"wppres-1-faq\"}},\"WPPRES-1: FAQ\"),React.createElement(MDXTag,{name:\"p\",components:components},React.createElement(MDXTag,{name:\"strong\",components:components,parentName:\"p\"},\"Q: I'm having a database connection failure through MAMP\")),React.createElement(MDXTag,{name:\"p\",components:components},\"A: Double check the wp_options in the siteurl and home settings and that they correctly match MAMP. If you are on the default MAMP ports, you may need localhost:8888 in both addresses. Also check the wp_config.php file in your text editor to ensure the content URL is also correct.\"),React.createElement(MDXTag,{name:\"p\",components:components},\"Also be sure to check your /etc/hosts file to see what address and terms are set up and that you restart the mySQL daemon, MAMP and Sequel Pro.\"),React.createElement(MDXTag,{name:\"p\",components:components},React.createElement(MDXTag,{name:\"strong\",components:components,parentName:\"p\"},\"Q: Adjust get_posts posts_per_page for a data\",\"[\\\"term\\\"]\",\" request\")),React.createElement(MDXTag,{name:\"p\",components:components},\"A: Add it as an argument in twig or create a custom function adjusting the posts_per_page. You can pass any get_posts properties as arguments here.\"),React.createElement(MDXTag,{name:\"p\",components:components},React.createElement(MDXTag,{name:\"strong\",components:components,parentName:\"p\"},\"Q: Where can I find what I need?\")),React.createElement(MDXTag,{name:\"p\",components:components},\"A: Check against the staging website if it is up to grab things like taxonomies, types, and to figure out the layout.\"),React.createElement(MDXTag,{name:\"h2\",components:components,props:{\"id\":\"wppres-2-custom-type-relationships\"}},\"WPPRES-2: Custom Type Relationships\"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{\"className\":\"language-php\"}},\"// in author-articles.php\\n\\n// be sure to require it in the functions.php file!\\n\\n<?php\\n\\nclass AuthorArticles {\\n\\n    // Get all locations w/ recent posts\\n    public static function getAuthorArticles($author) {\\n\\n        $args = new WP_Query([\\n            'post_type' => 'post',\\n            'no_found_rows' => true,\\n            'fields' => 'ids',\\n            'orderby' => 'date',\\n            'order' => 'desc',\\n            'meta_query' => [\\n                    [\\n                        'key' => 'article_author',\\n                        'value' => $author,\\n                        'compare' => 'LIKE'\\n                    ]\\n                ]\\n        ]);\\n\\n        $postIds = $args->get_posts();\\n\\n        $results = Timber::get_posts($postIds);\\n\\n        return Timber::get_posts($postIds);\\n    }\\n\\n}\\n\\n?>\\n\\n// example in use\\n// Author Template - single-authors.php file\\n\\n<?php\\n\\n/* Template Name: Author */\\n\\n$data = Context::getDefaultContext();\\n\\n$data['author'] = Timber::get_post();\\n\\n$data['posts'] = AuthorArticles::getAuthorArticles($data['author']->id);\\n\\n$data['breadcrumbs'] = [\\n    [\\n        'text' => 'Authors',\\n        'url' => $data['site']->url .'/authors'\\n    ]\\n];\\n\\n\\nTimber::render('author.twig', $data);\\n\\n?>\\n\")),React.createElement(MDXTag,{name:\"h2\",components:components,props:{\"id\":\"wppres-3-example-of-rendering-a-twig-file-using-timber-wp-functions\"}},\"WPPRES-3: Example of Rendering a .twig file using Timber WP functions\"),React.createElement(MDXTag,{name:\"ul\",components:components},React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"using the above examples\")),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{\"className\":\"language-html\"}},\"// __author.twig__\\n\\n{% if post.article_author %}\\n{% set author = TimberPost(post.get_field('article_author')) %}\\n<div class=\\\"author-container\\\">\\n    <p>Article By</p>\\n    <div class=\\\"author\\\">\\n        <div class=\\\"image\\\">\\n            {% set image = TimberImage(author.get_thumbnail) %}\\n            {% include 'partials/image.twig' with {\\n                image: image,\\n                size: 'square_400'\\n            } %}\\n        </div>\\n        <div class=\\\"info\\\">\\n            <h3 class=\\\"title\\\">{{ author.title }}</h3>\\n            {% for social in author.get_field('social') %}\\n                <div class='social'>\\n                    <a href='{{ social.url }}' target=\\\"_blank\\\" class='icon'>\\n                        <i class='{{ socialIcons[social.network] }}'></i>\\n                    </a>\\n                    <a href='{{ social.url }}' target=\\\"_blank\\\">\\n                        <span>{{ social.display }}</span>\\n                    </a>\\n                </div>\\n            {% endfor %}\\n            <a class=\\\"authorlink\\\" href=\\\"{{ author.link }}\\\">View Author Page</a>\\n        </div>\\n    </div>\\n</div>\\n{% endif %}\\n\\n***\\n\\n// __list.twig__\\n\\n<div class=\\\"list -post\\\">\\n    <ul class=\\\"list-items\\\">\\n    {% for post in posts %}\\n        {% include 'partials/post/list-item.twig' %}\\n    {% else %}\\n        <p>Sorry, no posts matched your criteria</p>\\n    {% endfor %}\\n    </ul>\\n</div>\\n\\n***\\n\\n__list-item.twig__\\n\\n<li class=\\\"list-item -post tile\\\">\\n    <a href=\\\"#\\\">\\n        <div class=\\\"image\\\">\\n            <img src=\\\"{{ post.get_thumbnail }}\\\" alt=\\\"\\\">\\n        </div>\\n        <div class=\\\"info\\\">\\n            <h3 class=\\\"title\\\">{{ post.title }}</h3>\\n            <p>{{ post.intro }}</p>\\n            <div class=\\\"read-more\\\">\\n                <a href=\\\"{{ post.link }}\\\">read more ></a>\\n            </div>\\n        </div>\\n    </a>\\n</li>\\n\")),React.createElement(MDXTag,{name:\"h2\",components:components,props:{\"id\":\"wppres-4-example-php-functionsphp\"}},\"WPPRES-4: Example PHP functions.php\"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{\"className\":\"language-php\"}},\"<?php\\n\\nadd_filter('show_admin_bar', '__return_false');\\n\\nrequire_once('functions/routes.php');\\nrequire_once('functions/twig.php');\\nrequire_once('functions/theme_support.php');\\nrequire_once('functions/enqueue_scripts.php');\\nrequire_once('functions/acf.php');\\nrequire_once('functions/timber.php');\\nrequire_once('functions/context.php');\\nrequire_once('functions/locations.php');\\nrequire_once('functions/author_articles.php');\\nrequire_once('functions/infobox.php');\\n\\nif (!is_admin()) {\\n    require_once('functions/post_filters.php');\\n}\\n\\n?>\\n\")),React.createElement(MDXTag,{name:\"h2\",components:components,props:{\"id\":\"wppres-5-creating-ajax-loading-example\"}},\"WPPRES-5: Creating AJAX (Loading example)\"),React.createElement(MDXTag,{name:\"p\",components:components},\"Using twig, variables were passed down to be used for things such as \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"loadmore.twig\"),\", while a PHP class, routes and functions were set up to interact with the JS file.\"),React.createElement(MDXTag,{name:\"p\",components:components},React.createElement(MDXTag,{name:\"strong\",components:components,parentName:\"p\"},\"function.php\")),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{\"className\":\"language-php\"}},\"<?php\\n...\\nrequire_once('functions/load_more.php');\\n...\\n?>\\n\")),React.createElement(MDXTag,{name:\"p\",components:components},React.createElement(MDXTag,{name:\"strong\",components:components,parentName:\"p\"},\"loadmore.php\")),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{\"className\":\"language-php\"}},\"<?php\\n\\nclass LoadMore {\\n    public function loadNextSet($params) {\\n        $perPage = 6;\\n        $page = $params['page'];\\n        $category = $params['cat'];\\n        $data = Context::getDefaultContext();\\n        $data['category'] = new TimberTerm($category);\\n        $data['tag'] = 'tag';\\n\\n        $posts = $data['category']->get_posts([\\n          'posts_per_page' => $perPage,\\n          'orderby' => 'date',\\n          'order' => 'DESC',\\n          'offset' => ($perPage*$page) + 3,\\n        ]);\\n\\n        $data['posts'] = $posts;\\n\\n        Timber::render('partials/post/grid.twig', $data);\\n        exit();\\n    }\\n}\\n\\n?>\\n\")),React.createElement(MDXTag,{name:\"p\",components:components},React.createElement(MDXTag,{name:\"strong\",components:components,parentName:\"p\"},\"routes.php\")),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{\"className\":\"language-php\"}},\"...\\n// $params are the :section, :cat and :page args\\nRoutes::map(':section/:cat/:page', function($params){\\n    $articles = new LoadMore();\\n    echo $articles->loadNextSet($params);\\n});\\n...\\n\")),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{}},\"__loadmore.twig__\\n\\n```html\\n<div class=\\\"loadmore-container\\\" data-page='1' data-section='{{ section }}' data-category='{{ category }}'>\\n    <a>Load More</a>\\n</div>\\n\")),React.createElement(MDXTag,{name:\"p\",components:components},React.createElement(MDXTag,{name:\"strong\",components:components,parentName:\"p\"},\"load-more.js\")),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{\"className\":\"language-javascript\"}},\"var titleTagline = require('./title-tagline.js');\\n\\nvar loadMore = {\\n    $loadMoreContainer: $('.loadmore-container'),\\n    category: $('.loadmore-container').data('category'),\\n    section: $('.loadmore-container').data('section'),\\n    search: $('.loadmore-container').data('search'),\\n    page: $('.loadmore-container').data('page'),\\n    base_url: $('meta[name=base_url]').attr('content'),\\n    perPage: 6,\\n\\n    init: function() {\\n        // Show mega-menu when mega-menu link is focused\\n        loadMore.$loadMoreContainer.on('click', function(e) {\\n            e.preventDefault();\\n            if ($('ul.grid').length > 0) {\\n                loadMore.loadNextSection();\\n            } else {\\n                loadMore.loadNextSearch();\\n            }\\n        });\\n    },\\n\\n    loadNextSection: function() {\\n        return $.ajax({\\n            url:\\n                loadMore.base_url +\\n                '/section/' +\\n                loadMore.section +\\n                '/' +\\n                loadMore.category +\\n                '/' +\\n                loadMore.page,\\n            type: 'GET',\\n            success: loadMore.resultsSection,\\n            error: loadMore.outputError\\n        });\\n    },\\n\\n    loadNextSearch: function() {\\n        var urlString = loadMore.search;\\n        urlString = urlString.replace(' ', '+');\\n        console.log(urlString);\\n        return $.ajax({\\n            url:\\n                loadMore.base_url +\\n                '/search/' +\\n                urlString +\\n                '/' +\\n                loadMore.page,\\n            type: 'GET',\\n            success: loadMore.resultsSearch,\\n            error: loadMore.outputError\\n        });\\n    },\\n\\n    resultsSection: function(data) {\\n        var numPosts = $(data).find('li.-post').length;\\n        loadMore.page = parseInt(loadMore.page) + 1;\\n        var render = $(data)\\n            .find('li.-post')\\n            .unwrap();\\n        $('ul.grid')\\n            .last()\\n            .append(render);\\n\\n        if (numPosts < loadMore.perPage) {\\n            loadMore.hideViewAll();\\n        }\\n\\n        titleTagline.init();\\n        titleTagline.doneResizing();\\n    },\\n\\n    resultsSearch: function(data) {\\n        console.log(data);\\n\\n        var numPosts = $(data).find('li.list-item').length;\\n        loadMore.page = parseInt(loadMore.page) + 1;\\n\\n        var render = $(data)\\n            .find('li.list-item')\\n            .unwrap();\\n        $('ul.list')\\n            .last()\\n            .append(render);\\n\\n        if (numPosts < loadMore.perPage) {\\n            loadMore.hideViewAll();\\n        }\\n    },\\n\\n    hideViewAll: function() {\\n        loadMore.$loadMoreContainer.css('display', 'none');\\n    }\\n};\\n\\nmodule.exports = {\\n    init: loadMore.init\\n};\\n\")),React.createElement(MDXTag,{name:\"p\",components:components},React.createElement(MDXTag,{name:\"strong\",components:components,parentName:\"p\"},\"loadmore.php\")),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{\"className\":\"language-php\"}},\"<?php\\n\\nclass LoadMore {\\n    public function loadNextLocationsSet($params) {\\n        $perPage = 6;\\n        $page = $params['page'];\\n        $category = $params['cat'];\\n        $data = Context::getDefaultContext();\\n        $data['category'] = new TimberTerm($category);\\n        $data['tag'] = 'tag';\\n\\n        $posts = $data['category']->get_posts([\\n          'posts_per_page' => $perPage,\\n          'orderby' => 'date',\\n          'order' => 'DESC',\\n          'offset' => ($perPage*$page) + 3,\\n        ]);\\n\\n        $data['posts'] = $posts;\\n\\n        Timber::render('partials/post/grid.twig', $data);\\n        exit();\\n    }\\n\\n    public function loadNextSearchSet($params) {\\n        $perPage = 6;\\n        $page = (int)$params['page'];\\n        $field = $params['search'];\\n        $offset = ($perPage*$page) + 4;\\n        $data = Context::getDefaultContext();\\n        $search = get_query_var('s');\\n        $searchTerm = htmlspecialchars($field);\\n\\n        $data['posts'] = SearchTerms::getSearchArticles($field, $offset, $perPage);\\n\\n        Timber::render('partials/post/list.twig', $data);\\n        exit();\\n    }\\n\\n    public function loadNextInspirationsSet($params) {\\n\\n        $exclusion = [];\\n\\n        $perPage = 6;\\n        $page = $params['page'];\\n        $category = $params['cat'];\\n        $data = Context::getDefaultContext();\\n        $data['category'] = new TimberTerm($category);\\n        $data['tag'] = 'tag';\\n\\n        if($featuredIds = $data['category']->featured) {\\n            $data['categoryFeatured'] = Timber::get_posts($featuredIds);\\n            $exclusion = self::updateExclusionList($data['categoryFeatured'], $exclusion);\\n        }\\n\\n        $posts = $data['category']->get_posts([\\n            'posts_per_page' => $perPage,\\n            'orderby' => 'date',\\n            'order' => 'DESC',\\n            'offset' => ($perPage*$page) + 4,\\n            'post__not_in' => $exclusion,\\n        ]);\\n\\n        $data['posts'] = $posts;\\n\\n        Timber::render('partials/post/grid.twig', $data);\\n        exit();\\n    }\\n\\n    static function updateExclusionList($original, $exclusion) {\\n        foreach($original as $post) {\\n            if($post) {\\n                array_push($exclusion, $post->id);\\n            }\\n        }\\n        return $exclusion;\\n    }\\n}\\n\\n?>\\n\")),React.createElement(MDXTag,{name:\"h2\",components:components,props:{\"id\":\"wppres-6-custom-search-terms\"}},\"WPPRES-6: Custom Search Terms\"),React.createElement(MDXTag,{name:\"p\",components:components},\"This example was taken from YAC when it was required to search for a CPT ID and then use it to get some post ids returned with the latest meta data values.\"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{\"className\":\"language-php\"}},\"// from functions > search_term.php\\n\\nglobal $wpdb;\\n\\n$park_ids = [];\\n$meta_arrays = [];\\n$posts_park = [];\\n\\nif (strlen($search_term) > 3) {\\n\\n    $park_post_type='parks';\\n    $park_post_status='publish';\\n\\n    // get the park ids that relate to the search\\n    $park_args = $wpdb->get_col( $wpdb->prepare(\\n            \\\"\\n            SELECT ID\\n            FROM $wpdb->posts WP\\n            WHERE WP.post_title LIKE '%%%s%%'\\n            AND post_type='%s'\\n            AND post_status='%s'\\n            \\\",\\n            esc_sql($search_term),\\n            esc_sql($park_post_type),\\n            esc_sql($park_post_status)\\n        )\\n    );\\n\\n    $park_ids = $park_args;\\n\\n    if ($park_ids != null ) {\\n\\n        $park_ids = esc_sql( $park_ids );\\n        $park_ids_str = \\\"'[^0-9]*\\\" . implode( \\\"[^0-9]*'|'[^0-9]*\\\", $park_ids ) . \\\"[^0-9]*'\\\";\\n        $park = 'park';\\n\\n        //find the parks\\n        $init_park = $wpdb->get_col( $wpdb->prepare(\\n                \\\"\\n                SELECT WP.ID\\n                FROM $wpdb->posts WP\\n                INNER JOIN $wpdb->postmeta PM\\n                ON ( WP.ID = PM.post_id )\\n                WHERE 1=1\\n                AND ( ( PM.meta_key = %s\\n                AND PM.meta_value REGEXP {$park_ids_str} ) )\\n                AND WP.post_type = 'post'\\n                AND (WP.post_status = 'publish')\\n                GROUP BY WP.ID\\n                ORDER BY WP.post_title DESC, WP.post_date DESC\\n                \\\",\\n                esc_sql($park)\\n            )\\n        );\\n\\n        // grab post results to allow metadata\\n        // comparison for park\\n        $results = Timber::get_posts($init_park);\\n\\n        // filter the results to ensure posts are associated with\\n        // the latest and correct `park` value\\n        if ($results) {\\n            foreach ($results as $result) {\\n                if (array_intersect($result->custom['park'], $park_ids)) {\\n                    $posts_park[] = $result->id;\\n                }\\n            }\\n        }\\n    }\\n}\\n\")));}}]);return MDXContent;}(React.Component);export{MDXContent as default};MDXContent.__docgenInfo={\"description\":\"\",\"methods\":[],\"displayName\":\"MDXContent\"};",{"version":3,"sources":["/Users/okeeffe_d/Business/Documentation/manual/WordPress/WP-PC-Cheat-Sheet.md"],"names":["React","MDXTag","MDXContent","props","layout","components","Component"],"mappings":"omFACE,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,MAAT,KAAuB,aAAvB,C,GAGmBC,CAAAA,U,gFACnB,oBAAYC,KAAZ,CAAmB,4CACjB,4EAAMA,KAAN,GACA,MAAKC,MAAL,CAAc,IAAd,CAFiB,aAGlB,C,8DACQ,iBAC0B,KAAKD,KAD/B,CACCE,UADD,aACCA,UADD,CACgBF,KADhB,sDAGP,MAAO,qBAAC,MAAD,EACE,IAAI,CAAC,SADP,CAGE,UAAU,CAAEE,UAHd,EAG0B,oBAAC,MAAD,EAAQ,IAAI,CAAC,IAAb,CAAkB,UAAU,CAAEA,UAA9B,CAA0C,KAAK,CAAE,CAAC,KAAK,6BAAN,CAAjD,gCAH1B,CAKX,oBAAC,MAAD,EAAQ,IAAI,CAAC,IAAb,CAAkB,UAAU,CAAEA,UAA9B,EACA,oBAAC,MAAD,EAAQ,IAAI,CAAC,IAAb,CAAkB,UAAU,CAAEA,UAA9B,CAA0C,UAAU,CAAC,IAArD,EAA0D,oBAAC,MAAD,EAAQ,IAAI,CAAC,GAAb,CAAiB,UAAU,CAAEA,UAA7B,CAAyC,UAAU,CAAC,IAApD,CAAyD,KAAK,CAAE,CAAC,OAAO,8BAAR,CAAhE,gCAA1D,CAA2M,oBAAC,MAAD,EAAQ,IAAI,CAAC,IAAb,CAAkB,UAAU,CAAEA,UAA9B,CAA0C,UAAU,CAAC,IAArD,EAC3M,oBAAC,MAAD,EAAQ,IAAI,CAAC,IAAb,CAAkB,UAAU,CAAEA,UAA9B,CAA0C,UAAU,CAAC,IAArD,EAA0D,oBAAC,MAAD,EAAQ,IAAI,CAAC,GAAb,CAAiB,UAAU,CAAEA,UAA7B,CAAyC,UAAU,CAAC,IAApD,CAAyD,KAAK,CAAE,CAAC,OAAO,eAAR,CAAhE,kBAA1D,CAD2M,CAE3M,oBAAC,MAAD,EAAQ,IAAI,CAAC,IAAb,CAAkB,UAAU,CAAEA,UAA9B,CAA0C,UAAU,CAAC,IAArD,EAA0D,oBAAC,MAAD,EAAQ,IAAI,CAAC,GAAb,CAAiB,UAAU,CAAEA,UAA7B,CAAyC,UAAU,CAAC,IAApD,CAAyD,KAAK,CAAE,CAAC,OAAO,qCAAR,CAAhE,wCAA1D,CAF2M,CAG3M,oBAAC,MAAD,EAAQ,IAAI,CAAC,IAAb,CAAkB,UAAU,CAAEA,UAA9B,CAA0C,UAAU,CAAC,IAArD,EAA0D,oBAAC,MAAD,EAAQ,IAAI,CAAC,GAAb,CAAiB,UAAU,CAAEA,UAA7B,CAAyC,UAAU,CAAC,IAApD,CAAyD,KAAK,CAAE,CAAC,OAAO,sEAAR,CAAhE,0EAA1D,CAH2M,CAI3M,oBAAC,MAAD,EAAQ,IAAI,CAAC,IAAb,CAAkB,UAAU,CAAEA,UAA9B,CAA0C,UAAU,CAAC,IAArD,EAA0D,oBAAC,MAAD,EAAQ,IAAI,CAAC,GAAb,CAAiB,UAAU,CAAEA,UAA7B,CAAyC,UAAU,CAAC,IAApD,CAAyD,KAAK,CAAE,CAAC,OAAO,oCAAR,CAAhE,wCAA1D,CAJ2M,CAK3M,oBAAC,MAAD,EAAQ,IAAI,CAAC,IAAb,CAAkB,UAAU,CAAEA,UAA9B,CAA0C,UAAU,CAAC,IAArD,EAA0D,oBAAC,MAAD,EAAQ,IAAI,CAAC,GAAb,CAAiB,UAAU,CAAEA,UAA7B,CAAyC,UAAU,CAAC,IAApD,CAAyD,KAAK,CAAE,CAAC,OAAO,yCAAR,CAAhE,8CAA1D,CAL2M,CAA3M,CADA,CALW,CAeX,oBAAC,MAAD,EAAQ,IAAI,CAAC,IAAb,CAAkB,UAAU,CAAEA,UAA9B,CAA0C,KAAK,CAAE,CAAC,KAAK,cAAN,CAAjD,kBAfW,CAgBX,oBAAC,MAAD,EAAQ,IAAI,CAAC,GAAb,CAAiB,UAAU,CAAEA,UAA7B,EAAyC,oBAAC,MAAD,EAAQ,IAAI,CAAC,QAAb,CAAsB,UAAU,CAAEA,UAAlC,CAA8C,UAAU,CAAC,GAAzD,6DAAzC,CAhBW,CAiBX,oBAAC,MAAD,EAAQ,IAAI,CAAC,GAAb,CAAiB,UAAU,CAAEA,UAA7B,8RAjBW,CAkBX,oBAAC,MAAD,EAAQ,IAAI,CAAC,GAAb,CAAiB,UAAU,CAAEA,UAA7B,oJAlBW,CAmBX,oBAAC,MAAD,EAAQ,IAAI,CAAC,GAAb,CAAiB,UAAU,CAAEA,UAA7B,EAAyC,oBAAC,MAAD,EAAQ,IAAI,CAAC,QAAb,CAAsB,UAAU,CAAEA,UAAlC,CAA8C,UAAU,CAAC,GAAzD,0EAAzC,CAnBW,CAoBX,oBAAC,MAAD,EAAQ,IAAI,CAAC,GAAb,CAAiB,UAAU,CAAEA,UAA7B,wJApBW,CAqBX,oBAAC,MAAD,EAAQ,IAAI,CAAC,GAAb,CAAiB,UAAU,CAAEA,UAA7B,EAAyC,oBAAC,MAAD,EAAQ,IAAI,CAAC,QAAb,CAAsB,UAAU,CAAEA,UAAlC,CAA8C,UAAU,CAAC,GAAzD,qCAAzC,CArBW,CAsBX,oBAAC,MAAD,EAAQ,IAAI,CAAC,GAAb,CAAiB,UAAU,CAAEA,UAA7B,0HAtBW,CAuBX,oBAAC,MAAD,EAAQ,IAAI,CAAC,IAAb,CAAkB,UAAU,CAAEA,UAA9B,CAA0C,KAAK,CAAE,CAAC,KAAK,oCAAN,CAAjD,wCAvBW,CAwBX,oBAAC,MAAD,EAAQ,IAAI,CAAC,KAAb,CAAmB,UAAU,CAAEA,UAA/B,EAA2C,oBAAC,MAAD,EAAQ,IAAI,CAAC,MAAb,CAAoB,UAAU,CAAEA,UAAhC,CAA4C,UAAU,CAAC,KAAvD,CAA6D,KAAK,CAAE,CAAC,YAAY,cAAb,CAApE,6vCAA3C,CAxBW,CAsFX,oBAAC,MAAD,EAAQ,IAAI,CAAC,IAAb,CAAkB,UAAU,CAAEA,UAA9B,CAA0C,KAAK,CAAE,CAAC,KAAK,qEAAN,CAAjD,0EAtFW,CAuFX,oBAAC,MAAD,EAAQ,IAAI,CAAC,IAAb,CAAkB,UAAU,CAAEA,UAA9B,EACA,oBAAC,MAAD,EAAQ,IAAI,CAAC,IAAb,CAAkB,UAAU,CAAEA,UAA9B,CAA0C,UAAU,CAAC,IAArD,6BADA,CAvFW,CA0FX,oBAAC,MAAD,EAAQ,IAAI,CAAC,KAAb,CAAmB,UAAU,CAAEA,UAA/B,EAA2C,oBAAC,MAAD,EAAQ,IAAI,CAAC,MAAb,CAAoB,UAAU,CAAEA,UAAhC,CAA4C,UAAU,CAAC,KAAvD,CAA6D,KAAK,CAAE,CAAC,YAAY,eAAb,CAApE,o3DAA3C,CA1FW,CA2JX,oBAAC,MAAD,EAAQ,IAAI,CAAC,IAAb,CAAkB,UAAU,CAAEA,UAA9B,CAA0C,KAAK,CAAE,CAAC,KAAK,mCAAN,CAAjD,wCA3JW,CA4JX,oBAAC,MAAD,EAAQ,IAAI,CAAC,KAAb,CAAmB,UAAU,CAAEA,UAA/B,EAA2C,oBAAC,MAAD,EAAQ,IAAI,CAAC,MAAb,CAAoB,UAAU,CAAEA,UAAhC,CAA4C,UAAU,CAAC,KAAvD,CAA6D,KAAK,CAAE,CAAC,YAAY,cAAb,CAApE,gjBAA3C,CA5JW,CAiLX,oBAAC,MAAD,EAAQ,IAAI,CAAC,IAAb,CAAkB,UAAU,CAAEA,UAA9B,CAA0C,KAAK,CAAE,CAAC,KAAK,wCAAN,CAAjD,8CAjLW,CAkLX,oBAAC,MAAD,EAAQ,IAAI,CAAC,GAAb,CAAiB,UAAU,CAAEA,UAA7B,0EAAkH,oBAAC,MAAD,EAAQ,IAAI,CAAC,YAAb,CAA0B,UAAU,CAAEA,UAAtC,CAAkD,UAAU,CAAC,GAA7D,kBAAlH,uFAlLW,CAmLX,oBAAC,MAAD,EAAQ,IAAI,CAAC,GAAb,CAAiB,UAAU,CAAEA,UAA7B,EAAyC,oBAAC,MAAD,EAAQ,IAAI,CAAC,QAAb,CAAsB,UAAU,CAAEA,UAAlC,CAA8C,UAAU,CAAC,GAAzD,iBAAzC,CAnLW,CAoLX,oBAAC,MAAD,EAAQ,IAAI,CAAC,KAAb,CAAmB,UAAU,CAAEA,UAA/B,EAA2C,oBAAC,MAAD,EAAQ,IAAI,CAAC,MAAb,CAAoB,UAAU,CAAEA,UAAhC,CAA4C,UAAU,CAAC,KAAvD,CAA6D,KAAK,CAAE,CAAC,YAAY,cAAb,CAApE,oEAA3C,CApLW,CA0LX,oBAAC,MAAD,EAAQ,IAAI,CAAC,GAAb,CAAiB,UAAU,CAAEA,UAA7B,EAAyC,oBAAC,MAAD,EAAQ,IAAI,CAAC,QAAb,CAAsB,UAAU,CAAEA,UAAlC,CAA8C,UAAU,CAAC,GAAzD,iBAAzC,CA1LW,CA2LX,oBAAC,MAAD,EAAQ,IAAI,CAAC,KAAb,CAAmB,UAAU,CAAEA,UAA/B,EAA2C,oBAAC,MAAD,EAAQ,IAAI,CAAC,MAAb,CAAoB,UAAU,CAAEA,UAAhC,CAA4C,UAAU,CAAC,KAAvD,CAA6D,KAAK,CAAE,CAAC,YAAY,cAAb,CAApE,soBAA3C,CA3LW,CAsNX,oBAAC,MAAD,EAAQ,IAAI,CAAC,GAAb,CAAiB,UAAU,CAAEA,UAA7B,EAAyC,oBAAC,MAAD,EAAQ,IAAI,CAAC,QAAb,CAAsB,UAAU,CAAEA,UAAlC,CAA8C,UAAU,CAAC,GAAzD,eAAzC,CAtNW,CAuNX,oBAAC,MAAD,EAAQ,IAAI,CAAC,KAAb,CAAmB,UAAU,CAAEA,UAA/B,EAA2C,oBAAC,MAAD,EAAQ,IAAI,CAAC,MAAb,CAAoB,UAAU,CAAEA,UAAhC,CAA4C,UAAU,CAAC,KAAvD,CAA6D,KAAK,CAAE,CAAC,YAAY,cAAb,CAApE,yMAA3C,CAvNW,CA+NX,oBAAC,MAAD,EAAQ,IAAI,CAAC,KAAb,CAAmB,UAAU,CAAEA,UAA/B,EAA2C,oBAAC,MAAD,EAAQ,IAAI,CAAC,MAAb,CAAoB,UAAU,CAAEA,UAAhC,CAA4C,UAAU,CAAC,KAAvD,CAA6D,KAAK,CAAE,EAApE,+KAA3C,CA/NW,CAsOX,oBAAC,MAAD,EAAQ,IAAI,CAAC,GAAb,CAAiB,UAAU,CAAEA,UAA7B,EAAyC,oBAAC,MAAD,EAAQ,IAAI,CAAC,QAAb,CAAsB,UAAU,CAAEA,UAAlC,CAA8C,UAAU,CAAC,GAAzD,iBAAzC,CAtOW,CAuOX,oBAAC,MAAD,EAAQ,IAAI,CAAC,KAAb,CAAmB,UAAU,CAAEA,UAA/B,EAA2C,oBAAC,MAAD,EAAQ,IAAI,CAAC,MAAb,CAAoB,UAAU,CAAEA,UAAhC,CAA4C,UAAU,CAAC,KAAvD,CAA6D,KAAK,CAAE,CAAC,YAAY,qBAAb,CAApE,gvFAA3C,CAvOW,CA4UX,oBAAC,MAAD,EAAQ,IAAI,CAAC,GAAb,CAAiB,UAAU,CAAEA,UAA7B,EAAyC,oBAAC,MAAD,EAAQ,IAAI,CAAC,QAAb,CAAsB,UAAU,CAAEA,UAAlC,CAA8C,UAAU,CAAC,GAAzD,iBAAzC,CA5UW,CA6UX,oBAAC,MAAD,EAAQ,IAAI,CAAC,KAAb,CAAmB,UAAU,CAAEA,UAA/B,EAA2C,oBAAC,MAAD,EAAQ,IAAI,CAAC,MAAb,CAAoB,UAAU,CAAEA,UAAhC,CAA4C,UAAU,CAAC,KAAvD,CAA6D,KAAK,CAAE,CAAC,YAAY,cAAb,CAApE,gyEAA3C,CA7UW,CA8ZX,oBAAC,MAAD,EAAQ,IAAI,CAAC,IAAb,CAAkB,UAAU,CAAEA,UAA9B,CAA0C,KAAK,CAAE,CAAC,KAAK,8BAAN,CAAjD,kCA9ZW,CA+ZX,oBAAC,MAAD,EAAQ,IAAI,CAAC,GAAb,CAAiB,UAAU,CAAEA,UAA7B,gKA/ZW,CAgaX,oBAAC,MAAD,EAAQ,IAAI,CAAC,KAAb,CAAmB,UAAU,CAAEA,UAA/B,EAA2C,oBAAC,MAAD,EAAQ,IAAI,CAAC,MAAb,CAAoB,UAAU,CAAEA,UAAhC,CAA4C,UAAU,CAAC,KAAvD,CAA6D,KAAK,CAAE,CAAC,YAAY,cAAb,CAApE,qgEAA3C,CAhaW,CAAP,CAweD,C,wBAhfqCL,KAAK,CAACM,S,SAAzBJ,U","sourcesContent":["\n  import React from 'react'\n  import { MDXTag } from '@mdx-js/tag'\n  \n\nexport default class MDXContent extends React.Component {\n  constructor(props) {\n    super(props)\n    this.layout = null\n  }\n  render() {\n    const { components, ...props } = this.props\n\n    return <MDXTag\n             name=\"wrapper\"\n             \n             components={components}><MDXTag name=\"h1\" components={components} props={{\"id\":\"wp-pres-company-cheat-sheet\"}}>{`WP PRES COMPANY CHEAT SHEET`}</MDXTag>\n{/* TOC */}\n<MDXTag name=\"ul\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"a\" components={components} parentName=\"li\" props={{\"href\":\"#wp-pres-company-cheat-sheet\"}}>{`WP PRES COMPANY CHEAT SHEET`}</MDXTag><MDXTag name=\"ul\" components={components} parentName=\"li\">\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"a\" components={components} parentName=\"li\" props={{\"href\":\"#wppres-1-faq\"}}>{`WPPRES-1: FAQ`}</MDXTag></MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"a\" components={components} parentName=\"li\" props={{\"href\":\"#wppres-2-custom-type-relationships\"}}>{`WPPRES-2: Custom Type Relationships`}</MDXTag></MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"a\" components={components} parentName=\"li\" props={{\"href\":\"#wppres-3-example-of-rendering-a-twig-file-using-timber-wp-functions\"}}>{`WPPRES-3: Example of Rendering a .twig file using Timber WP functions`}</MDXTag></MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"a\" components={components} parentName=\"li\" props={{\"href\":\"#wppres-4-example-php-functionsphp\"}}>{`WPPRES-4: Example PHP functions.php`}</MDXTag></MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"a\" components={components} parentName=\"li\" props={{\"href\":\"#wppres-5-creating-ajax-loading-example\"}}>{`WPPRES-5: Creating AJAX (Loading example)`}</MDXTag></MDXTag>\n</MDXTag></MDXTag>\n</MDXTag>\n{/* /TOC */}\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"wppres-1-faq\"}}>{`WPPRES-1: FAQ`}</MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"strong\" components={components} parentName=\"p\">{`Q: I'm having a database connection failure through MAMP`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`A: Double check the wp_options in the siteurl and home settings and that they correctly match MAMP. If you are on the default MAMP ports, you may need localhost:8888 in both addresses. Also check the wp_config.php file in your text editor to ensure the content URL is also correct.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Also be sure to check your /etc/hosts file to see what address and terms are set up and that you restart the mySQL daemon, MAMP and Sequel Pro.`}</MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"strong\" components={components} parentName=\"p\">{`Q: Adjust get_posts posts_per_page for a data`}{`[\"term\"]`}{` request`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`A: Add it as an argument in twig or create a custom function adjusting the posts_per_page. You can pass any get_posts properties as arguments here.`}</MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"strong\" components={components} parentName=\"p\">{`Q: Where can I find what I need?`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`A: Check against the staging website if it is up to grab things like taxonomies, types, and to figure out the layout.`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"wppres-2-custom-type-relationships\"}}>{`WPPRES-2: Custom Type Relationships`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-php\"}}>{`// in author-articles.php\n\n// be sure to require it in the functions.php file!\n\n<?php\n\nclass AuthorArticles {\n\n    // Get all locations w/ recent posts\n    public static function getAuthorArticles(\\$author) {\n\n        \\$args = new WP_Query([\n            'post_type' => 'post',\n            'no_found_rows' => true,\n            'fields' => 'ids',\n            'orderby' => 'date',\n            'order' => 'desc',\n            'meta_query' => [\n                    [\n                        'key' => 'article_author',\n                        'value' => \\$author,\n                        'compare' => 'LIKE'\n                    ]\n                ]\n        ]);\n\n        \\$postIds = \\$args->get_posts();\n\n        \\$results = Timber::get_posts(\\$postIds);\n\n        return Timber::get_posts(\\$postIds);\n    }\n\n}\n\n?>\n\n// example in use\n// Author Template - single-authors.php file\n\n<?php\n\n/* Template Name: Author */\n\n\\$data = Context::getDefaultContext();\n\n\\$data['author'] = Timber::get_post();\n\n\\$data['posts'] = AuthorArticles::getAuthorArticles(\\$data['author']->id);\n\n\\$data['breadcrumbs'] = [\n    [\n        'text' => 'Authors',\n        'url' => \\$data['site']->url .'/authors'\n    ]\n];\n\n\nTimber::render('author.twig', \\$data);\n\n?>\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"wppres-3-example-of-rendering-a-twig-file-using-timber-wp-functions\"}}>{`WPPRES-3: Example of Rendering a .twig file using Timber WP functions`}</MDXTag>\n<MDXTag name=\"ul\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`using the above examples`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-html\"}}>{`// __author.twig__\n\n{% if post.article_author %}\n{% set author = TimberPost(post.get_field('article_author')) %}\n<div class=\"author-container\">\n    <p>Article By</p>\n    <div class=\"author\">\n        <div class=\"image\">\n            {% set image = TimberImage(author.get_thumbnail) %}\n            {% include 'partials/image.twig' with {\n                image: image,\n                size: 'square_400'\n            } %}\n        </div>\n        <div class=\"info\">\n            <h3 class=\"title\">{{ author.title }}</h3>\n            {% for social in author.get_field('social') %}\n                <div class='social'>\n                    <a href='{{ social.url }}' target=\"_blank\" class='icon'>\n                        <i class='{{ socialIcons[social.network] }}'></i>\n                    </a>\n                    <a href='{{ social.url }}' target=\"_blank\">\n                        <span>{{ social.display }}</span>\n                    </a>\n                </div>\n            {% endfor %}\n            <a class=\"authorlink\" href=\"{{ author.link }}\">View Author Page</a>\n        </div>\n    </div>\n</div>\n{% endif %}\n\n***\n\n// __list.twig__\n\n<div class=\"list -post\">\n    <ul class=\"list-items\">\n    {% for post in posts %}\n        {% include 'partials/post/list-item.twig' %}\n    {% else %}\n        <p>Sorry, no posts matched your criteria</p>\n    {% endfor %}\n    </ul>\n</div>\n\n***\n\n__list-item.twig__\n\n<li class=\"list-item -post tile\">\n    <a href=\"#\">\n        <div class=\"image\">\n            <img src=\"{{ post.get_thumbnail }}\" alt=\"\">\n        </div>\n        <div class=\"info\">\n            <h3 class=\"title\">{{ post.title }}</h3>\n            <p>{{ post.intro }}</p>\n            <div class=\"read-more\">\n                <a href=\"{{ post.link }}\">read more ></a>\n            </div>\n        </div>\n    </a>\n</li>\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"wppres-4-example-php-functionsphp\"}}>{`WPPRES-4: Example PHP functions.php`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-php\"}}>{`<?php\n\nadd_filter('show_admin_bar', '__return_false');\n\nrequire_once('functions/routes.php');\nrequire_once('functions/twig.php');\nrequire_once('functions/theme_support.php');\nrequire_once('functions/enqueue_scripts.php');\nrequire_once('functions/acf.php');\nrequire_once('functions/timber.php');\nrequire_once('functions/context.php');\nrequire_once('functions/locations.php');\nrequire_once('functions/author_articles.php');\nrequire_once('functions/infobox.php');\n\nif (!is_admin()) {\n    require_once('functions/post_filters.php');\n}\n\n?>\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"wppres-5-creating-ajax-loading-example\"}}>{`WPPRES-5: Creating AJAX (Loading example)`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Using twig, variables were passed down to be used for things such as `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`loadmore.twig`}</MDXTag>{`, while a PHP class, routes and functions were set up to interact with the JS file.`}</MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"strong\" components={components} parentName=\"p\">{`function.php`}</MDXTag></MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-php\"}}>{`<?php\n...\nrequire_once('functions/load_more.php');\n...\n?>\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"strong\" components={components} parentName=\"p\">{`loadmore.php`}</MDXTag></MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-php\"}}>{`<?php\n\nclass LoadMore {\n    public function loadNextSet(\\$params) {\n        \\$perPage = 6;\n        \\$page = \\$params['page'];\n        \\$category = \\$params['cat'];\n        \\$data = Context::getDefaultContext();\n        \\$data['category'] = new TimberTerm(\\$category);\n        \\$data['tag'] = 'tag';\n\n        \\$posts = \\$data['category']->get_posts([\n          'posts_per_page' => \\$perPage,\n          'orderby' => 'date',\n          'order' => 'DESC',\n          'offset' => (\\$perPage*\\$page) + 3,\n        ]);\n\n        \\$data['posts'] = \\$posts;\n\n        Timber::render('partials/post/grid.twig', \\$data);\n        exit();\n    }\n}\n\n?>\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"strong\" components={components} parentName=\"p\">{`routes.php`}</MDXTag></MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-php\"}}>{`...\n// \\$params are the :section, :cat and :page args\nRoutes::map(':section/:cat/:page', function(\\$params){\n    \\$articles = new LoadMore();\n    echo \\$articles->loadNextSet(\\$params);\n});\n...\n`}</MDXTag></MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{}}>{`__loadmore.twig__\n\n\\`\\`\\`html\n<div class=\"loadmore-container\" data-page='1' data-section='{{ section }}' data-category='{{ category }}'>\n    <a>Load More</a>\n</div>\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"strong\" components={components} parentName=\"p\">{`load-more.js`}</MDXTag></MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-javascript\"}}>{`var titleTagline = require('./title-tagline.js');\n\nvar loadMore = {\n    \\$loadMoreContainer: \\$('.loadmore-container'),\n    category: \\$('.loadmore-container').data('category'),\n    section: \\$('.loadmore-container').data('section'),\n    search: \\$('.loadmore-container').data('search'),\n    page: \\$('.loadmore-container').data('page'),\n    base_url: \\$('meta[name=base_url]').attr('content'),\n    perPage: 6,\n\n    init: function() {\n        // Show mega-menu when mega-menu link is focused\n        loadMore.\\$loadMoreContainer.on('click', function(e) {\n            e.preventDefault();\n            if (\\$('ul.grid').length > 0) {\n                loadMore.loadNextSection();\n            } else {\n                loadMore.loadNextSearch();\n            }\n        });\n    },\n\n    loadNextSection: function() {\n        return \\$.ajax({\n            url:\n                loadMore.base_url +\n                '/section/' +\n                loadMore.section +\n                '/' +\n                loadMore.category +\n                '/' +\n                loadMore.page,\n            type: 'GET',\n            success: loadMore.resultsSection,\n            error: loadMore.outputError\n        });\n    },\n\n    loadNextSearch: function() {\n        var urlString = loadMore.search;\n        urlString = urlString.replace(' ', '+');\n        console.log(urlString);\n        return \\$.ajax({\n            url:\n                loadMore.base_url +\n                '/search/' +\n                urlString +\n                '/' +\n                loadMore.page,\n            type: 'GET',\n            success: loadMore.resultsSearch,\n            error: loadMore.outputError\n        });\n    },\n\n    resultsSection: function(data) {\n        var numPosts = \\$(data).find('li.-post').length;\n        loadMore.page = parseInt(loadMore.page) + 1;\n        var render = \\$(data)\n            .find('li.-post')\n            .unwrap();\n        \\$('ul.grid')\n            .last()\n            .append(render);\n\n        if (numPosts < loadMore.perPage) {\n            loadMore.hideViewAll();\n        }\n\n        titleTagline.init();\n        titleTagline.doneResizing();\n    },\n\n    resultsSearch: function(data) {\n        console.log(data);\n\n        var numPosts = \\$(data).find('li.list-item').length;\n        loadMore.page = parseInt(loadMore.page) + 1;\n\n        var render = \\$(data)\n            .find('li.list-item')\n            .unwrap();\n        \\$('ul.list')\n            .last()\n            .append(render);\n\n        if (numPosts < loadMore.perPage) {\n            loadMore.hideViewAll();\n        }\n    },\n\n    hideViewAll: function() {\n        loadMore.\\$loadMoreContainer.css('display', 'none');\n    }\n};\n\nmodule.exports = {\n    init: loadMore.init\n};\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"strong\" components={components} parentName=\"p\">{`loadmore.php`}</MDXTag></MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-php\"}}>{`<?php\n\nclass LoadMore {\n    public function loadNextLocationsSet(\\$params) {\n        \\$perPage = 6;\n        \\$page = \\$params['page'];\n        \\$category = \\$params['cat'];\n        \\$data = Context::getDefaultContext();\n        \\$data['category'] = new TimberTerm(\\$category);\n        \\$data['tag'] = 'tag';\n\n        \\$posts = \\$data['category']->get_posts([\n          'posts_per_page' => \\$perPage,\n          'orderby' => 'date',\n          'order' => 'DESC',\n          'offset' => (\\$perPage*\\$page) + 3,\n        ]);\n\n        \\$data['posts'] = \\$posts;\n\n        Timber::render('partials/post/grid.twig', \\$data);\n        exit();\n    }\n\n    public function loadNextSearchSet(\\$params) {\n        \\$perPage = 6;\n        \\$page = (int)\\$params['page'];\n        \\$field = \\$params['search'];\n        \\$offset = (\\$perPage*\\$page) + 4;\n        \\$data = Context::getDefaultContext();\n        \\$search = get_query_var('s');\n        \\$searchTerm = htmlspecialchars(\\$field);\n\n        \\$data['posts'] = SearchTerms::getSearchArticles(\\$field, \\$offset, \\$perPage);\n\n        Timber::render('partials/post/list.twig', \\$data);\n        exit();\n    }\n\n    public function loadNextInspirationsSet(\\$params) {\n\n        \\$exclusion = [];\n\n        \\$perPage = 6;\n        \\$page = \\$params['page'];\n        \\$category = \\$params['cat'];\n        \\$data = Context::getDefaultContext();\n        \\$data['category'] = new TimberTerm(\\$category);\n        \\$data['tag'] = 'tag';\n\n        if(\\$featuredIds = \\$data['category']->featured) {\n            \\$data['categoryFeatured'] = Timber::get_posts(\\$featuredIds);\n            \\$exclusion = self::updateExclusionList(\\$data['categoryFeatured'], \\$exclusion);\n        }\n\n        \\$posts = \\$data['category']->get_posts([\n            'posts_per_page' => \\$perPage,\n            'orderby' => 'date',\n            'order' => 'DESC',\n            'offset' => (\\$perPage*\\$page) + 4,\n            'post__not_in' => \\$exclusion,\n        ]);\n\n        \\$data['posts'] = \\$posts;\n\n        Timber::render('partials/post/grid.twig', \\$data);\n        exit();\n    }\n\n    static function updateExclusionList(\\$original, \\$exclusion) {\n        foreach(\\$original as \\$post) {\n            if(\\$post) {\n                array_push(\\$exclusion, \\$post->id);\n            }\n        }\n        return \\$exclusion;\n    }\n}\n\n?>\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"wppres-6-custom-search-terms\"}}>{`WPPRES-6: Custom Search Terms`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`This example was taken from YAC when it was required to search for a CPT ID and then use it to get some post ids returned with the latest meta data values.`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-php\"}}>{`// from functions > search_term.php\n\nglobal \\$wpdb;\n\n\\$park_ids = [];\n\\$meta_arrays = [];\n\\$posts_park = [];\n\nif (strlen(\\$search_term) > 3) {\n\n    \\$park_post_type='parks';\n    \\$park_post_status='publish';\n\n    // get the park ids that relate to the search\n    \\$park_args = \\$wpdb->get_col( \\$wpdb->prepare(\n            \"\n            SELECT ID\n            FROM \\$wpdb->posts WP\n            WHERE WP.post_title LIKE '%%%s%%'\n            AND post_type='%s'\n            AND post_status='%s'\n            \",\n            esc_sql(\\$search_term),\n            esc_sql(\\$park_post_type),\n            esc_sql(\\$park_post_status)\n        )\n    );\n\n    \\$park_ids = \\$park_args;\n\n    if (\\$park_ids != null ) {\n\n        \\$park_ids = esc_sql( \\$park_ids );\n        \\$park_ids_str = \"'[^0-9]*\" . implode( \"[^0-9]*'|'[^0-9]*\", \\$park_ids ) . \"[^0-9]*'\";\n        \\$park = 'park';\n\n        //find the parks\n        \\$init_park = \\$wpdb->get_col( \\$wpdb->prepare(\n                \"\n                SELECT WP.ID\n                FROM \\$wpdb->posts WP\n                INNER JOIN \\$wpdb->postmeta PM\n                ON ( WP.ID = PM.post_id )\n                WHERE 1=1\n                AND ( ( PM.meta_key = %s\n                AND PM.meta_value REGEXP {\\$park_ids_str} ) )\n                AND WP.post_type = 'post'\n                AND (WP.post_status = 'publish')\n                GROUP BY WP.ID\n                ORDER BY WP.post_title DESC, WP.post_date DESC\n                \",\n                esc_sql(\\$park)\n            )\n        );\n\n        // grab post results to allow metadata\n        // comparison for park\n        \\$results = Timber::get_posts(\\$init_park);\n\n        // filter the results to ensure posts are associated with\n        // the latest and correct \\`park\\` value\n        if (\\$results) {\n            foreach (\\$results as \\$result) {\n                if (array_intersect(\\$result->custom['park'], \\$park_ids)) {\n                    \\$posts_park[] = \\$result->id;\n                }\n            }\n        }\n    }\n}\n`}</MDXTag></MDXTag>\n           </MDXTag>\n  }\n}\n  "]}]}