{"remainingRequest":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/docz-core/node_modules/babel-loader/lib/index.js??ref--6-1!/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/@mdx-js/loader/index.js??ref--6-2!/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/source-map-loader/index.js!/Users/dennis.okeeffe/Project-Imposter/developer-notes/manual/React-Native/React-Native-Code-Guide.md","dependencies":[{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/manual/React-Native/React-Native-Code-Guide.md","mtime":1562563032081},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/cache-loader/dist/cjs.js","mtime":1581496618588},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/docz-core/node_modules/babel-loader/lib/index.js","mtime":1578565694890},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/@mdx-js/loader/index.js","mtime":1581496618277},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/source-map-loader/index.js","mtime":1580255490569}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/dennis.okeeffe/Project-Imposter/developer-notes/manual/React-Native/React-Native-Code-Guide.md"],"names":["React","mdx","makeShortcode","name","MDXDefaultShortcode","props","console","warn","layoutProps","MDXLayout","MDXContent","components","isMDXComponent"],"mappings":";;;;;;;;;;;;AAAA;AACE,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,QAAoB,eAApB;AACA;;AAGF,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAAAC,IAAI;AAAA,SAAI,SAASC,mBAAT,CAA6BC,KAA7B,EAAoC;AAChEC,IAAAA,OAAO,CAACC,IAAR,CAAa,eAAeJ,IAAf,GAAsB,yEAAnC;AACA,WAAO,6BAASE,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAP;AACD,GAHyB;AAAA,CAA1B;;AAKA,IAAMG,WAAW,GAAG,EAApB;AAGA,IAAMC,SAAS,GAAG,SAAlB;AACA,eAAe,SAASC,UAAT,OAGZ;AAAA,MAFDC,UAEC,QAFDA,UAEC;AAAA,MADEN,KACF;;AACD,SAAO,IAAC,SAAD,oBAAeG,WAAf,EAAgCH,KAAhC;AAAuC,IAAA,UAAU,EAAEM,UAAnD;AAA+D,IAAA,OAAO,EAAC,WAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACL,wBAAQ;AACN,UAAM;AADA,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CADK,EAIL,wBAAQ;AACN,UAAM;AADA,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCAJK,EAOL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAG;AAAQ,IAAA,UAAU,EAAC,GAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAH,CAPK,EAQL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAK;AAAM,IAAA,UAAU,EAAC;AAAjB,KAA2B;AAC5B,iBAAa;AADe,GAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uVAAL,CARK,EAoBL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IApBK,EAqBL,wBAAQ;AACN,UAAM;AADA,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BArBK,EAwBL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAK;AAAM,IAAA,UAAU,EAAC;AAAjB,KAA2B;AAC5B,iBAAa;AADe,GAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8nCAAL,CAxBK,EAsEL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAtEK,EAuEL,wBAAQ;AACN,UAAM;AADA,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAvEK,EA0EL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAK;AAAM,IAAA,UAAU,EAAC;AAAjB,KAA2B;AAC5B,iBAAa;AADe,GAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yEAAL,CA1EK,EA8EL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA9EK,EA+EL,wBAAQ;AACN,UAAM;AADA,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mDA/EK,EAkFL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8EAlFK,EAmFL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,UAAU,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2EADF,EAEE;AAAI,IAAA,UAAU,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+EAFF,EAGE;AAAI,IAAA,UAAU,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2EAHF,CAnFK,EAwFL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAxFK,EAyFL,wBAAQ;AACN,UAAM;AADA,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAzFK,EA4FL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oIA5FK,EA6FL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAK;AAAM,IAAA,UAAU,EAAC;AAAjB,KAA2B;AAC5B,iBAAa;AADe,GAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uZAAL,CA7FK,EAuHL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAvHK,EAwHL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAG;AAAQ,IAAA,UAAU,EAAC,GAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAH,CAxHK,EAyHL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAG;AAAQ,IAAA,UAAU,EAAC,GAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAH,CAzHK,EA0HL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAG;AAAY,IAAA,UAAU,EAAC,GAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAH,kDAAqG;AAAY,IAAA,UAAU,EAAC,GAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAArG,UA1HK,EA2HL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA3HK,EA4HL,wBAAQ;AACN,UAAM;AADA,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BA5HK,EA+HL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sDA/HK,EAgIL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAK;AAAM,IAAA,UAAU,EAAC;AAAjB,KAA2B;AAC5B,iBAAa;AADe,GAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qlBAAL,CAhIK,EAgKL,wBAAQ;AACN,UAAM;AADA,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iDAhKK,EAmKL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAnKK,EAoKL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAK;AAAM,IAAA,UAAU,EAAC;AAAjB,KAA2B;AAC5B,iBAAa;AADe,GAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,k6GAAL,CApKK,CAAP;AA8TD;;;;;;;;;;;;;AAEDD,UAAU,CAACE,cAAX,GAA4B,IAA5B;;;;;;;;;;0BA7UMV,a;0BAKAM,W;0BAGAC,S;0BACkBC,U","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"react-native-cheat-sheet-using-es6\"\n    }}>{`React-Native Cheat Sheet using ES6`}</h1>\n    <h2 {...{\n      \"id\": \"rn-1-importing-from-react\"\n    }}>{`RN-1: Importing from React`}</h2>\n    <p><strong parentName=\"p\">{`in index.ios.js`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`// import from React and React-Native\nimport React, { Component } from 'react';\n\n// required components go here -> check from the docs\nimport { AppRegistry, TabBarIOS, StyleSheet, Text, View } from 'react-native';\n\n// import from your own files\nimport { Featured } from './Featured.js';\nimport { Search } from './Search.js';\n`}</code></pre>\n    <hr></hr>\n    <h2 {...{\n      \"id\": \"rn-2-example-classes\"\n    }}>{`RN-2: Example classes`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`// this is an example class\nclass BookSearch extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedTab: 'featured'\n    };\n  }\n\n  // this is where the view renders\n  render() {\n    return (\n      // JSX commands relate to imports from react-native\n      // {} is where the JSX compiles Javascript\n      <TabBarIOS selectedTab={this.state.selectedTab}>\n        <TabBarIOS.Item\n          title=\"Left Tab\"\n          selected={this.state.selectedTab === 'featured'}\n          icon={{ uri: base64Icon, scale: 3 }}\n          onPress={() => {\n            this.setState({\n              selectedTab: 'featured'\n            });\n          }}\n        >\n          <Featured />\n        </TabBarIOS.Item>\n        <TabBarIOS.Item\n          title=\"Right Tab\"\n          selected={this.state.selectedTab === 'search'}\n          icon={{ uri: base64Icon, scale: 3 }}\n          onPress={() => {\n            this.setState({\n              selectedTab: 'search'\n            });\n          }}\n        >\n          <Search />\n        </TabBarIOS.Item>\n      </TabBarIOS>\n    );\n  }\n}\n`}</code></pre>\n    <hr></hr>\n    <h2 {...{\n      \"id\": \"rn-3-registry-for-an-app\"\n    }}>{`RN-3: Registry for an App`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`AppRegistry.registerComponent('BookSearch', () => BookSearch);\n`}</code></pre>\n    <hr></hr>\n    <h2 {...{\n      \"id\": \"rn-4-debugging---important-things-to-note\"\n    }}>{`RN-4: Debugging - Important things to note`}</h2>\n    <p>{`If the AppRegistry is not working (error regarding App not registered)`}</p>\n    <ol>\n      <li parentName=\"ol\">{`Check all terminal sessions that have used React Native have closed`}</li>\n      <li parentName=\"ol\">{`Try running the command npm link from the main directory of the project`}</li>\n      <li parentName=\"ol\">{`Check the moduleName in the AppDelegate.m file in the Xcode Project`}</li>\n    </ol>\n    <hr></hr>\n    <h2 {...{\n      \"id\": \"rn-5-stylesheetcreate\"\n    }}>{`RN-5: StyleSheet.create`}</h2>\n    <p>{`In this example, you can see how the 'const styles' variable is declared and how it is implemented in the render() function.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`const styles = StyleSheet.create({\n  description: {\n    fontSize: 20,\n    backgroundColor: 'white'\n  },\n  container: {\n    flex: 1\n  }\n});\n\nclass Search extends Component {\n  render() {\n    return (\n      <NavigatorIOS\n        style={styles.container}\n        initialRoute={{\n          title: 'Search Books',\n          component: SearchBooks\n        }}\n      />\n    );\n  }\n}\n`}</code></pre>\n    <hr></hr>\n    <p><strong parentName=\"p\">{`iOS Views`}</strong></p>\n    <p><strong parentName=\"p\">{` ! important `}</strong></p>\n    <p><inlineCode parentName=\"p\">{`<View>`}</inlineCode>{` tags are treated similar to as if they are `}<inlineCode parentName=\"p\">{`<div>`}</inlineCode>{` tags`}</p>\n    <hr></hr>\n    <h2 {...{\n      \"id\": \"rn-6-navigation-view\"\n    }}>{`RN-6: Navigation View`}</h2>\n    <p>{`Example: Search.js from the BookSearch project`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`'use strict';\n\nimport React, { Component } from 'react';\nimport { StyleSheet, NavigatorIOS, Text } from 'react-native';\nimport { SearchBooks } from './SearchBooks.js';\n\nconst styles = StyleSheet.create({\n  description: {\n    fontSize: 20,\n    backgroundColor: 'white'\n  },\n  container: {\n    flex: 1\n  }\n});\n\nexport default class Search extends Component {\n  render() {\n    return (\n      <NavigatorIOS\n        style={styles.container}\n        initialRoute={{\n          title: 'Search Books',\n          component: SearchBooks\n        }}\n      />\n    );\n  }\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"rn-7-uitablecellview-replica-listview\"\n    }}>{`RN-7: UITableCellView replica (ListView)`}</h2>\n    <p>{`BookList.js - taken from BookSearch`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`'use strict';\n\nimport React, { Component } from 'react';\n\nimport {\n  Image,\n  StyleSheet,\n  Text,\n  View,\n  ListView,\n  TouchableHighlight,\n  ActivityIndicatorIOS\n} from 'react-native';\n\nimport { BookDetail } from './BookDetail.js';\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#F5FCFF',\n    padding: 10\n  },\n  thumbnail: {\n    width: 53,\n    height: 81,\n    marginRight: 10\n  },\n  rightContainer: {\n    flex: 1\n  },\n  title: {\n    fontSize: 20,\n    marginBottom: 8\n  },\n  author: {\n    color: '#656565'\n  },\n  separator: {\n    height: 1,\n    backgroundColor: '#dddddd'\n  },\n  listView: {\n    marginTop: 60,\n    backgroundColor: '#F5FCFF'\n  },\n  loading: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});\n\n// the commented out code related to FAKE_BOOK_DATA is how you can stub some data\n\n// const FAKE_BOOK_DATA = [\n//     {volumeInfo: {title: 'The Catcher in the Rye', authors: \"J. D. Salinger\", imageLinks: {thumbnail: 'http://books.google.com/books/content?id=PCDengEACAAJ&printsec=frontcover&img=1&zoom=1&source=gbs_api'}}}\n// ];\n\nconst REQUEST_URL =\n  'https://www.googleapis.com/books/v1/volumes?q=subject:fiction';\n\nexport default class BookList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: true,\n      dataSource: new ListView.DataSource({\n        rowHasChanged: (row1, row2) => row1 !== row2\n      })\n    };\n  }\n\n  componentDidMount() {\n    // var books = FAKE_BOOK_DATA;\n    // this.setState({\n    //     dataSource: this.state.dataSource.cloneWithRows(books)\n    // });\n    this.fetchData();\n  }\n\n  fetchData() {\n    fetch(REQUEST_URL)\n      .then((response) => response.json())\n      .then((responseData) => {\n        this.setState({\n          dataSource: this.state.dataSource.cloneWithRows(responseData.items),\n          isLoading: false\n        });\n      })\n      .done();\n  }\n\n  render() {\n    // var book = FAKE_BOOK_DATA[0];\n    if (this.state.isLoading) {\n      return this.renderLoadingView();\n    }\n\n    return (\n      <ListView\n        dataSource={this.state.dataSource}\n        renderRow={this.renderBook.bind(this)}\n        style={styles.listView}\n      />\n    );\n  }\n\n  renderLoadingView() {\n    return (\n      <View style={styles.loading}>\n        <ActivityIndicatorIOS size=\"large\" />\n        <Text>Loading books...</Text>\n      </View>\n    );\n  }\n\n  renderBook(book) {\n    return (\n      <TouchableHighlight\n        onPress={() => this.showBookDetail(book)}\n        underlayColor=\"#dddddd\"\n      >\n        <View>\n          <View style={styles.container}>\n            <Image\n              source={{ uri: book.volumeInfo.imageLinks.thumbnail }}\n              style={styles.thumbnail}\n            />\n            <View style={styles.rightContainer}>\n              <Text style={styles.title}>{book.volumeInfo.title}</Text>\n              <Text style={styles.author}>{book.volumeInfo.authors}</Text>\n            </View>\n          </View>\n          <View style={styles.separator} />\n        </View>\n      </TouchableHighlight>\n    );\n  }\n\n  showBookDetail(book) {\n    this.props.navigator.push({\n      title: book.volumeInfo.title,\n      component: BookDetail,\n      passProps: { book }\n    });\n  }\n}\n`}</code></pre>\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  "]}]}