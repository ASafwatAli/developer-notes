{"remainingRequest":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/docz-core/node_modules/babel-loader/lib/index.js??ref--6-1!/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/@mdx-js/loader/index.js??ref--6-2!/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/source-map-loader/index.js!/Users/dennis.okeeffe/Project-Imposter/developer-notes/manual/Design-Patterns/Flyweight-Pattern.md","dependencies":[{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/manual/Design-Patterns/Flyweight-Pattern.md","mtime":1562563032026},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/cache-loader/dist/cjs.js","mtime":1581496618588},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/docz-core/node_modules/babel-loader/lib/index.js","mtime":1578565694890},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/@mdx-js/loader/index.js","mtime":1581496618277},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/source-map-loader/index.js","mtime":1580255490569}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/dennis.okeeffe/Project-Imposter/developer-notes/manual/Design-Patterns/Flyweight-Pattern.md"],"names":["React","mdx","makeShortcode","name","MDXDefaultShortcode","props","console","warn","layoutProps","MDXLayout","MDXContent","components","isMDXComponent"],"mappings":";;;;;;;;;;;;AAAA;AACE,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,QAAoB,eAApB;AACA;;AAGF,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAAAC,IAAI;AAAA,SAAI,SAASC,mBAAT,CAA6BC,KAA7B,EAAoC;AAChEC,IAAAA,OAAO,CAACC,IAAR,CAAa,eAAeJ,IAAf,GAAsB,yEAAnC;AACA,WAAO,6BAASE,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAP;AACD,GAHyB;AAAA,CAA1B;;AAKA,IAAMG,WAAW,GAAG,EAApB;AAGA,IAAMC,SAAS,GAAG,SAAlB;AACA,eAAe,SAASC,UAAT,OAGZ;AAAA,MAFDC,UAEC,QAFDA,UAEC;AAAA,MADEN,KACF;;AACD,SAAO,IAAC,SAAD,oBAAeG,WAAf,EAAgCH,KAAhC;AAAuC,IAAA,UAAU,EAAEM,UAAnD;AAA+D,IAAA,OAAO,EAAC,WAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACL,wBAAQ;AACN,UAAM;AADA,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADK,EAIL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+FAJK,EAKL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAW;AAAY,IAAA,UAAU,EAAC,GAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAX,wNALK,EAML,wBAAQ;AACN,UAAM;AADA,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANK,EASL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBATK,EAUL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,UAAU,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4DADF,EAEE;AAAI,IAAA,UAAU,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8DAFF,EAGE;AAAI,IAAA,UAAU,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0DAHF,EAIE;AAAI,IAAA,UAAU,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAJF,CAVK,EAgBL,wBAAQ;AACN,UAAM;AADA,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAhBK,EAmBL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kDAnBK,EAoBL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAK;AAAM,IAAA,UAAU,EAAC;AAAjB,KAA2B;AAC5B,iBAAa;AADe,GAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,y2DAAL,CApBK,EA2FL,wBAAQ;AACN,UAAM;AADA,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBA3FK,EA8FL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,UAAU,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAoB;AAAG,IAAA,UAAU,EAAC;AAAd,KAAuB;AACvC,YAAQ;AAD+B,GAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAApB,CADF,EAIE;AAAI,IAAA,UAAU,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAoB;AAAG,IAAA,UAAU,EAAC;AAAd,KAAuB;AACvC,YAAQ;AAD+B,GAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAApB,CAJF,CA9FK,CAAP;AAuGD;;;;;;;;;;;;;AAEDD,UAAU,CAACE,cAAX,GAA4B,IAA5B;;;;;;;;;;0BAtHMV,a;0BAKAM,W;0BAGAC,S;0BACkBC,U","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"flyweight-pattern\"\n    }}>{`Flyweight Pattern`}</h1>\n    <p>{`The Flyweight Pattern falls under the structural design patterns from the Gang Of Four.`}</p>\n    <p>{`The `}<inlineCode parentName=\"p\">{`flyweight`}</inlineCode>{` is an object that minimizes memory usage by sharing as much data as possible with similar objects - a way to use objects in large numbers when a simple representation would use an unacceptable amount of memory.`}</p>\n    <h2 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h2>\n    <p>{`Use when:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`many same objects are used and storage cost is high.`}</li>\n      <li parentName=\"ul\">{`you can externalise a majority of each object's state.`}</li>\n      <li parentName=\"ul\">{`few shared objects can replace many unshared ones.`}</li>\n      <li parentName=\"ul\">{`identity of an object not relevant.`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"example\"\n    }}>{`Example`}</h2>\n    <p>{`Here we will create a 1000 combatants that`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-typescript\"\n      }}>{`interface Action {\n  move(location: [number, number]): void;\n  hit?(target: string, location: [number, number]): void;\n}\n\nclass Combatant implements Action {\n  private equipmentSet: string;\n  number: number;\n\n  constructor(set: string, number: number) {\n    // initialization consumes time\n    this.equipmentSet = set;\n    this.number = number;\n    console.log(\\`new Combatant \\${number}\\`);\n  }\n\n  move(location: [number, number]): void {\n    console.log(\\`move to \\${location}\\`);\n  }\n\n  hit?(target: string, location: [number, number]): void {\n    console.log(\\`damage \\${target} at \\${location}\\`);\n  }\n}\n\nclass CombatantAcademy {\n  private static groups: { [set: string]: Combatant } = {};\n\n  public static getCombatant(set: string, num: number) {\n    let combatant = CombatantAcademy.groups[set];\n\n    if (!combatant) {\n      combatant = new Combatant(set, num);\n      CombatantAcademy.groups[set] = combatant;\n    } else {\n      combatant.number = num;\n      console.log(\\`shared Combatant \\${combatant.number}\\`);\n    }\n\n    return combatant;\n  }\n}\n\n(function main() {\n  let start, end;\n\n  // the larger you change the threshold, the bigger the difference\n  const threshold = 50000;\n\n  // inefficient creating without flyweight\n  start = Math.floor(Date.now());\n  for (let i = 0; i < threshold; i++) {\n    new Combatant('normal-set', i); // creating fifty thousand real Combatants\n  }\n  end = Math.floor(Date.now());\n  const withoutFlyweight = end - start;\n\n  // efficient create with flyweight\n  start = Math.floor(Date.now());\n  for (let i = 0; i < threshold; i++) {\n    CombatantAcademy.getCombatant('normal-set', i); // create 1 Combatant\n  }\n  end = Math.floor(Date.now());\n  const withFlyweight = end - start;\n\n  console.log('Without Flyweight', withoutFlyweight);\n  console.log('With Flyweight', withFlyweight);\n})();\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"resources\"\n    }}>{`Resources`}</h2>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://circle.visual-paradigm.com/flyweight/\"\n        }}>{`Flyweight Example`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://en.wikipedia.org/wiki/Flyweight_pattern\"\n        }}>{`Flyweight Wikipedia`}</a></li>\n    </ul>\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  "]}]}