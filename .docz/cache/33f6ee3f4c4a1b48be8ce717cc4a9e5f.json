{"remainingRequest":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/docz-core/node_modules/babel-loader/lib/index.js??ref--6-1!/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/@mdx-js/loader/index.js??ref--6-2!/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/source-map-loader/index.js!/Users/dennis.okeeffe/Project-Imposter/developer-notes/manual/PHP/PHP-Arrays.md","dependencies":[{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/manual/PHP/PHP-Arrays.md","mtime":1562563032074},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/cache-loader/dist/cjs.js","mtime":1564095360956},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/docz-core/node_modules/babel-loader/lib/index.js","mtime":1562568123838},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/@mdx-js/loader/index.js","mtime":1565139338792},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/source-map-loader/index.js","mtime":1564095361765}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9vYmplY3RXaXRob3V0UHJvcGVydGllcyBmcm9tIi9Vc2Vycy9kZW5uaXMub2tlZWZmZS9Qcm9qZWN0LUltcG9zdGVyL2RldmVsb3Blci1ub3Rlcy9ub2RlX21vZHVsZXMvYmFiZWwtcHJlc2V0LXJlYWN0LWFwcC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0V2l0aG91dFByb3BlcnRpZXMiOy8qIEBqc3ggbWR4ICovaW1wb3J0IFJlYWN0IGZyb20ncmVhY3QnO2ltcG9ydHttZHh9ZnJvbSdAbWR4LWpzL3JlYWN0JzsvKiBAanN4IG1keCAqL3ZhciBtYWtlU2hvcnRjb2RlPWZ1bmN0aW9uIG1ha2VTaG9ydGNvZGUobmFtZSl7cmV0dXJuIGZ1bmN0aW9uIE1EWERlZmF1bHRTaG9ydGNvZGUocHJvcHMpe2NvbnNvbGUud2FybigiQ29tcG9uZW50ICIrbmFtZSsiIHdhcyBub3QgaW1wb3J0ZWQsIGV4cG9ydGVkLCBvciBwcm92aWRlZCBieSBNRFhQcm92aWRlciBhcyBnbG9iYWwgc2NvcGUiKTtyZXR1cm4gbWR4KCJkaXYiLHByb3BzKTt9O307dmFyIGxheW91dFByb3BzPXt9O3ZhciBNRFhMYXlvdXQ9IndyYXBwZXIiO2V4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIE1EWENvbnRlbnQoX3JlZil7dmFyIGNvbXBvbmVudHM9X3JlZi5jb21wb25lbnRzLHByb3BzPV9vYmplY3RXaXRob3V0UHJvcGVydGllcyhfcmVmLFsiY29tcG9uZW50cyJdKTtyZXR1cm4gbWR4KE1EWExheW91dCxPYmplY3QuYXNzaWduKHt9LGxheW91dFByb3BzLHByb3BzLHtjb21wb25lbnRzOmNvbXBvbmVudHMsbWR4VHlwZToiTURYTGF5b3V0In0pLG1keCgiaDEiLHsiaWQiOiJwaHAtYXJyYXktbWV0aG9kLWFwcGxpY2F0aW9ucyJ9LCJQSFAgQXJyYXkgTWV0aG9kIEFwcGxpY2F0aW9ucyIpLG1keCgicCIsbnVsbCwiVGhpcyBjb3ZlcnMgdGhlIGJhc2ljIGFjdGlvbnMgb2YgYXBwbHlpbmcgYSBwdXNoLCBwb3AsIHNoaWZ0IGFuZCB1bnNoaWZ0IGZ1bmN0aW9uIHdpdGggUEhQLiIpLG1keCgicCIsbnVsbCwiVGhlc2UgZnVuY3Rpb25zIGFyZSBpbmNyZWRpYmx5IHVzZWZ1bCBmb3IgZGF0YSBzdHJ1Y3R1cmUgaW1wbGVtZW50YXRpb25zLiIpLG1keCgiaDIiLHsiaWQiOiJwdXNoIn0sIlB1c2giKSxtZHgoInAiLG51bGwsIlVzaW5nICIsbWR4KCJpbmxpbmVDb2RlIix7cGFyZW50TmFtZToicCJ9LCJhcnJheV9wdXNoIiksIjoiKSxtZHgoInByZSIsbnVsbCxtZHgoImNvZGUiLE9iamVjdC5hc3NpZ24oe3BhcmVudE5hbWU6InByZSJ9LHsiY2xhc3NOYW1lIjoibGFuZ3VhZ2UtcGhwIn0pLCIvLyBjcmVhdGUgb3VyIGFycmF5IHdpdGggMSBlbGVtZW50XG4kYXJyID0gYXJyYXkoXCJvbmVcIik7XG4vLyAkY291bnQgd2lsbCBiZSAzIGFuZCAkYXJyIHdpbGwgbm93IGJlIGFycmF5KFwib25lXCIsXCJ0d29cIixcInRocmVlXCIpO1xuJGNvdW50ID0gYXJyYXlfcHVzaCgkYXJyLFwidHdvXCIsXCJ0aHJlZVwiKTtcbiIpKSxtZHgoInAiLG51bGwsIkFsdGVybmF0aXZlIHVzaW5nICIsbWR4KCJpbmxpbmVDb2RlIix7cGFyZW50TmFtZToicCJ9LCIkYXJyW10iKSwiOiIpLG1keCgicHJlIixudWxsLG1keCgiY29kZSIsT2JqZWN0LmFzc2lnbih7cGFyZW50TmFtZToicHJlIn0seyJjbGFzc05hbWUiOiJsYW5ndWFnZS1waHAifSksIi8vIGNyZWF0ZSBvdXIgYXJyYXkgd2l0aCAxIGVsZW1lbnRcbiRhcnIgPSBhcnJheShcIm9uZVwiKTtcbi8vICRhcnIgd2lsbCBub3cgYmUgYXJyYXkoXCJvbmVcIixcInR3b1wiKTtcbiRhcnJbXSA9IFwidHdvXCI7XG4vLyAkYXJyIHdpbGwgbm93IGJlIGFycmF5KFwib25lXCIsXCJ0d29cIixcInRocmVlXCIpO1xuJGFycltdID0gXCJ0aHJlZVwiO1xuLy8gJGNvdW50IHdpbGwgYmUgM1xuJGNvdW50ID0gY291bnQoJGFycilcbiIpKSxtZHgoInAiLG51bGwsIkFsdGVybmF0aXZlIHVzaW5nICIsbWR4KCJpbmxpbmVDb2RlIix7cGFyZW50TmFtZToicCJ9LCIkYXJyYXlfbWVyZ2UoKSIpLCI6IiksbWR4KCJwcmUiLG51bGwsbWR4KCJjb2RlIixPYmplY3QuYXNzaWduKHtwYXJlbnROYW1lOiJwcmUifSx7ImNsYXNzTmFtZSI6Imxhbmd1YWdlLXBocCJ9KSwiLy8gY3JlYXRlIG91ciBhcnJheSB3aXRoIDEgZWxlbWVudFxuJGFyciA9IGFycmF5KFwib25lXCIpO1xuLy8gYWx0ZXJuYXRlIG1ldGhvZCB1c2luZyBhcnJheV9tZXJnZSgpXG4kYXJyID0gYXJyYXlfbWVyZ2UoJGFycixhcnJheShcInR3b1wiLFwidGhyZWVcIikpOyAvLyAkYXJyIHdpbGwgbm93IGJlIGFycmF5KFwib25lXCIsXCJ0d29cIixcInRocmVlXCIpO1xuJGNvdW50ID0gY291bnQoJGFycik7IC8vICRjb3VudCB3aWxsIGJlIDNcbiIpKSxtZHgoImgyIix7ImlkIjoicG9wIn0sIlBvcCIpLG1keCgicHJlIixudWxsLG1keCgiY29kZSIsT2JqZWN0LmFzc2lnbih7cGFyZW50TmFtZToicHJlIn0seyJjbGFzc05hbWUiOiJsYW5ndWFnZS1waHAifSksIi8vIGNyZWF0ZSBvdXIgYXJyYXkgd2l0aCAzIGVsZW1lbnRzXG4kYXJyID0gYXJyYXkoXCJvbmVcIixcInR3b1wiLFwidGhyZWVcIik7XG4vLyAkdmFsdWUgd2lsbCBiZSBcInRocmVlXCIgYW5kIGFycmF5J3MgdmFsdWUgd2lsbCBub3cgYmUgYXJyYXkoXCJvbmVcIixcInR3b1wiKTtcbiR2YWx1ZSA9IGFycmF5X3BvcCgkYXJyKTtcbiIpKSxtZHgoImgyIix7ImlkIjoic2hpZnQifSwiU2hpZnQiKSxtZHgoInByZSIsbnVsbCxtZHgoImNvZGUiLE9iamVjdC5hc3NpZ24oe3BhcmVudE5hbWU6InByZSJ9LHsiY2xhc3NOYW1lIjoibGFuZ3VhZ2UtcGhwIn0pLCIvLyBjcmVhdGUgb3VyIGFycmF5IHdpdGggMyBlbGVtZW50c1xuJGFyciA9IGFycmF5KFwib25lXCIsXCJ0d29cIixcInRocmVlXCIpO1xuLy8gJHZhbHVlIHdpbGwgYmUgXCJvbmVcIiBhbmQgYXJyYXkncyB2YWx1ZSB3aWxsIG5vdyBiZSBhcnJheShcInR3b1wiLFwidGhyZWVcIik7XG4kdmFsdWUgPSBhcnJheV9zaGlmdCgkYXJyKTtcbiIpKSxtZHgoImgyIix7ImlkIjoidW5zaGlmdCJ9LCJVbnNoaWZ0IiksbWR4KCJwcmUiLG51bGwsbWR4KCJjb2RlIixPYmplY3QuYXNzaWduKHtwYXJlbnROYW1lOiJwcmUifSx7ImNsYXNzTmFtZSI6Imxhbmd1YWdlLXBocCJ9KSwiLy8gY3JlYXRlIG91ciBhcnJheSB3aXRoIDMgZWxlbWVudHNcbiRhcnIgPSBhcnJheShcInRocmVlXCIsXCJmb3VyXCIsXCJmaXZlXCIpO1xuLy8gJGNvdW50IHdpbGwgbm93IGJlIDUgYW5kIGFycmF5IHdpbGwgaG9sZCBvbmUgLSBmaXZlXG4kY291bnQgPSBhcnJheV91bnNoaWZ0KCRhcnIsXCJvbmVcIixcInR3b1wiKTtcbiIpKSxtZHgoImgyIix7ImlkIjoiZXhhbXBsZS1iYXNpYy10cmVlLWltcGxlbWVudGF0aW9uIn0sIkV4YW1wbGU6IEJhc2ljIFRyZWUgSW1wbGVtZW50YXRpb24iKSxtZHgoInByZSIsbnVsbCxtZHgoImNvZGUiLE9iamVjdC5hc3NpZ24oe3BhcmVudE5hbWU6InByZSJ9LHsiY2xhc3NOYW1lIjoibGFuZ3VhZ2UtcGhwIn0pLCI8P3BocFxuXG5jbGFzcyBUcmVlIHtcbiAgICBmdW5jdGlvbiBfX2NvbnN0cnVjdCgkcm9vdCA9IG51bGwpIHtcbiAgICAgICAgJHRoaXMtPnJvb3QgPSAkcm9vdDtcbiAgICB9XG5cbiAgICBwdWJsaWMgZnVuY3Rpb24gYmZzKCkge1xuICAgICAgICAvLyAxLiBzaGlmdCB2YWxcbiAgICAgICAgLy8gMi4gaWYgY2hpbGRyZW4sIGFwcGVuZCB0byBhcnJcbiAgICAgICAgLy8gMy4gYXBwZW5kIGRhdGEgdG8gYXJyYXkgdG8gY29tcGFyZVxuICAgICAgICBpZiAoJHRoaXMtPnJvb3QgPT0gbnVsbCkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiTm8gdHJlZSByb290XCIpO1xuICAgICAgICB9XG5cbiAgICAgICAgJGFyciA9IGFycmF5KCR0aGlzLT5yb290KTtcbiAgICAgICAgJHJlcyA9IFtdO1xuXG4gICAgICAgIHdoaWxlIChjb3VudCgkYXJyKSA+IDApIHtcbiAgICAgICAgICAgICR4ID0gYXJyYXlfc2hpZnQoJGFycik7XG4gICAgICAgICAgICBpZiAoJHgtPmNoaWxkcmVuICE9IG51bGwpIHtcbiAgICAgICAgICAgICAgICAkYXJyID0gYXJyYXlfbWVyZ2UoJGFyciwgJHgtPmNoaWxkcmVuKTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgYXJyYXlfcHVzaCgkcmVzLCAkeC0+ZGF0YSk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuICRyZXM7XG4gICAgfVxuXG4gICAgcHVibGljIGZ1bmN0aW9uIGRmcygpIHtcbiAgICAgICAgLy8gc2hpZnQgZnJvbSBhcnJcbiAgICAgICAgLy8gaWYgY2hpbGRyZW4gZXhpc3QsIHVuc2hpZnQgYXJyYXlcbiAgICAgICAgLy8gYWRkIGRhdGEgdG8gcmVzIGFycmF5XG5cbiAgICAgICAgJHJlcyA9IFtdO1xuICAgICAgICAkYXJyID0gYXJyYXkoJHRoaXMtPnJvb3QpO1xuXG4gICAgICAgIHdoaWxlIChjb3VudCgkYXJyKSA+IDApIHtcbiAgICAgICAgICAgICR4ID0gYXJyYXlfc2hpZnQoJGFycik7XG4gICAgICAgICAgICBpZiAoJHgtPmNoaWxkcmVuICE9IG51bGwpIHtcbiAgICAgICAgICAgICAgICAkYXJyID0gYXJyYXlfbWVyZ2UoJHgtPmNoaWxkcmVuLCAkYXJyKTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgYXJyYXlfcHVzaCgkcmVzLCAkeC0+ZGF0YSk7XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gJHJlcztcbiAgICB9XG59XG5cbmNsYXNzIE5vZGUge1xuICAgIGZ1bmN0aW9uIF9fY29uc3RydWN0KCRkYXRhID0gbnVsbCwgJGNoaWxkcmVuID0gbnVsbCkge1xuICAgICAgICAkdGhpcy0+ZGF0YSA9ICRkYXRhO1xuICAgICAgICAkdGhpcy0+Y2hpbGRyZW4gPSAkY2hpbGRyZW47XG4gICAgfVxufVxuIikpLG1keCgiaDIiLHsiaWQiOiJyZXNvdXJjZXMtLWV4dHJhLXJlYWRpbmcifSwiUmVzb3VyY2VzICsgRXh0cmEgUmVhZGluZyIpLG1keCgicCIsbnVsbCxtZHgoImEiLE9iamVjdC5hc3NpZ24oe3BhcmVudE5hbWU6InAifSx7ImhyZWYiOiJodHRwOi8vd3d3LnRoZWNhdmUuaW5mby9waHAtYXJyYXktcHVzaC1wb3Atc2hpZnQtYW5kLXVuc2hpZnQvIn0pLCJodHRwOi8vd3d3LnRoZWNhdmUuaW5mby9waHAtYXJyYXktcHVzaC1wb3Atc2hpZnQtYW5kLXVuc2hpZnQvIikpKTt9aWYodHlwZW9mIE1EWENvbnRlbnQhPT0ndW5kZWZpbmVkJyYmTURYQ29udGVudCYmTURYQ29udGVudD09PU9iamVjdChNRFhDb250ZW50KSYmT2JqZWN0LmlzRXh0ZW5zaWJsZShNRFhDb250ZW50KSl7T2JqZWN0LmRlZmluZVByb3BlcnR5KE1EWENvbnRlbnQsJ19fZmlsZW1ldGEnLHtlbnVtZXJhYmxlOnRydWUsY29uZmlndXJhYmxlOnRydWUsdmFsdWU6e25hbWU6Ik1EWENvbnRlbnQiLGZpbGVuYW1lOiJtYW51YWwvUEhQL1BIUC1BcnJheXMubWQifX0pO31NRFhDb250ZW50LmlzTURYQ29tcG9uZW50PXRydWU7"},{"version":3,"sources":["/Users/dennis.okeeffe/Project-Imposter/developer-notes/manual/PHP/PHP-Arrays.md"],"names":["React","mdx","makeShortcode","name","MDXDefaultShortcode","props","console","warn","layoutProps","MDXLayout","MDXContent","components","isMDXComponent"],"mappings":"iMAAA,cACE,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,GAAT,KAAoB,eAApB,CACA,cAGF,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAAAC,IAAI,QAAI,SAASC,CAAAA,mBAAT,CAA6BC,KAA7B,CAAoC,CAChEC,OAAO,CAACC,IAAR,CAAa,aAAeJ,IAAf,CAAsB,yEAAnC,EACA,MAAO,WAASE,KAAT,CAAP,CACD,CAHyB,EAA1B,CAKA,GAAMG,CAAAA,WAAW,CAAG,EAApB,CAGA,GAAMC,CAAAA,SAAS,CAAG,SAAlB,CACA,cAAe,SAASC,CAAAA,UAAT,MAGZ,IAFDC,CAAAA,UAEC,MAFDA,UAEC,CADEN,KACF,+CACD,MAAO,KAAC,SAAD,kBAAeG,WAAf,CAAgCH,KAAhC,EAAuC,UAAU,CAAEM,UAAnD,CAA+D,OAAO,CAAC,WAAvE,GACL,SAAQ,CACN,KAAM,+BADA,CAAR,iCADK,CAIL,2GAJK,CAKL,yFALK,CAML,SAAQ,CACN,KAAM,MADA,CAAR,QANK,CASL,sBAAa,kBAAY,UAAU,CAAC,GAAvB,eAAb,KATK,CAUL,eAAK,0BAAM,UAAU,CAAC,KAAjB,EAA2B,CAC5B,YAAa,cADe,CAA3B,2LAAL,CAVK,CAiBL,kCAAyB,kBAAY,UAAU,CAAC,GAAvB,WAAzB,KAjBK,CAkBL,eAAK,0BAAM,UAAU,CAAC,KAAjB,EAA2B,CAC5B,YAAa,cADe,CAA3B,wPAAL,CAlBK,CA6BL,kCAAyB,kBAAY,UAAU,CAAC,GAAvB,mBAAzB,KA7BK,CA8BL,eAAK,0BAAM,UAAU,CAAC,KAAjB,EAA2B,CAC5B,YAAa,cADe,CAA3B,+PAAL,CA9BK,CAsCL,SAAQ,CACN,KAAM,KADA,CAAR,OAtCK,CAyCL,eAAK,0BAAM,UAAU,CAAC,KAAjB,EAA2B,CAC5B,YAAa,cADe,CAA3B,kMAAL,CAzCK,CAgDL,SAAQ,CACN,KAAM,OADA,CAAR,SAhDK,CAmDL,eAAK,0BAAM,UAAU,CAAC,KAAjB,EAA2B,CAC5B,YAAa,cADe,CAA3B,oMAAL,CAnDK,CA0DL,SAAQ,CACN,KAAM,SADA,CAAR,WA1DK,CA6DL,eAAK,0BAAM,UAAU,CAAC,KAAjB,EAA2B,CAC5B,YAAa,cADe,CAA3B,6LAAL,CA7DK,CAoEL,SAAQ,CACN,KAAM,mCADA,CAAR,sCApEK,CAuEL,eAAK,0BAAM,UAAU,CAAC,KAAjB,EAA2B,CAC5B,YAAa,cADe,CAA3B,mxCAAL,CAvEK,CAkIL,SAAQ,CACN,KAAM,0BADA,CAAR,6BAlIK,CAqIL,aAAG,uBAAG,UAAU,CAAC,GAAd,EAAsB,CACrB,OAAQ,+DADa,CAAtB,kEAAH,CArIK,CAAP,CAyID,C,oQAEDD,UAAU,CAACE,cAAX,CAA4B,IAA5B","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"php-array-method-applications\"\n    }}>{`PHP Array Method Applications`}</h1>\n    <p>{`This covers the basic actions of applying a push, pop, shift and unshift function with PHP.`}</p>\n    <p>{`These functions are incredibly useful for data structure implementations.`}</p>\n    <h2 {...{\n      \"id\": \"push\"\n    }}>{`Push`}</h2>\n    <p>{`Using `}<inlineCode parentName=\"p\">{`array_push`}</inlineCode>{`:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-php\"\n      }}>{`// create our array with 1 element\n$arr = array(\"one\");\n// $count will be 3 and $arr will now be array(\"one\",\"two\",\"three\");\n$count = array_push($arr,\"two\",\"three\");\n`}</code></pre>\n    <p>{`Alternative using `}<inlineCode parentName=\"p\">{`$arr[]`}</inlineCode>{`:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-php\"\n      }}>{`// create our array with 1 element\n$arr = array(\"one\");\n// $arr will now be array(\"one\",\"two\");\n$arr[] = \"two\";\n// $arr will now be array(\"one\",\"two\",\"three\");\n$arr[] = \"three\";\n// $count will be 3\n$count = count($arr)\n`}</code></pre>\n    <p>{`Alternative using `}<inlineCode parentName=\"p\">{`$array_merge()`}</inlineCode>{`:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-php\"\n      }}>{`// create our array with 1 element\n$arr = array(\"one\");\n// alternate method using array_merge()\n$arr = array_merge($arr,array(\"two\",\"three\")); // $arr will now be array(\"one\",\"two\",\"three\");\n$count = count($arr); // $count will be 3\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"pop\"\n    }}>{`Pop`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-php\"\n      }}>{`// create our array with 3 elements\n$arr = array(\"one\",\"two\",\"three\");\n// $value will be \"three\" and array's value will now be array(\"one\",\"two\");\n$value = array_pop($arr);\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"shift\"\n    }}>{`Shift`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-php\"\n      }}>{`// create our array with 3 elements\n$arr = array(\"one\",\"two\",\"three\");\n// $value will be \"one\" and array's value will now be array(\"two\",\"three\");\n$value = array_shift($arr);\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"unshift\"\n    }}>{`Unshift`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-php\"\n      }}>{`// create our array with 3 elements\n$arr = array(\"three\",\"four\",\"five\");\n// $count will now be 5 and array will hold one - five\n$count = array_unshift($arr,\"one\",\"two\");\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"example-basic-tree-implementation\"\n    }}>{`Example: Basic Tree Implementation`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-php\"\n      }}>{`<?php\n\nclass Tree {\n    function __construct($root = null) {\n        $this->root = $root;\n    }\n\n    public function bfs() {\n        // 1. shift val\n        // 2. if children, append to arr\n        // 3. append data to array to compare\n        if ($this->root == null) {\n            throw new Error(\"No tree root\");\n        }\n\n        $arr = array($this->root);\n        $res = [];\n\n        while (count($arr) > 0) {\n            $x = array_shift($arr);\n            if ($x->children != null) {\n                $arr = array_merge($arr, $x->children);\n            }\n\n            array_push($res, $x->data);\n        }\n        return $res;\n    }\n\n    public function dfs() {\n        // shift from arr\n        // if children exist, unshift array\n        // add data to res array\n\n        $res = [];\n        $arr = array($this->root);\n\n        while (count($arr) > 0) {\n            $x = array_shift($arr);\n            if ($x->children != null) {\n                $arr = array_merge($x->children, $arr);\n            }\n\n            array_push($res, $x->data);\n        }\n\n        return $res;\n    }\n}\n\nclass Node {\n    function __construct($data = null, $children = null) {\n        $this->data = $data;\n        $this->children = $children;\n    }\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"resources--extra-reading\"\n    }}>{`Resources + Extra Reading`}</h2>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"http://www.thecave.info/php-array-push-pop-shift-and-unshift/\"\n      }}>{`http://www.thecave.info/php-array-push-pop-shift-and-unshift/`}</a></p>\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  "]}]}