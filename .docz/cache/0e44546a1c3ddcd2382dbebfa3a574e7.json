{"remainingRequest":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/docz-core/node_modules/babel-loader/lib/index.js??ref--6-1!/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/@mdx-js/loader/index.js??ref--6-2!/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/source-map-loader/index.js!/Users/dennis.okeeffe/Project-Imposter/developer-notes/manual/Stripe/Dotnet-Stripe-Configuration.md","dependencies":[{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/manual/Stripe/Dotnet-Stripe-Configuration.md","mtime":1578795913331},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/cache-loader/dist/cjs.js","mtime":1564095360956},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/docz-core/node_modules/babel-loader/lib/index.js","mtime":1562568123838},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/@mdx-js/loader/index.js","mtime":1565139338792},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/source-map-loader/index.js","mtime":1564095361765}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/dennis.okeeffe/Project-Imposter/developer-notes/manual/Stripe/Dotnet-Stripe-Configuration.md"],"names":["React","mdx","makeShortcode","name","MDXDefaultShortcode","props","console","warn","layoutProps","MDXLayout","MDXContent","components","isMDXComponent"],"mappings":"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","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"configuring-stripe-for-net\"\n    }}>{`Configuring Stripe for .NET`}</h1>\n    <h2 {...{\n      \"id\": \"resources\"\n    }}>{`Resources`}</h2>\n    <ol>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"https://codebrains.io/integrate-stripe-api-with-asp-net-core-creating-customers/\"\n        }}>{`Setting up Stripe API for Dotnet`}</a></li>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"https://stripe.com/docs/api?lang=dotnet\"\n        }}>{`Stripe Dotnet API Docs`}</a></li>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"https://docs.microsoft.com/en-us/aspnet/core/tutorials/first-web-api?view=aspnetcore-3.1&tabs=visual-studio-mac\"\n        }}>{`First Dotnet API`}</a></li>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"https://docs.microsoft.com/en-us/aspnet/core/security/app-secrets?view=aspnetcore-3.1&tabs=linux\"\n        }}>{`Setting secrets for a Dotnet project`}</a></li>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/keywords/interface\"\n        }}>{`Interfaces in C#`}</a></li>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"https://stormpath.com/blog/build-api-service-dotnet-core-twilio-stripe\"\n        }}>{`ASP.NET Core API Service with Twilio, Stripe and Stormpath`}</a></li>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"https://cmatskas.com/processing-payments-and-being-pci-compliant-with-stripe-js/?utm_content=buffer55d56&utm_medium=social&utm_source=twitter.com&utm_campaign=buffer\"\n        }}>{`Process Payments with Dotnet`}</a></li>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"https://github.com/cmatskas/StripeSample/tree/master/StripeSample\"\n        }}>{`Process Payments with Dotnet Github`}</a></li>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"https://stripe.com/docs/development#create-charge\"\n        }}>{`Stripe Development Docs`}</a></li>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"https://www.toptal.com/asp-dot-net/asp-net-web-api-tutorial\"\n        }}>{`Toptal ASP.NET WebAPI`}</a></li>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"https://dev.to/integerman/creating-a-net-core-api-3n6d\"\n        }}>{`Dev.To tutorial`}</a></li>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"https://httpie.org/doc#default-behaviour\"\n        }}>{`HTTPie JSON`}</a></li>\n    </ol>\n    <h2 {...{\n      \"id\": \"adding-the-library\"\n    }}>{`Adding the library`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`# install stripe\ndotnet add package Stripe.net\n# for reading local env file\n# NOT REQUIRED unless you want to read from .env\ndotnet add package DotNetEnv\n# install required code generation code\nMicrosoft.VisualStudio.Web.CodeGeneration.Design\n# global install scaffolding tool\ndotnet tool install --global dotnet-aspnet-codegenerator\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"adding-a-dotenv-file\"\n    }}>{`Adding a Dotenv file`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`touch .env\n`}</code></pre>\n    <p>{`Within the Dotenv file, we need to add your test keys from Stripe's website.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`SK_TEST_KEY= sk_test...\nPK_TEST_KEY=pk_test...\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"updating-your-settings-file\"\n    }}>{`Updating your settings file`}</h2>\n    <p>{`If you are going to use another method to fetch the variables (ie secrets etc), you could add the following to your `}<inlineCode parentName=\"p\">{`appsettings.json`}</inlineCode>{` file:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`{\n  // previous key/values omitted for brevity\n  \"Stripe\": {\n    \"SecretKey\": \"SK_TEST_KEY\", // this will eval to sk_test_... .env\n    \"PublishableKey\": \"PK_TEST_KEY\" // this will eval to sk_test_... from .env\n  }\n}\n`}</code></pre>\n    <p>{`Make sure to check the `}<a parentName=\"p\" {...{\n        \"href\": \"https://docs.microsoft.com/en-us/dotnet/csharp/programming-guide/classes-and-structs/passing-parameters\"\n      }}>{`docs on passing parameters`}</a>{` to understand how this works.`}</p>\n    <h2 {...{\n      \"id\": \"add-stripe-config-to-startupcs\"\n    }}>{`Add Stripe config to Startup.cs`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-csharp\"\n      }}>{`using Stripe;\nusing DotNetEnv;\n\n// ... code omitted for brevity\n\npublic Startup(IConfiguration configuration)\n{\n    Configuration = configuration;\n    // load .env file\n    DotNetEnv.Env.Load();\n    // set config using env var\n    StripeConfiguration.ApiKey = System.Environment.GetEnvironmentVariable(\"SK_TEST_KEY\");\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"create-the-model\"\n    }}>{`Create the Model`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-cs\"\n      }}>{`// in Models/StripeCharge.cs\nnamespace ChargeApi.Models\n{\n    public class StripeCharge\n    {\n        public long Amount { get; set; }\n        public string Currency { get; set; }\n        public string Source { get; set; }\n        public string ReceiptEmail { get; set; }\n    }\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"create-the-controller\"\n    }}>{`Create the Controller`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-cs\"\n      }}>{`// Controllers/Charge.cs\nusing System.Collections.Generic;\nusing Microsoft.AspNetCore.Mvc;\nusing Stripe;\nusing ChargeApi.Models;\n\nnamespace dotnet_stripe.Controllers\n{\n    [ApiController]\n    [Route(\"api/charges\")]\n    public class ChargesController : Controller\n    {\n        [HttpPost]\n        public Stripe.Charge CreateCharge([FromBody] StripeCharge createOptions)\n        {\n            var options = new ChargeCreateOptions\n            {\n                Amount = createOptions.Amount,\n                Currency = \"usd\",\n                Source = \"tok_visa\",\n                ReceiptEmail = \"tim.apple@example.com\",\n            };\n            var service = new ChargeService();\n            var charge = service.Create(options);\n            return charge;\n        }\n    }\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"sending-the-request-on-httpie\"\n    }}>{`Sending the request on HTTPie`}</h2>\n    <p>{`Since we are sending back the response from the `}<inlineCode parentName=\"p\">{`Stripe.Charge`}</inlineCode>{` object, it will be very verbose and not what you want to do in reality for the API.`}</p>\n    <p>{`Using HTTPie (check resource `}{`[12]`}{`), we can check for our 200 response with the full JSON body returned by Stripe by calling `}<inlineCode parentName=\"p\">{`http POST http://localhost:5000/api/charges Amount:=200`}</inlineCode>{` in our console.`}</p>\n    <h2 {...{\n      \"id\": \"check-the-stripe-developer-console\"\n    }}>{`Check the Stripe developer console`}</h2>\n    <p>{`Heading to our Stripe dashboard and checking under `}<inlineCode parentName=\"p\">{`Developers > Events`}</inlineCode>{`, one can see our payment made for `}<inlineCode parentName=\"p\">{`US$2.00`}</inlineCode>{` by `}<inlineCode parentName=\"p\">{`\"tim.apple@example.com\"`}</inlineCode>{`. Great success!`}</p>\n    <p>{`Of course, all those values are coded and not exactly what we want in the real world... but we are connected.`}</p>\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  "]}]}