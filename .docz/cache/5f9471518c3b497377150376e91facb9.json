{"remainingRequest":"/Users/okeeffe_d/Project-Imposter/developer-notes/node_modules/docz-core/node_modules/babel-loader/lib/index.js??ref--6-1!/Users/okeeffe_d/Project-Imposter/developer-notes/node_modules/@mdx-js/loader/index.js??ref--6-2!/Users/okeeffe_d/Project-Imposter/developer-notes/node_modules/source-map-loader/index.js!/Users/okeeffe_d/Project-Imposter/developer-notes/manual/Ruby/Ruby-Lambda-Funcs.md","dependencies":[{"path":"/Users/okeeffe_d/Project-Imposter/developer-notes/manual/Ruby/Ruby-Lambda-Funcs.md","mtime":1552095075307},{"path":"/Users/okeeffe_d/Project-Imposter/developer-notes/node_modules/cache-loader/dist/cjs.js","mtime":1561535530324},{"path":"/Users/okeeffe_d/Project-Imposter/developer-notes/node_modules/docz-core/node_modules/babel-loader/lib/index.js","mtime":1560300163820},{"path":"/Users/okeeffe_d/Project-Imposter/developer-notes/node_modules/@mdx-js/loader/index.js","mtime":1561535530532},{"path":"/Users/okeeffe_d/Project-Imposter/developer-notes/node_modules/source-map-loader/index.js","mtime":1548285283521}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9vYmplY3RXaXRob3V0UHJvcGVydGllcyBmcm9tIi9Vc2Vycy9va2VlZmZlX2QvUHJvamVjdC1JbXBvc3Rlci9kZXZlbG9wZXItbm90ZXMvbm9kZV9tb2R1bGVzL2JhYmVsLXByZXNldC1yZWFjdC1hcHAvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzIjsvKiBAanN4IG1keCAqL2ltcG9ydCBSZWFjdCBmcm9tJ3JlYWN0JztpbXBvcnR7bWR4fWZyb20nQG1keC1qcy9yZWFjdCc7LyogQGpzeCBtZHggKi92YXIgbWFrZVNob3J0Y29kZT1mdW5jdGlvbiBtYWtlU2hvcnRjb2RlKG5hbWUpe3JldHVybiBmdW5jdGlvbiBNRFhEZWZhdWx0U2hvcnRjb2RlKHByb3BzKXtjb25zb2xlLndhcm4oIkNvbXBvbmVudCAiK25hbWUrIiB3YXMgbm90IGltcG9ydGVkLCBleHBvcnRlZCwgb3IgcHJvdmlkZWQgYnkgTURYUHJvdmlkZXIgYXMgZ2xvYmFsIHNjb3BlIik7cmV0dXJuIG1keCgiZGl2Iixwcm9wcyk7fTt9O3ZhciBsYXlvdXRQcm9wcz17fTt2YXIgTURYTGF5b3V0PSJ3cmFwcGVyIjtleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBNRFhDb250ZW50KF9yZWYpe3ZhciBjb21wb25lbnRzPV9yZWYuY29tcG9uZW50cyxwcm9wcz1fb2JqZWN0V2l0aG91dFByb3BlcnRpZXMoX3JlZixbImNvbXBvbmVudHMiXSk7cmV0dXJuIG1keChNRFhMYXlvdXQsT2JqZWN0LmFzc2lnbih7fSxsYXlvdXRQcm9wcyxwcm9wcyx7Y29tcG9uZW50czpjb21wb25lbnRzLG1keFR5cGU6Ik1EWExheW91dCJ9KSxtZHgoImgxIix7ImlkIjoicnVieS1sYW1iZGEtZnVuY3Rpb25zIn0sIlJ1YnkgTGFtYmRhIEZ1bmN0aW9ucyIpLG1keCgicCIsbnVsbCwiVGhlIGJhc2ljIGdpc3Qgb2YgZGVjbGFyYXRpb24gYW5kIHVzYWdlIGlzIHRvIHVzZSB0aGUgIixtZHgoImlubGluZUNvZGUiLHtwYXJlbnROYW1lOiJwIn0sImxhbWJkYSIpLCIga2V5d29yZC4gTm90ZSB0aGF0IExhbWJkYSBmdW5jdGlvbnMgaGF2ZSBzdWJ0bGUgZGlmZmVyZW5jZXMgdG8gUHJvYyBmdW5jdGlvbnMsIGFsdGhvdWdoIHRoZXkgYm90aCBkZXJpdmUgZnJvbSB0aGUgUHJvYyBvYmplY3QuIiksbWR4KCJwIixudWxsLCJUaGUgTGFtYmRhIGZ1bmN0aW9uIGVuZm9yY2VzIHRoZSBudW1iZXIgb2YgYXJndW1lbnRzIHBhc3NlZC4iKSxtZHgoInAiLG51bGwsIkluIGFkZGl0aW9uLCBMYW1iZGEgYW5kIFByb2MgZnVuY3Rpb25zIHRyZWF0IHRoZSAiLG1keCgiaW5saW5lQ29kZSIse3BhcmVudE5hbWU6InAifSwicmV0dXJuIiksIiBkaWZmZXJlbnRseS4gTGFtYmRhIHdpbGwgcmV0dXJuIGZyb20gdGhlIHNjb3BlIG9mIHRoYXQgY2xvc3VyZSBmdW5jdGlvbiwgd2hlcmVhcyBQcm9jIHdpbGwgcmV0dXJuIGZyb20gdGhlIHBhcmVudCBzY29wZS4iKSxtZHgoImgyIix7ImlkIjoic2ltcGxlLWV4YW1wbGUifSwiU2ltcGxlIEV4YW1wbGUiKSxtZHgoInByZSIsbnVsbCxtZHgoImNvZGUiLE9iamVjdC5hc3NpZ24oe3BhcmVudE5hbWU6InByZSJ9LHsiY2xhc3NOYW1lIjoibGFuZ3VhZ2UtcnVieSJ9KSwiIyBsYW1iZGEucmJcbmNsYXNzIExhbWJkYVxuICAgIGRlZiBzZWxmLmhlbGxvXG4gICAgICAgIGhlbGxvV29ybGQgPSBsYW1iZGEgeyByZXR1cm4gXCJIZWxsbywgV29ybGQhXCIgfVxuICAgICAgICByZXMgPSBoZWxsb1dvcmxkLmNhbGxcbiAgICBlbmRcblxuICAgIGRlZiBzZWxmLnN1bShhLCBiKVxuICAgICAgICBzdW1MYW1iZGEgPSBsYW1iZGEge3xhLGJ8IGEgKyBiIH1cbiAgICAgICAgcmVzID0gc3VtTGFtYmRhLmNhbGwoYSwgYilcbiAgICBlbmRcbmVuZFxuIikpLG1keCgicCIsbnVsbCwiVGVzdCBmaWxlIiksbWR4KCJwcmUiLG51bGwsbWR4KCJjb2RlIixPYmplY3QuYXNzaWduKHtwYXJlbnROYW1lOiJwcmUifSx7ImNsYXNzTmFtZSI6Imxhbmd1YWdlLXJ1YnkifSksIiMgbGFtYmRhX3Rlc3QucmJcbmJlZ2luXG4gIGdlbSAnbWluaXRlc3QnLCAnPj0gNS4wLjAnXG4gIHJlcXVpcmUgJ21pbml0ZXN0L2F1dG9ydW4nXG4gIHJlcXVpcmVfcmVsYXRpdmUgJ2xhbWJkYSdcbnJlc2N1ZSBHZW06OkxvYWRFcnJvciA9PiBlXG4gIHB1dHMgXCJcXG5NaXNzaW5nIERlcGVuZGVuY3k6XFxuI3tlLmJhY2t0cmFjZS5maXJzdH0gI3tlLm1lc3NhZ2V9XCJcbiAgcHV0cyAnTWluaXRlc3QgNS4wIGdlbSBtdXN0IGJlIGluc3RhbGxlZCBmb3IgdGhlIFJ1YnkgdHJhY2suJ1xucmVzY3VlIExvYWRFcnJvciA9PiBlXG4gIHB1dHMgXCJcXG5FcnJvcjpcXG4je2UuYmFja3RyYWNlLmZpcnN0fSAje2UubWVzc2FnZX1cIlxuICBwdXRzIERBVEEucmVhZFxuICBleGl0IDFcbmVuZFxuXG4jIENvbW1vbiB0ZXN0IGRhdGEgdmVyc2lvbjogMS4xLjAgYmUzYWU2NlxuY2xhc3MgTGFtYmRhVGVzdCA8IE1pbml0ZXN0OjpUZXN0XG4gIGRlZiB0ZXN0X2hlbGxvX3dvcmxkX2xhbWJkYVxuICAgICMgc2tpcFxuICAgIGFzc2VydF9lcXVhbCBcIkhlbGxvLCBXb3JsZCFcIiwgTGFtYmRhLmhlbGxvXG4gIGVuZFxuXG4gIGRlZiB0ZXN0X3N1bV9sYW1iZGFcbiAgICAjIHNraXBcbiAgICBhc3NlcnRfZXF1YWwgMywgTGFtYmRhLnN1bSgxLDIpXG4gIGVuZFxuZW5kXG5cbl9fRU5EX19cbiIpKSk7fWlmKHR5cGVvZiBNRFhDb250ZW50IT09J3VuZGVmaW5lZCcmJk1EWENvbnRlbnQmJk1EWENvbnRlbnQ9PT1PYmplY3QoTURYQ29udGVudCkmJk9iamVjdC5pc0V4dGVuc2libGUoTURYQ29udGVudCkpe09iamVjdC5kZWZpbmVQcm9wZXJ0eShNRFhDb250ZW50LCdfX2ZpbGVtZXRhJyx7ZW51bWVyYWJsZTp0cnVlLGNvbmZpZ3VyYWJsZTp0cnVlLHZhbHVlOntuYW1lOiJNRFhDb250ZW50IixmaWxlbmFtZToibWFudWFsL1J1YnkvUnVieS1MYW1iZGEtRnVuY3MubWQifX0pO31NRFhDb250ZW50LmlzTURYQ29tcG9uZW50PXRydWU7"},{"version":3,"sources":["/Users/okeeffe_d/Project-Imposter/developer-notes/manual/Ruby/Ruby-Lambda-Funcs.md"],"names":["React","mdx","makeShortcode","name","MDXDefaultShortcode","props","console","warn","layoutProps","MDXLayout","MDXContent","components","isMDXComponent"],"mappings":"4LAAA,cACE,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,GAAT,KAAoB,eAApB,CACA,cAGF,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAAAC,IAAI,QAAI,SAASC,CAAAA,mBAAT,CAA6BC,KAA7B,CAAoC,CAChEC,OAAO,CAACC,IAAR,CAAa,aAAeJ,IAAf,CAAsB,yEAAnC,EACA,MAAO,WAASE,KAAT,CAAP,CACD,CAHyB,EAA1B,CAKA,GAAMG,CAAAA,WAAW,CAAG,EAApB,CAGA,GAAMC,CAAAA,SAAS,CAAG,SAAlB,CACA,cAAe,SAASC,CAAAA,UAAT,MAGZ,IAFDC,CAAAA,UAEC,MAFDA,UAEC,CADEN,KACF,+CACD,MAAO,KAAC,SAAD,kBAAeG,WAAf,CAAgCH,KAAhC,EAAuC,UAAU,CAAEM,UAAnD,CAA+D,OAAO,CAAC,WAAvE,GACL,SAAQ,CACN,KAAM,uBADA,CAAR,yBADK,CAIL,sEAA6D,kBAAY,UAAU,CAAC,GAAvB,WAA7D,mIAJK,CAKL,4EALK,CAML,iEAAwD,kBAAY,UAAU,CAAC,GAAvB,WAAxD,6HANK,CAOL,SAAQ,CACN,KAAM,gBADA,CAAR,kBAPK,CAUL,eAAK,0BAAM,UAAU,CAAC,KAAjB,EAA2B,CAC5B,YAAa,eADe,CAA3B,6QAAL,CAVK,CAyBL,yBAzBK,CA0BL,eAAK,0BAAM,UAAU,CAAC,KAAjB,EAA2B,CAC5B,YAAa,eADe,CAA3B,kqBAAL,CA1BK,CAAP,CA0DD,C,4QAEDD,UAAU,CAACE,cAAX,CAA4B,IAA5B","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"ruby-lambda-functions\"\n    }}>{`Ruby Lambda Functions`}</h1>\n    <p>{`The basic gist of declaration and usage is to use the `}<inlineCode parentName=\"p\">{`lambda`}</inlineCode>{` keyword. Note that Lambda functions have subtle differences to Proc functions, although they both derive from the Proc object.`}</p>\n    <p>{`The Lambda function enforces the number of arguments passed.`}</p>\n    <p>{`In addition, Lambda and Proc functions treat the `}<inlineCode parentName=\"p\">{`return`}</inlineCode>{` differently. Lambda will return from the scope of that closure function, whereas Proc will return from the parent scope.`}</p>\n    <h2 {...{\n      \"id\": \"simple-example\"\n    }}>{`Simple Example`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-ruby\"\n      }}>{`# lambda.rb\nclass Lambda\n    def self.hello\n        helloWorld = lambda { return \"Hello, World!\" }\n        res = helloWorld.call\n    end\n\n    def self.sum(a, b)\n        sumLambda = lambda {|a,b| a + b }\n        res = sumLambda.call(a, b)\n    end\nend\n`}</code></pre>\n    <p>{`Test file`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-ruby\"\n      }}>{`# lambda_test.rb\nbegin\n  gem 'minitest', '>= 5.0.0'\n  require 'minitest/autorun'\n  require_relative 'lambda'\nrescue Gem::LoadError => e\n  puts \"\\\\nMissing Dependency:\\\\n#{e.backtrace.first} #{e.message}\"\n  puts 'Minitest 5.0 gem must be installed for the Ruby track.'\nrescue LoadError => e\n  puts \"\\\\nError:\\\\n#{e.backtrace.first} #{e.message}\"\n  puts DATA.read\n  exit 1\nend\n\n# Common test data version: 1.1.0 be3ae66\nclass LambdaTest < Minitest::Test\n  def test_hello_world_lambda\n    # skip\n    assert_equal \"Hello, World!\", Lambda.hello\n  end\n\n  def test_sum_lambda\n    # skip\n    assert_equal 3, Lambda.sum(1,2)\n  end\nend\n\n__END__\n`}</code></pre>\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  "]}]}