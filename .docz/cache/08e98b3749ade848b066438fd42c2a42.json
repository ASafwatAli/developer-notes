{"remainingRequest":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/docz-core/node_modules/babel-loader/lib/index.js??ref--6-1!/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/@mdx-js/loader/index.js??ref--6-2!/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/source-map-loader/index.js!/Users/dennis.okeeffe/Project-Imposter/developer-notes/manual/Principles/Typography.md","dependencies":[{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/manual/Principles/Typography.md","mtime":1562563032078},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/cache-loader/dist/cjs.js","mtime":1564095360956},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/docz-core/node_modules/babel-loader/lib/index.js","mtime":1562568123838},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/@mdx-js/loader/index.js","mtime":1565139338792},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/source-map-loader/index.js","mtime":1564095361765}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/dennis.okeeffe/Project-Imposter/developer-notes/manual/Principles/Typography.md"],"names":["React","mdx","makeShortcode","name","MDXDefaultShortcode","props","console","warn","layoutProps","MDXLayout","MDXContent","components","isMDXComponent"],"mappings":"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","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"fonts-cli\"\n    }}>{`Fonts CLI`}</h1>\n    <p>{`This tool is a wrapper to help download/rename fonts to fit with the font naming conventions.`}</p>\n    <h2 {...{\n      \"id\": \"conventions\"\n    }}>{`Conventions`}</h2>\n    <p>{`For naming files, ensure that names are in lowercase format and that the numerals are replaced with common weight names (the renaming can be done with code).`}</p>\n    <p>{`We keep things lower case for purposes of serving on web, and replacing the numerals with the common font name is just an addition.`}</p>\n    <p>{`To see the conventional name for font weights, `}<a parentName=\"p\" {...{\n        \"href\": \"https://medium.com/react-native-training/react-native-custom-fonts-ccc9aacf9e5e\"\n      }}>{`Mozilla has a reference here.`}</a></p>\n    <h3 {...{\n      \"id\": \"examples\"\n    }}>{`Examples`}</h3>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Example name`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`After renaming`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`SourceSansPro-200.ttf`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`source-sans-pro-extra-light.ttf`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`SourceSansPro-200italic.ttf`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`source-sans-pro-extra-light-italic.ttf`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`SourceSansPro-regular.ttf`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`source-sans-pro-regular.ttf`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <h2 {...{\n      \"id\": \"renaming\"\n    }}>{`Renaming`}</h2>\n    <p>{`Running the rename function will find the path of the fonts and return it in the condition we require for the convention.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`const oldNames = [\n  '/Users/okeeffe_d/Project-Imposter/hello-gfi/fonts/SourceSansPro-200.ttf',\n  '/Users/okeeffe_d/Project-Imposter/hello-gfi/fonts/SourceSansPro-200italic.ttf',\n  '/Users/okeeffe_d/Project-Imposter/hello-gfi/fonts/SourceSansPro-300.ttf',\n  '/Users/okeeffe_d/Project-Imposter/hello-gfi/fonts/SourceSansPro-300italic.ttf',\n  '/Users/okeeffe_d/Project-Imposter/hello-gfi/fonts/SourceSansPro-600.ttf',\n  '/Users/okeeffe_d/Project-Imposter/hello-gfi/fonts/SourceSansPro-600italic.ttf',\n  '/Users/okeeffe_d/Project-Imposter/hello-gfi/fonts/SourceSansPro-700.ttf',\n  '/Users/okeeffe_d/Project-Imposter/hello-gfi/fonts/SourceSansPro-700italic.ttf',\n  '/Users/okeeffe_d/Project-Imposter/hello-gfi/fonts/SourceSansPro-900.ttf',\n  '/Users/okeeffe_d/Project-Imposter/hello-gfi/fonts/SourceSansPro-900italic.ttf',\n  '/Users/okeeffe_d/Project-Imposter/hello-gfi/fonts/SourceSansPro-italic.ttf',\n  '/Users/okeeffe_d/Project-Imposter/hello-gfi/fonts/SourceSansPro-regular.ttf'\n];\n\n/*\n    // ! after renaming oldNames through function\n\n    /Users/okeeffe_d/Project-Imposter/hello-gfi/fonts/source-sans-pro-extra-light.ttf\n    /Users/okeeffe_d/Project-Imposter/hello-gfi/fonts/source-sans-pro-extra-light-italic.ttf\n    /Users/okeeffe_d/Project-Imposter/hello-gfi/fonts/source-sans-pro-light.ttf\n    /Users/okeeffe_d/Project-Imposter/hello-gfi/fonts/source-sans-pro-light-italic.ttf\n    /Users/okeeffe_d/Project-Imposter/hello-gfi/fonts/source-sans-pro-semi-bold.ttf\n    /Users/okeeffe_d/Project-Imposter/hello-gfi/fonts/source-sans-pro-semi-bold-italic.ttf\n    /Users/okeeffe_d/Project-Imposter/hello-gfi/fonts/source-sans-pro-bold.ttf\n    /Users/okeeffe_d/Project-Imposter/hello-gfi/fonts/source-sans-pro-bold-italic.ttf\n    /Users/okeeffe_d/Project-Imposter/hello-gfi/fonts/source-sans-pro-black.ttf\n    /Users/okeeffe_d/Project-Imposter/hello-gfi/fonts/source-sans-pro-black-italic.ttf\n    /Users/okeeffe_d/Project-Imposter/hello-gfi/fonts/source-sans-pro-italic.ttf\n    /Users/okeeffe_d/Project-Imposter/hello-gfi/fonts/source-sans-pro-regular.ttf\n*/\n`}</code></pre>\n    <p>{`You can use something like the following to do this:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`const fs = require('fs-extra');\nconst cwd = process.cwd();\nconst recursive = require('recursive-readdir');\nconst kebabCase = require('lodash.kebabcase');\n\n/**\n * Replace names of fonts found within directory\n * with naming convention.\n *\n */\nconst updateFontNames = async() => {\n    /**\n     * ! Replace numeral with comment name - hack job.\n     *\n     * @param {string} name Name of the font to update\n     */\n    const commentWeightName = name => {\n        name = name.replace('100', 'thin');\n        name = name.replace('200', 'extra-light');\n        name = name.replace('300', 'light');\n        name = name.replace('400', 'normal');\n        name = name.replace('500', 'medium');\n        name = name.replace('600', 'semi-bold');\n        name = name.replace('700', 'bold');\n        name = name.replace('800', 'extra-bold');\n        name = name.replace('900', 'black');\n        return name;\n    }\n\n    const fontFiles = await recursive(cwd, ['node_modules', '!*.ttf']);\n    for (const fontPath of fontFiles) {\n        try {\n            const fontDirArr = fontPath.split('/');\n            const fontNameFull = fontDirArr.pop();\n            const font = fontNameFull.replace('.ttf', '');\n            const fontDir = fontDirArr.join('/');\n            let kebabFontName = kebabCase(font);\n            const newFontName = commentWeightName(kebabFontName);\n            const outputFilePath = fontDir + '/' + newFontName + '.ttf';\n            fs.moveSync(fontPath, outputFilePath, {overwrite: true});\n        } catch (err) {\n            console.error(err);\n        }\n    }\n};\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"convention-usage-for-web\"\n    }}>{`Convention usage for Web`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-scss\"\n      }}>{`/* open sans - light */\n@font-face {\n    font-family: 'open-sans-regular';\n    font-style: normal;\n    font-weight: 300;\n    // local() just checks for local files first\n    src: local('OpenSans Regular'), local('OpenSans-Regular'),\n        url('/path/to/fonts/open-sans-regular.ttf') format('truetype'); /* Safari, Android, iOS */\n}\n\n// Font mixins\n@mixin f-opensans-regular {\n    font: {\n        family: 'open-sans-regular', sans-serif;\n    }\n}\n\n// optional - flexible usage\n@mixin f-primary-regular {\n    // option a)\n    @include f-opensans-regular;\n    // option b) - don't include the above mixin for this\n    font: {\n        family: 'open-sans-regular', sans-serif;\n    }\n}\n\n// usage for standard base class\np,\nli {\n    @include f-primary-regular;\n    font-size: 1.5rem;\n    line-height: 1.4;\n    margin-bottom: 10px;\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"convention-usage-for-react-native-not-expo\"\n    }}>{`Convention usage for React Native (not Expo)`}</h2>\n    <p>{`For React Native, fonts MUST be kept at the root in `}<inlineCode parentName=\"p\">{`assets/fonts`}</inlineCode>{`.`}</p>\n    <p>{`Using the convention here can be a little different. You need to use the full name of the font which can be found on Font Book (even when refencing the font file).`}</p>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"https://medium.com/react-native-training/react-native-custom-fonts-ccc9aacf9e5e\"\n      }}>{`Check here for more information on what to do.`}</a></p>\n    <h2 {...{\n      \"id\": \"convention-usage-for-expo\"\n    }}>{`Convention usage for Expo`}</h2>\n    <p>{`For React Native, fonts MUST be kept at the root in `}<inlineCode parentName=\"p\">{`assets/fonts`}</inlineCode>{`.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`import { Font } from 'expo';\n\nexport default class App extends React.Component {\n  componentDidMount() {\n    Font.loadAsync({\n      'open-sans-regular': require('./assets/fonts/open-sans-regular.ttf'),\n    });\n  }\n\n  // ...\n}\n`}</code></pre>\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  "]}]}