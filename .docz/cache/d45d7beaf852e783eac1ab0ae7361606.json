{"remainingRequest":"/Users/okeeffe_d/Project-Imposter/developer-notes/node_modules/babel-loader/lib/index.js?{\"presets\":[[\"/Users/okeeffe_d/Project-Imposter/developer-notes/node_modules/babel-preset-docz/dist/index.js\",{\"flow\":true,\"typescript\":false,\"parseProps\":true}]],\"plugins\":[[\"/Users/okeeffe_d/Project-Imposter/developer-notes/node_modules/docz-utils/lib/named-asset-import.js\",{\"loaderMap\":{\"svg\":{\"ReactComponent\":\"@svgr/webpack?-prettier,-svgo![path]\"}}}],\"/Users/okeeffe_d/Project-Imposter/developer-notes/node_modules/react-hot-loader/babel.js\"],\"babelrc\":false,\"cacheCompression\":false,\"compact\":false}!/Users/okeeffe_d/Project-Imposter/developer-notes/manual/Lift/react-native.md","dependencies":[{"path":"/Users/okeeffe_d/Project-Imposter/developer-notes/manual/Lift/react-native.md","mtime":1548282825092},{"path":"/Users/okeeffe_d/Project-Imposter/developer-notes/node_modules/cache-loader/dist/cjs.js","mtime":1548285281334},{"path":"/Users/okeeffe_d/Project-Imposter/developer-notes/node_modules/babel-loader/lib/index.js","mtime":1548285280890}],"contextDependencies":[],"result":["var _jsxFileName = \"/Users/okeeffe_d/Project-Imposter/developer-notes/manual/Lift/react-native.md\";\n\n(function () {\n  var enterModule = require('react-hot-loader').enterModule;\n\n  enterModule && enterModule(module);\n})();\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport React from 'react';\nimport { MDXTag } from '@mdx-js/tag';\n\nvar MDXContent =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(MDXContent, _React$Component);\n\n  function MDXContent(props) {\n    var _this;\n\n    _classCallCheck(this, MDXContent);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MDXContent).call(this, props));\n    _this.layout = null;\n    return _this;\n  }\n\n  _createClass(MDXContent, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          components = _this$props.components,\n          props = _objectWithoutProperties(_this$props, [\"components\"]);\n\n      return React.createElement(MDXTag, {\n        name: \"wrapper\",\n        components: components,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14\n        },\n        __self: this\n      }, React.createElement(MDXTag, {\n        name: \"h1\",\n        components: components,\n        props: {\n          \"id\": \"lift---react-native\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      }, \"Lift - React Native\"), React.createElement(MDXTag, {\n        name: \"h2\",\n        components: components,\n        props: {\n          \"id\": \"process-to-get-from-a-to-b\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }, \"Process to get from A to B\"), React.createElement(MDXTag, {\n        name: \"pre\",\n        components: components,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }, React.createElement(MDXTag, {\n        name: \"code\",\n        components: components,\n        parentName: \"pre\",\n        props: {\n          \"className\": \"language-shell\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }, \"expo init [project-name]\\ncd [project-name]\\nprj react-native\\ntouch up.yml\\n# Add in some lift code\\nkratos install lift react-native\\nshotgun run\\nlift up\\nshotgun run\\nawsmobile init -y\\nawsmobile publish\\nexpo start --lan\\n\")), React.createElement(MDXTag, {\n        name: \"h3\",\n        components: components,\n        props: {\n          \"id\": \"quick-example\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, \"Quick Example\"), React.createElement(MDXTag, {\n        name: \"pre\",\n        components: components,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, React.createElement(MDXTag, {\n        name: \"code\",\n        components: components,\n        parentName: \"pre\",\n        props: {\n          \"className\": \"language-yml\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, \"react-native:\\n  - node:\\n      components:\\n        - CounterOne\\n        - LoginTwo\\n        - OnboardingThree\\n        - OnboardingFive\\n      screens:\\n        - screenName: Login\\n          components:\\n            - LoginTwo\\n        - screenName: Counter\\n          components:\\n            - CounterOne\\n        - screenName: Info\\n          components:\\n            - OnboardingThree\\n        - screenName: Onboarding\\n          components:\\n            - OnboardingFive\\n      router:\\n        stackName: StackMain\\n        initialRouteName: StackTabBar\\n        navigator:\\n          - StackTabBar:\\n              stackName: StackTabBar\\n              initialRouteName: Login\\n              navigator:\\n                - Login:\\n                    navigator: []\\n                - Counter:\\n                    navigator: []\\n                - Info:\\n                    navigator: []\\n                - Onboarding:\\n                    navigator: []\\n\")), React.createElement(MDXTag, {\n        name: \"h2\",\n        components: components,\n        props: {\n          \"id\": \"live-example-to-use\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, \"Live example to use\"), React.createElement(MDXTag, {\n        name: \"pre\",\n        components: components,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(MDXTag, {\n        name: \"code\",\n        components: components,\n        parentName: \"pre\",\n        props: {\n          \"className\": \"language-yml\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, \"react-native:\\n  - node:\\n      components:\\n        - CounterOne\\n        - LoginTwo\\n        - OnboardingThree\\n        - OnboardingFive\\n      screens:\\n        - screenName: Login\\n          components:\\n            - LoginTwo\\n        - screenName: Counter\\n          components:\\n            - CounterOne\\n        - screenName: Info\\n          components:\\n            - OnboardingThree\\n        - screenName: Onboarding\\n          components:\\n            - OnboardingFive\\n      router:\\n        stackName: StackMain\\n        initialRouteName: StackTabBar\\n        navigator:\\n          - StackTabBar:\\n              stackName: StackTabBar\\n              initialRouteName: Login\\n              navigator:\\n                - Login:\\n                    navigator: []\\n                - Counter:\\n                    navigator: []\\n                - Info:\\n                    navigator: []\\n                - Onboarding:\\n                    navigator: []\\n\")), React.createElement(MDXTag, {\n        name: \"h2\",\n        components: components,\n        props: {\n          \"id\": \"layout\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, \"Layout\"), React.createElement(MDXTag, {\n        name: \"pre\",\n        components: components,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, React.createElement(MDXTag, {\n        name: \"code\",\n        components: components,\n        parentName: \"pre\",\n        props: {\n          \"className\": \"language-yml\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, \"react-native:\\n  - node:\\n      projectName: App example\\n      bucketName: app-example\\n      components:\\n        - LoginOne\\n        - OnboardingOne\\n      screens:\\n        - screenName: NewsFeed\\n          detailScreen: NewsFeedDetail\\n          components:\\n            - LoginOne\\n        - screenName: ScreenOne\\n          components:\\n            - OnboardingOne\\n      router:\\n        stackName: StackRoot\\n        initialRouteName: StackTabBar\\n        navigator:\\n          - StackTabBar:\\n              stackName: StackTabBar\\n              initialRouteName: ScreenOne\\n              navigator:\\n                - StackFeed:\\n                    stackName: StackFeed\\n                    initialRouteName: ScreenOne\\n                    navigator:\\n                      - ScreenOne:\\n                          navigator: []\\n                      - ScreenTwo:\\n                          navigator: []\\n                - StackInfo:\\n                    stackName: StackInfo\\n                    initialRouteName: ScreenOne\\n                    navigator:\\n                      - ScreenThree:\\n                          navigator: []\\n                      - ScreenFour:\\n                          navigator: []\\n                - Profile:\\n                    navigator: []\\n      colors:\\n        cBlack: '#000'\\n        cWhite: '#FFF'\\n        cPrimary: '#ECF0F1'\\n        cSecondary: '#BDC3C7'\\n        cLink: '#3498DB'\\n        cInfo: '#3498DB'\\n        cSuccess: '#2ECC71'\\n        cError: '#E74C3C'\\n        cWarning: '#F1C40F'\\n        cLight: '#ECF0F1'\\n        cDark: '#222'\\n      fonts:\\n        fPrimary: Open Sans\\n        fSecondary: Open Sans\\n\")), React.createElement(MDXTag, {\n        name: \"h3\",\n        components: components,\n        props: {\n          \"id\": \"importing-components\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }, \"Importing components\"), React.createElement(MDXTag, {\n        name: \"p\",\n        components: components,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }, \"The following will attempt to kratos install the components required:\"), React.createElement(MDXTag, {\n        name: \"pre\",\n        components: components,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }, React.createElement(MDXTag, {\n        name: \"code\",\n        components: components,\n        parentName: \"pre\",\n        props: {\n          \"className\": \"language-yml\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }, \"react-native:\\n  - node:\\n      projectName: App example\\n      bucketName: app-example\\n      components:\\n        - LoginOne\\n        - OnboardingOne\\n\")), React.createElement(MDXTag, {\n        name: \"h3\",\n        components: components,\n        props: {\n          \"id\": \"router\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }, \"Router\"), React.createElement(MDXTag, {\n        name: \"p\",\n        components: components,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }, \"To build out the router, recursively assign some details. If the navigator is not empty, it will iterate. If the name includes 'TabBar', it will build a tab bar.\"), React.createElement(MDXTag, {\n        name: \"pre\",\n        components: components,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }, React.createElement(MDXTag, {\n        name: \"code\",\n        components: components,\n        parentName: \"pre\",\n        props: {\n          \"className\": \"language-yml\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }, \"react-native:\\n  - node:\\n      router:\\n        stackName: StackRoot\\n        initialRouteName: StackTabBar\\n        navigator:\\n          - StackTabBar:\\n              stackName: StackTabBar\\n              initialRouteName: ScreenOne\\n              navigator:\\n                - StackFeed:\\n                    stackName: StackFeed\\n                    initialRouteName: ScreenOne\\n                    navigator:\\n                      - ScreenOne:\\n                          navigator: []\\n                      - ScreenTwo:\\n                          navigator: []\\n                - StackInfo:\\n                    stackName: StackInfo\\n                    initialRouteName: ScreenOne\\n                    navigator:\\n                      - ScreenThree:\\n                          navigator: []\\n                      - ScreenFour:\\n                          navigator: []\\n                - Profile:\\n                    navigator: []\\n\")), React.createElement(MDXTag, {\n        name: \"h3\",\n        components: components,\n        props: {\n          \"id\": \"screens\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        },\n        __self: this\n      }, \"Screens\"), React.createElement(MDXTag, {\n        name: \"p\",\n        components: components,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      }, \"If you want to build out screens, do the following:\"), React.createElement(MDXTag, {\n        name: \"pre\",\n        components: components,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      }, React.createElement(MDXTag, {\n        name: \"code\",\n        components: components,\n        parentName: \"pre\",\n        props: {\n          \"className\": \"language-yml\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      }, \"react-native:\\n  - node:\\n      screens:\\n        - screenName: NewsFeed\\n          detailScreen: NewsFeedDetail\\n          components:\\n            - LoginOne\\n        - screenName: ScreenOne\\n          components:\\n            - OnboardingOne\\n\")));\n    }\n  }, {\n    key: \"__reactstandin__regenerateByEval\",\n    // @ts-ignore\n    value: function __reactstandin__regenerateByEval(key, code) {\n      // @ts-ignore\n      this[key] = eval(code);\n    }\n  }]);\n\n  return MDXContent;\n}(React.Component);\n\nexport { MDXContent as default };\n;\n\n(function () {\n  var reactHotLoader = require('react-hot-loader').default;\n\n  var leaveModule = require('react-hot-loader').leaveModule;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(MDXContent, \"MDXContent\", \"/Users/okeeffe_d/Project-Imposter/developer-notes/manual/Lift/react-native.md\");\n  leaveModule(module);\n})();\n\n;\nMDXContent.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"MDXContent\"\n};",{"version":3,"sources":["/Users/okeeffe_d/Project-Imposter/developer-notes/manual/Lift/react-native.md"],"names":["React","MDXTag","MDXContent","props","layout","components","Component"],"mappings":"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","sourcesContent":["\n  import React from 'react'\n  import { MDXTag } from '@mdx-js/tag'\n  \n\nexport default class MDXContent extends React.Component {\n  constructor(props) {\n    super(props)\n    this.layout = null\n  }\n  render() {\n    const { components, ...props } = this.props\n\n    return <MDXTag\n             name=\"wrapper\"\n             \n             components={components}><MDXTag name=\"h1\" components={components} props={{\"id\":\"lift---react-native\"}}>{`Lift - React Native`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"process-to-get-from-a-to-b\"}}>{`Process to get from A to B`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-shell\"}}>{`expo init [project-name]\ncd [project-name]\nprj react-native\ntouch up.yml\n# Add in some lift code\nkratos install lift react-native\nshotgun run\nlift up\nshotgun run\nawsmobile init -y\nawsmobile publish\nexpo start --lan\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"quick-example\"}}>{`Quick Example`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-yml\"}}>{`react-native:\n  - node:\n      components:\n        - CounterOne\n        - LoginTwo\n        - OnboardingThree\n        - OnboardingFive\n      screens:\n        - screenName: Login\n          components:\n            - LoginTwo\n        - screenName: Counter\n          components:\n            - CounterOne\n        - screenName: Info\n          components:\n            - OnboardingThree\n        - screenName: Onboarding\n          components:\n            - OnboardingFive\n      router:\n        stackName: StackMain\n        initialRouteName: StackTabBar\n        navigator:\n          - StackTabBar:\n              stackName: StackTabBar\n              initialRouteName: Login\n              navigator:\n                - Login:\n                    navigator: []\n                - Counter:\n                    navigator: []\n                - Info:\n                    navigator: []\n                - Onboarding:\n                    navigator: []\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"live-example-to-use\"}}>{`Live example to use`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-yml\"}}>{`react-native:\n  - node:\n      components:\n        - CounterOne\n        - LoginTwo\n        - OnboardingThree\n        - OnboardingFive\n      screens:\n        - screenName: Login\n          components:\n            - LoginTwo\n        - screenName: Counter\n          components:\n            - CounterOne\n        - screenName: Info\n          components:\n            - OnboardingThree\n        - screenName: Onboarding\n          components:\n            - OnboardingFive\n      router:\n        stackName: StackMain\n        initialRouteName: StackTabBar\n        navigator:\n          - StackTabBar:\n              stackName: StackTabBar\n              initialRouteName: Login\n              navigator:\n                - Login:\n                    navigator: []\n                - Counter:\n                    navigator: []\n                - Info:\n                    navigator: []\n                - Onboarding:\n                    navigator: []\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"layout\"}}>{`Layout`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-yml\"}}>{`react-native:\n  - node:\n      projectName: App example\n      bucketName: app-example\n      components:\n        - LoginOne\n        - OnboardingOne\n      screens:\n        - screenName: NewsFeed\n          detailScreen: NewsFeedDetail\n          components:\n            - LoginOne\n        - screenName: ScreenOne\n          components:\n            - OnboardingOne\n      router:\n        stackName: StackRoot\n        initialRouteName: StackTabBar\n        navigator:\n          - StackTabBar:\n              stackName: StackTabBar\n              initialRouteName: ScreenOne\n              navigator:\n                - StackFeed:\n                    stackName: StackFeed\n                    initialRouteName: ScreenOne\n                    navigator:\n                      - ScreenOne:\n                          navigator: []\n                      - ScreenTwo:\n                          navigator: []\n                - StackInfo:\n                    stackName: StackInfo\n                    initialRouteName: ScreenOne\n                    navigator:\n                      - ScreenThree:\n                          navigator: []\n                      - ScreenFour:\n                          navigator: []\n                - Profile:\n                    navigator: []\n      colors:\n        cBlack: '#000'\n        cWhite: '#FFF'\n        cPrimary: '#ECF0F1'\n        cSecondary: '#BDC3C7'\n        cLink: '#3498DB'\n        cInfo: '#3498DB'\n        cSuccess: '#2ECC71'\n        cError: '#E74C3C'\n        cWarning: '#F1C40F'\n        cLight: '#ECF0F1'\n        cDark: '#222'\n      fonts:\n        fPrimary: Open Sans\n        fSecondary: Open Sans\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"importing-components\"}}>{`Importing components`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`The following will attempt to kratos install the components required:`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-yml\"}}>{`react-native:\n  - node:\n      projectName: App example\n      bucketName: app-example\n      components:\n        - LoginOne\n        - OnboardingOne\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"router\"}}>{`Router`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`To build out the router, recursively assign some details. If the navigator is not empty, it will iterate. If the name includes 'TabBar', it will build a tab bar.`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-yml\"}}>{`react-native:\n  - node:\n      router:\n        stackName: StackRoot\n        initialRouteName: StackTabBar\n        navigator:\n          - StackTabBar:\n              stackName: StackTabBar\n              initialRouteName: ScreenOne\n              navigator:\n                - StackFeed:\n                    stackName: StackFeed\n                    initialRouteName: ScreenOne\n                    navigator:\n                      - ScreenOne:\n                          navigator: []\n                      - ScreenTwo:\n                          navigator: []\n                - StackInfo:\n                    stackName: StackInfo\n                    initialRouteName: ScreenOne\n                    navigator:\n                      - ScreenThree:\n                          navigator: []\n                      - ScreenFour:\n                          navigator: []\n                - Profile:\n                    navigator: []\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"screens\"}}>{`Screens`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`If you want to build out screens, do the following:`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-yml\"}}>{`react-native:\n  - node:\n      screens:\n        - screenName: NewsFeed\n          detailScreen: NewsFeedDetail\n          components:\n            - LoginOne\n        - screenName: ScreenOne\n          components:\n            - OnboardingOne\n`}</MDXTag></MDXTag>\n           </MDXTag>\n  }\n}\n  "]}]}