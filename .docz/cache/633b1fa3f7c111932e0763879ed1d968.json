{"remainingRequest":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/docz-core/node_modules/babel-loader/lib/index.js??ref--6-1!/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/@mdx-js/loader/index.js??ref--6-2!/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/source-map-loader/index.js!/Users/dennis.okeeffe/Project-Imposter/developer-notes/manual/Stripe/Spring-Stripe-Configuration.md","dependencies":[{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/manual/Stripe/Spring-Stripe-Configuration.md","mtime":1578800990275},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/cache-loader/dist/cjs.js","mtime":1581496618588},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/docz-core/node_modules/babel-loader/lib/index.js","mtime":1578565694890},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/@mdx-js/loader/index.js","mtime":1581496618277},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/source-map-loader/index.js","mtime":1580255490569}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/dennis.okeeffe/Project-Imposter/developer-notes/manual/Stripe/Spring-Stripe-Configuration.md"],"names":["React","mdx","makeShortcode","name","MDXDefaultShortcode","props","console","warn","layoutProps","MDXLayout","MDXContent","components","isMDXComponent"],"mappings":"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","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"java-spring-stripe-configuration\"\n    }}>{`Java Spring Stripe Configuration`}</h1>\n    <p>{`In this short example, we are going to \"Hello, World!\" a Stripe charge!`}</p>\n    <h2 {...{\n      \"id\": \"resources\"\n    }}>{`Resources`}</h2>\n    <ol>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"https://docs.dennisokeeffe.com/manual-java-gradle-intro\"\n        }}>{`Gradle Intro Docs`}</a></li>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"https://spring.io/guides/gs/rest-service/\"\n        }}>{`Spring Guide to Rest Services`}</a></li>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"https://stripe.com/docs/api\"\n        }}>{`Stripe API`}</a></li>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"https://stackabuse.com/stripe-integration-with-java-spring-for-payment-processing/\"\n        }}>{`Stripe with Spring`}</a></li>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"https://github.com/stripe/stripe-java#usage\"\n        }}>{`Stripe Github Java Usage`}</a></li>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/http/ResponseEntity.html\"\n        }}>{`Spring ResponseEntity`}</a></li>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"https://www.tutorialspoint.com/spring_boot/spring_boot_service_components.htm\"\n        }}>{`Tutorials Point: Service Components`}</a></li>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"https://gist.github.com/fteychene/1e5c30fc86d7623084d0\"\n        }}>{`Basic Spring Boot Gitignore file`}</a></li>\n    </ol>\n    <h2 {...{\n      \"id\": \"setup\"\n    }}>{`Setup`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`mkdir hello-spring-stripe && cd hello-spring-stripe\nmkdir -p src/main/java/stripe\ntouch build.gradle src/main/java/stripe/StripeCharge.java src/main/java/stripe/StripeChageController.java src/main/java/stripe/Application.java .env\n# init gradle\ngradle wrapper\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"setup-buildgradle\"\n    }}>{`Setup build.gradle`}</h2>\n    <p>{`Add the following for Stripe + Spring:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`buildscript {\n    repositories {\n        mavenCentral()\n    }\n    dependencies {\n        classpath(\"org.springframework.boot:spring-boot-gradle-plugin:2.2.1.RELEASE\")\n    }\n}\n\napply plugin: 'java'\napply plugin: 'eclipse'\napply plugin: 'idea'\napply plugin: 'org.springframework.boot'\napply plugin: 'io.spring.dependency-management'\n\nbootJar {\n    baseName = 'hello-spring-jar'\n    version =  '0.1.0'\n}\n\nrepositories {\n    mavenCentral()\n}\n\nsourceCompatibility = 1.8\ntargetCompatibility = 1.8\n\ndependencies {\n    compile(\"com.stripe:stripe-java:16.5.1\")\n    compile(\"org.springframework.boot:spring-boot-starter-web\")\n    compile(\"io.github.cdimascio:java-dotenv:5.1.3\")\n    testCompile('org.springframework.boot:spring-boot-starter-test')\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"set-up-dotenv-file\"\n    }}>{`Set up dotenv file`}</h2>\n    <p>{`We are using a local dotenv file for this \"Hello, World!\" level example.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`# required\nSK_TEST_KEY=sk_...\n# not required\nPK_TEST_KEY=pk_...\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"setting-up-the-main-application\"\n    }}>{`Setting up the main application`}</h2>\n    <p>{`In `}<inlineCode parentName=\"p\">{`src/main/java/stripe/Application.java`}</inlineCode>{`, add the following:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`package stripecharge;\n\nimport org.springframework.boot.SpringApplication;\nimport org.springframework.boot.autoconfigure.SpringBootApplication;\n\n@SpringBootApplication\npublic class Application {\n\n  public static void main(String[] args) {\n    SpringApplication.run(Application.class, args);\n  }\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"setting-up-the-model\"\n    }}>{`Setting up the model`}</h2>\n    <p>{`In `}<inlineCode parentName=\"p\">{`src/main/java/stripe/StripeCharge.java`}</inlineCode>{`:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`package stripecharge;\n\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class StripeCharge {\n\n  private final long amount;\n  private final String receiptEmail;\n  private final String source;\n  private final String currency;\n\n  public StripeCharge(long amount, String receiptEmail) {\n    this.amount = amount;\n    this.source = \"tok_visa\";\n    this.currency = \"usd\";\n    this.receiptEmail = receiptEmail;\n  }\n\n  public Map<String, Object> getCharge() {\n    Map<String, Object> params = new HashMap<String, Object>();\n    params.put(\"amount\", this.amount);\n    params.put(\"currency\", this.currency);\n    // source should obtained with Stripe.js\n    params.put(\"source\", this.source);\n    params.put(\n      \"description\",\n      \"My First Test Charge (created for API docs)\"\n    );\n    params.put(\"receipt_email\",this.receiptEmail);\n    return params;\n  }\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"setting-up-the-controller\"\n    }}>{`Setting up the controller`}</h2>\n    <p>{`In `}<inlineCode parentName=\"p\">{`src/main/java/stripe/StripeChargeController.java`}</inlineCode>{`:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`package stripecharge;\n\n// NOTE: RequestMapping + RequestParam not required for this demo\n// but kept in for reference purposes if wanted to play around later\nimport java.util.concurrent.atomic.AtomicLong;\nimport org.springframework.web.bind.annotation.RequestMapping;\nimport org.springframework.web.bind.annotation.PostMapping;\nimport org.springframework.web.bind.annotation.RequestParam;\nimport org.springframework.web.bind.annotation.RequestBody;\nimport org.springframework.http.ResponseEntity;\nimport org.springframework.http.HttpStatus;\nimport org.springframework.web.bind.annotation.RestController;\nimport io.github.cdimascio.dotenv.Dotenv;\nimport com.stripe.Stripe;\nimport com.stripe.exception.StripeException;\nimport com.stripe.model.Charge;\nimport com.stripe.net.RequestOptions;\n\n@RestController\n@RequestMapping(\"/api\")\npublic class StripeChargeController {\n\n  @PostMapping(\"/charge\")\n  public ResponseEntity<String> createCharge(@RequestBody StripeCharge stripeCharge) {\n    try {\n      // for demonstrations sake, using .env file\n      Dotenv dotenv = Dotenv.load();\n\n      // creating the charge\n      Stripe.apiKey = dotenv.get(\"SK_TEST_KEY\");\n      Charge charge = Charge.create(stripeCharge.getCharge());\n      System.out.println(charge);\n      return new ResponseEntity<String>(\"Success\", HttpStatus.CREATED);\n    } catch (StripeException e) {\n      e.printStackTrace();\n      return new ResponseEntity<String>(\"Failure\", HttpStatus.INTERNAL_SERVER_ERROR);\n\n    }\n  }\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"build-run-and-ping\"\n    }}>{`Build, Run and Ping`}</h2>\n    <p>{`Run `}<inlineCode parentName=\"p\">{`./gradlew build`}</inlineCode>{` to build to project or `}<inlineCode parentName=\"p\">{`./gradlew bootRun`}</inlineCode>{` to build and run.`}</p>\n    <p>{`Once the project is running, we can ping `}<inlineCode parentName=\"p\">{`http POST http://localhost:8080/api/charge amount:=200 receiptEmail=hello@example.com`}</inlineCode>{` (using HTTPie) and we get a response like the following:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-s\"\n      }}>{`HTTP/1.1 201\nContent-Length: 7\nContent-Type: application/json;charset=UTF-8\nDate: Sun, 12 Jan 2020 03:33:10 GMT\n\nSuccess\n`}</code></pre>\n    <p>{`Check your Stripe Dashboard under `}<inlineCode parentName=\"p\">{`Developer > Events`}</inlineCode>{` and you'll see we have successfully made a payment! Hooray!`}</p>\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  "]}]}