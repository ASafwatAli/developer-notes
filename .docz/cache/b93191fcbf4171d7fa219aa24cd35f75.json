{"remainingRequest":"/Users/okeeffe_d/Project-Imposter/developer-notes/node_modules/docz-core/node_modules/babel-loader/lib/index.js??ref--6-1!/Users/okeeffe_d/Project-Imposter/developer-notes/node_modules/@mdx-js/loader/index.js??ref--6-2!/Users/okeeffe_d/Project-Imposter/developer-notes/node_modules/source-map-loader/index.js!/Users/okeeffe_d/Project-Imposter/developer-notes/manual/Testing/Regression-Testing.md","dependencies":[{"path":"/Users/okeeffe_d/Project-Imposter/developer-notes/manual/Testing/Regression-Testing.md","mtime":1548282824944},{"path":"/Users/okeeffe_d/Project-Imposter/developer-notes/node_modules/cache-loader/dist/cjs.js","mtime":1561535530324},{"path":"/Users/okeeffe_d/Project-Imposter/developer-notes/node_modules/docz-core/node_modules/babel-loader/lib/index.js","mtime":1560300163820},{"path":"/Users/okeeffe_d/Project-Imposter/developer-notes/node_modules/@mdx-js/loader/index.js","mtime":1561535530532},{"path":"/Users/okeeffe_d/Project-Imposter/developer-notes/node_modules/source-map-loader/index.js","mtime":1548285283521}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/okeeffe_d/Project-Imposter/developer-notes/manual/Testing/Regression-Testing.md"],"names":["React","mdx","makeShortcode","name","MDXDefaultShortcode","props","console","warn","layoutProps","MDXLayout","MDXContent","components","isMDXComponent"],"mappings":"4LAAA,cACE,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,GAAT,KAAoB,eAApB,CACA,cAGF,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAAAC,IAAI,QAAI,SAASC,CAAAA,mBAAT,CAA6BC,KAA7B,CAAoC,CAChEC,OAAO,CAACC,IAAR,CAAa,aAAeJ,IAAf,CAAsB,yEAAnC,EACA,MAAO,WAASE,KAAT,CAAP,CACD,CAHyB,EAA1B,CAKA,GAAMG,CAAAA,WAAW,CAAG,EAApB,CAGA,GAAMC,CAAAA,SAAS,CAAG,SAAlB,CACA,cAAe,SAASC,CAAAA,UAAT,MAGZ,IAFDC,CAAAA,UAEC,MAFDA,UAEC,CADEN,KACF,+CACD,MAAO,KAAC,SAAD,kBAAeG,WAAf,CAAgCH,KAAhC,EAAuC,UAAU,CAAEM,UAAnD,CAA+D,OAAO,CAAC,WAAvE,GACL,SAAQ,CACN,KAAM,wBADA,CAAR,0BADK,CAIL,gIAJK,CAKL,SAAQ,CACN,KAAM,aADA,CAAR,eALK,CAQL,SAAQ,CACN,KAAM,YADA,CAAR,cARK,CAWL,eAAK,0BAAM,UAAU,CAAC,KAAjB,EAA2B,CAC5B,YAAa,eADe,CAA3B,4HAAL,CAXK,CAeL,SAAQ,CACN,KAAM,cADA,CAAR,gBAfK,CAkBL,eAAK,0BAAM,UAAU,CAAC,KAAjB,EAA2B,CAC5B,YAAa,eADe,CAA3B,8FAAL,CAlBK,CAwBL,SAAQ,CACN,KAAM,cADA,CAAR,gBAxBK,CA2BL,uCAA8B,kBAAY,UAAU,CAAC,GAAvB,eAA9B,oCA3BK,CA4BL,eAAK,0BAAM,UAAU,CAAC,KAAjB,EAA2B,CAC5B,YAAa,eADe,CAA3B,2QAAL,CA5BK,CAyCL,SAAQ,CACN,KAAM,sBADA,CAAR,wBAzCK,CA4CL,SAAQ,CACN,KAAM,aADA,CAAR,eA5CK,CA+CL,cACE,UAAI,UAAU,CAAC,IAAf,yCADF,CAEE,UAAI,UAAU,CAAC,IAAf,wBAFF,CAGE,UAAI,UAAU,CAAC,IAAf,0CAHF,CAIE,UAAI,UAAU,CAAC,IAAf,wCAJF,CAKE,UAAI,UAAU,CAAC,IAAf,2BALF,CAME,UAAI,UAAU,CAAC,IAAf,sCANF,CAOE,UAAI,UAAU,CAAC,IAAf,8CAPF,CA/CK,CAwDL,SAAQ,CACN,KAAM,aADA,CAAR,eAxDK,CA2DL,SAAQ,CACN,KAAM,yBADA,CAAR,4BA3DK,CA8DL,eAAK,0BAAM,UAAU,CAAC,KAAjB,EAA2B,CAC5B,YAAa,eADe,CAA3B,wMAAL,CA9DK,CA8EL,SAAQ,CACN,KAAM,uBADA,CAAR,0BA9EK,CAiFL,qGAjFK,CAkFL,eAAK,0BAAM,UAAU,CAAC,KAAjB,EAA2B,CAC5B,YAAa,qBADe,CAA3B,0pBAAL,CAlFK,CA2GL,SAAQ,CACN,KAAM,yBADA,CAAR,4BA3GK,CA8GL,sFA9GK,CA+GL,eAAK,0BAAM,UAAU,CAAC,KAAjB,EAA2B,CAC5B,YAAa,qBADe,CAA3B,+wCAAL,CA/GK,CAiKL,SAAQ,CACN,KAAM,iCADA,CAAR,oCAjKK,CAoKL,eAAK,0BAAM,UAAU,CAAC,KAAjB,EAA2B,CAC5B,YAAa,eADe,CAA3B,iGAAL,CApKK,CAAP,CAyKD,C,gRAEDD,UAAU,CAACE,cAAX,CAA4B,IAA5B","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"css-regression-testing\"\n    }}>{`CSS Regression Testing`}</h1>\n    <p>{`We can achieve CSS regression testing by using an assertion library in conjuction with Puppeteer and Pixel Diff.`}</p>\n    <h2 {...{\n      \"id\": \"prequisites\"\n    }}>{`Prequisites`}</h2>\n    <h3 {...{\n      \"id\": \"using-yarn\"\n    }}>{`Using yarn`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`yarn install --dev mocha chai puppeteer pixelmatch pngfs babel-polyfill babel-preset-env babel-plugin-module-resolver\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"using-kratos\"\n    }}>{`Using kratos`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`kratos install js-controllers pixeldiff\nkratos install js-test regression\nshotgun run\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"folder-setup\"\n    }}>{`Folder setup`}</h3>\n    <p>{`Ensure that you have a `}<inlineCode parentName=\"p\">{`regression`}</inlineCode>{` folder to store all the images.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`# Example regression layout\nregression\n├── diff\n│   └── test.png\n├── src\n│   └── test.png\n└── temp\n    └── test.png\n\n3 directories, 3 files\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"using-regression-cli\"\n    }}>{`Using Regression CLI`}</h2>\n    <h3 {...{\n      \"id\": \"preparation\"\n    }}>{`Preparation`}</h3>\n    <ol>\n      <li parentName=\"ol\">{`Set the imports for the router file.`}</li>\n      <li parentName=\"ol\">{`Set the dev router.`}</li>\n      <li parentName=\"ol\">{`Set the array in the .puppeteer file.`}</li>\n      <li parentName=\"ol\">{`Ensure the devRouter is being used.`}</li>\n      <li parentName=\"ol\">{`Ensure app is running.`}</li>\n      <li parentName=\"ol\">{`Run source to set the base image.`}</li>\n      <li parentName=\"ol\">{`Run compare to compare source to current.`}</li>\n    </ol>\n    <h2 {...{\n      \"id\": \"application\"\n    }}>{`Application`}</h2>\n    <h3 {...{\n      \"id\": \"1-create-a-babelrc-file\"\n    }}>{`1. Create a babelrc file`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`{\n  \"presets\": [\"env\"],\n  \"plugins\": [\n    [\n      \"module-resolver\",\n      {\n        \"alias\": {\n          \"controllers\": \"./controllers\"\n        }\n      }\n    ]\n  ]\n}\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"2-saving-a-screenshot\"\n    }}>{`2. Saving a screenshot`}</h3>\n    <p>{`This is not the test itself but a simple node script to get the initial base working:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`const PixelDiff = require('./controllers/pixeldiff');\nconst puppeteer = require('puppeteer');\n\n(async () => {\n  const browser = await puppeteer.launch();\n  const page = await browser.newPage();\n\n  console.log('Opening browser');\n  await page.goto('http://localhost:3000');\n\n  const el = await page.$('.homeSplashFade');\n  await el.screenshot({ path: 'regression/src/test.png' });\n\n  console.log('Closing browser');\n  await browser.close();\n\n  /*\n    console.log('Comparing images');\n    const res = await PixelDiff.diff({imgOnePath: 'test.png', imgTwoPath: 'test2.png', dest: 'dest.png', output: true});\n    console.log(res);\n    */\n})();\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"3-writing-the-test-file\"\n    }}>{`3. Writing the test file`}</h3>\n    <p>{`Create your test file. Any example test file looks like the following:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`/**\n * Regression tests\n * @author Dennis O'Keeffe\n */\nrequire('babel-polyfill');\nconst expect = require('chai').expect;\nconst cwd = process.cwd();\nconst PixelDiff = require('controllers/pixeldiff');\nconst puppeteer = require('puppeteer');\n\nconsole.log(PixelDiff);\nconsole.log(cwd);\n\nconst screenshot = async (selector, savePath, location = '/') => {\n  const browser = await puppeteer.launch();\n  const page = await browser.newPage();\n\n  console.log('Opening browser');\n  await page.goto('http://localhost:3000');\n\n  const el = await page.$('#root');\n  await el.screenshot({ path: savePath });\n\n  console.log('Closing browser');\n  await browser.close();\n};\n\ndescribe('It works functionality', () => {\n  it('Expects true to be true', () => {\n    expect(true).to.be.true;\n  });\n});\n\ndescribe('Image regression testing', () => {\n  it('has no pixel difference', async () => {\n    console.log('Comparing images');\n    await screenshot('.homeSplashFade', cwd + '/regression/temp/test.png');\n\n    const res = await PixelDiff.diff({\n      imgOnePath: cwd + '/regression/src/test.png',\n      imgTwoPath: cwd + '/regression/temp/test.png',\n      dest: cwd + '/regression/diff/test.png',\n      output: true\n    });\n    expect(res).to.equal(0);\n  });\n});\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"4-running-the-test-from-the-cli\"\n    }}>{`4. Running the test from the CLI`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`mocha --compilers js:babel-core/register --timeout 0 ./test/regression/regression.mocha.js\n`}</code></pre>\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  "]}]}