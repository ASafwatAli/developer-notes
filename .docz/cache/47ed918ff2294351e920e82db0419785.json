{"remainingRequest":"/Users/okeeffe_d/Project-Imposter/developer-notes/node_modules/docz-core/node_modules/babel-loader/lib/index.js??ref--6-1!/Users/okeeffe_d/Project-Imposter/developer-notes/node_modules/@mdx-js/loader/index.js??ref--6-2!/Users/okeeffe_d/Project-Imposter/developer-notes/node_modules/source-map-loader/index.js!/Users/okeeffe_d/Project-Imposter/developer-notes/manual/Python/Python-Slack-Bot.md","dependencies":[{"path":"/Users/okeeffe_d/Project-Imposter/developer-notes/manual/Python/Python-Slack-Bot.md","mtime":1548282824864},{"path":"/Users/okeeffe_d/Project-Imposter/developer-notes/node_modules/cache-loader/dist/cjs.js","mtime":1561535530324},{"path":"/Users/okeeffe_d/Project-Imposter/developer-notes/node_modules/docz-core/node_modules/babel-loader/lib/index.js","mtime":1560300163820},{"path":"/Users/okeeffe_d/Project-Imposter/developer-notes/node_modules/@mdx-js/loader/index.js","mtime":1561535530532},{"path":"/Users/okeeffe_d/Project-Imposter/developer-notes/node_modules/source-map-loader/index.js","mtime":1548285283521}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9vYmplY3RXaXRob3V0UHJvcGVydGllcyBmcm9tIi9Vc2Vycy9va2VlZmZlX2QvUHJvamVjdC1JbXBvc3Rlci9kZXZlbG9wZXItbm90ZXMvbm9kZV9tb2R1bGVzL2JhYmVsLXByZXNldC1yZWFjdC1hcHAvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzIjsvKiBAanN4IG1keCAqL2ltcG9ydCBSZWFjdCBmcm9tJ3JlYWN0JztpbXBvcnR7bWR4fWZyb20nQG1keC1qcy9yZWFjdCc7LyogQGpzeCBtZHggKi92YXIgbWFrZVNob3J0Y29kZT1mdW5jdGlvbiBtYWtlU2hvcnRjb2RlKG5hbWUpe3JldHVybiBmdW5jdGlvbiBNRFhEZWZhdWx0U2hvcnRjb2RlKHByb3BzKXtjb25zb2xlLndhcm4oIkNvbXBvbmVudCAiK25hbWUrIiB3YXMgbm90IGltcG9ydGVkLCBleHBvcnRlZCwgb3IgcHJvdmlkZWQgYnkgTURYUHJvdmlkZXIgYXMgZ2xvYmFsIHNjb3BlIik7cmV0dXJuIG1keCgiZGl2Iixwcm9wcyk7fTt9O3ZhciBsYXlvdXRQcm9wcz17fTt2YXIgTURYTGF5b3V0PSJ3cmFwcGVyIjtleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBNRFhDb250ZW50KF9yZWYpe3ZhciBjb21wb25lbnRzPV9yZWYuY29tcG9uZW50cyxwcm9wcz1fb2JqZWN0V2l0aG91dFByb3BlcnRpZXMoX3JlZixbImNvbXBvbmVudHMiXSk7cmV0dXJuIG1keChNRFhMYXlvdXQsT2JqZWN0LmFzc2lnbih7fSxsYXlvdXRQcm9wcyxwcm9wcyx7Y29tcG9uZW50czpjb21wb25lbnRzLG1keFR5cGU6Ik1EWExheW91dCJ9KSxtZHgoImRpdiIse2lkOiJzZWN0aW9uIn0pLG1keCgiaHIiLG51bGwpLG1keCgiaDIiLHsiaWQiOiJpbnRybyJ9LCJJbnRybyIpLG1keCgicCIsbnVsbCwiRmlyc3Qgb2YgYWxsLCBjbG9uZSB0aGUgIixtZHgoImlubGluZUNvZGUiLHtwYXJlbnROYW1lOiJwIn0sInB5dGhvbl9ydG1ib3QiKSwiIGdpdCByZXBvLiIpLG1keCgicCIsbnVsbCwiVGhlbiwgaGVhZCB0byBzbGFjay5jb20gZm9yIHlvdXIgcGVyc29uYWwgYWNjb3VudCwgY2xpY2sgIixtZHgoImlubGluZUNvZGUiLHtwYXJlbnROYW1lOiJwIn0sImJ1aWxkIiksIiBmcm9tIHRoZSBhcHBzIHBhZ2UgYW5kIGFkZCBhIGN1c3RvbSBib3QuIiksbWR4KCJwIixudWxsLCJHcmFiIHRoZSBBUEkgdG9rZW4gYW5kIGNvcHkgaXQgaW50byBhICIsbWR4KCJpbmxpbmVDb2RlIix7cGFyZW50TmFtZToicCJ9LCJydG1ib3QuY29uZiIpLCIgZmlsZSBhdCB0aGUgcm9vdCBvZiB5b3VyIGRpcmVjdG9yeS4iKSxtZHgoImRpdiIse2lkOiJzdWJzZWN0aW9uIn0pLG1keCgiaDMiLHsiaWQiOiItLS0tLWNyZWF0aW5nLXBsdWdpbnMifSwiLS0tLSBDcmVhdGluZyBwbHVnaW5zIiksbWR4KCJwIixudWxsLCJJbiB0aGUgIixtZHgoImlubGluZUNvZGUiLHtwYXJlbnROYW1lOiJwIn0sInBsdWdpbnMiKSwiIGZvbGRlciwgY3JlYXRlIGEgZm9sZGVyIHdpdGggdGhlIG5hbWUgb2YgdGhlIHBsdWdpbiBhbmQgdGhlbiB3aXRoaW4gdGhlICIsbWR4KCJpbmxpbmVDb2RlIix7cGFyZW50TmFtZToicCJ9LCJwbHVnaW4ucHkiKSwiIGl0c2VsZi4gSW5zaWRlLCB5b3Ugd2FudCB0byBlbnN1cmUgeW91IGhhdmUgYSAiLG1keCgiaW5saW5lQ29kZSIse3BhcmVudE5hbWU6InAifSwib3V0cHV0cyA9IFtdIiksIiBhbmQgIixtZHgoImlubGluZUNvZGUiLHtwYXJlbnROYW1lOiJwIn0sImNyb250YWJsZSA9IFtdIiksIiBsaXN0IHJlYWR5IHRvIGdvLiIpLG1keCgicCIsbnVsbCwiRnJvbSBoZXJlLCB5b3UgY2FuIGRlZmluZSBwcm9jZXNzZXMgYXMgc286ICIsbWR4KCJpbmxpbmVDb2RlIix7cGFyZW50TmFtZToicCJ9LCJkZWYgcHJvY2Vzc19uYW1laGVyZShkYXRhKToiKSwiLiIpLG1keCgicCIsbnVsbCwiVGhlIGRhdGEgYXJndW1lbnQgaXMgdGhlIGRhdGEgcmVjaWV2ZWQgYnkgdGhlIGJvdC4iKSxtZHgoImRpdiIse2lkOiJiYW5hbmEifSksbWR4KCJoMyIseyJpZCI6Ii0tLS0tYmFuYW5hLXBsdWdpbiJ9LCItLS0tIEJhbmFuYSBQbHVnaW4iKSxtZHgoInAiLG51bGwsIkluIHRoZSAiLG1keCgiaW5saW5lQ29kZSIse3BhcmVudE5hbWU6InAifSwicGx1Z2lucyIpLCIgZGlyZWN0b3J5LCBjcmVhdGUgIixtZHgoImlubGluZUNvZGUiLHtwYXJlbnROYW1lOiJwIn0sImJhbmFuYS5weSIpKSxtZHgoInByZSIsbnVsbCxtZHgoImNvZGUiLE9iamVjdC5hc3NpZ24oe3BhcmVudE5hbWU6InByZSJ9LHsiY2xhc3NOYW1lIjoibGFuZ3VhZ2UtcHl0aG9uIn0pLCJpbXBvcnQgcmFuZG9tXG5cbmZyb20gbmx0ay50b2tlbml6ZSBpbXBvcnQgc2VudF90b2tlbml6ZW0gd29yZHB1bmN0X3Rva2VuaXplXG5mcm9tIG5vdW5faG91bmQgaW1wb3J0IE5vdW5Ib3VuZFxuXG5jcm9udGFibGUgPSBbXVxub3V0cHV0cyA9IFtdXG5cbm5oID0gTm91bkhvdW5kKClcblxuZGVmIHByb2Nlc3NfbWVzc2FnZShkYXRhKTpcbiAgICAgICAgbWVzc2FhZ2UgPSBkYXRhWyd0ZXh0J11cbiAgICAgICAgc2VudGVuY2VzID0gc2VudF90b2tlbml6ZShtZXNzYWdlKVxuICAgICAgICBzZW50ZW5jZXNfbnVtID0gcmFuZG9tLnJhbmRpbnQoMCwgbGVuKHNlbnRlbmNlcykgLSAxKVxuICAgICAgICBzZXRlbmNlID0gc2VudGVuY2VzW3N0ZW5jZV9udW1dXG4gICAgICAgIHdvcmRzID0gd29yZHB1bmN0X3Rva2VuaXplKHNlbnRlbmNlKVxuICAgICAgICBub3VucyA9IG5oLnByb2Nlc3Moc2VudGVuY2UpXG4gICAgICAgIHJlcGxhY2VtZW50ID0gcmFuZG9tLmNob2ljZShub3Vuc1snbm91bnMnXSlcbiAgICAgICAgd29yZHNbd29yZHMuaW5kZXgocmVwbGFjZW1lbnQpID0gJ2JhbmFuYSddXG4gICAgICAgIHNlbnRlbmNlc1tzZW50ZW5jZV9udW1dID0gJyAnLmpvaW4od29yZHMpXG4gICAgICAgIG91dHB1dHMuYXBwZW5kKFtkYXRhW1wiY2hhbm5lbFwiXSwgJyAnLmpvaW4oc2VudGVuY2VzKV0pXG4iKSkpO31pZih0eXBlb2YgTURYQ29udGVudCE9PSd1bmRlZmluZWQnJiZNRFhDb250ZW50JiZNRFhDb250ZW50PT09T2JqZWN0KE1EWENvbnRlbnQpJiZPYmplY3QuaXNFeHRlbnNpYmxlKE1EWENvbnRlbnQpKXtPYmplY3QuZGVmaW5lUHJvcGVydHkoTURYQ29udGVudCwnX19maWxlbWV0YScse2VudW1lcmFibGU6dHJ1ZSxjb25maWd1cmFibGU6dHJ1ZSx2YWx1ZTp7bmFtZToiTURYQ29udGVudCIsZmlsZW5hbWU6Im1hbnVhbC9QeXRob24vUHl0aG9uLVNsYWNrLUJvdC5tZCJ9fSk7fU1EWENvbnRlbnQuaXNNRFhDb21wb25lbnQ9dHJ1ZTs="},{"version":3,"sources":["/Users/okeeffe_d/Project-Imposter/developer-notes/manual/Python/Python-Slack-Bot.md"],"names":["React","mdx","makeShortcode","name","MDXDefaultShortcode","props","console","warn","layoutProps","MDXLayout","MDXContent","components","isMDXComponent"],"mappings":"4LAAA,cACE,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,GAAT,KAAoB,eAApB,CACA,cAGF,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAAAC,IAAI,QAAI,SAASC,CAAAA,mBAAT,CAA6BC,KAA7B,CAAoC,CAChEC,OAAO,CAACC,IAAR,CAAa,aAAeJ,IAAf,CAAsB,yEAAnC,EACA,MAAO,WAASE,KAAT,CAAP,CACD,CAHyB,EAA1B,CAKA,GAAMG,CAAAA,WAAW,CAAG,EAApB,CAGA,GAAMC,CAAAA,SAAS,CAAG,SAAlB,CACA,cAAe,SAASC,CAAAA,UAAT,MAGZ,IAFDC,CAAAA,UAEC,MAFDA,UAEC,CADEN,KACF,+CACD,MAAO,KAAC,SAAD,kBAAeG,WAAf,CAAgCH,KAAhC,EAAuC,UAAU,CAAEM,UAAnD,CAA+D,OAAO,CAAC,WAAvE,GACL,WAAK,EAAE,CAAC,SAAR,EADK,CAEL,cAFK,CAGL,SAAQ,CACN,KAAM,OADA,CAAR,SAHK,CAML,wCAA+B,kBAAY,UAAU,CAAC,GAAvB,kBAA/B,cANK,CAOL,yEAAgE,kBAAY,UAAU,CAAC,GAAvB,UAAhE,6CAPK,CAQL,sDAA6C,kBAAY,UAAU,CAAC,GAAvB,gBAA7C,wCARK,CASL,WAAK,EAAE,CAAC,YAAR,EATK,CAUL,SAAQ,CACN,KAAM,uBADA,CAAR,yBAVK,CAaL,uBAAc,kBAAY,UAAU,CAAC,GAAvB,YAAd,6EAA8I,kBAAY,UAAU,CAAC,GAAvB,cAA9I,mDAAsP,kBAAY,UAAU,CAAC,GAAvB,iBAAtP,SAAuT,kBAAY,UAAU,CAAC,GAAvB,mBAAvT,sBAbK,CAcL,2DAAkD,kBAAY,UAAU,CAAC,GAAvB,gCAAlD,KAdK,CAeL,kEAfK,CAgBL,WAAK,EAAE,CAAC,QAAR,EAhBK,CAiBL,SAAQ,CACN,KAAM,oBADA,CAAR,sBAjBK,CAoBL,uBAAc,kBAAY,UAAU,CAAC,GAAvB,YAAd,uBAAwF,kBAAY,UAAU,CAAC,GAAvB,cAAxF,CApBK,CAqBL,eAAK,0BAAM,UAAU,CAAC,KAAjB,EAA2B,CAC5B,YAAa,iBADe,CAA3B,8qBAAL,CArBK,CAAP,CA8CD,C,6QAEDD,UAAU,CAACE,cAAX,CAA4B,IAA5B","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <div id=\"section\"></div>\n    <hr></hr>\n    <h2 {...{\n      \"id\": \"intro\"\n    }}>{`Intro`}</h2>\n    <p>{`First of all, clone the `}<inlineCode parentName=\"p\">{`python_rtmbot`}</inlineCode>{` git repo.`}</p>\n    <p>{`Then, head to slack.com for your personal account, click `}<inlineCode parentName=\"p\">{`build`}</inlineCode>{` from the apps page and add a custom bot.`}</p>\n    <p>{`Grab the API token and copy it into a `}<inlineCode parentName=\"p\">{`rtmbot.conf`}</inlineCode>{` file at the root of your directory.`}</p>\n    <div id=\"subsection\"></div>\n    <h3 {...{\n      \"id\": \"-----creating-plugins\"\n    }}>{`---- Creating plugins`}</h3>\n    <p>{`In the `}<inlineCode parentName=\"p\">{`plugins`}</inlineCode>{` folder, create a folder with the name of the plugin and then within the `}<inlineCode parentName=\"p\">{`plugin.py`}</inlineCode>{` itself. Inside, you want to ensure you have a `}<inlineCode parentName=\"p\">{`outputs = []`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`crontable = []`}</inlineCode>{` list ready to go.`}</p>\n    <p>{`From here, you can define processes as so: `}<inlineCode parentName=\"p\">{`def process_namehere(data):`}</inlineCode>{`.`}</p>\n    <p>{`The data argument is the data recieved by the bot.`}</p>\n    <div id=\"banana\"></div>\n    <h3 {...{\n      \"id\": \"-----banana-plugin\"\n    }}>{`---- Banana Plugin`}</h3>\n    <p>{`In the `}<inlineCode parentName=\"p\">{`plugins`}</inlineCode>{` directory, create `}<inlineCode parentName=\"p\">{`banana.py`}</inlineCode></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-python\"\n      }}>{`import random\n\nfrom nltk.tokenize import sent_tokenizem wordpunct_tokenize\nfrom noun_hound import NounHound\n\ncrontable = []\noutputs = []\n\nnh = NounHound()\n\ndef process_message(data):\n        messaage = data['text']\n        sentences = sent_tokenize(message)\n        sentences_num = random.randint(0, len(sentences) - 1)\n        setence = sentences[stence_num]\n        words = wordpunct_tokenize(sentence)\n        nouns = nh.process(sentence)\n        replacement = random.choice(nouns['nouns'])\n        words[words.index(replacement) = 'banana']\n        sentences[sentence_num] = ' '.join(words)\n        outputs.append([data[\"channel\"], ' '.join(sentences)])\n`}</code></pre>\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  "]}]}