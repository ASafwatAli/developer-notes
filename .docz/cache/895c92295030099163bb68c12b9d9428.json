{"remainingRequest":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/docz-core/node_modules/babel-loader/lib/index.js??ref--6-1!/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/@mdx-js/loader/index.js??ref--6-2!/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/source-map-loader/index.js!/Users/dennis.okeeffe/Project-Imposter/developer-notes/manual/Elixir/Elixir-Debugging.md","dependencies":[{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/manual/Elixir/Elixir-Debugging.md","mtime":1565069514735},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/cache-loader/dist/cjs.js","mtime":1564095360956},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/docz-core/node_modules/babel-loader/lib/index.js","mtime":1562568123838},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/@mdx-js/loader/index.js","mtime":1565139338792},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/source-map-loader/index.js","mtime":1564095361765}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9vYmplY3RXaXRob3V0UHJvcGVydGllcyBmcm9tIi9Vc2Vycy9kZW5uaXMub2tlZWZmZS9Qcm9qZWN0LUltcG9zdGVyL2RldmVsb3Blci1ub3Rlcy9ub2RlX21vZHVsZXMvYmFiZWwtcHJlc2V0LXJlYWN0LWFwcC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0V2l0aG91dFByb3BlcnRpZXMiOy8qIEBqc3ggbWR4ICovaW1wb3J0IFJlYWN0IGZyb20ncmVhY3QnO2ltcG9ydHttZHh9ZnJvbSdAbWR4LWpzL3JlYWN0JzsvKiBAanN4IG1keCAqL3ZhciBtYWtlU2hvcnRjb2RlPWZ1bmN0aW9uIG1ha2VTaG9ydGNvZGUobmFtZSl7cmV0dXJuIGZ1bmN0aW9uIE1EWERlZmF1bHRTaG9ydGNvZGUocHJvcHMpe2NvbnNvbGUud2FybigiQ29tcG9uZW50ICIrbmFtZSsiIHdhcyBub3QgaW1wb3J0ZWQsIGV4cG9ydGVkLCBvciBwcm92aWRlZCBieSBNRFhQcm92aWRlciBhcyBnbG9iYWwgc2NvcGUiKTtyZXR1cm4gbWR4KCJkaXYiLHByb3BzKTt9O307dmFyIGxheW91dFByb3BzPXt9O3ZhciBNRFhMYXlvdXQ9IndyYXBwZXIiO2V4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIE1EWENvbnRlbnQoX3JlZil7dmFyIGNvbXBvbmVudHM9X3JlZi5jb21wb25lbnRzLHByb3BzPV9vYmplY3RXaXRob3V0UHJvcGVydGllcyhfcmVmLFsiY29tcG9uZW50cyJdKTtyZXR1cm4gbWR4KE1EWExheW91dCxPYmplY3QuYXNzaWduKHt9LGxheW91dFByb3BzLHByb3BzLHtjb21wb25lbnRzOmNvbXBvbmVudHMsbWR4VHlwZToiTURYTGF5b3V0In0pLG1keCgiaDEiLHsiaWQiOiJkZWJ1Z2dpbmctaW4tZWxpeGlyIn0sIkRlYnVnZ2luZyBJbiBFbGl4aXIiKSxtZHgoImgyIix7ImlkIjoidGxkciJ9LCJ0bDtkciIpLG1keCgicCIsbnVsbCwiVXNlICIsbWR4KCJpbmxpbmVDb2RlIix7cGFyZW50TmFtZToicCJ9LCJJTy5pbnNwZWN0IiksIiBvciAiLG1keCgiaW5saW5lQ29kZSIse3BhcmVudE5hbWU6InAifSwiSUV4LnByeSIpLCI6IiksbWR4KCJwcmUiLG51bGwsbWR4KCJjb2RlIixPYmplY3QuYXNzaWduKHtwYXJlbnROYW1lOiJwcmUifSx7ImNsYXNzTmFtZSI6Imxhbmd1YWdlLWVsaXhpciJ9KSwiIyBpbnNwZWN0XG5bMSwgMiwgM11cbnw+IElPLmluc3BlY3QobGFiZWw6IFwiYmVmb3JlXCIpXG58PiBFbnVtLm1hcCgmKCYxICogMikpXG58PiBJTy5pbnNwZWN0KGxhYmVsOiBcImFmdGVyXCIpXG58PiBFbnVtLnN1bVxuXG4jIHByeVxuZGVmIHNvbWVfZnVuKGEsIGIsIGMpIGRvXG4gIHJlcXVpcmUgSUV4OyBJRXgucHJ5XG4gIC4uLlxuZW5kXG4iKSksbWR4KCJoMiIseyJpZCI6Im90aGVyLXJlc291cmNlcyJ9LCJPdGhlciBSZXNvdXJjZXMiKSxtZHgoInAiLG51bGwsIk90aGVyIHJlc291cmNlcyBjYW4gYmUgZm91bmQgYXQgIixtZHgoImEiLE9iamVjdC5hc3NpZ24oe3BhcmVudE5hbWU6InAifSx7ImhyZWYiOiJodHRwczovL2VsaXhpci1sYW5nLm9yZy9nZXR0aW5nLXN0YXJ0ZWQvZGVidWdnaW5nLmh0bWwifSksImh0dHBzOi8vZWxpeGlyLWxhbmcub3JnL2dldHRpbmctc3RhcnRlZC9kZWJ1Z2dpbmcuaHRtbCIpKSxtZHgoImgyIix7ImlkIjoiaW9pbnNwZWN0MiJ9LCJJTy5JbnNwZWN0LzIiKSxtZHgoInAiLG51bGwsIldoYXQgbWFrZXMgIixtZHgoImlubGluZUNvZGUiLHtwYXJlbnROYW1lOiJwIn0sIklPLmluc3BlY3QoaXRlbSwgb3B0cyBcXFxcIFtdKSIpLCIgcmVhbGx5IHVzZWZ1bCBpbiBkZWJ1Z2dpbmcgaXMgdGhhdCBpdCByZXR1cm5zIHRoZSBpdGVtIGFyZ3VtZW50IHBhc3NlZCB0byBpdCB3aXRob3V0IGFmZmVjdGluZyB0aGUgYmVoYXZpb3Igb2YgdGhlIG9yaWdpbmFsIGNvZGUuIiksbWR4KCJwcmUiLG51bGwsbWR4KCJjb2RlIixPYmplY3QuYXNzaWduKHtwYXJlbnROYW1lOiJwcmUifSx7ImNsYXNzTmFtZSI6Imxhbmd1YWdlLWVsaXhpciJ9KSwiKDEuLjEwKVxufD4gSU8uaW5zcGVjdFxufD4gRW51bS5tYXAoZm4geCAtPiB4ICogMiBlbmQpXG58PiBJTy5pbnNwZWN0XG58PiBFbnVtLnN1bVxufD4gSU8uaW5zcGVjdFxuXG5bMSwgMiwgM11cbnw+IElPLmluc3BlY3QobGFiZWw6IFwiYmVmb3JlXCIpXG58PiBFbnVtLm1hcCgmKCYxICogMikpXG58PiBJTy5pbnNwZWN0KGxhYmVsOiBcImFmdGVyXCIpXG58PiBFbnVtLnN1bVxuXG4jIDNcbmRlZiBzb21lX2Z1bihhLCBiLCBjKSBkb1xuICBJTy5pbnNwZWN0IGJpbmRpbmcoKVxuICAuLi5cbmVuZFxuIikpLG1keCgicCIsbnVsbCwiT3V0cHV0czoiKSxtZHgoInByZSIsbnVsbCxtZHgoImNvZGUiLE9iamVjdC5hc3NpZ24oe3BhcmVudE5hbWU6InByZSJ9LHsiY2xhc3NOYW1lIjoibGFuZ3VhZ2Utc2hlbGwifSksIiMgMVxuMS4uMTBcblsyLCA0LCA2LCA4LCAxMCwgMTIsIDE0LCAxNiwgMTgsIDIwXVxuMTEwXG5cbiMgMlxuYmVmb3JlOiBbMSwgMiwgM11cbmFmdGVyOiBbMiwgNCwgNl1cblxuIyAzXG5bYTogOmZvbywgYjogXCJiYXJcIiwgYzogOmJhel1cbiIpKSxtZHgoImgyIix7ImlkIjoiaWV4cHJ5MCJ9LCJJRXgucHJ5LzAiKSxtZHgoInAiLG51bGwsIlNpbWlsYXIgdG8gUnVieSdzICIsbWR4KCJpbmxpbmVDb2RlIix7cGFyZW50TmFtZToicCJ9LCJiaW5kaW5nLnByeSIpLCIuIFdpbGwgb3BlbiBhbiBpbnRlcmFjdGl2ZSBzaGVsbC4iKSxtZHgoInByZSIsbnVsbCxtZHgoImNvZGUiLE9iamVjdC5hc3NpZ24oe3BhcmVudE5hbWU6InByZSJ9LHsiY2xhc3NOYW1lIjoibGFuZ3VhZ2UtZWxpeGlyIn0pLCJkZWYgc29tZV9mdW4oYSwgYiwgYykgZG9cbiAgcmVxdWlyZSBJRXg7IElFeC5wcnlcbiAgLi4uXG5lbmRcbiIpKSk7fWlmKHR5cGVvZiBNRFhDb250ZW50IT09J3VuZGVmaW5lZCcmJk1EWENvbnRlbnQmJk1EWENvbnRlbnQ9PT1PYmplY3QoTURYQ29udGVudCkmJk9iamVjdC5pc0V4dGVuc2libGUoTURYQ29udGVudCkpe09iamVjdC5kZWZpbmVQcm9wZXJ0eShNRFhDb250ZW50LCdfX2ZpbGVtZXRhJyx7ZW51bWVyYWJsZTp0cnVlLGNvbmZpZ3VyYWJsZTp0cnVlLHZhbHVlOntuYW1lOiJNRFhDb250ZW50IixmaWxlbmFtZToibWFudWFsL0VsaXhpci9FbGl4aXItRGVidWdnaW5nLm1kIn19KTt9TURYQ29udGVudC5pc01EWENvbXBvbmVudD10cnVlOw=="},{"version":3,"sources":["/Users/dennis.okeeffe/Project-Imposter/developer-notes/manual/Elixir/Elixir-Debugging.md"],"names":["React","mdx","makeShortcode","name","MDXDefaultShortcode","props","console","warn","layoutProps","MDXLayout","MDXContent","components","isMDXComponent"],"mappings":"iMAAA,cACE,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,GAAT,KAAoB,eAApB,CACA,cAGF,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAAAC,IAAI,QAAI,SAASC,CAAAA,mBAAT,CAA6BC,KAA7B,CAAoC,CAChEC,OAAO,CAACC,IAAR,CAAa,aAAeJ,IAAf,CAAsB,yEAAnC,EACA,MAAO,WAASE,KAAT,CAAP,CACD,CAHyB,EAA1B,CAKA,GAAMG,CAAAA,WAAW,CAAG,EAApB,CAGA,GAAMC,CAAAA,SAAS,CAAG,SAAlB,CACA,cAAe,SAASC,CAAAA,UAAT,MAGZ,IAFDC,CAAAA,UAEC,MAFDA,UAEC,CADEN,KACF,+CACD,MAAO,KAAC,SAAD,kBAAeG,WAAf,CAAgCH,KAAhC,EAAuC,UAAU,CAAEM,UAAnD,CAA+D,OAAO,CAAC,WAAvE,GACL,SAAQ,CACN,KAAM,qBADA,CAAR,uBADK,CAIL,SAAQ,CACN,KAAM,MADA,CAAR,SAJK,CAOL,oBAAW,kBAAY,UAAU,CAAC,GAAvB,eAAX,QAAyE,kBAAY,UAAU,CAAC,GAAvB,YAAzE,KAPK,CAQL,eAAK,0BAAM,UAAU,CAAC,KAAjB,EAA2B,CAC5B,YAAa,iBADe,CAA3B,0MAAL,CARK,CAuBL,SAAQ,CACN,KAAM,iBADA,CAAR,mBAvBK,CA0BL,gDAAuC,uBAAG,UAAU,CAAC,GAAd,EAAsB,CACzD,OAAQ,wDADiD,CAAtB,2DAAvC,CA1BK,CA6BL,SAAQ,CACN,KAAM,YADA,CAAR,gBA7BK,CAgCL,2BAAkB,kBAAY,UAAU,CAAC,GAAvB,mCAAlB,sIAhCK,CAiCL,eAAK,0BAAM,UAAU,CAAC,KAAjB,EAA2B,CAC5B,YAAa,iBADe,CAA3B,kSAAL,CAjCK,CAsDL,wBAtDK,CAuDL,eAAK,0BAAM,UAAU,CAAC,KAAjB,EAA2B,CAC5B,YAAa,gBADe,CAA3B,+IAAL,CAvDK,CAqEL,SAAQ,CACN,KAAM,SADA,CAAR,aArEK,CAwEL,kCAAyB,kBAAY,UAAU,CAAC,GAAvB,gBAAzB,qCAxEK,CAyEL,eAAK,0BAAM,UAAU,CAAC,KAAjB,EAA2B,CAC5B,YAAa,iBADe,CAA3B,mEAAL,CAzEK,CAAP,CAiFD,C,6QAEDD,UAAU,CAACE,cAAX,CAA4B,IAA5B","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"debugging-in-elixir\"\n    }}>{`Debugging In Elixir`}</h1>\n    <h2 {...{\n      \"id\": \"tldr\"\n    }}>{`tl;dr`}</h2>\n    <p>{`Use `}<inlineCode parentName=\"p\">{`IO.inspect`}</inlineCode>{` or `}<inlineCode parentName=\"p\">{`IEx.pry`}</inlineCode>{`:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-elixir\"\n      }}>{`# inspect\n[1, 2, 3]\n|> IO.inspect(label: \"before\")\n|> Enum.map(&(&1 * 2))\n|> IO.inspect(label: \"after\")\n|> Enum.sum\n\n# pry\ndef some_fun(a, b, c) do\n  require IEx; IEx.pry\n  ...\nend\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"other-resources\"\n    }}>{`Other Resources`}</h2>\n    <p>{`Other resources can be found at `}<a parentName=\"p\" {...{\n        \"href\": \"https://elixir-lang.org/getting-started/debugging.html\"\n      }}>{`https://elixir-lang.org/getting-started/debugging.html`}</a></p>\n    <h2 {...{\n      \"id\": \"ioinspect2\"\n    }}>{`IO.Inspect/2`}</h2>\n    <p>{`What makes `}<inlineCode parentName=\"p\">{`IO.inspect(item, opts \\\\\\\\ [])`}</inlineCode>{` really useful in debugging is that it returns the item argument passed to it without affecting the behavior of the original code.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-elixir\"\n      }}>{`(1..10)\n|> IO.inspect\n|> Enum.map(fn x -> x * 2 end)\n|> IO.inspect\n|> Enum.sum\n|> IO.inspect\n\n[1, 2, 3]\n|> IO.inspect(label: \"before\")\n|> Enum.map(&(&1 * 2))\n|> IO.inspect(label: \"after\")\n|> Enum.sum\n\n# 3\ndef some_fun(a, b, c) do\n  IO.inspect binding()\n  ...\nend\n`}</code></pre>\n    <p>{`Outputs:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`# 1\n1..10\n[2, 4, 6, 8, 10, 12, 14, 16, 18, 20]\n110\n\n# 2\nbefore: [1, 2, 3]\nafter: [2, 4, 6]\n\n# 3\n[a: :foo, b: \"bar\", c: :baz]\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"iexpry0\"\n    }}>{`IEx.pry/0`}</h2>\n    <p>{`Similar to Ruby's `}<inlineCode parentName=\"p\">{`binding.pry`}</inlineCode>{`. Will open an interactive shell.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-elixir\"\n      }}>{`def some_fun(a, b, c) do\n  require IEx; IEx.pry\n  ...\nend\n`}</code></pre>\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  "]}]}