{"remainingRequest":"/Users/okeeffe_d/Project-Imposter/developer-notes/node_modules/docz-core/node_modules/babel-loader/lib/index.js??ref--6-1!/Users/okeeffe_d/Project-Imposter/developer-notes/node_modules/@mdx-js/loader/index.js??ref--6-2!/Users/okeeffe_d/Project-Imposter/developer-notes/node_modules/source-map-loader/index.js!/Users/okeeffe_d/Project-Imposter/developer-notes/manual/AWS/AWS-NodeSDK.md","dependencies":[{"path":"/Users/okeeffe_d/Project-Imposter/developer-notes/manual/AWS/AWS-NodeSDK.md","mtime":1548282825013},{"path":"/Users/okeeffe_d/Project-Imposter/developer-notes/node_modules/cache-loader/dist/cjs.js","mtime":1561535530324},{"path":"/Users/okeeffe_d/Project-Imposter/developer-notes/node_modules/docz-core/node_modules/babel-loader/lib/index.js","mtime":1560300163820},{"path":"/Users/okeeffe_d/Project-Imposter/developer-notes/node_modules/@mdx-js/loader/index.js","mtime":1561535530532},{"path":"/Users/okeeffe_d/Project-Imposter/developer-notes/node_modules/source-map-loader/index.js","mtime":1548285283521}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9vYmplY3RXaXRob3V0UHJvcGVydGllcyBmcm9tIi9Vc2Vycy9va2VlZmZlX2QvUHJvamVjdC1JbXBvc3Rlci9kZXZlbG9wZXItbm90ZXMvbm9kZV9tb2R1bGVzL2JhYmVsLXByZXNldC1yZWFjdC1hcHAvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzIjsvKiBAanN4IG1keCAqL2ltcG9ydCBSZWFjdCBmcm9tJ3JlYWN0JztpbXBvcnR7bWR4fWZyb20nQG1keC1qcy9yZWFjdCc7LyogQGpzeCBtZHggKi92YXIgbWFrZVNob3J0Y29kZT1mdW5jdGlvbiBtYWtlU2hvcnRjb2RlKG5hbWUpe3JldHVybiBmdW5jdGlvbiBNRFhEZWZhdWx0U2hvcnRjb2RlKHByb3BzKXtjb25zb2xlLndhcm4oIkNvbXBvbmVudCAiK25hbWUrIiB3YXMgbm90IGltcG9ydGVkLCBleHBvcnRlZCwgb3IgcHJvdmlkZWQgYnkgTURYUHJvdmlkZXIgYXMgZ2xvYmFsIHNjb3BlIik7cmV0dXJuIG1keCgiZGl2Iixwcm9wcyk7fTt9O3ZhciBsYXlvdXRQcm9wcz17fTt2YXIgTURYTGF5b3V0PSJ3cmFwcGVyIjtleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBNRFhDb250ZW50KF9yZWYpe3ZhciBjb21wb25lbnRzPV9yZWYuY29tcG9uZW50cyxwcm9wcz1fb2JqZWN0V2l0aG91dFByb3BlcnRpZXMoX3JlZixbImNvbXBvbmVudHMiXSk7cmV0dXJuIG1keChNRFhMYXlvdXQsT2JqZWN0LmFzc2lnbih7fSxsYXlvdXRQcm9wcyxwcm9wcyx7Y29tcG9uZW50czpjb21wb25lbnRzLG1keFR5cGU6Ik1EWExheW91dCJ9KSxtZHgoImgxIix7ImlkIjoiYXdzLW5vZGUtc2RrIn0sIkFXUyBOb2RlIFNESyIpLG1keCgidWwiLG51bGwsbWR4KCJsaSIse3BhcmVudE5hbWU6InVsIn0sbWR4KCJhIixPYmplY3QuYXNzaWduKHtwYXJlbnROYW1lOiJsaSJ9LHsiaHJlZiI6IiNhd3Mtbm9kZS1zZGsifSksIkFXUyBOb2RlIFNESyIpLG1keCgidWwiLHtwYXJlbnROYW1lOiJsaSJ9LG1keCgibGkiLHtwYXJlbnROYW1lOiJ1bCJ9LG1keCgiYSIsT2JqZWN0LmFzc2lnbih7cGFyZW50TmFtZToibGkifSx7ImhyZWYiOiIjbG9hZGluZy1jcmVkZW50aWFscy1pbi1ub2RlanMtZnJvbS1lbnZpcm9ubWVudC12YXJpYWJsZXMifSksIkxvYWRpbmcgQ3JlZGVudGlhbHMgaW4gTm9kZS5qcyBmcm9tIEVudmlyb25tZW50IFZhcmlhYmxlcyIpKSxtZHgoImxpIix7cGFyZW50TmFtZToidWwifSxtZHgoImEiLE9iamVjdC5hc3NpZ24oe3BhcmVudE5hbWU6ImxpIn0seyJocmVmIjoiI2V4YW1wbGUtdXNlLWluLWEtdGFzay1ydW5uZXItLS1nZXQtZWMyLWRldGFpbHMtYmFjayJ9KSwiRXhhbXBsZSB1c2UgaW4gYSB0YXNrIHJ1bm5lciAtIGdldCBFQzIgRGV0YWlscyBiYWNrIikpKSkpLG1keCgiaDIiLHsiaWQiOiJsb2FkaW5nLWNyZWRlbnRpYWxzLWluLW5vZGVqcy1mcm9tLWVudmlyb25tZW50LXZhcmlhYmxlcyJ9LCJMb2FkaW5nIENyZWRlbnRpYWxzIGluIE5vZGUuanMgZnJvbSBFbnZpcm9ubWVudCBWYXJpYWJsZXMiKSxtZHgoInVsIixudWxsLG1keCgibGkiLHtwYXJlbnROYW1lOiJ1bCJ9LCJBV1NfQUNDRVNTX0tFWV9JRCIpLG1keCgibGkiLHtwYXJlbnROYW1lOiJ1bCJ9LCJBV1NfU0VDUkVUX0FDQ0VTU19LRVkiKSxtZHgoImxpIix7cGFyZW50TmFtZToidWwifSwiQVdTX1NFU1NJT05fVE9LRU4gKG9wdGlvbmFsKSIpKSxtZHgoInAiLG51bGwsIlRoZXNlIGNhbiBiZSBzZXQgaW50byB5b3VyIEVOViB2YXJpYWJsZXMuIiksbWR4KCJoMiIseyJpZCI6ImV4YW1wbGUtdXNlLWluLWEtdGFzay1ydW5uZXItLS1nZXQtZWMyLWRldGFpbHMtYmFjayJ9LCJFeGFtcGxlIHVzZSBpbiBhIHRhc2sgcnVubmVyIC0gZ2V0IEVDMiBEZXRhaWxzIGJhY2siKSxtZHgoInByZSIsbnVsbCxtZHgoImNvZGUiLE9iamVjdC5hc3NpZ24oe3BhcmVudE5hbWU6InByZSJ9LHsiY2xhc3NOYW1lIjoibGFuZ3VhZ2UtamF2YXNjcmlwdCJ9KSwidmFyIGZzID0gcmVxdWlyZSgnZnMnKTtcbmNvbnN0IHV0aWwgPSByZXF1aXJlKCd1dGlsJyk7XG52YXIgZG90ZW52ID0gcmVxdWlyZSgnZG90ZW52Jyk7XG52YXIgZW52Q29uZmlnID0gZG90ZW52LnBhcnNlKGZzLnJlYWRGaWxlU3luYygnLmVudicpKTtcbmZvciAodmFyIGsgaW4gZW52Q29uZmlnKSB7XG4gICAgcHJvY2Vzcy5lbnZba10gPSBlbnZDb25maWdba107XG59XG5cbnZhciBndWxwID0gcmVxdWlyZSgnZ3VscCcpO1xuXG4vLyBMb2FkIHRoZSBTREsgZm9yIEphdmFTY3JpcHRcbnZhciBBV1MgPSByZXF1aXJlKCdhd3Mtc2RrJyk7XG5cbnZhciBwYXJhbXMgPSB7XG4gICAgSW5zdGFuY2VJZHM6IFtwcm9jZXNzLmVudi5FQzJfSU5TVEFOQ0VfSURdXG59O1xuXG4vKiBHZXQgRUMyIERldGFpbHMgKi9cbmd1bHAudGFzaygnaW5mbycsIGZ1bmN0aW9uKCkge1xuICAgIEFXUy5jb25maWcgPSB7XG4gICAgICAgIGFjY2Vzc0tleUlkOiBwcm9jZXNzLmVudi5BV1NfQUNDRVNTX0tFWSxcbiAgICAgICAgc2VjcmV0QWNjZXNzS2V5OiBwcm9jZXNzLmVudi5BV1NfU0VDUkVUX0tFWSxcbiAgICAgICAgcmVnaW9uOiBwcm9jZXNzLmVudi5BV1NfUkVHSU9OXG4gICAgfTtcblxuICAgIC8vIENyZWF0ZSBFQzIgc2VydmljZSBvYmplY3RcbiAgICBlYzIgPSBuZXcgQVdTLkVDMih7IGFwaVZlcnNpb246ICcyMDE2LTExLTE1JyB9KTtcblxuICAgIC8vIENhbGwgRUMyIHRvIHJldHJpZXZlIHRoZSBwb2xpY3kgZm9yIHNlbGVjdGVkIGJ1Y2tldFxuICAgIGVjMi5kZXNjcmliZUluc3RhbmNlcyhwYXJhbXMsIGZ1bmN0aW9uKGVyciwgZGF0YSkge1xuICAgICAgICBpZiAoZXJyKSB7XG4gICAgICAgICAgICBjb25zb2xlLmxvZygnRXJyb3InLCBlcnIuc3RhY2spO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgY29uc29sZS5sb2coJ1N1Y2Nlc3MnLCB1dGlsLmluc3BlY3QoZGF0YSwgeyBkZXB0aDogNiB9KSk7XG4gICAgICAgIH1cbiAgICB9KTtcbn0pO1xuIikpKTt9aWYodHlwZW9mIE1EWENvbnRlbnQhPT0ndW5kZWZpbmVkJyYmTURYQ29udGVudCYmTURYQ29udGVudD09PU9iamVjdChNRFhDb250ZW50KSYmT2JqZWN0LmlzRXh0ZW5zaWJsZShNRFhDb250ZW50KSl7T2JqZWN0LmRlZmluZVByb3BlcnR5KE1EWENvbnRlbnQsJ19fZmlsZW1ldGEnLHtlbnVtZXJhYmxlOnRydWUsY29uZmlndXJhYmxlOnRydWUsdmFsdWU6e25hbWU6Ik1EWENvbnRlbnQiLGZpbGVuYW1lOiJtYW51YWwvQVdTL0FXUy1Ob2RlU0RLLm1kIn19KTt9TURYQ29udGVudC5pc01EWENvbXBvbmVudD10cnVlOw=="},{"version":3,"sources":["/Users/okeeffe_d/Project-Imposter/developer-notes/manual/AWS/AWS-NodeSDK.md"],"names":["React","mdx","makeShortcode","name","MDXDefaultShortcode","props","console","warn","layoutProps","MDXLayout","MDXContent","components","isMDXComponent"],"mappings":"4LAAA,cACE,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,GAAT,KAAoB,eAApB,CACA,cAGF,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAAAC,IAAI,QAAI,SAASC,CAAAA,mBAAT,CAA6BC,KAA7B,CAAoC,CAChEC,OAAO,CAACC,IAAR,CAAa,aAAeJ,IAAf,CAAsB,yEAAnC,EACA,MAAO,WAASE,KAAT,CAAP,CACD,CAHyB,EAA1B,CAKA,GAAMG,CAAAA,WAAW,CAAG,EAApB,CAGA,GAAMC,CAAAA,SAAS,CAAG,SAAlB,CACA,cAAe,SAASC,CAAAA,UAAT,MAGZ,IAFDC,CAAAA,UAEC,MAFDA,UAEC,CADEN,KACF,+CACD,MAAO,KAAC,SAAD,kBAAeG,WAAf,CAAgCH,KAAhC,EAAuC,UAAU,CAAEM,UAAnD,CAA+D,OAAO,CAAC,WAAvE,GACL,SAAQ,CACN,KAAM,cADA,CAAR,gBADK,CAOL,cACE,UAAI,UAAU,CAAC,IAAf,EAAoB,uBAAG,UAAU,CAAC,IAAd,EAAuB,CACvC,OAAQ,eAD+B,CAAvB,iBAApB,CAEyB,UAAI,UAAU,CAAC,IAAf,EACrB,UAAI,UAAU,CAAC,IAAf,EAAoB,uBAAG,UAAU,CAAC,IAAd,EAAuB,CACvC,OAAQ,2DAD+B,CAAvB,8DAApB,CADqB,CAIrB,UAAI,UAAU,CAAC,IAAf,EAAoB,uBAAG,UAAU,CAAC,IAAd,EAAuB,CACvC,OAAQ,sDAD+B,CAAvB,wDAApB,CAJqB,CAFzB,CADF,CAPK,CAsBL,SAAQ,CACN,KAAM,0DADA,CAAR,6DAtBK,CAyBL,cACE,UAAI,UAAU,CAAC,IAAf,sBADF,CAEE,UAAI,UAAU,CAAC,IAAf,0BAFF,CAGE,UAAI,UAAU,CAAC,IAAf,iCAHF,CAzBK,CA8BL,yDA9BK,CA+BL,SAAQ,CACN,KAAM,qDADA,CAAR,uDA/BK,CAkCL,eAAK,0BAAM,UAAU,CAAC,KAAjB,EAA2B,CAC5B,YAAa,qBADe,CAA3B,y+BAAL,CAlCK,CAAP,CA2ED,C,qQAEDD,UAAU,CAACE,cAAX,CAA4B,IAA5B","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"aws-node-sdk\"\n    }}>{`AWS Node SDK`}</h1>\n    {\n      /* TOC */\n    }\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"#aws-node-sdk\"\n        }}>{`AWS Node SDK`}</a><ul parentName=\"li\">\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#loading-credentials-in-nodejs-from-environment-variables\"\n            }}>{`Loading Credentials in Node.js from Environment Variables`}</a></li>\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#example-use-in-a-task-runner---get-ec2-details-back\"\n            }}>{`Example use in a task runner - get EC2 Details back`}</a></li>\n        </ul></li>\n    </ul>\n    {\n      /* /TOC */\n    }\n    <h2 {...{\n      \"id\": \"loading-credentials-in-nodejs-from-environment-variables\"\n    }}>{`Loading Credentials in Node.js from Environment Variables`}</h2>\n    <ul>\n      <li parentName=\"ul\">{`AWS_ACCESS_KEY_ID`}</li>\n      <li parentName=\"ul\">{`AWS_SECRET_ACCESS_KEY`}</li>\n      <li parentName=\"ul\">{`AWS_SESSION_TOKEN (optional)`}</li>\n    </ul>\n    <p>{`These can be set into your ENV variables.`}</p>\n    <h2 {...{\n      \"id\": \"example-use-in-a-task-runner---get-ec2-details-back\"\n    }}>{`Example use in a task runner - get EC2 Details back`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`var fs = require('fs');\nconst util = require('util');\nvar dotenv = require('dotenv');\nvar envConfig = dotenv.parse(fs.readFileSync('.env'));\nfor (var k in envConfig) {\n    process.env[k] = envConfig[k];\n}\n\nvar gulp = require('gulp');\n\n// Load the SDK for JavaScript\nvar AWS = require('aws-sdk');\n\nvar params = {\n    InstanceIds: [process.env.EC2_INSTANCE_ID]\n};\n\n/* Get EC2 Details */\ngulp.task('info', function() {\n    AWS.config = {\n        accessKeyId: process.env.AWS_ACCESS_KEY,\n        secretAccessKey: process.env.AWS_SECRET_KEY,\n        region: process.env.AWS_REGION\n    };\n\n    // Create EC2 service object\n    ec2 = new AWS.EC2({ apiVersion: '2016-11-15' });\n\n    // Call EC2 to retrieve the policy for selected bucket\n    ec2.describeInstances(params, function(err, data) {\n        if (err) {\n            console.log('Error', err.stack);\n        } else {\n            console.log('Success', util.inspect(data, { depth: 6 }));\n        }\n    });\n});\n`}</code></pre>\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  "]}]}