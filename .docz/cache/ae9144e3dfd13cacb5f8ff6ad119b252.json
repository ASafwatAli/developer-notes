{"remainingRequest":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/docz-core/node_modules/babel-loader/lib/index.js??ref--6-1!/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/@mdx-js/loader/index.js??ref--6-2!/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/source-map-loader/index.js!/Users/dennis.okeeffe/Project-Imposter/developer-notes/manual/React-Native/React-Native-Redux.md","dependencies":[{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/manual/React-Native/React-Native-Redux.md","mtime":1562563032082},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/cache-loader/dist/cjs.js","mtime":1564095360956},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/docz-core/node_modules/babel-loader/lib/index.js","mtime":1562568123838},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/@mdx-js/loader/index.js","mtime":1565139338792},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/source-map-loader/index.js","mtime":1564095361765}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9vYmplY3RXaXRob3V0UHJvcGVydGllcyBmcm9tIi9Vc2Vycy9kZW5uaXMub2tlZWZmZS9Qcm9qZWN0LUltcG9zdGVyL2RldmVsb3Blci1ub3Rlcy9ub2RlX21vZHVsZXMvYmFiZWwtcHJlc2V0LXJlYWN0LWFwcC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0V2l0aG91dFByb3BlcnRpZXMiOy8qIEBqc3ggbWR4ICovaW1wb3J0IFJlYWN0IGZyb20ncmVhY3QnO2ltcG9ydHttZHh9ZnJvbSdAbWR4LWpzL3JlYWN0JzsvKiBAanN4IG1keCAqL3ZhciBtYWtlU2hvcnRjb2RlPWZ1bmN0aW9uIG1ha2VTaG9ydGNvZGUobmFtZSl7cmV0dXJuIGZ1bmN0aW9uIE1EWERlZmF1bHRTaG9ydGNvZGUocHJvcHMpe2NvbnNvbGUud2FybigiQ29tcG9uZW50ICIrbmFtZSsiIHdhcyBub3QgaW1wb3J0ZWQsIGV4cG9ydGVkLCBvciBwcm92aWRlZCBieSBNRFhQcm92aWRlciBhcyBnbG9iYWwgc2NvcGUiKTtyZXR1cm4gbWR4KCJkaXYiLHByb3BzKTt9O307dmFyIGxheW91dFByb3BzPXt9O3ZhciBNRFhMYXlvdXQ9IndyYXBwZXIiO2V4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIE1EWENvbnRlbnQoX3JlZil7dmFyIGNvbXBvbmVudHM9X3JlZi5jb21wb25lbnRzLHByb3BzPV9vYmplY3RXaXRob3V0UHJvcGVydGllcyhfcmVmLFsiY29tcG9uZW50cyJdKTtyZXR1cm4gbWR4KE1EWExheW91dCxPYmplY3QuYXNzaWduKHt9LGxheW91dFByb3BzLHByb3BzLHtjb21wb25lbnRzOmNvbXBvbmVudHMsbWR4VHlwZToiTURYTGF5b3V0In0pLG1keCgiaDEiLHsiaWQiOiJyZWFjdC1uYXRpdmUtd2l0aC1yZWR1eCJ9LCJSZWFjdCBOYXRpdmUgd2l0aCBSZWR1eCIpLG1keCgicCIsbnVsbCwiTm93IHRoYXQgUmVkdXhUaHVuayBpcyBzZXQgdXAsIHdlIGNhbiB1c2UgaXQgaW5zaWRlIGFuIGFjdGlvbiBjcmVhdG9yLiIpLG1keCgicHJlIixudWxsLG1keCgiY29kZSIsT2JqZWN0LmFzc2lnbih7cGFyZW50TmFtZToicHJlIn0se30pLCIvLyBBY3Rpb24gQ3JlYXRvcnNcbmV4cG9ydCBjb25zdCBzZWxlY3RBY3Rpb24gPSAoeyBlbWFpbCwgcGFzc3dvcmQgfSkgPT4ge1xuICAgIHJldHVybiAoZGlzcGF0Y2gpIC0+IHtcbiAgICAgICAgZmlyZWJhc2UuYXV0aCgpLnNpZ25JbldpdGhFbWFpbEFuZFBhc3N3b3JkKGVtYWlsLCBwYXNzd29yZClcbiAgICAgICAgICAgIC50aGVuKHVzZXIgPT4gY29uc29sZS5sb2codXNlcikpXG4gICAgfTtcbn07XG4iKSksbWR4KCJwIixudWxsLCJTbywgd2hhdCBpcyBSZWR1eFRodW5rIGRvaW5nIGZvciB1cz8iKSxtZHgoInAiLG51bGwsIk5vdyB0aGF0IHdlIGhhdmUgUmVkdXhUaHVuaywgaXQgd2lsbCBjaGFuZ2UgaG93IHdlIGNhbGwgdGhlIGFjdGlvbiBjcmVhdG9yLiIpLG1keCgicCIsbnVsbCwiVGhlIEFjdGlvbiBDcmVhdG9yICIsbWR4KCJpbmxpbmVDb2RlIix7cGFyZW50TmFtZToicCJ9LCJXSUxMIE5PVyBSRVRVUk4gQSBGVU5DVElPTiIpLCIuIElmIFJlZHV4VGh1bmsgc2VlcyBhIGZ1bmN0aW9uIHJldHVybmVkLCBpdCB3aWxsIHNlbmQgb2ZmIGFuIGFjdGlvbiB3aXRoIGEgZGlzcGF0Y2hlciBhbmQgaW1tZWRpYXRlbHkgY2FsbCB0aGF0IGZ1bmN0aW9uLiIpLG1keCgicCIsbnVsbCwiVGhpcyB3aWxsIHRoZW4gc3RhcnQgb3VyIGxvZ2luIHJlcXVlc3QuIFRoZSBhcHAgd2lsbCB3YWl0IGFuZCB0aGUgLnRoZW4gd2lsbCBhdXRvbWF0aWNhbGx5IHJ1biBhbmQgd2Ugd2lsbCB0aGVuIGRpc3BhdGNoIG91ciBhY3Rpb24uIiksbWR4KCJwcmUiLG51bGwsbWR4KCJjb2RlIixPYmplY3QuYXNzaWduKHtwYXJlbnROYW1lOiJwcmUifSx7fSksIi8vIEFjdGlvbiBDcmVhdG9yc1xuZXhwb3J0IGNvbnN0IHNlbGVjdEFjdGlvbiA9ICh7IGVtYWlsLCBwYXNzd29yZCB9KSA9PiB7XG4gICAgcmV0dXJuIChkaXNwYXRjaCkgLT4ge1xuICAgICAgICBmaXJlYmFzZS5hdXRoKCkuc2lnbkluV2l0aEVtYWlsQW5kUGFzc3dvcmQoZW1haWwsIHBhc3N3b3JkKVxuICAgICAgICAgICAgLnRoZW4odXNlciA9PiB7XG4gICAgICAgICAgICAgICAgZGlzcGF0Y2goeyB0eXBlOiAnTE9HSU5fVVNFUl9TVUNDRVNTJywgcGF5bG9hZDogdXNlciB9KTtcbiAgICAgICAgICAgIH0pO1xuICAgIH07XG59O1xuIikpLG1keCgiZGl2Iix7aWQ6Im5hdiJ9KSxtZHgoImhyIixudWxsKSxtZHgoImgyIix7ImlkIjoiZGVhbGluZy13aXRoLW5hdmlnYXRpb24ifSwiRGVhbGluZyB3aXRoIE5hdmlnYXRpb24iKSxtZHgoInAiLG51bGwsIkFzIG9wcG9zZWQgdG8gUmVhY3Qgd2l0aCAiLG1keCgiaW5saW5lQ29kZSIse3BhcmVudE5hbWU6InAifSwiUmVhY3QtUm91dGVyIiksIiwgUmVhY3QgTmF0aXZlIGRvZXNuJ3QgbmVjZXNzYXJpbHkgaGF2ZSBvbmUuIiksbWR4KCJwIixudWxsLCJJbiB0aGlzIGNhc2UsIHdlJ2xsIGJlIHVzaW5nIHRoZSBzb2x1dGlvbiBjYWxsZWQgIixtZHgoImlubGluZUNvZGUiLHtwYXJlbnROYW1lOiJwIn0sIlJlYWN0LU5hdGl2ZS1Sb3V0ZXItRmx1eCIpLCIgdG8gaGVscCB3aXRoIG5hdmlnYXRpb24uIiksbWR4KCJwIixudWxsLCJIb3cgZG9lcyBpdCB3b3JrPyIpLG1keCgicCIsbnVsbCwiSW1hZ2luZSBhbiBhcHAgdGhhdCByZXF1aXJlcyBhdXRoZW50aWNhdGlvbi4gV2UgY291bGQgdGhlbiBoYXZlIGFub3RoZXIgc2NlbmUgd2hlcmUgdGhlIGlzIGEgTWFzdGVyLURldGFpbCByZWxhdGlvbnNoaXAuIiksbWR4KCJwIixudWxsLCJXZSBlc3NlbnRpYWxseSBkZWZpbmUgYSAiLG1keCgiaW5saW5lQ29kZSIse3BhcmVudE5hbWU6InAifSwiU2NlbmUiKSwiIGZvciBlYWNoIGRpc3RpbmN0IHNjcmVlbnMuIEZvciBleGFtcGxlLiIpLG1keCgicHJlIixudWxsLG1keCgiY29kZSIsT2JqZWN0LmFzc2lnbih7cGFyZW50TmFtZToicHJlIn0se30pLCI8U2NlbmUga2V5PVwibG9naW5cIiBjb21wb25lbnQ9e0xvZ2luRm9ybX0gLz5cbjxTY2VuZSBrZXk9XCJlbXBsb3llZUxpc3RcIiBjb21wb25lbnQ9e0VtcGxveWVlTGlzdH0gLz5cbjxTY2VuZSBrZXk9XCJlbXBsb3llZURldGFpbFwiIGNvbXBvbmVudD17RW1wbG95ZWVEZXRhaWx9IC8+XG5cbi8vIEFsbCB0aGUgcHJvcHMgeW91IGNhbiBwYXNzIHRvIHRoZSBzY2VuZVxuXG48U2NlbmVcbiAgICBrZXk9XCJsb2dpblwiICAgICAgICAgICAgICAgICAvLyBjYWxsIEFjdGlvbnMubG9naW4oKSB0byBzaG93IHRoaXMgc2NyZWVuXG4gICAgY29tcG9uZW50PXtMb2dpbkZvcm19ICAgICAgIC8vIGNvbXBvbmVudCB0byBzaG93XG4gICAgdGl0bGU9XCJMb2dpblwiICAgICAgICAgICAgICAgLy8gbWFrZSBuYXYgYmFyIGFuZCBnaXZlIGl0IGEgdGl0bGUgLSB0aGlzIGlzIGJ1aWx0IGluXG4gICAgaW5pdGlhbCAgICAgICAgICAgICAgICAgICAgIC8vIGRlZmluZSB0aGUgZmlyc3Qgc2NyZWVuIHRvIHNob3dcbi8+XG4iKSksbWR4KCJkaXYiLHtpZDoibmF2MiJ9KSxtZHgoImgzIix7ImlkIjoiLS0tLS1uYXZpZ2F0aW9uLWluLXRoZS1yb3V0ZXIifSwiLS0tLSBOYXZpZ2F0aW9uIGluIHRoZSBSb3V0ZXIiKSxtZHgoInByZSIsbnVsbCxtZHgoImNvZGUiLE9iamVjdC5hc3NpZ24oe3BhcmVudE5hbWU6InByZSJ9LHt9KSwiLy8gQ3JlYXRlIGEgcm91dGVyLmpzXG5cbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBTY2VuZSwgUm91dGVyIH0gZnJvbSAncmVhY3QtbmF0aXZlLXJvdXRlci1mbHV4JztcblxuLy8gc2NlbmUtdGFyZ2V0XG5pbXBvcnQgRXhhbXBsZUNvbXBvbmVudCBmcm9tICcuL2NvbXBvbmVudHMvZXhhbXBsZWNvbXBvbmVudC9FeGFtcGxlQ29tcG9uZW50JztcbmltcG9ydCBUYWJsZSBmcm9tICcuL2NvbXBvbmVudHMvdGFibGUvVGFibGUnO1xuXG5jb25zdCBSb3V0ZXJDb21wb25lbnQgPSAoKSA9PiB7XG4gICAgcmV0dXJuIChcbiAgICAgICAgPFJvdXRlcj5cbiAgICAgICAgICAgIDxTY2VuZSBrZXk9XCJleGFtcGxlXCIgY29tcG9uZW50PXtFeGFtcGxlQ29tcG9uZW50fSB0aXRsZT1cIkFwcFwiIC8+XG4gICAgICAgICAgICA8U2NlbmUga2V5PVwidGFibGVcIiBjb21wb25lbnQ9e1RhYmxlfSB0aXRsZT1cIlRhYmxlXCIgaW5pdGlhbCAvPlxuICAgICAgICA8L1JvdXRlcj5cbiAgICApO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgUm91dGVyQ29tcG9uZW50O1xuXG4vLyBpbiBhcHAuanNcblxuLi4uXG5pbXBvcnQgUm91dGVyIGZyb20gJy4vcm91dGVyJztcblxuY29uc3QgQXBwID0gKCkgPT4ge1xuXG4gICAgY29uc3Qgc3RvcmUgPSBjcmVhdGVTdG9yZShyZWR1Y2Vycywge30sIGFwcGx5TWlkZGxld2FyZShSZWR1eFRodW5rKSk7XG5cbiAgICByZXR1cm4gKFxuICAgICAgICA8UHJvdmlkZXIgc3RvcmU9e3N0b3JlfT5cbiAgICAgICAgICAgIDxSb3V0ZXIgLz5cbiAgICAgICAgPC9Qcm92aWRlcj5cbiAgICApO1xufVxuXG5leHBvcnQgZGVmYXVsdCBBcHA7XG4iKSksbWR4KCJwIixudWxsLCJTbyBob3cgZG8gd2UgbW92ZSBiZXR3ZWVuIHRoZXNlIHNjZW5lcz8iKSxtZHgoImRpdiIse2lkOiJuYXYzIn0pLG1keCgiaDMiLHsiaWQiOiItLS0tLW5hdmlnYXRpbmctYmV0d2Vlbi1yb3V0ZXMifSwiLS0tLSBOYXZpZ2F0aW5nIGJldHdlZW4gcm91dGVzIiksbWR4KCJwIixudWxsLCJOYXZpZ2F0aW9uIHdpbGwgaGFwcGVuIGZyb20gYW4gYWN0aW9uLiIpLG1keCgicHJlIixudWxsLG1keCgiY29kZSIsT2JqZWN0LmFzc2lnbih7cGFyZW50TmFtZToicHJlIn0se30pLCIvLyBpbXBvcnQgYWN0aW9uc1xuaW1wb3J0IHsgQWN0aW9ucyB9IGZyb20gJ3JlYWN0LW5hdGl2ZS1yb3V0ZXItZmx1eCc7XG5cbi8vIEFjdGlvbiBDcmVhdG9yc1xuZXhwb3J0IGNvbnN0IGxvZ2luVXNlclN1Y2Nlc3MgPSAoZGlzcGF0Y2gsIHVzZXIpID0+IHtcbiAgICBkaXNwYXRjaCh7XG4gICAgICAgIHR5cGU6IExPR0lOX1VTRVJfU1VDQ0VTUyxcbiAgICAgICAgcGF5bG9hZDogdXNlclxuICAgIH0pO1xuXG4gICAgQWN0aW9ucy5lbXBsb3llZUxpc3QoKTsgLy8gdGhpcyBtZXRob2QgY29tZXMgZnJvbSB0aGUga2V5IHByb3BlcnR5XG59O1xuIikpLG1keCgiZGl2Iix7aWQ6Im5hdjQifSksbWR4KCJoMyIseyJpZCI6Ii0tLS0tZ3JvdXBpbmctc2NlbmVzLXdpdGgtYnVja2V0cyJ9LCItLS0tIEdyb3VwaW5nIFNjZW5lcyB3aXRoICdCdWNrZXRzJyIpLG1keCgicCIsbnVsbCwiTWFraW5nIGRlY2lzaW9ucyBvbiBob3cgdGhlIGhlYWRlciBzaG91bGQgcmVuZGVyLiIpLG1keCgicCIsbnVsbCwiV2UgY2FuIGRvICIsbWR4KCJpbmxpbmVDb2RlIix7cGFyZW50TmFtZToicCJ9LCJzY2VuZSBuZXN0aW5nIiksIiB0byBncm91cCB0aGVzZSBzY3JlZW5zLiBUaGVyZSBpcyBvbmUgJ2dvdGNoYScgdGhvdWdoLiBOb3cgZm9yIHRoZSBhY3Rpb25zLCB3ZSBuZWVkIHRvIGFjdHVhbGx5IHVzZSBBY3Rpb25zLm1haW4oKS4iKSxtZHgoInByZSIsbnVsbCxtZHgoImNvZGUiLE9iamVjdC5hc3NpZ24oe3BhcmVudE5hbWU6InByZSJ9LHt9KSwiLy8gcm91dGVyLmpzXG5cbmNvbnN0IFJvdXRlckNvbXBvbmVudCA9ICgpID0+IHtcbiAgICByZXR1cm4gKFxuICAgICAgICA8Um91dGVyPlxuICAgICAgICAgICAgPFNjZW5lIGtleT1cImF1dGhcIj5cbiAgICAgICAgICAgICAgICA8U2NlbmUga2V5PVwibG9naW5cIiBjb21wb25lbnQ9e0xvZ2lufSB0aXRsZT1cIkxvZ2luXCIgLz5cbiAgICAgICAgICAgIDwvU2NlbmU+XG4gICAgICAgICAgICA8U2NlbmUga2V5PVwiZmxvd1wiPlxuICAgICAgICAgICAgICAgIDxTY2VuZSBrZXk9XCJleGFtcGxlXCIgY29tcG9uZW50PXtFeGFtcGxlQ29tcG9uZW50fSB0aXRsZT1cIkFwcFwiIC8+XG4gICAgICAgICAgICAgICAgPFNjZW5lXG4gICAgICAgICAgICAgICAgICAgIC8vIGZvciBhY3Rpb24sIHlvdSBub3JtYWxseSBjYWxsIEFjdGlvbnMua2V5KClcbiAgICAgICAgICAgICAgICAgICAgb25SaWdodD17KCkgPT4gY29uc29sZS5sb2coJ3JpZ2h0ISEhJyl9XG4gICAgICAgICAgICAgICAgICAgIHJpZ2h0VGl0bGU9XCJBZGRcIlxuICAgICAgICAgICAgICAgICAgICBrZXk9XCJ0YWJsZVwiXG4gICAgICAgICAgICAgICAgICAgIGNvbXBvbmVudD17VGFibGV9XG4gICAgICAgICAgICAgICAgICAgIHRpdGxlPVwiVGFibGVcIlxuICAgICAgICAgICAgICAgICAgICBpbml0aWFsXG4gICAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgIDwvU2NlbmU+XG4gICAgICAgIDwvUm91dGVyPlxuICAgICk7XG59O1xuIikpLG1keCgicCIsbnVsbCwiV2UgY2FuIHVzZSB0aGUgIixtZHgoImlubGluZUNvZGUiLHtwYXJlbnROYW1lOiJwIn0sImluaXRpYWwiKSwiIHByb3Agd2l0aGluIHRoZXNlICIsbWR4KCJpbmxpbmVDb2RlIix7cGFyZW50TmFtZToicCJ9LCJidWNrZXRzIiksIiB0byBsZXQgd2hpY2ggY29tcG9uZW50IHdpdGhpbiBhIGJ1Y2tldCB0byBoYXZlIGFuIGluaXRpYWwgcHJvcCIpLG1keCgiaDMiLHsiaWQiOiItLS0tLWFjdGlvbnMtdG8tbmF2aWdhdGUtYmV0d2Vlbi1idWNrZXRzIn0sIi0tLS0gQWN0aW9ucyB0byBuYXZpZ2F0ZSBiZXR3ZWVuIGJ1Y2tldHMiKSxtZHgoInAiLG51bGwsIlRoZXNlIGFjdGlvbnMgY2FuIGJlIGFkZGVkIHVzaW5nIiksbWR4KCJwcmUiLG51bGwsbWR4KCJjb2RlIixPYmplY3QuYXNzaWduKHtwYXJlbnROYW1lOiJwcmUifSx7fSksImltcG9ydCB7IEFjdGlvbnMgfSBmcm9tICdyZWFjdC1uYXRpdmUtcm91dGVyLWZsdXgnO1xuXG4vLyBBY3Rpb24gQ3JlYXRvcnMgLSBleGFtbXBsZSB0aHVuayBhY3Rpb24gY3JlYXRvclxuY29uc3QgbG9naW5Vc2VyU3VjY2VzcyA9IChkaXNwYXRjaCwgdXNlcikgPT4ge1xuICAgIGRpc3BhdGNoKHtcbiAgICAgICAgdHlwZTogTE9HSU5fVVNFUl9TVUNDRVNTLFxuICAgICAgICBwYXlsb2FkOiB1c2VyXG4gICAgfSk7XG5cbiAgICBBY3Rpb25zLmVtcGxveWVlTGlzdCgpO1xufVxuIikpLG1keCgiZGl2Iix7aWQ6Im5hdjUifSksbWR4KCJoMyIseyJpZCI6Ii0tLS0tZm9ybS11cGRhdGVzLWF0LWEtcmVkdWNlci1sZXZlbC0tZHluYW1pYy1wcm9wZXJ0eS11cGRhdGVzIn0sIi0tLS0gRm9ybSB1cGRhdGVzIGF0IGEgcmVkdWNlciBsZXZlbCAvIER5bmFtaWMgUHJvcGVydHkgdXBkYXRlcyIpLG1keCgicCIsbnVsbCwiRXhhbXBsZSByZWR1Y2VyIGZ1bmN0aW9uIHdpdGggRVM2IGR5bmFtaWMgY2hhbmdlLiIpLG1keCgicHJlIixudWxsLG1keCgiY29kZSIsT2JqZWN0LmFzc2lnbih7cGFyZW50TmFtZToicHJlIn0se30pLCJleHBvcnQgZGVmYXVsdCAoc3RhdGUgPSBJTklUSUFMX1NUQVRFLCBhY3Rpb24pID0+IHtcbiAgICBzd2l0Y2ggKGFjdGlvbi50eXBlKSB7XG4gICAgICAgIGNhc2UgRU1QTE9ZRUVfVVBEQVRFOlxuICAgICAgICAgICAgcmV0dXJuIHsuLi5zdGF0ZSwgW2FjdGlvbi5wYXlsb2FkLnByb3BdOiBhY3Rpb24ucGF5bG9hZC52YWx1ZX07XG4gICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICByZXR1cm4gc3RhdGU7XG4gICAgfVxufVxuIikpKTt9aWYodHlwZW9mIE1EWENvbnRlbnQhPT0ndW5kZWZpbmVkJyYmTURYQ29udGVudCYmTURYQ29udGVudD09PU9iamVjdChNRFhDb250ZW50KSYmT2JqZWN0LmlzRXh0ZW5zaWJsZShNRFhDb250ZW50KSl7T2JqZWN0LmRlZmluZVByb3BlcnR5KE1EWENvbnRlbnQsJ19fZmlsZW1ldGEnLHtlbnVtZXJhYmxlOnRydWUsY29uZmlndXJhYmxlOnRydWUsdmFsdWU6e25hbWU6Ik1EWENvbnRlbnQiLGZpbGVuYW1lOiJtYW51YWwvUmVhY3QtTmF0aXZlL1JlYWN0LU5hdGl2ZS1SZWR1eC5tZCJ9fSk7fU1EWENvbnRlbnQuaXNNRFhDb21wb25lbnQ9dHJ1ZTs="},{"version":3,"sources":["/Users/dennis.okeeffe/Project-Imposter/developer-notes/manual/React-Native/React-Native-Redux.md"],"names":["React","mdx","makeShortcode","name","MDXDefaultShortcode","props","console","warn","layoutProps","MDXLayout","MDXContent","components","isMDXComponent"],"mappings":"iMAAA,cACE,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,GAAT,KAAoB,eAApB,CACA,cAGF,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAAAC,IAAI,QAAI,SAASC,CAAAA,mBAAT,CAA6BC,KAA7B,CAAoC,CAChEC,OAAO,CAACC,IAAR,CAAa,aAAeJ,IAAf,CAAsB,yEAAnC,EACA,MAAO,WAASE,KAAT,CAAP,CACD,CAHyB,EAA1B,CAKA,GAAMG,CAAAA,WAAW,CAAG,EAApB,CAGA,GAAMC,CAAAA,SAAS,CAAG,SAAlB,CACA,cAAe,SAASC,CAAAA,UAAT,MAGZ,IAFDC,CAAAA,UAEC,MAFDA,UAEC,CADEN,KACF,+CACD,MAAO,KAAC,SAAD,kBAAeG,WAAf,CAAgCH,KAAhC,EAAuC,UAAU,CAAEM,UAAnD,CAA+D,OAAO,CAAC,WAAvE,GACL,SAAQ,CACN,KAAM,yBADA,CAAR,2BADK,CAIL,sFAJK,CAKL,eAAK,0BAAM,UAAU,CAAC,KAAjB,EAA2B,EAA3B,4OAAL,CALK,CAaL,oDAbK,CAcL,2FAdK,CAeL,mCAA0B,kBAAY,UAAU,CAAC,GAAvB,+BAA1B,8HAfK,CAgBL,oJAhBK,CAiBL,eAAK,0BAAM,UAAU,CAAC,KAAjB,EAA2B,EAA3B,sTAAL,CAjBK,CA2BL,WAAK,EAAE,CAAC,KAAR,EA3BK,CA4BL,cA5BK,CA6BL,SAAQ,CACN,KAAM,yBADA,CAAR,2BA7BK,CAgCL,yCAAgC,kBAAY,UAAU,CAAC,GAAvB,iBAAhC,gDAhCK,CAiCL,iEAAwD,kBAAY,UAAU,CAAC,GAAvB,6BAAxD,6BAjCK,CAkCL,iCAlCK,CAmCL,wIAnCK,CAoCL,wCAA+B,kBAAY,UAAU,CAAC,GAAvB,UAA/B,4CApCK,CAqCL,eAAK,0BAAM,UAAU,CAAC,KAAjB,EAA2B,EAA3B,ygBAAL,CArCK,CAkDL,WAAK,EAAE,CAAC,MAAR,EAlDK,CAmDL,SAAQ,CACN,KAAM,+BADA,CAAR,iCAnDK,CAsDL,eAAK,0BAAM,UAAU,CAAC,KAAjB,EAA2B,EAA3B,y0BAAL,CAtDK,CA4FL,uDA5FK,CA6FL,WAAK,EAAE,CAAC,MAAR,EA7FK,CA8FL,SAAQ,CACN,KAAM,gCADA,CAAR,kCA9FK,CAiGL,sDAjGK,CAkGL,eAAK,0BAAM,UAAU,CAAC,KAAjB,EAA2B,EAA3B,2TAAL,CAlGK,CA+GL,WAAK,EAAE,CAAC,MAAR,EA/GK,CAgHL,SAAQ,CACN,KAAM,mCADA,CAAR,uCAhHK,CAmHL,iEAnHK,CAoHL,0BAAiB,kBAAY,UAAU,CAAC,GAAvB,kBAAjB,uHApHK,CAqHL,eAAK,0BAAM,UAAU,CAAC,KAAjB,EAA2B,EAA3B,uuBAAL,CArHK,CA6IL,+BAAsB,kBAAY,UAAU,CAAC,GAAvB,YAAtB,uBAAgG,kBAAY,UAAU,CAAC,GAAvB,YAAhG,mEA7IK,CA8IL,SAAQ,CACN,KAAM,0CADA,CAAR,4CA9IK,CAiJL,gDAjJK,CAkJL,eAAK,0BAAM,UAAU,CAAC,KAAjB,EAA2B,EAA3B,qRAAL,CAlJK,CA8JL,WAAK,EAAE,CAAC,MAAR,EA9JK,CA+JL,SAAQ,CACN,KAAM,gEADA,CAAR,mEA/JK,CAkKL,iEAlKK,CAmKL,eAAK,0BAAM,UAAU,CAAC,KAAjB,EAA2B,EAA3B,yPAAL,CAnKK,CAAP,CA6KD,C,qRAEDD,UAAU,CAACE,cAAX,CAA4B,IAA5B","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"react-native-with-redux\"\n    }}>{`React Native with Redux`}</h1>\n    <p>{`Now that ReduxThunk is set up, we can use it inside an action creator.`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`// Action Creators\nexport const selectAction = ({ email, password }) => {\n    return (dispatch) -> {\n        firebase.auth().signInWithEmailAndPassword(email, password)\n            .then(user => console.log(user))\n    };\n};\n`}</code></pre>\n    <p>{`So, what is ReduxThunk doing for us?`}</p>\n    <p>{`Now that we have ReduxThunk, it will change how we call the action creator.`}</p>\n    <p>{`The Action Creator `}<inlineCode parentName=\"p\">{`WILL NOW RETURN A FUNCTION`}</inlineCode>{`. If ReduxThunk sees a function returned, it will send off an action with a dispatcher and immediately call that function.`}</p>\n    <p>{`This will then start our login request. The app will wait and the .then will automatically run and we will then dispatch our action.`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`// Action Creators\nexport const selectAction = ({ email, password }) => {\n    return (dispatch) -> {\n        firebase.auth().signInWithEmailAndPassword(email, password)\n            .then(user => {\n                dispatch({ type: 'LOGIN_USER_SUCCESS', payload: user });\n            });\n    };\n};\n`}</code></pre>\n    <div id=\"nav\"></div>\n    <hr></hr>\n    <h2 {...{\n      \"id\": \"dealing-with-navigation\"\n    }}>{`Dealing with Navigation`}</h2>\n    <p>{`As opposed to React with `}<inlineCode parentName=\"p\">{`React-Router`}</inlineCode>{`, React Native doesn't necessarily have one.`}</p>\n    <p>{`In this case, we'll be using the solution called `}<inlineCode parentName=\"p\">{`React-Native-Router-Flux`}</inlineCode>{` to help with navigation.`}</p>\n    <p>{`How does it work?`}</p>\n    <p>{`Imagine an app that requires authentication. We could then have another scene where the is a Master-Detail relationship.`}</p>\n    <p>{`We essentially define a `}<inlineCode parentName=\"p\">{`Scene`}</inlineCode>{` for each distinct screens. For example.`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`<Scene key=\"login\" component={LoginForm} />\n<Scene key=\"employeeList\" component={EmployeeList} />\n<Scene key=\"employeeDetail\" component={EmployeeDetail} />\n\n// All the props you can pass to the scene\n\n<Scene\n    key=\"login\"                 // call Actions.login() to show this screen\n    component={LoginForm}       // component to show\n    title=\"Login\"               // make nav bar and give it a title - this is built in\n    initial                     // define the first screen to show\n/>\n`}</code></pre>\n    <div id=\"nav2\"></div>\n    <h3 {...{\n      \"id\": \"-----navigation-in-the-router\"\n    }}>{`---- Navigation in the Router`}</h3>\n    <pre><code parentName=\"pre\" {...{}}>{`// Create a router.js\n\nimport React from 'react';\nimport { Scene, Router } from 'react-native-router-flux';\n\n// scene-target\nimport ExampleComponent from './components/examplecomponent/ExampleComponent';\nimport Table from './components/table/Table';\n\nconst RouterComponent = () => {\n    return (\n        <Router>\n            <Scene key=\"example\" component={ExampleComponent} title=\"App\" />\n            <Scene key=\"table\" component={Table} title=\"Table\" initial />\n        </Router>\n    );\n};\n\nexport default RouterComponent;\n\n// in app.js\n\n...\nimport Router from './router';\n\nconst App = () => {\n\n    const store = createStore(reducers, {}, applyMiddleware(ReduxThunk));\n\n    return (\n        <Provider store={store}>\n            <Router />\n        </Provider>\n    );\n}\n\nexport default App;\n`}</code></pre>\n    <p>{`So how do we move between these scenes?`}</p>\n    <div id=\"nav3\"></div>\n    <h3 {...{\n      \"id\": \"-----navigating-between-routes\"\n    }}>{`---- Navigating between routes`}</h3>\n    <p>{`Navigation will happen from an action.`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`// import actions\nimport { Actions } from 'react-native-router-flux';\n\n// Action Creators\nexport const loginUserSuccess = (dispatch, user) => {\n    dispatch({\n        type: LOGIN_USER_SUCCESS,\n        payload: user\n    });\n\n    Actions.employeeList(); // this method comes from the key property\n};\n`}</code></pre>\n    <div id=\"nav4\"></div>\n    <h3 {...{\n      \"id\": \"-----grouping-scenes-with-buckets\"\n    }}>{`---- Grouping Scenes with 'Buckets'`}</h3>\n    <p>{`Making decisions on how the header should render.`}</p>\n    <p>{`We can do `}<inlineCode parentName=\"p\">{`scene nesting`}</inlineCode>{` to group these screens. There is one 'gotcha' though. Now for the actions, we need to actually use Actions.main().`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`// router.js\n\nconst RouterComponent = () => {\n    return (\n        <Router>\n            <Scene key=\"auth\">\n                <Scene key=\"login\" component={Login} title=\"Login\" />\n            </Scene>\n            <Scene key=\"flow\">\n                <Scene key=\"example\" component={ExampleComponent} title=\"App\" />\n                <Scene\n                    // for action, you normally call Actions.key()\n                    onRight={() => console.log('right!!!')}\n                    rightTitle=\"Add\"\n                    key=\"table\"\n                    component={Table}\n                    title=\"Table\"\n                    initial\n                />\n            </Scene>\n        </Router>\n    );\n};\n`}</code></pre>\n    <p>{`We can use the `}<inlineCode parentName=\"p\">{`initial`}</inlineCode>{` prop within these `}<inlineCode parentName=\"p\">{`buckets`}</inlineCode>{` to let which component within a bucket to have an initial prop`}</p>\n    <h3 {...{\n      \"id\": \"-----actions-to-navigate-between-buckets\"\n    }}>{`---- Actions to navigate between buckets`}</h3>\n    <p>{`These actions can be added using`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`import { Actions } from 'react-native-router-flux';\n\n// Action Creators - exammple thunk action creator\nconst loginUserSuccess = (dispatch, user) => {\n    dispatch({\n        type: LOGIN_USER_SUCCESS,\n        payload: user\n    });\n\n    Actions.employeeList();\n}\n`}</code></pre>\n    <div id=\"nav5\"></div>\n    <h3 {...{\n      \"id\": \"-----form-updates-at-a-reducer-level--dynamic-property-updates\"\n    }}>{`---- Form updates at a reducer level / Dynamic Property updates`}</h3>\n    <p>{`Example reducer function with ES6 dynamic change.`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`export default (state = INITIAL_STATE, action) => {\n    switch (action.type) {\n        case EMPLOYEE_UPDATE:\n            return {...state, [action.payload.prop]: action.payload.value};\n        default:\n            return state;\n    }\n}\n`}</code></pre>\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  "]}]}