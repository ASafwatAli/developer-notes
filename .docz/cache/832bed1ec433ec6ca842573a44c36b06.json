{"remainingRequest":"/Users/okeeffe_d/Project-Imposter/developer-notes/node_modules/babel-loader/lib/index.js?{\"presets\":[[\"/Users/okeeffe_d/Project-Imposter/developer-notes/node_modules/babel-preset-docz/dist/index.js\",{\"flow\":true,\"typescript\":false,\"parseProps\":true}]],\"plugins\":[[\"/Users/okeeffe_d/Project-Imposter/developer-notes/node_modules/docz-utils/lib/named-asset-import.js\",{\"loaderMap\":{\"svg\":{\"ReactComponent\":\"@svgr/webpack?-prettier,-svgo![path]\"}}}],\"/Users/okeeffe_d/Project-Imposter/developer-notes/node_modules/react-hot-loader/babel.js\"],\"babelrc\":false,\"cacheCompression\":false,\"compact\":false}!/Users/okeeffe_d/Project-Imposter/developer-notes/manual/Swift/Swift-3-OOP.md","dependencies":[{"path":"/Users/okeeffe_d/Project-Imposter/developer-notes/manual/Swift/Swift-3-OOP.md","mtime":1548282824972},{"path":"/Users/okeeffe_d/Project-Imposter/developer-notes/node_modules/cache-loader/dist/cjs.js","mtime":1548285281334},{"path":"/Users/okeeffe_d/Project-Imposter/developer-notes/node_modules/babel-loader/lib/index.js","mtime":1548285280890}],"contextDependencies":[],"result":["var _jsxFileName = \"/Users/okeeffe_d/Project-Imposter/developer-notes/manual/Swift/Swift-3-OOP.md\";\n\n(function () {\n  var enterModule = require('react-hot-loader').enterModule;\n\n  enterModule && enterModule(module);\n})();\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport React from 'react';\nimport { MDXTag } from '@mdx-js/tag';\n\nvar MDXContent =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(MDXContent, _React$Component);\n\n  function MDXContent(props) {\n    var _this;\n\n    _classCallCheck(this, MDXContent);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MDXContent).call(this, props));\n    _this.layout = null;\n    return _this;\n  }\n\n  _createClass(MDXContent, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          components = _this$props.components,\n          props = _objectWithoutProperties(_this$props, [\"components\"]);\n\n      return React.createElement(MDXTag, {\n        name: \"wrapper\",\n        components: components,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14\n        },\n        __self: this\n      }, React.createElement(MDXTag, {\n        name: \"h1\",\n        components: components,\n        props: {\n          \"id\": \"swift-3-oop\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      }, \"Swift 3 OOP\"), React.createElement(MDXTag, {\n        name: \"ul\",\n        components: components,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }, React.createElement(MDXTag, {\n        name: \"li\",\n        components: components,\n        parentName: \"ul\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }, React.createElement(MDXTag, {\n        name: \"a\",\n        components: components,\n        parentName: \"li\",\n        props: {\n          \"href\": \"#swift-3-oop\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }, \"Swift 3 OOP\"), React.createElement(MDXTag, {\n        name: \"ul\",\n        components: components,\n        parentName: \"li\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }, React.createElement(MDXTag, {\n        name: \"li\",\n        components: components,\n        parentName: \"ul\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, React.createElement(MDXTag, {\n        name: \"a\",\n        components: components,\n        parentName: \"li\",\n        props: {\n          \"href\": \"#structs\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, \"Structs\")), React.createElement(MDXTag, {\n        name: \"li\",\n        components: components,\n        parentName: \"ul\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, React.createElement(MDXTag, {\n        name: \"a\",\n        components: components,\n        parentName: \"li\",\n        props: {\n          \"href\": \"#instances-of-objects\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, \"Instances of Objects\")), React.createElement(MDXTag, {\n        name: \"li\",\n        components: components,\n        parentName: \"ul\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, React.createElement(MDXTag, {\n        name: \"a\",\n        components: components,\n        parentName: \"li\",\n        props: {\n          \"href\": \"#methods\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, \"Methods\")), React.createElement(MDXTag, {\n        name: \"li\",\n        components: components,\n        parentName: \"ul\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, React.createElement(MDXTag, {\n        name: \"a\",\n        components: components,\n        parentName: \"li\",\n        props: {\n          \"href\": \"#initialisers-and-self\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, \"Initialisers and Self\")), React.createElement(MDXTag, {\n        name: \"li\",\n        components: components,\n        parentName: \"ul\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, React.createElement(MDXTag, {\n        name: \"a\",\n        components: components,\n        parentName: \"li\",\n        props: {\n          \"href\": \"#class\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, \"Class\")), React.createElement(MDXTag, {\n        name: \"li\",\n        components: components,\n        parentName: \"ul\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, React.createElement(MDXTag, {\n        name: \"a\",\n        components: components,\n        parentName: \"li\",\n        props: {\n          \"href\": \"#inheritance\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, \"Inheritance\")), React.createElement(MDXTag, {\n        name: \"li\",\n        components: components,\n        parentName: \"ul\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, React.createElement(MDXTag, {\n        name: \"a\",\n        components: components,\n        parentName: \"li\",\n        props: {\n          \"href\": \"#structs-vs-classes\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, \"Structs vs Classes\"), React.createElement(MDXTag, {\n        name: \"ul\",\n        components: components,\n        parentName: \"li\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, React.createElement(MDXTag, {\n        name: \"li\",\n        components: components,\n        parentName: \"ul\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, React.createElement(MDXTag, {\n        name: \"a\",\n        components: components,\n        parentName: \"li\",\n        props: {\n          \"href\": \"#-----value-type-vs-reference-type\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, \"---- Value type vs Reference type\"))))))), React.createElement(MDXTag, {\n        name: \"hr\",\n        components: components,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }), React.createElement(MDXTag, {\n        name: \"h2\",\n        components: components,\n        props: {\n          \"id\": \"structs\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, \"Structs\"), React.createElement(MDXTag, {\n        name: \"pre\",\n        components: components,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, React.createElement(MDXTag, {\n        name: \"code\",\n        components: components,\n        parentName: \"pre\",\n        props: {},\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, \"let coordinate1: (x: Int, y: Int) = (1,0) //tuple\\ncoordinate1.x\\n\\n// structs are the blueprints\\nstruct Point {\\n  let x: Int\\n  let y: Int\\n}\\n\\n// when defining structs, define the params\\nlet p1 = Point(x: 1, y: 0)\\np1\\n\")), React.createElement(MDXTag, {\n        name: \"hr\",\n        components: components,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }), React.createElement(MDXTag, {\n        name: \"h2\",\n        components: components,\n        props: {\n          \"id\": \"instances-of-objects\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, \"Instances of Objects\"), React.createElement(MDXTag, {\n        name: \"pre\",\n        components: components,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(MDXTag, {\n        name: \"code\",\n        components: components,\n        parentName: \"pre\",\n        props: {},\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, \"// when defining structs, define the params\\nlet p1 = Point(x: 1, y: 0)\\np1\\np1.x\\np1.y\\n\\nstruct User {\\n  let username: String\\n  let password: String\\n}\\n\\nlet Login = User(username: \\\"example@mail.com\\\", password: \\\"123pass\\\")\\nLogin.username\\nLogin.password\\n\")), React.createElement(\"div\", {\n        id: \"newSection\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }), React.createElement(MDXTag, {\n        name: \"hr\",\n        components: components,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }), React.createElement(MDXTag, {\n        name: \"h2\",\n        components: components,\n        props: {\n          \"id\": \"methods\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, \"Methods\"), React.createElement(MDXTag, {\n        name: \"ul\",\n        components: components,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(MDXTag, {\n        name: \"li\",\n        components: components,\n        parentName: \"ul\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, \"Declaring empty arrays that infer a type \", React.createElement(MDXTag, {\n        name: \"inlineCode\",\n        components: components,\n        parentName: \"li\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, \"var results: [Point] = []\")), React.createElement(MDXTag, {\n        name: \"li\",\n        components: components,\n        parentName: \"ul\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, \"Declaring it the preferred way \", React.createElement(MDXTag, {\n        name: \"inlineCode\",\n        components: components,\n        parentName: \"li\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, \"var results = [Point]()\"))), React.createElement(MDXTag, {\n        name: \"pre\",\n        components: components,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(MDXTag, {\n        name: \"code\",\n        components: components,\n        parentName: \"pre\",\n        props: {},\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, \"struct PointTwo {\\n  let x: Int\\n  let y: Int\\n\\n  // three slashes helps with definitions\\n\\n  /// Returns the surrounding points in range of\\n  /// the current one\\n  func points(inRange range: Int = 1) -> [PointTwo] {\\n    var results = [PointTwo]()\\n\\n    let lowerBoundOfXRange = x - range\\n    let upperBoundOfXRange = x + range\\n\\n    let lowerBoundOfYRange = y - range\\n    let upperBoundOfYRange = y + range\\n\\n    for xCoordinate in lowerBoundOfXRange...upperBoundOfXRange {\\n      for yCoordinate in lowerBoundOfYRange...upperBoundOfYRange {\\n        let coordinatePoint = PointTwo(x: xCoordinate, y: yCoordinate)\\n        results.append(coordinatePoint)\\n      }\\n    }\\n\\n    return results\\n  }\\n}\\n\\nlet p2 = PointTwo(x: 1, y: 0)\\np2.x\\np2.y\\n\\nlet rangeReturn = p2.points(inRange: 3)\\nrangeReturn[0].x\\nrangeReturn[3].y\\n\\nstruct Person {\\n    let firstName: String\\n    let lastName: String\\n\\n    func fullName() -> String {\\n      return firstName + \\\" \\\" + lastName\\n    }\\n}\\n\\nlet aPerson = Person(firstName: \\\"Billy\\\", lastName: \\\"Bob\\\")\\nlet myFullName = aPerson.fullName()\\n\")), React.createElement(MDXTag, {\n        name: \"hr\",\n        components: components,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }), React.createElement(MDXTag, {\n        name: \"h2\",\n        components: components,\n        props: {\n          \"id\": \"initialisers-and-self\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, \"Initialisers and Self\"), React.createElement(MDXTag, {\n        name: \"p\",\n        components: components,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, \"Self is generally only used in Swift in the init method or when differentiating\"), React.createElement(MDXTag, {\n        name: \"pre\",\n        components: components,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, React.createElement(MDXTag, {\n        name: \"code\",\n        components: components,\n        parentName: \"pre\",\n        props: {},\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, \"struct Point {\\n  let x: Int\\n  let y: Int\\n\\n  init(x: Int, y: Int) {\\n    self.x = x;\\n    self.y = x;\\n  }\\n}\\n\\nstruct RGBColor {\\n  let red: Double\\n  let green: Double\\n  let blue: Double\\n  let alpha: Double\\n\\n  let description: String\\n\\n  // Add your code below\\n  init(red: Double, green: Double, blue: Double, alpha: Double) {\\n    self.red = red\\n    self.green = green\\n    self.blue = blue\\n    self.alpha = alpha\\n\\n    self.description = \\\"red: (self.red), green: (self.green), blue: (self.blue), alpha: (self.alpha)\\\"\\n  }\\n}\\n\\nlet test = RGBColor(red: 16.0, green: 5.0, blue: 4.3, alpha: 3.0)\\ntest.description\\n\")), React.createElement(\"div\", {\n        id: \"classes\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }), React.createElement(MDXTag, {\n        name: \"hr\",\n        components: components,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }), React.createElement(MDXTag, {\n        name: \"h2\",\n        components: components,\n        props: {\n          \"id\": \"class\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, \"Class\"), React.createElement(MDXTag, {\n        name: \"pre\",\n        components: components,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, React.createElement(MDXTag, {\n        name: \"code\",\n        components: components,\n        parentName: \"pre\",\n        props: {\n          \"className\": \"language-swift\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, \"class Enemy {\\n  var life: Int = 2\\n  let position: Point\\n\\n  init(x: Int, y: Int) {\\n    self.position = Point(x: x, y: y)\\n  }\\n\\n  func decreaseLife(by factor: Int) {\\n    life -= factor\\n  }\\n\\n}\\n\\nstruct Location {\\n  let latitude: Double\\n  let longitude: Double\\n}\\n\\nclass Business {\\n  var name: String\\n  var location: Location\\n\\n  init(name: String, location: Location) {\\n    self.name = name\\n    self.location = location\\n  }\\n}\\n\\nlet someBusiness = Business(name: \\\"Quiry\\\", location: Location(latitude: 341, longitude: 82))\\n\")), React.createElement(\"div\", {\n        id: \"inheritance\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }), React.createElement(MDXTag, {\n        name: \"hr\",\n        components: components,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }), React.createElement(MDXTag, {\n        name: \"h2\",\n        components: components,\n        props: {\n          \"id\": \"inheritance\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }, \"Inheritance\"), React.createElement(MDXTag, {\n        name: \"pre\",\n        components: components,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }, React.createElement(MDXTag, {\n        name: \"code\",\n        components: components,\n        parentName: \"pre\",\n        props: {},\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }, \"class SuperEnemy: Enemy {\\n  let isSuper: Bool = true\\n\\n  override init(x: Int, y: Int) {\\n    super.init(x: x, y: y)\\n    self.life = 50\\n  }\\n}\\n\")), React.createElement(MDXTag, {\n        name: \"pre\",\n        components: components,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      }, React.createElement(MDXTag, {\n        name: \"code\",\n        components: components,\n        parentName: \"pre\",\n        props: {},\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      }, \"class Vehicle {\\n  var numberOfDoors: Int\\n  var numberOfWheels: Int\\n\\n  init(withDoors doors: Int, andWheels wheels: Int) {\\n      self.numberOfDoors = doors\\n      self.numberOfWheels = wheels\\n  }\\n}\\n\\nclass Car: Vehicle {\\n  var numberOfSeats: Int = 4\\n\\n  override init(withDoors doors: Int, andWheels wheels: Int) {\\n    super.init(withDoors: doors, andWheels: wheels)\\n  }\\n\\n}\\n\\nlet someCar = Car(withDoors: 4, andWheels: 4)\\n\")), React.createElement(MDXTag, {\n        name: \"pre\",\n        components: components,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222\n        },\n        __self: this\n      }, React.createElement(MDXTag, {\n        name: \"code\",\n        components: components,\n        parentName: \"pre\",\n        props: {},\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222\n        },\n        __self: this\n      }, \"class Person {\\n  let firstName: String\\n  let lastName: String\\n\\n  init(firstName: String, lastName: String) {\\n    self.firstName = firstName\\n    self.lastName = lastName\\n  }\\n\\n  func fullName() -> String {\\n    return \\\"(firstName) (lastName)\\\"\\n  }\\n}\\n\\n// Enter your code below\\nclass Doctor: Person {\\n\\n  override init(firstName: String, lastName: String) {\\n    super.init(firstName: firstName, lastName: lastName)\\n  }\\n\\n  override func fullName() -> String {\\n    return \\\"Dr. (lastName)\\\"\\n  }\\n}\\n\\nlet someDoctor = Doctor(firstName: \\\"Sam\\\", lastName: \\\"Smith\\\")\\n\")), React.createElement(\"div\", {\n        id: \"final\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250\n        },\n        __self: this\n      }), React.createElement(MDXTag, {\n        name: \"hr\",\n        components: components,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251\n        },\n        __self: this\n      }), React.createElement(MDXTag, {\n        name: \"h2\",\n        components: components,\n        props: {\n          \"id\": \"structs-vs-classes\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252\n        },\n        __self: this\n      }, \"Structs vs Classes\"), React.createElement(MDXTag, {\n        name: \"p\",\n        components: components,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253\n        },\n        __self: this\n      }, \"Distinct line in the sand.\"), React.createElement(MDXTag, {\n        name: \"pre\",\n        components: components,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254\n        },\n        __self: this\n      }, React.createElement(MDXTag, {\n        name: \"code\",\n        components: components,\n        parentName: \"pre\",\n        props: {\n          \"className\": \"language-swift\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254\n        },\n        __self: this\n      }, \"import UIKit\\n\\nvar str = \\\"Hello, playground\\\"\\n\\n\\nstruct User {\\n  var fullName: String\\n  var email: String\\n  var age: Int\\n}\\n\\nvar someUser = User(fullName: \\\"Denis O'Keeffe\\\", email: \\\"test@test\\\", age: 24)\\n\\nvar anotherUser = someUser\\n\\nsomeUser.email = \\\"newemail@email\\\"\\n\\n// remains as test@test\\nanotherUser.email\\n\\nclass Person {\\n  var fullName: String\\n  var email: String\\n  var age: Int\\n\\n  init(name: String, email: String, age: Int) {\\n    self.fullName = name\\n    self.email = email\\n    self.age = age\\n  }\\n}\\n\\nvar somePerson = Person(name: \\\"Tim Cook\\\", email: \\\"tc@apple.com\\\", age: 54)\\n\\nvar anotherPerson = somePerson\\n\\nsomePerson.email = \\\"newemail@email\\\"\\n\\n// newemail@email -> points to the same reference\\nanotherPerson.email\\n\")), React.createElement(\"div\", {\n        id: \"valuevsref\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 295\n        },\n        __self: this\n      }), React.createElement(MDXTag, {\n        name: \"h3\",\n        components: components,\n        props: {\n          \"id\": \"-----value-type-vs-reference-type\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 296\n        },\n        __self: this\n      }, \"---- Value type vs Reference type\"), React.createElement(MDXTag, {\n        name: \"p\",\n        components: components,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 297\n        },\n        __self: this\n      }, \"Values are copied across, references are not. All \", React.createElement(MDXTag, {\n        name: \"inlineCode\",\n        components: components,\n        parentName: \"p\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 297\n        },\n        __self: this\n      }, \"structs\"), \" are value types.\"));\n    }\n  }, {\n    key: \"__reactstandin__regenerateByEval\",\n    // @ts-ignore\n    value: function __reactstandin__regenerateByEval(key, code) {\n      // @ts-ignore\n      this[key] = eval(code);\n    }\n  }]);\n\n  return MDXContent;\n}(React.Component);\n\nexport { MDXContent as default };\n;\n\n(function () {\n  var reactHotLoader = require('react-hot-loader').default;\n\n  var leaveModule = require('react-hot-loader').leaveModule;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(MDXContent, \"MDXContent\", \"/Users/okeeffe_d/Project-Imposter/developer-notes/manual/Swift/Swift-3-OOP.md\");\n  leaveModule(module);\n})();\n\n;\nMDXContent.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"MDXContent\"\n};",{"version":3,"sources":["/Users/okeeffe_d/Project-Imposter/developer-notes/manual/Swift/Swift-3-OOP.md"],"names":["React","MDXTag","MDXContent","props","layout","components","Component"],"mappings":"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","sourcesContent":["\n  import React from 'react'\n  import { MDXTag } from '@mdx-js/tag'\n  \n\nexport default class MDXContent extends React.Component {\n  constructor(props) {\n    super(props)\n    this.layout = null\n  }\n  render() {\n    const { components, ...props } = this.props\n\n    return <MDXTag\n             name=\"wrapper\"\n             \n             components={components}><MDXTag name=\"h1\" components={components} props={{\"id\":\"swift-3-oop\"}}>{`Swift 3 OOP`}</MDXTag>\n{/* TOC */}\n<MDXTag name=\"ul\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"a\" components={components} parentName=\"li\" props={{\"href\":\"#swift-3-oop\"}}>{`Swift 3 OOP`}</MDXTag><MDXTag name=\"ul\" components={components} parentName=\"li\">\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"a\" components={components} parentName=\"li\" props={{\"href\":\"#structs\"}}>{`Structs`}</MDXTag></MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"a\" components={components} parentName=\"li\" props={{\"href\":\"#instances-of-objects\"}}>{`Instances of Objects`}</MDXTag></MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"a\" components={components} parentName=\"li\" props={{\"href\":\"#methods\"}}>{`Methods`}</MDXTag></MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"a\" components={components} parentName=\"li\" props={{\"href\":\"#initialisers-and-self\"}}>{`Initialisers and Self`}</MDXTag></MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"a\" components={components} parentName=\"li\" props={{\"href\":\"#class\"}}>{`Class`}</MDXTag></MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"a\" components={components} parentName=\"li\" props={{\"href\":\"#inheritance\"}}>{`Inheritance`}</MDXTag></MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"a\" components={components} parentName=\"li\" props={{\"href\":\"#structs-vs-classes\"}}>{`Structs vs Classes`}</MDXTag><MDXTag name=\"ul\" components={components} parentName=\"li\">\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"a\" components={components} parentName=\"li\" props={{\"href\":\"#-----value-type-vs-reference-type\"}}>{`---- Value type vs Reference type`}</MDXTag></MDXTag>\n</MDXTag></MDXTag>\n</MDXTag></MDXTag>\n</MDXTag>\n{/* /TOC */}\n<MDXTag name=\"hr\" components={components}></MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"structs\"}}>{`Structs`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{}}>{`let coordinate1: (x: Int, y: Int) = (1,0) //tuple\ncoordinate1.x\n\n// structs are the blueprints\nstruct Point {\n  let x: Int\n  let y: Int\n}\n\n// when defining structs, define the params\nlet p1 = Point(x: 1, y: 0)\np1\n`}</MDXTag></MDXTag>\n<MDXTag name=\"hr\" components={components}></MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"instances-of-objects\"}}>{`Instances of Objects`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{}}>{`// when defining structs, define the params\nlet p1 = Point(x: 1, y: 0)\np1\np1.x\np1.y\n\nstruct User {\n  let username: String\n  let password: String\n}\n\nlet Login = User(username: \"example@mail.com\", password: \"123pass\")\nLogin.username\nLogin.password\n`}</MDXTag></MDXTag>\n<div id=\"newSection\"></div>\n<MDXTag name=\"hr\" components={components}></MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"methods\"}}>{`Methods`}</MDXTag>\n<MDXTag name=\"ul\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Declaring empty arrays that infer a type `}<MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`var results: [Point] = []`}</MDXTag></MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Declaring it the preferred way `}<MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`var results = [Point]()`}</MDXTag></MDXTag>\n</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{}}>{`struct PointTwo {\n  let x: Int\n  let y: Int\n\n  // three slashes helps with definitions\n\n  /// Returns the surrounding points in range of\n  /// the current one\n  func points(inRange range: Int = 1) -> [PointTwo] {\n    var results = [PointTwo]()\n\n    let lowerBoundOfXRange = x - range\n    let upperBoundOfXRange = x + range\n\n    let lowerBoundOfYRange = y - range\n    let upperBoundOfYRange = y + range\n\n    for xCoordinate in lowerBoundOfXRange...upperBoundOfXRange {\n      for yCoordinate in lowerBoundOfYRange...upperBoundOfYRange {\n        let coordinatePoint = PointTwo(x: xCoordinate, y: yCoordinate)\n        results.append(coordinatePoint)\n      }\n    }\n\n    return results\n  }\n}\n\nlet p2 = PointTwo(x: 1, y: 0)\np2.x\np2.y\n\nlet rangeReturn = p2.points(inRange: 3)\nrangeReturn[0].x\nrangeReturn[3].y\n\nstruct Person {\n    let firstName: String\n    let lastName: String\n\n    func fullName() -> String {\n      return firstName + \" \" + lastName\n    }\n}\n\nlet aPerson = Person(firstName: \"Billy\", lastName: \"Bob\")\nlet myFullName = aPerson.fullName()\n`}</MDXTag></MDXTag>\n<MDXTag name=\"hr\" components={components}></MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"initialisers-and-self\"}}>{`Initialisers and Self`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Self is generally only used in Swift in the init method or when differentiating`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{}}>{`struct Point {\n  let x: Int\n  let y: Int\n\n  init(x: Int, y: Int) {\n    self.x = x;\n    self.y = x;\n  }\n}\n\nstruct RGBColor {\n  let red: Double\n  let green: Double\n  let blue: Double\n  let alpha: Double\n\n  let description: String\n\n  // Add your code below\n  init(red: Double, green: Double, blue: Double, alpha: Double) {\n    self.red = red\n    self.green = green\n    self.blue = blue\n    self.alpha = alpha\n\n    self.description = \"red: \\(self.red), green: \\(self.green), blue: \\(self.blue), alpha: \\(self.alpha)\"\n  }\n}\n\nlet test = RGBColor(red: 16.0, green: 5.0, blue: 4.3, alpha: 3.0)\ntest.description\n`}</MDXTag></MDXTag>\n<div id=\"classes\"></div>\n<MDXTag name=\"hr\" components={components}></MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"class\"}}>{`Class`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-swift\"}}>{`class Enemy {\n  var life: Int = 2\n  let position: Point\n\n  init(x: Int, y: Int) {\n    self.position = Point(x: x, y: y)\n  }\n\n  func decreaseLife(by factor: Int) {\n    life -= factor\n  }\n\n}\n\nstruct Location {\n  let latitude: Double\n  let longitude: Double\n}\n\nclass Business {\n  var name: String\n  var location: Location\n\n  init(name: String, location: Location) {\n    self.name = name\n    self.location = location\n  }\n}\n\nlet someBusiness = Business(name: \"Quiry\", location: Location(latitude: 341, longitude: 82))\n`}</MDXTag></MDXTag>\n<div id=\"inheritance\"></div>\n<MDXTag name=\"hr\" components={components}></MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"inheritance\"}}>{`Inheritance`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{}}>{`class SuperEnemy: Enemy {\n  let isSuper: Bool = true\n\n  override init(x: Int, y: Int) {\n    super.init(x: x, y: y)\n    self.life = 50\n  }\n}\n`}</MDXTag></MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{}}>{`class Vehicle {\n  var numberOfDoors: Int\n  var numberOfWheels: Int\n\n  init(withDoors doors: Int, andWheels wheels: Int) {\n      self.numberOfDoors = doors\n      self.numberOfWheels = wheels\n  }\n}\n\nclass Car: Vehicle {\n  var numberOfSeats: Int = 4\n\n  override init(withDoors doors: Int, andWheels wheels: Int) {\n    super.init(withDoors: doors, andWheels: wheels)\n  }\n\n}\n\nlet someCar = Car(withDoors: 4, andWheels: 4)\n`}</MDXTag></MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{}}>{`class Person {\n  let firstName: String\n  let lastName: String\n\n  init(firstName: String, lastName: String) {\n    self.firstName = firstName\n    self.lastName = lastName\n  }\n\n  func fullName() -> String {\n    return \"\\(firstName) \\(lastName)\"\n  }\n}\n\n// Enter your code below\nclass Doctor: Person {\n\n  override init(firstName: String, lastName: String) {\n    super.init(firstName: firstName, lastName: lastName)\n  }\n\n  override func fullName() -> String {\n    return \"Dr. \\(lastName)\"\n  }\n}\n\nlet someDoctor = Doctor(firstName: \"Sam\", lastName: \"Smith\")\n`}</MDXTag></MDXTag>\n<div id=\"final\"></div>\n<MDXTag name=\"hr\" components={components}></MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"structs-vs-classes\"}}>{`Structs vs Classes`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Distinct line in the sand.`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-swift\"}}>{`import UIKit\n\nvar str = \"Hello, playground\"\n\n\nstruct User {\n  var fullName: String\n  var email: String\n  var age: Int\n}\n\nvar someUser = User(fullName: \"Denis O'Keeffe\", email: \"test@test\", age: 24)\n\nvar anotherUser = someUser\n\nsomeUser.email = \"newemail@email\"\n\n// remains as test@test\nanotherUser.email\n\nclass Person {\n  var fullName: String\n  var email: String\n  var age: Int\n\n  init(name: String, email: String, age: Int) {\n    self.fullName = name\n    self.email = email\n    self.age = age\n  }\n}\n\nvar somePerson = Person(name: \"Tim Cook\", email: \"tc@apple.com\", age: 54)\n\nvar anotherPerson = somePerson\n\nsomePerson.email = \"newemail@email\"\n\n// newemail@email -> points to the same reference\nanotherPerson.email\n`}</MDXTag></MDXTag>\n<div id=\"valuevsref\"></div>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"-----value-type-vs-reference-type\"}}>{`---- Value type vs Reference type`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Values are copied across, references are not. All `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`structs`}</MDXTag>{` are value types.`}</MDXTag>\n           </MDXTag>\n  }\n}\n  "]}]}