{"remainingRequest":"/Users/okeeffe_d/Business/Documentation/node_modules/babel-loader/lib/index.js?{\"presets\":[[\"/Users/okeeffe_d/Business/Documentation/node_modules/babel-preset-docz/dist/index.js\",{\"flow\":true,\"typescript\":false,\"parseProps\":true}]],\"plugins\":[[\"/Users/okeeffe_d/Business/Documentation/node_modules/docz-utils/lib/named-asset-import.js\",{\"loaderMap\":{\"svg\":{\"ReactComponent\":\"@svgr/webpack?-prettier,-svgo![path]\"}}}]],\"babelrc\":false,\"cacheCompression\":true,\"compact\":true}!/Users/okeeffe_d/Business/Documentation/manual/Unity/How-To-Make-A-Video-Game.md","dependencies":[{"path":"/Users/okeeffe_d/Business/Documentation/manual/Unity/How-To-Make-A-Video-Game.md","mtime":1548209344483},{"path":"/Users/okeeffe_d/Business/Documentation/node_modules/cache-loader/dist/cjs.js","mtime":1548134640245},{"path":"/Users/okeeffe_d/Business/Documentation/node_modules/babel-loader/lib/index.js","mtime":1548134640227}],"contextDependencies":[],"result":["function _typeof(obj){if(typeof Symbol===\"function\"&&typeof Symbol.iterator===\"symbol\"){_typeof=function _typeof(obj){return typeof obj;};}else{_typeof=function _typeof(obj){return obj&&typeof Symbol===\"function\"&&obj.constructor===Symbol&&obj!==Symbol.prototype?\"symbol\":typeof obj;};}return _typeof(obj);}function _objectWithoutProperties(source,excluded){if(source==null)return{};var target=_objectWithoutPropertiesLoose(source,excluded);var key,i;if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++){key=sourceSymbolKeys[i];if(excluded.indexOf(key)>=0)continue;if(!Object.prototype.propertyIsEnumerable.call(source,key))continue;target[key]=source[key];}}return target;}function _objectWithoutPropertiesLoose(source,excluded){if(source==null)return{};var target={};var sourceKeys=Object.keys(source);var key,i;for(i=0;i<sourceKeys.length;i++){key=sourceKeys[i];if(excluded.indexOf(key)>=0)continue;target[key]=source[key];}return target;}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\");}}function _defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}function _createClass(Constructor,protoProps,staticProps){if(protoProps)_defineProperties(Constructor.prototype,protoProps);if(staticProps)_defineProperties(Constructor,staticProps);return Constructor;}function _possibleConstructorReturn(self,call){if(call&&(_typeof(call)===\"object\"||typeof call===\"function\")){return call;}return _assertThisInitialized(self);}function _assertThisInitialized(self){if(self===void 0){throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");}return self;}function _getPrototypeOf(o){_getPrototypeOf=Object.setPrototypeOf?Object.getPrototypeOf:function _getPrototypeOf(o){return o.__proto__||Object.getPrototypeOf(o);};return _getPrototypeOf(o);}function _inherits(subClass,superClass){if(typeof superClass!==\"function\"&&superClass!==null){throw new TypeError(\"Super expression must either be null or a function\");}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,writable:true,configurable:true}});if(superClass)_setPrototypeOf(subClass,superClass);}function _setPrototypeOf(o,p){_setPrototypeOf=Object.setPrototypeOf||function _setPrototypeOf(o,p){o.__proto__=p;return o;};return _setPrototypeOf(o,p);}import React from'react';import{MDXTag}from'@mdx-js/tag';var MDXContent=/*#__PURE__*/function(_React$Component){_inherits(MDXContent,_React$Component);function MDXContent(props){var _this;_classCallCheck(this,MDXContent);_this=_possibleConstructorReturn(this,_getPrototypeOf(MDXContent).call(this,props));_this.layout=null;return _this;}_createClass(MDXContent,[{key:\"render\",value:function render(){var _this$props=this.props,components=_this$props.components,props=_objectWithoutProperties(_this$props,[\"components\"]);return React.createElement(MDXTag,{name:\"wrapper\",components:components},React.createElement(MDXTag,{name:\"h1\",components:components,props:{\"id\":\"how-to-make-a-video-game\"}},\"How to make a video game\"),React.createElement(MDXTag,{name:\"ul\",components:components},React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},React.createElement(MDXTag,{name:\"a\",components:components,parentName:\"li\",props:{\"href\":\"#how-to-make-a-video-game\"}},\"How to make a video game\"),\" - \",React.createElement(MDXTag,{name:\"a\",components:components,parentName:\"li\",props:{\"href\":\"#what-is-a-game-engine\"}},\"What is a game engine?\"),React.createElement(MDXTag,{name:\"ul\",components:components,parentName:\"li\"},React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},React.createElement(MDXTag,{name:\"a\",components:components,parentName:\"li\",props:{\"href\":\"#part-2\"}},\"Part 2\"),React.createElement(MDXTag,{name:\"ul\",components:components,parentName:\"li\"},React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},React.createElement(MDXTag,{name:\"a\",components:components,parentName:\"li\",props:{\"href\":\"#unity-interface\"}},\"Unity Interface\"),React.createElement(MDXTag,{name:\"ul\",components:components,parentName:\"li\"},React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},React.createElement(MDXTag,{name:\"a\",components:components,parentName:\"li\",props:{\"href\":\"#prefabs\"}},\"Prefabs\")))),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},React.createElement(MDXTag,{name:\"a\",components:components,parentName:\"li\",props:{\"href\":\"#setup-the-project\"}},\"Setup the project\")),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},React.createElement(MDXTag,{name:\"a\",components:components,parentName:\"li\",props:{\"href\":\"#navigating-the-scene-view\"}},\"Navigating the Scene View\")),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},React.createElement(MDXTag,{name:\"a\",components:components,parentName:\"li\",props:{\"href\":\"#position-the-camera\"}},\"Position the camera\")),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},React.createElement(MDXTag,{name:\"a\",components:components,parentName:\"li\",props:{\"href\":\"#image-effects-and-asset-stores\"}},\"Image effects and asset stores\")))),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},React.createElement(MDXTag,{name:\"a\",components:components,parentName:\"li\",props:{\"href\":\"#programming-games\"}},\"Programming Games\"),React.createElement(MDXTag,{name:\"ul\",components:components,parentName:\"li\"},React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},React.createElement(MDXTag,{name:\"a\",components:components,parentName:\"li\",props:{\"href\":\"#programming-with-c-with-unity\"}},\"Programming with C# with Unity\")),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},React.createElement(MDXTag,{name:\"a\",components:components,parentName:\"li\",props:{\"href\":\"#gather-player-input\"}},\"Gather Player Input\")),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},React.createElement(MDXTag,{name:\"a\",components:components,parentName:\"li\",props:{\"href\":\"#moving-a-player-with-animation\"}},\"Moving a player with animation\")),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},React.createElement(MDXTag,{name:\"a\",components:components,parentName:\"li\",props:{\"href\":\"#quaternions\"}},\"Quaternions\"),React.createElement(MDXTag,{name:\"ul\",components:components,parentName:\"li\"},React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},React.createElement(MDXTag,{name:\"a\",components:components,parentName:\"li\",props:{\"href\":\"#target-rotation\"}},\"Target rotation\")))),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},React.createElement(MDXTag,{name:\"a\",components:components,parentName:\"li\",props:{\"href\":\"#making-a-follow-camera\"}},\"Making a follow camera\")))),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},React.createElement(MDXTag,{name:\"a\",components:components,parentName:\"li\",props:{\"href\":\"#section-3\"}},\"Section 3\"),React.createElement(MDXTag,{name:\"ul\",components:components,parentName:\"li\"},React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},React.createElement(MDXTag,{name:\"a\",components:components,parentName:\"li\",props:{\"href\":\"#adding-the-flies-to-the-swamp\"}},\"Adding the flies to the swamp\")),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},React.createElement(MDXTag,{name:\"a\",components:components,parentName:\"li\",props:{\"href\":\"#adding-the-fly-pickup\"}},\"Adding the Fly Pickup\"),React.createElement(MDXTag,{name:\"ul\",components:components,parentName:\"li\"},React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},React.createElement(MDXTag,{name:\"a\",components:components,parentName:\"li\",props:{\"href\":\"#pickup-particles\"}},\"Pickup Particles\")))),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},React.createElement(MDXTag,{name:\"a\",components:components,parentName:\"li\",props:{\"href\":\"#creating-the-enemy-in-the-game\"}},\"Creating the enemy in the game\")),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},React.createElement(MDXTag,{name:\"a\",components:components,parentName:\"li\",props:{\"href\":\"#monitor-player-health\"}},\"Monitor Player Health\")),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},React.createElement(MDXTag,{name:\"a\",components:components,parentName:\"li\",props:{\"href\":\"#managing-the-game-state\"}},\"Managing the game state\")))),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},React.createElement(MDXTag,{name:\"a\",components:components,parentName:\"li\",props:{\"href\":\"#adding-audio\"}},\"Adding Audio\"),React.createElement(MDXTag,{name:\"ul\",components:components,parentName:\"li\"},React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},React.createElement(MDXTag,{name:\"a\",components:components,parentName:\"li\",props:{\"href\":\"#game-audio\"}},\"Game audio\")),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},React.createElement(MDXTag,{name:\"a\",components:components,parentName:\"li\",props:{\"href\":\"#controlling-sounds-on-game-objects\"}},\"Controlling sounds on game objects\")),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},React.createElement(MDXTag,{name:\"a\",components:components,parentName:\"li\",props:{\"href\":\"#audio-mixing\"}},\"Audio mixing\")),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},React.createElement(MDXTag,{name:\"a\",components:components,parentName:\"li\",props:{\"href\":\"#exporting-the-game\"}},\"Exporting the game\"))))))),React.createElement(MDXTag,{name:\"p\",components:components},\"How are games made?\"),React.createElement(MDXTag,{name:\"ul\",components:components},React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"Game designers\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"Game artists\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"Game developers\")),React.createElement(MDXTag,{name:\"p\",components:components},\"These roles can be between one or thousands of people.\"),React.createElement(MDXTag,{name:\"p\",components:components},\"Game artists deal with what you see and hear in the game.\"),React.createElement(MDXTag,{name:\"h3\",components:components,props:{\"id\":\"what-is-a-game-engine\"}},\"What is a game engine?\"),React.createElement(MDXTag,{name:\"p\",components:components},\"Game engines help deal with things like the physics and rendering graphics.\"),React.createElement(MDXTag,{name:\"p\",components:components},\"A game engine is a framework for building games that helps coordinate things like assets and gives you all the tools you need to start coding.\"),React.createElement(MDXTag,{name:\"p\",components:components},\"A game engine is not a 3D art engine.\"),React.createElement(MDXTag,{name:\"p\",components:components},\"We are Unity as it is easier to learn when you are just getting started.\"),React.createElement(MDXTag,{name:\"h2\",components:components,props:{\"id\":\"part-2\"}},\"Part 2\"),React.createElement(MDXTag,{name:\"h3\",components:components,props:{\"id\":\"unity-interface\"}},\"Unity Interface\"),React.createElement(MDXTag,{name:\"p\",components:components},\"Create a \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"_Scenes\"),\" folder.\"),React.createElement(MDXTag,{name:\"p\",components:components},\"Game assets are \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"a piece of media for the game\"),\". This could be sounds, scripts or models etc.\"),React.createElement(MDXTag,{name:\"h4\",components:components,props:{\"id\":\"prefabs\"}},\"Prefabs\"),React.createElement(MDXTag,{name:\"p\",components:components},\"Stores several objects together. An example \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"prefab\"),\" is the frog which contains the 3d model, the texture and the animation together.\"),React.createElement(MDXTag,{name:\"h3\",components:components,props:{\"id\":\"setup-the-project\"}},\"Setup the project\"),React.createElement(MDXTag,{name:\"p\",components:components},\"Games use \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"real time rendering\"),\" where it is drawn at the frame rate. Generally you want to aim for 60fps or higher. This will make is look as smooth as possible.\"),React.createElement(MDXTag,{name:\"p\",components:components},\"We can go to \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"Window > Lighting > Settings\"),\" to adjust things about how the scene is lit.\"),React.createElement(MDXTag,{name:\"p\",components:components},\"To adjust the player settings go to \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"Edit > Project Settings > Player\"),\".\"),React.createElement(MDXTag,{name:\"p\",components:components},\"For quality, go to \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"Edit > Project Settings > Quality\"),\".\"),React.createElement(MDXTag,{name:\"h3\",components:components,props:{\"id\":\"navigating-the-scene-view\"}},\"Navigating the Scene View\"),React.createElement(MDXTag,{name:\"p\",components:components},\"The \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"environment\"),\" prefab links a bunch of Maya elements and groups them as a prefab.\"),React.createElement(MDXTag,{name:\"p\",components:components},\"Our environment prefab already has a light associated with it. Ensure after adding that you re-generate the light in the settings.\"),React.createElement(MDXTag,{name:\"p\",components:components},\"Anything with a green square is outlining a game object.\"),React.createElement(MDXTag,{name:\"p\",components:components},\"After selecting an object, you can use the 3d axis to change the transform of the axis.\"),React.createElement(MDXTag,{name:\"p\",components:components},\"On the top left, we can change the tools from position to rotation etc and with similar methods to before, we can rotate the axis.\"),React.createElement(MDXTag,{name:\"p\",components:components},\"We can also just use the \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"qwer\"),\" keys to change between tools.\"),React.createElement(MDXTag,{name:\"p\",components:components},\"We can also switch between \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"global\"),\" and \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"local\"),\" space to help move things around.\"),React.createElement(MDXTag,{name:\"h3\",components:components,props:{\"id\":\"position-the-camera\"}},\"Position the camera\"),React.createElement(MDXTag,{name:\"p\",components:components},\"The scenes looks good so far, but it we need to update the camera.\"),React.createElement(MDXTag,{name:\"p\",components:components},\"At the top of the scene window, we have \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"scene\"),\", \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"game\"),\" tabs. If we select \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"game\"),\", we get to see how the game will look when we play it. We can either write code to control to camera or change the transform.\"),React.createElement(MDXTag,{name:\"h3\",components:components,props:{\"id\":\"image-effects-and-asset-stores\"}},\"Image effects and asset stores\"),React.createElement(MDXTag,{name:\"p\",components:components},\"An image effect can change things like colours etc.\"),React.createElement(MDXTag,{name:\"p\",components:components},\"Once we click on the asset store, we can build or share models to use.\"),React.createElement(MDXTag,{name:\"p\",components:components},\"Unity is component based so we can add things that way. We can now create a post processing profile to use.\"),React.createElement(MDXTag,{name:\"h2\",components:components,props:{\"id\":\"programming-games\"}},\"Programming Games\"),React.createElement(MDXTag,{name:\"h3\",components:components,props:{\"id\":\"programming-with-c-with-unity\"}},\"Programming with C# with Unity\"),React.createElement(MDXTag,{name:\"p\",components:components},\"JavaScript is also able to be used, but far less adopted by the Unity commmunity.\"),React.createElement(MDXTag,{name:\"p\",components:components},\"After creating a file, you will run into the \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"Start\"),\" and \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"Update\"),\" methods that are able to run at each frame so that we can edit the code to do specific things.\"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{\"className\":\"language-csharp\"}},\"using System.Collections;\\nusing System.Collections.Generic;\\nusing UnityEngine;\\n\\npublic class PlayerMovement : MonoBehaviour {\\n    private Animator playerAnimator;\\n    private float moveHorizontal;\\n    private float moveVertical;\\n    private Vector3 movement;\\n\\n    // Use this for initialization\\n    void Start () {\\n\\n    }\\n\\n    // Update is called once per frame\\n    void Update () {\\n\\n    }\\n}\\n\")),React.createElement(MDXTag,{name:\"p\",components:components},\"Public and private are differing \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"accessibility levels\"),\". The second keyword in a declaration is the \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"type\"),\".\"),React.createElement(MDXTag,{name:\"h3\",components:components,props:{\"id\":\"gather-player-input\"}},\"Gather Player Input\"),React.createElement(MDXTag,{name:\"p\",components:components},\"We need to record which button they are pressing in each frame.\"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{\"className\":\"language-csharp\"}},\"using System.Collections;\\nusing System.Collections.Generic;\\nusing UnityEngine;\\n\\npublic class PlayerMovement : MonoBehaviour {\\n    private Animator playerAnimator;\\n    private float moveHorizontal;\\n    private float moveVertical;\\n    private Vector3 movement;\\n\\n    // Use this for initialization\\n    void Start () {\\n\\n    }\\n\\n    // Update is called once per frame\\n    void Update () {\\n        moveHorizontal = Input.GetAxisRaw(\\\"Horizontal\\\");\\n        moveVertical = Input.GetAxisRaw(\\\"Vertical\\\");\\n\\n        movement = new Vector3(moveHorizontal, 0.0f, moveVertical);\\n    }\\n}\\n\")),React.createElement(MDXTag,{name:\"h3\",components:components,props:{\"id\":\"moving-a-player-with-animation\"}},\"Moving a player with animation\"),React.createElement(MDXTag,{name:\"p\",components:components},\"After adding the script to update the script, we need to animate the frog.\"),React.createElement(MDXTag,{name:\"p\",components:components},\"The animator components with now be on the inspector for the player.\"),React.createElement(MDXTag,{name:\"p\",components:components},\"We will use the playerAnimator to access to Animator component.\"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{\"className\":\"language-csharp\"}},\"using System.Collections;\\nusing System.Collections.Generic;\\nusing UnityEngine;\\n\\npublic class PlayerMovement : MonoBehaviour {\\n    private Animator playerAnimator;\\n    private float moveHorizontal;\\n    private float moveVertical;\\n    private Vector3 movement;\\n\\n    // Use this for initialization\\n    void Start () {\\n        // special method to get the \\\"Animator\\\" component\\n        playerAnimator = GetComponent<Animator>();\\n    }\\n\\n    // Update is called once per frame\\n    void Update () {\\n        moveHorizontal = Input.GetAxisRaw(\\\"Horizontal\\\");\\n        moveVertical = Input.GetAxisRaw(\\\"Vertical\\\");\\n\\n        movement = new Vector3(moveHorizontal, 0.0f, moveVertical);\\n    }\\n\\n    // this is code that runs after the `update` method\\n    // this method doesn't run that often without\\n    // significant gameplay slow down\\n    void FixedUpdate() {\\n        if (movement != Vector3.zero) {\\n            playerAnimator.SetFloat(\\\"Speed\\\", 3f);\\n        } else {\\n            playerAnimator.SetFloat(\\\"Speed\\\", 0);\\n        }\\n    }\\n}\\n\")),React.createElement(MDXTag,{name:\"p\",components:components},\"So far we haven't told the frog how to change direction or to have the camera follow the movement.\"),React.createElement(MDXTag,{name:\"h3\",components:components,props:{\"id\":\"quaternions\"}},\"Quaternions\"),React.createElement(MDXTag,{name:\"p\",components:components},\"Behind the scenes, Unity stores the rotational values as \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"Quaternions\"),\". Most games ending will use these to solve rotational issues.\"),React.createElement(MDXTag,{name:\"h4\",components:components,props:{\"id\":\"target-rotation\"}},\"Target rotation\"),React.createElement(MDXTag,{name:\"p\",components:components},\"The rigid body and box collider is how the objects like \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"Player\"),\" can interact with the physics and turning.\"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{\"className\":\"language-csharp\"}},\"using System.Collections;\\nusing System.Collections.Generic;\\nusing UnityEngine;\\n\\npublic class PlayerMovement : MonoBehaviour {\\n    private Animator playerAnimator;\\n    private float moveHorizontal;\\n    private float moveVertical;\\n    private Vector3 movement;\\n    private float turningSpeed = 20f;\\n    private Rigidbody playerRigidBody;\\n\\n    // Use this for initialization\\n    void Start () {\\n        // Gather components from the player object\\n        // special method to get the \\\"Animator\\\" component\\n        playerAnimator = GetComponent<Animator> ();\\n        playerRigidBody = GetComponent<Rigidbody> ();\\n    }\\n\\n    // Update is called once per frame\\n    void Update () {\\n        moveHorizontal = Input.GetAxisRaw (\\\"Horizontal\\\");\\n        moveVertical = Input.GetAxisRaw (\\\"Vertical\\\");\\n\\n        movement = new Vector3(moveHorizontal, 0.0f, moveVertical);\\n    }\\n\\n    // this is code that runs after the `update` method\\n    // this method doesn't run that often without\\n    // significant gameplay slow down\\n    void FixedUpdate() {\\n        if (movement != Vector3.zero) {\\n            playerAnimator.SetFloat (\\\"Speed\\\", 3f);\\n        } else {\\n            playerAnimator.SetFloat (\\\"Speed\\\", 0);\\n        }\\n    }\\n}\\n\")),React.createElement(MDXTag,{name:\"p\",components:components},\"We need to perform a \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"Lerp\"),\" to change the variable from one to another over time.\"),React.createElement(MDXTag,{name:\"p\",components:components},\"Unity also doesn't save any change settings when you are playing the game.\"),React.createElement(MDXTag,{name:\"h3\",components:components,props:{\"id\":\"making-a-follow-camera\"}},\"Making a follow camera\"),React.createElement(MDXTag,{name:\"p\",components:components},\"This will have the camera to always follow the parent.\"),React.createElement(MDXTag,{name:\"p\",components:components},\"We can use \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"[SerializeField]\"),\" to expose fields from the code into the inspector.\"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{\"className\":\"language-csharp\"}},\"using System.Collections;\\nusing System.Collections.Generic;\\nusing UnityEngine;\\n\\npublic class FollowCamera : MonoBehaviour {\\n\\n    [SerializeField]\\n    private Transform player;\\n    [SerializeField]\\n    private Vector3 offset;\\n    private float cameraFollowSpeed = 5f;\\n\\n    // Update is called once per frame\\n    void Update () {\\n        Vector3 newPosition = player.position + offset;\\n\\n        // Smooth transition\\n        transform.position = Vector3.Lerp(transform.position, newPosition, cameraFollowSpeed + Time.deltaTime);\\n    }\\n}\\n\")),React.createElement(MDXTag,{name:\"h2\",components:components,props:{\"id\":\"section-3\"}},\"Section 3\"),React.createElement(MDXTag,{name:\"h3\",components:components,props:{\"id\":\"adding-the-flies-to-the-swamp\"}},\"Adding the flies to the swamp\"),React.createElement(MDXTag,{name:\"p\",components:components},\"Let's add an objective to the game (pickup).\"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{\"className\":\"language-csharp\"}},\"using System.Collections;\\nusing System.Collections.Generic;\\nusing UnityEngine;\\n\\npublic class FlyMovement : MonoBehaviour {\\n    [SerializeField]\\n    private Transform center;\\n    private float flySpeed;\\n\\n    // Use this for initialization\\n    void Start () {\\n        flySpeed = Random.Range (300f, 700f);\\n    }\\n\\n    // Update is called once per frame\\n    void Update () {\\n        transform.RotateAround (center.position, Vector3.up, flySpeed * Time.deltaTime);\\n    }\\n}\\n\")),React.createElement(MDXTag,{name:\"h3\",components:components,props:{\"id\":\"adding-the-fly-pickup\"}},\"Adding the Fly Pickup\"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{\"className\":\"language-csharp\"}},\"using System.Collections;\\nusing System.Collections.Generic;\\nusing UnityEngine;\\n\\npublic class FlyPickup : MonoBehaviour {\\n    // Trigger\\n    void OnTriggerEnter(Collider other) {\\n        // if collider is the player, execute...\\n        if (other.CompareTag (\\\"Player\\\")) {\\n            Destroy (gameObject);\\n        }\\n    }\\n}\\n\")),React.createElement(MDXTag,{name:\"h4\",components:components,props:{\"id\":\"pickup-particles\"}},\"Pickup Particles\"),React.createElement(MDXTag,{name:\"p\",components:components},\"Particle systems are a game object which generates multiple systems.\"),React.createElement(MDXTag,{name:\"p\",components:components},\"As for their destruction:\"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{\"className\":\"language-csharp\"}},\"using System.Collections;\\nusing System.Collections.Generic;\\nusing UnityEngine;\\n\\npublic class PickupParticlesDestruction : MonoBehaviour {\\n\\n    // Use this for initialization\\n    void Start () {\\n        Destroy (gameObject, 5f);\\n    }\\n}\\n\")),React.createElement(MDXTag,{name:\"p\",components:components},\"You can also create scripts that aren't attached to a 3d model in the scene view.\"),React.createElement(MDXTag,{name:\"p\",components:components},\"You can create an empty object from the left hand sidebar. Reset the transform and rename.\"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{\"className\":\"language-csharp\"}},\"// Fly Spawner\\nusing System.Collections;\\nusing System.Collections.Generic;\\nusing UnityEngine;\\n\\npublic class FlyPickup : MonoBehaviour {\\n    [SerializeField]\\n    private GameObject pickupPrefab;\\n\\n    // Trigger\\n    void OnTriggerEnter(Collider other) {\\n        // if collider is the player, execute...\\n        if (other.CompareTag (\\\"Player\\\")) {\\n            // add pickup particles\\n            // Quaternion.identity returns no rotation\\n            Instantiate (pickupPrefab, transform.position, Quaternion.identity);\\n            // Decrement total flies\\n            FlySpawner.totalFlies--;\\n            Destroy (gameObject);\\n        }\\n    }\\n}\\n\")),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{\"className\":\"language-csharp\"}},\"// Fly Pickup\\nusing System.Collections;\\nusing System.Collections.Generic;\\nusing UnityEngine;\\n\\npublic class FlyPickup : MonoBehaviour {\\n    [SerializeField]\\n    private GameObject pickupPrefab;\\n\\n    // Trigger\\n    void OnTriggerEnter(Collider other) {\\n        // if collider is the player, execute...\\n        if (other.CompareTag (\\\"Player\\\")) {\\n            // add pickup particles\\n            // Quaternion.identity returns no rotation\\n            Instantiate (pickupPrefab, transform.position, Quaternion.identity);\\n            // Decrement total flies\\n            FlySpawner.totalFlies--;\\n            Destroy (gameObject);\\n        }\\n    }\\n}\\n\")),React.createElement(MDXTag,{name:\"h3\",components:components,props:{\"id\":\"creating-the-enemy-in-the-game\"}},\"Creating the enemy in the game\"),React.createElement(MDXTag,{name:\"p\",components:components},\"The bird game object needs to know where the player is. It's known as path finding.\"),React.createElement(MDXTag,{name:\"p\",components:components},\"Unity makes path finding very easy.\"),React.createElement(MDXTag,{name:\"p\",components:components},\"With the \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"Nav Mesh Agent\"),\", you can set the following for the bird:\"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{}},\"Speed: 5\\nAngular Speed: 720\\nStopping Distance: 5\\nRadius: 1\\nHeight: 4\\n\")),React.createElement(MDXTag,{name:\"p\",components:components},\"We now need to create a \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"Nav Mesh\"),\". The \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"NavMeshAgent\"),\" allows us to set a destination target that the \\\"enemy\\\" can follow. It is a component that can be attached to a game object so that it can interact with the \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"NavMesh\"),\".\"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{\"className\":\"language-csharp\"}},\"// BirdMovement.cs\\nusing System.Collections;\\nusing System.Collections.Generic;\\nusing UnityEngine;\\n\\npublic class BirdMovement : MonoBehaviour {\\n\\n    [SerializeField]\\n    private Transform target;\\n    private UnityEngine.AI.NavMeshAgent birdAgent;\\n    private Animator birdAnimator;\\n\\n    // Use this for initialization\\n    void Start () {\\n        birdAgent = GetComponent<UnityEngine.AI.NavMeshAgent> ();\\n        birdAnimator = GetComponent<Animator> ();\\n    }\\n\\n    // Update is called once per frame\\n    void Update () {\\n        // Set the bird's destination\\n        birdAgent.SetDestination (target.position);\\n\\n        // Measure the magnitude of the NavMeshAgent's velocity\\n        float speed = birdAgent.velocity.magnitude;\\n\\n        // Pass the velocity to the animator component\\n        birdAnimator.SetFloat(\\\"Speed\\\", speed);\\n    }\\n}\\n\")),React.createElement(MDXTag,{name:\"h3\",components:components,props:{\"id\":\"monitor-player-health\"}},\"Monitor Player Health\"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{\"className\":\"language-csharp\"}},\"using System.Collections;\\nusing System.Collections.Generic;\\nusing UnityEngine;\\n\\npublic class PlayerHealth : MonoBehaviour {\\n    public bool alive;\\n    [SerializeField]\\n    private GameObject pickupPrefab;\\n    // Use this for initialization\\n    void Start () {\\n        alive = true;\\n    }\\n\\n    void OnTriggerEnter(Collider other) {\\n        if (other.CompareTag (\\\"Enemy\\\") && alive == true) {\\n            alive = false;\\n\\n            // Create the pickup particles\\n            Instantiate(pickupPrefab, transform.position, Quaternion.identity);\\n        }\\n    }\\n}\\n\")),React.createElement(MDXTag,{name:\"h3\",components:components,props:{\"id\":\"managing-the-game-state\"}},\"Managing the game state\"),React.createElement(MDXTag,{name:\"p\",components:components},\"How do we know when the game has started and when we need to restart?\"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{\"className\":\"language-csharp\"}},\"using System.Collections;\\nusing System.Collections.Generic;\\nusing UnityEngine;\\nusing UnityEngine.UI;\\nusing UnityEngine.SceneManagement;\\n\\npublic class GameState : MonoBehaviour {\\n    private bool gameStarted = false;\\n    [SerializeField]\\n    private Text gameStateText;\\n    [SerializeField]\\n    private GameObject player;\\n    [SerializeField]\\n    private BirdMovement birdMovement;\\n    [SerializeField]\\n    private FollowCamera followCamera;\\n    private float restartDelay = 3f;\\n    private float restartTimer;\\n    private PlayerMovement playerMovement;\\n    private PlayerHealth playerHealth;\\n\\n    // Use this for initialization\\n    void Start () {\\n        Cursor.visible = false;\\n\\n        playerMovement = player.GetComponent<PlayerMovement> ();\\n        playerHealth = player.GetComponent<PlayerHealth> ();\\n\\n        // do not allow player to move before the game\\n        playerMovement.enabled = false;\\n        // prevent bird\\n        birdMovement.enabled = false;\\n        // prevent follow camear\\n        followCamera.enabled = false;\\n    }\\n\\n    // Update is called once per frame\\n    void Update () {\\n        // If the game is not sarted and the player presses the space bar...\\n        if (gameStarted == false && Input.GetKeyUp(KeyCode.Space)) {\\n            // ... start the game\\n            StartGame();\\n        }\\n\\n        // If player is no longer alive ...\\n        if (playerHealth.alive == false) {\\n            // ...end the game\\n            EndGame();\\n\\n            // ... increment timer to count up to restarting...\\n            restartTimer = restartTimer + Time.deltaTime;\\n\\n            // ...and if it reaches the restart delay...\\n            if (restartTimer >= restartDelay) {\\n                // reload scene\\n                SceneManager.LoadScene(SceneManager.GetActiveScene().buildIndex);\\n            }\\n        }\\n    }\\n\\n    private void StartGame() {\\n        gameStarted = true;\\n\\n        // set main text to see through\\n        gameStateText.color = Color.clear;\\n\\n        // allow player to move\\n        playerMovement.enabled = true;\\n        birdMovement.enabled = true;\\n        followCamera.enabled = true;\\n    }\\n\\n    private void EndGame() {\\n        gameStarted = false;\\n\\n        gameStateText.text = \\\"Game Over\\\";\\n        // set main text to see through\\n        gameStateText.color = Color.white;\\n\\n        // remove player from game\\n        player.SetActive (false);\\n    }\\n}\\n\")),React.createElement(MDXTag,{name:\"h2\",components:components,props:{\"id\":\"adding-audio\"}},\"Adding Audio\"),React.createElement(MDXTag,{name:\"h3\",components:components,props:{\"id\":\"game-audio\"}},\"Game audio\"),React.createElement(MDXTag,{name:\"p\",components:components},\"We can add the \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"Audio Source\"),\" component and select the sounds.\"),React.createElement(MDXTag,{name:\"p\",components:components},\"We can also randomly generate a sound to help add something natural.\"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{\"className\":\"language-csharp\"}},\"using System.Collections;\\nusing System.Collections.Generic;\\nusing UnityEngine;\\n\\npublic class RandomSoundPlayer : MonoBehaviour {\\n    private AudioSource audioSource;\\n    [SerializeField]\\n    private List<AudioClip> soundClips = new List<AudioClip>();\\n    [SerializeField]\\n    private float soundTimerDelay = 3f;\\n    private float soundTimer;\\n\\n    // Use this for initialization\\n    void Start () {\\n        audioSource = GetComponent<AudioSource>();\\n    }\\n\\n    // Update is called once per frame\\n    void Update () {\\n        // incredment a timer to count up to restarting\\n        soundTimer = soundTimer + Time.deltaTime;\\n\\n        // if the timer reaches the delay...\\n        if (soundTimer >= soundTimerDelay) {\\n            soundTimer = 0f;\\n            // choose a random sound\\n            AudioClip randomSound = soundClips[Random.Range(0, soundClips.Count)];\\n            audioSource.PlayOneShot (randomSound);\\n        }\\n    }\\n}\\n\")),React.createElement(MDXTag,{name:\"h3\",components:components,props:{\"id\":\"controlling-sounds-on-game-objects\"}},\"Controlling sounds on game objects\"),React.createElement(MDXTag,{name:\"p\",components:components},\"Add another empty game child and add the audio but select \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"play on awake\"),\" off.\"),React.createElement(MDXTag,{name:\"p\",components:components},\"To make sounds 3d, we need to change the spatial blend. We also need to make sure the game camera and distance are set correctly.\"),React.createElement(MDXTag,{name:\"p\",components:components},\"We need to update the scripts to ensure that these clips play at the appropriate time.\"),React.createElement(MDXTag,{name:\"h3\",components:components,props:{\"id\":\"audio-mixing\"}},\"Audio mixing\"),React.createElement(MDXTag,{name:\"p\",components:components},\"Use the audio mixer, create groups and assign these groups via the \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"AudioComponent\"),\" on the hierarchy or prefab.\"),React.createElement(MDXTag,{name:\"h3\",components:components,props:{\"id\":\"exporting-the-game\"}},\"Exporting the game\"));}}]);return MDXContent;}(React.Component);export{MDXContent as default};MDXContent.__docgenInfo={\"description\":\"\",\"methods\":[],\"displayName\":\"MDXContent\"};",{"version":3,"sources":["/Users/okeeffe_d/Business/Documentation/manual/Unity/How-To-Make-A-Video-Game.md"],"names":["React","MDXTag","MDXContent","props","layout","components","Component"],"mappings":"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","sourcesContent":["\n  import React from 'react'\n  import { MDXTag } from '@mdx-js/tag'\n  \n\nexport default class MDXContent extends React.Component {\n  constructor(props) {\n    super(props)\n    this.layout = null\n  }\n  render() {\n    const { components, ...props } = this.props\n\n    return <MDXTag\n             name=\"wrapper\"\n             \n             components={components}><MDXTag name=\"h1\" components={components} props={{\"id\":\"how-to-make-a-video-game\"}}>{`How to make a video game`}</MDXTag>\n{/* TOC */}\n<MDXTag name=\"ul\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"a\" components={components} parentName=\"li\" props={{\"href\":\"#how-to-make-a-video-game\"}}>{`How to make a video game`}</MDXTag>{` - `}<MDXTag name=\"a\" components={components} parentName=\"li\" props={{\"href\":\"#what-is-a-game-engine\"}}>{`What is a game engine?`}</MDXTag><MDXTag name=\"ul\" components={components} parentName=\"li\">\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"a\" components={components} parentName=\"li\" props={{\"href\":\"#part-2\"}}>{`Part 2`}</MDXTag><MDXTag name=\"ul\" components={components} parentName=\"li\">\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"a\" components={components} parentName=\"li\" props={{\"href\":\"#unity-interface\"}}>{`Unity Interface`}</MDXTag><MDXTag name=\"ul\" components={components} parentName=\"li\">\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"a\" components={components} parentName=\"li\" props={{\"href\":\"#prefabs\"}}>{`Prefabs`}</MDXTag></MDXTag>\n</MDXTag></MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"a\" components={components} parentName=\"li\" props={{\"href\":\"#setup-the-project\"}}>{`Setup the project`}</MDXTag></MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"a\" components={components} parentName=\"li\" props={{\"href\":\"#navigating-the-scene-view\"}}>{`Navigating the Scene View`}</MDXTag></MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"a\" components={components} parentName=\"li\" props={{\"href\":\"#position-the-camera\"}}>{`Position the camera`}</MDXTag></MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"a\" components={components} parentName=\"li\" props={{\"href\":\"#image-effects-and-asset-stores\"}}>{`Image effects and asset stores`}</MDXTag></MDXTag>\n</MDXTag></MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"a\" components={components} parentName=\"li\" props={{\"href\":\"#programming-games\"}}>{`Programming Games`}</MDXTag><MDXTag name=\"ul\" components={components} parentName=\"li\">\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"a\" components={components} parentName=\"li\" props={{\"href\":\"#programming-with-c-with-unity\"}}>{`Programming with C# with Unity`}</MDXTag></MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"a\" components={components} parentName=\"li\" props={{\"href\":\"#gather-player-input\"}}>{`Gather Player Input`}</MDXTag></MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"a\" components={components} parentName=\"li\" props={{\"href\":\"#moving-a-player-with-animation\"}}>{`Moving a player with animation`}</MDXTag></MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"a\" components={components} parentName=\"li\" props={{\"href\":\"#quaternions\"}}>{`Quaternions`}</MDXTag><MDXTag name=\"ul\" components={components} parentName=\"li\">\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"a\" components={components} parentName=\"li\" props={{\"href\":\"#target-rotation\"}}>{`Target rotation`}</MDXTag></MDXTag>\n</MDXTag></MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"a\" components={components} parentName=\"li\" props={{\"href\":\"#making-a-follow-camera\"}}>{`Making a follow camera`}</MDXTag></MDXTag>\n</MDXTag></MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"a\" components={components} parentName=\"li\" props={{\"href\":\"#section-3\"}}>{`Section 3`}</MDXTag><MDXTag name=\"ul\" components={components} parentName=\"li\">\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"a\" components={components} parentName=\"li\" props={{\"href\":\"#adding-the-flies-to-the-swamp\"}}>{`Adding the flies to the swamp`}</MDXTag></MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"a\" components={components} parentName=\"li\" props={{\"href\":\"#adding-the-fly-pickup\"}}>{`Adding the Fly Pickup`}</MDXTag><MDXTag name=\"ul\" components={components} parentName=\"li\">\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"a\" components={components} parentName=\"li\" props={{\"href\":\"#pickup-particles\"}}>{`Pickup Particles`}</MDXTag></MDXTag>\n</MDXTag></MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"a\" components={components} parentName=\"li\" props={{\"href\":\"#creating-the-enemy-in-the-game\"}}>{`Creating the enemy in the game`}</MDXTag></MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"a\" components={components} parentName=\"li\" props={{\"href\":\"#monitor-player-health\"}}>{`Monitor Player Health`}</MDXTag></MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"a\" components={components} parentName=\"li\" props={{\"href\":\"#managing-the-game-state\"}}>{`Managing the game state`}</MDXTag></MDXTag>\n</MDXTag></MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"a\" components={components} parentName=\"li\" props={{\"href\":\"#adding-audio\"}}>{`Adding Audio`}</MDXTag><MDXTag name=\"ul\" components={components} parentName=\"li\">\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"a\" components={components} parentName=\"li\" props={{\"href\":\"#game-audio\"}}>{`Game audio`}</MDXTag></MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"a\" components={components} parentName=\"li\" props={{\"href\":\"#controlling-sounds-on-game-objects\"}}>{`Controlling sounds on game objects`}</MDXTag></MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"a\" components={components} parentName=\"li\" props={{\"href\":\"#audio-mixing\"}}>{`Audio mixing`}</MDXTag></MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"a\" components={components} parentName=\"li\" props={{\"href\":\"#exporting-the-game\"}}>{`Exporting the game`}</MDXTag></MDXTag>\n</MDXTag></MDXTag>\n</MDXTag></MDXTag>\n</MDXTag>\n{/* /TOC */}\n<MDXTag name=\"p\" components={components}>{`How are games made?`}</MDXTag>\n<MDXTag name=\"ul\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Game designers`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Game artists`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Game developers`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"p\" components={components}>{`These roles can be between one or thousands of people.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Game artists deal with what you see and hear in the game.`}</MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"what-is-a-game-engine\"}}>{`What is a game engine?`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Game engines help deal with things like the physics and rendering graphics.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`A game engine is a framework for building games that helps coordinate things like assets and gives you all the tools you need to start coding.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`A game engine is not a 3D art engine.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`We are Unity as it is easier to learn when you are just getting started.`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"part-2\"}}>{`Part 2`}</MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"unity-interface\"}}>{`Unity Interface`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Create a `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`_Scenes`}</MDXTag>{` folder.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Game assets are `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`a piece of media for the game`}</MDXTag>{`. This could be sounds, scripts or models etc.`}</MDXTag>\n<MDXTag name=\"h4\" components={components} props={{\"id\":\"prefabs\"}}>{`Prefabs`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Stores several objects together. An example `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`prefab`}</MDXTag>{` is the frog which contains the 3d model, the texture and the animation together.`}</MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"setup-the-project\"}}>{`Setup the project`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Games use `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`real time rendering`}</MDXTag>{` where it is drawn at the frame rate. Generally you want to aim for 60fps or higher. This will make is look as smooth as possible.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`We can go to `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`Window > Lighting > Settings`}</MDXTag>{` to adjust things about how the scene is lit.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`To adjust the player settings go to `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`Edit > Project Settings > Player`}</MDXTag>{`.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`For quality, go to `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`Edit > Project Settings > Quality`}</MDXTag>{`.`}</MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"navigating-the-scene-view\"}}>{`Navigating the Scene View`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`The `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`environment`}</MDXTag>{` prefab links a bunch of Maya elements and groups them as a prefab.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Our environment prefab already has a light associated with it. Ensure after adding that you re-generate the light in the settings.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Anything with a green square is outlining a game object.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`After selecting an object, you can use the 3d axis to change the transform of the axis.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`On the top left, we can change the tools from position to rotation etc and with similar methods to before, we can rotate the axis.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`We can also just use the `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`qwer`}</MDXTag>{` keys to change between tools.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`We can also switch between `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`global`}</MDXTag>{` and `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`local`}</MDXTag>{` space to help move things around.`}</MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"position-the-camera\"}}>{`Position the camera`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`The scenes looks good so far, but it we need to update the camera.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`At the top of the scene window, we have `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`scene`}</MDXTag>{`, `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`game`}</MDXTag>{` tabs. If we select `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`game`}</MDXTag>{`, we get to see how the game will look when we play it. We can either write code to control to camera or change the transform.`}</MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"image-effects-and-asset-stores\"}}>{`Image effects and asset stores`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`An image effect can change things like colours etc.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Once we click on the asset store, we can build or share models to use.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Unity is component based so we can add things that way. We can now create a post processing profile to use.`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"programming-games\"}}>{`Programming Games`}</MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"programming-with-c-with-unity\"}}>{`Programming with C# with Unity`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`JavaScript is also able to be used, but far less adopted by the Unity commmunity.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`After creating a file, you will run into the `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`Start`}</MDXTag>{` and `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`Update`}</MDXTag>{` methods that are able to run at each frame so that we can edit the code to do specific things.`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-csharp\"}}>{`using System.Collections;\nusing System.Collections.Generic;\nusing UnityEngine;\n\npublic class PlayerMovement : MonoBehaviour {\n    private Animator playerAnimator;\n    private float moveHorizontal;\n    private float moveVertical;\n    private Vector3 movement;\n\n    // Use this for initialization\n    void Start () {\n\n    }\n\n    // Update is called once per frame\n    void Update () {\n\n    }\n}\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`Public and private are differing `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`accessibility levels`}</MDXTag>{`. The second keyword in a declaration is the `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`type`}</MDXTag>{`.`}</MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"gather-player-input\"}}>{`Gather Player Input`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`We need to record which button they are pressing in each frame.`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-csharp\"}}>{`using System.Collections;\nusing System.Collections.Generic;\nusing UnityEngine;\n\npublic class PlayerMovement : MonoBehaviour {\n    private Animator playerAnimator;\n    private float moveHorizontal;\n    private float moveVertical;\n    private Vector3 movement;\n\n    // Use this for initialization\n    void Start () {\n\n    }\n\n    // Update is called once per frame\n    void Update () {\n        moveHorizontal = Input.GetAxisRaw(\"Horizontal\");\n        moveVertical = Input.GetAxisRaw(\"Vertical\");\n\n        movement = new Vector3(moveHorizontal, 0.0f, moveVertical);\n    }\n}\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"moving-a-player-with-animation\"}}>{`Moving a player with animation`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`After adding the script to update the script, we need to animate the frog.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`The animator components with now be on the inspector for the player.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`We will use the playerAnimator to access to Animator component.`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-csharp\"}}>{`using System.Collections;\nusing System.Collections.Generic;\nusing UnityEngine;\n\npublic class PlayerMovement : MonoBehaviour {\n    private Animator playerAnimator;\n    private float moveHorizontal;\n    private float moveVertical;\n    private Vector3 movement;\n\n    // Use this for initialization\n    void Start () {\n        // special method to get the \"Animator\" component\n        playerAnimator = GetComponent<Animator>();\n    }\n\n    // Update is called once per frame\n    void Update () {\n        moveHorizontal = Input.GetAxisRaw(\"Horizontal\");\n        moveVertical = Input.GetAxisRaw(\"Vertical\");\n\n        movement = new Vector3(moveHorizontal, 0.0f, moveVertical);\n    }\n\n    // this is code that runs after the \\`update\\` method\n    // this method doesn't run that often without\n    // significant gameplay slow down\n    void FixedUpdate() {\n        if (movement != Vector3.zero) {\n            playerAnimator.SetFloat(\"Speed\", 3f);\n        } else {\n            playerAnimator.SetFloat(\"Speed\", 0);\n        }\n    }\n}\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`So far we haven't told the frog how to change direction or to have the camera follow the movement.`}</MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"quaternions\"}}>{`Quaternions`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Behind the scenes, Unity stores the rotational values as `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`Quaternions`}</MDXTag>{`. Most games ending will use these to solve rotational issues.`}</MDXTag>\n<MDXTag name=\"h4\" components={components} props={{\"id\":\"target-rotation\"}}>{`Target rotation`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`The rigid body and box collider is how the objects like `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`Player`}</MDXTag>{` can interact with the physics and turning.`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-csharp\"}}>{`using System.Collections;\nusing System.Collections.Generic;\nusing UnityEngine;\n\npublic class PlayerMovement : MonoBehaviour {\n    private Animator playerAnimator;\n    private float moveHorizontal;\n    private float moveVertical;\n    private Vector3 movement;\n    private float turningSpeed = 20f;\n    private Rigidbody playerRigidBody;\n\n    // Use this for initialization\n    void Start () {\n        // Gather components from the player object\n        // special method to get the \"Animator\" component\n        playerAnimator = GetComponent<Animator> ();\n        playerRigidBody = GetComponent<Rigidbody> ();\n    }\n\n    // Update is called once per frame\n    void Update () {\n        moveHorizontal = Input.GetAxisRaw (\"Horizontal\");\n        moveVertical = Input.GetAxisRaw (\"Vertical\");\n\n        movement = new Vector3(moveHorizontal, 0.0f, moveVertical);\n    }\n\n    // this is code that runs after the \\`update\\` method\n    // this method doesn't run that often without\n    // significant gameplay slow down\n    void FixedUpdate() {\n        if (movement != Vector3.zero) {\n            playerAnimator.SetFloat (\"Speed\", 3f);\n        } else {\n            playerAnimator.SetFloat (\"Speed\", 0);\n        }\n    }\n}\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`We need to perform a `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`Lerp`}</MDXTag>{` to change the variable from one to another over time.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Unity also doesn't save any change settings when you are playing the game.`}</MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"making-a-follow-camera\"}}>{`Making a follow camera`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`This will have the camera to always follow the parent.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`We can use `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`[SerializeField]`}</MDXTag>{` to expose fields from the code into the inspector.`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-csharp\"}}>{`using System.Collections;\nusing System.Collections.Generic;\nusing UnityEngine;\n\npublic class FollowCamera : MonoBehaviour {\n\n    [SerializeField]\n    private Transform player;\n    [SerializeField]\n    private Vector3 offset;\n    private float cameraFollowSpeed = 5f;\n\n    // Update is called once per frame\n    void Update () {\n        Vector3 newPosition = player.position + offset;\n\n        // Smooth transition\n        transform.position = Vector3.Lerp(transform.position, newPosition, cameraFollowSpeed + Time.deltaTime);\n    }\n}\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"section-3\"}}>{`Section 3`}</MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"adding-the-flies-to-the-swamp\"}}>{`Adding the flies to the swamp`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Let's add an objective to the game (pickup).`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-csharp\"}}>{`using System.Collections;\nusing System.Collections.Generic;\nusing UnityEngine;\n\npublic class FlyMovement : MonoBehaviour {\n    [SerializeField]\n    private Transform center;\n    private float flySpeed;\n\n    // Use this for initialization\n    void Start () {\n        flySpeed = Random.Range (300f, 700f);\n    }\n\n    // Update is called once per frame\n    void Update () {\n        transform.RotateAround (center.position, Vector3.up, flySpeed * Time.deltaTime);\n    }\n}\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"adding-the-fly-pickup\"}}>{`Adding the Fly Pickup`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-csharp\"}}>{`using System.Collections;\nusing System.Collections.Generic;\nusing UnityEngine;\n\npublic class FlyPickup : MonoBehaviour {\n    // Trigger\n    void OnTriggerEnter(Collider other) {\n        // if collider is the player, execute...\n        if (other.CompareTag (\"Player\")) {\n            Destroy (gameObject);\n        }\n    }\n}\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h4\" components={components} props={{\"id\":\"pickup-particles\"}}>{`Pickup Particles`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Particle systems are a game object which generates multiple systems.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`As for their destruction:`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-csharp\"}}>{`using System.Collections;\nusing System.Collections.Generic;\nusing UnityEngine;\n\npublic class PickupParticlesDestruction : MonoBehaviour {\n\n    // Use this for initialization\n    void Start () {\n        Destroy (gameObject, 5f);\n    }\n}\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`You can also create scripts that aren't attached to a 3d model in the scene view.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`You can create an empty object from the left hand sidebar. Reset the transform and rename.`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-csharp\"}}>{`// Fly Spawner\nusing System.Collections;\nusing System.Collections.Generic;\nusing UnityEngine;\n\npublic class FlyPickup : MonoBehaviour {\n    [SerializeField]\n    private GameObject pickupPrefab;\n\n    // Trigger\n    void OnTriggerEnter(Collider other) {\n        // if collider is the player, execute...\n        if (other.CompareTag (\"Player\")) {\n            // add pickup particles\n            // Quaternion.identity returns no rotation\n            Instantiate (pickupPrefab, transform.position, Quaternion.identity);\n            // Decrement total flies\n            FlySpawner.totalFlies--;\n            Destroy (gameObject);\n        }\n    }\n}\n`}</MDXTag></MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-csharp\"}}>{`// Fly Pickup\nusing System.Collections;\nusing System.Collections.Generic;\nusing UnityEngine;\n\npublic class FlyPickup : MonoBehaviour {\n    [SerializeField]\n    private GameObject pickupPrefab;\n\n    // Trigger\n    void OnTriggerEnter(Collider other) {\n        // if collider is the player, execute...\n        if (other.CompareTag (\"Player\")) {\n            // add pickup particles\n            // Quaternion.identity returns no rotation\n            Instantiate (pickupPrefab, transform.position, Quaternion.identity);\n            // Decrement total flies\n            FlySpawner.totalFlies--;\n            Destroy (gameObject);\n        }\n    }\n}\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"creating-the-enemy-in-the-game\"}}>{`Creating the enemy in the game`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`The bird game object needs to know where the player is. It's known as path finding.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Unity makes path finding very easy.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`With the `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`Nav Mesh Agent`}</MDXTag>{`, you can set the following for the bird:`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{}}>{`Speed: 5\nAngular Speed: 720\nStopping Distance: 5\nRadius: 1\nHeight: 4\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`We now need to create a `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`Nav Mesh`}</MDXTag>{`. The `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`NavMeshAgent`}</MDXTag>{` allows us to set a destination target that the \"enemy\" can follow. It is a component that can be attached to a game object so that it can interact with the `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`NavMesh`}</MDXTag>{`.`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-csharp\"}}>{`// BirdMovement.cs\nusing System.Collections;\nusing System.Collections.Generic;\nusing UnityEngine;\n\npublic class BirdMovement : MonoBehaviour {\n\n    [SerializeField]\n    private Transform target;\n    private UnityEngine.AI.NavMeshAgent birdAgent;\n    private Animator birdAnimator;\n\n    // Use this for initialization\n    void Start () {\n        birdAgent = GetComponent<UnityEngine.AI.NavMeshAgent> ();\n        birdAnimator = GetComponent<Animator> ();\n    }\n\n    // Update is called once per frame\n    void Update () {\n        // Set the bird's destination\n        birdAgent.SetDestination (target.position);\n\n        // Measure the magnitude of the NavMeshAgent's velocity\n        float speed = birdAgent.velocity.magnitude;\n\n        // Pass the velocity to the animator component\n        birdAnimator.SetFloat(\"Speed\", speed);\n    }\n}\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"monitor-player-health\"}}>{`Monitor Player Health`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-csharp\"}}>{`using System.Collections;\nusing System.Collections.Generic;\nusing UnityEngine;\n\npublic class PlayerHealth : MonoBehaviour {\n    public bool alive;\n    [SerializeField]\n    private GameObject pickupPrefab;\n    // Use this for initialization\n    void Start () {\n        alive = true;\n    }\n\n    void OnTriggerEnter(Collider other) {\n        if (other.CompareTag (\"Enemy\") && alive == true) {\n            alive = false;\n\n            // Create the pickup particles\n            Instantiate(pickupPrefab, transform.position, Quaternion.identity);\n        }\n    }\n}\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"managing-the-game-state\"}}>{`Managing the game state`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`How do we know when the game has started and when we need to restart?`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-csharp\"}}>{`using System.Collections;\nusing System.Collections.Generic;\nusing UnityEngine;\nusing UnityEngine.UI;\nusing UnityEngine.SceneManagement;\n\npublic class GameState : MonoBehaviour {\n    private bool gameStarted = false;\n    [SerializeField]\n    private Text gameStateText;\n    [SerializeField]\n    private GameObject player;\n    [SerializeField]\n    private BirdMovement birdMovement;\n    [SerializeField]\n    private FollowCamera followCamera;\n    private float restartDelay = 3f;\n    private float restartTimer;\n    private PlayerMovement playerMovement;\n    private PlayerHealth playerHealth;\n\n    // Use this for initialization\n    void Start () {\n        Cursor.visible = false;\n\n        playerMovement = player.GetComponent<PlayerMovement> ();\n        playerHealth = player.GetComponent<PlayerHealth> ();\n\n        // do not allow player to move before the game\n        playerMovement.enabled = false;\n        // prevent bird\n        birdMovement.enabled = false;\n        // prevent follow camear\n        followCamera.enabled = false;\n    }\n\n    // Update is called once per frame\n    void Update () {\n        // If the game is not sarted and the player presses the space bar...\n        if (gameStarted == false && Input.GetKeyUp(KeyCode.Space)) {\n            // ... start the game\n            StartGame();\n        }\n\n        // If player is no longer alive ...\n        if (playerHealth.alive == false) {\n            // ...end the game\n            EndGame();\n\n            // ... increment timer to count up to restarting...\n            restartTimer = restartTimer + Time.deltaTime;\n\n            // ...and if it reaches the restart delay...\n            if (restartTimer >= restartDelay) {\n                // reload scene\n                SceneManager.LoadScene(SceneManager.GetActiveScene().buildIndex);\n            }\n        }\n    }\n\n    private void StartGame() {\n        gameStarted = true;\n\n        // set main text to see through\n        gameStateText.color = Color.clear;\n\n        // allow player to move\n        playerMovement.enabled = true;\n        birdMovement.enabled = true;\n        followCamera.enabled = true;\n    }\n\n    private void EndGame() {\n        gameStarted = false;\n\n        gameStateText.text = \"Game Over\";\n        // set main text to see through\n        gameStateText.color = Color.white;\n\n        // remove player from game\n        player.SetActive (false);\n    }\n}\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"adding-audio\"}}>{`Adding Audio`}</MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"game-audio\"}}>{`Game audio`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`We can add the `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`Audio Source`}</MDXTag>{` component and select the sounds.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`We can also randomly generate a sound to help add something natural.`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-csharp\"}}>{`using System.Collections;\nusing System.Collections.Generic;\nusing UnityEngine;\n\npublic class RandomSoundPlayer : MonoBehaviour {\n    private AudioSource audioSource;\n    [SerializeField]\n    private List<AudioClip> soundClips = new List<AudioClip>();\n    [SerializeField]\n    private float soundTimerDelay = 3f;\n    private float soundTimer;\n\n    // Use this for initialization\n    void Start () {\n        audioSource = GetComponent<AudioSource>();\n    }\n\n    // Update is called once per frame\n    void Update () {\n        // incredment a timer to count up to restarting\n        soundTimer = soundTimer + Time.deltaTime;\n\n        // if the timer reaches the delay...\n        if (soundTimer >= soundTimerDelay) {\n            soundTimer = 0f;\n            // choose a random sound\n            AudioClip randomSound = soundClips[Random.Range(0, soundClips.Count)];\n            audioSource.PlayOneShot (randomSound);\n        }\n    }\n}\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"controlling-sounds-on-game-objects\"}}>{`Controlling sounds on game objects`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Add another empty game child and add the audio but select `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`play on awake`}</MDXTag>{` off.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`To make sounds 3d, we need to change the spatial blend. We also need to make sure the game camera and distance are set correctly.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`We need to update the scripts to ensure that these clips play at the appropriate time.`}</MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"audio-mixing\"}}>{`Audio mixing`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Use the audio mixer, create groups and assign these groups via the `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`AudioComponent`}</MDXTag>{` on the hierarchy or prefab.`}</MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"exporting-the-game\"}}>{`Exporting the game`}</MDXTag>\n           </MDXTag>\n  }\n}\n  "]}]}