{"remainingRequest":"/Users/okeeffe_d/Project-Imposter/developer-notes/node_modules/docz-core/node_modules/babel-loader/lib/index.js??ref--6-1!/Users/okeeffe_d/Project-Imposter/developer-notes/node_modules/@mdx-js/loader/index.js??ref--6-2!/Users/okeeffe_d/Project-Imposter/developer-notes/node_modules/source-map-loader/index.js!/Users/okeeffe_d/Project-Imposter/developer-notes/manual/React-Native/React-Native-iBeacon.md","dependencies":[{"path":"/Users/okeeffe_d/Project-Imposter/developer-notes/manual/React-Native/React-Native-iBeacon.md","mtime":1548282824857},{"path":"/Users/okeeffe_d/Project-Imposter/developer-notes/node_modules/cache-loader/dist/cjs.js","mtime":1561535530324},{"path":"/Users/okeeffe_d/Project-Imposter/developer-notes/node_modules/docz-core/node_modules/babel-loader/lib/index.js","mtime":1560300163820},{"path":"/Users/okeeffe_d/Project-Imposter/developer-notes/node_modules/@mdx-js/loader/index.js","mtime":1561535530532},{"path":"/Users/okeeffe_d/Project-Imposter/developer-notes/node_modules/source-map-loader/index.js","mtime":1548285283521}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/okeeffe_d/Project-Imposter/developer-notes/manual/React-Native/React-Native-iBeacon.md"],"names":["React","mdx","makeShortcode","name","MDXDefaultShortcode","props","console","warn","layoutProps","MDXLayout","MDXContent","components","isMDXComponent"],"mappings":"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","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"react-native-ibeacon\"\n    }}>{`React Native iBeacon`}</h1>\n    {\n      /* TOC */\n    }\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"#react-native-ibeacon\"\n        }}>{`React Native iBeacon`}</a><ul parentName=\"li\">\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#react-native-beacons-manager\"\n            }}>{`react-native-beacons-manager`}</a><ul parentName=\"li\">\n              <li parentName=\"ul\"><a parentName=\"li\" {...{\n                  \"href\": \"#any-things-we-dont-understand-about-their-docs\"\n                }}>{`Any things we don’t understand about their docs?`}</a></li>\n              <li parentName=\"ul\"><a parentName=\"li\" {...{\n                  \"href\": \"#any-technical-concerns\"\n                }}>{`Any technical concerns?`}</a></li>\n              <li parentName=\"ul\"><a parentName=\"li\" {...{\n                  \"href\": \"#why-should-we-use-this-technology\"\n                }}>{`Why should we use this technology?`}</a></li>\n              <li parentName=\"ul\"><a parentName=\"li\" {...{\n                  \"href\": \"#why-shouldnt-we-use-this-technology\"\n                }}>{`Why shouldn’t we use this technology?`}</a></li>\n              <li parentName=\"ul\"><a parentName=\"li\" {...{\n                  \"href\": \"#are-there-alternatives\"\n                }}>{`Are there alternatives?`}</a></li>\n            </ul></li>\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#install\"\n            }}>{`Install`}</a></li>\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#setup\"\n            }}>{`Setup`}</a></li>\n        </ul></li>\n    </ul>\n    {\n      /* /TOC */\n    }\n    <h2 {...{\n      \"id\": \"react-native-beacons-manager\"\n    }}>{`react-native-beacons-manager`}</h2>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"https://github.com/MacKentoch/react-native-beacons-manager\"\n      }}>{`https://github.com/MacKentoch/react-native-beacons-manager`}</a></p>\n    <h3 {...{\n      \"id\": \"any-things-we-dont-understand-about-their-docs\"\n    }}>{`Any things we don’t understand about their docs?`}</h3>\n    <ul>\n      <li parentName=\"ul\">{`Documentation seems okay`}</li>\n    </ul>\n    <h3 {...{\n      \"id\": \"any-technical-concerns\"\n    }}>{`Any technical concerns?`}</h3>\n    <ul>\n      <li parentName=\"ul\">{`Either library being outdated`}</li>\n    </ul>\n    <h3 {...{\n      \"id\": \"why-should-we-use-this-technology\"\n    }}>{`Why should we use this technology?`}</h3>\n    <ul>\n      <li parentName=\"ul\">{`Based off the ports of the original beacon packages`}</li>\n      <li parentName=\"ul\">{`Easy to test with what we have`}</li>\n      <li parentName=\"ul\">{`Easier to setup push notification logic`}</li>\n    </ul>\n    <h3 {...{\n      \"id\": \"why-shouldnt-we-use-this-technology\"\n    }}>{`Why shouldn’t we use this technology?`}</h3>\n    <ul>\n      <li parentName=\"ul\">{`Small, open-source project`}</li>\n    </ul>\n    <h3 {...{\n      \"id\": \"are-there-alternatives\"\n    }}>{`Are there alternatives?`}</h3>\n    <ul>\n      <li parentName=\"ul\">{`See above`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"install\"\n    }}>{`Install`}</h2>\n    <pre><code parentName=\"pre\" {...{}}>{`react-native init\nyarn add react-native-beacons-manager\nyarn add react-native-bluetooth-state\nreact-native link\n# potential error on RCBridge requires you to comment it out\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"setup\"\n    }}>{`Setup`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`import React, { Component } from 'react';\nimport {\n    AppRegistry,\n    StyleSheet,\n    View,\n    Text,\n    ListView,\n    DeviceEventEmitter\n} from 'react-native';\nimport Beacons from 'react-native-beacons-manager';\nimport BluetoothState from 'react-native-bluetooth-state';\n\nexport default class ibeacon extends Component {\n    constructor(props) {\n        super(props);\n        // Create our dataSource which will be displayed in the ListView\n        var ds = new ListView.DataSource({\n            rowHasChanged: (r1, r2) => r1 !== r2\n        });\n        this.state = {\n            bluetoothState: '',\n            // region information\n            identifier: 'Test',\n            uuid: '5A4BCFCE-174E-4BAC-A814-092E77F6B7E5',\n            // React Native ListView datasource initialization\n            dataSource: ds.cloneWithRows([])\n        };\n    }\n\n    componentWillMount() {\n        //\n        // ONLY non component state aware here in componentWillMount\n        //\n        // Request for authorization while the app is open\n        Beacons.requestWhenInUseAuthorization();\n        // Define a region which can be identifier + uuid,\n        // identifier + uuid + major or identifier + uuid + major + minor\n        // (minor and major properties are numbers)\n        const region = {\n            identifier: this.state.identifier,\n            uuid: this.state.uuid\n        };\n        // Range for beacons inside the region\n        Beacons.startRangingBeaconsInRegion(region);\n        // Beacons.startUpdatingLocation();\n    }\n\n    componentDidMount() {\n        //\n        // component state aware here - attach events\n        //\n        // Ranging: Listen for beacon changes\n        this.beaconsDidRange = DeviceEventEmitter.addListener(\n            'beaconsDidRange',\n            (data) => {\n                this.setState({\n                    dataSource: this.state.dataSource.cloneWithRows(\n                        data.beacons\n                    )\n                });\n            }\n        );\n\n        // listen bluetooth state change event\n        BluetoothState.subscribe((bluetoothState) => {\n            this.setState({ bluetoothState: bluetoothState });\n        });\n        BluetoothState.initialize();\n    }\n\n    componentWillUnMount() {\n        this.beaconsDidRange = null;\n    }\n\n    render() {\n        const { bluetoothState, dataSource } = this.state;\n        return (\n            <View style={styles.container}>\n                <Text style={styles.btleConnectionStatus}>\n                    Bluetooth connection status:{' '}\n                    {bluetoothState ? bluetoothState : 'NA'}\n                </Text>\n                <Text style={styles.headline}>All beacons in the area</Text>\n                <ListView\n                    dataSource={dataSource}\n                    enableEmptySections={true}\n                    renderRow={this.renderRow}\n                />\n            </View>\n        );\n    }\n\n    renderRow = (rowData) => {\n        return (\n            <View style={styles.row}>\n                <Text style={styles.smallText}>\n                    UUID: {rowData.uuid ? rowData.uuid : 'NA'}\n                </Text>\n                <Text style={styles.smallText}>\n                    Major: {rowData.major ? rowData.major : 'NA'}\n                </Text>\n                <Text style={styles.smallText}>\n                    Minor: {rowData.minor ? rowData.minor : 'NA'}\n                </Text>\n                <Text>RSSI: {rowData.rssi ? rowData.rssi : 'NA'}</Text>\n                <Text>\n                    Proximity: {rowData.proximity ? rowData.proximity : 'NA'}\n                </Text>\n                <Text>\n                    Distance:{' '}\n                    {rowData.accuracy ? rowData.accuracy.toFixed(2) : 'NA'}m\n                </Text>\n            </View>\n        );\n    };\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        paddingTop: 60,\n        justifyContent: 'center',\n        alignItems: 'center',\n        backgroundColor: '#F5FCFF'\n    },\n    btleConnectionStatus: {\n        fontSize: 20,\n        paddingTop: 20\n    },\n    headline: {\n        fontSize: 20,\n        paddingTop: 20\n    },\n    row: {\n        padding: 8,\n        paddingBottom: 16\n    },\n    smallText: {\n        fontSize: 11\n    }\n});\n\nAppRegistry.registerComponent('ibeacon', () => ibeacon);\n`}</code></pre>\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  "]}]}