{"remainingRequest":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/docz-core/node_modules/babel-loader/lib/index.js??ref--6-1!/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/@mdx-js/loader/index.js??ref--6-2!/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/source-map-loader/index.js!/Users/dennis.okeeffe/Project-Imposter/developer-notes/manual/React/React-Testing-Library.md","dependencies":[{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/manual/React/React-Testing-Library.md","mtime":1569997842976},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/cache-loader/dist/cjs.js","mtime":1564095360956},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/docz-core/node_modules/babel-loader/lib/index.js","mtime":1562568123838},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/@mdx-js/loader/index.js","mtime":1565139338792},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/source-map-loader/index.js","mtime":1564095361765}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9vYmplY3RXaXRob3V0UHJvcGVydGllcyBmcm9tIi9Vc2Vycy9kZW5uaXMub2tlZWZmZS9Qcm9qZWN0LUltcG9zdGVyL2RldmVsb3Blci1ub3Rlcy9ub2RlX21vZHVsZXMvYmFiZWwtcHJlc2V0LXJlYWN0LWFwcC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0V2l0aG91dFByb3BlcnRpZXMiOy8qIEBqc3ggbWR4ICovaW1wb3J0IFJlYWN0IGZyb20ncmVhY3QnO2ltcG9ydHttZHh9ZnJvbSdAbWR4LWpzL3JlYWN0JzsvKiBAanN4IG1keCAqL3ZhciBtYWtlU2hvcnRjb2RlPWZ1bmN0aW9uIG1ha2VTaG9ydGNvZGUobmFtZSl7cmV0dXJuIGZ1bmN0aW9uIE1EWERlZmF1bHRTaG9ydGNvZGUocHJvcHMpe2NvbnNvbGUud2FybigiQ29tcG9uZW50ICIrbmFtZSsiIHdhcyBub3QgaW1wb3J0ZWQsIGV4cG9ydGVkLCBvciBwcm92aWRlZCBieSBNRFhQcm92aWRlciBhcyBnbG9iYWwgc2NvcGUiKTtyZXR1cm4gbWR4KCJkaXYiLHByb3BzKTt9O307dmFyIGxheW91dFByb3BzPXt9O3ZhciBNRFhMYXlvdXQ9IndyYXBwZXIiO2V4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIE1EWENvbnRlbnQoX3JlZil7dmFyIGNvbXBvbmVudHM9X3JlZi5jb21wb25lbnRzLHByb3BzPV9vYmplY3RXaXRob3V0UHJvcGVydGllcyhfcmVmLFsiY29tcG9uZW50cyJdKTtyZXR1cm4gbWR4KE1EWExheW91dCxPYmplY3QuYXNzaWduKHt9LGxheW91dFByb3BzLHByb3BzLHtjb21wb25lbnRzOmNvbXBvbmVudHMsbWR4VHlwZToiTURYTGF5b3V0In0pLG1keCgiaDEiLHsiaWQiOiJyZWFjdC10ZXN0aW5nLWxpYnJhcnkifSwiUmVhY3QgVGVzdGluZyBMaWJyYXJ5IiksbWR4KCJwIixudWxsLCJBbiBleGFtcGxlIG9mIHRoZSBsaWJyYXJ5IGluIGFjdGlvbjoiKSxtZHgoInByZSIsbnVsbCxtZHgoImNvZGUiLE9iamVjdC5hc3NpZ24oe3BhcmVudE5hbWU6InByZSJ9LHsiY2xhc3NOYW1lIjoibGFuZ3VhZ2UtdHlwZXNjcmlwdCJ9KSwiaW1wb3J0ICogYXMgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgcmVuZGVyLCBmaXJlRXZlbnQgfSBmcm9tICdAdGVzdGluZy1saWJyYXJ5L3JlYWN0JztcbmltcG9ydCBUZWFtRHJvcGRvd24gZnJvbSAnLi4vVGVhbURyb3Bkb3duJztcblxuY29uc3Qgc3R1YlByb3BzID0ge1xuICBpc0FyY2hpdmVhYmxlOiBmYWxzZSxcbiAgZWRpdEFjdGlvbjogamVzdC5mbigpLFxuICBhcmNoaXZlQWN0aW9uOiBqZXN0LmZuKCksXG4gIGRlbGV0ZUFjdGlvbjogamVzdC5mbigpXG59O1xuXG5jb25zdCBXcmFwcGVyID0gKHByb3BzOiBhbnkgPSB7fSkgPT4gPFRlYW1Ecm9wZG93biB7Li4uc3R1YlByb3BzfSB7Li4ucHJvcHN9IC8+O1xuXG5kZXNjcmliZSgndGVhbSBkcm9wZG93biBzdGF0ZScsICgpID0+IHtcbiAgdGVzdCgnc2hvdWxkIG5vdCBiZSBhcmNoaXZhYmxlIHdoZW4gaXNBcmNoaXZlYWJsZSBpcyBmYWxzZScsICgpID0+IHtcbiAgICBjb25zdCBjb21wb25lbnQgPSByZW5kZXIoPFdyYXBwZXIgLz4pO1xuICAgIGZpcmVFdmVudC5jbGljayhjb21wb25lbnQuZ2V0QnlUZXh0KCdPcGVuIG1lbnUnKSk7XG5cbiAgICBleHBlY3QoY29tcG9uZW50LnF1ZXJ5QnlUZXh0KCdBcmNoaXZlJykpLnRvQmVOdWxsKCk7XG4gIH0pO1xuXG4gIHRlc3QoJ3Nob3VsZCBiZSBhcmNoaXZhYmxlIHdoZW4gaXNBcmNoaXZlYWJsZSBpcyB0cnVlJywgKCkgPT4ge1xuICAgIGNvbnN0IGNvbXBvbmVudCA9IHJlbmRlcig8V3JhcHBlciBpc0FyY2hpdmVhYmxlPXt0cnVlfSAvPik7XG4gICAgZmlyZUV2ZW50LmNsaWNrKGNvbXBvbmVudC5nZXRCeVRleHQoJ09wZW4gbWVudScpKTtcblxuICAgIGV4cGVjdChjb21wb25lbnQucXVlcnlCeVRleHQoJ0FyY2hpdmUnKSkudG9CZVRydXRoeSgpO1xuICB9KTtcblxuICB0ZXN0KCdzaG91bGQgZmlyZSBhcmNoaXZlIGFjdGlvbicsICgpID0+IHtcbiAgICBjb25zdCBjb21wb25lbnQgPSByZW5kZXIoPFdyYXBwZXIgaXNBcmNoaXZlYWJsZT17dHJ1ZX0gLz4pO1xuICAgIGZpcmVFdmVudC5jbGljayhjb21wb25lbnQuZ2V0QnlUZXh0KCdPcGVuIG1lbnUnKSk7XG4gICAgZXhwZWN0KGNvbXBvbmVudC5xdWVyeUJ5VGV4dCgnQXJjaGl2ZScpKS50b0JlVHJ1dGh5KCk7XG5cbiAgICBmaXJlRXZlbnQuY2xpY2soY29tcG9uZW50LmdldEJ5VGV4dCgnQXJjaGl2ZScpKTtcbiAgICBleHBlY3Qoc3R1YlByb3BzLmFyY2hpdmVBY3Rpb24pLnRvQmVDYWxsZWQoKTtcbiAgfSk7XG5cbiAgdGVzdCgnc2hvdWxkIGZpcmUgZWRpdCBhY3Rpb24nLCAoKSA9PiB7XG4gICAgY29uc3QgY29tcG9uZW50ID0gcmVuZGVyKDxXcmFwcGVyIC8+KTtcbiAgICBmaXJlRXZlbnQuY2xpY2soY29tcG9uZW50LmdldEJ5VGV4dCgnT3BlbiBtZW51JykpO1xuICAgIGZpcmVFdmVudC5jbGljayhjb21wb25lbnQuZ2V0QnlUZXh0KCdFZGl0JykpO1xuICAgIGV4cGVjdChzdHViUHJvcHMuZWRpdEFjdGlvbikudG9CZUNhbGxlZCgpO1xuICB9KTtcblxuICB0ZXN0KCdzaG91bGQgZmlyZSBkZWxldGUgYWN0aW9uJywgKCkgPT4ge1xuICAgIGNvbnN0IGNvbXBvbmVudCA9IHJlbmRlcig8V3JhcHBlciAvPik7XG4gICAgZmlyZUV2ZW50LmNsaWNrKGNvbXBvbmVudC5nZXRCeVRleHQoJ09wZW4gbWVudScpKTtcbiAgICBmaXJlRXZlbnQuY2xpY2soY29tcG9uZW50LmdldEJ5VGV4dCgnRGVsZXRlJykpO1xuICAgIGV4cGVjdChzdHViUHJvcHMuZGVsZXRlQWN0aW9uKS50b0JlQ2FsbGVkKCk7XG4gIH0pO1xufSk7XG4iKSkpO31pZih0eXBlb2YgTURYQ29udGVudCE9PSd1bmRlZmluZWQnJiZNRFhDb250ZW50JiZNRFhDb250ZW50PT09T2JqZWN0KE1EWENvbnRlbnQpJiZPYmplY3QuaXNFeHRlbnNpYmxlKE1EWENvbnRlbnQpKXtPYmplY3QuZGVmaW5lUHJvcGVydHkoTURYQ29udGVudCwnX19maWxlbWV0YScse2VudW1lcmFibGU6dHJ1ZSxjb25maWd1cmFibGU6dHJ1ZSx2YWx1ZTp7bmFtZToiTURYQ29udGVudCIsZmlsZW5hbWU6Im1hbnVhbC9SZWFjdC9SZWFjdC1UZXN0aW5nLUxpYnJhcnkubWQifX0pO31NRFhDb250ZW50LmlzTURYQ29tcG9uZW50PXRydWU7"},{"version":3,"sources":["/Users/dennis.okeeffe/Project-Imposter/developer-notes/manual/React/React-Testing-Library.md"],"names":["React","mdx","makeShortcode","name","MDXDefaultShortcode","props","console","warn","layoutProps","MDXLayout","MDXContent","components","isMDXComponent"],"mappings":"iMAAA,cACE,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,GAAT,KAAoB,eAApB,CACA,cAGF,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAAAC,IAAI,QAAI,SAASC,CAAAA,mBAAT,CAA6BC,KAA7B,CAAoC,CAChEC,OAAO,CAACC,IAAR,CAAa,aAAeJ,IAAf,CAAsB,yEAAnC,EACA,MAAO,WAASE,KAAT,CAAP,CACD,CAHyB,EAA1B,CAKA,GAAMG,CAAAA,WAAW,CAAG,EAApB,CAGA,GAAMC,CAAAA,SAAS,CAAG,SAAlB,CACA,cAAe,SAASC,CAAAA,UAAT,MAGZ,IAFDC,CAAAA,UAEC,MAFDA,UAEC,CADEN,KACF,+CACD,MAAO,KAAC,SAAD,kBAAeG,WAAf,CAAgCH,KAAhC,EAAuC,UAAU,CAAEM,UAAnD,CAA+D,OAAO,CAAC,WAAvE,GACL,SAAQ,CACN,KAAM,uBADA,CAAR,yBADK,CAIL,oDAJK,CAKL,eAAK,0BAAM,UAAU,CAAC,KAAjB,EAA2B,CAC5B,YAAa,qBADe,CAA3B,+tDAAL,CALK,CAAP,CA4DD,C,iRAEDD,UAAU,CAACE,cAAX,CAA4B,IAA5B","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"react-testing-library\"\n    }}>{`React Testing Library`}</h1>\n    <p>{`An example of the library in action:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-typescript\"\n      }}>{`import * as React from 'react';\nimport { render, fireEvent } from '@testing-library/react';\nimport TeamDropdown from '../TeamDropdown';\n\nconst stubProps = {\n  isArchiveable: false,\n  editAction: jest.fn(),\n  archiveAction: jest.fn(),\n  deleteAction: jest.fn()\n};\n\nconst Wrapper = (props: any = {}) => <TeamDropdown {...stubProps} {...props} />;\n\ndescribe('team dropdown state', () => {\n  test('should not be archivable when isArchiveable is false', () => {\n    const component = render(<Wrapper />);\n    fireEvent.click(component.getByText('Open menu'));\n\n    expect(component.queryByText('Archive')).toBeNull();\n  });\n\n  test('should be archivable when isArchiveable is true', () => {\n    const component = render(<Wrapper isArchiveable={true} />);\n    fireEvent.click(component.getByText('Open menu'));\n\n    expect(component.queryByText('Archive')).toBeTruthy();\n  });\n\n  test('should fire archive action', () => {\n    const component = render(<Wrapper isArchiveable={true} />);\n    fireEvent.click(component.getByText('Open menu'));\n    expect(component.queryByText('Archive')).toBeTruthy();\n\n    fireEvent.click(component.getByText('Archive'));\n    expect(stubProps.archiveAction).toBeCalled();\n  });\n\n  test('should fire edit action', () => {\n    const component = render(<Wrapper />);\n    fireEvent.click(component.getByText('Open menu'));\n    fireEvent.click(component.getByText('Edit'));\n    expect(stubProps.editAction).toBeCalled();\n  });\n\n  test('should fire delete action', () => {\n    const component = render(<Wrapper />);\n    fireEvent.click(component.getByText('Open menu'));\n    fireEvent.click(component.getByText('Delete'));\n    expect(stubProps.deleteAction).toBeCalled();\n  });\n});\n`}</code></pre>\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  "]}]}