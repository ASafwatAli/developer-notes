{"remainingRequest":"/Users/okeeffe_d/Project-Imposter/developer-notes/node_modules/docz-core/node_modules/babel-loader/lib/index.js??ref--6-1!/Users/okeeffe_d/Project-Imposter/developer-notes/node_modules/@mdx-js/loader/index.js??ref--6-2!/Users/okeeffe_d/Project-Imposter/developer-notes/node_modules/source-map-loader/index.js!/Users/okeeffe_d/Project-Imposter/developer-notes/manual/Go/Go-Fizz-Buzz.md","dependencies":[{"path":"/Users/okeeffe_d/Project-Imposter/developer-notes/manual/Go/Go-Fizz-Buzz.md","mtime":1553129727998},{"path":"/Users/okeeffe_d/Project-Imposter/developer-notes/node_modules/cache-loader/dist/cjs.js","mtime":1561535530324},{"path":"/Users/okeeffe_d/Project-Imposter/developer-notes/node_modules/docz-core/node_modules/babel-loader/lib/index.js","mtime":1560300163820},{"path":"/Users/okeeffe_d/Project-Imposter/developer-notes/node_modules/@mdx-js/loader/index.js","mtime":1561535530532},{"path":"/Users/okeeffe_d/Project-Imposter/developer-notes/node_modules/source-map-loader/index.js","mtime":1548285283521}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9vYmplY3RXaXRob3V0UHJvcGVydGllcyBmcm9tIi9Vc2Vycy9va2VlZmZlX2QvUHJvamVjdC1JbXBvc3Rlci9kZXZlbG9wZXItbm90ZXMvbm9kZV9tb2R1bGVzL2JhYmVsLXByZXNldC1yZWFjdC1hcHAvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzIjsvKiBAanN4IG1keCAqL2ltcG9ydCBSZWFjdCBmcm9tJ3JlYWN0JztpbXBvcnR7bWR4fWZyb20nQG1keC1qcy9yZWFjdCc7LyogQGpzeCBtZHggKi92YXIgbWFrZVNob3J0Y29kZT1mdW5jdGlvbiBtYWtlU2hvcnRjb2RlKG5hbWUpe3JldHVybiBmdW5jdGlvbiBNRFhEZWZhdWx0U2hvcnRjb2RlKHByb3BzKXtjb25zb2xlLndhcm4oIkNvbXBvbmVudCAiK25hbWUrIiB3YXMgbm90IGltcG9ydGVkLCBleHBvcnRlZCwgb3IgcHJvdmlkZWQgYnkgTURYUHJvdmlkZXIgYXMgZ2xvYmFsIHNjb3BlIik7cmV0dXJuIG1keCgiZGl2Iixwcm9wcyk7fTt9O3ZhciBsYXlvdXRQcm9wcz17fTt2YXIgTURYTGF5b3V0PSJ3cmFwcGVyIjtleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBNRFhDb250ZW50KF9yZWYpe3ZhciBjb21wb25lbnRzPV9yZWYuY29tcG9uZW50cyxwcm9wcz1fb2JqZWN0V2l0aG91dFByb3BlcnRpZXMoX3JlZixbImNvbXBvbmVudHMiXSk7cmV0dXJuIG1keChNRFhMYXlvdXQsT2JqZWN0LmFzc2lnbih7fSxsYXlvdXRQcm9wcyxwcm9wcyx7Y29tcG9uZW50czpjb21wb25lbnRzLG1keFR5cGU6Ik1EWExheW91dCJ9KSxtZHgoImgxIix7ImlkIjoiZml6ei1idXp6LWluLWdvbGFuZyJ9LCJGaXp6IEJ1enogaW4gR29sYW5nIiksbWR4KCJwIixudWxsLCJBIGJhc2ljIGltcGxlbWVudGF0aW9uIG9mIHRoZSBpbmZhbW91cyBGaXp6IEJ1enogd2l0aCB1bml0IHRlc3RpbmcuIiksbWR4KCJoMiIseyJpZCI6InNldHRpbmctdXAtdGhlLXRlc3QifSwiU2V0dGluZyB1cCB0aGUgdGVzdCIpLG1keCgicCIsbnVsbCwiU2V0IHVwICIsbWR4KCJpbmxpbmVDb2RlIix7cGFyZW50TmFtZToicCJ9LCJmaXp6X2J1enpfdGVzdC5nbyIpLCIgd2l0aCB0aGUgZm9sbG93aW5nIGZpbGU6IiksbWR4KCJwcmUiLG51bGwsbWR4KCJjb2RlIixPYmplY3QuYXNzaWduKHtwYXJlbnROYW1lOiJwcmUifSx7ImNsYXNzTmFtZSI6Imxhbmd1YWdlLWdvIn0pLCJwYWNrYWdlIGZpenpidXp6XG5cbmltcG9ydCBcInRlc3RpbmdcIlxuXG5mdW5jIFRlc3RSZXR1cm5TdHJpbmcodCAqdGVzdGluZy5UKSB7XG4gICAgZXhwZWN0ZWQgOj0gXCIyXCJcbiAgICBpZiBvYnNlcnZlZCA6PSBGaXp6QnV6eigyKTsgb2JzZXJ2ZWQgIT0gZXhwZWN0ZWQge1xuICAgICAgICB0LkZhdGFsZihcIkZpenpCdXp6KDIpKSA9ICV2LCB3YW50ICV2XCIsIG9ic2VydmVkLCBleHBlY3RlZClcbiAgICB9XG59XG5mdW5jIFRlc3RGaXp6KHQgKnRlc3RpbmcuVCkge1xuICAgIGV4cGVjdGVkIDo9IFwiRml6elwiXG4gICAgaWYgb2JzZXJ2ZWQgOj0gRml6ekJ1enooMyk7IG9ic2VydmVkICE9IGV4cGVjdGVkIHtcbiAgICAgICAgdC5GYXRhbGYoXCJGaXp6QnV6eigzKSkgPSAldiwgd2FudCAldlwiLCBvYnNlcnZlZCwgZXhwZWN0ZWQpXG4gICAgfVxufVxuXG5mdW5jIFRlc3RCdXp6KHQgKnRlc3RpbmcuVCkge1xuICAgIGV4cGVjdGVkIDo9IFwiQnV6elwiXG4gICAgaWYgb2JzZXJ2ZWQgOj0gRml6ekJ1enooNSk7IG9ic2VydmVkICE9IGV4cGVjdGVkIHtcbiAgICAgICAgdC5GYXRhbGYoXCJGaXp6QnV6eig1KSkgPSAldiwgd2FudCAldlwiLCBvYnNlcnZlZCwgZXhwZWN0ZWQpXG4gICAgfVxufVxuXG5mdW5jIFRlc3RGaXp6QnV6eih0ICp0ZXN0aW5nLlQpIHtcbiAgICBleHBlY3RlZCA6PSBcIkZpenpCdXp6XCJcbiAgICBpZiBvYnNlcnZlZCA6PSBGaXp6QnV6eigxNSk7IG9ic2VydmVkICE9IGV4cGVjdGVkIHtcbiAgICAgICAgdC5GYXRhbGYoXCJGaXp6QnV6eigxNSkpID0gJXYsIHdhbnQgJXZcIiwgb2JzZXJ2ZWQsIGV4cGVjdGVkKVxuICAgIH1cbn1cblxuLy8gQmVuY2htYXJrRml6ekJ1enooKSBpcyBhIGJlbmNobWFya2luZyBmdW5jdGlvbi4gVGhlc2UgZnVuY3Rpb25zIGZvbGxvdyB0aGVcbi8vIGZvcm0gYGZ1bmMgQmVuY2htYXJrWHh4KCp0ZXN0aW5nLkIpYCBhbmQgY2FuIGJlIHVzZWQgdG8gdGVzdCB0aGUgcGVyZm9ybWFuY2Vcbi8vIG9mIHlvdXIgaW1wbGVtZW50YXRpb24uIFRoZXkgbWF5IG5vdCBiZSBwcmVzZW50IGluIGV2ZXJ5IGV4ZXJjaXNlLCBidXQgd2hlblxuLy8gdGhleSBhcmUgeW91IGNhbiBydW4gdGhlbSBieSBpbmNsdWRpbmcgdGhlIGAtYmVuY2hgIGZsYWcgd2l0aCB0aGUgYGdvIHRlc3RgXG4vLyBjb21tYW5kLCBsaWtlIHNvOiBgZ28gdGVzdCAtdiAtLWJlbmNoIC4gLS1iZW5jaG1lbWBcbi8vXG4vLyBZb3Ugd2lsbCBzZWUgb3V0cHV0IHNpbWlsYXIgdG8gdGhlIGZvbGxvd2luZzpcbi8vXG4vLyBCZW5jaG1hcmtGaXp6QnV6eiAgICAyMDAwMDAwMDAwICAgICAgICAgICAwLjQ2IG5zL29wXG4vL1xuLy8gVGhpcyBtZWFucyB0aGF0IHRoZSBsb29wIHJhbiAyMDAwMDAwMDAwIHRpbWVzIGF0IGEgc3BlZWQgb2YgMC40NiBucyBwZXIgbG9vcC5cbi8vXG4vLyBXaGlsZSBiZW5jaG1hcmtpbmcgY2FuIGJlIHVzZWZ1bCB0byBjb21wYXJlIGRpZmZlcmVudCBpdGVyYXRpb25zIG9mIHRoZSBzYW1lXG4vLyBleGVyY2lzZSwga2VlcCBpbiBtaW5kIHRoYXQgb3RoZXJzIHdpbGwgcnVuIHRoZSBzYW1lIGJlbmNobWFya3Mgb24gZGlmZmVyZW50XG4vLyBtYWNoaW5lcywgd2l0aCBkaWZmZXJlbnQgc3BlY3MsIHNvIHRoZSByZXN1bHRzIGZyb20gdGhlc2UgYmVuY2htYXJrIHRlc3RzIG1heVxuLy8gdmFyeS5cbmZ1bmMgQmVuY2htYXJrRml6ekJ1enooYiAqdGVzdGluZy5CKSB7XG4gICAgZm9yIGkgOj0gMDsgaSA8IGIuTjsgaSsrIHtcbiAgICAgICAgRml6ekJ1enooMTUpXG4gICAgfVxufVxuIikpLG1keCgiaDIiLHsiaWQiOiJmaXp6LWJ1enotaW1wbGVtZW50YXRpb24ifSwiRml6eiBCdXp6IGltcGxlbWVudGF0aW9uIiksbWR4KCJwIixudWxsLCJXZSB3aWxsIHVzZSB0aGUgaW50ZXJnZXItdG8tQVNDSUkgZnVuY3Rpb24gIixtZHgoImlubGluZUNvZGUiLHtwYXJlbnROYW1lOiJwIn0sIml0b2EiKSwiIGZyb20gdGhlICIsbWR4KCJpbmxpbmVDb2RlIix7cGFyZW50TmFtZToicCJ9LCJzdHJpbmdzIiksIiBsaWJyYXJ5LiIpLG1keCgicHJlIixudWxsLG1keCgiY29kZSIsT2JqZWN0LmFzc2lnbih7cGFyZW50TmFtZToicHJlIn0seyJjbGFzc05hbWUiOiJsYW5ndWFnZS1nbyJ9KSwicGFja2FnZSBmaXp6YnV6elxuXG5pbXBvcnQgXCJzdHJjb252XCJcblxuLy8gRml6ekJ1enogc2hvdWxkIGhhdmUgYSBjb21tZW50IGRvY3VtZW50aW5nIGl0LlxuZnVuYyBGaXp6QnV6eihpIGludCkgc3RyaW5nIHtcbiAgICBzd2l0Y2ggdHJ1ZSB7XG4gICAgY2FzZSBpJTE1ID09IDA6XG4gICAgICAgIHJldHVybiBcIkZpenpCdXp6XCJcbiAgICBjYXNlIGklMyA9PSAwOlxuICAgICAgICByZXR1cm4gXCJGaXp6XCJcbiAgICBjYXNlIGklNSA9PSAwOlxuICAgICAgICByZXR1cm4gXCJCdXp6XCJcbiAgICBkZWZhdWx0OlxuICAgICAgICByZXR1cm4gc3RyY29udi5JdG9hKGkpXG4gICAgfVxufVxuIikpLG1keCgiaDIiLHsiaWQiOiJydW5uaW5nLXRlc3RzIn0sIlJ1bm5pbmcgVGVzdHMiKSxtZHgoInAiLG51bGwsIkluIHRoZSBkaXJlY3RvcnksIHJ1biAiLG1keCgiaW5saW5lQ29kZSIse3BhcmVudE5hbWU6InAifSwiZ28gdGVzdCIpLCIuIikpO31pZih0eXBlb2YgTURYQ29udGVudCE9PSd1bmRlZmluZWQnJiZNRFhDb250ZW50JiZNRFhDb250ZW50PT09T2JqZWN0KE1EWENvbnRlbnQpJiZPYmplY3QuaXNFeHRlbnNpYmxlKE1EWENvbnRlbnQpKXtPYmplY3QuZGVmaW5lUHJvcGVydHkoTURYQ29udGVudCwnX19maWxlbWV0YScse2VudW1lcmFibGU6dHJ1ZSxjb25maWd1cmFibGU6dHJ1ZSx2YWx1ZTp7bmFtZToiTURYQ29udGVudCIsZmlsZW5hbWU6Im1hbnVhbC9Hby9Hby1GaXp6LUJ1enoubWQifX0pO31NRFhDb250ZW50LmlzTURYQ29tcG9uZW50PXRydWU7"},{"version":3,"sources":["/Users/okeeffe_d/Project-Imposter/developer-notes/manual/Go/Go-Fizz-Buzz.md"],"names":["React","mdx","makeShortcode","name","MDXDefaultShortcode","props","console","warn","layoutProps","MDXLayout","MDXContent","components","isMDXComponent"],"mappings":"4LAAA,cACE,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,GAAT,KAAoB,eAApB,CACA,cAGF,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAAAC,IAAI,QAAI,SAASC,CAAAA,mBAAT,CAA6BC,KAA7B,CAAoC,CAChEC,OAAO,CAACC,IAAR,CAAa,aAAeJ,IAAf,CAAsB,yEAAnC,EACA,MAAO,WAASE,KAAT,CAAP,CACD,CAHyB,EAA1B,CAKA,GAAMG,CAAAA,WAAW,CAAG,EAApB,CAGA,GAAMC,CAAAA,SAAS,CAAG,SAAlB,CACA,cAAe,SAASC,CAAAA,UAAT,MAGZ,IAFDC,CAAAA,UAEC,MAFDA,UAEC,CADEN,KACF,+CACD,MAAO,KAAC,SAAD,kBAAeG,WAAf,CAAgCH,KAAhC,EAAuC,UAAU,CAAEM,UAAnD,CAA+D,OAAO,CAAC,WAAvE,GACL,SAAQ,CACN,KAAM,qBADA,CAAR,uBADK,CAIL,mFAJK,CAKL,SAAQ,CACN,KAAM,qBADA,CAAR,uBALK,CAQL,uBAAc,kBAAY,UAAU,CAAC,GAAvB,sBAAd,6BARK,CASL,eAAK,0BAAM,UAAU,CAAC,KAAjB,EAA2B,CAC5B,YAAa,aADe,CAA3B,mvDAAL,CATK,CAgEL,SAAQ,CACN,KAAM,0BADA,CAAR,4BAhEK,CAmEL,2DAAkD,kBAAY,UAAU,CAAC,GAAvB,SAAlD,cAAgH,kBAAY,UAAU,CAAC,GAAvB,YAAhH,aAnEK,CAoEL,eAAK,0BAAM,UAAU,CAAC,KAAjB,EAA2B,CAC5B,YAAa,aADe,CAA3B,wVAAL,CApEK,CAwFL,SAAQ,CACN,KAAM,eADA,CAAR,iBAxFK,CA2FL,sCAA6B,kBAAY,UAAU,CAAC,GAAvB,YAA7B,KA3FK,CAAP,CA6FD,C,qQAEDD,UAAU,CAACE,cAAX,CAA4B,IAA5B","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"fizz-buzz-in-golang\"\n    }}>{`Fizz Buzz in Golang`}</h1>\n    <p>{`A basic implementation of the infamous Fizz Buzz with unit testing.`}</p>\n    <h2 {...{\n      \"id\": \"setting-up-the-test\"\n    }}>{`Setting up the test`}</h2>\n    <p>{`Set up `}<inlineCode parentName=\"p\">{`fizz_buzz_test.go`}</inlineCode>{` with the following file:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-go\"\n      }}>{`package fizzbuzz\n\nimport \"testing\"\n\nfunc TestReturnString(t *testing.T) {\n    expected := \"2\"\n    if observed := FizzBuzz(2); observed != expected {\n        t.Fatalf(\"FizzBuzz(2)) = %v, want %v\", observed, expected)\n    }\n}\nfunc TestFizz(t *testing.T) {\n    expected := \"Fizz\"\n    if observed := FizzBuzz(3); observed != expected {\n        t.Fatalf(\"FizzBuzz(3)) = %v, want %v\", observed, expected)\n    }\n}\n\nfunc TestBuzz(t *testing.T) {\n    expected := \"Buzz\"\n    if observed := FizzBuzz(5); observed != expected {\n        t.Fatalf(\"FizzBuzz(5)) = %v, want %v\", observed, expected)\n    }\n}\n\nfunc TestFizzBuzz(t *testing.T) {\n    expected := \"FizzBuzz\"\n    if observed := FizzBuzz(15); observed != expected {\n        t.Fatalf(\"FizzBuzz(15)) = %v, want %v\", observed, expected)\n    }\n}\n\n// BenchmarkFizzBuzz() is a benchmarking function. These functions follow the\n// form \\`func BenchmarkXxx(*testing.B)\\` and can be used to test the performance\n// of your implementation. They may not be present in every exercise, but when\n// they are you can run them by including the \\`-bench\\` flag with the \\`go test\\`\n// command, like so: \\`go test -v --bench . --benchmem\\`\n//\n// You will see output similar to the following:\n//\n// BenchmarkFizzBuzz    2000000000           0.46 ns/op\n//\n// This means that the loop ran 2000000000 times at a speed of 0.46 ns per loop.\n//\n// While benchmarking can be useful to compare different iterations of the same\n// exercise, keep in mind that others will run the same benchmarks on different\n// machines, with different specs, so the results from these benchmark tests may\n// vary.\nfunc BenchmarkFizzBuzz(b *testing.B) {\n    for i := 0; i < b.N; i++ {\n        FizzBuzz(15)\n    }\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"fizz-buzz-implementation\"\n    }}>{`Fizz Buzz implementation`}</h2>\n    <p>{`We will use the interger-to-ASCII function `}<inlineCode parentName=\"p\">{`itoa`}</inlineCode>{` from the `}<inlineCode parentName=\"p\">{`strings`}</inlineCode>{` library.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-go\"\n      }}>{`package fizzbuzz\n\nimport \"strconv\"\n\n// FizzBuzz should have a comment documenting it.\nfunc FizzBuzz(i int) string {\n    switch true {\n    case i%15 == 0:\n        return \"FizzBuzz\"\n    case i%3 == 0:\n        return \"Fizz\"\n    case i%5 == 0:\n        return \"Buzz\"\n    default:\n        return strconv.Itoa(i)\n    }\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"running-tests\"\n    }}>{`Running Tests`}</h2>\n    <p>{`In the directory, run `}<inlineCode parentName=\"p\">{`go test`}</inlineCode>{`.`}</p>\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  "]}]}