{"remainingRequest":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/docz-core/node_modules/babel-loader/lib/index.js??ref--6-1!/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/@mdx-js/loader/index.js??ref--6-2!/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/source-map-loader/index.js!/Users/dennis.okeeffe/Project-Imposter/developer-notes/manual/Kubernetes/KOPS-Getting-Started.md","dependencies":[{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/manual/Kubernetes/KOPS-Getting-Started.md","mtime":1562563032053},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/cache-loader/dist/cjs.js","mtime":1564095360956},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/docz-core/node_modules/babel-loader/lib/index.js","mtime":1562568123838},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/@mdx-js/loader/index.js","mtime":1565139338792},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/source-map-loader/index.js","mtime":1564095361765}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/dennis.okeeffe/Project-Imposter/developer-notes/manual/Kubernetes/KOPS-Getting-Started.md"],"names":["React","mdx","makeShortcode","name","MDXDefaultShortcode","props","console","warn","layoutProps","MDXLayout","MDXContent","components","isMDXComponent"],"mappings":"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","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"getting-started\"\n    }}>{`Getting Started`}</h1>\n    <p>{`kubectl: Install via brew\nminikube: `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/kubernetes/minikube/releases\"\n      }}>{`https://github.com/kubernetes/minikube/releases`}</a>{`\nkops: Install via brew`}</p>\n    <p>{`Minikube test commands:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`minikube status # check status\nminikube start # start cluster\n`}</code></pre>\n    <p>{`For OSX install:`}</p>\n    <p><inlineCode parentName=\"p\">{`curl -Lo minikube https://storage.googleapis.com/minikube/releases/v0.25.0/minikube-darwin-amd64 && chmod +x minikube && sudo mv minikube /usr/local/bin/`}</inlineCode></p>\n    <p>{`Install Docker Edge to use the latest features with Kubernetes.`}</p>\n    <p>{`Otherwise follow the base instructions to get everything up and going.`}</p>\n    <p><inlineCode parentName=\"p\">{`https://gist.github.com/kevin-smets/b91a34cea662d0c523968472a81788f7`}</inlineCode></p>\n    <p>{`This resolves DL issue: `}<inlineCode parentName=\"p\">{`mv minikube-v0.25.1.iso ~/.minikube/cache/iso/minikube-v0.25.1.iso`}</inlineCode>{`.`}</p>\n    <h3 {...{\n      \"id\": \"procedure-document\"\n    }}>{`Procedure Document`}</h3>\n    <pre><code parentName=\"pre\" {...{}}>{`Kubernetes Procedure Document\nGithub repository [Read this first]\nDownload all the course material from: https://github.com/wardviaene/kubernetes-course\n\nQuestions?\nSend me a message\n\nUse Q&A\n\nJoin our facebook group: https://www.facebook.com/groups/840062592768074/\n\nDownload Kubectl\nLinux: https://storage.googleapis.com/kubernetes-release/release/v1.6.1/bin/linux/amd64/kubectl\n\nMacOS: https://storage.googleapis.com/kubernetes-release/release/v1.6.1/bin/darwin/amd64/kubectl\n\nWindows:\nhttps://github.com/eirslett/kubectl-windows/releases/download/v1.6.3/kubectl.exe\n\nMinikube\nProject URL: https://github.com/kubernetes/minikube\n\nLatest Release and download instructions: https://github.com/kubernetes/minikube/releases\n\nVirtualBox: http://www.virtualbox.org\n\nMinikube on windows:\nDownload the latest minikube-version.exe\n\nRename the file to minikube.exe and put it in C:\\\\minikube\n\nOpen a cmd (search for the app cmd or powershell)\n\nRun: cd C:\\\\minikube and enter minikube start\n\nTest your cluster commands\nMake sure your cluster is running, you can check with minikube status.\n\nIf your cluster is not running, enter minikube start first.\n\nkubectl run hello-minikube --image=gcr.io/google_containers/echoserver:1.4 --port=8080\nkubectl expose deployment hello-minikube --type=NodePort\n\nminikube service hello-minikube --url\n\n<open a browser and go to that url>\n\nKops\nProject URL\nhttps://github.com/kubernetes/kops\n\nFree DNS Service\nSign up at http://freedns.afraid.org/\n\nChoose for subdomain hosting\n\nEnter the AWS nameservers given to you in route53 as nameservers for the subdomain\n\nhttp://www.dot.tk/ provides a free .tk domain name you can use and you can point it to the amazon AWS nameservers\n\n###h2\n\nNamecheap.com often has promotions for tld’s like .co for just a couple of bucks\n\n\n\nCluster Commands\nkops create cluster --name=kubernetes.newtech.academy --state=s3://kops-state-b429b --zones=eu-west-1a --node-count=2 --node-size=t2.micro --master-size=t2.micro --dns-zone=kubernetes.newtech.academy\n\nkops update cluster kubernetes.newtech.academy --yes --state=s3://kops-state-b429b\n\nkops delete cluster --name kubernetes.newtech.academy --state=s3://kops-state-b429b\n\nkops delete cluster --name kubernetes.newtech.academy --state=s3://kops-state-b429b --yes\n\nKubernetes from scratch\n\n\n\n\n\n\nYou can setup your cluster manually from scratch\n\nIf you’re planning to deploy on AWS / Google / Azure, use the tools that are fit for these platforms\n\nIf you have an unsupported cloud platform, and you still want Kubernetes, you can install it manually\n\nCoreOS + Kubernetes: ###a href=\"https://coreos.com/kubernetes/docs/latest/getting-started.html\">https://coreos.com/kubernetes/docs/latest/getting-started.html\n\nDocker\nYou can download Docker Engine for:\n\nWindows: https://docs.docker.com/engine/installation/windows/\n\nMacOS: https://docs.docker.com/engine/installation/mac/\n\nLinux: https://docs.docker.com/engine/installation/linux/\n\nDevOps box\nVirtualbox: http://www.virtualbox.org\n\nVagrant: http://www.vagrantup.com\n\nDevOps box: https://github.com/wardviaene/devops-box\n\nLaunch commands (in terminal / cmd / powershell):\n\ncd devops-box/\n\nvagrant up\n\nLaunch commands for a plain ubuntu box:\n\nmkdir ubuntu\n\nvagrant init ubuntu/xenial64\n\nvagrant up\n\nDocker commands\nDescription\n\nCommand\n\nBuild image\n\ndocker build .\n\nBuild & Tag\n\ndocker build -t wardviaene/k8s-demo:latest .\n\nTag image\n\ndocker tag imageid wardviaene/k8s-demo\n\nPush image\n\ndocker push wardviaene/k8s-demo\n\nList images\n\ndocker images\n\nList all containers\n\ndocker ps -a\n\nKubernetes commands\nCommand\n\nDescription\n\nkubectl get pod\n\nGet information about all running pods\n\nkubectl describe pod \\`<pod>\\`\n\nDescribe one pod\n\nkubectl expose pod \\`<pod>\\` --port=444\n\n--name=frontend\n\nExpose the port of a pod (creates a new service)\n\nkubectl port-forward \\`<pod>\\` 8080\n\nPort forward the exposed pod port to your local machine\n\nkubectl attach \\`<podname>\\` -i\n\nAttach to the pod\n\nkubectl exec \\`<pod>\\` -- command\n\nExecute a command on the pod\n\nkubectl label pods \\`<pod>\\` mylabel=awesome\n\nAdd a new label to a pod\n\nkubectl run -i --tty busybox --image=busybox\n\n--restart=Never -- sh\n\nRun a shell in a pod - very useful for debugging\n\nkubectl get deployments\n\nGet information on current deployments\n\nkubectl get rs\n\nGet information about the replica sets\n\nkubectl get pods --show-labels\n\nget pods, and also show labels attached to those pods\n\nkubectl rollout status deployment/helloworld-deployment\n\nGet deployment status\n\nkubectl set image deployment/helloworld-deployment\n\nk8s-demo=k8s-demo:2\n\nRun k8s-demo with the image label version 2\n\nkubectl edit deployment/helloworld-deployment\n\nEdit the deployment object\n\nkubectl rollout status deployment/helloworld-deployment\n\nGet the status of the rollout\n\nkubectl rollout history deployment/helloworld-deployment\n\nGet the rollout history\n\nkubectl rollout undo deployment/helloworld-deployment\n\nRollback to previous version\n\nkubectl rollout undo deployment/helloworld-deployment --to-revision=n\n\nRollback to any version version\n\nAWS Commands\naws ec2 create-volume --size 10 --region us-east-1 --availability-zone us-east-1a --volume-type gp2\n\nCertificates\nCreating a new key for a new user: openssl genrsa -out myuser.pem 2048\n\nCreating a certificate request: openssl req -new -key myuser.pem -out myuser-csr.pem -subj \"/CN=myuser/O=myteam/\"\n\nCreating a certificate: openssl x509 -req -in myuser-csr.pem -CA /path/to/kubernetes/ca.crt -CAkey /path/to/kubernetes/ca.key -CAcreateserial -out myuser.crt -days 10000\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"what-is-kubernetes\"\n    }}>{`What is Kubernetes?`}</h2>\n    <p>{`Open source orchestration system for Docker.`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Let's you schedule containers on a cluster of machines`}</li>\n      <li parentName=\"ul\">{`You can run multiple containers on one machine`}</li>\n      <li parentName=\"ul\">{`You can run long running services (like web apps)`}</li>\n      <li parentName=\"ul\">{`K8s will manage the state of these containers`}<ul parentName=\"li\">\n          <li parentName=\"ul\">{`Can start the container on specific nodes`}</li>\n          <li parentName=\"ul\">{`Will restart a container when it gets killed`}</li>\n          <li parentName=\"ul\">{`Can move containers from one node to another node`}</li>\n        </ul></li>\n      <li parentName=\"ul\">{`Instead of just running a few docker containers on one host manually, K8s can manage that for you`}</li>\n      <li parentName=\"ul\">{`K8 clusters can go to thousands of nodes`}</li>\n      <li parentName=\"ul\">{`Other orcherstrators:`}<ul parentName=\"li\">\n          <li parentName=\"ul\">{`Docker Swarm`}</li>\n          <li parentName=\"ul\">{`Mesos`}</li>\n        </ul></li>\n    </ul>\n    <p>{`You can run K8s anywhere:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`One premise (private)`}</li>\n      <li parentName=\"ul\">{`Public`}</li>\n      <li parentName=\"ul\">{`Hybrid`}</li>\n    </ul>\n    <p>{`It is highly modular and open source. It is also backed by Google.`}</p>\n    <h2 {...{\n      \"id\": \"containers-intro\"\n    }}>{`Containers intro`}</h2>\n    <p>{`Container VS VM: No Hypervisor and Guest OS layer.`}</p>\n    <p>{`Containers on Cloud Providers do still use the hypervisor to seperate users.`}</p>\n    <p>{`Docker is the most popular container software. An alternative is `}<inlineCode parentName=\"p\">{`rkt`}</inlineCode>{`.`}</p>\n    <p>{`Benefits? It works in isolation. You ship the binary with all the dependencies and create a closer parity.`}</p>\n    <p>{`Docker makes development teams able to ship faster.`}</p>\n    <p>{`You can run the same image on prem and in the cloud with what should be the same results.`}</p>\n    <h2 {...{\n      \"id\": \"kubernetes-setup\"\n    }}>{`Kubernetes Setup`}</h2>\n    <p>{`Something to note is that there are more integrations for certain Cloud Providers like AWS & GCE. Thingsl ike \"Volumes\" and \"External Load Balancers\" work only with support Cloud Providers.`}</p>\n    <h3 {...{\n      \"id\": \"running-locally\"\n    }}>{`Running locally`}</h3>\n    <p>{`We can use `}<inlineCode parentName=\"p\">{`minikube`}</inlineCode>{` to spin up a local single machine with a Kubernetes cluster.`}</p>\n    <h4 {...{\n      \"id\": \"minikube\"\n    }}>{`Minikube`}</h4>\n    <p>{`Minikube is a tool that makes running k8s locally easy.`}</p>\n    <p>{`It runs a single-node Kubernetes cluster inside a Linux VM.`}</p>\n    <p>{`It's aimed on users who just want to just test it out or use if for development.`}</p>\n    <p>{`It cannot spin up a roduction cluster, it's a one node machine with no high availability.`}</p>\n    <p>{`You need VM to run all this.`}</p>\n    <p>{`To run a cluster, just run `}<inlineCode parentName=\"p\">{`minikube start`}</inlineCode>{`.`}</p>\n    <p>{`To check your config after spinning up Kubernetes, use `}<inlineCode parentName=\"p\">{`cat ~/.kube/config`}</inlineCode>{`.`}</p>\n    <h3 {...{\n      \"id\": \"running-on-aws\"\n    }}>{`Running on AWS`}</h3>\n    <p>{`Until EKS comes out, we can spin up a Kubernetes cluster using KOPS.`}</p>\n    <p>{`You need to ensure that you download Vagrant and a VM.`}</p>\n    <p>{`For running the Vagrant box, you can run `}<inlineCode parentName=\"p\">{`vagrant up --provider virtualbox`}</inlineCode>{`.`}</p>\n    <p>{`You can then use `}<inlineCode parentName=\"p\">{`vagrant ssh`}</inlineCode>{` to ssh in.`}</p>\n    <p>{`After you are in, download Kops:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`curl -LO https://github.com/kubernetes/kops/releases/download/$(curl -s https://api.github.com/repos/kubernetes/kops/releases/latest | grep tag_name | cut -d '\"' -f 4)/kops-linux-amd64\nchmod +x kops-linux-amd64\nsudo mv kops-linux-amd64 /usr/local/bin/kops\n`}</code></pre>\n    <p>{`Ensure that you also download `}<inlineCode parentName=\"p\">{`python-pip`}</inlineCode>{`:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`sudo apt-get install software-properties-common\nsudo apt-add-repository universe\nsudo apt-get update\nsudo apt-get install python-pip\n`}</code></pre>\n    <p>{`Then install awscli:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`export LC_ALL=C # if run into an error about locale settings\nsudo pip install awscli\n`}</code></pre>\n    <p>{`You will then need to create an AWS account.`}</p>\n    <p>{`After setting up the AWSCLI, installing Kops and creating a S3 Bucket + setting up the Route53 Name Servers (on somewhere like NameCheap), you can move on.`}</p>\n    <h3 {...{\n      \"id\": \"cluster-setup-on-kops\"\n    }}>{`Cluster setup on Kops`}</h3>\n    <p>{`First, download Kops for Linux on the Vagrant box and move it.`}</p>\n    <p>{`Before creating the cluster, you will need to create new keys. `}<inlineCode parentName=\"p\">{`ssh-keygen -f .ssh/id_rsa`}</inlineCode>{`.`}</p>\n    <p>{`To create the cluster (example), run `}<inlineCode parentName=\"p\">{`kops create cluster --name=kubernetes.test --state=s3://kops-state-oeiajrie93 --zones=ap-southeast-2a --node-count=2 --node-size=t2.micro --master-size=t2.micro --dns-zone=givemeyeezy.online`}</inlineCode></p>\n    <p>{`This DNS zone is basically just the one that we set up.`}</p>\n    <p>{`You'll get something back like`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`I0311 21:48:46.821364    7553 create_cluster.go:439] Inferred --cloud=aws from zone \"ap-southeast-2a\"\nI0311 21:48:46.821506    7553 create_cluster.go:971] Using SSH public key: /home/vagrant/.ssh/id_rsa.pub\nI0311 21:48:48.232635    7553 subnets.go:184] Assigned CIDR 172.20.32.0/19 to subnet ap-southeast-2a\nPreviewing changes that will be made:\n\nI0311 21:48:52.305360    7553 executor.go:91] Tasks: 0 done / 73 total; 31 can run\nI0311 21:48:53.503124    7553 executor.go:91] Tasks: 31 done / 73 total; 24 can run\nI0311 21:48:53.958875    7553 executor.go:91] Tasks: 55 done / 73 total; 16 can run\nI0311 21:48:54.237870    7553 executor.go:91] Tasks: 71 done / 73 total; 2 can run\nI0311 21:48:54.262347    7553 executor.go:91] Tasks: 73 done / 73 total; 0 can run\nWill create resources:\n  AutoscalingGroup/master-ap-southeast-2a.masters.kubernetes.test\n  MinSize               1\n  MaxSize               1\n  Subnets               [name:ap-southeast-2a.kubernetes.test]\n  Tags                  {k8s.io/role/master: 1, Name: master-ap-southeast-2a.masters.kubernetes.test, KubernetesCluster: kubernetes.test, k8s.io/cluster-autoscaler/node-template/label/kops.k8s.io/instancegroup: master-ap-southeast-2a}\n  LaunchConfiguration   name:master-ap-southeast-2a.masters.kubernetes.test\n\n  AutoscalingGroup/nodes.kubernetes.test\n  MinSize               2\n  MaxSize               2\n  Subnets               [name:ap-southeast-2a.kubernetes.test]\n  Tags                  {k8s.io/cluster-autoscaler/node-template/label/kops.k8s.io/instancegroup: nodes, k8s.io/role/node: 1, Name: nodes.kubernetes.test, KubernetesCluster: kubernetes.test}\n  LaunchConfiguration   name:nodes.kubernetes.test\n\n  DHCPOptions/kubernetes.test\n  DomainName            ap-southeast-2.compute.internal\n  DomainNameServers     AmazonProvidedDNS\n\n  EBSVolume/a.etcd-events.kubernetes.test\n  AvailabilityZone      ap-southeast-2a\n  VolumeType            gp2\n  SizeGB                20\n  Encrypted             false\n  Tags                  {KubernetesCluster: kubernetes.test, k8s.io/etcd/events: a/a, k8s.io/role/master: 1, Name: a.etcd-events.kubernetes.test}\n\n  EBSVolume/a.etcd-main.kubernetes.test\n  AvailabilityZone      ap-southeast-2a\n  VolumeType            gp2\n  SizeGB                20\n  Encrypted             false\n  Tags                  {k8s.io/etcd/main: a/a, k8s.io/role/master: 1, Name: a.etcd-main.kubernetes.test, KubernetesCluster: kubernetes.test}\n\n  IAMInstanceProfile/masters.kubernetes.test\n\n  IAMInstanceProfile/nodes.kubernetes.test\n\n  IAMInstanceProfileRole/masters.kubernetes.test\n  InstanceProfile       name:masters.kubernetes.test id:masters.kubernetes.test\n  Role                  name:masters.kubernetes.test\n\n  IAMInstanceProfileRole/nodes.kubernetes.test\n  InstanceProfile       name:nodes.kubernetes.test id:nodes.kubernetes.test\n  Role                  name:nodes.kubernetes.test\n\n  IAMRole/masters.kubernetes.test\n  ExportWithID          masters\n\n  IAMRole/nodes.kubernetes.test\n  ExportWithID          nodes\n\n  IAMRolePolicy/masters.kubernetes.test\n  Role                  name:masters.kubernetes.test\n\n  IAMRolePolicy/nodes.kubernetes.test\n  Role                  name:nodes.kubernetes.test\n\n  InternetGateway/kubernetes.test\n  VPC                   name:kubernetes.test\n  Shared                false\n\n  Keypair/apiserver-aggregator\n  Subject               cn=aggregator\n  Type                  client\n  Signer                name:apiserver-aggregator-ca id:cn=apiserver-aggregator-ca\n\n  Keypair/apiserver-aggregator-ca\n  Subject               cn=apiserver-aggregator-ca\n  Type                  ca\n\n  Keypair/apiserver-proxy-client\n  Subject               cn=apiserver-proxy-client\n  Type                  client\n  Signer                name:ca id:cn=kubernetes\n\n  Keypair/ca\n  Subject               cn=kubernetes\n  Type                  ca\n\n  Keypair/kops\n  Subject               o=system:masters,cn=kops\n  Type                  client\n  Signer                name:ca id:cn=kubernetes\n\n  Keypair/kube-controller-manager\n  Subject               cn=system:kube-controller-manager\n  Type                  client\n  Signer                name:ca id:cn=kubernetes\n\n  Keypair/kube-proxy\n  Subject               cn=system:kube-proxy\n  Type                  client\n  Signer                name:ca id:cn=kubernetes\n\n  Keypair/kube-scheduler\n  Subject               cn=system:kube-scheduler\n  Type                  client\n  Signer                name:ca id:cn=kubernetes\n\n  Keypair/kubecfg\n  Subject               o=system:masters,cn=kubecfg\n  Type                  client\n  Signer                name:ca id:cn=kubernetes\n\n  Keypair/kubelet\n  Subject               o=system:nodes,cn=kubelet\n  Type                  client\n  Signer                name:ca id:cn=kubernetes\n\n  Keypair/kubelet-api\n  Subject               cn=kubelet-api\n  Type                  client\n  Signer                name:ca id:cn=kubernetes\n\n  Keypair/master\n  Subject               cn=kubernetes-master\n  Type                  server\n  AlternateNames        [100.64.0.1, 127.0.0.1, api.internal.kubernetes.test, api.kubernetes.test, kubernetes, kubernetes.default, kubernetes.default.svc, kubernetes.default.svc.cluster.local]\n  Signer                name:ca id:cn=kubernetes\n\n  LaunchConfiguration/master-ap-southeast-2a.masters.kubernetes.test\n  ImageID               kope.io/k8s-1.8-debian-jessie-amd64-hvm-ebs-2018-01-14\n  InstanceType          t2.micro\n  SSHKey                name:kubernetes.kubernetes.test-e8:be:8d:cf:90:3b:52:6e:f7:23:29:0a:32:d1:cd:de id:kubernetes.kubernetes.test-e8:be:8d:cf:90:3b:52:6e:f7:23:29:0a:32:d1:cd:de\n  SecurityGroups        [name:masters.kubernetes.test]\n  AssociatePublicIP     true\n  IAMInstanceProfile    name:masters.kubernetes.test id:masters.kubernetes.test\n  RootVolumeSize        64\n  RootVolumeType        gp2\n  SpotPrice\n\n  LaunchConfiguration/nodes.kubernetes.test\n  ImageID               kope.io/k8s-1.8-debian-jessie-amd64-hvm-ebs-2018-01-14\n  InstanceType          t2.micro\n  SSHKey                name:kubernetes.kubernetes.test-e8:be:8d:cf:90:3b:52:6e:f7:23:29:0a:32:d1:cd:de id:kubernetes.kubernetes.test-e8:be:8d:cf:90:3b:52:6e:f7:23:29:0a:32:d1:cd:de\n  SecurityGroups        [name:nodes.kubernetes.test]\n  AssociatePublicIP     true\n  IAMInstanceProfile    name:nodes.kubernetes.test id:nodes.kubernetes.test\n  RootVolumeSize        128\n  RootVolumeType        gp2\n  SpotPrice\n\n  ManagedFile/kubernetes.test-addons-bootstrap\n  Location              addons/bootstrap-channel.yaml\n\n  ManagedFile/kubernetes.test-addons-core.addons.k8s.io\n  Location              addons/core.addons.k8s.io/v1.4.0.yaml\n\n  ManagedFile/kubernetes.test-addons-dns-controller.addons.k8s.io-k8s-1.6\n  Location              addons/dns-controller.addons.k8s.io/k8s-1.6.yaml\n\n  ManagedFile/kubernetes.test-addons-dns-controller.addons.k8s.io-pre-k8s-1.6\n  Location              addons/dns-controller.addons.k8s.io/pre-k8s-1.6.yaml\n\n  ManagedFile/kubernetes.test-addons-kube-dns.addons.k8s.io-k8s-1.6\n  Location              addons/kube-dns.addons.k8s.io/k8s-1.6.yaml\n\n  ManagedFile/kubernetes.test-addons-kube-dns.addons.k8s.io-pre-k8s-1.6\n  Location              addons/kube-dns.addons.k8s.io/pre-k8s-1.6.yaml\n\n  ManagedFile/kubernetes.test-addons-limit-range.addons.k8s.io\n  Location              addons/limit-range.addons.k8s.io/v1.5.0.yaml\n\n  ManagedFile/kubernetes.test-addons-rbac.addons.k8s.io-k8s-1.8\n  Location              addons/rbac.addons.k8s.io/k8s-1.8.yaml\n\n  ManagedFile/kubernetes.test-addons-storage-aws.addons.k8s.io-v1.6.0\n  Location              addons/storage-aws.addons.k8s.io/v1.6.0.yaml\n\n  ManagedFile/kubernetes.test-addons-storage-aws.addons.k8s.io-v1.7.0\n  Location              addons/storage-aws.addons.k8s.io/v1.7.0.yaml\n\n  Route/0.0.0.0/0\n  RouteTable            name:kubernetes.test\n  CIDR                  0.0.0.0/0\n  InternetGateway       name:kubernetes.test\n\n  RouteTable/kubernetes.test\n  VPC                   name:kubernetes.test\n\n  RouteTableAssociation/ap-southeast-2a.kubernetes.test\n  RouteTable            name:kubernetes.test\n  Subnet                name:ap-southeast-2a.kubernetes.test\n\n  SSHKey/kubernetes.kubernetes.test-e8:be:8d:cf:90:3b:52:6e:f7:23:29:0a:32:d1:cd:de\n  KeyFingerprint        c4:89:af:59:a1:1d:6e:ef:7a:9d:12:65:bc:e2:82:4f\n\n  Secret/admin\n\n  Secret/kube\n\n  Secret/kube-proxy\n\n  Secret/kubelet\n\n  Secret/system:controller_manager\n\n  Secret/system:dns\n\n  Secret/system:logging\n\n  Secret/system:monitoring\n\n  Secret/system:scheduler\n\n  SecurityGroup/masters.kubernetes.test\n  Description           Security group for masters\n  VPC                   name:kubernetes.test\n  RemoveExtraRules      [port=22, port=443, port=2380, port=2381, port=4001, port=4002, port=4789, port=179]\n\n  SecurityGroup/nodes.kubernetes.test\n  Description           Security group for nodes\n  VPC                   name:kubernetes.test\n  RemoveExtraRules      [port=22]\n\n  SecurityGroupRule/all-master-to-master\n  SecurityGroup         name:masters.kubernetes.test\n  SourceGroup           name:masters.kubernetes.test\n\n  SecurityGroupRule/all-master-to-node\n  SecurityGroup         name:nodes.kubernetes.test\n  SourceGroup           name:masters.kubernetes.test\n\n  SecurityGroupRule/all-node-to-node\n  SecurityGroup         name:nodes.kubernetes.test\n  SourceGroup           name:nodes.kubernetes.test\n\n  SecurityGroupRule/https-external-to-master-0.0.0.0/0\n  SecurityGroup         name:masters.kubernetes.test\n  CIDR                  0.0.0.0/0\n  Protocol              tcp\n  FromPort              443\n  ToPort                443\n\n  SecurityGroupRule/master-egress\n  SecurityGroup         name:masters.kubernetes.test\n  CIDR                  0.0.0.0/0\n  Egress                true\n\n  SecurityGroupRule/node-egress\n  SecurityGroup         name:nodes.kubernetes.test\n  CIDR                  0.0.0.0/0\n  Egress                true\n\n  SecurityGroupRule/node-to-master-tcp-1-2379\n  SecurityGroup         name:masters.kubernetes.test\n  Protocol              tcp\n  FromPort              1\n  ToPort                2379\n  SourceGroup           name:nodes.kubernetes.test\n\n  SecurityGroupRule/node-to-master-tcp-2382-4000\n  SecurityGroup         name:masters.kubernetes.test\n  Protocol              tcp\n  FromPort              2382\n  ToPort                4000\n  SourceGroup           name:nodes.kubernetes.test\n\n  SecurityGroupRule/node-to-master-tcp-4003-65535\n  SecurityGroup         name:masters.kubernetes.test\n  Protocol              tcp\n  FromPort              4003\n  ToPort                65535\n  SourceGroup           name:nodes.kubernetes.test\n\n  SecurityGroupRule/node-to-master-udp-1-65535\n  SecurityGroup         name:masters.kubernetes.test\n  Protocol              udp\n  FromPort              1\n  ToPort                65535\n  SourceGroup           name:nodes.kubernetes.test\n\n  SecurityGroupRule/ssh-external-to-master-0.0.0.0/0\n  SecurityGroup         name:masters.kubernetes.test\n  CIDR                  0.0.0.0/0\n  Protocol              tcp\n  FromPort              22\n  ToPort                22\n\n  SecurityGroupRule/ssh-external-to-node-0.0.0.0/0\n  SecurityGroup         name:nodes.kubernetes.test\n  CIDR                  0.0.0.0/0\n  Protocol              tcp\n  FromPort              22\n  ToPort                22\n\n  Subnet/ap-southeast-2a.kubernetes.test\n  VPC                   name:kubernetes.test\n  AvailabilityZone      ap-southeast-2a\n  CIDR                  172.20.32.0/19\n  Shared                false\n  Tags                  {Name: ap-southeast-2a.kubernetes.test, KubernetesCluster: kubernetes.test, kubernetes.io/cluster/kubernetes.test: owned, kubernetes.io/role/elb: 1}\n\n  VPC/kubernetes.test\n  CIDR                  172.20.0.0/16\n  EnableDNSHostnames    true\n  EnableDNSSupport      true\n  Shared                false\n  Tags                  {Name: kubernetes.test, KubernetesCluster: kubernetes.test, kubernetes.io/cluster/kubernetes.test: owned}\n\n  VPCDHCPOptionsAssociation/kubernetes.test\n  VPC                   name:kubernetes.test\n  DHCPOptions           name:kubernetes.test\n\nMust specify --yes to apply changes\n\nCluster configuration has been created.\n\nSuggestions:\n * list clusters with: kops get cluster\n * edit this cluster with: kops edit cluster kubernetes.test\n * edit your node instance group: kops edit ig --name=kubernetes.test nodes\n * edit your master instance group: kops edit ig --name=kubernetes.test master-ap-southeast-2a\n\nFinally configure your cluster with: kops update cluster kubernetes.test --yes\n`}</code></pre>\n    <p>{`To edit the cluster, run `}<inlineCode parentName=\"p\">{`kops edit cluster kubernetes.test --state=s3://kops-state-oeiajrie93`}</inlineCode>{` and then to update run `}<inlineCode parentName=\"p\">{`kops update cluster kubernetes.test --yes --state=s3://kops-state-oeiajrie93`}</inlineCode></p>\n    <p>{`If we now run `}<inlineCode parentName=\"p\">{`cat ~/.kube/config`}</inlineCode>{` we can see the password and username information needed.`}</p>\n    <p>{`To check if the nodes are up, run `}<inlineCode parentName=\"p\">{`kubectl get node`}</inlineCode>{`.`}</p>\n    <p>{`Then, we can again run `}<inlineCode parentName=\"p\">{`kubectl run hello-minikube ...`}</inlineCode></p>\n    <p>{`If you have issues hit up `}<inlineCode parentName=\"p\">{`https://www.digitalocean.com/community/tutorials/how-to-set-up-time-synchronization-on-ubuntu-16-04`}</inlineCode>{` for date syncing.`}</p>\n    <h2 {...{\n      \"id\": \"kops-quicklist\"\n    }}>{`KOPS QuickList`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`# create\nkops create cluster --name=doksandbox.com --state=s3://kops-state-doksandbox --zones=ap-southeast-2a --node-count=1 --node-size=t2.micro --master-size=t2.micro --dns-zone=doksandbox.com\n\n# edit\nkops edit cluster doksandbox.com --state=s3://kops-state-doksandbox\n\n# update\nkops update cluster doksandbox.com --yes --state=s3://kops-state-doksandbox\n\n# delete\nkops delete cluster doksandbox.com --yes --state=s3://kops-state-doksandbox\n\n# suggestions\nkops validate cluster --state=s3://kops-state-doksandbox  # validate cluster\nkubectl get nodes --show-labels # list nodes\nssh -i ~/.ssh/id_rsa admin@api.kubernetes.doksandbox.com # ssh to the master\nThe admin user is specific to Debian. If not using Debian please use the appropriate user based on your OS.\n\n# check DNS\ndig afxr doksandbox.com\n`}</code></pre>\n    <p>{`To get a basic service up and running, hit `}<inlineCode parentName=\"p\">{`kubectl run hello-minikube --image=gcr.io/google_containers/echoserver:1.4 --port=8080`}</inlineCode>{` and head to the VPC security network to update and expose that port to all IPs to prove that is all works correctly. The port will be dynamic.`}</p>\n    <h3 {...{\n      \"id\": \"building-docker-containers\"\n    }}>{`Building Docker Containers`}</h3>\n    <p>{`If installing onto Linux, check `}<inlineCode parentName=\"p\">{`https://docs.docker.com/install/linux/docker-ce/ubuntu/#install-docker-ce-1`}</inlineCode></p>\n    <p>{`To do a demo, `}<inlineCode parentName=\"p\">{`sudo apt-get install git`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`git clone https://github.com/wardviaene/docker-demo`}</inlineCode>{` to get a demo folder.`}</p>\n    <p>{`Change in, `}<inlineCode parentName=\"p\">{`sudo docker build .`}</inlineCode>{` and then to run the container use `}<inlineCode parentName=\"p\">{`docker run -p 3000:3000 -t <id>`}</inlineCode></p>\n    <h3 {...{\n      \"id\": \"docker-registery\"\n    }}>{`Docker registery`}</h3>\n    <p>{`To upload to the registry:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`docker login # fill in login details\ndocker tag imageid okeeffed/docker-demo\ndocker push okeeffed/docker-demo\n`}</code></pre>\n    <p>{`There are a few limitations for each Docker/Kubernetes relationship:`}</p>\n    <ol>\n      <li parentName=\"ol\">{`Don't try to create one giant docker image fo you app, but split it up if necessary.`}</li>\n      <li parentName=\"ol\">{`All data in the container is not preserved. You need volumes for this.`}</li>\n      <li parentName=\"ol\">{`Check 12factor.net for methodologies`}</li>\n    </ol>\n    <h3 {...{\n      \"id\": \"running-the-docker-app-on-kubernetes\"\n    }}>{`Running the Docker app on Kubernetes`}</h3>\n    <p>{`We need to create a `}<inlineCode parentName=\"p\">{`pod definition`}</inlineCode>{`.`}</p>\n    <p>{`This describes an application running on Kubernetes.`}</p>\n    <p>{`A pod can container `}<em parentName=\"p\">{`one or more tightly coupled containers`}</em>{` that make up the app.`}</p>\n    <p>{`Those apps can easily communicate with each other using their local `}<strong parentName=\"p\">{`port numbers`}</strong>{`.`}</p>\n    <p>{`The app for us at the moment has only one container.`}</p>\n    <p>{`To build this, we create a podfile with all the pod definition:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-yaml\"\n      }}>{`# pod-helloworld.yml\napiVersion: v1\nkind: Pod\nmetadata:\n  name: nodehelloworld.example.com\n  labels:\n  app: helloworld\nspec:\n  containers:\n  - name: k8s-demo\n    image: okeeffed/docker-demo\n    ports:\n    - containerPort: 3000\n`}</code></pre>\n    <p>{`To create this pod, we run `}<inlineCode parentName=\"p\">{`kubectl create -f ./pod-helloworld.yml`}</inlineCode></p>\n    <p><strong parentName=\"p\">{`Some useful commands`}</strong></p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Command`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`kubectl get pod`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Get info about all running pods`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`kubectl describe pod `}<inlineCode parentName=\"td\">{`<pod>`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Describe one pod`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`kubectl expose pod `}<inlineCode parentName=\"td\">{`<pod>`}</inlineCode>{` --port=444 --name=frontend`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Expose the port of a pod (creates a new service)`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`kubectl port-forward `}<inlineCode parentName=\"td\">{`<pod>`}</inlineCode>{` 8080`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Port forward the local machine`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`kubectl attach `}<inlineCode parentName=\"td\">{`<podname>`}</inlineCode>{` -i`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Attach to pod`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`kubectl exec `}<inlineCode parentName=\"td\">{`<pod>`}</inlineCode>{` -- command`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Execute a command on the pod`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`kubectl label pods `}<inlineCode parentName=\"td\">{`<pod>`}</inlineCode>{` mylabel=awesome`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Add new label to pod`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`kubectl run -i -tty busybox --image=busybox --restart=Never -- sh`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Run a shell in a pod - very useful for debugging`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <h3 {...{\n      \"id\": \"how-to-port-forward\"\n    }}>{`How to port-forward`}</h3>\n    <p>{`Running `}<inlineCode parentName=\"p\">{`kubectl describe pod nodehelloworld.example.com`}</inlineCode>{` will then give us info on what is going on here.`}</p>\n    <p>{`To listen locally, we can port-forward: `}<inlineCode parentName=\"p\">{`kubectl port-forward nodehelloworld.example.com 8081:3000`}</inlineCode></p>\n    <h3 {...{\n      \"id\": \"exposing-the-pod\"\n    }}>{`Exposing the pod`}</h3>\n    <p><inlineCode parentName=\"p\">{`kubectl expose pod nodehelloworld.example.com --type=NodePort --name nodehelloworld-service`}</inlineCode></p>\n    <p>{`Check this with `}<inlineCode parentName=\"p\">{`kubectl get service`}</inlineCode></p>\n    <p>{`When you see what port is being forwarded, you can again open that up on the security settings and direct to that port.`}</p>\n    <h3 {...{\n      \"id\": \"setting-up-the-external-load-balancer\"\n    }}>{`Setting up the external load balancer`}</h3>\n    <p>{`This will allow the outside world to have traffic routed to the correct pod.`}</p>\n    <p>{`To create the service for this:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-yaml\"\n      }}>{`apiVersion: v1\nkind: Service\nmetadata:\n  name: helloworld-service\nspec:\n  ports:\n  - port: 80\n  targetPort: nodejs-port\n  protocol: TCP\n  selector:\n  app: helloworld\n  type: LoadBalancer\n`}</code></pre>\n    <p>{`Using `}<inlineCode parentName=\"p\">{`kubectl create -f <file>`}</inlineCode>{` will create the pods and kops will autoconfigure what is required.`}</p>\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  "]}]}