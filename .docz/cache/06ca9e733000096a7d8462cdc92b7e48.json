{"remainingRequest":"/Users/okeeffe_d/Project-Imposter/developer-notes/node_modules/docz-core/node_modules/babel-loader/lib/index.js??ref--6-1!/Users/okeeffe_d/Project-Imposter/developer-notes/node_modules/@mdx-js/loader/index.js??ref--6-2!/Users/okeeffe_d/Project-Imposter/developer-notes/node_modules/source-map-loader/index.js!/Users/okeeffe_d/Project-Imposter/developer-notes/manual/Go/Go-Basic-Strings.md","dependencies":[{"path":"/Users/okeeffe_d/Project-Imposter/developer-notes/manual/Go/Go-Basic-Strings.md","mtime":1551332028684},{"path":"/Users/okeeffe_d/Project-Imposter/developer-notes/node_modules/cache-loader/dist/cjs.js","mtime":1561535530324},{"path":"/Users/okeeffe_d/Project-Imposter/developer-notes/node_modules/docz-core/node_modules/babel-loader/lib/index.js","mtime":1560300163820},{"path":"/Users/okeeffe_d/Project-Imposter/developer-notes/node_modules/@mdx-js/loader/index.js","mtime":1561535530532},{"path":"/Users/okeeffe_d/Project-Imposter/developer-notes/node_modules/source-map-loader/index.js","mtime":1548285283521}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9vYmplY3RXaXRob3V0UHJvcGVydGllcyBmcm9tIi9Vc2Vycy9va2VlZmZlX2QvUHJvamVjdC1JbXBvc3Rlci9kZXZlbG9wZXItbm90ZXMvbm9kZV9tb2R1bGVzL2JhYmVsLXByZXNldC1yZWFjdC1hcHAvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzIjsvKiBAanN4IG1keCAqL2ltcG9ydCBSZWFjdCBmcm9tJ3JlYWN0JztpbXBvcnR7bWR4fWZyb20nQG1keC1qcy9yZWFjdCc7LyogQGpzeCBtZHggKi92YXIgbWFrZVNob3J0Y29kZT1mdW5jdGlvbiBtYWtlU2hvcnRjb2RlKG5hbWUpe3JldHVybiBmdW5jdGlvbiBNRFhEZWZhdWx0U2hvcnRjb2RlKHByb3BzKXtjb25zb2xlLndhcm4oIkNvbXBvbmVudCAiK25hbWUrIiB3YXMgbm90IGltcG9ydGVkLCBleHBvcnRlZCwgb3IgcHJvdmlkZWQgYnkgTURYUHJvdmlkZXIgYXMgZ2xvYmFsIHNjb3BlIik7cmV0dXJuIG1keCgiZGl2Iixwcm9wcyk7fTt9O3ZhciBsYXlvdXRQcm9wcz17fTt2YXIgTURYTGF5b3V0PSJ3cmFwcGVyIjtleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBNRFhDb250ZW50KF9yZWYpe3ZhciBjb21wb25lbnRzPV9yZWYuY29tcG9uZW50cyxwcm9wcz1fb2JqZWN0V2l0aG91dFByb3BlcnRpZXMoX3JlZixbImNvbXBvbmVudHMiXSk7cmV0dXJuIG1keChNRFhMYXlvdXQsT2JqZWN0LmFzc2lnbih7fSxsYXlvdXRQcm9wcyxwcm9wcyx7Y29tcG9uZW50czpjb21wb25lbnRzLG1keFR5cGU6Ik1EWExheW91dCJ9KSxtZHgoImgxIix7ImlkIjoiYmFzaWMtc3RyaW5nLWZ1bmN0aW9ucyJ9LCJCYXNpYyBTdHJpbmcgRnVuY3Rpb25zIiksbWR4KCJwIixudWxsLCJUaGlzIGlzIGEgc2ltcGxlIGV4YW1wbGUgb2YgdGhlIGltcGxlbWVudGF0aW9uIG9mIHNvbWUgYmFzaWMgZnVuY3Rpb25zIHVzaW5nIHRoZSAiLG1keCgiaW5saW5lQ29kZSIse3BhcmVudE5hbWU6InAifSwic3RyaW5ncyIpLCIgcGFja2FnZS4gVGhlICIsbWR4KCJpbmxpbmVDb2RlIix7cGFyZW50TmFtZToicCJ9LCJ1bmljb2RlIiksIiBwYWNrYWdlIGlzIHVzZWQgZm9yIHRoZSBleGFtcGxlIHVzaW5nIHJ1bmVzLiIpLG1keCgicCIsbnVsbCwiSWYgYnVpbGRpbmcgYSBmaWxlLCBlbnN1cmUgdG8gaGF2ZSB0aGUgY29ycmVjdCBpbXBvcnRzIGFuZCBwYWNrYWdlIG5hbWU6IiksbWR4KCJwcmUiLG51bGwsbWR4KCJjb2RlIixPYmplY3QuYXNzaWduKHtwYXJlbnROYW1lOiJwcmUifSx7ImNsYXNzTmFtZSI6Imxhbmd1YWdlLWdvIn0pLCJwYWNrYWdlIHN0cmluZ2V4YW1wbGVzXG5cbmltcG9ydCAoXG4gICAgXCJzdHJpbmdzXCJcbiAgICBcInVuaWNvZGVcIlxuKVxuIikpLG1keCgicCIsbnVsbCwiLi4uYW5kIGZvciB0ZXN0aW5nOiIpLG1keCgicHJlIixudWxsLG1keCgiY29kZSIsT2JqZWN0LmFzc2lnbih7cGFyZW50TmFtZToicHJlIn0seyJjbGFzc05hbWUiOiJsYW5ndWFnZS1nbyJ9KSwicGFja2FnZSBzdHJpbmdleGFtcGxlc1xuXG5pbXBvcnQgKFxuICAgIFwidGVzdGluZ1wiXG4pXG4iKSksbWR4KCJoMiIseyJpZCI6ImNvbXBhcmUifSwiQ29tcGFyZSIpLG1keCgicHJlIixudWxsLG1keCgiY29kZSIsT2JqZWN0LmFzc2lnbih7cGFyZW50TmFtZToicHJlIn0seyJjbGFzc05hbWUiOiJsYW5ndWFnZS1nbyJ9KSwiLy8gVGVzdCBtb2R1bGVcbmZ1bmMgVGVzdFN0cmluZ3NDb21wYXJlKHQgKnRlc3RpbmcuVCkge1xuICAgIGEgOj0gXCJIZWxsbywgV29ybGQhXCJcbiAgICBiIDo9IFwiSGVsbG8sIFdvcmxkIVwiXG4gICAgaWYgQ29tcGFyZVN0cmluZ3MoYSwgYikgIT0gMCB7XG4gICAgICAgIHQuRmF0YWxmKFwiRXhwZWN0ZWQgMFwiKVxuICAgIH1cblxuICAgIGEgPSBcIkhlbGxvLCBXb3JsZCFcIlxuICAgIGIgPSBcIkhlbGxvLCBXb3JsIVwiXG4gICAgaWYgQ29tcGFyZVN0cmluZ3MoYSwgYikgIT0gMSB7XG4gICAgICAgIHQuRmF0YWxmKFwiRXhwZWN0ZWQgMVwiKVxuICAgIH1cblxuICAgIGEgPSBcIkhlbGxvLCBXb3JsZCFcIlxuICAgIGIgPSBcIkhlbGxvLCBXb3JsZCEhXCJcbiAgICBpZiBDb21wYXJlU3RyaW5ncyhhLCBiKSAhPSAtMSB7XG4gICAgICAgIHQuRmF0YWxmKFwiRXhwZWN0ZWQgLTFcIilcbiAgICB9XG59XG5cbi8vIENvbXBhcmVTdHJpbmdzIGNvbXBhcmVzIHR3byBzdHJpbmcgdmFsdWVzIGFuZCByZXR1cm5zIGFuIGludFxuZnVuYyBDb21wYXJlU3RyaW5ncyhhIHN0cmluZywgYiBzdHJpbmcpIGludCB7XG4gICAgcmV0dXJuIHN0cmluZ3MuQ29tcGFyZShhLCBiKVxufVxuIikpLG1keCgiaDIiLHsiaWQiOiJjb250YWlucyJ9LCJDb250YWlucyIpLG1keCgicHJlIixudWxsLG1keCgiY29kZSIsT2JqZWN0LmFzc2lnbih7cGFyZW50TmFtZToicHJlIn0seyJjbGFzc05hbWUiOiJsYW5ndWFnZS1nbyJ9KSwiLy8gVGVzdCBtb2R1bGVcbmZ1bmMgVGVzdENvbnRhaW5zU3RyaW5nKHQgKnRlc3RpbmcuVCkge1xuICAgIGEgOj0gXCJIZWxsbywgV29ybGQhXCJcbiAgICBiIDo9IFwiSGVsbG8sIFdvcmxkXCJcbiAgICBpZiBDb250YWluc1N0cmluZyhhLCBiKSAhPSB0cnVlIHtcbiAgICAgICAgdC5GYXRhbGYoXCJFeHBlY3RlZCB0cnVlXCIpXG4gICAgfVxuXG4gICAgYSA9IFwiSGVsbG8sIFdvcmxkIVwiXG4gICAgYiA9IFwiSHdheVwiXG4gICAgaWYgQ29udGFpbnNTdHJpbmcoYSwgYikgIT0gZmFsc2Uge1xuICAgICAgICB0LkZhdGFsZihcIkV4cGVjdGVkIGZhbHNlXCIpXG4gICAgfVxufVxuXG4vLyBDb250YWluc1N0cmluZyBjaGVja3MgaWYgc3RyaW5nIGNvbnRhaW5zIHN1YnN0clxuZnVuYyBDb250YWluc1N0cmluZyhzIHN0cmluZywgc3Vic3RyIHN0cmluZykgYm9vbCB7XG4gICAgcmV0dXJuIHN0cmluZ3MuQ29udGFpbnMocywgc3Vic3RyKVxufVxuIikpLG1keCgiaDIiLHsiaWQiOiJqb2luIn0sIkpvaW4iKSxtZHgoInByZSIsbnVsbCxtZHgoImNvZGUiLE9iamVjdC5hc3NpZ24oe3BhcmVudE5hbWU6InByZSJ9LHsiY2xhc3NOYW1lIjoibGFuZ3VhZ2UtZ28ifSksIi8vIFRlc3QgbW9kdWxlXG5mdW5jIFRlc3RKb2luU3RyaW5nKHQgKnRlc3RpbmcuVCkge1xuICAgIGEgOj0gW11zdHJpbmd7XCJIZWxsb1wiLCBcIldvcmxkIVwifVxuICAgIGIgOj0gXCJIZWxsbywgV29ybGQhXCJcblxuICAgIHJlcyA6PSBKb2luU3RyaW5nKGEsIFwiLCBcIilcblxuICAgIGlmIHJlcyAhPSBiIHtcbiAgICAgICAgdC5GYXRhbGYoXCJFeHBlY3RlZCAlcyBidXQgZ290ICVzXCIsIGIsIHJlcylcbiAgICB9XG59XG5cbi8vIEpvaW5TdHJpbmcgdHVybnMgYSBzdHJpbmcgc2xpY2UgaW50byBhIHN0cmluZ1xuZnVuYyBKb2luU3RyaW5nKHN0ciBbXXN0cmluZywgZGUgc3RyaW5nKSBzdHJpbmcge1xuICAgIHJldHVybiBzdHJpbmdzLkpvaW4oc3RyLCBkZSlcbn1cbiIpKSxtZHgoImgyIix7ImlkIjoic3BsaXQifSwiU3BsaXQiKSxtZHgoInByZSIsbnVsbCxtZHgoImNvZGUiLE9iamVjdC5hc3NpZ24oe3BhcmVudE5hbWU6InByZSJ9LHsiY2xhc3NOYW1lIjoibGFuZ3VhZ2UtZ28ifSksIi8vIFRlc3QgbW9kdWxlXG5mdW5jIFRlc3RTcGxpdFN0cmluZyh0ICp0ZXN0aW5nLlQpIHtcbiAgICBhIDo9IFwiSGVsbG8gV29ybGQhXCJcbiAgICBiIDo9IFtdc3RyaW5ne1wiSGVsbG9cIiwgXCJXb3JsZCFcIn1cblxuICAgIHJlcyA6PSBTcGxpdFN0cmluZyhhLCBcIiBcIilcblxuICAgIGZvciBpLCB2IDo9IHJhbmdlIHJlcyB7XG4gICAgICAgIGlmIHYgIT0gYltpXSB7XG4gICAgICAgICAgICB0LkZhdGFsZihcIkV4cGVjdGVkIHN0cmluZyAlcyBidXQgZ290ICVzXCIsIHYsIGJbaV0pXG4gICAgICAgIH1cbiAgICB9XG59XG5cbi8vIFNwbGl0U3RyaW5nIHR1cm5zIGEgc3RyaW5nIGluIGEgW11zdHJpbmcgd2l0aCBkZWxpbWl0ZXJcbmZ1bmMgU3BsaXRTdHJpbmcoc3RyIHN0cmluZywgZGUgc3RyaW5nKSBbXXN0cmluZyB7XG4gICAgcmV0dXJuIHN0cmluZ3MuU3BsaXQoc3RyLCBkZSlcbn1cbiIpKSxtZHgoImgyIix7ImlkIjoibG93ZXItY2FzZS1hLXN0cmluZy11c2luZy1tYXAifSwiTG93ZXIgY2FzZSBhIHN0cmluZyB1c2luZyBNYXAiKSxtZHgoInByZSIsbnVsbCxtZHgoImNvZGUiLE9iamVjdC5hc3NpZ24oe3BhcmVudE5hbWU6InByZSJ9LHsiY2xhc3NOYW1lIjoibGFuZ3VhZ2UtZ28ifSksIi8vIFRlc3QgbW9kdWxlXG5mdW5jIFRlc3RNYXBUb0xvd2VyU3RyaW5nKHQgKnRlc3RpbmcuVCkge1xuICAgIGEgOj0gXCJIZWxsbywgV29ybGQhXCJcbiAgICBiIDo9IFwiaGVsbG8sIHdvcmxkIVwiXG5cbiAgICByZXMgOj0gTWFwT3ZlclN0cmluZ1RvTG93ZXIoYSlcblxuICAgIGlmIHJlcyAhPSBiIHtcbiAgICAgICAgdC5GYXRhbGYoXCJFeHBlY3RlZCAlcyBidXQgZ290ICVzXCIsIGIsIHJlcylcbiAgICB9XG59XG5cbi8vIE1hcE92ZXJTdHJpbmdUb0xvd2VyIHVzZXMgbWFwIHRvIGxvd2VyIGNhc2UgYSBzdHJpbmdcbmZ1bmMgTWFwT3ZlclN0cmluZ1RvTG93ZXIoc3RyIHN0cmluZykgc3RyaW5nIHtcbiAgICB0b0xvd2VyIDo9IGZ1bmMociBydW5lKSBydW5lIHtcbiAgICAgICAgcmV0dXJuIHVuaWNvZGUuVG9Mb3dlcihyKVxuICAgIH1cblxuICAgIHJldHVybiBzdHJpbmdzLk1hcCh0b0xvd2VyLCBzdHIpXG59XG4iKSkpO31pZih0eXBlb2YgTURYQ29udGVudCE9PSd1bmRlZmluZWQnJiZNRFhDb250ZW50JiZNRFhDb250ZW50PT09T2JqZWN0KE1EWENvbnRlbnQpJiZPYmplY3QuaXNFeHRlbnNpYmxlKE1EWENvbnRlbnQpKXtPYmplY3QuZGVmaW5lUHJvcGVydHkoTURYQ29udGVudCwnX19maWxlbWV0YScse2VudW1lcmFibGU6dHJ1ZSxjb25maWd1cmFibGU6dHJ1ZSx2YWx1ZTp7bmFtZToiTURYQ29udGVudCIsZmlsZW5hbWU6Im1hbnVhbC9Hby9Hby1CYXNpYy1TdHJpbmdzLm1kIn19KTt9TURYQ29udGVudC5pc01EWENvbXBvbmVudD10cnVlOw=="},{"version":3,"sources":["/Users/okeeffe_d/Project-Imposter/developer-notes/manual/Go/Go-Basic-Strings.md"],"names":["React","mdx","makeShortcode","name","MDXDefaultShortcode","props","console","warn","layoutProps","MDXLayout","MDXContent","components","isMDXComponent"],"mappings":"4LAAA,cACE,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,GAAT,KAAoB,eAApB,CACA,cAGF,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAAAC,IAAI,QAAI,SAASC,CAAAA,mBAAT,CAA6BC,KAA7B,CAAoC,CAChEC,OAAO,CAACC,IAAR,CAAa,aAAeJ,IAAf,CAAsB,yEAAnC,EACA,MAAO,WAASE,KAAT,CAAP,CACD,CAHyB,EAA1B,CAKA,GAAMG,CAAAA,WAAW,CAAG,EAApB,CAGA,GAAMC,CAAAA,SAAS,CAAG,SAAlB,CACA,cAAe,SAASC,CAAAA,UAAT,MAGZ,IAFDC,CAAAA,UAEC,MAFDA,UAEC,CADEN,KACF,+CACD,MAAO,KAAC,SAAD,kBAAeG,WAAf,CAAgCH,KAAhC,EAAuC,UAAU,CAAEM,UAAnD,CAA+D,OAAO,CAAC,WAAvE,GACL,SAAQ,CACN,KAAM,wBADA,CAAR,0BADK,CAIL,iGAAwF,kBAAY,UAAU,CAAC,GAAvB,YAAxF,kBAA6J,kBAAY,UAAU,CAAC,GAAvB,YAA7J,iDAJK,CAKL,wFALK,CAML,eAAK,0BAAM,UAAU,CAAC,KAAjB,EAA2B,CAC5B,YAAa,aADe,CAA3B,8EAAL,CANK,CAeL,mCAfK,CAgBL,eAAK,0BAAM,UAAU,CAAC,KAAjB,EAA2B,CAC5B,YAAa,aADe,CAA3B,6DAAL,CAhBK,CAwBL,SAAQ,CACN,KAAM,SADA,CAAR,WAxBK,CA2BL,eAAK,0BAAM,UAAU,CAAC,KAAjB,EAA2B,CAC5B,YAAa,aADe,CAA3B,ymBAAL,CA3BK,CAuDL,SAAQ,CACN,KAAM,UADA,CAAR,YAvDK,CA0DL,eAAK,0BAAM,UAAU,CAAC,KAAjB,EAA2B,CAC5B,YAAa,aADe,CAA3B,qeAAL,CA1DK,CAgFL,SAAQ,CACN,KAAM,MADA,CAAR,QAhFK,CAmFL,eAAK,0BAAM,UAAU,CAAC,KAAjB,EAA2B,CAC5B,YAAa,aADe,CAA3B,qYAAL,CAnFK,CAsGL,SAAQ,CACN,KAAM,OADA,CAAR,SAtGK,CAyGL,eAAK,0BAAM,UAAU,CAAC,KAAjB,EAA2B,CAC5B,YAAa,aADe,CAA3B,0cAAL,CAzGK,CA8HL,SAAQ,CACN,KAAM,+BADA,CAAR,iCA9HK,CAiIL,eAAK,0BAAM,UAAU,CAAC,KAAjB,EAA2B,CAC5B,YAAa,aADe,CAA3B,udAAL,CAjIK,CAAP,CAyJD,C,yQAEDD,UAAU,CAACE,cAAX,CAA4B,IAA5B","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"basic-string-functions\"\n    }}>{`Basic String Functions`}</h1>\n    <p>{`This is a simple example of the implementation of some basic functions using the `}<inlineCode parentName=\"p\">{`strings`}</inlineCode>{` package. The `}<inlineCode parentName=\"p\">{`unicode`}</inlineCode>{` package is used for the example using runes.`}</p>\n    <p>{`If building a file, ensure to have the correct imports and package name:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-go\"\n      }}>{`package stringexamples\n\nimport (\n    \"strings\"\n    \"unicode\"\n)\n`}</code></pre>\n    <p>{`...and for testing:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-go\"\n      }}>{`package stringexamples\n\nimport (\n    \"testing\"\n)\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"compare\"\n    }}>{`Compare`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-go\"\n      }}>{`// Test module\nfunc TestStringsCompare(t *testing.T) {\n    a := \"Hello, World!\"\n    b := \"Hello, World!\"\n    if CompareStrings(a, b) != 0 {\n        t.Fatalf(\"Expected 0\")\n    }\n\n    a = \"Hello, World!\"\n    b = \"Hello, Worl!\"\n    if CompareStrings(a, b) != 1 {\n        t.Fatalf(\"Expected 1\")\n    }\n\n    a = \"Hello, World!\"\n    b = \"Hello, World!!\"\n    if CompareStrings(a, b) != -1 {\n        t.Fatalf(\"Expected -1\")\n    }\n}\n\n// CompareStrings compares two string values and returns an int\nfunc CompareStrings(a string, b string) int {\n    return strings.Compare(a, b)\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"contains\"\n    }}>{`Contains`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-go\"\n      }}>{`// Test module\nfunc TestContainsString(t *testing.T) {\n    a := \"Hello, World!\"\n    b := \"Hello, World\"\n    if ContainsString(a, b) != true {\n        t.Fatalf(\"Expected true\")\n    }\n\n    a = \"Hello, World!\"\n    b = \"Hway\"\n    if ContainsString(a, b) != false {\n        t.Fatalf(\"Expected false\")\n    }\n}\n\n// ContainsString checks if string contains substr\nfunc ContainsString(s string, substr string) bool {\n    return strings.Contains(s, substr)\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"join\"\n    }}>{`Join`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-go\"\n      }}>{`// Test module\nfunc TestJoinString(t *testing.T) {\n    a := []string{\"Hello\", \"World!\"}\n    b := \"Hello, World!\"\n\n    res := JoinString(a, \", \")\n\n    if res != b {\n        t.Fatalf(\"Expected %s but got %s\", b, res)\n    }\n}\n\n// JoinString turns a string slice into a string\nfunc JoinString(str []string, de string) string {\n    return strings.Join(str, de)\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"split\"\n    }}>{`Split`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-go\"\n      }}>{`// Test module\nfunc TestSplitString(t *testing.T) {\n    a := \"Hello World!\"\n    b := []string{\"Hello\", \"World!\"}\n\n    res := SplitString(a, \" \")\n\n    for i, v := range res {\n        if v != b[i] {\n            t.Fatalf(\"Expected string %s but got %s\", v, b[i])\n        }\n    }\n}\n\n// SplitString turns a string in a []string with delimiter\nfunc SplitString(str string, de string) []string {\n    return strings.Split(str, de)\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"lower-case-a-string-using-map\"\n    }}>{`Lower case a string using Map`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-go\"\n      }}>{`// Test module\nfunc TestMapToLowerString(t *testing.T) {\n    a := \"Hello, World!\"\n    b := \"hello, world!\"\n\n    res := MapOverStringToLower(a)\n\n    if res != b {\n        t.Fatalf(\"Expected %s but got %s\", b, res)\n    }\n}\n\n// MapOverStringToLower uses map to lower case a string\nfunc MapOverStringToLower(str string) string {\n    toLower := func(r rune) rune {\n        return unicode.ToLower(r)\n    }\n\n    return strings.Map(toLower, str)\n}\n`}</code></pre>\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  "]}]}