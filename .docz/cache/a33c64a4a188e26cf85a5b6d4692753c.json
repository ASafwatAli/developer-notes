{"remainingRequest":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/docz-core/node_modules/babel-loader/lib/index.js??ref--6-1!/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/@mdx-js/loader/index.js??ref--6-2!/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/source-map-loader/index.js!/Users/dennis.okeeffe/Project-Imposter/developer-notes/manual/Kafka/Hello-Kafka.md","dependencies":[{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/manual/Kafka/Hello-Kafka.md","mtime":1580211074122},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/cache-loader/dist/cjs.js","mtime":1564095360956},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/docz-core/node_modules/babel-loader/lib/index.js","mtime":1562568123838},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/@mdx-js/loader/index.js","mtime":1565139338792},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/source-map-loader/index.js","mtime":1564095361765}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9vYmplY3RXaXRob3V0UHJvcGVydGllcyBmcm9tIi9Vc2Vycy9kZW5uaXMub2tlZWZmZS9Qcm9qZWN0LUltcG9zdGVyL2RldmVsb3Blci1ub3Rlcy9ub2RlX21vZHVsZXMvYmFiZWwtcHJlc2V0LXJlYWN0LWFwcC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0V2l0aG91dFByb3BlcnRpZXMiOy8qIEBqc3ggbWR4ICovaW1wb3J0IFJlYWN0IGZyb20ncmVhY3QnO2ltcG9ydHttZHh9ZnJvbSdAbWR4LWpzL3JlYWN0JzsvKiBAanN4IG1keCAqL3ZhciBtYWtlU2hvcnRjb2RlPWZ1bmN0aW9uIG1ha2VTaG9ydGNvZGUobmFtZSl7cmV0dXJuIGZ1bmN0aW9uIE1EWERlZmF1bHRTaG9ydGNvZGUocHJvcHMpe2NvbnNvbGUud2FybigiQ29tcG9uZW50ICIrbmFtZSsiIHdhcyBub3QgaW1wb3J0ZWQsIGV4cG9ydGVkLCBvciBwcm92aWRlZCBieSBNRFhQcm92aWRlciBhcyBnbG9iYWwgc2NvcGUiKTtyZXR1cm4gbWR4KCJkaXYiLHByb3BzKTt9O307dmFyIGxheW91dFByb3BzPXt9O3ZhciBNRFhMYXlvdXQ9IndyYXBwZXIiO2V4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIE1EWENvbnRlbnQoX3JlZil7dmFyIGNvbXBvbmVudHM9X3JlZi5jb21wb25lbnRzLHByb3BzPV9vYmplY3RXaXRob3V0UHJvcGVydGllcyhfcmVmLFsiY29tcG9uZW50cyJdKTtyZXR1cm4gbWR4KE1EWExheW91dCxPYmplY3QuYXNzaWduKHt9LGxheW91dFByb3BzLHByb3BzLHtjb21wb25lbnRzOmNvbXBvbmVudHMsbWR4VHlwZToiTURYTGF5b3V0In0pLG1keCgiaDEiLHsiaWQiOiJoZWxsby1rYWZrYSJ9LCJIZWxsbyBLYWZrYSIpLG1keCgiaDIiLHsiaWQiOiJyZXNvdXJjZXMifSwiUmVzb3VyY2VzIiksbWR4KCJvbCIsbnVsbCxtZHgoImxpIix7cGFyZW50TmFtZToib2wifSxtZHgoImEiLE9iamVjdC5hc3NpZ24oe3BhcmVudE5hbWU6ImxpIn0seyJocmVmIjoiaHR0cHM6Ly9tZWRpdW0uY29tL2JpZy1kYXRhLWVuZ2luZWVyaW5nL2hlbGxvLWthZmthLXdvcmxkLXRoZS1jb21wbGV0ZS1ndWlkZS10by1rYWZrYS13aXRoLWRvY2tlci1hbmQtcHl0aG9uLWY3ODhlMjU4OGNmYyJ9KSwiR2V0dGluZyBzdGFydGVkIHdpdGggS2Fma2EiKSksbWR4KCJsaSIse3BhcmVudE5hbWU6Im9sIn0sbWR4KCJhIixPYmplY3QuYXNzaWduKHtwYXJlbnROYW1lOiJsaSJ9LHsiaHJlZiI6Imh0dHBzOi8vZ2l0aHViLmNvbS9TT0hVLUNvL2thZmthLW5vZGUifSksIkthZmthIE5vZGUgR2l0aHViIikpLG1keCgibGkiLHtwYXJlbnROYW1lOiJvbCJ9LG1keCgiYSIsT2JqZWN0LmFzc2lnbih7cGFyZW50TmFtZToibGkifSx7ImhyZWYiOiJodHRwczovL2dpdGh1Yi5jb20vd3Vyc3RtZWlzdGVyL2thZmthLWRvY2tlciJ9KSwiT3JpZ2luYWwgS2Fma2EgRG9ja2VyIEdpdGh1YiIpKSksbWR4KCJoMiIseyJpZCI6ImdldHRpbmctc3RhcnRlZC13aXRoLW5vZGVqcyJ9LCJHZXR0aW5nIFN0YXJ0ZWQgd2l0aCBOb2RlanMiKSxtZHgoInAiLG51bGwsIlJ1biAiLG1keCgiaW5saW5lQ29kZSIse3BhcmVudE5hbWU6InAifSwiZ2l0IGNsb25lIGh0dHBzOi8vZ2l0aHViLmNvbS93dXJzdG1laXN0ZXIva2Fma2EtZG9ja2VyLmdpdCIpLCIgdG8gY2xvbmUgd3Vyc3RtZWlzdGVyJ3MgcmVwby4iKSxtZHgoImgyIix7ImlkIjoicHJlcmVxdWlzaXRlcyJ9LCJQcmVyZXF1aXNpdGVzIiksbWR4KCJwIixudWxsLCJNYWtlIHN1cmUgeW91IGhhdmUgYm90aCBEb2NrZXIgYW5kIERvY2tlciBDb21wb3NlIGluc3RhbGxlZC4iKSxtZHgoImgyIix7ImlkIjoiZG9ja2VyLWNvbXBvc2luZyJ9LCJEb2NrZXIgQ29tcG9zaW5nIiksbWR4KCJwcmUiLG51bGwsbWR4KCJjb2RlIixPYmplY3QuYXNzaWduKHtwYXJlbnROYW1lOiJwcmUifSx7ImNsYXNzTmFtZSI6Imxhbmd1YWdlLXNoZWxsIn0pLCJkb2NrZXItY29tcG9zZSB1cCAtZFxuZG9ja2VyLWNvbXBvc2Ugc2NhbGUga2Fma2E9M1xuIyB0byBzZWUgcHJvY2Vzc2VzXG5kb2NrZXItY29tcG9zZSBwc1xuIyB0ZWFyZG93blxuZG9ja2VyLWNvbXBvc2Ugc3RvcFxuIikpLG1keCgiaDIiLHsiaWQiOiJjb25zdW1lcHJvZHVjaW5nLWZyb20td2l0aGluLWRvY2tlci1jb250YWluZXIifSwiQ29uc3VtZS9Qcm9kdWNpbmcgZnJvbSB3aXRoaW4gRG9ja2VyIENvbnRhaW5lciIpLG1keCgicHJlIixudWxsLG1keCgiY29kZSIsT2JqZWN0LmFzc2lnbih7cGFyZW50TmFtZToicHJlIn0seyJjbGFzc05hbWUiOiJsYW5ndWFnZS1zaGVsbCJ9KSwiIyBmcm9tIHlvdXIgdGVybWluYWwgcnVuOlxuZG9ja2VyIGV4ZWMgLWkgLXQgLXUgcm9vdCAkKGRvY2tlciBwcyB8IGdyZXAgZG9ja2VyX2thZmthIHwgY3V0IC1kJyAnIC1mMSkgL2Jpbi9iYXNoXG4jICQoZG9ja2VyIHBzIHwgZ3JlcCBkb2NrZXJfa2Fma2EgfCBjdXQgLWQnICcgLWYxKSAtIFdpbGwgcmV0dXJuIHRoZSBkb2NrZXIgcHJvY2VzcyBJRCBvZiB0aGUgS2Fma2EgRG9ja2VyIHJ1bm5pbmcgc28geW91IGNhbiBhY2Nlc3MgaXRcblxuIyBjcmVhdGUgdG9waWMxIGFuZCB0b3BpYzIgZm9yIG91ciBleGFtcGxlc1xuJEtBRktBX0hPTUUvYmluL2thZmthLXRvcGljcy5zaCAtLWNyZWF0ZSAtLXBhcnRpdGlvbnMgNCAtLWJvb3RzdHJhcC1zZXJ2ZXIgbG9jYWxob3N0OjkwOTIgLS10b3BpYyB0b3BpYzFcbiRLQUZLQV9IT01FL2Jpbi9rYWZrYS10b3BpY3Muc2ggLS1jcmVhdGUgLS1wYXJ0aXRpb25zIDQgLS1ib290c3RyYXAtc2VydmVyIGxvY2FsaG9zdDo5MDkyIC0tdG9waWMgdG9waWMyXG5cbiMgb3B0aW9uYWw6IGNyZWF0ZSBhIGNvbnN1bWVyXG4kS0FGS0FfSE9NRS9iaW4va2Fma2EtY29uc29sZS1jb25zdW1lci5zaCAtLWZyb20tYmVnaW5uaW5nIC0tYm9vdHN0cmFwLXNlcnZlciBsb2NhbGhvc3Q6OTA5MiAtLXRvcGljPXRvcGljMVxuXG4jIG9wdGlvbmFsOiBjcmVhdGUgYSBwcm9kdWNlclxuJEtBRktBX0hPTUUvYmluL2thZmthLWNvbnNvbGUtcHJvZHVjZXIuc2ggLS1icm9rZXItbGlzdCBsb2NhbGhvc3Q6OTA5MiAtLXRvcGljPXRvcGljMVxuIikpLG1keCgicCIsbnVsbCwiTm90ZTogV2UgdXNlICIsbWR4KCJpbmxpbmVDb2RlIix7cGFyZW50TmFtZToicCJ9LCJsb2NhbGhvc3Q6OTA5MiIpLCIgaGVyZSBpbnN0ZWFkIG9mICIsbWR4KCJpbmxpbmVDb2RlIix7cGFyZW50TmFtZToicCJ9LCJrYWZrYTo5MDkyIiksIiBmb3Igb3VyIE5vZGUgS2Fma2Egc2NyaXB0cy4iKSxtZHgoInAiLG51bGwsIldoZW4gc2VuZGluZyBtZXNzYWdlcyBhcyBhIHByb2R1Y2VyLCBub3RlIHRoYXQgd2UgYXJlIGxhdGNoaW5nIG9udG8gcGFydGljdWxhciBwYXJ0aXRpb25zIGluIHRoZSBOb2RlIGFwcCBhbmQgc28gb25seSBtZXNzYWdlcyB0aGF0IGhlYWQgdG8gYSBwYXJ0aWN1bGFyIHBhcnRpdGlvbiB3aWxsIGJlIGNvbnN1bWVkLiIpLG1keCgiaDIiLHsiaWQiOiJub2RlLWthZmthIn0sIk5vZGUgS2Fma2EiKSxtZHgoInAiLG51bGwsIlN0YXJ0IGEgbmV3IHByb2plY3QgYW5kIGluc3RhbGwgYW5kIHByZXAgdGhlIGZpbGVzIHdlIG5lZWQ6IiksbWR4KCJwcmUiLG51bGwsbWR4KCJjb2RlIixPYmplY3QuYXNzaWduKHtwYXJlbnROYW1lOiJwcmUifSx7ImNsYXNzTmFtZSI6Imxhbmd1YWdlLXNoZWxsIn0pLCJ5YXJuIGluaXQgLXlcbnlhcm4gYWRkIG5vZGUta2Fma2FcbnRvdWNoIGNvbnN1bWVyLmpzIHByb2R1Y2VyLmpzXG4iKSksbWR4KCJoMiIseyJpZCI6InByb2R1Y2VyIn0sIlByb2R1Y2VyIiksbWR4KCJwcmUiLG51bGwsbWR4KCJjb2RlIixPYmplY3QuYXNzaWduKHtwYXJlbnROYW1lOiJwcmUifSx7ImNsYXNzTmFtZSI6Imxhbmd1YWdlLWphdmFzY3JpcHQifSksInZhciBrYWZrYSA9IHJlcXVpcmUoJ2thZmthLW5vZGUnKSxcbiAgUHJvZHVjZXIgPSBrYWZrYS5Qcm9kdWNlcixcbiAgS2V5ZWRNZXNzYWdlID0ga2Fma2EuS2V5ZWRNZXNzYWdlLFxuICBjbGllbnQgPSBuZXcga2Fma2EuS2Fma2FDbGllbnQoKSxcbiAgcHJvZHVjZXIgPSBuZXcgUHJvZHVjZXIoY2xpZW50KSxcbiAga20gPSBuZXcgS2V5ZWRNZXNzYWdlKCdrZXknLCAnbWVzc2FnZScpLFxuICBwYXlsb2FkcyA9IFtcbiAgICB7IHRvcGljOiAndG9waWMxJywgbWVzc2FnZXM6ICdoaScsIHBhcnRpdGlvbjogMCB9LFxuICAgIHsgdG9waWM6ICd0b3BpYzInLCBtZXNzYWdlczogWydoZWxsbycsICd3b3JsZCcsIGttXSB9LFxuICBdO1xucHJvZHVjZXIub24oJ3JlYWR5JywgZnVuY3Rpb24oKSB7XG4gIHByb2R1Y2VyLnNlbmQocGF5bG9hZHMsIGZ1bmN0aW9uKGVyciwgZGF0YSkge1xuICAgIGNvbnNvbGUubG9nKGRhdGEpO1xuICB9KTtcbn0pO1xuXG5wcm9kdWNlci5vbignZXJyb3InLCBmdW5jdGlvbihlcnIpIHt9KTtcbiIpKSxtZHgoImgyIix7ImlkIjoiY29uc3VtZXIifSwiQ29uc3VtZXIiKSxtZHgoInByZSIsbnVsbCxtZHgoImNvZGUiLE9iamVjdC5hc3NpZ24oe3BhcmVudE5hbWU6InByZSJ9LHsiY2xhc3NOYW1lIjoibGFuZ3VhZ2UtamF2YXNjcmlwdCJ9KSwidmFyIGthZmthID0gcmVxdWlyZSgna2Fma2Etbm9kZScpLFxuICBDb25zdW1lciA9IGthZmthLkNvbnN1bWVyLFxuICBjbGllbnQgPSBuZXcga2Fma2EuS2Fma2FDbGllbnQoKSxcbiAgY29uc3VtZXIgPSBuZXcgQ29uc3VtZXIoXG4gICAgY2xpZW50LFxuICAgIFt7IHRvcGljOiAndG9waWMxJywgcGFydGl0aW9uOiAwIH0sIHsgdG9waWM6ICd0b3BpYzInLCBwYXJ0aXRpb246IDEgfV0sXG4gICAge1xuICAgICAgYXV0b0NvbW1pdDogZmFsc2UsXG4gICAgfSxcbiAgKTtcbiIpKSxtZHgoImgyIix7ImlkIjoicnVubmluZy1pdC1hbHRvZ2V0aGVyIn0sIlJ1bm5pbmcgaXQgYWx0b2dldGhlciIpLG1keCgicCIsbnVsbCwiRW5zdXJlIHRoYXQgeW91J3ZlIGNyZWF0ZWQgIixtZHgoImlubGluZUNvZGUiLHtwYXJlbnROYW1lOiJwIn0sInRvcGljMSIpLCIgYW5kICIsbWR4KCJpbmxpbmVDb2RlIix7cGFyZW50TmFtZToicCJ9LCJ0b3BpYzIiKSwiIGZyb20gd2l0aGluIHRoZSBEb2NrZXIgY29udGFpbmVyLiIpLG1keCgicCIsbnVsbCwiT25jZSBjcmVhdGVkLCB3ZSBjYW4gcnVuICIsbWR4KCJpbmxpbmVDb2RlIix7cGFyZW50TmFtZToicCJ9LCJub2RlIGNvbnN1bWVyLmpzIiksIiBpbiBvbmUgdGVybWluYWwgdG8gbGlzdGVuIGZvciB0aG9zZSB0b3BpY3Mgb24gcGFydGljdWxhciBwYXJ0aXRpb25zIGFuZCAiLG1keCgiaW5saW5lQ29kZSIse3BhcmVudE5hbWU6InAifSwibm9kZSBwcm9kdWNlci5qcyIpLCIgdG8gZmlyZSBvZmYgc29tZSBub3RpZmljYXRpb25zLiIpLG1keCgicCIsbnVsbCwiQWxsIHRoZSByZWNlaXZlZCBldmVudHMgb24gdGhlIGNvbnN1bWVyIHdpbGwgdGhlbiBsb2cgdG8gdGhlIHRlcm1pbmFsLiIpKTt9aWYodHlwZW9mIE1EWENvbnRlbnQhPT0ndW5kZWZpbmVkJyYmTURYQ29udGVudCYmTURYQ29udGVudD09PU9iamVjdChNRFhDb250ZW50KSYmT2JqZWN0LmlzRXh0ZW5zaWJsZShNRFhDb250ZW50KSl7T2JqZWN0LmRlZmluZVByb3BlcnR5KE1EWENvbnRlbnQsJ19fZmlsZW1ldGEnLHtlbnVtZXJhYmxlOnRydWUsY29uZmlndXJhYmxlOnRydWUsdmFsdWU6e25hbWU6Ik1EWENvbnRlbnQiLGZpbGVuYW1lOiJtYW51YWwvS2Fma2EvSGVsbG8tS2Fma2EubWQifX0pO31NRFhDb250ZW50LmlzTURYQ29tcG9uZW50PXRydWU7"},{"version":3,"sources":["/Users/dennis.okeeffe/Project-Imposter/developer-notes/manual/Kafka/Hello-Kafka.md"],"names":["React","mdx","makeShortcode","name","MDXDefaultShortcode","props","console","warn","layoutProps","MDXLayout","MDXContent","components","isMDXComponent"],"mappings":"iMAAA,cACE,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,GAAT,KAAoB,eAApB,CACA,cAGF,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAAAC,IAAI,QAAI,SAASC,CAAAA,mBAAT,CAA6BC,KAA7B,CAAoC,CAChEC,OAAO,CAACC,IAAR,CAAa,aAAeJ,IAAf,CAAsB,yEAAnC,EACA,MAAO,WAASE,KAAT,CAAP,CACD,CAHyB,EAA1B,CAKA,GAAMG,CAAAA,WAAW,CAAG,EAApB,CAGA,GAAMC,CAAAA,SAAS,CAAG,SAAlB,CACA,cAAe,SAASC,CAAAA,UAAT,MAGZ,IAFDC,CAAAA,UAEC,MAFDA,UAEC,CADEN,KACF,+CACD,MAAO,KAAC,SAAD,kBAAeG,WAAf,CAAgCH,KAAhC,EAAuC,UAAU,CAAEM,UAAnD,CAA+D,OAAO,CAAC,WAAvE,GACL,SAAQ,CACN,KAAM,aADA,CAAR,eADK,CAIL,SAAQ,CACN,KAAM,WADA,CAAR,aAJK,CAOL,cACE,UAAI,UAAU,CAAC,IAAf,EAAoB,uBAAG,UAAU,CAAC,IAAd,EAAuB,CACvC,OAAQ,2HAD+B,CAAvB,+BAApB,CADF,CAIE,UAAI,UAAU,CAAC,IAAf,EAAoB,uBAAG,UAAU,CAAC,IAAd,EAAuB,CACvC,OAAQ,uCAD+B,CAAvB,sBAApB,CAJF,CAOE,UAAI,UAAU,CAAC,IAAf,EAAoB,uBAAG,UAAU,CAAC,IAAd,EAAuB,CACvC,OAAQ,8CAD+B,CAAvB,iCAApB,CAPF,CAPK,CAkBL,SAAQ,CACN,KAAM,6BADA,CAAR,+BAlBK,CAqBL,oBAAW,kBAAY,UAAU,CAAC,GAAvB,+DAAX,kCArBK,CAsBL,SAAQ,CACN,KAAM,eADA,CAAR,iBAtBK,CAyBL,4EAzBK,CA0BL,SAAQ,CACN,KAAM,kBADA,CAAR,oBA1BK,CA6BL,eAAK,0BAAM,UAAU,CAAC,KAAjB,EAA2B,CAC5B,YAAa,gBADe,CAA3B,iIAAL,CA7BK,CAsCL,SAAQ,CACN,KAAM,+CADA,CAAR,kDAtCK,CAyCL,eAAK,0BAAM,UAAU,CAAC,KAAjB,EAA2B,CAC5B,YAAa,gBADe,CAA3B,wwBAAL,CAzCK,CAyDL,6BAAoB,kBAAY,UAAU,CAAC,GAAvB,mBAApB,qBAAmG,kBAAY,UAAU,CAAC,GAAvB,eAAnG,gCAzDK,CA0DL,oMA1DK,CA2DL,SAAQ,CACN,KAAM,YADA,CAAR,cA3DK,CA8DL,2EA9DK,CA+DL,eAAK,0BAAM,UAAU,CAAC,KAAjB,EAA2B,CAC5B,YAAa,gBADe,CAA3B,uEAAL,CA/DK,CAqEL,SAAQ,CACN,KAAM,UADA,CAAR,YArEK,CAwEL,eAAK,0BAAM,UAAU,CAAC,KAAjB,EAA2B,CAC5B,YAAa,qBADe,CAA3B,+gBAAL,CAxEK,CA4FL,SAAQ,CACN,KAAM,UADA,CAAR,YA5FK,CA+FL,eAAK,0BAAM,UAAU,CAAC,KAAjB,EAA2B,CAC5B,YAAa,qBADe,CAA3B,iRAAL,CA/FK,CA4GL,SAAQ,CACN,KAAM,uBADA,CAAR,yBA5GK,CA+GL,2CAAkC,kBAAY,UAAU,CAAC,GAAvB,WAAlC,SAA6F,kBAAY,UAAU,CAAC,GAAvB,WAA7F,sCA/GK,CAgHL,yCAAgC,kBAAY,UAAU,CAAC,GAAvB,qBAAhC,6EAAyK,kBAAY,UAAU,CAAC,GAAvB,qBAAzK,oCAhHK,CAiHL,sFAjHK,CAAP,CAmHD,C,uQAEDD,UAAU,CAACE,cAAX,CAA4B,IAA5B","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"hello-kafka\"\n    }}>{`Hello Kafka`}</h1>\n    <h2 {...{\n      \"id\": \"resources\"\n    }}>{`Resources`}</h2>\n    <ol>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"https://medium.com/big-data-engineering/hello-kafka-world-the-complete-guide-to-kafka-with-docker-and-python-f788e2588cfc\"\n        }}>{`Getting started with Kafka`}</a></li>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"https://github.com/SOHU-Co/kafka-node\"\n        }}>{`Kafka Node Github`}</a></li>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"https://github.com/wurstmeister/kafka-docker\"\n        }}>{`Original Kafka Docker Github`}</a></li>\n    </ol>\n    <h2 {...{\n      \"id\": \"getting-started-with-nodejs\"\n    }}>{`Getting Started with Nodejs`}</h2>\n    <p>{`Run `}<inlineCode parentName=\"p\">{`git clone https://github.com/wurstmeister/kafka-docker.git`}</inlineCode>{` to clone wurstmeister's repo.`}</p>\n    <h2 {...{\n      \"id\": \"prerequisites\"\n    }}>{`Prerequisites`}</h2>\n    <p>{`Make sure you have both Docker and Docker Compose installed.`}</p>\n    <h2 {...{\n      \"id\": \"docker-composing\"\n    }}>{`Docker Composing`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`docker-compose up -d\ndocker-compose scale kafka=3\n# to see processes\ndocker-compose ps\n# teardown\ndocker-compose stop\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"consumeproducing-from-within-docker-container\"\n    }}>{`Consume/Producing from within Docker Container`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`# from your terminal run:\ndocker exec -i -t -u root $(docker ps | grep docker_kafka | cut -d' ' -f1) /bin/bash\n# $(docker ps | grep docker_kafka | cut -d' ' -f1) - Will return the docker process ID of the Kafka Docker running so you can access it\n\n# create topic1 and topic2 for our examples\n$KAFKA_HOME/bin/kafka-topics.sh --create --partitions 4 --bootstrap-server localhost:9092 --topic topic1\n$KAFKA_HOME/bin/kafka-topics.sh --create --partitions 4 --bootstrap-server localhost:9092 --topic topic2\n\n# optional: create a consumer\n$KAFKA_HOME/bin/kafka-console-consumer.sh --from-beginning --bootstrap-server localhost:9092 --topic=topic1\n\n# optional: create a producer\n$KAFKA_HOME/bin/kafka-console-producer.sh --broker-list localhost:9092 --topic=topic1\n`}</code></pre>\n    <p>{`Note: We use `}<inlineCode parentName=\"p\">{`localhost:9092`}</inlineCode>{` here instead of `}<inlineCode parentName=\"p\">{`kafka:9092`}</inlineCode>{` for our Node Kafka scripts.`}</p>\n    <p>{`When sending messages as a producer, note that we are latching onto particular partitions in the Node app and so only messages that head to a particular partition will be consumed.`}</p>\n    <h2 {...{\n      \"id\": \"node-kafka\"\n    }}>{`Node Kafka`}</h2>\n    <p>{`Start a new project and install and prep the files we need:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`yarn init -y\nyarn add node-kafka\ntouch consumer.js producer.js\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"producer\"\n    }}>{`Producer`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`var kafka = require('kafka-node'),\n  Producer = kafka.Producer,\n  KeyedMessage = kafka.KeyedMessage,\n  client = new kafka.KafkaClient(),\n  producer = new Producer(client),\n  km = new KeyedMessage('key', 'message'),\n  payloads = [\n    { topic: 'topic1', messages: 'hi', partition: 0 },\n    { topic: 'topic2', messages: ['hello', 'world', km] },\n  ];\nproducer.on('ready', function() {\n  producer.send(payloads, function(err, data) {\n    console.log(data);\n  });\n});\n\nproducer.on('error', function(err) {});\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"consumer\"\n    }}>{`Consumer`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`var kafka = require('kafka-node'),\n  Consumer = kafka.Consumer,\n  client = new kafka.KafkaClient(),\n  consumer = new Consumer(\n    client,\n    [{ topic: 'topic1', partition: 0 }, { topic: 'topic2', partition: 1 }],\n    {\n      autoCommit: false,\n    },\n  );\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"running-it-altogether\"\n    }}>{`Running it altogether`}</h2>\n    <p>{`Ensure that you've created `}<inlineCode parentName=\"p\">{`topic1`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`topic2`}</inlineCode>{` from within the Docker container.`}</p>\n    <p>{`Once created, we can run `}<inlineCode parentName=\"p\">{`node consumer.js`}</inlineCode>{` in one terminal to listen for those topics on particular partitions and `}<inlineCode parentName=\"p\">{`node producer.js`}</inlineCode>{` to fire off some notifications.`}</p>\n    <p>{`All the received events on the consumer will then log to the terminal.`}</p>\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  "]}]}