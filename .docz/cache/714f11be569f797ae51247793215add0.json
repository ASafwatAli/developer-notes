{"remainingRequest":"/Users/okeeffe_d/Business/Documentation/node_modules/babel-loader/lib/index.js?{\"presets\":[[\"/Users/okeeffe_d/Business/Documentation/node_modules/babel-preset-docz/dist/index.js\",{\"flow\":true,\"typescript\":false,\"parseProps\":true}]],\"plugins\":[[\"/Users/okeeffe_d/Business/Documentation/node_modules/docz-utils/lib/named-asset-import.js\",{\"loaderMap\":{\"svg\":{\"ReactComponent\":\"@svgr/webpack?-prettier,-svgo![path]\"}}}]],\"babelrc\":false,\"cacheCompression\":true,\"compact\":true}!/Users/okeeffe_d/Business/Documentation/manual/React-Native/React-Native-Redux.md","dependencies":[{"path":"/Users/okeeffe_d/Business/Documentation/manual/React-Native/React-Native-Redux.md","mtime":1548209344431},{"path":"/Users/okeeffe_d/Business/Documentation/node_modules/cache-loader/dist/cjs.js","mtime":1548134640245},{"path":"/Users/okeeffe_d/Business/Documentation/node_modules/babel-loader/lib/index.js","mtime":1548134640227}],"contextDependencies":[],"result":["function _typeof(obj){if(typeof Symbol===\"function\"&&typeof Symbol.iterator===\"symbol\"){_typeof=function _typeof(obj){return typeof obj;};}else{_typeof=function _typeof(obj){return obj&&typeof Symbol===\"function\"&&obj.constructor===Symbol&&obj!==Symbol.prototype?\"symbol\":typeof obj;};}return _typeof(obj);}function _objectWithoutProperties(source,excluded){if(source==null)return{};var target=_objectWithoutPropertiesLoose(source,excluded);var key,i;if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++){key=sourceSymbolKeys[i];if(excluded.indexOf(key)>=0)continue;if(!Object.prototype.propertyIsEnumerable.call(source,key))continue;target[key]=source[key];}}return target;}function _objectWithoutPropertiesLoose(source,excluded){if(source==null)return{};var target={};var sourceKeys=Object.keys(source);var key,i;for(i=0;i<sourceKeys.length;i++){key=sourceKeys[i];if(excluded.indexOf(key)>=0)continue;target[key]=source[key];}return target;}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\");}}function _defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}function _createClass(Constructor,protoProps,staticProps){if(protoProps)_defineProperties(Constructor.prototype,protoProps);if(staticProps)_defineProperties(Constructor,staticProps);return Constructor;}function _possibleConstructorReturn(self,call){if(call&&(_typeof(call)===\"object\"||typeof call===\"function\")){return call;}return _assertThisInitialized(self);}function _assertThisInitialized(self){if(self===void 0){throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");}return self;}function _getPrototypeOf(o){_getPrototypeOf=Object.setPrototypeOf?Object.getPrototypeOf:function _getPrototypeOf(o){return o.__proto__||Object.getPrototypeOf(o);};return _getPrototypeOf(o);}function _inherits(subClass,superClass){if(typeof superClass!==\"function\"&&superClass!==null){throw new TypeError(\"Super expression must either be null or a function\");}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,writable:true,configurable:true}});if(superClass)_setPrototypeOf(subClass,superClass);}function _setPrototypeOf(o,p){_setPrototypeOf=Object.setPrototypeOf||function _setPrototypeOf(o,p){o.__proto__=p;return o;};return _setPrototypeOf(o,p);}import React from'react';import{MDXTag}from'@mdx-js/tag';var MDXContent=/*#__PURE__*/function(_React$Component){_inherits(MDXContent,_React$Component);function MDXContent(props){var _this;_classCallCheck(this,MDXContent);_this=_possibleConstructorReturn(this,_getPrototypeOf(MDXContent).call(this,props));_this.layout=null;return _this;}_createClass(MDXContent,[{key:\"render\",value:function render(){var _this$props=this.props,components=_this$props.components,props=_objectWithoutProperties(_this$props,[\"components\"]);return React.createElement(MDXTag,{name:\"wrapper\",components:components},React.createElement(MDXTag,{name:\"h1\",components:components,props:{\"id\":\"react-native-with-redux\"}},\"React Native with Redux\"),React.createElement(MDXTag,{name:\"p\",components:components},\"Now that ReduxThunk is set up, we can use it inside an action creator.\"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{}},\"// Action Creators\\nexport const selectAction = ({ email, password }) => {\\n    return (dispatch) -> {\\n        firebase.auth().signInWithEmailAndPassword(email, password)\\n            .then(user => console.log(user))\\n    };\\n};\\n\")),React.createElement(MDXTag,{name:\"p\",components:components},\"So, what is ReduxThunk doing for us?\"),React.createElement(MDXTag,{name:\"p\",components:components},\"Now that we have ReduxThunk, it will change how we call the action creator.\"),React.createElement(MDXTag,{name:\"p\",components:components},\"The Action Creator \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"WILL NOW RETURN A FUNCTION\"),\". If ReduxThunk sees a function returned, it will send off an action with a dispatcher and immediately call that function.\"),React.createElement(MDXTag,{name:\"p\",components:components},\"This will then start our login request. The app will wait and the .then will automatically run and we will then dispatch our action.\"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{}},\"// Action Creators\\nexport const selectAction = ({ email, password }) => {\\n    return (dispatch) -> {\\n        firebase.auth().signInWithEmailAndPassword(email, password)\\n            .then(user => {\\n                dispatch({ type: 'LOGIN_USER_SUCCESS', payload: user });\\n            });\\n    };\\n};\\n\")),React.createElement(\"div\",{id:\"nav\"}),React.createElement(MDXTag,{name:\"hr\",components:components}),React.createElement(MDXTag,{name:\"h2\",components:components,props:{\"id\":\"dealing-with-navigation\"}},\"Dealing with Navigation\"),React.createElement(MDXTag,{name:\"p\",components:components},\"As opposed to React with \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"React-Router\"),\", React Native doesn't necessarily have one.\"),React.createElement(MDXTag,{name:\"p\",components:components},\"In this case, we'll be using the solution called \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"React-Native-Router-Flux\"),\" to help with navigation.\"),React.createElement(MDXTag,{name:\"p\",components:components},\"How does it work?\"),React.createElement(MDXTag,{name:\"p\",components:components},\"Imagine an app that requires authentication. We could then have another scene where the is a Master-Detail relationship.\"),React.createElement(MDXTag,{name:\"p\",components:components},\"We essentially define a \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"Scene\"),\" for each distinct screens. For example.\"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{}},\"<Scene key=\\\"login\\\" component={LoginForm} />\\n<Scene key=\\\"employeeList\\\" component={EmployeeList} />\\n<Scene key=\\\"employeeDetail\\\" component={EmployeeDetail} />\\n\\n// All the props you can pass to the scene\\n\\n<Scene\\n    key=\\\"login\\\"                 // call Actions.login() to show this screen\\n    component={LoginForm}       // component to show\\n    title=\\\"Login\\\"               // make nav bar and give it a title - this is built in\\n    initial                     // define the first screen to show\\n/>\\n\")),React.createElement(\"div\",{id:\"nav2\"}),React.createElement(MDXTag,{name:\"h3\",components:components,props:{\"id\":\"-----navigation-in-the-router\"}},\"---- Navigation in the Router\"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{}},\"// Create a router.js\\n\\nimport React from 'react';\\nimport { Scene, Router } from 'react-native-router-flux';\\n\\n// scene-target\\nimport ExampleComponent from './components/examplecomponent/ExampleComponent';\\nimport Table from './components/table/Table';\\n\\nconst RouterComponent = () => {\\n    return (\\n        <Router>\\n            <Scene key=\\\"example\\\" component={ExampleComponent} title=\\\"App\\\" />\\n            <Scene key=\\\"table\\\" component={Table} title=\\\"Table\\\" initial />\\n        </Router>\\n    );\\n};\\n\\nexport default RouterComponent;\\n\\n// in app.js\\n\\n...\\nimport Router from './router';\\n\\nconst App = () => {\\n\\n    const store = createStore(reducers, {}, applyMiddleware(ReduxThunk));\\n\\n    return (\\n        <Provider store={store}>\\n            <Router />\\n        </Provider>\\n    );\\n}\\n\\nexport default App;\\n\")),React.createElement(MDXTag,{name:\"p\",components:components},\"So how do we move between these scenes?\"),React.createElement(\"div\",{id:\"nav3\"}),React.createElement(MDXTag,{name:\"h3\",components:components,props:{\"id\":\"-----navigating-between-routes\"}},\"---- Navigating between routes\"),React.createElement(MDXTag,{name:\"p\",components:components},\"Navigation will happen from an action.\"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{}},\"// import actions\\nimport { Actions } from 'react-native-router-flux';\\n\\n// Action Creators\\nexport const loginUserSuccess = (dispatch, user) => {\\n    dispatch({\\n        type: LOGIN_USER_SUCCESS,\\n        payload: user\\n    });\\n\\n    Actions.employeeList(); // this method comes from the key property\\n};\\n\")),React.createElement(\"div\",{id:\"nav4\"}),React.createElement(MDXTag,{name:\"h3\",components:components,props:{\"id\":\"-----grouping-scenes-with-buckets\"}},\"---- Grouping Scenes with 'Buckets'\"),React.createElement(MDXTag,{name:\"p\",components:components},\"Making decisions on how the header should render.\"),React.createElement(MDXTag,{name:\"p\",components:components},\"We can do \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"scene nesting\"),\" to group these screens. There is one 'gotcha' though. Now for the actions, we need to actually use Actions.main().\"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{}},\"// router.js\\n\\nconst RouterComponent = () => {\\n    return (\\n        <Router>\\n            <Scene key=\\\"auth\\\">\\n                <Scene key=\\\"login\\\" component={Login} title=\\\"Login\\\" />\\n            </Scene>\\n            <Scene key=\\\"flow\\\">\\n                <Scene key=\\\"example\\\" component={ExampleComponent} title=\\\"App\\\" />\\n                <Scene\\n                    // for action, you normally call Actions.key()\\n                    onRight={() => console.log('right!!!')}\\n                    rightTitle=\\\"Add\\\"\\n                    key=\\\"table\\\"\\n                    component={Table}\\n                    title=\\\"Table\\\"\\n                    initial\\n                />\\n            </Scene>\\n        </Router>\\n    );\\n};\\n\")),React.createElement(MDXTag,{name:\"p\",components:components},\"We can use the \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"initial\"),\" prop within these \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"buckets\"),\" to let which component within a bucket to have an initial prop\"),React.createElement(MDXTag,{name:\"h3\",components:components,props:{\"id\":\"-----actions-to-navigate-between-buckets\"}},\"---- Actions to navigate between buckets\"),React.createElement(MDXTag,{name:\"p\",components:components},\"These actions can be added using\"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{}},\"import { Actions } from 'react-native-router-flux';\\n\\n// Action Creators - exammple thunk action creator\\nconst loginUserSuccess = (dispatch, user) => {\\n    dispatch({\\n        type: LOGIN_USER_SUCCESS,\\n        payload: user\\n    });\\n\\n    Actions.employeeList();\\n}\\n\")),React.createElement(\"div\",{id:\"nav5\"}),React.createElement(MDXTag,{name:\"h3\",components:components,props:{\"id\":\"-----form-updates-at-a-reducer-level--dynamic-property-updates\"}},\"---- Form updates at a reducer level / Dynamic Property updates\"),React.createElement(MDXTag,{name:\"p\",components:components},\"Example reducer function with ES6 dynamic change.\"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{}},\"export default (state = INITIAL_STATE, action) => {\\n    switch (action.type) {\\n        case EMPLOYEE_UPDATE:\\n            return {...state, [action.payload.prop]: action.payload.value};\\n        default:\\n            return state;\\n    }\\n}\\n\")));}}]);return MDXContent;}(React.Component);export{MDXContent as default};MDXContent.__docgenInfo={\"description\":\"\",\"methods\":[],\"displayName\":\"MDXContent\"};",{"version":3,"sources":["/Users/okeeffe_d/Business/Documentation/manual/React-Native/React-Native-Redux.md"],"names":["React","MDXTag","MDXContent","props","layout","components","Component"],"mappings":"omFACE,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,MAAT,KAAuB,aAAvB,C,GAGmBC,CAAAA,U,gFACnB,oBAAYC,KAAZ,CAAmB,4CACjB,4EAAMA,KAAN,GACA,MAAKC,MAAL,CAAc,IAAd,CAFiB,aAGlB,C,8DACQ,iBAC0B,KAAKD,KAD/B,CACCE,UADD,aACCA,UADD,CACgBF,KADhB,sDAGP,MAAO,qBAAC,MAAD,EACE,IAAI,CAAC,SADP,CAGE,UAAU,CAAEE,UAHd,EAG0B,oBAAC,MAAD,EAAQ,IAAI,CAAC,IAAb,CAAkB,UAAU,CAAEA,UAA9B,CAA0C,KAAK,CAAE,CAAC,KAAK,yBAAN,CAAjD,4BAH1B,CAIX,oBAAC,MAAD,EAAQ,IAAI,CAAC,GAAb,CAAiB,UAAU,CAAEA,UAA7B,2EAJW,CAKX,oBAAC,MAAD,EAAQ,IAAI,CAAC,KAAb,CAAmB,UAAU,CAAEA,UAA/B,EAA2C,oBAAC,MAAD,EAAQ,IAAI,CAAC,MAAb,CAAoB,UAAU,CAAEA,UAAhC,CAA4C,UAAU,CAAC,KAAvD,CAA6D,KAAK,CAAE,EAApE,4OAA3C,CALW,CAaX,oBAAC,MAAD,EAAQ,IAAI,CAAC,GAAb,CAAiB,UAAU,CAAEA,UAA7B,yCAbW,CAcX,oBAAC,MAAD,EAAQ,IAAI,CAAC,GAAb,CAAiB,UAAU,CAAEA,UAA7B,gFAdW,CAeX,oBAAC,MAAD,EAAQ,IAAI,CAAC,GAAb,CAAiB,UAAU,CAAEA,UAA7B,wBAAgE,oBAAC,MAAD,EAAQ,IAAI,CAAC,YAAb,CAA0B,UAAU,CAAEA,UAAtC,CAAkD,UAAU,CAAC,GAA7D,+BAAhE,8HAfW,CAgBX,oBAAC,MAAD,EAAQ,IAAI,CAAC,GAAb,CAAiB,UAAU,CAAEA,UAA7B,yIAhBW,CAiBX,oBAAC,MAAD,EAAQ,IAAI,CAAC,KAAb,CAAmB,UAAU,CAAEA,UAA/B,EAA2C,oBAAC,MAAD,EAAQ,IAAI,CAAC,MAAb,CAAoB,UAAU,CAAEA,UAAhC,CAA4C,UAAU,CAAC,KAAvD,CAA6D,KAAK,CAAE,EAApE,sTAA3C,CAjBW,CA2BX,2BAAK,EAAE,CAAC,KAAR,EA3BW,CA4BX,oBAAC,MAAD,EAAQ,IAAI,CAAC,IAAb,CAAkB,UAAU,CAAEA,UAA9B,EA5BW,CA6BX,oBAAC,MAAD,EAAQ,IAAI,CAAC,IAAb,CAAkB,UAAU,CAAEA,UAA9B,CAA0C,KAAK,CAAE,CAAC,KAAK,yBAAN,CAAjD,4BA7BW,CA8BX,oBAAC,MAAD,EAAQ,IAAI,CAAC,GAAb,CAAiB,UAAU,CAAEA,UAA7B,8BAAsE,oBAAC,MAAD,EAAQ,IAAI,CAAC,YAAb,CAA0B,UAAU,CAAEA,UAAtC,CAAkD,UAAU,CAAC,GAA7D,iBAAtE,gDA9BW,CA+BX,oBAAC,MAAD,EAAQ,IAAI,CAAC,GAAb,CAAiB,UAAU,CAAEA,UAA7B,sDAA8F,oBAAC,MAAD,EAAQ,IAAI,CAAC,YAAb,CAA0B,UAAU,CAAEA,UAAtC,CAAkD,UAAU,CAAC,GAA7D,6BAA9F,6BA/BW,CAgCX,oBAAC,MAAD,EAAQ,IAAI,CAAC,GAAb,CAAiB,UAAU,CAAEA,UAA7B,sBAhCW,CAiCX,oBAAC,MAAD,EAAQ,IAAI,CAAC,GAAb,CAAiB,UAAU,CAAEA,UAA7B,6HAjCW,CAkCX,oBAAC,MAAD,EAAQ,IAAI,CAAC,GAAb,CAAiB,UAAU,CAAEA,UAA7B,6BAAqE,oBAAC,MAAD,EAAQ,IAAI,CAAC,YAAb,CAA0B,UAAU,CAAEA,UAAtC,CAAkD,UAAU,CAAC,GAA7D,UAArE,4CAlCW,CAmCX,oBAAC,MAAD,EAAQ,IAAI,CAAC,KAAb,CAAmB,UAAU,CAAEA,UAA/B,EAA2C,oBAAC,MAAD,EAAQ,IAAI,CAAC,MAAb,CAAoB,UAAU,CAAEA,UAAhC,CAA4C,UAAU,CAAC,KAAvD,CAA6D,KAAK,CAAE,EAApE,ygBAA3C,CAnCW,CAgDX,2BAAK,EAAE,CAAC,MAAR,EAhDW,CAiDX,oBAAC,MAAD,EAAQ,IAAI,CAAC,IAAb,CAAkB,UAAU,CAAEA,UAA9B,CAA0C,KAAK,CAAE,CAAC,KAAK,+BAAN,CAAjD,kCAjDW,CAkDX,oBAAC,MAAD,EAAQ,IAAI,CAAC,KAAb,CAAmB,UAAU,CAAEA,UAA/B,EAA2C,oBAAC,MAAD,EAAQ,IAAI,CAAC,MAAb,CAAoB,UAAU,CAAEA,UAAhC,CAA4C,UAAU,CAAC,KAAvD,CAA6D,KAAK,CAAE,EAApE,y0BAA3C,CAlDW,CAwFX,oBAAC,MAAD,EAAQ,IAAI,CAAC,GAAb,CAAiB,UAAU,CAAEA,UAA7B,4CAxFW,CAyFX,2BAAK,EAAE,CAAC,MAAR,EAzFW,CA0FX,oBAAC,MAAD,EAAQ,IAAI,CAAC,IAAb,CAAkB,UAAU,CAAEA,UAA9B,CAA0C,KAAK,CAAE,CAAC,KAAK,gCAAN,CAAjD,mCA1FW,CA2FX,oBAAC,MAAD,EAAQ,IAAI,CAAC,GAAb,CAAiB,UAAU,CAAEA,UAA7B,2CA3FW,CA4FX,oBAAC,MAAD,EAAQ,IAAI,CAAC,KAAb,CAAmB,UAAU,CAAEA,UAA/B,EAA2C,oBAAC,MAAD,EAAQ,IAAI,CAAC,MAAb,CAAoB,UAAU,CAAEA,UAAhC,CAA4C,UAAU,CAAC,KAAvD,CAA6D,KAAK,CAAE,EAApE,2TAA3C,CA5FW,CAyGX,2BAAK,EAAE,CAAC,MAAR,EAzGW,CA0GX,oBAAC,MAAD,EAAQ,IAAI,CAAC,IAAb,CAAkB,UAAU,CAAEA,UAA9B,CAA0C,KAAK,CAAE,CAAC,KAAK,mCAAN,CAAjD,wCA1GW,CA2GX,oBAAC,MAAD,EAAQ,IAAI,CAAC,GAAb,CAAiB,UAAU,CAAEA,UAA7B,sDA3GW,CA4GX,oBAAC,MAAD,EAAQ,IAAI,CAAC,GAAb,CAAiB,UAAU,CAAEA,UAA7B,eAAuD,oBAAC,MAAD,EAAQ,IAAI,CAAC,YAAb,CAA0B,UAAU,CAAEA,UAAtC,CAAkD,UAAU,CAAC,GAA7D,kBAAvD,uHA5GW,CA6GX,oBAAC,MAAD,EAAQ,IAAI,CAAC,KAAb,CAAmB,UAAU,CAAEA,UAA/B,EAA2C,oBAAC,MAAD,EAAQ,IAAI,CAAC,MAAb,CAAoB,UAAU,CAAEA,UAAhC,CAA4C,UAAU,CAAC,KAAvD,CAA6D,KAAK,CAAE,EAApE,uuBAA3C,CA7GW,CAqIX,oBAAC,MAAD,EAAQ,IAAI,CAAC,GAAb,CAAiB,UAAU,CAAEA,UAA7B,oBAA4D,oBAAC,MAAD,EAAQ,IAAI,CAAC,YAAb,CAA0B,UAAU,CAAEA,UAAtC,CAAkD,UAAU,CAAC,GAA7D,YAA5D,uBAAwK,oBAAC,MAAD,EAAQ,IAAI,CAAC,YAAb,CAA0B,UAAU,CAAEA,UAAtC,CAAkD,UAAU,CAAC,GAA7D,YAAxK,mEArIW,CAsIX,oBAAC,MAAD,EAAQ,IAAI,CAAC,IAAb,CAAkB,UAAU,CAAEA,UAA9B,CAA0C,KAAK,CAAE,CAAC,KAAK,0CAAN,CAAjD,6CAtIW,CAuIX,oBAAC,MAAD,EAAQ,IAAI,CAAC,GAAb,CAAiB,UAAU,CAAEA,UAA7B,qCAvIW,CAwIX,oBAAC,MAAD,EAAQ,IAAI,CAAC,KAAb,CAAmB,UAAU,CAAEA,UAA/B,EAA2C,oBAAC,MAAD,EAAQ,IAAI,CAAC,MAAb,CAAoB,UAAU,CAAEA,UAAhC,CAA4C,UAAU,CAAC,KAAvD,CAA6D,KAAK,CAAE,EAApE,qRAA3C,CAxIW,CAoJX,2BAAK,EAAE,CAAC,MAAR,EApJW,CAqJX,oBAAC,MAAD,EAAQ,IAAI,CAAC,IAAb,CAAkB,UAAU,CAAEA,UAA9B,CAA0C,KAAK,CAAE,CAAC,KAAK,gEAAN,CAAjD,oEArJW,CAsJX,oBAAC,MAAD,EAAQ,IAAI,CAAC,GAAb,CAAiB,UAAU,CAAEA,UAA7B,sDAtJW,CAuJX,oBAAC,MAAD,EAAQ,IAAI,CAAC,KAAb,CAAmB,UAAU,CAAEA,UAA/B,EAA2C,oBAAC,MAAD,EAAQ,IAAI,CAAC,MAAb,CAAoB,UAAU,CAAEA,UAAhC,CAA4C,UAAU,CAAC,KAAvD,CAA6D,KAAK,CAAE,EAApE,yPAA3C,CAvJW,CAAP,CAiKD,C,wBAzKqCL,KAAK,CAACM,S,SAAzBJ,U","sourcesContent":["\n  import React from 'react'\n  import { MDXTag } from '@mdx-js/tag'\n  \n\nexport default class MDXContent extends React.Component {\n  constructor(props) {\n    super(props)\n    this.layout = null\n  }\n  render() {\n    const { components, ...props } = this.props\n\n    return <MDXTag\n             name=\"wrapper\"\n             \n             components={components}><MDXTag name=\"h1\" components={components} props={{\"id\":\"react-native-with-redux\"}}>{`React Native with Redux`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Now that ReduxThunk is set up, we can use it inside an action creator.`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{}}>{`// Action Creators\nexport const selectAction = ({ email, password }) => {\n    return (dispatch) -> {\n        firebase.auth().signInWithEmailAndPassword(email, password)\n            .then(user => console.log(user))\n    };\n};\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`So, what is ReduxThunk doing for us?`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Now that we have ReduxThunk, it will change how we call the action creator.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`The Action Creator `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`WILL NOW RETURN A FUNCTION`}</MDXTag>{`. If ReduxThunk sees a function returned, it will send off an action with a dispatcher and immediately call that function.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`This will then start our login request. The app will wait and the .then will automatically run and we will then dispatch our action.`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{}}>{`// Action Creators\nexport const selectAction = ({ email, password }) => {\n    return (dispatch) -> {\n        firebase.auth().signInWithEmailAndPassword(email, password)\n            .then(user => {\n                dispatch({ type: 'LOGIN_USER_SUCCESS', payload: user });\n            });\n    };\n};\n`}</MDXTag></MDXTag>\n<div id=\"nav\"></div>\n<MDXTag name=\"hr\" components={components}></MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"dealing-with-navigation\"}}>{`Dealing with Navigation`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`As opposed to React with `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`React-Router`}</MDXTag>{`, React Native doesn't necessarily have one.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`In this case, we'll be using the solution called `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`React-Native-Router-Flux`}</MDXTag>{` to help with navigation.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`How does it work?`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Imagine an app that requires authentication. We could then have another scene where the is a Master-Detail relationship.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`We essentially define a `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`Scene`}</MDXTag>{` for each distinct screens. For example.`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{}}>{`<Scene key=\"login\" component={LoginForm} />\n<Scene key=\"employeeList\" component={EmployeeList} />\n<Scene key=\"employeeDetail\" component={EmployeeDetail} />\n\n// All the props you can pass to the scene\n\n<Scene\n    key=\"login\"                 // call Actions.login() to show this screen\n    component={LoginForm}       // component to show\n    title=\"Login\"               // make nav bar and give it a title - this is built in\n    initial                     // define the first screen to show\n/>\n`}</MDXTag></MDXTag>\n<div id=\"nav2\"></div>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"-----navigation-in-the-router\"}}>{`---- Navigation in the Router`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{}}>{`// Create a router.js\n\nimport React from 'react';\nimport { Scene, Router } from 'react-native-router-flux';\n\n// scene-target\nimport ExampleComponent from './components/examplecomponent/ExampleComponent';\nimport Table from './components/table/Table';\n\nconst RouterComponent = () => {\n    return (\n        <Router>\n            <Scene key=\"example\" component={ExampleComponent} title=\"App\" />\n            <Scene key=\"table\" component={Table} title=\"Table\" initial />\n        </Router>\n    );\n};\n\nexport default RouterComponent;\n\n// in app.js\n\n...\nimport Router from './router';\n\nconst App = () => {\n\n    const store = createStore(reducers, {}, applyMiddleware(ReduxThunk));\n\n    return (\n        <Provider store={store}>\n            <Router />\n        </Provider>\n    );\n}\n\nexport default App;\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`So how do we move between these scenes?`}</MDXTag>\n<div id=\"nav3\"></div>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"-----navigating-between-routes\"}}>{`---- Navigating between routes`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Navigation will happen from an action.`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{}}>{`// import actions\nimport { Actions } from 'react-native-router-flux';\n\n// Action Creators\nexport const loginUserSuccess = (dispatch, user) => {\n    dispatch({\n        type: LOGIN_USER_SUCCESS,\n        payload: user\n    });\n\n    Actions.employeeList(); // this method comes from the key property\n};\n`}</MDXTag></MDXTag>\n<div id=\"nav4\"></div>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"-----grouping-scenes-with-buckets\"}}>{`---- Grouping Scenes with 'Buckets'`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Making decisions on how the header should render.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`We can do `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`scene nesting`}</MDXTag>{` to group these screens. There is one 'gotcha' though. Now for the actions, we need to actually use Actions.main().`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{}}>{`// router.js\n\nconst RouterComponent = () => {\n    return (\n        <Router>\n            <Scene key=\"auth\">\n                <Scene key=\"login\" component={Login} title=\"Login\" />\n            </Scene>\n            <Scene key=\"flow\">\n                <Scene key=\"example\" component={ExampleComponent} title=\"App\" />\n                <Scene\n                    // for action, you normally call Actions.key()\n                    onRight={() => console.log('right!!!')}\n                    rightTitle=\"Add\"\n                    key=\"table\"\n                    component={Table}\n                    title=\"Table\"\n                    initial\n                />\n            </Scene>\n        </Router>\n    );\n};\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`We can use the `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`initial`}</MDXTag>{` prop within these `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`buckets`}</MDXTag>{` to let which component within a bucket to have an initial prop`}</MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"-----actions-to-navigate-between-buckets\"}}>{`---- Actions to navigate between buckets`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`These actions can be added using`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{}}>{`import { Actions } from 'react-native-router-flux';\n\n// Action Creators - exammple thunk action creator\nconst loginUserSuccess = (dispatch, user) => {\n    dispatch({\n        type: LOGIN_USER_SUCCESS,\n        payload: user\n    });\n\n    Actions.employeeList();\n}\n`}</MDXTag></MDXTag>\n<div id=\"nav5\"></div>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"-----form-updates-at-a-reducer-level--dynamic-property-updates\"}}>{`---- Form updates at a reducer level / Dynamic Property updates`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Example reducer function with ES6 dynamic change.`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{}}>{`export default (state = INITIAL_STATE, action) => {\n    switch (action.type) {\n        case EMPLOYEE_UPDATE:\n            return {...state, [action.payload.prop]: action.payload.value};\n        default:\n            return state;\n    }\n}\n`}</MDXTag></MDXTag>\n           </MDXTag>\n  }\n}\n  "]}]}