{"remainingRequest":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/docz-core/node_modules/babel-loader/lib/index.js??ref--6-1!/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/@mdx-js/loader/index.js??ref--6-2!/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/source-map-loader/index.js!/Users/dennis.okeeffe/Project-Imposter/developer-notes/manual/Storybook/webpack-sass.md","dependencies":[{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/manual/Storybook/webpack-sass.md","mtime":1562563032091},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/cache-loader/dist/cjs.js","mtime":1581496618588},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/docz-core/node_modules/babel-loader/lib/index.js","mtime":1578565694890},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/@mdx-js/loader/index.js","mtime":1581496618277},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/source-map-loader/index.js","mtime":1580255490569}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/dennis.okeeffe/Project-Imposter/developer-notes/manual/Storybook/webpack-sass.md"],"names":["React","mdx","makeShortcode","name","MDXDefaultShortcode","props","console","warn","layoutProps","MDXLayout","MDXContent","components","isMDXComponent"],"mappings":";;;;;;;;;;;;AAAA;AACE,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,QAAoB,eAApB;AACA;;AAGF,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAAAC,IAAI;AAAA,SAAI,SAASC,mBAAT,CAA6BC,KAA7B,EAAoC;AAChEC,IAAAA,OAAO,CAACC,IAAR,CAAa,eAAeJ,IAAf,GAAsB,yEAAnC;AACA,WAAO,6BAASE,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAP;AACD,GAHyB;AAAA,CAA1B;;AAKA,IAAMG,WAAW,GAAG,EAApB;AAGA,IAAMC,SAAS,GAAG,SAAlB;AACA,eAAe,SAASC,UAAT,OAGZ;AAAA,MAFDC,UAEC,QAFDA,UAEC;AAAA,MADEN,KACF;;AACD,SAAO,IAAC,SAAD,oBAAeG,WAAf,EAAgCH,KAAhC;AAAuC,IAAA,UAAU,EAAEM,UAAnD;AAA+D,IAAA,OAAO,EAAC,WAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACL,wBAAQ;AACN,UAAM;AADA,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BADK,EAIL,wBAAQ;AACN,UAAM;AADA,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJK,EAOL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,UAAU,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4CADF,EAEE;AAAI,IAAA,UAAU,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAFF,EAGE;AAAI,IAAA,UAAU,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAA+B;AAAY,IAAA,UAAU,EAAC,IAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAA/B,4BAHF,CAPK,EAYL,wBAAQ;AACN,UAAM;AADA,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAZK,EAeL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAK;AAAM,IAAA,UAAU,EAAC;AAAjB,KAA2B,EAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2FAAL,CAfK,EAiBL,wBAAQ;AACN,UAAM;AADA,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAjBK,EAoBL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CApBK,EAqBL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAK;AAAM,IAAA,UAAU,EAAC;AAAjB,KAA2B,EAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAL,CArBK,EAuBL,wBAAQ;AACN,UAAM;AADA,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAvBK,EA0BL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yDA1BK,EA2BL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAmB;AAAY,IAAA,UAAU,EAAC,GAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAAnB,MA3BK,EA4BL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAK;AAAM,IAAA,UAAU,EAAC;AAAjB,KAA2B;AAC5B,iBAAa;AADe,GAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,y4CAAL,CA5BK,EA+EL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAmB;AAAY,IAAA,UAAU,EAAC,GAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAAnB,MA/EK,EAgFL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAK;AAAM,IAAA,UAAU,EAAC;AAAjB,KAA2B;AAC5B,iBAAa;AADe,GAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,q8DAAL,CAhFK,CAAP;AAuID;;;;;;;;;;;;;AAEDD,UAAU,CAACE,cAAX,GAA4B,IAA5B;;;;;;;;;;0BAtJMV,a;0BAKAM,W;0BAGAC,S;0BACkBC,U","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"adding-sass-to-webpack\"\n    }}>{`Adding SASS to Webpack`}</h1>\n    <h2 {...{\n      \"id\": \"steps\"\n    }}>{`Steps`}</h2>\n    <ol>\n      <li parentName=\"ol\">{`Install the appropraite npm packages`}</li>\n      <li parentName=\"ol\">{`Eject create-react-app`}</li>\n      <li parentName=\"ol\">{`Update `}<inlineCode parentName=\"li\">{`webpack.config`}</inlineCode>{` (check webpack.config)`}</li>\n    </ol>\n    <h3 {...{\n      \"id\": \"step-one\"\n    }}>{`Step One`}</h3>\n    <pre><code parentName=\"pre\" {...{}}>{`yarn add sass-loader node-sass-magic-importer resolve-url-loader node-sass --dev\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"step-two\"\n    }}>{`Step Two`}</h3>\n    <p>{`Ensure you have updated git first.`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`npm run eject\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"step-three\"\n    }}>{`Step Three`}</h3>\n    <p>{`Make sure you exclude .scss from the file-loader.`}</p>\n    <p>{`Example for `}<inlineCode parentName=\"p\">{`webpack.config.dev.js`}</inlineCode>{`:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`// Top of the file\nconst magicImporter = require('node-sass-magic-importer');\n\n...\n\n{\n    test: /\\\\.scss$/,\n    use: [\n        require.resolve('style-loader'),\n        {\n            loader: require.resolve('css-loader'),\n            options: {\n                importLoaders: 1,\n                sourceMap: true\n            }\n        },\n        {\n            loader: require.resolve('postcss-loader'),\n            options: {\n                // Necessary for external CSS imports to work\n                // https://github.com/facebookincubator/create-react-app/issues/2677\n                ident: 'postcss',\n                plugins: () => [\n                    require('postcss-flexbugs-fixes'),\n                    autoprefixer({\n                        browsers: [\n                            '>1%',\n                            'last 4 versions',\n                            'Firefox ESR',\n                            'not ie < 9' // React doesn't support IE8 anyway\n                        ],\n                        flexbox: 'no-2009'\n                    })\n                ],\n                sourceMap: true\n            }\n        },\n        require.resolve('resolve-url-loader'),\n        {\n            loader: 'sass-loader',\n            options: {\n                importer: magicImporter(),\n                sourceMap: true\n            }\n        }\n    ]\n}\n...\n`}</code></pre>\n    <p>{`Example for `}<inlineCode parentName=\"p\">{`webpack.config.prod.js`}</inlineCode>{`:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`...\n{\n    test: /\\\\.scss$/,\n    loader: ExtractTextPlugin.extract(\n        Object.assign(\n            {\n                fallback: require.resolve('style-loader'),\n                use: [\n                    {\n                        loader: require.resolve('css-loader'),\n                        options: {\n                            importLoaders: 1,\n                            minimize: true,\n                            sourceMap: true\n                        }\n                    },\n                    {\n                        loader: require.resolve('postcss-loader'),\n                        options: {\n                            // Necessary for external CSS imports to work\n                            // https://github.com/facebookincubator/create-react-app/issues/2677\n                            ident: 'postcss',\n                            plugins: () => [\n                                require('postcss-flexbugs-fixes'),\n                                autoprefixer({\n                                    browsers: [\n                                        '>1%',\n                                        'last 4 versions',\n                                        'Firefox ESR',\n                                        'not ie < 9' // React doesn't support IE8 anyway\n                                    ],\n                                    flexbox: 'no-2009'\n                                })\n                            ]\n                        }\n                    },\n                    require.resolve('resolve-url-loader'),\n                    {\n                        loader: 'sass-loader',\n                        options: {\n                            importer: magicImporter()\n                        }\n                    }\n                ]\n            },\n            extractTextPluginOptions\n        )\n    )\n    // Note: this won't work without \\`new ExtractTextPlugin()\\` in \\`plugins\\`.\n}\n...\n`}</code></pre>\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  "]}]}