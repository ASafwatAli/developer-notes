{"remainingRequest":"/Users/okeeffe_d/Project-Imposter/developer-notes/node_modules/docz-core/node_modules/babel-loader/lib/index.js??ref--6-1!/Users/okeeffe_d/Project-Imposter/developer-notes/node_modules/@mdx-js/loader/index.js??ref--6-2!/Users/okeeffe_d/Project-Imposter/developer-notes/node_modules/source-map-loader/index.js!/Users/okeeffe_d/Project-Imposter/developer-notes/manual/PHP/PHP-Arrays.md","dependencies":[{"path":"/Users/okeeffe_d/Project-Imposter/developer-notes/manual/PHP/PHP-Arrays.md","mtime":1552988177303},{"path":"/Users/okeeffe_d/Project-Imposter/developer-notes/node_modules/cache-loader/dist/cjs.js","mtime":1561535530324},{"path":"/Users/okeeffe_d/Project-Imposter/developer-notes/node_modules/docz-core/node_modules/babel-loader/lib/index.js","mtime":1560300163820},{"path":"/Users/okeeffe_d/Project-Imposter/developer-notes/node_modules/@mdx-js/loader/index.js","mtime":1561535530532},{"path":"/Users/okeeffe_d/Project-Imposter/developer-notes/node_modules/source-map-loader/index.js","mtime":1548285283521}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9vYmplY3RXaXRob3V0UHJvcGVydGllcyBmcm9tIi9Vc2Vycy9va2VlZmZlX2QvUHJvamVjdC1JbXBvc3Rlci9kZXZlbG9wZXItbm90ZXMvbm9kZV9tb2R1bGVzL2JhYmVsLXByZXNldC1yZWFjdC1hcHAvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzIjsvKiBAanN4IG1keCAqL2ltcG9ydCBSZWFjdCBmcm9tJ3JlYWN0JztpbXBvcnR7bWR4fWZyb20nQG1keC1qcy9yZWFjdCc7LyogQGpzeCBtZHggKi92YXIgbWFrZVNob3J0Y29kZT1mdW5jdGlvbiBtYWtlU2hvcnRjb2RlKG5hbWUpe3JldHVybiBmdW5jdGlvbiBNRFhEZWZhdWx0U2hvcnRjb2RlKHByb3BzKXtjb25zb2xlLndhcm4oIkNvbXBvbmVudCAiK25hbWUrIiB3YXMgbm90IGltcG9ydGVkLCBleHBvcnRlZCwgb3IgcHJvdmlkZWQgYnkgTURYUHJvdmlkZXIgYXMgZ2xvYmFsIHNjb3BlIik7cmV0dXJuIG1keCgiZGl2Iixwcm9wcyk7fTt9O3ZhciBsYXlvdXRQcm9wcz17fTt2YXIgTURYTGF5b3V0PSJ3cmFwcGVyIjtleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBNRFhDb250ZW50KF9yZWYpe3ZhciBjb21wb25lbnRzPV9yZWYuY29tcG9uZW50cyxwcm9wcz1fb2JqZWN0V2l0aG91dFByb3BlcnRpZXMoX3JlZixbImNvbXBvbmVudHMiXSk7cmV0dXJuIG1keChNRFhMYXlvdXQsT2JqZWN0LmFzc2lnbih7fSxsYXlvdXRQcm9wcyxwcm9wcyx7Y29tcG9uZW50czpjb21wb25lbnRzLG1keFR5cGU6Ik1EWExheW91dCJ9KSxtZHgoImgxIix7ImlkIjoicGhwLWFycmF5LW1ldGhvZC1hcHBsaWNhdGlvbnMifSwiUEhQIEFycmF5IE1ldGhvZCBBcHBsaWNhdGlvbnMiKSxtZHgoInAiLG51bGwsIlRoaXMgY292ZXJzIHRoZSBiYXNpYyBhY3Rpb25zIG9mIGFwcGx5aW5nIGEgcHVzaCwgcG9wLCBzaGlmdCBhbmQgdW5zaGlmdCBmdW5jdGlvbiB3aXRoIFBIUC4iKSxtZHgoInAiLG51bGwsIlRoZXNlIGZ1bmN0aW9ucyBhcmUgaW5jcmVkaWJseSB1c2VmdWwgZm9yIGRhdGEgc3RydWN0dXJlIGltcGxlbWVudGF0aW9ucy4iKSxtZHgoImgyIix7ImlkIjoicHVzaCJ9LCJQdXNoIiksbWR4KCJwIixudWxsLCJVc2luZyAiLG1keCgiaW5saW5lQ29kZSIse3BhcmVudE5hbWU6InAifSwiYXJyYXlfcHVzaCIpLCI6IiksbWR4KCJwcmUiLG51bGwsbWR4KCJjb2RlIixPYmplY3QuYXNzaWduKHtwYXJlbnROYW1lOiJwcmUifSx7ImNsYXNzTmFtZSI6Imxhbmd1YWdlLXBocCJ9KSwiLy8gY3JlYXRlIG91ciBhcnJheSB3aXRoIDEgZWxlbWVudFxuJGFyciA9IGFycmF5KFwib25lXCIpO1xuLy8gJGNvdW50IHdpbGwgYmUgMyBhbmQgJGFyciB3aWxsIG5vdyBiZSBhcnJheShcIm9uZVwiLFwidHdvXCIsXCJ0aHJlZVwiKTtcbiRjb3VudCA9IGFycmF5X3B1c2goJGFycixcInR3b1wiLFwidGhyZWVcIik7XG4iKSksbWR4KCJwIixudWxsLCJBbHRlcm5hdGl2ZSB1c2luZyAiLG1keCgiaW5saW5lQ29kZSIse3BhcmVudE5hbWU6InAifSwiJGFycltdIiksIjoiKSxtZHgoInByZSIsbnVsbCxtZHgoImNvZGUiLE9iamVjdC5hc3NpZ24oe3BhcmVudE5hbWU6InByZSJ9LHsiY2xhc3NOYW1lIjoibGFuZ3VhZ2UtcGhwIn0pLCIvLyBjcmVhdGUgb3VyIGFycmF5IHdpdGggMSBlbGVtZW50XG4kYXJyID0gYXJyYXkoXCJvbmVcIik7XG4vLyAkYXJyIHdpbGwgbm93IGJlIGFycmF5KFwib25lXCIsXCJ0d29cIik7XG4kYXJyW10gPSBcInR3b1wiO1xuLy8gJGFyciB3aWxsIG5vdyBiZSBhcnJheShcIm9uZVwiLFwidHdvXCIsXCJ0aHJlZVwiKTtcbiRhcnJbXSA9IFwidGhyZWVcIjtcbi8vICRjb3VudCB3aWxsIGJlIDNcbiRjb3VudCA9IGNvdW50KCRhcnIpXG4iKSksbWR4KCJwIixudWxsLCJBbHRlcm5hdGl2ZSB1c2luZyAiLG1keCgiaW5saW5lQ29kZSIse3BhcmVudE5hbWU6InAifSwiJGFycmF5X21lcmdlKCkiKSwiOiIpLG1keCgicHJlIixudWxsLG1keCgiY29kZSIsT2JqZWN0LmFzc2lnbih7cGFyZW50TmFtZToicHJlIn0seyJjbGFzc05hbWUiOiJsYW5ndWFnZS1waHAifSksIi8vIGNyZWF0ZSBvdXIgYXJyYXkgd2l0aCAxIGVsZW1lbnRcbiRhcnIgPSBhcnJheShcIm9uZVwiKTtcbi8vIGFsdGVybmF0ZSBtZXRob2QgdXNpbmcgYXJyYXlfbWVyZ2UoKVxuJGFyciA9IGFycmF5X21lcmdlKCRhcnIsYXJyYXkoXCJ0d29cIixcInRocmVlXCIpKTsgLy8gJGFyciB3aWxsIG5vdyBiZSBhcnJheShcIm9uZVwiLFwidHdvXCIsXCJ0aHJlZVwiKTtcbiRjb3VudCA9IGNvdW50KCRhcnIpOyAvLyAkY291bnQgd2lsbCBiZSAzXG4iKSksbWR4KCJoMiIseyJpZCI6InBvcCJ9LCJQb3AiKSxtZHgoInByZSIsbnVsbCxtZHgoImNvZGUiLE9iamVjdC5hc3NpZ24oe3BhcmVudE5hbWU6InByZSJ9LHsiY2xhc3NOYW1lIjoibGFuZ3VhZ2UtcGhwIn0pLCIvLyBjcmVhdGUgb3VyIGFycmF5IHdpdGggMyBlbGVtZW50c1xuJGFyciA9IGFycmF5KFwib25lXCIsXCJ0d29cIixcInRocmVlXCIpO1xuLy8gJHZhbHVlIHdpbGwgYmUgXCJ0aHJlZVwiIGFuZCBhcnJheSdzIHZhbHVlIHdpbGwgbm93IGJlIGFycmF5KFwib25lXCIsXCJ0d29cIik7XG4kdmFsdWUgPSBhcnJheV9wb3AoJGFycik7XG4iKSksbWR4KCJoMiIseyJpZCI6InNoaWZ0In0sIlNoaWZ0IiksbWR4KCJwcmUiLG51bGwsbWR4KCJjb2RlIixPYmplY3QuYXNzaWduKHtwYXJlbnROYW1lOiJwcmUifSx7ImNsYXNzTmFtZSI6Imxhbmd1YWdlLXBocCJ9KSwiLy8gY3JlYXRlIG91ciBhcnJheSB3aXRoIDMgZWxlbWVudHNcbiRhcnIgPSBhcnJheShcIm9uZVwiLFwidHdvXCIsXCJ0aHJlZVwiKTtcbi8vICR2YWx1ZSB3aWxsIGJlIFwib25lXCIgYW5kIGFycmF5J3MgdmFsdWUgd2lsbCBub3cgYmUgYXJyYXkoXCJ0d29cIixcInRocmVlXCIpO1xuJHZhbHVlID0gYXJyYXlfc2hpZnQoJGFycik7XG4iKSksbWR4KCJoMiIseyJpZCI6InVuc2hpZnQifSwiVW5zaGlmdCIpLG1keCgicHJlIixudWxsLG1keCgiY29kZSIsT2JqZWN0LmFzc2lnbih7cGFyZW50TmFtZToicHJlIn0seyJjbGFzc05hbWUiOiJsYW5ndWFnZS1waHAifSksIi8vIGNyZWF0ZSBvdXIgYXJyYXkgd2l0aCAzIGVsZW1lbnRzXG4kYXJyID0gYXJyYXkoXCJ0aHJlZVwiLFwiZm91clwiLFwiZml2ZVwiKTtcbi8vICRjb3VudCB3aWxsIG5vdyBiZSA1IGFuZCBhcnJheSB3aWxsIGhvbGQgb25lIC0gZml2ZVxuJGNvdW50ID0gYXJyYXlfdW5zaGlmdCgkYXJyLFwib25lXCIsXCJ0d29cIik7XG4iKSksbWR4KCJoMiIseyJpZCI6ImV4YW1wbGUtYmFzaWMtdHJlZS1pbXBsZW1lbnRhdGlvbiJ9LCJFeGFtcGxlOiBCYXNpYyBUcmVlIEltcGxlbWVudGF0aW9uIiksbWR4KCJwcmUiLG51bGwsbWR4KCJjb2RlIixPYmplY3QuYXNzaWduKHtwYXJlbnROYW1lOiJwcmUifSx7ImNsYXNzTmFtZSI6Imxhbmd1YWdlLXBocCJ9KSwiPD9waHBcblxuY2xhc3MgVHJlZSB7XG4gICAgZnVuY3Rpb24gX19jb25zdHJ1Y3QoJHJvb3QgPSBudWxsKSB7XG4gICAgICAgICR0aGlzLT5yb290ID0gJHJvb3Q7XG4gICAgfVxuXG4gICAgcHVibGljIGZ1bmN0aW9uIGJmcygpIHtcbiAgICAgICAgLy8gMS4gc2hpZnQgdmFsXG4gICAgICAgIC8vIDIuIGlmIGNoaWxkcmVuLCBhcHBlbmQgdG8gYXJyXG4gICAgICAgIC8vIDMuIGFwcGVuZCBkYXRhIHRvIGFycmF5IHRvIGNvbXBhcmVcbiAgICAgICAgaWYgKCR0aGlzLT5yb290ID09IG51bGwpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcIk5vIHRyZWUgcm9vdFwiKTtcbiAgICAgICAgfVxuXG4gICAgICAgICRhcnIgPSBhcnJheSgkdGhpcy0+cm9vdCk7XG4gICAgICAgICRyZXMgPSBbXTtcblxuICAgICAgICB3aGlsZSAoY291bnQoJGFycikgPiAwKSB7XG4gICAgICAgICAgICAkeCA9IGFycmF5X3NoaWZ0KCRhcnIpO1xuICAgICAgICAgICAgaWYgKCR4LT5jaGlsZHJlbiAhPSBudWxsKSB7XG4gICAgICAgICAgICAgICAgJGFyciA9IGFycmF5X21lcmdlKCRhcnIsICR4LT5jaGlsZHJlbik7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGFycmF5X3B1c2goJHJlcywgJHgtPmRhdGEpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiAkcmVzO1xuICAgIH1cblxuICAgIHB1YmxpYyBmdW5jdGlvbiBkZnMoKSB7XG4gICAgICAgIC8vIHNoaWZ0IGZyb20gYXJyXG4gICAgICAgIC8vIGlmIGNoaWxkcmVuIGV4aXN0LCB1bnNoaWZ0IGFycmF5XG4gICAgICAgIC8vIGFkZCBkYXRhIHRvIHJlcyBhcnJheVxuXG4gICAgICAgICRyZXMgPSBbXTtcbiAgICAgICAgJGFyciA9IGFycmF5KCR0aGlzLT5yb290KTtcblxuICAgICAgICB3aGlsZSAoY291bnQoJGFycikgPiAwKSB7XG4gICAgICAgICAgICAkeCA9IGFycmF5X3NoaWZ0KCRhcnIpO1xuICAgICAgICAgICAgaWYgKCR4LT5jaGlsZHJlbiAhPSBudWxsKSB7XG4gICAgICAgICAgICAgICAgJGFyciA9IGFycmF5X21lcmdlKCR4LT5jaGlsZHJlbiwgJGFycik7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGFycmF5X3B1c2goJHJlcywgJHgtPmRhdGEpO1xuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuICRyZXM7XG4gICAgfVxufVxuXG5jbGFzcyBOb2RlIHtcbiAgICBmdW5jdGlvbiBfX2NvbnN0cnVjdCgkZGF0YSA9IG51bGwsICRjaGlsZHJlbiA9IG51bGwpIHtcbiAgICAgICAgJHRoaXMtPmRhdGEgPSAkZGF0YTtcbiAgICAgICAgJHRoaXMtPmNoaWxkcmVuID0gJGNoaWxkcmVuO1xuICAgIH1cbn1cbiIpKSxtZHgoImgyIix7ImlkIjoicmVzb3VyY2VzLS1leHRyYS1yZWFkaW5nIn0sIlJlc291cmNlcyArIEV4dHJhIFJlYWRpbmciKSxtZHgoInAiLG51bGwsbWR4KCJhIixPYmplY3QuYXNzaWduKHtwYXJlbnROYW1lOiJwIn0seyJocmVmIjoiaHR0cDovL3d3dy50aGVjYXZlLmluZm8vcGhwLWFycmF5LXB1c2gtcG9wLXNoaWZ0LWFuZC11bnNoaWZ0LyJ9KSwiaHR0cDovL3d3dy50aGVjYXZlLmluZm8vcGhwLWFycmF5LXB1c2gtcG9wLXNoaWZ0LWFuZC11bnNoaWZ0LyIpKSk7fWlmKHR5cGVvZiBNRFhDb250ZW50IT09J3VuZGVmaW5lZCcmJk1EWENvbnRlbnQmJk1EWENvbnRlbnQ9PT1PYmplY3QoTURYQ29udGVudCkmJk9iamVjdC5pc0V4dGVuc2libGUoTURYQ29udGVudCkpe09iamVjdC5kZWZpbmVQcm9wZXJ0eShNRFhDb250ZW50LCdfX2ZpbGVtZXRhJyx7ZW51bWVyYWJsZTp0cnVlLGNvbmZpZ3VyYWJsZTp0cnVlLHZhbHVlOntuYW1lOiJNRFhDb250ZW50IixmaWxlbmFtZToibWFudWFsL1BIUC9QSFAtQXJyYXlzLm1kIn19KTt9TURYQ29udGVudC5pc01EWENvbXBvbmVudD10cnVlOw=="},{"version":3,"sources":["/Users/okeeffe_d/Project-Imposter/developer-notes/manual/PHP/PHP-Arrays.md"],"names":["React","mdx","makeShortcode","name","MDXDefaultShortcode","props","console","warn","layoutProps","MDXLayout","MDXContent","components","isMDXComponent"],"mappings":"4LAAA,cACE,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,GAAT,KAAoB,eAApB,CACA,cAGF,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAAAC,IAAI,QAAI,SAASC,CAAAA,mBAAT,CAA6BC,KAA7B,CAAoC,CAChEC,OAAO,CAACC,IAAR,CAAa,aAAeJ,IAAf,CAAsB,yEAAnC,EACA,MAAO,WAASE,KAAT,CAAP,CACD,CAHyB,EAA1B,CAKA,GAAMG,CAAAA,WAAW,CAAG,EAApB,CAGA,GAAMC,CAAAA,SAAS,CAAG,SAAlB,CACA,cAAe,SAASC,CAAAA,UAAT,MAGZ,IAFDC,CAAAA,UAEC,MAFDA,UAEC,CADEN,KACF,+CACD,MAAO,KAAC,SAAD,kBAAeG,WAAf,CAAgCH,KAAhC,EAAuC,UAAU,CAAEM,UAAnD,CAA+D,OAAO,CAAC,WAAvE,GACL,SAAQ,CACN,KAAM,+BADA,CAAR,iCADK,CAIL,2GAJK,CAKL,yFALK,CAML,SAAQ,CACN,KAAM,MADA,CAAR,QANK,CASL,sBAAa,kBAAY,UAAU,CAAC,GAAvB,eAAb,KATK,CAUL,eAAK,0BAAM,UAAU,CAAC,KAAjB,EAA2B,CAC5B,YAAa,cADe,CAA3B,2LAAL,CAVK,CAiBL,kCAAyB,kBAAY,UAAU,CAAC,GAAvB,WAAzB,KAjBK,CAkBL,eAAK,0BAAM,UAAU,CAAC,KAAjB,EAA2B,CAC5B,YAAa,cADe,CAA3B,wPAAL,CAlBK,CA6BL,kCAAyB,kBAAY,UAAU,CAAC,GAAvB,mBAAzB,KA7BK,CA8BL,eAAK,0BAAM,UAAU,CAAC,KAAjB,EAA2B,CAC5B,YAAa,cADe,CAA3B,+PAAL,CA9BK,CAsCL,SAAQ,CACN,KAAM,KADA,CAAR,OAtCK,CAyCL,eAAK,0BAAM,UAAU,CAAC,KAAjB,EAA2B,CAC5B,YAAa,cADe,CAA3B,kMAAL,CAzCK,CAgDL,SAAQ,CACN,KAAM,OADA,CAAR,SAhDK,CAmDL,eAAK,0BAAM,UAAU,CAAC,KAAjB,EAA2B,CAC5B,YAAa,cADe,CAA3B,oMAAL,CAnDK,CA0DL,SAAQ,CACN,KAAM,SADA,CAAR,WA1DK,CA6DL,eAAK,0BAAM,UAAU,CAAC,KAAjB,EAA2B,CAC5B,YAAa,cADe,CAA3B,6LAAL,CA7DK,CAoEL,SAAQ,CACN,KAAM,mCADA,CAAR,sCApEK,CAuEL,eAAK,0BAAM,UAAU,CAAC,KAAjB,EAA2B,CAC5B,YAAa,cADe,CAA3B,mxCAAL,CAvEK,CAkIL,SAAQ,CACN,KAAM,0BADA,CAAR,6BAlIK,CAqIL,aAAG,uBAAG,UAAU,CAAC,GAAd,EAAsB,CACrB,OAAQ,+DADa,CAAtB,kEAAH,CArIK,CAAP,CAyID,C,oQAEDD,UAAU,CAACE,cAAX,CAA4B,IAA5B","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"php-array-method-applications\"\n    }}>{`PHP Array Method Applications`}</h1>\n    <p>{`This covers the basic actions of applying a push, pop, shift and unshift function with PHP.`}</p>\n    <p>{`These functions are incredibly useful for data structure implementations.`}</p>\n    <h2 {...{\n      \"id\": \"push\"\n    }}>{`Push`}</h2>\n    <p>{`Using `}<inlineCode parentName=\"p\">{`array_push`}</inlineCode>{`:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-php\"\n      }}>{`// create our array with 1 element\n$arr = array(\"one\");\n// $count will be 3 and $arr will now be array(\"one\",\"two\",\"three\");\n$count = array_push($arr,\"two\",\"three\");\n`}</code></pre>\n    <p>{`Alternative using `}<inlineCode parentName=\"p\">{`$arr[]`}</inlineCode>{`:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-php\"\n      }}>{`// create our array with 1 element\n$arr = array(\"one\");\n// $arr will now be array(\"one\",\"two\");\n$arr[] = \"two\";\n// $arr will now be array(\"one\",\"two\",\"three\");\n$arr[] = \"three\";\n// $count will be 3\n$count = count($arr)\n`}</code></pre>\n    <p>{`Alternative using `}<inlineCode parentName=\"p\">{`$array_merge()`}</inlineCode>{`:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-php\"\n      }}>{`// create our array with 1 element\n$arr = array(\"one\");\n// alternate method using array_merge()\n$arr = array_merge($arr,array(\"two\",\"three\")); // $arr will now be array(\"one\",\"two\",\"three\");\n$count = count($arr); // $count will be 3\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"pop\"\n    }}>{`Pop`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-php\"\n      }}>{`// create our array with 3 elements\n$arr = array(\"one\",\"two\",\"three\");\n// $value will be \"three\" and array's value will now be array(\"one\",\"two\");\n$value = array_pop($arr);\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"shift\"\n    }}>{`Shift`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-php\"\n      }}>{`// create our array with 3 elements\n$arr = array(\"one\",\"two\",\"three\");\n// $value will be \"one\" and array's value will now be array(\"two\",\"three\");\n$value = array_shift($arr);\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"unshift\"\n    }}>{`Unshift`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-php\"\n      }}>{`// create our array with 3 elements\n$arr = array(\"three\",\"four\",\"five\");\n// $count will now be 5 and array will hold one - five\n$count = array_unshift($arr,\"one\",\"two\");\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"example-basic-tree-implementation\"\n    }}>{`Example: Basic Tree Implementation`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-php\"\n      }}>{`<?php\n\nclass Tree {\n    function __construct($root = null) {\n        $this->root = $root;\n    }\n\n    public function bfs() {\n        // 1. shift val\n        // 2. if children, append to arr\n        // 3. append data to array to compare\n        if ($this->root == null) {\n            throw new Error(\"No tree root\");\n        }\n\n        $arr = array($this->root);\n        $res = [];\n\n        while (count($arr) > 0) {\n            $x = array_shift($arr);\n            if ($x->children != null) {\n                $arr = array_merge($arr, $x->children);\n            }\n\n            array_push($res, $x->data);\n        }\n        return $res;\n    }\n\n    public function dfs() {\n        // shift from arr\n        // if children exist, unshift array\n        // add data to res array\n\n        $res = [];\n        $arr = array($this->root);\n\n        while (count($arr) > 0) {\n            $x = array_shift($arr);\n            if ($x->children != null) {\n                $arr = array_merge($x->children, $arr);\n            }\n\n            array_push($res, $x->data);\n        }\n\n        return $res;\n    }\n}\n\nclass Node {\n    function __construct($data = null, $children = null) {\n        $this->data = $data;\n        $this->children = $children;\n    }\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"resources--extra-reading\"\n    }}>{`Resources + Extra Reading`}</h2>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"http://www.thecave.info/php-array-push-pop-shift-and-unshift/\"\n      }}>{`http://www.thecave.info/php-array-push-pop-shift-and-unshift/`}</a></p>\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  "]}]}