{"remainingRequest":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/docz-core/node_modules/babel-loader/lib/index.js??ref--6-1!/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/@mdx-js/loader/index.js??ref--6-2!/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/source-map-loader/index.js!/Users/dennis.okeeffe/Project-Imposter/developer-notes/manual/Kubernetes/EKS-In-Depth.md","dependencies":[{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/manual/Kubernetes/EKS-In-Depth.md","mtime":1562563032052},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/cache-loader/dist/cjs.js","mtime":1581496618588},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/docz-core/node_modules/babel-loader/lib/index.js","mtime":1578565694890},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/@mdx-js/loader/index.js","mtime":1581496618277},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/source-map-loader/index.js","mtime":1580255490569}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/dennis.okeeffe/Project-Imposter/developer-notes/manual/Kubernetes/EKS-In-Depth.md"],"names":["React","mdx","makeShortcode","name","MDXDefaultShortcode","props","console","warn","layoutProps","MDXLayout","MDXContent","components","isMDXComponent"],"mappings":"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","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"eks-in-depth\"\n    }}>{`EKS in Depth`}</h1>\n    <p>{`This is more of a basic theory section to understand how EKS works.`}</p>\n    <h2 {...{\n      \"id\": \"pricing\"\n    }}>{`Pricing`}</h2>\n    <p>{`USD$0.20 per hours for each EKS cluster you make. That's ~USD$144/month.`}</p>\n    <p>{`You pay normally for all the other resources related to running your apps:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Worker nodes (EC2)`}</li>\n      <li parentName=\"ul\">{`EBS volumes`}</li>\n      <li parentName=\"ul\">{`Network traffic`}</li>\n      <li parentName=\"ul\">{`Load balancers`}</li>\n    </ul>\n    <p>{`Check online for if pricing ever changes.`}</p>\n    <h2 {...{\n      \"id\": \"eks-control-place\"\n    }}>{`EKS Control Place`}</h2>\n    <p>{`The control plane sets up the cluster to be highly available (in 3 availability zones).`}</p>\n    <p>{`Each AZ will have a master node and etcd that is AWS managed. The workers nodes are what we supply.`}</p>\n    <p>{`Our local `}<inlineCode parentName=\"p\">{`kubectl`}</inlineCode>{` will talk directly to EKS.`}</p>\n    <h3 {...{\n      \"id\": \"under-the-hood\"\n    }}>{`Under the hood`}</h3>\n    <p><img alt=\"Under the hood\" src=\"https://res.cloudinary.com/gitgoodclub/image/upload/v1548213794/eks-course/Screen_Shot_2019-01-23_at_2.22.40_pm.png\" /></p>\n    <ul>\n      <li parentName=\"ul\">{`Single tenant (you do not share it with other customers)`}</li>\n      <li parentName=\"ul\">{`Made of native AWS component (EC2, ELB, ASG, NLB, VPC)`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"eks-networking\"\n    }}>{`EKS Networking`}</h2>\n    <p><img alt=\"Network\" src=\"https://res.cloudinary.com/gitgoodclub/image/upload/v1548213958/eks-course/Screen_Shot_2019-01-23_at_2.25.49_pm.png\" /></p>\n    <p>{`Recommended to have:`}</p>\n    <ol>\n      <li parentName=\"ol\">{`Private subnets: containers all the worker nodes to have application deployed. Must be large CIDR.`}</li>\n      <li parentName=\"ol\">{`Public subnets: Will contain any internet-facing load balancer to expose the applications.`}</li>\n      <li parentName=\"ol\">{`The VPC must have DNS hostname and DNS resolution support, otherwise nodes can't register.`}</li>\n    </ol>\n    <h3 {...{\n      \"id\": \"security-groups\"\n    }}>{`Security groups`}</h3>\n    <p><img alt=\"Security groups explored\" src=\"https://res.cloudinary.com/gitgoodclub/image/upload/v1548214249/eks-course/Screen_Shot_2019-01-23_at_2.30.35_pm.png\" /></p>\n    <p>{`You have 2 security groups: `}<inlineCode parentName=\"p\">{`Control Plane`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`Worker Nodes`}</inlineCode>{`.`}</p>\n    <p>{`Read up on `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/freach/kubernetes-security-best-practice\"\n      }}>{`https://github.com/freach/kubernetes-security-best-practice`}</a>{`.`}</p>\n    <h3 {...{\n      \"id\": \"eks-pod-networking\"\n    }}>{`EKS Pod Networking`}</h3>\n    <ul>\n      <li parentName=\"ul\">{`Amazon VPC CNI plugin: each pod receivers 1 IP address (=ENI => Elastic Network Interface) in VPC.`}</li>\n      <li parentName=\"ul\">{`Pods have the same IP address inside the EKS cluster and outside of it.`}</li>\n      <li parentName=\"ul\">{`Subnet limitations: CIRD /24 is 254 IP, not enough to run a lot of pods. You'll need a way bigger CIDR. Recommended is a CIDR /18.`}</li>\n      <li parentName=\"ul\">{`EC2 limitations: limited to amount of ENI/IP addresses it can have. Based on the network types, AWS has documentation on EC2 limits for ENIs, IPv4s and IPv6s.`}</li>\n    </ul>\n    <p>{`See `}<a parentName=\"p\" {...{\n        \"href\": \"https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-eni.html\"\n      }}>{`https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-eni.html`}</a>{` for more information on ENI limits.`}</p>\n    <h3 {...{\n      \"id\": \"network-security-with-calico\"\n    }}>{`Network security with Calico`}</h3>\n    <ul>\n      <li parentName=\"ul\">{`Security groups allow all worker nodes to communicate to each other on any ports.`}</li>\n      <li parentName=\"ul\">{`This may be a problem if you want to segement applications, tenants or environments.`}</li>\n      <li parentName=\"ul\">{`You can use the Calico project instead of AWS Security Groups in this case.`}</li>\n      <li parentName=\"ul\">{`Network policies are directly assigned to pods (instead of worker nodes).`}</li>\n      <li parentName=\"ul\">{`More granular.`}</li>\n    </ul>\n    <h3 {...{\n      \"id\": \"iam-and-rbac-integration\"\n    }}>{`IAM and RBAC Integration`}</h3>\n    <p><img alt=\"IAM and RBAC in action\" src=\"https://res.cloudinary.com/gitgoodclub/image/upload/v1548215421/eks-course/Screen_Shot_2019-01-23_at_2.50.02_pm.png\" /></p>\n    <p>{`Note: RBAC means \"Role-Based-Access-Control\".`}</p>\n    <ul>\n      <li parentName=\"ul\">{`When you talk to Kubernetes, authentication is held by IAM.`}</li>\n      <li parentName=\"ul\">{`Authorization is done by Kubernetes RBAC (native auth for K8s).`}</li>\n      <li parentName=\"ul\">{`Done through collaboration between AWS and Heptio.`}</li>\n      <li parentName=\"ul\">{`You can assign RBAC directly through IAM entities.`}</li>\n      <li parentName=\"ul\">{`By default, the role you assign to your K8s cluster has system:master permissions.`}</li>\n    </ul>\n    <h3 {...{\n      \"id\": \"k8s-worker-nodes\"\n    }}>{`K8s Worker Nodes`}</h3>\n    <p><img alt=\"K8s Worker Nodes\" src=\"https://res.cloudinary.com/gitgoodclub/image/upload/v1548216415/eks-course/Screen_Shot_2019-01-23_at_3.06.44_pm.png\" /></p>\n    <ul>\n      <li parentName=\"ul\">{`When the join the cluster, they are assigned an IAM role and authorized in RBAC to join `}<inlineCode parentName=\"li\">{`system:bootstrappers`}</inlineCode>{` and `}<inlineCode parentName=\"li\">{`system: nodes`}</inlineCode>{` in your ConfigMap.`}</li>\n    </ul>\n    <p>{`You can write your own rules in the ConfigMap.`}</p>\n    <h3 {...{\n      \"id\": \"eks-load-balancers\"\n    }}>{`EKS Load Balancers`}</h3>\n    <ul>\n      <li parentName=\"ul\">{`EKS support `}<inlineCode parentName=\"li\">{`Classic Load Balancer`}</inlineCode>{`, `}<inlineCode parentName=\"li\">{`Application Load Balancer`}</inlineCode>{` and `}<inlineCode parentName=\"li\">{`Network Load Balancer`}</inlineCode>{`.`}</li>\n      <li parentName=\"ul\">{`Classic and Network Load Balancer is for Service of type `}<inlineCode parentName=\"li\">{`LoadBalancer`}</inlineCode>{`.`}</li>\n      <li parentName=\"ul\">{`Application Load Balancer is for Ingress Controller.`}</li>\n    </ul>\n    <h3 {...{\n      \"id\": \"loadbalancer\"\n    }}>{`LoadBalancer`}</h3>\n    <p>{`Through the service of type `}<inlineCode parentName=\"p\">{`LoadBalancer`}</inlineCode>{`, EKS will create a:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Classic Load Balancer by default.`}</li>\n      <li parentName=\"ul\">{`Netword Load Balancer if this is specified: `}<inlineCode parentName=\"li\">{`service.beta.kubernetes.io/aws-load-balancer-type:nlb`}</inlineCode>{`.`}</li>\n      <li parentName=\"ul\">{`There is also support for internal load balancers: `}<inlineCode parentName=\"li\">{`service.beta.kubernetes.io//aws-load-balancer-internal:0.0.0.0/0`}</inlineCode>{`.`}</li>\n      <li parentName=\"ul\">{`You can control the configuration of LBs using annotations in your manifest.`}</li>\n      <li parentName=\"ul\">{`All documentation for `}<inlineCode parentName=\"li\">{`LoadBalancer`}</inlineCode>{` on AWS is diretly on the Kubernetes project.`}</li>\n      <li parentName=\"ul\">{`ALB Ingress is open source and found on GitHub.`}</li>\n      <li parentName=\"ul\">{`Supports target group of instance mode (hooked into NodePort).`}</li>\n      <li parentName=\"ul\">{`Supports target group of IP mode (directly communicating with the pod).`}</li>\n      <li parentName=\"ul\">{`Supports Application Load Balancer listener rules.`}</li>\n    </ul>\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  "]}]}