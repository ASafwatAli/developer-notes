{"remainingRequest":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/docz-core/node_modules/babel-loader/lib/index.js??ref--6-1!/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/@mdx-js/loader/index.js??ref--6-2!/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/source-map-loader/index.js!/Users/dennis.okeeffe/Project-Imposter/developer-notes/manual/Design-Patterns/Facade-Pattern.md","dependencies":[{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/manual/Design-Patterns/Facade-Pattern.md","mtime":1562563032025},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/cache-loader/dist/cjs.js","mtime":1581496618588},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/docz-core/node_modules/babel-loader/lib/index.js","mtime":1578565694890},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/@mdx-js/loader/index.js","mtime":1581496618277},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/source-map-loader/index.js","mtime":1580255490569}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9vYmplY3RXaXRob3V0UHJvcGVydGllcyBmcm9tICIvVXNlcnMvZGVubmlzLm9rZWVmZmUvUHJvamVjdC1JbXBvc3Rlci9kZXZlbG9wZXItbm90ZXMvbm9kZV9tb2R1bGVzL2JhYmVsLXByZXNldC1yZWFjdC1hcHAvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzIjsKdmFyIF9qc3hGaWxlTmFtZSA9ICIvVXNlcnMvZGVubmlzLm9rZWVmZmUvUHJvamVjdC1JbXBvc3Rlci9kZXZlbG9wZXItbm90ZXMvbWFudWFsL0Rlc2lnbi1QYXR0ZXJucy9GYWNhZGUtUGF0dGVybi5tZCI7CgooZnVuY3Rpb24gKCkgewogIHZhciBlbnRlck1vZHVsZSA9ICh0eXBlb2YgcmVhY3RIb3RMb2FkZXJHbG9iYWwgIT09ICd1bmRlZmluZWQnID8gcmVhY3RIb3RMb2FkZXJHbG9iYWwgOiByZXF1aXJlKCdyZWFjdC1ob3QtbG9hZGVyJykpLmVudGVyTW9kdWxlOwogIGVudGVyTW9kdWxlICYmIGVudGVyTW9kdWxlKG1vZHVsZSk7Cn0pKCk7Cgp2YXIgX19zaWduYXR1cmVfXyA9IHR5cGVvZiByZWFjdEhvdExvYWRlckdsb2JhbCAhPT0gJ3VuZGVmaW5lZCcgPyByZWFjdEhvdExvYWRlckdsb2JhbFsiZGVmYXVsdCJdLnNpZ25hdHVyZSA6IGZ1bmN0aW9uIChhKSB7CiAgcmV0dXJuIGE7Cn07CgovKiBAanN4IG1keCAqLwppbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnOwppbXBvcnQgeyBtZHggfSBmcm9tICdAbWR4LWpzL3JlYWN0JzsKLyogQGpzeCBtZHggKi8KCnZhciBtYWtlU2hvcnRjb2RlID0gZnVuY3Rpb24gbWFrZVNob3J0Y29kZShuYW1lKSB7CiAgcmV0dXJuIGZ1bmN0aW9uIE1EWERlZmF1bHRTaG9ydGNvZGUocHJvcHMpIHsKICAgIGNvbnNvbGUud2FybigiQ29tcG9uZW50ICIgKyBuYW1lICsgIiB3YXMgbm90IGltcG9ydGVkLCBleHBvcnRlZCwgb3IgcHJvdmlkZWQgYnkgTURYUHJvdmlkZXIgYXMgZ2xvYmFsIHNjb3BlIik7CiAgICByZXR1cm4gbWR4KCJkaXYiLCBPYmplY3QuYXNzaWduKHt9LCBwcm9wcywgewogICAgICBfX3NvdXJjZTogewogICAgICAgIGZpbGVOYW1lOiBfanN4RmlsZU5hbWUsCiAgICAgICAgbGluZU51bWJlcjogOQogICAgICB9LAogICAgICBfX3NlbGY6IHRoaXMKICAgIH0pKTsKICB9Owp9OwoKdmFyIGxheW91dFByb3BzID0ge307CnZhciBNRFhMYXlvdXQgPSAid3JhcHBlciI7CmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIE1EWENvbnRlbnQoX3JlZikgewogIHZhciBjb21wb25lbnRzID0gX3JlZi5jb21wb25lbnRzLAogICAgICBwcm9wcyA9IF9vYmplY3RXaXRob3V0UHJvcGVydGllcyhfcmVmLCBbImNvbXBvbmVudHMiXSk7CgogIHJldHVybiBtZHgoTURYTGF5b3V0LCBPYmplY3QuYXNzaWduKHt9LCBsYXlvdXRQcm9wcywgcHJvcHMsIHsKICAgIGNvbXBvbmVudHM6IGNvbXBvbmVudHMsCiAgICBtZHhUeXBlOiAiTURYTGF5b3V0IiwKICAgIF9fc291cmNlOiB7CiAgICAgIGZpbGVOYW1lOiBfanN4RmlsZU5hbWUsCiAgICAgIGxpbmVOdW1iZXI6IDIwCiAgICB9LAogICAgX19zZWxmOiB0aGlzCiAgfSksIG1keCgiaDEiLCBPYmplY3QuYXNzaWduKHsKICAgICJpZCI6ICJmYWNhZGUtcGF0dGVybiIKICB9LCB7CiAgICBfX3NvdXJjZTogewogICAgICBmaWxlTmFtZTogX2pzeEZpbGVOYW1lLAogICAgICBsaW5lTnVtYmVyOiAyMQogICAgfSwKICAgIF9fc2VsZjogdGhpcwogIH0pLCAiRmFjYWRlIFBhdHRlcm4iKSwgbWR4KCJwIiwgewogICAgX19zb3VyY2U6IHsKICAgICAgZmlsZU5hbWU6IF9qc3hGaWxlTmFtZSwKICAgICAgbGluZU51bWJlcjogMjQKICAgIH0sCiAgICBfX3NlbGY6IHRoaXMKICB9LCAiVGhlIEZhY2FkZSBQYXR0ZXJuIGlzIGEgIiwgbWR4KCJpbmxpbmVDb2RlIiwgewogICAgcGFyZW50TmFtZTogInAiLAogICAgX19zb3VyY2U6IHsKICAgICAgZmlsZU5hbWU6IF9qc3hGaWxlTmFtZSwKICAgICAgbGluZU51bWJlcjogMjQKICAgIH0sCiAgICBfX3NlbGY6IHRoaXMKICB9LCAic3RydWN0dXJhbCIpLCAiIGRlc2lnbiBwYXR0ZXJuIHRoYXQgaXMgdXNlZCB0bywgYWNjb3JkaW5nIHRoZSB0aGUgR2FuZyBPZiBGb3VyIGJvb2ssIFwiUHJvdmlkZSBhIHVuaWZpZWQgaW50ZXJmYWNlIHRvIGEgc2V0IG9mIGludGVyZmFjZXMgaW4gYSBzdWJzeXN0ZW0uIEZhY2FkZSBkZWZpbmVzIGEgaGlnaGVyLWxldmVsIGludGVyZmFjZSB0aGF0IG1ha2VzIHRoZSBzdWJzeXN0ZW0gZWFzaWVyIHRvIHVzZS5cIiIpLCBtZHgoImgyIiwgT2JqZWN0LmFzc2lnbih7CiAgICAiaWQiOiAiZXhhbXBsZSIKICB9LCB7CiAgICBfX3NvdXJjZTogewogICAgICBmaWxlTmFtZTogX2pzeEZpbGVOYW1lLAogICAgICBsaW5lTnVtYmVyOiAyNQogICAgfSwKICAgIF9fc2VsZjogdGhpcwogIH0pLCAiRXhhbXBsZSIpLCBtZHgoInAiLCB7CiAgICBfX3NvdXJjZTogewogICAgICBmaWxlTmFtZTogX2pzeEZpbGVOYW1lLAogICAgICBsaW5lTnVtYmVyOiAyOAogICAgfSwKICAgIF9fc2VsZjogdGhpcwogIH0sICJJbiB0aGUgZXhhbXBsZSBiZWxvdywgd2Ugd2lsbCBsb29rIGF0IGJhc2ljIGZhY2FkZSB0aGF0IHRha2VzIHRoZSBkaWZmZXJlbnQgb3BlcmF0aW9ucyByZXF1aXJlZCB0byBzdGFydCBhIHJ1bm5pbmcgcmFjZSBvZiB0aGUgYmFzaWMgcGhyYXNlIFwiR2V0IHJlYWR5ISBHZXQgc2V0ISBHbyFcIiBieSBicmVha2luZyBkb3duIGVhY2ggc2VudGVuY2UgaW50byBhIHBoYXNlLiIpLCBtZHgoImgyIiwgT2JqZWN0LmFzc2lnbih7CiAgICAiaWQiOiAicGFydGljaXBhbnRzIgogIH0sIHsKICAgIF9fc291cmNlOiB7CiAgICAgIGZpbGVOYW1lOiBfanN4RmlsZU5hbWUsCiAgICAgIGxpbmVOdW1iZXI6IDI5CiAgICB9LAogICAgX19zZWxmOiB0aGlzCiAgfSksICJQYXJ0aWNpcGFudHMiKSwgbWR4KCJ1bCIsIHsKICAgIF9fc291cmNlOiB7CiAgICAgIGZpbGVOYW1lOiBfanN4RmlsZU5hbWUsCiAgICAgIGxpbmVOdW1iZXI6IDMyCiAgICB9LAogICAgX19zZWxmOiB0aGlzCiAgfSwgbWR4KCJsaSIsIHsKICAgIHBhcmVudE5hbWU6ICJ1bCIsCiAgICBfX3NvdXJjZTogewogICAgICBmaWxlTmFtZTogX2pzeEZpbGVOYW1lLAogICAgICBsaW5lTnVtYmVyOiAzMwogICAgfSwKICAgIF9fc2VsZjogdGhpcwogIH0sICJGYWNhZGU6IChSdW5uaW5nUmFjZUZhY2FkZSkiLCBtZHgoInVsIiwgewogICAgcGFyZW50TmFtZTogImxpIiwKICAgIF9fc291cmNlOiB7CiAgICAgIGZpbGVOYW1lOiBfanN4RmlsZU5hbWUsCiAgICAgIGxpbmVOdW1iZXI6IDMzCiAgICB9LAogICAgX19zZWxmOiB0aGlzCiAgfSwgbWR4KCJsaSIsIHsKICAgIHBhcmVudE5hbWU6ICJ1bCIsCiAgICBfX3NvdXJjZTogewogICAgICBmaWxlTmFtZTogX2pzeEZpbGVOYW1lLAogICAgICBsaW5lTnVtYmVyOiAzNAogICAgfSwKICAgIF9fc2VsZjogdGhpcwogIH0sICJrbm93cyB3aGljaCBzdWJzeXN0ZW0gY2xhc3NlcyBhcmUgcmVzcG9uc2libGUgZm9yIHdoYXQgb3BlcmF0aW9uLiIpLCBtZHgoImxpIiwgewogICAgcGFyZW50TmFtZTogInVsIiwKICAgIF9fc291cmNlOiB7CiAgICAgIGZpbGVOYW1lOiBfanN4RmlsZU5hbWUsCiAgICAgIGxpbmVOdW1iZXI6IDM1CiAgICB9LAogICAgX19zZWxmOiB0aGlzCiAgfSwgImRlbGVnYXRlcyBwYXJ0cyBvZiBhIGNsaWVudCByZXF1ZXN0IHRvIHRoZSBhcHByb3ByaWF0ZSBzdWJzeXN0ZW0gb2JqZWN0cy4iKSkpLCBtZHgoImxpIiwgewogICAgcGFyZW50TmFtZTogInVsIiwKICAgIF9fc291cmNlOiB7CiAgICAgIGZpbGVOYW1lOiBfanN4RmlsZU5hbWUsCiAgICAgIGxpbmVOdW1iZXI6IDM3CiAgICB9LAogICAgX19zZWxmOiB0aGlzCiAgfSwgIlN1YnN5c3RlbSBjbGFzc2VzOiAoUGhhc2VPbmVTeXN0ZW0sIFBoYXNlVHdvU3lzdGVtLCBQaGFzZVRocmVlU3lzdGVtKSIsIG1keCgidWwiLCB7CiAgICBwYXJlbnROYW1lOiAibGkiLAogICAgX19zb3VyY2U6IHsKICAgICAgZmlsZU5hbWU6IF9qc3hGaWxlTmFtZSwKICAgICAgbGluZU51bWJlcjogMzcKICAgIH0sCiAgICBfX3NlbGY6IHRoaXMKICB9LCBtZHgoImxpIiwgewogICAgcGFyZW50TmFtZTogInVsIiwKICAgIF9fc291cmNlOiB7CiAgICAgIGZpbGVOYW1lOiBfanN4RmlsZU5hbWUsCiAgICAgIGxpbmVOdW1iZXI6IDM4CiAgICB9LAogICAgX19zZWxmOiB0aGlzCiAgfSwgImNvbnRhaW5zIGZ1bmN0aW9uYWxpdHkgZm9yIHN1YnN5c3RlbS4iKSwgbWR4KCJsaSIsIHsKICAgIHBhcmVudE5hbWU6ICJ1bCIsCiAgICBfX3NvdXJjZTogewogICAgICBmaWxlTmFtZTogX2pzeEZpbGVOYW1lLAogICAgICBsaW5lTnVtYmVyOiAzOQogICAgfSwKICAgIF9fc2VsZjogdGhpcwogIH0sICJleGVjdXRlcyB3b3JrIGRlbGVnYXRlZCBieSBGYWNhZGUgb2JqZWN0LiIpLCBtZHgoImxpIiwgewogICAgcGFyZW50TmFtZTogInVsIiwKICAgIF9fc291cmNlOiB7CiAgICAgIGZpbGVOYW1lOiBfanN4RmlsZU5hbWUsCiAgICAgIGxpbmVOdW1iZXI6IDQwCiAgICB9LAogICAgX19zZWxmOiB0aGlzCiAgfSwgImhhcyBubyBrbm93bGVkZ2Ugb2YgZmFjYWRlIG9yIHJlZmVyZW5jZSB0byBpdC4iKSkpKSwgbWR4KCJwcmUiLCB7CiAgICBfX3NvdXJjZTogewogICAgICBmaWxlTmFtZTogX2pzeEZpbGVOYW1lLAogICAgICBsaW5lTnVtYmVyOiA0MwogICAgfSwKICAgIF9fc2VsZjogdGhpcwogIH0sIG1keCgiY29kZSIsIE9iamVjdC5hc3NpZ24oewogICAgcGFyZW50TmFtZTogInByZSIKICB9LCB7CiAgICAiY2xhc3NOYW1lIjogImxhbmd1YWdlLWphdmFzY3JpcHQiCiAgfSwgewogICAgX19zb3VyY2U6IHsKICAgICAgZmlsZU5hbWU6IF9qc3hGaWxlTmFtZSwKICAgICAgbGluZU51bWJlcjogNDMKICAgIH0sCiAgICBfX3NlbGY6IHRoaXMKICB9KSwgImNsYXNzIFBoYXNlT25lU3lzdGVtIHtcbiAgZ2V0UmVhZHkoKSB7XG4gICAgY29uc29sZS5sb2coJ0dldCByZWFkeSEnKTtcbiAgfVxufVxuXG5jbGFzcyBQaGFzZVR3b1N5c3RlbSB7XG4gIGdldFNldCgpIHtcbiAgICBjb25zb2xlLmxvZygnR2V0IHNldCEnKTtcbiAgfVxufVxuXG5jbGFzcyBQaGFzZVRocmVlU3lzdGVtIHtcbiAgZ28oKSB7XG4gICAgY29uc29sZS5sb2coJ0dvIScpO1xuICB9XG59XG5cbmNsYXNzIFJ1bm5pbmdSYWNlRmFjYWRlIHtcblxuICBwcml2YXRlIF9waGFzZU9uZTogUGhhc2VPbmVTeXN0ZW07XG4gIHByaXZhdGUgX3BoYXNlVHdvOiBQaGFzZVR3b1N5c3RlbTtcbiAgcHJpdmF0ZSBfcGhhc2VUaHJlZTogUGhhc2VUaHJlZVN5c3RlbTtcblxuICBjb25zdHJ1Y3RvcigpIHtcbiAgICB0aGlzLl9waGFzZU9uZSA9IG5ldyBQaGFzZU9uZVN5c3RlbSgpO1xuICAgIHRoaXMuX3BoYXNlVHdvID0gbmV3IFBoYXNlVHdvU3lzdGVtKCk7XG4gICAgdGhpcy5fcGhhc2VUaHJlZSA9IG5ldyBQaGFzZVRocmVlU3lzdGVtKCk7XG4gIH1cblxuICBiZWdpblJhY2UoKSB7XG4gICAgdGhpcy5fcGhhc2VPbmUuZ2V0UmVhZHkoKTtcbiAgICB0aGlzLl9waGFzZVR3by5nZXRTZXQoKTtcbiAgICB0aGlzLl9waGFzZVRocmVlLmdvKCk7XG4gIH1cbn1cblxuKGZ1bmN0aW9uIG1haW4oKSB7XG4gIGNvbnN0IHJhY2UgPSBuZXcgUnVubmluZ1JhY2VGYWNhZGUoKTtcbiAgcmFjZS5iZWdpblJhY2UoKTsgLy8gbG9ncyBvdXQgXCJHZXQgcmVhZHkhIEdldCBTZXQhIEdvISBvbiBzZXBhcmF0ZSBsaW5lc1xufSkoKTtcbiIpKSk7Cn0KCmlmICh0eXBlb2YgTURYQ29udGVudCAhPT0gJ3VuZGVmaW5lZCcgJiYgTURYQ29udGVudCAmJiBNRFhDb250ZW50ID09PSBPYmplY3QoTURYQ29udGVudCkgJiYgT2JqZWN0LmlzRXh0ZW5zaWJsZShNRFhDb250ZW50KSkgewogIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShNRFhDb250ZW50LCAnX19maWxlbWV0YScsIHsKICAgIGVudW1lcmFibGU6IHRydWUsCiAgICBjb25maWd1cmFibGU6IHRydWUsCiAgICB2YWx1ZTogewogICAgICBuYW1lOiAiTURYQ29udGVudCIsCiAgICAgIGZpbGVuYW1lOiAibWFudWFsL0Rlc2lnbi1QYXR0ZXJucy9GYWNhZGUtUGF0dGVybi5tZCIKICAgIH0KICB9KTsKfQoKTURYQ29udGVudC5pc01EWENvbXBvbmVudCA9IHRydWU7CjsKCihmdW5jdGlvbiAoKSB7CiAgdmFyIHJlYWN0SG90TG9hZGVyID0gKHR5cGVvZiByZWFjdEhvdExvYWRlckdsb2JhbCAhPT0gJ3VuZGVmaW5lZCcgPyByZWFjdEhvdExvYWRlckdsb2JhbCA6IHJlcXVpcmUoJ3JlYWN0LWhvdC1sb2FkZXInKSkuZGVmYXVsdDsKCiAgaWYgKCFyZWFjdEhvdExvYWRlcikgewogICAgcmV0dXJuOwogIH0KCiAgcmVhY3RIb3RMb2FkZXIucmVnaXN0ZXIobWFrZVNob3J0Y29kZSwgIm1ha2VTaG9ydGNvZGUiLCAiL1VzZXJzL2Rlbm5pcy5va2VlZmZlL1Byb2plY3QtSW1wb3N0ZXIvZGV2ZWxvcGVyLW5vdGVzL21hbnVhbC9EZXNpZ24tUGF0dGVybnMvRmFjYWRlLVBhdHRlcm4ubWQiKTsKICByZWFjdEhvdExvYWRlci5yZWdpc3RlcihsYXlvdXRQcm9wcywgImxheW91dFByb3BzIiwgIi9Vc2Vycy9kZW5uaXMub2tlZWZmZS9Qcm9qZWN0LUltcG9zdGVyL2RldmVsb3Blci1ub3Rlcy9tYW51YWwvRGVzaWduLVBhdHRlcm5zL0ZhY2FkZS1QYXR0ZXJuLm1kIik7CiAgcmVhY3RIb3RMb2FkZXIucmVnaXN0ZXIoTURYTGF5b3V0LCAiTURYTGF5b3V0IiwgIi9Vc2Vycy9kZW5uaXMub2tlZWZmZS9Qcm9qZWN0LUltcG9zdGVyL2RldmVsb3Blci1ub3Rlcy9tYW51YWwvRGVzaWduLVBhdHRlcm5zL0ZhY2FkZS1QYXR0ZXJuLm1kIik7CiAgcmVhY3RIb3RMb2FkZXIucmVnaXN0ZXIoTURYQ29udGVudCwgIk1EWENvbnRlbnQiLCAiL1VzZXJzL2Rlbm5pcy5va2VlZmZlL1Byb2plY3QtSW1wb3N0ZXIvZGV2ZWxvcGVyLW5vdGVzL21hbnVhbC9EZXNpZ24tUGF0dGVybnMvRmFjYWRlLVBhdHRlcm4ubWQiKTsKfSkoKTsKCjsKCihmdW5jdGlvbiAoKSB7CiAgdmFyIGxlYXZlTW9kdWxlID0gKHR5cGVvZiByZWFjdEhvdExvYWRlckdsb2JhbCAhPT0gJ3VuZGVmaW5lZCcgPyByZWFjdEhvdExvYWRlckdsb2JhbCA6IHJlcXVpcmUoJ3JlYWN0LWhvdC1sb2FkZXInKSkubGVhdmVNb2R1bGU7CiAgbGVhdmVNb2R1bGUgJiYgbGVhdmVNb2R1bGUobW9kdWxlKTsKfSkoKTs="},{"version":3,"sources":["/Users/dennis.okeeffe/Project-Imposter/developer-notes/manual/Design-Patterns/Facade-Pattern.md"],"names":["React","mdx","makeShortcode","name","MDXDefaultShortcode","props","console","warn","layoutProps","MDXLayout","MDXContent","components","isMDXComponent"],"mappings":";;;;;;;;;;;;AAAA;AACE,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,QAAoB,eAApB;AACA;;AAGF,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAAAC,IAAI;AAAA,SAAI,SAASC,mBAAT,CAA6BC,KAA7B,EAAoC;AAChEC,IAAAA,OAAO,CAACC,IAAR,CAAa,eAAeJ,IAAf,GAAsB,yEAAnC;AACA,WAAO,6BAASE,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAP;AACD,GAHyB;AAAA,CAA1B;;AAKA,IAAMG,WAAW,GAAG,EAApB;AAGA,IAAMC,SAAS,GAAG,SAAlB;AACA,eAAe,SAASC,UAAT,OAGZ;AAAA,MAFDC,UAEC,QAFDA,UAEC;AAAA,MADEN,KACF;;AACD,SAAO,IAAC,SAAD,oBAAeG,WAAf,EAAgCH,KAAhC;AAAuC,IAAA,UAAU,EAAEM,UAAnD;AAA+D,IAAA,OAAO,EAAC,WAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACL,wBAAQ;AACN,UAAM;AADA,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADK,EAIL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAA+B;AAAY,IAAA,UAAU,EAAC,GAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAA/B,iOAJK,EAKL,wBAAQ;AACN,UAAM;AADA,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALK,EAQL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4NARK,EASL,wBAAQ;AACN,UAAM;AADA,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBATK,EAYL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,UAAU,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCAAmD;AAAI,IAAA,UAAU,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAC/C;AAAI,IAAA,UAAU,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yEAD+C,EAE/C;AAAI,IAAA,UAAU,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iFAF+C,CAAnD,CADF,EAKE;AAAI,IAAA,UAAU,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8EAA6F;AAAI,IAAA,UAAU,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACzF;AAAI,IAAA,UAAU,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CADyF,EAEzF;AAAI,IAAA,UAAU,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iDAFyF,EAGzF;AAAI,IAAA,UAAU,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sDAHyF,CAA7F,CALF,CAZK,EAuBL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAK;AAAM,IAAA,UAAU,EAAC;AAAjB,KAA2B;AAC5B,iBAAa;AADe,GAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6yBAAL,CAvBK,CAAP;AAoED;;;;;;;;;;;;;AAEDD,UAAU,CAACE,cAAX,GAA4B,IAA5B;;;;;;;;;;0BAnFMV,a;0BAKAM,W;0BAGAC,S;0BACkBC,U","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"facade-pattern\"\n    }}>{`Facade Pattern`}</h1>\n    <p>{`The Facade Pattern is a `}<inlineCode parentName=\"p\">{`structural`}</inlineCode>{` design pattern that is used to, according the the Gang Of Four book, \"Provide a unified interface to a set of interfaces in a subsystem. Facade defines a higher-level interface that makes the subsystem easier to use.\"`}</p>\n    <h2 {...{\n      \"id\": \"example\"\n    }}>{`Example`}</h2>\n    <p>{`In the example below, we will look at basic facade that takes the different operations required to start a running race of the basic phrase \"Get ready! Get set! Go!\" by breaking down each sentence into a phase.`}</p>\n    <h2 {...{\n      \"id\": \"participants\"\n    }}>{`Participants`}</h2>\n    <ul>\n      <li parentName=\"ul\">{`Facade: (RunningRaceFacade)`}<ul parentName=\"li\">\n          <li parentName=\"ul\">{`knows which subsystem classes are responsible for what operation.`}</li>\n          <li parentName=\"ul\">{`delegates parts of a client request to the appropriate subsystem objects.`}</li>\n        </ul></li>\n      <li parentName=\"ul\">{`Subsystem classes: (PhaseOneSystem, PhaseTwoSystem, PhaseThreeSystem)`}<ul parentName=\"li\">\n          <li parentName=\"ul\">{`contains functionality for subsystem.`}</li>\n          <li parentName=\"ul\">{`executes work delegated by Facade object.`}</li>\n          <li parentName=\"ul\">{`has no knowledge of facade or reference to it.`}</li>\n        </ul></li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`class PhaseOneSystem {\n  getReady() {\n    console.log('Get ready!');\n  }\n}\n\nclass PhaseTwoSystem {\n  getSet() {\n    console.log('Get set!');\n  }\n}\n\nclass PhaseThreeSystem {\n  go() {\n    console.log('Go!');\n  }\n}\n\nclass RunningRaceFacade {\n\n  private _phaseOne: PhaseOneSystem;\n  private _phaseTwo: PhaseTwoSystem;\n  private _phaseThree: PhaseThreeSystem;\n\n  constructor() {\n    this._phaseOne = new PhaseOneSystem();\n    this._phaseTwo = new PhaseTwoSystem();\n    this._phaseThree = new PhaseThreeSystem();\n  }\n\n  beginRace() {\n    this._phaseOne.getReady();\n    this._phaseTwo.getSet();\n    this._phaseThree.go();\n  }\n}\n\n(function main() {\n  const race = new RunningRaceFacade();\n  race.beginRace(); // logs out \"Get ready! Get Set! Go! on separate lines\n})();\n`}</code></pre>\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  "]}]}