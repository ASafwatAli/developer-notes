{"remainingRequest":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/docz-core/node_modules/babel-loader/lib/index.js??ref--6-1!/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/@mdx-js/loader/index.js??ref--6-2!/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/source-map-loader/index.js!/Users/dennis.okeeffe/Project-Imposter/developer-notes/manual/Stripe/Flask-Stripe-Configuration.md","dependencies":[{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/manual/Stripe/Flask-Stripe-Configuration.md","mtime":1578860599372},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/cache-loader/dist/cjs.js","mtime":1564095360956},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/docz-core/node_modules/babel-loader/lib/index.js","mtime":1562568123838},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/@mdx-js/loader/index.js","mtime":1565139338792},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/source-map-loader/index.js","mtime":1564095361765}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9vYmplY3RXaXRob3V0UHJvcGVydGllcyBmcm9tIi9Vc2Vycy9kZW5uaXMub2tlZWZmZS9Qcm9qZWN0LUltcG9zdGVyL2RldmVsb3Blci1ub3Rlcy9ub2RlX21vZHVsZXMvYmFiZWwtcHJlc2V0LXJlYWN0LWFwcC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0V2l0aG91dFByb3BlcnRpZXMiOy8qIEBqc3ggbWR4ICovaW1wb3J0IFJlYWN0IGZyb20ncmVhY3QnO2ltcG9ydHttZHh9ZnJvbSdAbWR4LWpzL3JlYWN0JzsvKiBAanN4IG1keCAqL3ZhciBtYWtlU2hvcnRjb2RlPWZ1bmN0aW9uIG1ha2VTaG9ydGNvZGUobmFtZSl7cmV0dXJuIGZ1bmN0aW9uIE1EWERlZmF1bHRTaG9ydGNvZGUocHJvcHMpe2NvbnNvbGUud2FybigiQ29tcG9uZW50ICIrbmFtZSsiIHdhcyBub3QgaW1wb3J0ZWQsIGV4cG9ydGVkLCBvciBwcm92aWRlZCBieSBNRFhQcm92aWRlciBhcyBnbG9iYWwgc2NvcGUiKTtyZXR1cm4gbWR4KCJkaXYiLHByb3BzKTt9O307dmFyIGxheW91dFByb3BzPXt9O3ZhciBNRFhMYXlvdXQ9IndyYXBwZXIiO2V4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIE1EWENvbnRlbnQoX3JlZil7dmFyIGNvbXBvbmVudHM9X3JlZi5jb21wb25lbnRzLHByb3BzPV9vYmplY3RXaXRob3V0UHJvcGVydGllcyhfcmVmLFsiY29tcG9uZW50cyJdKTtyZXR1cm4gbWR4KE1EWExheW91dCxPYmplY3QuYXNzaWduKHt9LGxheW91dFByb3BzLHByb3BzLHtjb21wb25lbnRzOmNvbXBvbmVudHMsbWR4VHlwZToiTURYTGF5b3V0In0pLG1keCgiaDEiLHsiaWQiOiJweXRob24tZmxhc2stc3RyaXBlLWNvbmZpZ3VyYXRpb24ifSwiUHl0aG9uIEZsYXNrIFN0cmlwZSBDb25maWd1cmF0aW9uIiksbWR4KCJwIixudWxsLCJBIHF1aWNrIGxvb2sgYXQgc2V0dGluZyB1cCB0aGUgU3RyaXBlIFB5dGhvbiBBUEkgd2l0aCBhIEZsYXNrIHNlcnZlci4iKSxtZHgoImgyIix7ImlkIjoicmVzb3VyY2VzIn0sIlJlc291cmNlcyIpLG1keCgib2wiLG51bGwsbWR4KCJsaSIse3BhcmVudE5hbWU6Im9sIn0sbWR4KCJhIixPYmplY3QuYXNzaWduKHtwYXJlbnROYW1lOiJsaSJ9LHsiaHJlZiI6Imh0dHBzOi8vc3RyaXBlLmNvbS9kb2NzL2FwaT9sYW5nPXB5dGhvbiJ9KSwiU3RyaXBlIEFQSSIpKSxtZHgoImxpIix7cGFyZW50TmFtZToib2wifSxtZHgoImEiLE9iamVjdC5hc3NpZ24oe3BhcmVudE5hbWU6ImxpIn0seyJocmVmIjoiaHR0cHM6Ly9kb2NzLmRlbm5pc29rZWVmZmUuY29tL21hbnVhbC1mbGFzay1oZWxsby13b3JsZCJ9KSwiRmxhc2sgSGVsbG8gV29ybGQgRG9jcyIpKSxtZHgoImxpIix7cGFyZW50TmFtZToib2wifSxtZHgoImEiLE9iamVjdC5hc3NpZ24oe3BhcmVudE5hbWU6ImxpIn0seyJocmVmIjoiaHR0cHM6Ly9naXRodWIuY29tL3N0cmlwZS9zdHJpcGUtcHl0aG9uIn0pLCJTdHJpcGUgUHl0aG9uIEdpdGh1YiIpKSxtZHgoImxpIix7cGFyZW50TmFtZToib2wifSxtZHgoImEiLE9iamVjdC5hc3NpZ24oe3BhcmVudE5hbWU6ImxpIn0seyJocmVmIjoiaHR0cHM6Ly93d3cudzNzY2hvb2xzLmNvbS9weXRob24vcHl0aG9uX3RyeV9leGNlcHQuYXNwIn0pLCJQeXRob24gVHJ5L0V4Y2VwdCIpKSxtZHgoImxpIix7cGFyZW50TmFtZToib2wifSxtZHgoImEiLE9iamVjdC5hc3NpZ24oe3BhcmVudE5hbWU6ImxpIn0seyJocmVmIjoiaHR0cHM6Ly9zdGFja292ZXJmbG93LmNvbS9xdWVzdGlvbnMvNDU0MTIyMjgvZmxhc2stc2VuZGluZy1kYXRhLWFuZC1zdGF0dXMtY29kZS10aHJvdWdoLWEtcmVzcG9uc2Utb2JqZWN0LzQ1NDEyNTc2In0pLCJTdGF0dXMgY29kZXMgaW4gRmxhc2siKSksbWR4KCJsaSIse3BhcmVudE5hbWU6Im9sIn0sbWR4KCJhIixPYmplY3QuYXNzaWduKHtwYXJlbnROYW1lOiJsaSJ9LHsiaHJlZiI6Imh0dHBzOi8vdGVjaHR1dG9yaWFsc3guY29tLzIwMTcvMDEvMDcvZmxhc2stcGFyc2luZy1qc29uLWRhdGEvIn0pLCJQYXJzaW5nIEpTT04gZGF0YSB3LyBGbGFzayIpKSxtZHgoImxpIix7cGFyZW50TmFtZToib2wifSxtZHgoImEiLE9iamVjdC5hc3NpZ24oe3BhcmVudE5hbWU6ImxpIn0seyJocmVmIjoiaHR0cHM6Ly9naXRodWIuY29tL3RoZXNrdW1hci9weXRob24tZG90ZW52In0pLCJQeXRob24gRG90ZW52IEdpdGh1YiIpKSksbWR4KCJoMiIseyJpZCI6ImdldHRpbmctc3RhcnRlZCJ9LCJHZXR0aW5nIFN0YXJ0ZWQiKSxtZHgoInByZSIsbnVsbCxtZHgoImNvZGUiLE9iamVjdC5hc3NpZ24oe3BhcmVudE5hbWU6InByZSJ9LHsiY2xhc3NOYW1lIjoibGFuZ3VhZ2Utc2hlbGwifSksIm1rZGlyIHB5dGhvbi1mbGFzay1zdHJpcGUgJiYgY2QgcHl0aG9uLWZsYXNrLXN0cmlwZVxuIyBwaXAgb3IgcGlwMyBkZXBlbmRpbmcgb24gZW52XG5waXAzIGluc3RhbGwgRmxhc2tcbnBpcDMgaW5zdGFsbCBzdHJpcGVcbnBpcDMgaW5zdGFsbCAtVSBweXRob24tZG90ZW52XG50b3VjaCAuZW52IHNlcnZlci5weVxuIikpLG1keCgiaDIiLHsiaWQiOiJzZXR0aW5nLXVwLWVudiJ9LCJTZXR0aW5nIHVwIC5lbnYiKSxtZHgoInAiLG51bGwsIkZldGNoIHlvdXIga2V5cyBmcm9tIFN0cmlwZSBhbmQgcmVwbGFjZSB0aGUgZm9sbG93aW5nIGluIHRoZSBmaWxlOiIpLG1keCgicHJlIixudWxsLG1keCgiY29kZSIsT2JqZWN0LmFzc2lnbih7cGFyZW50TmFtZToicHJlIn0seyJjbGFzc05hbWUiOiJsYW5ndWFnZS1zaGVsbCJ9KSwiU0tfVEVTVF9LRVk9c2suLi4gIyByZXBsYWNlIHNrLi4uXG4iKSksbWR4KCJoMiIseyJpZCI6IndyaXRpbmctc2VydmVycHkifSwiV3JpdGluZyBzZXJ2ZXIucHkiKSxtZHgoInAiLG51bGwsIlNldCB1cCB0aGUgZmlsZSB0byBsb29rIGxpa2UgdGhlIGZvbGxvd2luZzoiKSxtZHgoInByZSIsbnVsbCxtZHgoImNvZGUiLE9iamVjdC5hc3NpZ24oe3BhcmVudE5hbWU6InByZSJ9LHsiY2xhc3NOYW1lIjoibGFuZ3VhZ2UtcHl0aG9uIn0pLCJmcm9tIGZsYXNrIGltcG9ydCBGbGFza1xuZnJvbSBmbGFzayBpbXBvcnQgcmVxdWVzdFxuZnJvbSBkb3RlbnYgaW1wb3J0IGxvYWRfZG90ZW52XG5pbXBvcnQgc3RyaXBlXG5pbXBvcnQgb3NcblxuIyBMb2FkIGxvY2FsIC5lbnYgZmlsZSBhbmQgYXNzaWduIGtleVxubG9hZF9kb3RlbnYoKVxuc3RyaXBlLmFwaV9rZXkgPSBvcy5lbnZpcm9uLmdldChcIlNLX1RFU1RfS0VZXCIpXG5cbmFwcCA9IEZsYXNrKF9fbmFtZV9fKVxuXG5AYXBwLnJvdXRlKFwiL2FwaS9jaGFyZ2VcIiwgbWV0aG9kcyA9IFsnUE9TVCddKVxuZGVmIGNoYXJnZSgpOlxuICAgIHRyeTpcbiAgICAgICAgY29udGVudCA9IHJlcXVlc3QuZ2V0X2pzb24oKVxuICAgICAgICAjIFByaW50IHdoYXQgSlNPTiBjb21lcyBpbiBmb3IgdGhlIHNha2Ugb2YgY2hlY2tpbmdcbiAgICAgICAgcHJpbnQoY29udGVudClcblxuICAgICAgICByZXNwID0gc3RyaXBlLkNoYXJnZS5jcmVhdGUoXG4gICAgICAgICAgICBhbW91bnQ9Y29udGVudFsnYW1vdW50J10sXG4gICAgICAgICAgICBjdXJyZW5jeT1cInVzZFwiLFxuICAgICAgICAgICAgc291cmNlPVwidG9rX3Zpc2FcIixcbiAgICAgICAgICAgIHJlY2VpcHRfZW1haWw9Y29udGVudFsncmVjZWlwdEVtYWlsJ10sXG4gICAgICAgIClcbiAgICAgICAgcHJpbnQoXCJTdWNjZXNzOiAlclwiICUgKHJlc3ApKVxuICAgICAgICByZXR1cm4gXCJTdWNjZXNzZnVsbHkgY2hhcmdlZFwiLCAyMDFcbiAgICBleGNlcHQgRXhjZXB0aW9uIGFzIGU6XG4gICAgICAgIHByaW50KGUpXG4gICAgICAgIHJldHVybiBcIkNoYXJnZSBmYWlsZWRcIiwgNTAwXG5cbmlmIF9fbmFtZV9fID09IFwiX19tYWluX19cIjpcbiAgICBhcHAucnVuKClcbiIpKSxtZHgoInAiLG51bGwsIlRoZSBhYm92ZToiKSxtZHgoIm9sIixudWxsLG1keCgibGkiLHtwYXJlbnROYW1lOiJvbCJ9LCJGZXRjaGVzIGFuZCBzZXRzIE9TIGVudiBmcm9tIC5lbnYgZmlsZS4iKSxtZHgoImxpIix7cGFyZW50TmFtZToib2wifSwiU2V0cyB0aGUgU3RyaXBlIEFQSSBrZXkuIiksbWR4KCJsaSIse3BhcmVudE5hbWU6Im9sIn0sIlNldHMgYSByb3V0ZSAiLG1keCgiaW5saW5lQ29kZSIse3BhcmVudE5hbWU6ImxpIn0sIi9hcGkvY2hhcmdlIiksIiB0aGF0IG9ubHkgdGFrZXMgdGhlICIsbWR4KCJpbmxpbmVDb2RlIix7cGFyZW50TmFtZToibGkifSwiUE9TVCIpLCIgbWV0aG9kIGFuZCBjcmVhdGVzIGEgY2hhcmdlIGJhc2VkIG9uIHRoZSBhbW91bnQgd2UgcGFzcy4iKSksbWR4KCJoMiIseyJpZCI6InJ1bm5pbmctdGhlLXNlcnZlciJ9LCJSdW5uaW5nIHRoZSBzZXJ2ZXIiKSxtZHgoInAiLG51bGwsbWR4KCJpbmxpbmVDb2RlIix7cGFyZW50TmFtZToicCJ9LCJweXRob24zIHNlcnZlci5weSIpLCIgd2lsbCBzdGFydCB0aGUgc2VydmVyIG9uIHBvcnQgNTAwMC4iKSxtZHgoInAiLG51bGwsIlJ1bm5pbmcgIixtZHgoImlubGluZUNvZGUiLHtwYXJlbnROYW1lOiJwIn0sImh0dHAgUE9TVCBodHRwOi8vbG9jYWxob3N0OjUwMDAvYXBpL2NoYXJnZSBhbW91bnQ6PTYwMCByZWNlaXB0RW1haWw9aGVsbG9fZmxhc2tAZXhhbXBsZS5jb20iKSwiICh1c2luZyBIVFRQaWUpIHdpbGwgY29tZSBiYWNrIHdpdGggc3VjY2Vzcy4gQ2hlY2sgeW91ciBTdHJpcGUgZGFzaGJvYXJkIGFuZCB5b3Ugd2lsbCBzZWUgYSBjaGFyZ2UgbWFkZSBmb3IgVVNcXCQ2LjAwISBIb29yYXkhIikpO31pZih0eXBlb2YgTURYQ29udGVudCE9PSd1bmRlZmluZWQnJiZNRFhDb250ZW50JiZNRFhDb250ZW50PT09T2JqZWN0KE1EWENvbnRlbnQpJiZPYmplY3QuaXNFeHRlbnNpYmxlKE1EWENvbnRlbnQpKXtPYmplY3QuZGVmaW5lUHJvcGVydHkoTURYQ29udGVudCwnX19maWxlbWV0YScse2VudW1lcmFibGU6dHJ1ZSxjb25maWd1cmFibGU6dHJ1ZSx2YWx1ZTp7bmFtZToiTURYQ29udGVudCIsZmlsZW5hbWU6Im1hbnVhbC9TdHJpcGUvRmxhc2stU3RyaXBlLUNvbmZpZ3VyYXRpb24ubWQifX0pO31NRFhDb250ZW50LmlzTURYQ29tcG9uZW50PXRydWU7"},{"version":3,"sources":["/Users/dennis.okeeffe/Project-Imposter/developer-notes/manual/Stripe/Flask-Stripe-Configuration.md"],"names":["React","mdx","makeShortcode","name","MDXDefaultShortcode","props","console","warn","layoutProps","MDXLayout","MDXContent","components","isMDXComponent"],"mappings":"iMAAA,cACE,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,GAAT,KAAoB,eAApB,CACA,cAGF,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAAAC,IAAI,QAAI,SAASC,CAAAA,mBAAT,CAA6BC,KAA7B,CAAoC,CAChEC,OAAO,CAACC,IAAR,CAAa,aAAeJ,IAAf,CAAsB,yEAAnC,EACA,MAAO,WAASE,KAAT,CAAP,CACD,CAHyB,EAA1B,CAKA,GAAMG,CAAAA,WAAW,CAAG,EAApB,CAGA,GAAMC,CAAAA,SAAS,CAAG,SAAlB,CACA,cAAe,SAASC,CAAAA,UAAT,MAGZ,IAFDC,CAAAA,UAEC,MAFDA,UAEC,CADEN,KACF,+CACD,MAAO,KAAC,SAAD,kBAAeG,WAAf,CAAgCH,KAAhC,EAAuC,UAAU,CAAEM,UAAnD,CAA+D,OAAO,CAAC,WAAvE,GACL,SAAQ,CACN,KAAM,mCADA,CAAR,qCADK,CAIL,qFAJK,CAKL,SAAQ,CACN,KAAM,WADA,CAAR,aALK,CAQL,cACE,UAAI,UAAU,CAAC,IAAf,EAAoB,uBAAG,UAAU,CAAC,IAAd,EAAuB,CACvC,OAAQ,yCAD+B,CAAvB,eAApB,CADF,CAIE,UAAI,UAAU,CAAC,IAAf,EAAoB,uBAAG,UAAU,CAAC,IAAd,EAAuB,CACvC,OAAQ,yDAD+B,CAAvB,2BAApB,CAJF,CAOE,UAAI,UAAU,CAAC,IAAf,EAAoB,uBAAG,UAAU,CAAC,IAAd,EAAuB,CACvC,OAAQ,yCAD+B,CAAvB,yBAApB,CAPF,CAUE,UAAI,UAAU,CAAC,IAAf,EAAoB,uBAAG,UAAU,CAAC,IAAd,EAAuB,CACvC,OAAQ,wDAD+B,CAAvB,sBAApB,CAVF,CAaE,UAAI,UAAU,CAAC,IAAf,EAAoB,uBAAG,UAAU,CAAC,IAAd,EAAuB,CACvC,OAAQ,oHAD+B,CAAvB,0BAApB,CAbF,CAgBE,UAAI,UAAU,CAAC,IAAf,EAAoB,uBAAG,UAAU,CAAC,IAAd,EAAuB,CACvC,OAAQ,gEAD+B,CAAvB,+BAApB,CAhBF,CAmBE,UAAI,UAAU,CAAC,IAAf,EAAoB,uBAAG,UAAU,CAAC,IAAd,EAAuB,CACvC,OAAQ,4CAD+B,CAAvB,yBAApB,CAnBF,CARK,CA+BL,SAAQ,CACN,KAAM,iBADA,CAAR,mBA/BK,CAkCL,eAAK,0BAAM,UAAU,CAAC,KAAjB,EAA2B,CAC5B,YAAa,gBADe,CAA3B,wLAAL,CAlCK,CA2CL,SAAQ,CACN,KAAM,gBADA,CAAR,mBA3CK,CA8CL,kFA9CK,CA+CL,eAAK,0BAAM,UAAU,CAAC,KAAjB,EAA2B,CAC5B,YAAa,gBADe,CAA3B,wCAAL,CA/CK,CAmDL,SAAQ,CACN,KAAM,kBADA,CAAR,qBAnDK,CAsDL,2DAtDK,CAuDL,eAAK,0BAAM,UAAU,CAAC,KAAjB,EAA2B,CAC5B,YAAa,iBADe,CAA3B,u2BAAL,CAvDK,CA2FL,0BA3FK,CA4FL,cACE,UAAI,UAAU,CAAC,IAAf,4CADF,CAEE,UAAI,UAAU,CAAC,IAAf,6BAFF,CAGE,UAAI,UAAU,CAAC,IAAf,kBAAqC,kBAAY,UAAU,CAAC,IAAvB,gBAArC,yBAAsH,kBAAY,UAAU,CAAC,IAAvB,SAAtH,6DAHF,CA5FK,CAiGL,SAAQ,CACN,KAAM,oBADA,CAAR,sBAjGK,CAoGL,aAAG,kBAAY,UAAU,CAAC,GAAvB,sBAAH,wCApGK,CAqGL,wBAAe,kBAAY,UAAU,CAAC,GAAvB,gGAAf,kIArGK,CAAP,CAuGD,C,uRAEDD,UAAU,CAACE,cAAX,CAA4B,IAA5B","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"python-flask-stripe-configuration\"\n    }}>{`Python Flask Stripe Configuration`}</h1>\n    <p>{`A quick look at setting up the Stripe Python API with a Flask server.`}</p>\n    <h2 {...{\n      \"id\": \"resources\"\n    }}>{`Resources`}</h2>\n    <ol>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"https://stripe.com/docs/api?lang=python\"\n        }}>{`Stripe API`}</a></li>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"https://docs.dennisokeeffe.com/manual-flask-hello-world\"\n        }}>{`Flask Hello World Docs`}</a></li>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"https://github.com/stripe/stripe-python\"\n        }}>{`Stripe Python Github`}</a></li>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"https://www.w3schools.com/python/python_try_except.asp\"\n        }}>{`Python Try/Except`}</a></li>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"https://stackoverflow.com/questions/45412228/flask-sending-data-and-status-code-through-a-response-object/45412576\"\n        }}>{`Status codes in Flask`}</a></li>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"https://techtutorialsx.com/2017/01/07/flask-parsing-json-data/\"\n        }}>{`Parsing JSON data w/ Flask`}</a></li>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"https://github.com/theskumar/python-dotenv\"\n        }}>{`Python Dotenv Github`}</a></li>\n    </ol>\n    <h2 {...{\n      \"id\": \"getting-started\"\n    }}>{`Getting Started`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`mkdir python-flask-stripe && cd python-flask-stripe\n# pip or pip3 depending on env\npip3 install Flask\npip3 install stripe\npip3 install -U python-dotenv\ntouch .env server.py\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"setting-up-env\"\n    }}>{`Setting up .env`}</h2>\n    <p>{`Fetch your keys from Stripe and replace the following in the file:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`SK_TEST_KEY=sk... # replace sk...\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"writing-serverpy\"\n    }}>{`Writing server.py`}</h2>\n    <p>{`Set up the file to look like the following:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-python\"\n      }}>{`from flask import Flask\nfrom flask import request\nfrom dotenv import load_dotenv\nimport stripe\nimport os\n\n# Load local .env file and assign key\nload_dotenv()\nstripe.api_key = os.environ.get(\"SK_TEST_KEY\")\n\napp = Flask(__name__)\n\n@app.route(\"/api/charge\", methods = ['POST'])\ndef charge():\n    try:\n        content = request.get_json()\n        # Print what JSON comes in for the sake of checking\n        print(content)\n\n        resp = stripe.Charge.create(\n            amount=content['amount'],\n            currency=\"usd\",\n            source=\"tok_visa\",\n            receipt_email=content['receiptEmail'],\n        )\n        print(\"Success: %r\" % (resp))\n        return \"Successfully charged\", 201\n    except Exception as e:\n        print(e)\n        return \"Charge failed\", 500\n\nif __name__ == \"__main__\":\n    app.run()\n`}</code></pre>\n    <p>{`The above:`}</p>\n    <ol>\n      <li parentName=\"ol\">{`Fetches and sets OS env from .env file.`}</li>\n      <li parentName=\"ol\">{`Sets the Stripe API key.`}</li>\n      <li parentName=\"ol\">{`Sets a route `}<inlineCode parentName=\"li\">{`/api/charge`}</inlineCode>{` that only takes the `}<inlineCode parentName=\"li\">{`POST`}</inlineCode>{` method and creates a charge based on the amount we pass.`}</li>\n    </ol>\n    <h2 {...{\n      \"id\": \"running-the-server\"\n    }}>{`Running the server`}</h2>\n    <p><inlineCode parentName=\"p\">{`python3 server.py`}</inlineCode>{` will start the server on port 5000.`}</p>\n    <p>{`Running `}<inlineCode parentName=\"p\">{`http POST http://localhost:5000/api/charge amount:=600 receiptEmail=hello_flask@example.com`}</inlineCode>{` (using HTTPie) will come back with success. Check your Stripe dashboard and you will see a charge made for US\\\\$6.00! Hooray!`}</p>\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  "]}]}