{"remainingRequest":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/docz-core/node_modules/babel-loader/lib/index.js??ref--6-1!/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/@mdx-js/loader/index.js??ref--6-2!/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/source-map-loader/index.js!/Users/dennis.okeeffe/Project-Imposter/developer-notes/manual/Webpack/Webpack-Optimisation.md","dependencies":[{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/manual/Webpack/Webpack-Optimisation.md","mtime":1566100641961},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/cache-loader/dist/cjs.js","mtime":1581496618588},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/docz-core/node_modules/babel-loader/lib/index.js","mtime":1578565694890},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/@mdx-js/loader/index.js","mtime":1581496618277},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/source-map-loader/index.js","mtime":1580255490569}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/dennis.okeeffe/Project-Imposter/developer-notes/manual/Webpack/Webpack-Optimisation.md"],"names":["React","mdx","makeShortcode","name","MDXDefaultShortcode","props","console","warn","layoutProps","MDXLayout","MDXContent","components","isMDXComponent"],"mappings":"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","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"webpack-optimisation\"\n    }}>{`Webpack Optimisation`}</h1>\n    <h2 {...{\n      \"id\": \"loader-targeting\"\n    }}>{`Loader targeting`}</h2>\n    <p>{`Apply loaders to the minimal number of modules necessary.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`// instead of...\nmodule.exports = {\n  //...\n  module: {\n    rules: [\n      {\n        test: /\\\\.js$/,\n        loader: 'babel-loader'\n      }\n    ]\n  }\n};\n\n// try using the include target\nmodule.exports = {\n  //...\n  module: {\n    rules: [\n      {\n        test: /\\\\.js$/,\n        include: path.resolve(__dirname, 'src'),\n        loader: 'babel-loader'\n      }\n    ]\n  }\n};\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"bootstrap\"\n    }}>{`Bootstrap`}</h2>\n    <p>{`Each additional loader/plugin has a bootup time. Try to use as few tools as possible.`}</p>\n    <h2 {...{\n      \"id\": \"resolving\"\n    }}>{`Resolving`}</h2>\n    <p>{`The following can increase resolving speed:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Minimize the number of items in `}<inlineCode parentName=\"li\">{`resolve.modules`}</inlineCode>{`, `}<inlineCode parentName=\"li\">{`resolve.extensions`}</inlineCode>{`, `}<inlineCode parentName=\"li\">{`resolve.mainFiles`}</inlineCode>{`, `}<inlineCode parentName=\"li\">{`resolve.descriptionFiles`}</inlineCode>{`, as they increase the number of filesystem calls.`}</li>\n      <li parentName=\"ul\">{`Set `}<inlineCode parentName=\"li\">{`resolve.symlinks: false`}</inlineCode>{` if you don't use symlinks (eg `}<inlineCode parentName=\"li\">{`npm link`}</inlineCode>{` or `}<inlineCode parentName=\"li\">{`yarn link`}</inlineCode>{`).`}</li>\n      <li parentName=\"ul\">{`Set `}<inlineCode parentName=\"li\">{`resolve.cacheWithContext: false`}</inlineCode>{` if you use custom resolving plugins, that are not context specific.`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"dlls\"\n    }}>{`Dlls`}</h2>\n    <p>{`Use the `}<inlineCode parentName=\"p\">{`DllPlugin`}</inlineCode>{` to move code that is changes less frequently into a separate compilation. This will improve app compilation speed, although it does increase complexity of the build process.`}</p>\n    <h2 {...{\n      \"id\": \"smaller--faster\"\n    }}>{`Smaller = Faster`}</h2>\n    <p>{`Decrease the total size of the compilation to increase build performance. Try to keep chunks small.`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Use fewer/smaller libs`}</li>\n      <li parentName=\"ul\">{`Use the `}<inlineCode parentName=\"li\">{`SplitChunksPlugin`}</inlineCode>{` in Multi-Page Applications`}</li>\n      <li parentName=\"ul\">{`Use the `}<inlineCode parentName=\"li\">{`SplitChunksPlugin`}</inlineCode>{` in `}<inlineCode parentName=\"li\">{`async`}</inlineCode>{` mode in Multi-Page Applications`}</li>\n      <li parentName=\"ul\">{`Remove unused code`}</li>\n      <li parentName=\"ul\">{`Only compile the part of the code you are currently developing on`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"worker-pool\"\n    }}>{`Worker Pool`}</h2>\n    <p>{`The `}<inlineCode parentName=\"p\">{`thread-loader`}</inlineCode>{` can be used to offload expensive loaders to a worker pool.`}</p>\n    <blockquote>\n      <p parentName=\"blockquote\">{`Don't use too many loaders. There is a boot overhead for the Node.js runtime and the loader. Minimize the module transfers between worker and main process. IPC is expensive.`}</p>\n    </blockquote>\n    <h2 {...{\n      \"id\": \"persistent-cache\"\n    }}>{`Persistent Cache`}</h2>\n    <p>{`Enable persistent caching with the `}<inlineCode parentName=\"p\">{`cache-loader`}</inlineCode>{`. Clear cache directory on \"postinstall\" in `}<inlineCode parentName=\"p\">{`package.json`}</inlineCode>{`.`}</p>\n    <h2 {...{\n      \"id\": \"custom-pluginsloaders\"\n    }}>{`Custom plugins/loaders`}</h2>\n    <p>{`Profile them to not introduce a performance problem here.`}</p>\n    <h2 {...{\n      \"id\": \"incremental-builds\"\n    }}>{`Incremental Builds`}</h2>\n    <p>{`Use watch mode. Specifically Webpack's.`}</p>\n    <p>{`If CPU overloads due to poling mode, you can increase the polling interval with `}<inlineCode parentName=\"p\">{`watchOptions.poll`}</inlineCode>{`.`}</p>\n    <h2 {...{\n      \"id\": \"compile-in-memory\"\n    }}>{`Compile in Memory`}</h2>\n    <p>{`Following utils improve performance by compilin and serving assets in memory rather than writing to disk:`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`webpack-dev-server`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`webpack-hot-middleware`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`webpack-dev-middleware`}</inlineCode></li>\n    </ul>\n    <h2 {...{\n      \"id\": \"devtool\"\n    }}>{`Devtool`}</h2>\n    <p>{`Be aware of the performance differences between the different devtool settings.`}</p>\n    <ul>\n      <li parentName=\"ul\">{`\"eval\" has the best performance, but doesn't assist you for transpiled code.`}</li>\n      <li parentName=\"ul\">{`The `}<inlineCode parentName=\"li\">{`cheap-source-map`}</inlineCode>{` variants are more performant if you can live with the slightly worse mapping quality.`}</li>\n      <li parentName=\"ul\">{`Use a `}<inlineCode parentName=\"li\">{`eval-source-map`}</inlineCode>{` variant for incremental builds.\n=> In most cases, `}<inlineCode parentName=\"li\">{`cheap-module-eval-source-map`}</inlineCode>{` is the best option.`}</li>\n    </ul>\n    <p>{`[TO FINISH => up to https://webpack.js.org/guides/build-performance/#minimal-entry-chunk]`}</p>\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  "]}]}