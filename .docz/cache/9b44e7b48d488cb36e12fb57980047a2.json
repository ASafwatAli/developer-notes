{"remainingRequest":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/docz-core/node_modules/babel-loader/lib/index.js??ref--6-1!/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/@mdx-js/loader/index.js??ref--6-2!/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/source-map-loader/index.js!/Users/dennis.okeeffe/Project-Imposter/developer-notes/manual/Algorithms/Letter-Changes.md","dependencies":[{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/manual/Algorithms/Letter-Changes.md","mtime":1580934999997},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/cache-loader/dist/cjs.js","mtime":1564095360956},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/docz-core/node_modules/babel-loader/lib/index.js","mtime":1562568123838},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/@mdx-js/loader/index.js","mtime":1565139338792},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/source-map-loader/index.js","mtime":1564095361765}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9vYmplY3RXaXRob3V0UHJvcGVydGllcyBmcm9tIi9Vc2Vycy9kZW5uaXMub2tlZWZmZS9Qcm9qZWN0LUltcG9zdGVyL2RldmVsb3Blci1ub3Rlcy9ub2RlX21vZHVsZXMvYmFiZWwtcHJlc2V0LXJlYWN0LWFwcC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0V2l0aG91dFByb3BlcnRpZXMiOy8qIEBqc3ggbWR4ICovaW1wb3J0IFJlYWN0IGZyb20ncmVhY3QnO2ltcG9ydHttZHh9ZnJvbSdAbWR4LWpzL3JlYWN0JzsvKiBAanN4IG1keCAqL3ZhciBtYWtlU2hvcnRjb2RlPWZ1bmN0aW9uIG1ha2VTaG9ydGNvZGUobmFtZSl7cmV0dXJuIGZ1bmN0aW9uIE1EWERlZmF1bHRTaG9ydGNvZGUocHJvcHMpe2NvbnNvbGUud2FybigiQ29tcG9uZW50ICIrbmFtZSsiIHdhcyBub3QgaW1wb3J0ZWQsIGV4cG9ydGVkLCBvciBwcm92aWRlZCBieSBNRFhQcm92aWRlciBhcyBnbG9iYWwgc2NvcGUiKTtyZXR1cm4gbWR4KCJkaXYiLHByb3BzKTt9O307dmFyIGxheW91dFByb3BzPXt9O3ZhciBNRFhMYXlvdXQ9IndyYXBwZXIiO2V4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIE1EWENvbnRlbnQoX3JlZil7dmFyIGNvbXBvbmVudHM9X3JlZi5jb21wb25lbnRzLHByb3BzPV9vYmplY3RXaXRob3V0UHJvcGVydGllcyhfcmVmLFsiY29tcG9uZW50cyJdKTtyZXR1cm4gbWR4KE1EWExheW91dCxPYmplY3QuYXNzaWduKHt9LGxheW91dFByb3BzLHByb3BzLHtjb21wb25lbnRzOmNvbXBvbmVudHMsbWR4VHlwZToiTURYTGF5b3V0In0pLG1keCgiaDEiLHsiaWQiOiJsZXR0ZXItY2hhbmdlcyJ9LCJMZXR0ZXIgQ2hhbmdlcyIpLG1keCgiaDIiLHsiaWQiOiJyZXNvdXJjZXMifSwiUmVzb3VyY2VzIiksbWR4KCJvbCIsbnVsbCxtZHgoImxpIix7cGFyZW50TmFtZToib2wifSxtZHgoImEiLE9iamVjdC5hc3NpZ24oe3BhcmVudE5hbWU6ImxpIn0seyJocmVmIjoiaHR0cHM6Ly93d3cuY29kZXJieXRlLmNvbS9pbmZvcm1hdGlvbi9MZXR0ZXIlMjBDaGFuZ2VzIn0pLCJDb2RlckJ5dGUgQ2hhbGxlbmdlIikpKSxtZHgoImgyIix7ImlkIjoicXVlc3Rpb24ifSwiUXVlc3Rpb24iKSxtZHgoInAiLG51bGwsIkhhdmUgdGhlIGZ1bmN0aW9uIExldHRlckNoYW5nZXMoc3RyKSB0YWtlIHRoZSBzdHIgcGFyYW1ldGVyIGJlaW5nIHBhc3NlZCBhbmQgbW9kaWZ5IGl0IHVzaW5nIHRoZSBmb2xsb3dpbmcgYWxnb3JpdGhtLiBSZXBsYWNlIGV2ZXJ5IGxldHRlciBpbiB0aGUgc3RyaW5nIHdpdGggdGhlIGxldHRlciBmb2xsb3dpbmcgaXQgaW4gdGhlIGFscGhhYmV0IChpZS4gYyBiZWNvbWVzIGQsIHogYmVjb21lcyBhKS4gVGhlbiBjYXBpdGFsaXplIGV2ZXJ5IHZvd2VsIGluIHRoaXMgbmV3IHN0cmluZyAoYSwgZSwgaSwgbywgdSkgYW5kIGZpbmFsbHkgcmV0dXJuIHRoaXMgbW9kaWZpZWQgc3RyaW5nLlxuRXhhbXBsZXMiKSxtZHgoImgyIix7ImlkIjoiZXhhbXBsZXMifSwiRXhhbXBsZXMiKSxtZHgoInByZSIsbnVsbCxtZHgoImNvZGUiLE9iamVjdC5hc3NpZ24oe3BhcmVudE5hbWU6InByZSJ9LHsiY2xhc3NOYW1lIjoibGFuZ3VhZ2Utc2hlbGwifSksIklucHV0OiBcImhlbGxvKjNcIlxuT3V0cHV0OiBJZm1tcCozXG4iKSksbWR4KCJwcmUiLG51bGwsbWR4KCJjb2RlIixPYmplY3QuYXNzaWduKHtwYXJlbnROYW1lOiJwcmUifSx7ImNsYXNzTmFtZSI6Imxhbmd1YWdlLXNoZWxsIn0pLCJJbnB1dDogXCJmdW4gdGltZXMhXCJcbk91dHB1dDogZ3ZPIFVqbmZ0IVxuIikpLG1keCgiaDIiLHsiaWQiOiJhbnN3ZXIifSwiQW5zd2VyIiksbWR4KCJwcmUiLG51bGwsbWR4KCJjb2RlIixPYmplY3QuYXNzaWduKHtwYXJlbnROYW1lOiJwcmUifSx7ImNsYXNzTmFtZSI6Imxhbmd1YWdlLWphdmFzY3JpcHQifSksImZ1bmN0aW9uIExldHRlckNoYW5nZXMoc3RyKSB7XG4gIGNvbnN0IGFscGhhYmV0ID0gJ2FiY2RlZmdoaWprbG1ub3BxcnN0dXZ3eHl6JztcbiAgLy8gMS4gQnVpbGQgb3V0IHRoZW4gbmV3IHN0cmluZ1xuICBsZXQgbmV3U3RyID0gJyc7XG4gIGZvciAobGV0IGkgPSAwOyBpIDwgc3RyLmxlbmd0aDsgaSsrKSB7XG4gICAgY29uc29sZS5sb2coc3RyW2ldKTtcbiAgICBsZXQgaW5kZXggPSBhbHBoYWJldC5pbmRleE9mKHN0cltpXSk7XG4gICAgaWYgKGluZGV4ID09PSAtMSkge1xuICAgICAgbmV3U3RyICs9IHN0cltpXTtcbiAgICB9IGVsc2UgaWYgKGluZGV4ID09PSAyNSkge1xuICAgICAgbmV3U3RyICs9ICdBJztcbiAgICB9IGVsc2Uge1xuICAgICAgaWYgKC8oW2FlaW91XSkvZ2kudGVzdChhbHBoYWJldFtpbmRleCArIDFdKSkge1xuICAgICAgICBuZXdTdHIgKz0gYWxwaGFiZXRbaW5kZXggKyAxXS50b1VwcGVyQ2FzZSgpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgbmV3U3RyICs9IGFscGhhYmV0W2luZGV4ICsgMV07XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgLy8gY29kZSBnb2VzIGhlcmVcbiAgcmV0dXJuIG5ld1N0cjtcbn1cbiIpKSk7fWlmKHR5cGVvZiBNRFhDb250ZW50IT09J3VuZGVmaW5lZCcmJk1EWENvbnRlbnQmJk1EWENvbnRlbnQ9PT1PYmplY3QoTURYQ29udGVudCkmJk9iamVjdC5pc0V4dGVuc2libGUoTURYQ29udGVudCkpe09iamVjdC5kZWZpbmVQcm9wZXJ0eShNRFhDb250ZW50LCdfX2ZpbGVtZXRhJyx7ZW51bWVyYWJsZTp0cnVlLGNvbmZpZ3VyYWJsZTp0cnVlLHZhbHVlOntuYW1lOiJNRFhDb250ZW50IixmaWxlbmFtZToibWFudWFsL0FsZ29yaXRobXMvTGV0dGVyLUNoYW5nZXMubWQifX0pO31NRFhDb250ZW50LmlzTURYQ29tcG9uZW50PXRydWU7"},{"version":3,"sources":["/Users/dennis.okeeffe/Project-Imposter/developer-notes/manual/Algorithms/Letter-Changes.md"],"names":["React","mdx","makeShortcode","name","MDXDefaultShortcode","props","console","warn","layoutProps","MDXLayout","MDXContent","components","isMDXComponent"],"mappings":"iMAAA,cACE,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,GAAT,KAAoB,eAApB,CACA,cAGF,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAAAC,IAAI,QAAI,SAASC,CAAAA,mBAAT,CAA6BC,KAA7B,CAAoC,CAChEC,OAAO,CAACC,IAAR,CAAa,aAAeJ,IAAf,CAAsB,yEAAnC,EACA,MAAO,WAASE,KAAT,CAAP,CACD,CAHyB,EAA1B,CAKA,GAAMG,CAAAA,WAAW,CAAG,EAApB,CAGA,GAAMC,CAAAA,SAAS,CAAG,SAAlB,CACA,cAAe,SAASC,CAAAA,UAAT,MAGZ,IAFDC,CAAAA,UAEC,MAFDA,UAEC,CADEN,KACF,+CACD,MAAO,KAAC,SAAD,kBAAeG,WAAf,CAAgCH,KAAhC,EAAuC,UAAU,CAAEM,UAAnD,CAA+D,OAAO,CAAC,WAAvE,GACL,SAAQ,CACN,KAAM,gBADA,CAAR,kBADK,CAIL,SAAQ,CACN,KAAM,WADA,CAAR,aAJK,CAOL,cACE,UAAI,UAAU,CAAC,IAAf,EAAoB,uBAAG,UAAU,CAAC,IAAd,EAAuB,CACvC,OAAQ,wDAD+B,CAAvB,wBAApB,CADF,CAPK,CAYL,SAAQ,CACN,KAAM,UADA,CAAR,YAZK,CAeL,uWAfK,CAiBL,SAAQ,CACN,KAAM,UADA,CAAR,YAjBK,CAoBL,eAAK,0BAAM,UAAU,CAAC,KAAjB,EAA2B,CAC5B,YAAa,gBADe,CAA3B,0CAAL,CApBK,CAyBL,eAAK,0BAAM,UAAU,CAAC,KAAjB,EAA2B,CAC5B,YAAa,gBADe,CAA3B,gDAAL,CAzBK,CA8BL,SAAQ,CACN,KAAM,QADA,CAAR,UA9BK,CAiCL,eAAK,0BAAM,UAAU,CAAC,KAAjB,EAA2B,CAC5B,YAAa,qBADe,CAA3B,ulBAAL,CAjCK,CAAP,CA4DD,C,+QAEDD,UAAU,CAACE,cAAX,CAA4B,IAA5B","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"letter-changes\"\n    }}>{`Letter Changes`}</h1>\n    <h2 {...{\n      \"id\": \"resources\"\n    }}>{`Resources`}</h2>\n    <ol>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"https://www.coderbyte.com/information/Letter%20Changes\"\n        }}>{`CoderByte Challenge`}</a></li>\n    </ol>\n    <h2 {...{\n      \"id\": \"question\"\n    }}>{`Question`}</h2>\n    <p>{`Have the function LetterChanges(str) take the str parameter being passed and modify it using the following algorithm. Replace every letter in the string with the letter following it in the alphabet (ie. c becomes d, z becomes a). Then capitalize every vowel in this new string (a, e, i, o, u) and finally return this modified string.\nExamples`}</p>\n    <h2 {...{\n      \"id\": \"examples\"\n    }}>{`Examples`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`Input: \"hello*3\"\nOutput: Ifmmp*3\n`}</code></pre>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`Input: \"fun times!\"\nOutput: gvO Ujnft!\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"answer\"\n    }}>{`Answer`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`function LetterChanges(str) {\n  const alphabet = 'abcdefghijklmnopqrstuvwxyz';\n  // 1. Build out then new string\n  let newStr = '';\n  for (let i = 0; i < str.length; i++) {\n    console.log(str[i]);\n    let index = alphabet.indexOf(str[i]);\n    if (index === -1) {\n      newStr += str[i];\n    } else if (index === 25) {\n      newStr += 'A';\n    } else {\n      if (/([aeiou])/gi.test(alphabet[index + 1])) {\n        newStr += alphabet[index + 1].toUpperCase();\n      } else {\n        newStr += alphabet[index + 1];\n      }\n    }\n  }\n\n  // code goes here\n  return newStr;\n}\n`}</code></pre>\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  "]}]}