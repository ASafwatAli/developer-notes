{"remainingRequest":"/Users/okeeffe_d/Project-Imposter/developer-notes/node_modules/docz-core/node_modules/babel-loader/lib/index.js??ref--6-1!/Users/okeeffe_d/Project-Imposter/developer-notes/node_modules/@mdx-js/loader/index.js??ref--6-2!/Users/okeeffe_d/Project-Imposter/developer-notes/node_modules/source-map-loader/index.js!/Users/okeeffe_d/Project-Imposter/developer-notes/manual/Tensorflow/Tensorflow-JS.md","dependencies":[{"path":"/Users/okeeffe_d/Project-Imposter/developer-notes/manual/Tensorflow/Tensorflow-JS.md","mtime":1552024080455},{"path":"/Users/okeeffe_d/Project-Imposter/developer-notes/node_modules/cache-loader/dist/cjs.js","mtime":1561535530324},{"path":"/Users/okeeffe_d/Project-Imposter/developer-notes/node_modules/docz-core/node_modules/babel-loader/lib/index.js","mtime":1560300163820},{"path":"/Users/okeeffe_d/Project-Imposter/developer-notes/node_modules/@mdx-js/loader/index.js","mtime":1561535530532},{"path":"/Users/okeeffe_d/Project-Imposter/developer-notes/node_modules/source-map-loader/index.js","mtime":1548285283521}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9vYmplY3RXaXRob3V0UHJvcGVydGllcyBmcm9tIi9Vc2Vycy9va2VlZmZlX2QvUHJvamVjdC1JbXBvc3Rlci9kZXZlbG9wZXItbm90ZXMvbm9kZV9tb2R1bGVzL2JhYmVsLXByZXNldC1yZWFjdC1hcHAvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzIjsvKiBAanN4IG1keCAqL2ltcG9ydCBSZWFjdCBmcm9tJ3JlYWN0JztpbXBvcnR7bWR4fWZyb20nQG1keC1qcy9yZWFjdCc7LyogQGpzeCBtZHggKi92YXIgbWFrZVNob3J0Y29kZT1mdW5jdGlvbiBtYWtlU2hvcnRjb2RlKG5hbWUpe3JldHVybiBmdW5jdGlvbiBNRFhEZWZhdWx0U2hvcnRjb2RlKHByb3BzKXtjb25zb2xlLndhcm4oIkNvbXBvbmVudCAiK25hbWUrIiB3YXMgbm90IGltcG9ydGVkLCBleHBvcnRlZCwgb3IgcHJvdmlkZWQgYnkgTURYUHJvdmlkZXIgYXMgZ2xvYmFsIHNjb3BlIik7cmV0dXJuIG1keCgiZGl2Iixwcm9wcyk7fTt9O3ZhciBsYXlvdXRQcm9wcz17fTt2YXIgTURYTGF5b3V0PSJ3cmFwcGVyIjtleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBNRFhDb250ZW50KF9yZWYpe3ZhciBjb21wb25lbnRzPV9yZWYuY29tcG9uZW50cyxwcm9wcz1fb2JqZWN0V2l0aG91dFByb3BlcnRpZXMoX3JlZixbImNvbXBvbmVudHMiXSk7cmV0dXJuIG1keChNRFhMYXlvdXQsT2JqZWN0LmFzc2lnbih7fSxsYXlvdXRQcm9wcyxwcm9wcyx7Y29tcG9uZW50czpjb21wb25lbnRzLG1keFR5cGU6Ik1EWExheW91dCJ9KSxtZHgoImgxIix7ImlkIjoidGVuc29yZmxvd2pzIn0sIlRlbnNvcmZsb3cuanMiKSxtZHgoImgyIix7ImlkIjoicHJvYmxlbS1zb2x2aW5nLXByb2Nlc3MifSwiUHJvYmxlbSBTb2x2aW5nIFByb2Nlc3MiKSxtZHgoIm9sIixudWxsLG1keCgibGkiLHtwYXJlbnROYW1lOiJvbCJ9LCJJZGVudGlmeSBkYXRhIHJlbGV2YW50IHRvIHByb2JsZW0gKGZlYXR1cmVzLCBsYWJlbHMpIiksbWR4KCJsaSIse3BhcmVudE5hbWU6Im9sIn0sIkFzc2VtYmxlIGEgc2V0IG9mIGRhdGEgcmVsYXRlZCB0byBwcm9ibGVtIHRvIGJlIHNvbHZlZCIpLG1keCgibGkiLHtwYXJlbnROYW1lOiJvbCJ9LCJEZWNpZGUgb24gdGhlIHR5cGUgb2Ygb3V0cHV0IHlvdSBhcmUgcHJlZGljdGluZyIpLG1keCgibGkiLHtwYXJlbnROYW1lOiJvbCJ9LCJCYXNlZCBvbiB0eXBlIG9mIG91dHB1dCwgcGljayBhbiBhbGdvcml0aG0gdGhhdCB3aWxsIGRldGVybWluZSBhIGNvcnJlbGF0aW9uIGJldHdlZW4geW91ciAnZmVhdHVyZXMnIGFuZCAnbGFiZWxzJyIpLG1keCgibGkiLHtwYXJlbnROYW1lOiJvbCJ9LCJ1c2UgbW9kZWwgZ2VuZXJhdGVkIGJ5IGFsZ29yaXRobSB0byBtYWtlIGEgcHJlZGljdGlvbiIpKSxtZHgoImgyIix7ImlkIjoiY29udGludW91cy12cy1kaXNjcmV0ZSJ9LCJDb250aW51b3VzIHZzIERpc2NyZXRlIiksbWR4KCJwIixudWxsLCJXZSBjYW4gZGVjaWRlIHdoYXQgYXBwbGljYXRpb24gb3IgdGVjaG5pcXVlIHdlIGFyZSBnb2luZyB0byB1c2VkIGJhc2VkIG9uIHRoZSB0eXBlIG9mIG91dHB1dC4iKSxtZHgoInAiLG51bGwsIkZvciBleGFtcGxlLCBpZiB0aGUgb3V0cHV0IGRhdGEgaXRzZWxmIGlzIGNvbnRpbnVvdXMsIHdlIGtub3cgdGhhdCB3ZSB3b3VsZCBhcHBseSByZWdyZXNzaW9uLiBJZiBpbiBmYWN0IHRoZSBvdXRwdXQgZGF0YSBpcyBkaXNjcmV0ZSBpbiBuYXR1cmUgaWUgcGFzcy9mYWlsLCB0aGVuIHdlIHdvdWxkIGNvbnNpZGVyIG9wdGlvbnMgbGlrZSBjbGFzc2lmaWNhdGlvbi4iKSxtZHgoImgyIix7ImlkIjoicGxpbmtvLWV4YW1wbGUifSwiUGxpbmtvIEV4YW1wbGUiKSxtZHgoInAiLG51bGwsIkluIHRoZSBleGFtcGxlIG9mIFBsaW5rbywgd2Ugd2FudCB0byB0cnkgZmlndXJlIG91dCB3aGVyZSBhIGJhbGwgZHJvcHBlZCBpbnRvIHRoZSBQbGlua28gZ3JpZCB3aWxsIGVuZCB1cC4iKSxtZHgoInAiLG51bGwsIkZyb20gdGhlIGV4YW1wbGUsIHdlIGNhbiBkZXRlcm1pbmUgdGhhdCB3ZSBoYXZlIHRoZXNlIGZlYXR1cmVzOiIpLG1keCgib2wiLG51bGwsbWR4KCJsaSIse3BhcmVudE5hbWU6Im9sIn0sIkRyb3AgUG9zaXRpb24iKSxtZHgoImxpIix7cGFyZW50TmFtZToib2wifSwiQmFsbCBCb3VuY2luZXNzIiksbWR4KCJsaSIse3BhcmVudE5hbWU6Im9sIn0sIkJhbGwgU2l6ZSIpKSxtZHgoInAiLG51bGwsIkZyb20gdGhlc2UgcGllY2VzIG9mIGRhdGEsIHdlIHdhbnQgdG8ga25vdyB0aGUgb3V0cHV0IGxhYmVsIG9mIHdoaWNoIGJ1Y2tldCBhIGJhbGwgbGFuZHMgaW4uIikpO31pZih0eXBlb2YgTURYQ29udGVudCE9PSd1bmRlZmluZWQnJiZNRFhDb250ZW50JiZNRFhDb250ZW50PT09T2JqZWN0KE1EWENvbnRlbnQpJiZPYmplY3QuaXNFeHRlbnNpYmxlKE1EWENvbnRlbnQpKXtPYmplY3QuZGVmaW5lUHJvcGVydHkoTURYQ29udGVudCwnX19maWxlbWV0YScse2VudW1lcmFibGU6dHJ1ZSxjb25maWd1cmFibGU6dHJ1ZSx2YWx1ZTp7bmFtZToiTURYQ29udGVudCIsZmlsZW5hbWU6Im1hbnVhbC9UZW5zb3JmbG93L1RlbnNvcmZsb3ctSlMubWQifX0pO31NRFhDb250ZW50LmlzTURYQ29tcG9uZW50PXRydWU7"},{"version":3,"sources":["/Users/okeeffe_d/Project-Imposter/developer-notes/manual/Tensorflow/Tensorflow-JS.md"],"names":["React","mdx","makeShortcode","name","MDXDefaultShortcode","props","console","warn","layoutProps","MDXLayout","MDXContent","components","isMDXComponent"],"mappings":"4LAAA,cACE,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,GAAT,KAAoB,eAApB,CACA,cAGF,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAAAC,IAAI,QAAI,SAASC,CAAAA,mBAAT,CAA6BC,KAA7B,CAAoC,CAChEC,OAAO,CAACC,IAAR,CAAa,aAAeJ,IAAf,CAAsB,yEAAnC,EACA,MAAO,WAASE,KAAT,CAAP,CACD,CAHyB,EAA1B,CAKA,GAAMG,CAAAA,WAAW,CAAG,EAApB,CAGA,GAAMC,CAAAA,SAAS,CAAG,SAAlB,CACA,cAAe,SAASC,CAAAA,UAAT,MAGZ,IAFDC,CAAAA,UAEC,MAFDA,UAEC,CADEN,KACF,+CACD,MAAO,KAAC,SAAD,kBAAeG,WAAf,CAAgCH,KAAhC,EAAuC,UAAU,CAAEM,UAAnD,CAA+D,OAAO,CAAC,WAAvE,GACL,SAAQ,CACN,KAAM,cADA,CAAR,iBADK,CAIL,SAAQ,CACN,KAAM,yBADA,CAAR,2BAJK,CAOL,cACE,UAAI,UAAU,CAAC,IAAf,yDADF,CAEE,UAAI,UAAU,CAAC,IAAf,2DAFF,CAGE,UAAI,UAAU,CAAC,IAAf,oDAHF,CAIE,UAAI,UAAU,CAAC,IAAf,sHAJF,CAKE,UAAI,UAAU,CAAC,IAAf,0DALF,CAPK,CAcL,SAAQ,CACN,KAAM,wBADA,CAAR,0BAdK,CAiBL,6GAjBK,CAkBL,gOAlBK,CAmBL,SAAQ,CACN,KAAM,gBADA,CAAR,kBAnBK,CAsBL,0HAtBK,CAuBL,+EAvBK,CAwBL,cACE,UAAI,UAAU,CAAC,IAAf,kBADF,CAEE,UAAI,UAAU,CAAC,IAAf,oBAFF,CAGE,UAAI,UAAU,CAAC,IAAf,cAHF,CAxBK,CA6BL,4GA7BK,CAAP,CA+BD,C,8QAEDD,UAAU,CAACE,cAAX,CAA4B,IAA5B","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"tensorflowjs\"\n    }}>{`Tensorflow.js`}</h1>\n    <h2 {...{\n      \"id\": \"problem-solving-process\"\n    }}>{`Problem Solving Process`}</h2>\n    <ol>\n      <li parentName=\"ol\">{`Identify data relevant to problem (features, labels)`}</li>\n      <li parentName=\"ol\">{`Assemble a set of data related to problem to be solved`}</li>\n      <li parentName=\"ol\">{`Decide on the type of output you are predicting`}</li>\n      <li parentName=\"ol\">{`Based on type of output, pick an algorithm that will determine a correlation between your 'features' and 'labels'`}</li>\n      <li parentName=\"ol\">{`use model generated by algorithm to make a prediction`}</li>\n    </ol>\n    <h2 {...{\n      \"id\": \"continuous-vs-discrete\"\n    }}>{`Continuous vs Discrete`}</h2>\n    <p>{`We can decide what application or technique we are going to used based on the type of output.`}</p>\n    <p>{`For example, if the output data itself is continuous, we know that we would apply regression. If in fact the output data is discrete in nature ie pass/fail, then we would consider options like classification.`}</p>\n    <h2 {...{\n      \"id\": \"plinko-example\"\n    }}>{`Plinko Example`}</h2>\n    <p>{`In the example of Plinko, we want to try figure out where a ball dropped into the Plinko grid will end up.`}</p>\n    <p>{`From the example, we can determine that we have these features:`}</p>\n    <ol>\n      <li parentName=\"ol\">{`Drop Position`}</li>\n      <li parentName=\"ol\">{`Ball Bounciness`}</li>\n      <li parentName=\"ol\">{`Ball Size`}</li>\n    </ol>\n    <p>{`From these pieces of data, we want to know the output label of which bucket a ball lands in.`}</p>\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  "]}]}