{"remainingRequest":"/Users/okeeffe_d/Project-Imposter/developer-notes/node_modules/docz-core/node_modules/babel-loader/lib/index.js??ref--6-1!/Users/okeeffe_d/Project-Imposter/developer-notes/node_modules/@mdx-js/loader/index.js??ref--6-2!/Users/okeeffe_d/Project-Imposter/developer-notes/node_modules/source-map-loader/index.js!/Users/okeeffe_d/Project-Imposter/developer-notes/manual/Ruby/Ruby-Constructors.md","dependencies":[{"path":"/Users/okeeffe_d/Project-Imposter/developer-notes/manual/Ruby/Ruby-Constructors.md","mtime":1551667384235},{"path":"/Users/okeeffe_d/Project-Imposter/developer-notes/node_modules/cache-loader/dist/cjs.js","mtime":1561535530324},{"path":"/Users/okeeffe_d/Project-Imposter/developer-notes/node_modules/docz-core/node_modules/babel-loader/lib/index.js","mtime":1560300163820},{"path":"/Users/okeeffe_d/Project-Imposter/developer-notes/node_modules/@mdx-js/loader/index.js","mtime":1561535530532},{"path":"/Users/okeeffe_d/Project-Imposter/developer-notes/node_modules/source-map-loader/index.js","mtime":1548285283521}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9vYmplY3RXaXRob3V0UHJvcGVydGllcyBmcm9tIi9Vc2Vycy9va2VlZmZlX2QvUHJvamVjdC1JbXBvc3Rlci9kZXZlbG9wZXItbm90ZXMvbm9kZV9tb2R1bGVzL2JhYmVsLXByZXNldC1yZWFjdC1hcHAvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzIjsvKiBAanN4IG1keCAqL2ltcG9ydCBSZWFjdCBmcm9tJ3JlYWN0JztpbXBvcnR7bWR4fWZyb20nQG1keC1qcy9yZWFjdCc7LyogQGpzeCBtZHggKi92YXIgbWFrZVNob3J0Y29kZT1mdW5jdGlvbiBtYWtlU2hvcnRjb2RlKG5hbWUpe3JldHVybiBmdW5jdGlvbiBNRFhEZWZhdWx0U2hvcnRjb2RlKHByb3BzKXtjb25zb2xlLndhcm4oIkNvbXBvbmVudCAiK25hbWUrIiB3YXMgbm90IGltcG9ydGVkLCBleHBvcnRlZCwgb3IgcHJvdmlkZWQgYnkgTURYUHJvdmlkZXIgYXMgZ2xvYmFsIHNjb3BlIik7cmV0dXJuIG1keCgiZGl2Iixwcm9wcyk7fTt9O3ZhciBsYXlvdXRQcm9wcz17fTt2YXIgTURYTGF5b3V0PSJ3cmFwcGVyIjtleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBNRFhDb250ZW50KF9yZWYpe3ZhciBjb21wb25lbnRzPV9yZWYuY29tcG9uZW50cyxwcm9wcz1fb2JqZWN0V2l0aG91dFByb3BlcnRpZXMoX3JlZixbImNvbXBvbmVudHMiXSk7cmV0dXJuIG1keChNRFhMYXlvdXQsT2JqZWN0LmFzc2lnbih7fSxsYXlvdXRQcm9wcyxwcm9wcyx7Y29tcG9uZW50czpjb21wb25lbnRzLG1keFR5cGU6Ik1EWExheW91dCJ9KSxtZHgoImgxIix7ImlkIjoicnVieS1jb250cnVjdG9ycyJ9LCJSdWJ5IENvbnRydWN0b3JzIiksbWR4KCJwIixudWxsLCJUaGUgaW1wb3J0YW50IGNvbnN0cnVjdG9yIG1ldGhvZCBpcyB0aGUgIixtZHgoImlubGluZUNvZGUiLHtwYXJlbnROYW1lOiJwIn0sImluaXRpYWxpemUiKSwiIG1ldGhvZC4iKSxtZHgoImgyIix7ImlkIjoic2ltcGxlLWV4YW1wbGUifSwiU2ltcGxlIEV4YW1wbGUiKSxtZHgoInByZSIsbnVsbCxtZHgoImNvZGUiLE9iamVjdC5hc3NpZ24oe3BhcmVudE5hbWU6InByZSJ9LHsiY2xhc3NOYW1lIjoibGFuZ3VhZ2UtcnVieSJ9KSwiIyBSdWJ5IHByb2dyYW0gdG8gaW5pdGlhbGl6ZSBpbnN0YW5jZVxuIyB2YXJpYWJsZSB1c2luZyBjb25zdHJ1Y3RvclxuXG4jIS91c3IvYmluL3J1YnlcblxuIyBjbGFzcyBuYW1lXG5jbGFzcyBHZWVrc1xuICAgICMgY29uc3RydWN0b3JcbiAgICBkZWYgaW5pdGlhbGl6ZVxuXG4gICAgICAgICMgaW5zdGFuY2UgdmFyaWFibGUgaW50aWFsemF0aW9uXG4gICAgICAgIEBpbnN0XzEgPSBcIkdlZWtzZm9yR2Vla3NcIlxuICAgICAgICBAaW5zdF8yID0gXCJTdWRvIFBsYWNlbWVudFwiXG4gICAgZW5kXG5cbiAgICAjIGRpc3BsYXkgbWV0aG9kXG4gICAgZGVmIGRpc3BsYXlcbiAgICAgICAgcHV0cyBcIlZhbHVlIG9mIEZpcnN0IGluc3RhbmNlIHZhcmlhYmxlIGlzOiAje0BpbnN0XzF9XCJcbiAgICAgICAgcHV0cyBcIlZhbHVlIG9mIFNlY29uZCBpbnN0YW5jZSB2YXJpYWJsZSBpczogI3tAaW5zdF8yfVwiXG4gICAgZW5kXG5lbmRcblxuIyBjcmVhdGluZyBvYmplY3Rcbm9iajEgPSBHZWVrcy5uZXcoKVxuXG4jIGNhbGxpbmcgZGlzcGxheSBtZXRob2Rcbm9iajEuZGlzcGxheSgpXG4iKSksbWR4KCJoMiIseyJpZCI6ImxpbmtlZC1saXN0LWV4YW1wbGUifSwiTGlua2VkIExpc3QgRXhhbXBsZSIpLG1keCgicHJlIixudWxsLG1keCgiY29kZSIsT2JqZWN0LmFzc2lnbih7cGFyZW50TmFtZToicHJlIn0seyJjbGFzc05hbWUiOiJsYW5ndWFnZS1ydWJ5In0pLCJcIlwiXCJcbkJhc2ljIGltcGxlbWVudGF0aW9uIHdpdGhvdXQgYWxsIG1ldGhvZHNcblwiXCJcIlxuXG5jbGFzcyBMaW5rZWRMaXN0XG4gICAgZGVmIGluaXRpYWxpemUoaGVhZD1uaWwpXG4gICAgICAgIGlmIGhlYWQubmlsP1xuICAgICAgICAgICAgQHNpemUgPSAwXG4gICAgICAgIGVsc2VcbiAgICAgICAgICAgIEBzaXplID0gMVxuICAgICAgICBlbmRcbiAgICAgICAgQGhlYWQgPSBoZWFkXG4gICAgZW5kXG5cbiAgICBkZWYgZ2V0U2l6ZVxuICAgICAgICBAc2l6ZVxuICAgIGVuZFxuXG4gICAgZGVmIGluc2VydEZpcnN0KG4pXG4gICAgICAgIGlmIEBoZWFkLm5pbD9cbiAgICAgICAgICAgIEBoZWFkID0gblxuICAgICAgICBlbHNlXG4gICAgICAgICAgICB0bXAgPSBAaGVhZFxuICAgICAgICAgICAgQGhlYWQgPSBuXG4gICAgICAgICAgICBuLnNldE5leHQodG1wKVxuICAgICAgICBlbmRcbiAgICAgICAgQHNpemUgKz0gMVxuICAgIGVuZFxuXG4gICAgZGVmIGNsZWFyXG4gICAgICAgIEBoZWFkID0gbmlsXG4gICAgICAgIEBzaXplID0gMFxuICAgIGVuZFxuXG4gICAgZGVmIGdldEZpcnN0XG4gICAgICAgIEBoZWFkXG4gICAgZW5kXG5lbmRcblxuY2xhc3MgTm9kZVxuICAgIGRlZiBpbml0aWFsaXplKGRhdGEgPSBuaWwpXG4gICAgICAgIEBkYXRhID0gZGF0YVxuICAgICAgICBAbmV4dCA9IG5pbFxuICAgIGVuZFxuXG4gICAgZGVmIGdldE5leHRcbiAgICAgICAgQG5leHRcbiAgICBlbmRcblxuICAgIGRlZiBzZXROZXh0KG4pXG4gICAgICAgIEBuZXh0ID0gblxuICAgIGVuZFxuZW5kXG5cbiMgdGVzdCBSdWJ5IGZpbGVcbmJlZ2luXG4gIGdlbSAnbWluaXRlc3QnLCAnPj0gNS4wLjAnXG4gIHJlcXVpcmUgJ21pbml0ZXN0L2F1dG9ydW4nXG4gIHJlcXVpcmVfcmVsYXRpdmUgJ2xpbmtlZF9saXN0J1xucmVzY3VlIEdlbTo6TG9hZEVycm9yID0+IGVcbiAgcHV0cyBcIlxcbk1pc3NpbmcgRGVwZW5kZW5jeTpcXG4je2UuYmFja3RyYWNlLmZpcnN0fSAje2UubWVzc2FnZX1cIlxuICBwdXRzICdNaW5pdGVzdCA1LjAgZ2VtIG11c3QgYmUgaW5zdGFsbGVkIGZvciB0aGUgUnVieSB0cmFjay4nXG5yZXNjdWUgTG9hZEVycm9yID0+IGVcbiAgcHV0cyBcIlxcbkVycm9yOlxcbiN7ZS5iYWNrdHJhY2UuZmlyc3R9ICN7ZS5tZXNzYWdlfVwiXG4gIHB1dHMgREFUQS5yZWFkXG4gIGV4aXQgMVxuZW5kXG5cbiMgQ29tbW9uIHRlc3QgZGF0YSB2ZXJzaW9uOiAxLjEuMCBiZTNhZTY2XG5jbGFzcyBMaW5rZWRMaXN0VGVzdCA8IE1pbml0ZXN0OjpUZXN0XG4gIGRlZiB0ZXN0X2dldF9zaXplXG4gICAgIyBza2lwXG4gICAgbjEgPSBOb2RlLm5ldygxKVxuICAgIGxsID0gTGlua2VkTGlzdC5uZXcobjEpXG4gICAgYXNzZXJ0X2VxdWFsIDEsIGxsLmdldFNpemUoKVxuICBlbmRcblxuICBkZWYgdGVzdF9pbnNlcnRfZmlyc3RcbiAgICAjIHNraXBcbiAgICBuMSA9IE5vZGUubmV3KDEpXG4gICAgbjIgPSBOb2RlLm5ldygxKVxuICAgIGxsID0gTGlua2VkTGlzdC5uZXcobjEpXG4gICAgbGwuaW5zZXJ0Rmlyc3QobjIpXG4gICAgYXNzZXJ0X2VxdWFsIDIsIGxsLmdldFNpemUoKVxuICBlbmRcblxuICBkZWYgdGVzdF9jbGVhclxuICAgICMgc2tpcFxuICAgIG4xID0gTm9kZS5uZXcoMSlcbiAgICBuMiA9IE5vZGUubmV3KDEpXG4gICAgbGwgPSBMaW5rZWRMaXN0Lm5ldyhuMSlcbiAgICBsbC5pbnNlcnRGaXJzdChuMilcbiAgICBsbC5jbGVhcigpXG4gICAgYXNzZXJ0X2VxdWFsIDAsIGxsLmdldFNpemUoKVxuICAgIGFzc2VydF9uaWwgbmlsLCBsbC5nZXRGaXJzdCgpXG4gIGVuZFxuZW5kXG5cbl9fRU5EX19cbiIpKSk7fWlmKHR5cGVvZiBNRFhDb250ZW50IT09J3VuZGVmaW5lZCcmJk1EWENvbnRlbnQmJk1EWENvbnRlbnQ9PT1PYmplY3QoTURYQ29udGVudCkmJk9iamVjdC5pc0V4dGVuc2libGUoTURYQ29udGVudCkpe09iamVjdC5kZWZpbmVQcm9wZXJ0eShNRFhDb250ZW50LCdfX2ZpbGVtZXRhJyx7ZW51bWVyYWJsZTp0cnVlLGNvbmZpZ3VyYWJsZTp0cnVlLHZhbHVlOntuYW1lOiJNRFhDb250ZW50IixmaWxlbmFtZToibWFudWFsL1J1YnkvUnVieS1Db25zdHJ1Y3RvcnMubWQifX0pO31NRFhDb250ZW50LmlzTURYQ29tcG9uZW50PXRydWU7"},{"version":3,"sources":["/Users/okeeffe_d/Project-Imposter/developer-notes/manual/Ruby/Ruby-Constructors.md"],"names":["React","mdx","makeShortcode","name","MDXDefaultShortcode","props","console","warn","layoutProps","MDXLayout","MDXContent","components","isMDXComponent"],"mappings":"4LAAA,cACE,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,GAAT,KAAoB,eAApB,CACA,cAGF,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAAAC,IAAI,QAAI,SAASC,CAAAA,mBAAT,CAA6BC,KAA7B,CAAoC,CAChEC,OAAO,CAACC,IAAR,CAAa,aAAeJ,IAAf,CAAsB,yEAAnC,EACA,MAAO,WAASE,KAAT,CAAP,CACD,CAHyB,EAA1B,CAKA,GAAMG,CAAAA,WAAW,CAAG,EAApB,CAGA,GAAMC,CAAAA,SAAS,CAAG,SAAlB,CACA,cAAe,SAASC,CAAAA,UAAT,MAGZ,IAFDC,CAAAA,UAEC,MAFDA,UAEC,CADEN,KACF,+CACD,MAAO,KAAC,SAAD,kBAAeG,WAAf,CAAgCH,KAAhC,EAAuC,UAAU,CAAEM,UAAnD,CAA+D,OAAO,CAAC,WAAvE,GACL,SAAQ,CACN,KAAM,kBADA,CAAR,oBADK,CAIL,wDAA+C,kBAAY,UAAU,CAAC,GAAvB,eAA/C,YAJK,CAKL,SAAQ,CACN,KAAM,gBADA,CAAR,kBALK,CAQL,eAAK,0BAAM,UAAU,CAAC,KAAjB,EAA2B,CAC5B,YAAa,eADe,CAA3B,kjBAAL,CARK,CAsCL,SAAQ,CACN,KAAM,qBADA,CAAR,uBAtCK,CAyCL,eAAK,0BAAM,UAAU,CAAC,KAAjB,EAA2B,CAC5B,YAAa,eADe,CAA3B,2xDAAL,CAzCK,CAAP,CAgJD,C,4QAEDD,UAAU,CAACE,cAAX,CAA4B,IAA5B","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"ruby-contructors\"\n    }}>{`Ruby Contructors`}</h1>\n    <p>{`The important constructor method is the `}<inlineCode parentName=\"p\">{`initialize`}</inlineCode>{` method.`}</p>\n    <h2 {...{\n      \"id\": \"simple-example\"\n    }}>{`Simple Example`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-ruby\"\n      }}>{`# Ruby program to initialize instance\n# variable using constructor\n\n#!/usr/bin/ruby\n\n# class name\nclass Geeks\n    # constructor\n    def initialize\n\n        # instance variable intialzation\n        @inst_1 = \"GeeksforGeeks\"\n        @inst_2 = \"Sudo Placement\"\n    end\n\n    # display method\n    def display\n        puts \"Value of First instance variable is: #{@inst_1}\"\n        puts \"Value of Second instance variable is: #{@inst_2}\"\n    end\nend\n\n# creating object\nobj1 = Geeks.new()\n\n# calling display method\nobj1.display()\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"linked-list-example\"\n    }}>{`Linked List Example`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-ruby\"\n      }}>{`\"\"\"\nBasic implementation without all methods\n\"\"\"\n\nclass LinkedList\n    def initialize(head=nil)\n        if head.nil?\n            @size = 0\n        else\n            @size = 1\n        end\n        @head = head\n    end\n\n    def getSize\n        @size\n    end\n\n    def insertFirst(n)\n        if @head.nil?\n            @head = n\n        else\n            tmp = @head\n            @head = n\n            n.setNext(tmp)\n        end\n        @size += 1\n    end\n\n    def clear\n        @head = nil\n        @size = 0\n    end\n\n    def getFirst\n        @head\n    end\nend\n\nclass Node\n    def initialize(data = nil)\n        @data = data\n        @next = nil\n    end\n\n    def getNext\n        @next\n    end\n\n    def setNext(n)\n        @next = n\n    end\nend\n\n# test Ruby file\nbegin\n  gem 'minitest', '>= 5.0.0'\n  require 'minitest/autorun'\n  require_relative 'linked_list'\nrescue Gem::LoadError => e\n  puts \"\\\\nMissing Dependency:\\\\n#{e.backtrace.first} #{e.message}\"\n  puts 'Minitest 5.0 gem must be installed for the Ruby track.'\nrescue LoadError => e\n  puts \"\\\\nError:\\\\n#{e.backtrace.first} #{e.message}\"\n  puts DATA.read\n  exit 1\nend\n\n# Common test data version: 1.1.0 be3ae66\nclass LinkedListTest < Minitest::Test\n  def test_get_size\n    # skip\n    n1 = Node.new(1)\n    ll = LinkedList.new(n1)\n    assert_equal 1, ll.getSize()\n  end\n\n  def test_insert_first\n    # skip\n    n1 = Node.new(1)\n    n2 = Node.new(1)\n    ll = LinkedList.new(n1)\n    ll.insertFirst(n2)\n    assert_equal 2, ll.getSize()\n  end\n\n  def test_clear\n    # skip\n    n1 = Node.new(1)\n    n2 = Node.new(1)\n    ll = LinkedList.new(n1)\n    ll.insertFirst(n2)\n    ll.clear()\n    assert_equal 0, ll.getSize()\n    assert_nil nil, ll.getFirst()\n  end\nend\n\n__END__\n`}</code></pre>\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  "]}]}