{"remainingRequest":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/docz-core/node_modules/babel-loader/lib/index.js??ref--6-1!/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/@mdx-js/loader/index.js??ref--6-2!/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/source-map-loader/index.js!/Users/dennis.okeeffe/Project-Imposter/developer-notes/manual/Design-Patterns/Bridge-Pattern.md","dependencies":[{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/manual/Design-Patterns/Bridge-Pattern.md","mtime":1562563032024},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/cache-loader/dist/cjs.js","mtime":1564095360956},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/docz-core/node_modules/babel-loader/lib/index.js","mtime":1562568123838},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/@mdx-js/loader/index.js","mtime":1565139338792},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/source-map-loader/index.js","mtime":1564095361765}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9vYmplY3RXaXRob3V0UHJvcGVydGllcyBmcm9tIi9Vc2Vycy9kZW5uaXMub2tlZWZmZS9Qcm9qZWN0LUltcG9zdGVyL2RldmVsb3Blci1ub3Rlcy9ub2RlX21vZHVsZXMvYmFiZWwtcHJlc2V0LXJlYWN0LWFwcC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0V2l0aG91dFByb3BlcnRpZXMiOy8qIEBqc3ggbWR4ICovaW1wb3J0IFJlYWN0IGZyb20ncmVhY3QnO2ltcG9ydHttZHh9ZnJvbSdAbWR4LWpzL3JlYWN0JzsvKiBAanN4IG1keCAqL3ZhciBtYWtlU2hvcnRjb2RlPWZ1bmN0aW9uIG1ha2VTaG9ydGNvZGUobmFtZSl7cmV0dXJuIGZ1bmN0aW9uIE1EWERlZmF1bHRTaG9ydGNvZGUocHJvcHMpe2NvbnNvbGUud2FybigiQ29tcG9uZW50ICIrbmFtZSsiIHdhcyBub3QgaW1wb3J0ZWQsIGV4cG9ydGVkLCBvciBwcm92aWRlZCBieSBNRFhQcm92aWRlciBhcyBnbG9iYWwgc2NvcGUiKTtyZXR1cm4gbWR4KCJkaXYiLHByb3BzKTt9O307dmFyIGxheW91dFByb3BzPXt9O3ZhciBNRFhMYXlvdXQ9IndyYXBwZXIiO2V4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIE1EWENvbnRlbnQoX3JlZil7dmFyIGNvbXBvbmVudHM9X3JlZi5jb21wb25lbnRzLHByb3BzPV9vYmplY3RXaXRob3V0UHJvcGVydGllcyhfcmVmLFsiY29tcG9uZW50cyJdKTtyZXR1cm4gbWR4KE1EWExheW91dCxPYmplY3QuYXNzaWduKHt9LGxheW91dFByb3BzLHByb3BzLHtjb21wb25lbnRzOmNvbXBvbmVudHMsbWR4VHlwZToiTURYTGF5b3V0In0pLG1keCgiaDEiLHsiaWQiOiJicmlkZ2UtcGF0dGVybiJ9LCJCcmlkZ2UgUGF0dGVybiIpLG1keCgicHJlIixudWxsLG1keCgiY29kZSIsT2JqZWN0LmFzc2lnbih7cGFyZW50TmFtZToicHJlIn0seyJjbGFzc05hbWUiOiJsYW5ndWFnZS1qYXZhc2NyaXB0In0pLCJpbnRlcmZhY2UgRXhlY3V0aXZlIHtcbiAgb3BlcmF0ZSgpOiB2b2lkO1xufVxuXG5jbGFzcyBQaWxvdCBpbXBsZW1lbnRzIEV4ZWN1dGl2ZSB7XG4gIG9wZXJhdGUoKTogdm9pZCB7XG4gICAgY29uc29sZS5sb2coJ0ZseScpO1xuICB9XG59XG5cbmNsYXNzIFNvbGRpZXIgaW1wbGVtZW50cyBFeGVjdXRpdmUge1xuICBvcGVyYXRlKCk6IHZvaWQge1xuICAgIGNvbnNvbGUubG9nKCdTaG9vdCcpO1xuICB9XG59XG5cbmNsYXNzIENvbW1hbmRlciB7XG4gIGV4ZWN1dGVPYmplY3Q6IEV4ZWN1dGl2ZTtcblxuICBjb25zdHJ1Y3RvcihleGVjdXRlT2JqZWN0OiBFeGVjdXRpdmUpIHtcbiAgICB0aGlzLmV4ZWN1dGVPYmplY3QgPSBleGVjdXRlT2JqZWN0O1xuICB9XG5cbiAgb3JkZXIoKTogdm9pZCB7XG4gICAgdGhpcy5leGVjdXRlT2JqZWN0Lm9wZXJhdGUoKTtcbiAgfVxufVxuXG5jbGFzcyBBaXJGb3JjZUNvbW1hbmRlciBleHRlbmRzIENvbW1hbmRlciB7XG4gIG9yZGVyKCk6IHZvaWQge1xuICAgIGNvbnNvbGUubG9nKCdBaXIgRm9yY2UgY29tbWFuZGVyIG1ha2Ugb3JkZXInKTtcbiAgICAvLyBleHRyYSBsb2dpY3MgaGVyZVxuICAgIHN1cGVyLm9yZGVyKCk7XG4gIH1cbn1cblxuY2xhc3MgU3BlY2lhbEZvcmNlQ29tbWFuZGVyIGV4dGVuZHMgQ29tbWFuZGVyIHtcbiAgb3JkZXIoKTogdm9pZCB7XG4gICAgY29uc29sZS5sb2coJ1NwZWNpYWwgRm9yY2UgY29tbWFuZGVyIG1ha2Ugb3JkZXInKTtcbiAgICAvLyBleHRyYSBsb2dpY3MgaGVyZVxuICAgIHN1cGVyLm9yZGVyKCk7XG4gIH1cbn1cblxuKGZ1bmN0aW9uIG1haW4oKSB7XG4gIGNvbnN0IGNvbW1hbmRlckEgPSBuZXcgQWlyRm9yY2VDb21tYW5kZXIobmV3IFBpbG90KCkpO1xuICBjb25zdCBjb21tYW5kZXJCID0gbmV3IFNwZWNpYWxGb3JjZUNvbW1hbmRlcihuZXcgU29sZGllcigpKTtcblxuICBjb21tYW5kZXJBLm9yZGVyKCk7XG4gIGNvbW1hbmRlckIub3JkZXIoKTtcbn0pKCk7XG4iKSksbWR4KCJoMiIseyJpZCI6ImMtZXhhbXBsZSJ9LCJDIyBFeGFtcGxlIiksbWR4KCJwcmUiLG51bGwsbWR4KCJjb2RlIixPYmplY3QuYXNzaWduKHtwYXJlbnROYW1lOiJwcmUifSx7ImNsYXNzTmFtZSI6Imxhbmd1YWdlLWNzaGFycCJ9KSwiLy8gSGVscHMgaW4gcHJvdmlkaW5nIHRydWx5IGRlY291cGxlZCBhcmNoaXRlY3R1cmVcbnB1YmxpYyBpbnRlcmZhY2UgSUJyaWRnZVxue1xuICAgIHZvaWQgRnVuY3Rpb24xKCk7XG4gICAgdm9pZCBGdW5jdGlvbjIoKTtcbn1cblxucHVibGljIGNsYXNzIEJyaWRnZTEgOiBJQnJpZGdlXG57XG4gICAgcHVibGljIHZvaWQgRnVuY3Rpb24xKClcbiAgICB7XG4gICAgICAgIENvbnNvbGUuV3JpdGVMaW5lKFwiQnJpZGdlMS5GdW5jdGlvbjFcIik7XG4gICAgfVxuXG4gICAgcHVibGljIHZvaWQgRnVuY3Rpb24yKClcbiAgICB7XG4gICAgICAgIENvbnNvbGUuV3JpdGVMaW5lKFwiQnJpZGdlMS5GdW5jdGlvbjJcIik7XG4gICAgfVxufVxuXG5wdWJsaWMgY2xhc3MgQnJpZGdlMiA6IElCcmlkZ2VcbntcbiAgICBwdWJsaWMgdm9pZCBGdW5jdGlvbjEoKVxuICAgIHtcbiAgICAgICAgQ29uc29sZS5Xcml0ZUxpbmUoXCJCcmlkZ2UyLkZ1bmN0aW9uMVwiKTtcbiAgICB9XG5cbiAgICBwdWJsaWMgdm9pZCBGdW5jdGlvbjIoKVxuICAgIHtcbiAgICAgICAgQ29uc29sZS5Xcml0ZUxpbmUoXCJCcmlkZ2UyLkZ1bmN0aW9uMlwiKTtcbiAgICB9XG59XG5cbnB1YmxpYyBpbnRlcmZhY2UgSUFic3RyYWN0QnJpZGdlXG57XG4gICAgdm9pZCBDYWxsTWV0aG9kMSgpO1xuICAgIHZvaWQgQ2FsbE1ldGhvZDIoKTtcbn1cblxucHVibGljIGNsYXNzIEFic3RyYWN0QnJpZGdlIDogSUFic3RyYWN0QnJpZGdlXG57XG4gICAgcHVibGljIElCcmlkZ2UgYnJpZGdlO1xuXG4gICAgcHVibGljIEFic3RyYWN0QnJpZGdlKElCcmlkZ2UgYnJpZGdlKVxuICAgIHtcbiAgICAgICAgdGhpcy5icmlkZ2UgPSBicmlkZ2U7XG4gICAgfVxuXG4gICAgcHVibGljIHZvaWQgQ2FsbE1ldGhvZDEoKVxuICAgIHtcbiAgICAgICAgdGhpcy5icmlkZ2UuRnVuY3Rpb24xKCk7XG4gICAgfVxuXG4gICAgcHVibGljIHZvaWQgQ2FsbE1ldGhvZDIoKVxuICAgIHtcbiAgICAgICAgdGhpcy5icmlkZ2UuRnVuY3Rpb24yKCk7XG4gICAgfVxufVxuIikpLG1keCgiaDIiLHsiaWQiOiJqYXZhLWV4YW1wbGUifSwiSmF2YSBFeGFtcGxlIiksbWR4KCJwcmUiLG51bGwsbWR4KCJjb2RlIixPYmplY3QuYXNzaWduKHtwYXJlbnROYW1lOiJwcmUifSx7ImNsYXNzTmFtZSI6Imxhbmd1YWdlLWphdmEifSksIi8vIExvZ2dlciBoYXMgdHdvIGltcGxlbWVudGF0aW9uczogaW5mbyBhbmQgd2FybmluZ1xuaW50ZXJmYWNlIExvZ2dlciB7XG4gIHB1YmxpYyB2b2lkIGxvZyhTdHJpbmcgbWVzc2FnZSk7XG5cbiAgc3RhdGljIExvZ2dlciBpbmZvKCkge1xuICAgIHJldHVybiBtZXNzYWdlIC0+IFN5c3RlbS5vdXQucHJpbnRsbihcImluZm86IFwiICsgbWVzc2FnZSk7XG4gIH1cbiAgc3RhdGljIExvZ2dlciB3YXJuaW5nKCkge1xuICAgIHJldHVybiBtZXNzYWdlIC0+IFN5c3RlbS5vdXQucHJpbnRsbihcIndhcm5pbmc6IFwiICsgbWVzc2FnZSk7XG4gIH1cbn1cblxuYWJzdHJhY3QgY2xhc3MgQWJzdHJhY3RBY2NvdW50IHtcbiAgcHJpdmF0ZSBMb2dnZXIgbG9nZ2VyID0gTG9nZ2VyLmluZm8oKTtcblxuICBwdWJsaWMgdm9pZCBzZXRMb2dnZXIoTG9nZ2VyIGxvZ2dlcikge1xuICAgIHRoaXMubG9nZ2VyID0gbG9nZ2VyO1xuICB9XG5cbiAgLy8gdGhlIGxvZ2dpbmcgcGFydCBpcyBkZWxlZ2F0ZWQgdG8gdGhlIExvZ2dlciBpbXBsZW1lbnRhdGlvblxuICBwcm90ZWN0ZWQgdm9pZCBvcGVyYXRlKFN0cmluZyBtZXNzYWdlLCBib29sZWFuIHJlc3VsdCkge1xuICAgIGxvZ2dlci5sb2cobWVzc2FnZSArIFwiIHJlc3VsdCBcIiArIHJlc3VsdCk7XG4gIH1cbn1cblxuY2xhc3MgU2ltcGxlQWNjb3VudCBleHRlbmRzIEFic3RyYWN0QWNjb3VudCB7XG4gIHByaXZhdGUgaW50IGJhbGFuY2U7XG5cbiAgcHVibGljIFNpbXBsZUFjY291bnQoaW50IGJhbGFuY2UpIHtcbiAgICB0aGlzLmJhbGFuY2UgPSBiYWxhbmNlO1xuICB9XG5cbiAgcHVibGljIGJvb2xlYW4gaXNCYWxhbmNlTG93KCkge1xuICAgIHJldHVybiBiYWxhbmNlIDwgNTA7XG4gIH1cblxuICBwdWJsaWMgdm9pZCB3aXRoZHJhdyhpbnQgYW1vdW50KSB7XG4gICAgYm9vbGVhbiBzaG91bGRQZXJmb3JtID0gYmFsYW5jZSA+PSBhbW91bnQ7XG4gICAgaWYgKHNob3VsZFBlcmZvcm0pIHtcbiAgICAgIGJhbGFuY2UgLT0gYW1vdW50O1xuICAgIH1cbiAgICBvcGVyYXRlKFwid2l0aGRyYXcgXCIgKyBhbW91bnQsIHNob3VsZFBlcmZvcm0pO1xuICB9XG59XG5cbnB1YmxpYyBjbGFzcyBCcmlkZ2VEZW1vIHtcbiAgcHVibGljIHN0YXRpYyB2b2lkIG1haW4oU3RyaW5nW10gYXJncykge1xuICAgIFNpbXBsZUFjY291bnQgYWNjb3VudCA9IG5ldyBTaW1wbGVBY2NvdW50KDEwMCk7XG4gICAgYWNjb3VudC53aXRoZHJhdyg3NSk7XG5cbiAgICBpZiAoYWNjb3VudC5pc0JhbGFuY2VMb3coKSkge1xuICAgICAgLy8geW91IGNhbiBhbHNvIGNoYW5nZSB0aGUgTG9nZ2VyIGltcGxlbWVudGF0aW9uIGF0IHJ1bnRpbWVcbiAgICAgIGFjY291bnQuc2V0TG9nZ2VyKExvZ2dlci53YXJuaW5nKCkpO1xuICAgIH1cblxuICAgIGFjY291bnQud2l0aGRyYXcoMTApO1xuICAgIGFjY291bnQud2l0aGRyYXcoMTAwKTtcbiAgfVxufVxuIikpKTt9aWYodHlwZW9mIE1EWENvbnRlbnQhPT0ndW5kZWZpbmVkJyYmTURYQ29udGVudCYmTURYQ29udGVudD09PU9iamVjdChNRFhDb250ZW50KSYmT2JqZWN0LmlzRXh0ZW5zaWJsZShNRFhDb250ZW50KSl7T2JqZWN0LmRlZmluZVByb3BlcnR5KE1EWENvbnRlbnQsJ19fZmlsZW1ldGEnLHtlbnVtZXJhYmxlOnRydWUsY29uZmlndXJhYmxlOnRydWUsdmFsdWU6e25hbWU6Ik1EWENvbnRlbnQiLGZpbGVuYW1lOiJtYW51YWwvRGVzaWduLVBhdHRlcm5zL0JyaWRnZS1QYXR0ZXJuLm1kIn19KTt9TURYQ29udGVudC5pc01EWENvbXBvbmVudD10cnVlOw=="},{"version":3,"sources":["/Users/dennis.okeeffe/Project-Imposter/developer-notes/manual/Design-Patterns/Bridge-Pattern.md"],"names":["React","mdx","makeShortcode","name","MDXDefaultShortcode","props","console","warn","layoutProps","MDXLayout","MDXContent","components","isMDXComponent"],"mappings":"iMAAA,cACE,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,GAAT,KAAoB,eAApB,CACA,cAGF,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAAAC,IAAI,QAAI,SAASC,CAAAA,mBAAT,CAA6BC,KAA7B,CAAoC,CAChEC,OAAO,CAACC,IAAR,CAAa,aAAeJ,IAAf,CAAsB,yEAAnC,EACA,MAAO,WAASE,KAAT,CAAP,CACD,CAHyB,EAA1B,CAKA,GAAMG,CAAAA,WAAW,CAAG,EAApB,CAGA,GAAMC,CAAAA,SAAS,CAAG,SAAlB,CACA,cAAe,SAASC,CAAAA,UAAT,MAGZ,IAFDC,CAAAA,UAEC,MAFDA,UAEC,CADEN,KACF,+CACD,MAAO,KAAC,SAAD,kBAAeG,WAAf,CAAgCH,KAAhC,EAAuC,UAAU,CAAEM,UAAnD,CAA+D,OAAO,CAAC,WAAvE,GACL,SAAQ,CACN,KAAM,gBADA,CAAR,kBADK,CAIL,eAAK,0BAAM,UAAU,CAAC,KAAjB,EAA2B,CAC5B,YAAa,qBADe,CAA3B,m+BAAL,CAJK,CA0DL,SAAQ,CACN,KAAM,WADA,CAAR,cA1DK,CA6DL,eAAK,0BAAM,UAAU,CAAC,KAAjB,EAA2B,CAC5B,YAAa,iBADe,CAA3B,8/BAAL,CA7DK,CA0HL,SAAQ,CACN,KAAM,cADA,CAAR,gBA1HK,CA6HL,eAAK,0BAAM,UAAU,CAAC,KAAjB,EAA2B,CAC5B,YAAa,eADe,CAA3B,66CAAL,CA7HK,CAAP,CA4LD,C,oRAEDD,UAAU,CAACE,cAAX,CAA4B,IAA5B","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"bridge-pattern\"\n    }}>{`Bridge Pattern`}</h1>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`interface Executive {\n  operate(): void;\n}\n\nclass Pilot implements Executive {\n  operate(): void {\n    console.log('Fly');\n  }\n}\n\nclass Soldier implements Executive {\n  operate(): void {\n    console.log('Shoot');\n  }\n}\n\nclass Commander {\n  executeObject: Executive;\n\n  constructor(executeObject: Executive) {\n    this.executeObject = executeObject;\n  }\n\n  order(): void {\n    this.executeObject.operate();\n  }\n}\n\nclass AirForceCommander extends Commander {\n  order(): void {\n    console.log('Air Force commander make order');\n    // extra logics here\n    super.order();\n  }\n}\n\nclass SpecialForceCommander extends Commander {\n  order(): void {\n    console.log('Special Force commander make order');\n    // extra logics here\n    super.order();\n  }\n}\n\n(function main() {\n  const commanderA = new AirForceCommander(new Pilot());\n  const commanderB = new SpecialForceCommander(new Soldier());\n\n  commanderA.order();\n  commanderB.order();\n})();\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"c-example\"\n    }}>{`C# Example`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-csharp\"\n      }}>{`// Helps in providing truly decoupled architecture\npublic interface IBridge\n{\n    void Function1();\n    void Function2();\n}\n\npublic class Bridge1 : IBridge\n{\n    public void Function1()\n    {\n        Console.WriteLine(\"Bridge1.Function1\");\n    }\n\n    public void Function2()\n    {\n        Console.WriteLine(\"Bridge1.Function2\");\n    }\n}\n\npublic class Bridge2 : IBridge\n{\n    public void Function1()\n    {\n        Console.WriteLine(\"Bridge2.Function1\");\n    }\n\n    public void Function2()\n    {\n        Console.WriteLine(\"Bridge2.Function2\");\n    }\n}\n\npublic interface IAbstractBridge\n{\n    void CallMethod1();\n    void CallMethod2();\n}\n\npublic class AbstractBridge : IAbstractBridge\n{\n    public IBridge bridge;\n\n    public AbstractBridge(IBridge bridge)\n    {\n        this.bridge = bridge;\n    }\n\n    public void CallMethod1()\n    {\n        this.bridge.Function1();\n    }\n\n    public void CallMethod2()\n    {\n        this.bridge.Function2();\n    }\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"java-example\"\n    }}>{`Java Example`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`// Logger has two implementations: info and warning\ninterface Logger {\n  public void log(String message);\n\n  static Logger info() {\n    return message -> System.out.println(\"info: \" + message);\n  }\n  static Logger warning() {\n    return message -> System.out.println(\"warning: \" + message);\n  }\n}\n\nabstract class AbstractAccount {\n  private Logger logger = Logger.info();\n\n  public void setLogger(Logger logger) {\n    this.logger = logger;\n  }\n\n  // the logging part is delegated to the Logger implementation\n  protected void operate(String message, boolean result) {\n    logger.log(message + \" result \" + result);\n  }\n}\n\nclass SimpleAccount extends AbstractAccount {\n  private int balance;\n\n  public SimpleAccount(int balance) {\n    this.balance = balance;\n  }\n\n  public boolean isBalanceLow() {\n    return balance < 50;\n  }\n\n  public void withdraw(int amount) {\n    boolean shouldPerform = balance >= amount;\n    if (shouldPerform) {\n      balance -= amount;\n    }\n    operate(\"withdraw \" + amount, shouldPerform);\n  }\n}\n\npublic class BridgeDemo {\n  public static void main(String[] args) {\n    SimpleAccount account = new SimpleAccount(100);\n    account.withdraw(75);\n\n    if (account.isBalanceLow()) {\n      // you can also change the Logger implementation at runtime\n      account.setLogger(Logger.warning());\n    }\n\n    account.withdraw(10);\n    account.withdraw(100);\n  }\n}\n`}</code></pre>\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  "]}]}