{"remainingRequest":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/docz-core/node_modules/babel-loader/lib/index.js??ref--6-1!/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/@mdx-js/loader/index.js??ref--6-2!/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/source-map-loader/index.js!/Users/dennis.okeeffe/Project-Imposter/developer-notes/manual/Nginx/Nginx-Nodejs-Docker.md","dependencies":[{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/manual/Nginx/Nginx-Nodejs-Docker.md","mtime":1562563032073},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/cache-loader/dist/cjs.js","mtime":1564095360956},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/docz-core/node_modules/babel-loader/lib/index.js","mtime":1562568123838},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/@mdx-js/loader/index.js","mtime":1565139338792},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/source-map-loader/index.js","mtime":1564095361765}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9vYmplY3RXaXRob3V0UHJvcGVydGllcyBmcm9tIi9Vc2Vycy9kZW5uaXMub2tlZWZmZS9Qcm9qZWN0LUltcG9zdGVyL2RldmVsb3Blci1ub3Rlcy9ub2RlX21vZHVsZXMvYmFiZWwtcHJlc2V0LXJlYWN0LWFwcC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0V2l0aG91dFByb3BlcnRpZXMiOy8qIEBqc3ggbWR4ICovaW1wb3J0IFJlYWN0IGZyb20ncmVhY3QnO2ltcG9ydHttZHh9ZnJvbSdAbWR4LWpzL3JlYWN0JzsvKiBAanN4IG1keCAqL3ZhciBtYWtlU2hvcnRjb2RlPWZ1bmN0aW9uIG1ha2VTaG9ydGNvZGUobmFtZSl7cmV0dXJuIGZ1bmN0aW9uIE1EWERlZmF1bHRTaG9ydGNvZGUocHJvcHMpe2NvbnNvbGUud2FybigiQ29tcG9uZW50ICIrbmFtZSsiIHdhcyBub3QgaW1wb3J0ZWQsIGV4cG9ydGVkLCBvciBwcm92aWRlZCBieSBNRFhQcm92aWRlciBhcyBnbG9iYWwgc2NvcGUiKTtyZXR1cm4gbWR4KCJkaXYiLHByb3BzKTt9O307dmFyIGxheW91dFByb3BzPXt9O3ZhciBNRFhMYXlvdXQ9IndyYXBwZXIiO2V4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIE1EWENvbnRlbnQoX3JlZil7dmFyIGNvbXBvbmVudHM9X3JlZi5jb21wb25lbnRzLHByb3BzPV9vYmplY3RXaXRob3V0UHJvcGVydGllcyhfcmVmLFsiY29tcG9uZW50cyJdKTtyZXR1cm4gbWR4KE1EWExheW91dCxPYmplY3QuYXNzaWduKHt9LGxheW91dFByb3BzLHByb3BzLHtjb21wb25lbnRzOmNvbXBvbmVudHMsbWR4VHlwZToiTURYTGF5b3V0In0pLG1keCgiaDEiLHsiaWQiOiJkb2NrZXItY29udGFpbmVyLXdpdGgtbmdpbngtYW5kLW5vZGVqcyJ9LCJEb2NrZXIgY29udGFpbmVyIHdpdGggTmdpbnggYW5kIE5vZGVqcyIpLG1keCgicCIsbnVsbCwiRmlyc3QgY3JlYXRlIGEgZGlyZWN0b3J5IGZvciBib3RoICIsbWR4KCJpbmxpbmVDb2RlIix7cGFyZW50TmFtZToicCJ9LCJuZ2lueCIpLCIgYW5kICIsbWR4KCJpbmxpbmVDb2RlIix7cGFyZW50TmFtZToicCJ9LCJub2RlanMiKSwiLiIpLG1keCgicCIsbnVsbCwiV2l0aGluIHRoZSBOb2RlIGZvbGRlciwgY3JlYXRlIGEgIixtZHgoImlubGluZUNvZGUiLHtwYXJlbnROYW1lOiJwIn0sIkRvY2tlcmZpbGUiKSwiIHRoYXQgY29udGFpbnMgdGhlIGZvbGxvd2luZyB0byBleHBvc2UgYW4gYXBwIHJ1bm5pbmcgb24gYSBwYXJ0aWN1bGFyIHBvcnQ6IiksbWR4KCJwcmUiLG51bGwsbWR4KCJjb2RlIixPYmplY3QuYXNzaWduKHtwYXJlbnROYW1lOiJwcmUifSx7fSksIkZST00gbWhhcnQvYWxwaW5lLW5vZGVcbiMgUHJldGVuZCB0byBjb3B5IHRoZSBub2RlIGFwcCBlbnRyeVxuIyBmcm9tIGN1cnJlbnQgZm9sZGVyXG5DT1BZIGluZGV4LmpzIC5cbiMgRXhwb3NlIHRoZSBwb3J0IHRoYXQgaXQgaXMgcnVubmluZyBvblxuRVhQT1NFIDMwMDBcbiMgUnVuIG5vZGUgLSBjaGFuY2VzIGFyZSB5b3Ugd2FudCBwbTIgaGVyZVxuQ01EIG5vZGUgaW5kZXguanNcbiIpKSxtZHgoInAiLG51bGwsIlRoZW4gd2UgY2FuIGJ1aWxkIHdpdGggIixtZHgoImlubGluZUNvZGUiLHtwYXJlbnROYW1lOiJwIn0sImRvY2tlciBidWlsdCAtdCBmb28vbm9kZSAuIikpLG1keCgicCIsbnVsbCwiQWZ0ZXIgdGhlIGJ1aWxkLCBydW4gdGhlIGNvbnRhaW5lciB3aXRoIHBvcnQgMzAwMCBleHBvc2VkIHVzaW5nICIsbWR4KCJpbmxpbmVDb2RlIix7cGFyZW50TmFtZToicCJ9LCJkb2NrZXIgcnVuIC1kIC1wIDMwMDA6MzAwMCAtLW5hbWUgbm9kZS1hcHAgZm9vL25vZGUiKSwiLiIpLG1keCgicCIsbnVsbCwiRmlyc3QsIHdlIGNhbiB0ZXN0IHRoZSBOZ2lueCBsYXRlc3QgY29udGFpbmVyIGNvbnRhaW5lciB1c2luZyAiLG1keCgiaW5saW5lQ29kZSIse3BhcmVudE5hbWU6InAifSwiZG9ja2VyIHJ1biAtLXJtIC1wIDgwMDA6ODAgbmdpbngiKSwiIHRvIHRlc3Qgb3V0IG5naW54OmxhdGVzdC4gVGhpcyBqdXN0IHJlbW92ZXMgdGhlIGNvbnRhaW5lciBhZnRlciBydW5uaW5nLiIpLG1keCgicCIsbnVsbCwiSW4gdGhlICIsbWR4KCJpbmxpbmVDb2RlIix7cGFyZW50TmFtZToicCJ9LCJuZ2lueCIpLCIgZm9sZGVyLCB3ZSBjYW4gY3JlYXRlICIsbWR4KCJpbmxpbmVDb2RlIix7cGFyZW50TmFtZToicCJ9LCJkZWZhdWx0LmNvbmYiKSwiIGZpbGUgdG8gb3ZlcndyaXRlIHRoZSBpbml0aWFsIG9uZS4iKSxtZHgoInAiLG51bGwsIklmIHNldHRpbmdzIGFyZSBub3QgZGVmaW5lZCBiZWxvdywgTmdpbnggd2lsbCB1c2UgdGhlIGRlZmF1bHQgdmFsdWVzLiIpLG1keCgicHJlIixudWxsLG1keCgiY29kZSIsT2JqZWN0LmFzc2lnbih7cGFyZW50TmFtZToicHJlIn0se30pLCIjIGNvbmZpZ1xuc2VydmVyIHtcbiAgICBsb2NhdGlvbiAvIHtcbiAgICAgICAgIyBob3N0IG5hbWUgZmlyc3RcbiAgICAgICAgcHJveHlfc2V0X2hlYWRlciBIb3N0ICRob3N0O1xuICAgICAgICAjIGV4dHJhIGhlYWRlcnMgZm9yIGhvc3QgSVAgYWRkcmVzc1xuICAgICAgICBwcm94eV9zZXRfaGVhZGVyIFgtUmVhbC1JUCAkcmVtb3RlX2FkZHI7XG4gICAgICAgIHByb3h5X3NldF9oZWFkZXIgWC1Gb3J3YXJkZWQtRm9yICRwcm94eV9hZGRfeF9mb3J3YXJkZWRfZm9yO1xuICAgICAgICAjIHBhc3NpbmcgcHJvdG9jb2wgdXNlZCAoaHR0cCB8IGh0dHBzKVxuICAgICAgICBwcm94eV9zZXRfaGVhZGVyIFgtRm9yd2FyZGVkLVByb3RvICRzY2hlbWU7XG4gICAgICAgICMgd2hlcmUgdG8gcHJveHkgcmVxcyB0b1xuICAgICAgICBwcm94eV9wYXNzIGh0dHA6Ly9hcHA6MzAwMDtcbiAgICB9XG59XG4iKSksbWR4KCJwIixudWxsLCJGb3IgdGhlIERvY2tlciBmaWxlLiIpLG1keCgicHJlIixudWxsLG1keCgiY29kZSIsT2JqZWN0LmFzc2lnbih7cGFyZW50TmFtZToicHJlIn0se30pLCJGUk9NIG5naW54XG5DT1BZIGRlZmF1bHQuY29uZyAvZXRjL25naW54L2NvbmYuZC9cbiIpKSxtZHgoInAiLG51bGwsIlRoZW4gYnVpbGQgb3V0IHRoaXMgZmlsZSB1c2luZyAiLG1keCgiaW5saW5lQ29kZSIse3BhcmVudE5hbWU6InAifSwiZG9ja2VyIGJ1aWx0IC10IGZvby9uZ2lueCAuIiksIi4iKSxtZHgoInAiLG51bGwsIlJ1bm5pbmcgaXQ6ICIsbWR4KCJpbmxpbmVDb2RlIix7cGFyZW50TmFtZToicCJ9LCJkb2NrZXIgcnVuIC1wIDgwMDA6ODAgLS1saW5rIG5vZGUtYXBwOmFwcCAtLW5hbWUgbmdpbngtcHJveHkgZm9vL25naW54IikpLG1keCgicCIsbnVsbCwiU2luY2Ugd2UgZXhwb3NlIDMwMDAgZm9yIHRoZSBub2RlLWFwcCwgd2UgZG8gbm90IG5lZWQgdG8gcmVkbyB0aGF0LiIpKTt9aWYodHlwZW9mIE1EWENvbnRlbnQhPT0ndW5kZWZpbmVkJyYmTURYQ29udGVudCYmTURYQ29udGVudD09PU9iamVjdChNRFhDb250ZW50KSYmT2JqZWN0LmlzRXh0ZW5zaWJsZShNRFhDb250ZW50KSl7T2JqZWN0LmRlZmluZVByb3BlcnR5KE1EWENvbnRlbnQsJ19fZmlsZW1ldGEnLHtlbnVtZXJhYmxlOnRydWUsY29uZmlndXJhYmxlOnRydWUsdmFsdWU6e25hbWU6Ik1EWENvbnRlbnQiLGZpbGVuYW1lOiJtYW51YWwvTmdpbngvTmdpbngtTm9kZWpzLURvY2tlci5tZCJ9fSk7fU1EWENvbnRlbnQuaXNNRFhDb21wb25lbnQ9dHJ1ZTs="},{"version":3,"sources":["/Users/dennis.okeeffe/Project-Imposter/developer-notes/manual/Nginx/Nginx-Nodejs-Docker.md"],"names":["React","mdx","makeShortcode","name","MDXDefaultShortcode","props","console","warn","layoutProps","MDXLayout","MDXContent","components","isMDXComponent"],"mappings":"iMAAA,cACE,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,GAAT,KAAoB,eAApB,CACA,cAGF,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAAAC,IAAI,QAAI,SAASC,CAAAA,mBAAT,CAA6BC,KAA7B,CAAoC,CAChEC,OAAO,CAACC,IAAR,CAAa,aAAeJ,IAAf,CAAsB,yEAAnC,EACA,MAAO,WAASE,KAAT,CAAP,CACD,CAHyB,EAA1B,CAKA,GAAMG,CAAAA,WAAW,CAAG,EAApB,CAGA,GAAMC,CAAAA,SAAS,CAAG,SAAlB,CACA,cAAe,SAASC,CAAAA,UAAT,MAGZ,IAFDC,CAAAA,UAEC,MAFDA,UAEC,CADEN,KACF,+CACD,MAAO,KAAC,SAAD,kBAAeG,WAAf,CAAgCH,KAAhC,EAAuC,UAAU,CAAEM,UAAnD,CAA+D,OAAO,CAAC,WAAvE,GACL,SAAQ,CACN,KAAM,wCADA,CAAR,0CADK,CAIL,kDAAyC,kBAAY,UAAU,CAAC,GAAvB,UAAzC,SAAmG,kBAAY,UAAU,CAAC,GAAvB,WAAnG,KAJK,CAKL,iDAAwC,kBAAY,UAAU,CAAC,GAAvB,eAAxC,+EALK,CAML,eAAK,0BAAM,UAAU,CAAC,KAAjB,EAA2B,EAA3B,gOAAL,CANK,CAeL,uCAA8B,kBAAY,UAAU,CAAC,GAAvB,+BAA9B,CAfK,CAgBL,gFAAuE,kBAAY,UAAU,CAAC,GAAvB,wDAAvE,KAhBK,CAiBL,8EAAqE,kBAAY,UAAU,CAAC,GAAvB,qCAArE,6EAjBK,CAkBL,uBAAc,kBAAY,UAAU,CAAC,GAAvB,UAAd,2BAA0F,kBAAY,UAAU,CAAC,GAAvB,iBAA1F,uCAlBK,CAmBL,qFAnBK,CAoBL,eAAK,0BAAM,UAAU,CAAC,KAAjB,EAA2B,EAA3B,ucAAL,CApBK,CAmCL,oCAnCK,CAoCL,eAAK,0BAAM,UAAU,CAAC,KAAjB,EAA2B,EAA3B,uDAAL,CApCK,CAuCL,+CAAsC,kBAAY,UAAU,CAAC,GAAvB,gCAAtC,KAvCK,CAwCL,4BAAmB,kBAAY,UAAU,CAAC,GAAvB,2EAAnB,CAxCK,CAyCL,mFAzCK,CAAP,CA2CD,C,+QAEDD,UAAU,CAACE,cAAX,CAA4B,IAA5B","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"docker-container-with-nginx-and-nodejs\"\n    }}>{`Docker container with Nginx and Nodejs`}</h1>\n    <p>{`First create a directory for both `}<inlineCode parentName=\"p\">{`nginx`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`nodejs`}</inlineCode>{`.`}</p>\n    <p>{`Within the Node folder, create a `}<inlineCode parentName=\"p\">{`Dockerfile`}</inlineCode>{` that contains the following to expose an app running on a particular port:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`FROM mhart/alpine-node\n# Pretend to copy the node app entry\n# from current folder\nCOPY index.js .\n# Expose the port that it is running on\nEXPOSE 3000\n# Run node - chances are you want pm2 here\nCMD node index.js\n`}</code></pre>\n    <p>{`Then we can build with `}<inlineCode parentName=\"p\">{`docker built -t foo/node .`}</inlineCode></p>\n    <p>{`After the build, run the container with port 3000 exposed using `}<inlineCode parentName=\"p\">{`docker run -d -p 3000:3000 --name node-app foo/node`}</inlineCode>{`.`}</p>\n    <p>{`First, we can test the Nginx latest container container using `}<inlineCode parentName=\"p\">{`docker run --rm -p 8000:80 nginx`}</inlineCode>{` to test out nginx:latest. This just removes the container after running.`}</p>\n    <p>{`In the `}<inlineCode parentName=\"p\">{`nginx`}</inlineCode>{` folder, we can create `}<inlineCode parentName=\"p\">{`default.conf`}</inlineCode>{` file to overwrite the initial one.`}</p>\n    <p>{`If settings are not defined below, Nginx will use the default values.`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`# config\nserver {\n    location / {\n        # host name first\n        proxy_set_header Host $host;\n        # extra headers for host IP address\n        proxy_set_header X-Real-IP $remote_addr;\n        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n        # passing protocol used (http | https)\n        proxy_set_header X-Forwarded-Proto $scheme;\n        # where to proxy reqs to\n        proxy_pass http://app:3000;\n    }\n}\n`}</code></pre>\n    <p>{`For the Docker file.`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`FROM nginx\nCOPY default.cong /etc/nginx/conf.d/\n`}</code></pre>\n    <p>{`Then build out this file using `}<inlineCode parentName=\"p\">{`docker built -t foo/nginx .`}</inlineCode>{`.`}</p>\n    <p>{`Running it: `}<inlineCode parentName=\"p\">{`docker run -p 8000:80 --link node-app:app --name nginx-proxy foo/nginx`}</inlineCode></p>\n    <p>{`Since we expose 3000 for the node-app, we do not need to redo that.`}</p>\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  "]}]}