{"remainingRequest":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/docz-core/node_modules/babel-loader/lib/index.js??ref--6-1!/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/@mdx-js/loader/index.js??ref--6-2!/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/source-map-loader/index.js!/Users/dennis.okeeffe/Project-Imposter/developer-notes/manual/COMP3306-AI/2-Problem-Solving-And-Search.md","dependencies":[{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/manual/COMP3306-AI/2-Problem-Solving-And-Search.md","mtime":1562563032016},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/cache-loader/dist/cjs.js","mtime":1581496618588},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/docz-core/node_modules/babel-loader/lib/index.js","mtime":1578565694890},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/@mdx-js/loader/index.js","mtime":1581496618277},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/source-map-loader/index.js","mtime":1580255490569}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/dennis.okeeffe/Project-Imposter/developer-notes/manual/COMP3306-AI/2-Problem-Solving-And-Search.md"],"names":["React","mdx","makeShortcode","name","MDXDefaultShortcode","props","console","warn","layoutProps","MDXLayout","MDXContent","components","isMDXComponent"],"mappings":"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","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"problem-solving-and-search\"\n    }}>{`Problem Solving and Search`}</h1>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"#problem-solving-and-search\"\n        }}>{`Problem Solving and Search`}</a>{`\n- `}<a parentName=\"li\" {...{\n          \"href\": \"#search-problem-formulation\"\n        }}>{`Search Problem Formulation`}</a>{`\n- `}<a parentName=\"li\" {...{\n          \"href\": \"#searching-for-solutions\"\n        }}>{`Searching for solutions`}</a>{`\n- `}<a parentName=\"li\" {...{\n          \"href\": \"#tree-search-algorithm---pseudo-code\"\n        }}>{`Tree search algorithm - pseudo code`}</a>{`\n- `}<a parentName=\"li\" {...{\n          \"href\": \"#nodes-vs-states\"\n        }}>{`Nodes vs States`}</a>{`\n- `}<a parentName=\"li\" {...{\n          \"href\": \"#search-strategies\"\n        }}>{`Search Strategies`}</a>{`\n- `}<a parentName=\"li\" {...{\n          \"href\": \"#uninformed-blind-search-strategies\"\n        }}>{`Uninformed (Blind) Search Strategies`}</a>{`\n- `}<a parentName=\"li\" {...{\n          \"href\": \"#bfs---breadth-first-search\"\n        }}>{`BFS - Breadth First Search`}</a>{`\n- `}<a parentName=\"li\" {...{\n          \"href\": \"#ucs---uniform-cost-search\"\n        }}>{`UCS - Uniform Cost Search`}</a>{`\n- `}<a parentName=\"li\" {...{\n          \"href\": \"#dfs---depth-firth-search\"\n        }}>{`DFS - Depth-Firth Search`}</a>{`\n- `}<a parentName=\"li\" {...{\n          \"href\": \"#ids---iterative-deepening-searh-ids\"\n        }}>{`IDS - Iterative Deepening Searh (IDS)`}</a>{`\n- `}<a parentName=\"li\" {...{\n          \"href\": \"#informed-vs-uninformed-search\"\n        }}>{`Informed vs Uninformed Search`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"#best-first-search\"\n        }}>{`Best First Search`}</a>{`\n- `}<a parentName=\"li\" {...{\n          \"href\": \"#greedy-search-gs\"\n        }}>{`Greedy Search (GS)`}</a></li>\n    </ul>\n    <p><strong parentName=\"p\">{`Learning Aims`}</strong></p>\n    <ol>\n      <li parentName=\"ol\">{`Uninformed Search: BFS, DFS, UCS and IDS`}</li>\n      <li parentName=\"ol\">{`Informed Search: Greedy Best-First`}</li>\n    </ol>\n    <h2 {...{\n      \"id\": \"search-problem-formulation\"\n    }}>{`Search Problem Formulation`}</h2>\n    <p>{`Defined by 4 items:`}</p>\n    <ol>\n      <li parentName=\"ol\">{`Initial state`}</li>\n      <li parentName=\"ol\">{`Goal state`}</li>\n      <li parentName=\"ol\">{`Operators = actions`}</li>\n      <li parentName=\"ol\">{`Path cost function`}</li>\n    </ol>\n    <p><strong parentName=\"p\">{`Choosing States and Actions`}</strong></p>\n    <p>{`Real problems are too complex, to solve them we need to `}<em parentName=\"p\">{`abstract`}</em>{` them! Simplify them by removing unnecessary details.`}</p>\n    <p>{`Eg. If we need to find the path somewhere, we can ignore things such as weather, road conditions, scenary.`}</p>\n    <p>{`Actions need to be suitable specified eg not \"turn the steering wheel left by 5 degrees\".`}</p>\n    <p>{`The `}<em parentName=\"p\">{`level of abstraction`}</em>{` must be appropriate.`}</p>\n    <ul>\n      <li parentName=\"ul\">{`State = set of real states`}</li>\n      <li parentName=\"ul\">{`Action = complex combination of real actions`}</li>\n      <li parentName=\"ul\">{`Solution = set of real paths that are solutions in the real world`}</li>\n    </ul>\n    <p><strong parentName=\"p\">{`8-Queens Problem`}</strong></p>\n    <ol>\n      <li parentName=\"ol\">{`Incremental - stat with empty space, add 1 queen at a time`}</li>\n      <li parentName=\"ol\">{`Complete-state - start with all 8 queens and move them around`}</li>\n    </ol>\n    <p><strong parentName=\"p\">{`For 1:`}</strong></p>\n    <ul>\n      <li parentName=\"ul\">{`States? Any arrangement of 0 to 8 queens`}</li>\n      <li parentName=\"ul\">{`Initial state? No queens on the board`}</li>\n      <li parentName=\"ul\">{`Operators? Add any queen to any square`}</li>\n      <li parentName=\"ul\">{`State space? 1.8 `}<em parentName=\"li\">{` 10^14 states (= 64 `}</em>{` 63 `}<em parentName=\"li\">{` ... `}</em>{` 57)`}</li>\n    </ul>\n    <p><strong parentName=\"p\">{`For 2:`}</strong></p>\n    <ul>\n      <li parentName=\"ul\">{`States? Any arrangement of 0 to 8 queens, 1 in each column with no queen attacking each other`}</li>\n      <li parentName=\"ul\">{`Initial state? No queens on the board`}</li>\n      <li parentName=\"ul\">{`Operators? Place a queen in the left-most-empty column such that it is not attacked by any other queen`}</li>\n      <li parentName=\"ul\">{`State space? 2057 states`}</li>\n    </ul>\n    <p><strong parentName=\"p\">{`For 100-queens:`}</strong></p>\n    <ul>\n      <li parentName=\"ul\">{`1: 10^400 states`}</li>\n      <li parentName=\"ul\">{`2: 10^52 states (hugh improvement but problem still not tractable)`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"searching-for-solutions\"\n    }}>{`Searching for solutions`}</h2>\n    <ul>\n      <li parentName=\"ul\">{`Searching the state space`}</li>\n      <li parentName=\"ul\">{`Generate a search tree starting from the initial state and applying the operators`}</li>\n      <li parentName=\"ul\">{`We can generate a search graph - in a graph the same state can be reached rom multiple paths`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"tree-search-algorithm---pseudo-code\"\n    }}>{`Tree search algorithm - pseudo code`}</h2>\n    <p>{`Basic idea: offline exploration of the state space by generating successors of the explored states (i.e. exapnding states)`}</p>\n    <p><strong parentName=\"p\">{`We keep two lists:`}</strong></p>\n    <ul>\n      <li parentName=\"ul\">{`Expanded - for nodes that have been expanded`}</li>\n      <li parentName=\"ul\">{`Fringe - for nodes that bae been generated but not expanded yet`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"nodes-vs-states\"\n    }}>{`Nodes vs States`}</h2>\n    <p>{`A `}<inlineCode parentName=\"p\">{`node`}</inlineCode>{` is different than a `}<inlineCode parentName=\"p\">{`state`}</inlineCode>{`.`}</p>\n    <p><strong parentName=\"p\">{`A node:`}</strong></p>\n    <ul>\n      <li parentName=\"ul\">{`represents a state`}</li>\n      <li parentName=\"ul\">{`is a data structure used in the search tree`}</li>\n      <li parentName=\"ul\">{`includes `}<inlineCode parentName=\"li\">{`parent`}</inlineCode>{`, `}<inlineCode parentName=\"li\">{`children`}</inlineCode>{`, and other relevant information e.g. `}<inlineCode parentName=\"li\">{`depth`}</inlineCode>{` and `}<inlineCode parentName=\"li\">{`path cost g`}</inlineCode></li>\n    </ul>\n    <h2 {...{\n      \"id\": \"search-strategies\"\n    }}>{`Search Strategies`}</h2>\n    <ul>\n      <li parentName=\"ul\">{`A `}<inlineCode parentName=\"li\">{`search strategy`}</inlineCode>{` defines which node from the fringe is most promising and should be expanded next`}</li>\n      <li parentName=\"ul\">{`We always keep the nodes in the fringe orded based on the search strategy and always expand the first one`}</li>\n    </ul>\n    <p><strong parentName=\"p\">{`Evaluation Critera`}</strong></p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Term`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Definition`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Completeness`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`is it guaranteed to find a solution if one exists?`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Optimality`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`is it guaranteed to find an `}<inlineCode parentName=\"td\">{`optimal (least cost path)`}</inlineCode>{` solution?`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Time complexity`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`How long does it take to find the solution? (measured as no. of generated nodes)`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Space complexity`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`what is the max number of nodes in memory?`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <p><strong parentName=\"p\">{`Time and space complexity`}</strong></p>\n    <p>{`Measured in terms of:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`b: max branching factor of the search tree (we can assume that it is finite)`}</li>\n      <li parentName=\"ul\">{`d: depth of the optimal (least cost) solution`}</li>\n      <li parentName=\"ul\">{`m: maximum depth of the state space (can be finite or not finite)`}</li>\n    </ul>\n    <p><strong parentName=\"p\">{`There are two types of search methods:`}</strong></p>\n    <ol>\n      <li parentName=\"ol\">{`Uninformed (blind)`}</li>\n      <li parentName=\"ol\">{`Informed (heuristic)`}</li>\n    </ol>\n    <h2 {...{\n      \"id\": \"uninformed-blind-search-strategies\"\n    }}>{`Uninformed (Blind) Search Strategies`}</h2>\n    <p><strong parentName=\"p\">{`Uninformed strategies:`}</strong></p>\n    <ul>\n      <li parentName=\"ul\">{`Generate children in a systematic way eg level by level, from left to right`}</li>\n      <li parentName=\"ul\">{`Know if a child node is a goal or non-goal node`}</li>\n      <li parentName=\"ul\">{`Do not know if one non-goal child is better (more promising) than another one. By contrast, informed (heuristic) search strategies know this`}</li>\n    </ul>\n    <p><strong parentName=\"p\">{`5 uninformed search strategies:`}</strong></p>\n    <ul>\n      <li parentName=\"ul\">{`Breadth first`}</li>\n      <li parentName=\"ul\">{`Uniform-cost`}</li>\n      <li parentName=\"ul\">{`Depth-first`}</li>\n      <li parentName=\"ul\">{`Depth-limited`}</li>\n      <li parentName=\"ul\">{`Iterative deepening`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"bfs---breadth-first-search\"\n    }}>{`BFS - Breadth First Search`}</h2>\n    <pre><code parentName=\"pre\" {...{}}>{`Is the first node in the fringe a goal node?\n    Yes => stop and return solution\n    No => expand it:\n        - Move it to the expanded list\n        - Generate its children and put them in the fringe in a order defined by the search strategy\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Properties`}</strong></p>\n    <ul>\n      <li parentName=\"ul\">{`Complete? Yes`}</li>\n      <li parentName=\"ul\">{`Optimal? Not optimal in general; Yes, if step cost is the same, e.g. =1`}</li>\n      <li parentName=\"ul\">{`Time? generated nodes = `}<inlineCode parentName=\"li\">{`1+b+b^2+ ... + b^d = O(b^d)`}</inlineCode>{`, exponential`}</li>\n      <li parentName=\"ul\">{`Space? O(b^d) (keeps every node in memory)`}</li>\n      <li parentName=\"ul\">{`Both time and space are problems as they grow exponentially with depth but space is the bigger problem!`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"ucs---uniform-cost-search\"\n    }}>{`UCS - Uniform Cost Search`}</h2>\n    <ul>\n      <li parentName=\"ul\">{`Complete? Yes ( if step cost>0 )`}</li>\n      <li parentName=\"ul\">{`Optimal? Yes`}</li>\n      <li parentName=\"ul\">{`Time? # nodes with g  cost of optimal solution O(bd)`}</li>\n      <li parentName=\"ul\">{`Space? # nodes with g  cost of optimal solution O(bd)`}</li>\n    </ul>\n    <p>{`UCS is equivalent to BFS if the step cost is 1 or the same`}</p>\n    <h2 {...{\n      \"id\": \"dfs---depth-firth-search\"\n    }}>{`DFS - Depth-Firth Search`}</h2>\n    <ul>\n      <li parentName=\"ul\">{`Expands deepest unexpanded node`}</li>\n      <li parentName=\"ul\">{`Implementation: insert children at the front of the fringe Fringe: A\nExpanded: none`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"ids---iterative-deepening-searh-ids\"\n    }}>{`IDS - Iterative Deepening Searh (IDS)`}</h2>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Sidesteps issue o choosing the best depth limit by trying all possible depth limits in turn (0, 1, 2, etc.) and applying DFS.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Depth-limited search = DFS with depth limit l - i.e. it imposes a cutoff on the maximum depth`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Properties - similar to DFS - Complete? Yes (as the search depth is always finite) - Optimal? No - Time? 1+b^2+b^3+b^4 + ... +b^l = O(b^l) - Space? O(bl)`}</p>\n      </li>\n    </ul>\n    <p><strong parentName=\"p\">{`Overhead of multiple expansion`}</strong></p>\n    <ul>\n      <li parentName=\"ul\">{`May seem wasteful as many nodes are expanded multiple times`}</li>\n      <li parentName=\"ul\">{`But for most problems the overhead of this multiple expansion is small!`}</li>\n    </ul>\n    <p><strong parentName=\"p\">{`Common properties of IDS`}</strong></p>\n    <pre><code parentName=\"pre\" {...{}}>{`b - branching factor\nd - depth of least cost solution\nm - max depth\n`}</code></pre>\n    <ul>\n      <li parentName=\"ul\">{`Combines the benefits of DFS and BFS`}</li>\n      <li parentName=\"ul\">{`Complete? As BFS: - Yes `}{`[DFS: yes, if m is finite; no otherwise]`}{`*`}</li>\n      <li parentName=\"ul\">{`Optimal? As BFS: - No in general; Yes if step cost=1 `}{`[DFS: not optimal, even if step cost=1]`}{` `}{`*`}</li>\n      <li parentName=\"ul\">{`Time? As BFS: - `}<inlineCode parentName=\"li\">{`(d+1)b^0+db^1+(d-1)b^2+ ... +bd = O(b^d) [DFS: O(bm)] *`}</inlineCode></li>\n      <li parentName=\"ul\">{`Space? As DFS: O(bd), linear`}</li>\n      <li parentName=\"ul\">{`Where are the improvements of IDS in comparison to DFS? - in completeness, optimality and time (shown with `}{`*`}{`)`}</li>\n      <li parentName=\"ul\">{`Can be modified to explore uniform-cost tree`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"informed-vs-uninformed-search\"\n    }}>{`Informed vs Uninformed Search`}</h2>\n    <ul>\n      <li parentName=\"ul\">{`A search strategy defines the order of node expansion`}</li>\n    </ul>\n    <p><strong parentName=\"p\">{`Uniformed`}</strong></p>\n    <ul>\n      <li parentName=\"ul\">{`Uninformed search strategies do not use problem specific knowledge beyond the definition of the problem, i.e. they do not use heuristic knowledge. - expand nodes systematically - know if node is goal or non-goal - cannot compare two non-goal nodes (do not know if one goal node is better than another) - typically inefficient`}</li>\n    </ul>\n    <p><strong parentName=\"p\">{`Informed`}</strong></p>\n    <ul>\n      <li parentName=\"ul\">{`Informed search strategies use problem-specific heuristic knowledge to select the order of node expansion. They: - can compare non-goal nodes – they know if one non-goal node is better than another one - are typically more efficient`}</li>\n    </ul>\n    <hr></hr>\n    <h1 {...{\n      \"id\": \"best-first-search\"\n    }}>{`Best First Search`}</h1>\n    <p>{`How can informed strategies compare non-goal nodes?`}</p>\n    <ul>\n      <li parentName=\"ul\">{`By using domain specific knowledge to devise an evaluation function which estimates how good each node is`}</li>\n      <li parentName=\"ul\">{`The evaluation function assigns a value to each node`}</li>\n      <li parentName=\"ul\">{`At each step, the best node is expanded (the one with the best\nvalue)`}</li>\n      <li parentName=\"ul\">{`This is called best-first search - Note that we don’t really know which is the best node as we use an estimate based on the evaluation function. So best-first search expands the node that appears to be the best.`}</li>\n      <li parentName=\"ul\">{`Fringe: insert children in decreasing order of desirability`}</li>\n      <li parentName=\"ul\">{`We will study 2 best-first search algorithms: greedy and A`}{`*`}</li>\n    </ul>\n    <hr></hr>\n    <h2 {...{\n      \"id\": \"greedy-search-gs\"\n    }}>{`Greedy Search (GS)`}</h2>\n    <ul>\n      <li parentName=\"ul\">{`Uses `}<inlineCode parentName=\"li\">{`h`}</inlineCode>{` value as an evaluation function (h - heuristic)`}</li>\n      <li parentName=\"ul\">{`The `}<inlineCode parentName=\"li\">{`h(n)`}</inlineCode>{` for node `}<inlineCode parentName=\"li\">{`n`}</inlineCode>{` is the estimated cost from `}<inlineCode parentName=\"li\">{`n`}</inlineCode>{` to a `}<inlineCode parentName=\"li\">{`goal`}</inlineCode>{` node`}</li>\n      <li parentName=\"ul\">{`Eg for the Romania example we can use `}<inlineCode parentName=\"li\">{`h(n)=SLD(n, Bucharest)`}</inlineCode>{` = straight-line distance from `}<inlineCode parentName=\"li\">{`n`}</inlineCode>{` to Bucharest`}</li>\n      <li parentName=\"ul\">{`The `}<inlineCode parentName=\"li\">{`h`}</inlineCode>{` value of a goal node is 0, i.e. `}<inlineCode parentName=\"li\">{`h(goal)=0`}</inlineCode></li>\n    </ul>\n    <p><strong parentName=\"p\">{`Properties`}</strong></p>\n    <ul>\n      <li parentName=\"ul\">{`Complete? As DFS - Yes in finite spaces (if `}<inlineCode parentName=\"li\">{`m`}</inlineCode>{` is finite) - No - fails in infinite spaces (can get stuck in a loop)`}</li>\n      <li parentName=\"ul\">{`Optimal? No`}</li>\n      <li parentName=\"ul\">{`Time? O(b^m) but good heauristic can give dramatic improvement`}</li>\n      <li parentName=\"ul\">{`Space? O(b^m), keeps every node in memory`}</li>\n    </ul>\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  "]}]}