{"remainingRequest":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/docz-core/node_modules/babel-loader/lib/index.js??ref--6-1!/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/@mdx-js/loader/index.js??ref--6-2!/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/source-map-loader/index.js!/Users/dennis.okeeffe/Project-Imposter/developer-notes/manual/iOS/PassKit.md","dependencies":[{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/manual/iOS/PassKit.md","mtime":1562563032106},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/cache-loader/dist/cjs.js","mtime":1581496618588},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/docz-core/node_modules/babel-loader/lib/index.js","mtime":1578565694890},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/@mdx-js/loader/index.js","mtime":1581496618277},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/source-map-loader/index.js","mtime":1580255490569}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/dennis.okeeffe/Project-Imposter/developer-notes/manual/iOS/PassKit.md"],"names":["React","mdx","makeShortcode","name","MDXDefaultShortcode","props","console","warn","layoutProps","MDXLayout","MDXContent","components","isMDXComponent"],"mappings":"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","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"passkit\"\n    }}>{`PassKit`}</h1>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"#passkit\"\n        }}>{`PassKit`}</a>{`\n- `}<a parentName=\"li\" {...{\n          \"href\": \"#adding-the-certificate\"\n        }}>{`Adding the certificate`}</a>{`\n- `}<a parentName=\"li\" {...{\n          \"href\": \"#php-server\"\n        }}>{`PHP Server`}</a>{`\n- `}<a parentName=\"li\" {...{\n          \"href\": \"#plan-ticket-example\"\n        }}>{`Plan ticket example`}</a>{`\n- `}<a parentName=\"li\" {...{\n          \"href\": \"#store-card-example\"\n        }}>{`Store card example`}</a>{`\n- `}<a parentName=\"li\" {...{\n          \"href\": \"#more-info\"\n        }}>{`More info`}</a></li>\n    </ul>\n    <h2 {...{\n      \"id\": \"adding-the-certificate\"\n    }}>{`Adding the certificate`}</h2>\n    <p>{`Head to the iOS dev portal and add the appropriate certificate.`}</p>\n    <p>{`You may need to open Keychain access to generate a new key using `}<inlineCode parentName=\"p\">{`Keychain Access > Certificate Assistant > Req Cert from Cert Auth`}</inlineCode>{` and generate a new cert. This cert will be used to generate what you need to import into Keychain Access from the dev portal.`}</p>\n    <p>{`Once created, export it to a folder for the server.`}</p>\n    {\n      /* Once created, download the certificate and export it as .p12 to the server which hosts `node-passbook`. You may need to global install as well `npm install -g passbook` to then use `node-passbook prepare-keys -p keys` to convert .p12 to .pem. Make sure you set the PEM passphrase too - it will be needed. */\n    }\n    <h2 {...{\n      \"id\": \"php-server\"\n    }}>{`PHP Server`}</h2>\n    <p>{`Using `}<inlineCode parentName=\"p\">{`composer`}</inlineCode>{`, you can build out a scaffold using the Slim Framework:`}</p>\n    <p><inlineCode parentName=\"p\">{`composer create-project slim/slim-skeleton [project-name]`}</inlineCode>{`.`}</p>\n    <p>{`To install the PHP PassKit helper, run `}<inlineCode parentName=\"p\">{`composer require pkpass/pkpass`}</inlineCode>{`.`}</p>\n    <p>{`Once built, you can then hit the routes and just require the pkpass and the routes file may end up looking like this:`}</p>\n    <h3 {...{\n      \"id\": \"plan-ticket-example\"\n    }}>{`Plan ticket example`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-php\"\n      }}>{`<?php\n// Routes\nuse PKPass\\\\PKPass;\n\n$app->get('/', function ($request, $response, $args) {\n    // Sample log message\n    $this->logger->info(\"Slim-Skeleton '/' route\");\n\n    // Render index view\n    return $this->renderer->render($response, 'sample.phtml', $args);\n});\n\n$app->get('/pass', function ($request, $response, $args) {\n    // Sample log message\n    $this->logger->info(\"Slim-Skeleton '/pass' route\");\n\n    $pass = new PKPass('<name>.p12', '<insert-password>');\n\n    // Pass content\n    $data = [\n        'description' => 'Demo pass',\n        'formatVersion' => 1,\n        'organizationName' => 'Flight Express',\n        'passTypeIdentifier' => 'pass.com.<teamname>.<passname>', // Change this!\n        'serialNumber' => '12345678',\n        'teamIdentifier' => '<insert-team-id>', // Change this! Found on Apple Dev Portal\n        'boardingPass' => [\n            'primaryFields' => [\n                [\n                    'key' => 'origin',\n                    'label' => 'San Francisco',\n                    'value' => 'SFO',\n                ],\n                [\n                    'key' => 'destination',\n                    'label' => 'London',\n                    'value' => 'LHR',\n                ],\n            ],\n            'secondaryFields' => [\n                [\n                    'key' => 'gate',\n                    'label' => 'Gate',\n                    'value' => 'F12',\n                ],\n                [\n                    'key' => 'date',\n                    'label' => 'Departure date',\n                    'value' => '07/11/2012 10:22',\n                ],\n            ],\n            'backFields' => [\n                [\n                    'key' => 'passenger-name',\n                    'label' => 'Passenger',\n                    'value' => 'John Appleseed',\n                ],\n            ],\n            'transitType' => 'PKTransitTypeAir',\n        ],\n        'barcode' => [\n            'format' => 'PKBarcodeFormatQR',\n            'message' => 'Flight-GateF12-ID6643679AH7B',\n            'messageEncoding' => 'iso-8859-1',\n        ],\n        'backgroundColor' => 'rgb(32,110,247)',\n        'logoText' => 'Flight info',\n        'relevantDate' => date('Y-m-d\\\\TH:i:sP')\n    ];\n\n    $pass->setWWDRcertPath('<path to wwdr.pem>');\n    $pass->setData($data);\n\n    // Add files to the pass package\n    $pass->addFile('public/icon.png');\n    $pass->addFile('public/icon@2x.png');\n    $pass->addFile('public/logo.png');\n\n    if($pass->checkError($error) == true) {\n        // echo $error;\n        // exit('An error occured: ' . $error);\n    }\n\n    // echo 'Here';\n\n    $result = $pass->create(true);\n    if($result == false) {\n        echo $pass->getError();\n    }\n    // Render index view\n    return $result;\n});\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"store-card-example\"\n    }}>{`Store card example`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-php\"\n      }}>{`<?php\n// Routes\nuse PKPass\\\\PKPass;\n\n$app->get('/', function ($request, $response, $args) {\n    // Sample log message\n    $this->logger->info(\"Slim-Skeleton '/' route\");\n\n    // Render index view\n    return $this->renderer->render($response, 'sample.phtml', $args);\n});\n\n$app->get('/pass', function ($request, $response, $args) {\n    // Sample log message\n    $this->logger->info(\"Slim-Skeleton '/pass' route\");\n\n    $pass = new PKPass('<key-path>', 'password');\n\n    // Pass content\n    $data = [\n        'formatVersion' => 1,\n        'organizationName' => 'Testing',\n        'passTypeIdentifier' => 'pass.com.<id>.<app>', // Change this!\n        'serialNumber' => '12345678',\n        'teamIdentifier' => '<team-id>', // Change this!\n        'logoText' => 'Loyalty',\n        'description' => 'Rewards card',\n        'storeCard' => [\n            'secondaryFields' => [\n                [\n                    'key' => 'balance',\n                    'label' => 'BALANCE',\n                    'value' => '$250.00'\n                ],\n                [\n                    'key' => 'name',\n                    'label' => 'NICKNAME',\n                    'value' => 'Denno'\n                ],\n            ],\n            'backFields' => [\n                [\n                    'key' => 'owner-name',\n                    'label' => 'Rewards Card',\n                    'value' => 'John Appleseed'\n                ],\n            ]\n        ],\n        'barcode' => [\n            'format' => 'PKBarcodeFormatPDF417',\n            'message' => 'ID6643679AH7B',\n            'messageEncoding' => 'iso-8859-1',\n            'altText' => 'ID6643679AH7B'\n        ],\n        'backgroundColor' => 'rgb(32,110,247)',\n        'logoText' => 'Dummy card info'\n    ];\n\n    $pass->setWWDRcertPath('<wwdr-key>');\n    $pass->setData($data);\n\n    // Add files to the pass package\n    $pass->addFile('public/icon.png');\n    $pass->addFile('public/icon@2x.png');\n    $pass->addFile('public/logo.png');\n\n    if($pass->checkError($error) == true) {\n        // echo $error;\n        // exit('An error occured: ' . $error);\n    }\n\n    // echo 'Here';\n\n    $result = $pass->create(true);\n    if($result == false) {\n        echo $pass->getError();\n    }\n    // Render index view\n    return $result;\n});\n\n?>\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"more-info\"\n    }}>{`More info`}</h2>\n    <p>{`If you need to generate a wwdr cert, you can globally install `}<inlineCode parentName=\"p\">{`passbook`}</inlineCode>{` eg. `}<inlineCode parentName=\"p\">{`node install -g passbook`}</inlineCode>{` and run a command like `}<inlineCode parentName=\"p\">{`node-passbook prepare-keys -p <folder-hosting-exported-keys>`}</inlineCode>{` and it can do the conversion for you. Make sure you don't forget the password, though.`}</p>\n    <p>{`Some changes you may need to make are passing `}<inlineCode parentName=\"p\">{`POST`}</inlineCode>{` variables to change it for each user.`}</p>\n    <p>{`If you need to change the JSON structure above, refer to `}<a parentName=\"p\" {...{\n        \"href\": \"https://developer.apple.com/library/content/documentation/UserExperience/Reference/PassKit_Bundle/Chapters/Introduction.html\"\n      }}>{`https://developer.apple.com/library/content/documentation/UserExperience/Reference/PassKit_Bundle/Chapters/Introduction.html`}</a>{` for more info.`}</p>\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  "]}]}