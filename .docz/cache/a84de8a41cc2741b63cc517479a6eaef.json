{"remainingRequest":"/Users/okeeffe_d/Business/Documentation/node_modules/babel-loader/lib/index.js?{\"presets\":[[\"/Users/okeeffe_d/Business/Documentation/node_modules/babel-preset-docz/dist/index.js\",{\"flow\":true,\"typescript\":false,\"parseProps\":true}]],\"plugins\":[[\"/Users/okeeffe_d/Business/Documentation/node_modules/docz-utils/lib/named-asset-import.js\",{\"loaderMap\":{\"svg\":{\"ReactComponent\":\"@svgr/webpack?-prettier,-svgo![path]\"}}}]],\"babelrc\":false,\"cacheCompression\":true,\"compact\":true}!/Users/okeeffe_d/Business/Documentation/manual/Terraform/Terraform.md","dependencies":[{"path":"/Users/okeeffe_d/Business/Documentation/manual/Terraform/Terraform.md","mtime":1548209344475},{"path":"/Users/okeeffe_d/Business/Documentation/node_modules/cache-loader/dist/cjs.js","mtime":1548134640245},{"path":"/Users/okeeffe_d/Business/Documentation/node_modules/babel-loader/lib/index.js","mtime":1548134640227}],"contextDependencies":[],"result":["function _typeof(obj){if(typeof Symbol===\"function\"&&typeof Symbol.iterator===\"symbol\"){_typeof=function _typeof(obj){return typeof obj;};}else{_typeof=function _typeof(obj){return obj&&typeof Symbol===\"function\"&&obj.constructor===Symbol&&obj!==Symbol.prototype?\"symbol\":typeof obj;};}return _typeof(obj);}function _objectWithoutProperties(source,excluded){if(source==null)return{};var target=_objectWithoutPropertiesLoose(source,excluded);var key,i;if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++){key=sourceSymbolKeys[i];if(excluded.indexOf(key)>=0)continue;if(!Object.prototype.propertyIsEnumerable.call(source,key))continue;target[key]=source[key];}}return target;}function _objectWithoutPropertiesLoose(source,excluded){if(source==null)return{};var target={};var sourceKeys=Object.keys(source);var key,i;for(i=0;i<sourceKeys.length;i++){key=sourceKeys[i];if(excluded.indexOf(key)>=0)continue;target[key]=source[key];}return target;}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\");}}function _defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}function _createClass(Constructor,protoProps,staticProps){if(protoProps)_defineProperties(Constructor.prototype,protoProps);if(staticProps)_defineProperties(Constructor,staticProps);return Constructor;}function _possibleConstructorReturn(self,call){if(call&&(_typeof(call)===\"object\"||typeof call===\"function\")){return call;}return _assertThisInitialized(self);}function _assertThisInitialized(self){if(self===void 0){throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");}return self;}function _getPrototypeOf(o){_getPrototypeOf=Object.setPrototypeOf?Object.getPrototypeOf:function _getPrototypeOf(o){return o.__proto__||Object.getPrototypeOf(o);};return _getPrototypeOf(o);}function _inherits(subClass,superClass){if(typeof superClass!==\"function\"&&superClass!==null){throw new TypeError(\"Super expression must either be null or a function\");}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,writable:true,configurable:true}});if(superClass)_setPrototypeOf(subClass,superClass);}function _setPrototypeOf(o,p){_setPrototypeOf=Object.setPrototypeOf||function _setPrototypeOf(o,p){o.__proto__=p;return o;};return _setPrototypeOf(o,p);}import React from'react';import{MDXTag}from'@mdx-js/tag';var MDXContent=/*#__PURE__*/function(_React$Component){_inherits(MDXContent,_React$Component);function MDXContent(props){var _this;_classCallCheck(this,MDXContent);_this=_possibleConstructorReturn(this,_getPrototypeOf(MDXContent).call(this,props));_this.layout=null;return _this;}_createClass(MDXContent,[{key:\"render\",value:function render(){var _this$props=this.props,components=_this$props.components,props=_objectWithoutProperties(_this$props,[\"components\"]);return React.createElement(MDXTag,{name:\"wrapper\",components:components},React.createElement(MDXTag,{name:\"h1\",components:components,props:{\"id\":\"terraform\"}},\"Terraform\"),React.createElement(MDXTag,{name:\"h2\",components:components,props:{\"id\":\"course-content\"}},\"Course Content\"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{\"className\":\"language-bash\"}},\"# Use this to get the content\\n$ git clone https://github.com/wardviaene/terraform-course\\n\")),React.createElement(MDXTag,{name:\"h2\",components:components,props:{\"id\":\"useful-terraform-commands\"}},\"Useful Terraform Commands\"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{\"className\":\"language-bash\"}},\"$ terraform plan # plan\\n$ terraform apply # shortcut for plan and apply - avoid in production\\n$ terraform plan -out out.terraform # terraform and write the plan to out file\\n$ terraform apply out.terraform # apply terraform plan using out file\\n$ terraform show # show current state\\n$ cat terraform.tfstate\\n\")),React.createElement(MDXTag,{name:\"h2\",components:components,props:{\"id\":\"what-is-terraform\"}},\"What is Terraform?\"),React.createElement(MDXTag,{name:\"ul\",components:components},React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"Infrastructure as \",React.createElement(MDXTag,{name:\"strong\",components:components,parentName:\"li\"},\"code\")),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},React.createElement(MDXTag,{name:\"strong\",components:components,parentName:\"li\"},\"Automation\"),\" of infrastructure\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"Keep our infrastructure in a certain state (compliant)\",React.createElement(MDXTag,{name:\"ul\",components:components,parentName:\"li\"},React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"e.g. 2 web instances with 2 volumes + 1 load balancer\"))),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"Make infrastructure \",React.createElement(MDXTag,{name:\"strong\",components:components,parentName:\"li\"},\"auditable\"),React.createElement(MDXTag,{name:\"ul\",components:components,parentName:\"li\"},React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"You can keep your infrastructure change history in a \",React.createElement(MDXTag,{name:\"strong\",components:components,parentName:\"li\"},\"version control\"),\" system like GIT\"))),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"Terraform can automate provisioning of the \",React.createElement(MDXTag,{name:\"strong\",components:components,parentName:\"li\"},\"infrastructure itself\"),\". \")),React.createElement(MDXTag,{name:\"h2\",components:components,props:{\"id\":\"installation-of-terraform\"}},\"Installation of Terraform\"),React.createElement(MDXTag,{name:\"p\",components:components},\"Head onto the Terraform website, download the .zip file and then move the binary after unzipping into your path to access it from the CLI.\"),React.createElement(MDXTag,{name:\"h2\",components:components,props:{\"id\":\"hello-terraform\"}},\"Hello Terraform!\"),React.createElement(MDXTag,{name:\"p\",components:components},\"Example hello using Terraform to spin up an EC2 micro instance.\"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{\"className\":\"language-kotlin\"}},\"provider \\\"aws\\\" {\\n  access_key = \\\"ACCESS_KEY_HERE\\\"\\n  secret_key = \\\"SECRET_KEY_HERE\\\"\\n  region     = \\\"ap-southeast-1\\\"\\n}\\n\\nresource \\\"aws_instance\\\" \\\"example\\\" {\\n  ami           = \\\"ami-0d729a60\\\"\\n  instance_type = \\\"t2.micro\\\"\\n}\\n\")),React.createElement(MDXTag,{name:\"p\",components:components},\"To initialise and spin up the instance, run the following:\"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{\"className\":\"language-bash\"}},\"$ terraform init\\n$ terraform plan -out file.terraform\\n$ terraform apply file.terraform\\n$ terraform destory # tear down the instance\\n\")),React.createElement(MDXTag,{name:\"h2\",components:components,props:{\"id\":\"variables\"}},\"Variables\"),React.createElement(MDXTag,{name:\"p\",components:components},\"To create variables, we create two files \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"provider.tf\"),\" and \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"vars.tf\"),\" that we can commit and one git ignored file \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"terraform.tfvars\"),\" to store these private variables in.\"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{\"className\":\"language-kotlin\"}},\"# provider.tf\\nprovider \\\"aws\\\" {\\n    access_key=\\\"${var.AWS_ACCESS_KEY}\\\"\\n    secret_key=\\\"${var.AWS_SECRET_KEY}\\\"\\n    region=\\\"${var.AWS_REGION}\\\"\\n}\\n\\n# vars.tf\\nvariable \\\"AWS_ACCESS_KEY\\\" {}\\nvariable \\\"AWS_SECRET_KEY\\\" {}\\nvariable \\\"AWS_REGION\\\" {\\n    default = \\\"ap-southeast-2\\\"\\n}\\n\\n# terraform.tfvars\\nAWS_ACCESS_KEY=\\\"\\\"\\nAWS_SECRET_KEY=\\\"\\\"\\nAWS_REGION=\\\"\\\"\\n\")),React.createElement(MDXTag,{name:\"p\",components:components},\"For env vars: Terraform will read environment variables in the form of \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"TF_VAR_name\"),\" to find the value for a variable. For example, the \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"TF_VAR_access_key\"),\" variable can be set to set the \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"access_key\"),\" variable.\"),React.createElement(MDXTag,{name:\"h3\",components:components,props:{\"id\":\"lookup-examples\"}},\"Lookup examples\"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{\"className\":\"language-kotlin\"}},\"# instance.tf\\nresource \\\"aws_instance\\\" \\\"example\\\" {\\n  ami           = \\\"${lookup(var.AMIS, var.AWS_REGION)}\\\"\\n  instance_type = \\\"t2.micro\\\"\\n}\\n\\n# provider.tf\\nprovider \\\"aws\\\" {\\n    access_key = \\\"${var.AWS_ACCESS_KEY}\\\"\\n    secret_key = \\\"${var.AWS_SECRET_KEY}\\\"\\n    region = \\\"${var.AWS_REGION}\\\"\\n}\\n\\n# vars.tf\\nvariable \\\"AWS_ACCESS_KEY\\\" {}\\nvariable \\\"AWS_SECRET_KEY\\\" {}\\nvariable \\\"AWS_REGION\\\" {\\n  default = \\\"eu-west-1\\\"\\n}\\nvariable \\\"AMIS\\\" {\\n  type = \\\"map\\\"\\n  default = {\\n    us-east-1 = \\\"ami-13be557e\\\"\\n    us-west-2 = \\\"ami-06b94666\\\"\\n    eu-west-1 = \\\"ami-0d729a60\\\"\\n  }\\n}\\n\\n# terraform.tfvars\\nAWS_ACCESS_KEY=\\\"\\\"\\nAWS_SECRET_KEY=\\\"\\\"\\nAWS_REGION=\\\"\\\"\\n\")),React.createElement(MDXTag,{name:\"p\",components:components},\"For info on which ami results from where, checkout \",React.createElement(MDXTag,{name:\"a\",components:components,parentName:\"p\",props:{\"href\":\"https://cloud-images.ubuntu.com/locator/ec2/\"}},\"https://cloud-images.ubuntu.com/locator/ec2/\"),\".\"),React.createElement(MDXTag,{name:\"h2\",components:components,props:{\"id\":\"software-provisioning\"}},\"Software Provisioning\"),React.createElement(MDXTag,{name:\"p\",components:components},\"There are 2 ways to provision software:\"),React.createElement(MDXTag,{name:\"ol\",components:components},React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ol\"},React.createElement(MDXTag,{name:\"p\",components:components,parentName:\"li\"},\"Build your own custom AMI (ie Packer).\")),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ol\"},React.createElement(MDXTag,{name:\"p\",components:components,parentName:\"li\"},\"Another way is to be standardized AMIs and then install the software you need on it: \"),React.createElement(MDXTag,{name:\"ul\",components:components,parentName:\"li\"},React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},React.createElement(MDXTag,{name:\"p\",components:components,parentName:\"li\"},\"Use file uploads\")),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},React.createElement(MDXTag,{name:\"p\",components:components,parentName:\"li\"},\"Use remote exec\")),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},React.createElement(MDXTag,{name:\"p\",components:components,parentName:\"li\"},\"Use automation tools like chef, puppet, ansible\"))))),React.createElement(MDXTag,{name:\"h3\",components:components,props:{\"id\":\"file-uploads\"}},\"File Uploads\"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{\"className\":\"language-kotlin\"}},\"# instance.tf\\nresource \\\"aws_instance\\\" \\\"example\\\" {\\n    ami           = \\\"${lookup(var.AMIS, var.AWS_REGION)}\\\"\\n    instance_type = \\\"t2.micro\\\"\\n    \\n    provisioner \\\"file\\\" {\\n        source = \\\"app.conf\\\"\\n        destination = \\\"/etc/myapp.conf\\\"\\n    }\\n}\\n\")),React.createElement(MDXTag,{name:\"p\",components:components},\"The provisioner will have to use SSH etc.\"),React.createElement(MDXTag,{name:\"p\",components:components},\"Another example with the connection:\"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{\"className\":\"language-kotlin\"}},\"# instance.tf\\nresource \\\"aws_instance\\\" \\\"example\\\" {\\n    ami           = \\\"${lookup(var.AMIS, var.AWS_REGION)}\\\"\\n    instance_type = \\\"t2.micro\\\"\\n    # IF SSH\\n    key_name = \\\"${aws_key_pem.mykey.key_name}\\\"\\n    # ENDIF\\n    \\n    provisioner \\\"file\\\" {\\n        source = \\\"app.conf\\\"\\n        destination = \\\"/etc/myapp.conf\\\"\\n        # ! FOR PASSWORD\\n        connection {\\n            user = \\\"${var.instance_username}\\\"\\n            password = \\\"${var.instance_password}\\\"\\n        }\\n        \\n        connection {\\n            user = \\\"${var.instance_username}\\\"\\n            private_key = \\\"${file(${var.path_to_private_key})}\\\"\\n        }\\n    }\\n    \\n    # IF YOU UPLOAD A .sh FILE AND WANT TO RUN IT\\n    provisioner \\\"remote-exec\\\" {\\n        inline = [\\n            \\\"chmod +x /path/to/script.sh\\\",\\n            \\\"/path/to/script.sh arguments\\\"\\n        ]\\n    }\\n}\\n\")),React.createElement(MDXTag,{name:\"h2\",components:components,props:{\"id\":\"attributes\"}},\"Attributes\"),React.createElement(MDXTag,{name:\"h2\",components:components,props:{\"id\":\"state\"}},\"State\"),React.createElement(MDXTag,{name:\"p\",components:components},\"Terraform keeps state in \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"terraform.tfstate\"),\".\"),React.createElement(MDXTag,{name:\"p\",components:components},\"To configure, you add a file \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"backend.tf\"),\":\"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{\"className\":\"language-kotlin\"}},\"terraform {\\n    # IF Consul\\n    backend \\\"consul\\\" {\\n        address = \\\"demo.consul.io\\\" # host name of consul cluster\\n        path = \\\"terraform/myproject\\\"\\n    }\\n    \\n    # ELSEIF S3\\n    backend \\\"s3\\\" {\\n        bucket = \\\"bucket\\\"\\n        key = \\\"terraform/myproject\\\"\\n        region = \\\"ap-southeast-2\\\"\\n    }\\n    \\n    #ENDIF\\n}\\n\")),React.createElement(MDXTag,{name:\"p\",components:components},React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"$ terraform init\"),\" will do what you require for it all to work.\"),React.createElement(MDXTag,{name:\"h2\",components:components,props:{\"id\":\"data-sources\"}},\"Data Sources\"),React.createElement(MDXTag,{name:\"p\",components:components},\"Provide you with dynamic information.\"),React.createElement(MDXTag,{name:\"ul\",components:components},React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"A lot of data is available by AWS in a structured format using their API\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"Terraform also exposes this info using data sources.\")),React.createElement(MDXTag,{name:\"p\",components:components},\"Examples include the list of AMIs, list of AZs etc.\"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{\"className\":\"language-kotlin\"}},\"# provider.tf\\nprovider \\\"aws\\\" { \\n    region = \\\"${var.AWS_REGION}\\\"\\n}\\n\\n# securitygroup.tf\\ndata \\\"aws_ip_ranges\\\" \\\"european_ec2\\\" {\\n  regions = [ \\\"eu-west-1\\\", \\\"eu-central-1\\\" ]\\n  services = [ \\\"ec2\\\" ]\\n}\\n\\nresource \\\"aws_security_group\\\" \\\"from_europe\\\" {\\n name = \\\"from_europe\\\"\\n\\n  ingress {\\n    from_port = \\\"443\\\"\\n    to_port = \\\"443\\\"\\n    protocol = \\\"tcp\\\"\\n    cidr_blocks = [ \\\"${data.aws_ip_ranges.european_ec2.cidr_blocks}\\\" ]\\n  }\\n  tags {\\n    CreateDate = \\\"${data.aws_ip_ranges.european_ec2.create_date}\\\"\\n    SyncToken = \\\"${data.aws_ip_ranges.european_ec2.sync_token}\\\"\\n  }\\n\\n}\\n\\n# vars.tf\\nvariable \\\"AWS_REGION\\\" {\\n  default = \\\"eu-west-1\\\"\\n}\\nvariable \\\"AMIS\\\" {\\n  type = \\\"map\\\"\\n  default = {\\n    us-east-1 = \\\"ami-13be557e\\\"\\n    us-west-2 = \\\"ami-06b94666\\\"\\n    eu-west-1 = \\\"ami-844e0bf7\\\"\\n  }\\n}\\n\")),React.createElement(MDXTag,{name:\"h2\",components:components,props:{\"id\":\"templates\"}},\"Templates\"),React.createElement(MDXTag,{name:\"p\",components:components},\"Can help create \",React.createElement(MDXTag,{name:\"strong\",components:components,parentName:\"p\"},\"customized configuration files\"),\".\"),React.createElement(MDXTag,{name:\"h2\",components:components,props:{\"id\":\"modules\"}},\"Modules\"),React.createElement(MDXTag,{name:\"p\",components:components},\"Help to make your terraform more organised. \"),React.createElement(MDXTag,{name:\"p\",components:components},\"You can also use third party modules (like modules from Github).\"),React.createElement(MDXTag,{name:\"p\",components:components},\"It also helps to \",React.createElement(MDXTag,{name:\"strong\",components:components,parentName:\"p\"},\"reuse\"),\" parts of your code (eg set up network in AWS - VPC).\"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{\"className\":\"language-kotlin\"}},\"# Install form git\\nmodule \\\"module-example\\\" {\\n    source = \\\"github.com/wardviaene/terraform-module-example\\\"\\n}\\n\\n# Use module from local folder\\nmodule \\\"module-example\\\" {\\n    source = \\\"./module-example\\\"\\n}\\n\\n# A module passing arguments \\nmodule \\\"module-example\\\" {\\n    source = \\\"./module-example\\\"\\n    region = \\\"us-west-1\\\"\\n    ip-range = \\\"10.0.0.0/8\\\"\\n    cluster-size = \\\"3\\\"\\n}\\n\")),React.createElement(MDXTag,{name:\"p\",components:components},\"Inside of the module folder, you can also have Terraform files:\"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{\"className\":\"language-kotlin\"}},\"# module-example/vars.tf\\nvariable \\\"region\\\" {}\\nvariable \\\"ip-range\\\" {}\\nvariable \\\"cluster-size\\\" {}\\n\\n# module-example/cluster.tf\\nresource \\\"aws_instance\\\" \\\"instance-1\\\" { ... }\\nresource \\\"aws_instance\\\" \\\"instance-2\\\" { ... }\\nresource \\\"aws_instance\\\" \\\"instance-3\\\" { ... }\\n\\n# module-example/output.tf\\noutput \\\"aws-cluster\\\" {\\n    value = \\\"${aws_instance.instance-1.publicip}\\\"\\n}\\n\")),React.createElement(MDXTag,{name:\"p\",components:components},\"You use the output from the module in the main part of your code!\"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{\"className\":\"language-kotlin\"}},\"output \\\"some-output\\\" {\\n    value = \\\"${module.module-example.aws-cluster}\\\"\\n}\\n\")),React.createElement(MDXTag,{name:\"h3\",components:components,props:{\"id\":\"downloading-a-module\"}},\"Downloading a module\"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{\"className\":\"language-kotlin\"}},\"terraform get # this will fetch the modules and store it in .terraform/modules/\\n\")),React.createElement(MDXTag,{name:\"h2\",components:components,props:{\"id\":\"terraform-command-overview\"}},\"Terraform Command Overview\"),React.createElement(MDXTag,{name:\"table\",components:components},React.createElement(MDXTag,{name:\"thead\",components:components,parentName:\"table\"},React.createElement(MDXTag,{name:\"tr\",components:components,parentName:\"thead\"},React.createElement(MDXTag,{name:\"th\",components:components,parentName:\"tr\",props:{\"align\":null}},\"Command\"),React.createElement(MDXTag,{name:\"th\",components:components,parentName:\"tr\",props:{\"align\":null}},\"Description\"))),React.createElement(MDXTag,{name:\"tbody\",components:components,parentName:\"table\"},React.createElement(MDXTag,{name:\"tr\",components:components,parentName:\"tbody\"},React.createElement(MDXTag,{name:\"td\",components:components,parentName:\"tr\",props:{\"align\":null}},\"terraform apply\"),React.createElement(MDXTag,{name:\"td\",components:components,parentName:\"tr\",props:{\"align\":null}},\"Applies state.\")),React.createElement(MDXTag,{name:\"tr\",components:components,parentName:\"tbody\"},React.createElement(MDXTag,{name:\"td\",components:components,parentName:\"tr\",props:{\"align\":null}},\"destroy\"),React.createElement(MDXTag,{name:\"td\",components:components,parentName:\"tr\",props:{\"align\":null}},\"Destroys all Terraform managed state.\")),React.createElement(MDXTag,{name:\"tr\",components:components,parentName:\"tbody\"},React.createElement(MDXTag,{name:\"td\",components:components,parentName:\"tr\",props:{\"align\":null}},\"fmt\"),React.createElement(MDXTag,{name:\"td\",components:components,parentName:\"tr\",props:{\"align\":null}},\"Rewrite terraform config files to canonical format and style.\")),React.createElement(MDXTag,{name:\"tr\",components:components,parentName:\"tbody\"},React.createElement(MDXTag,{name:\"td\",components:components,parentName:\"tr\",props:{\"align\":null}},\"get\"),React.createElement(MDXTag,{name:\"td\",components:components,parentName:\"tr\",props:{\"align\":null}},\"Download and update modules.\")),React.createElement(MDXTag,{name:\"tr\",components:components,parentName:\"tbody\"},React.createElement(MDXTag,{name:\"td\",components:components,parentName:\"tr\",props:{\"align\":null}},\"graph\"),React.createElement(MDXTag,{name:\"td\",components:components,parentName:\"tr\",props:{\"align\":null}},\"Create a visual representation of a configuration or execution plan.\")),React.createElement(MDXTag,{name:\"tr\",components:components,parentName:\"tbody\"},React.createElement(MDXTag,{name:\"td\",components:components,parentName:\"tr\",props:{\"align\":null}},React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"td\"},\"import <options> <ADDRESS> <ID>\")),React.createElement(MDXTag,{name:\"td\",components:components,parentName:\"tr\",props:{\"align\":null}},\"Find infrastructure resource identified with ID and import the state into terraform.tfstate with resource id ADDRESS.\")),React.createElement(MDXTag,{name:\"tr\",components:components,parentName:\"tbody\"},React.createElement(MDXTag,{name:\"td\",components:components,parentName:\"tr\",props:{\"align\":null}},React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"td\"},\"output <options> <NAME>\")),React.createElement(MDXTag,{name:\"td\",components:components,parentName:\"tr\",props:{\"align\":null}},\"Output any of your resources.\")),React.createElement(MDXTag,{name:\"tr\",components:components,parentName:\"tbody\"},React.createElement(MDXTag,{name:\"td\",components:components,parentName:\"tr\",props:{\"align\":null}},\"plan\"),React.createElement(MDXTag,{name:\"td\",components:components,parentName:\"tr\",props:{\"align\":null}},\"Show changes made to infrastructure.\")),React.createElement(MDXTag,{name:\"tr\",components:components,parentName:\"tbody\"},React.createElement(MDXTag,{name:\"td\",components:components,parentName:\"tr\",props:{\"align\":null}},\"refresh\"),React.createElement(MDXTag,{name:\"td\",components:components,parentName:\"tr\",props:{\"align\":null}},\"Refresh the remote state. Can identify differences between state file and remote state.\")),React.createElement(MDXTag,{name:\"tr\",components:components,parentName:\"tbody\"},React.createElement(MDXTag,{name:\"td\",components:components,parentName:\"tr\",props:{\"align\":null}},\"remote\"),React.createElement(MDXTag,{name:\"td\",components:components,parentName:\"tr\",props:{\"align\":null}},\"Configure remote state storage.\")),React.createElement(MDXTag,{name:\"tr\",components:components,parentName:\"tbody\"},React.createElement(MDXTag,{name:\"td\",components:components,parentName:\"tr\",props:{\"align\":null}},\"show\"),React.createElement(MDXTag,{name:\"td\",components:components,parentName:\"tr\",props:{\"align\":null}},\"Show human readable output from a state or a plan.\")),React.createElement(MDXTag,{name:\"tr\",components:components,parentName:\"tbody\"},React.createElement(MDXTag,{name:\"td\",components:components,parentName:\"tr\",props:{\"align\":null}},\"state\"),React.createElement(MDXTag,{name:\"td\",components:components,parentName:\"tr\",props:{\"align\":null}},\"Used for advanced state management eg rename resource\")),React.createElement(MDXTag,{name:\"tr\",components:components,parentName:\"tbody\"},React.createElement(MDXTag,{name:\"td\",components:components,parentName:\"tr\",props:{\"align\":null}},\"taint\"),React.createElement(MDXTag,{name:\"td\",components:components,parentName:\"tr\",props:{\"align\":null}},\"Destroy and recreate resource.\")),React.createElement(MDXTag,{name:\"tr\",components:components,parentName:\"tbody\"},React.createElement(MDXTag,{name:\"td\",components:components,parentName:\"tr\",props:{\"align\":null}},\"validate\"),React.createElement(MDXTag,{name:\"td\",components:components,parentName:\"tr\",props:{\"align\":null}},\"Validate terraform syntax.\")),React.createElement(MDXTag,{name:\"tr\",components:components,parentName:\"tbody\"},React.createElement(MDXTag,{name:\"td\",components:components,parentName:\"tr\",props:{\"align\":null}},\"untaint\"),React.createElement(MDXTag,{name:\"td\",components:components,parentName:\"tr\",props:{\"align\":null}},\"Undo a taint.\")))),React.createElement(MDXTag,{name:\"h2\",components:components,props:{\"id\":\"\"}}));}}]);return MDXContent;}(React.Component);export{MDXContent as default};MDXContent.__docgenInfo={\"description\":\"\",\"methods\":[],\"displayName\":\"MDXContent\"};",{"version":3,"sources":["/Users/okeeffe_d/Business/Documentation/manual/Terraform/Terraform.md"],"names":["React","MDXTag","MDXContent","props","layout","components","Component"],"mappings":"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","sourcesContent":["\n  import React from 'react'\n  import { MDXTag } from '@mdx-js/tag'\n  \n\nexport default class MDXContent extends React.Component {\n  constructor(props) {\n    super(props)\n    this.layout = null\n  }\n  render() {\n    const { components, ...props } = this.props\n\n    return <MDXTag\n             name=\"wrapper\"\n             \n             components={components}><MDXTag name=\"h1\" components={components} props={{\"id\":\"terraform\"}}>{`Terraform`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"course-content\"}}>{`Course Content`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-bash\"}}>{`# Use this to get the content\n\\$ git clone https://github.com/wardviaene/terraform-course\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"useful-terraform-commands\"}}>{`Useful Terraform Commands`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-bash\"}}>{`\\$ terraform plan # plan\n\\$ terraform apply # shortcut for plan and apply - avoid in production\n\\$ terraform plan -out out.terraform # terraform and write the plan to out file\n\\$ terraform apply out.terraform # apply terraform plan using out file\n\\$ terraform show # show current state\n\\$ cat terraform.tfstate\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"what-is-terraform\"}}>{`What is Terraform?`}</MDXTag>\n<MDXTag name=\"ul\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Infrastructure as `}<MDXTag name=\"strong\" components={components} parentName=\"li\">{`code`}</MDXTag></MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"strong\" components={components} parentName=\"li\">{`Automation`}</MDXTag>{` of infrastructure`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Keep our infrastructure in a certain state (compliant)`}<MDXTag name=\"ul\" components={components} parentName=\"li\">\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`e.g. 2 web instances with 2 volumes + 1 load balancer`}</MDXTag>\n</MDXTag></MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Make infrastructure `}<MDXTag name=\"strong\" components={components} parentName=\"li\">{`auditable`}</MDXTag><MDXTag name=\"ul\" components={components} parentName=\"li\">\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`You can keep your infrastructure change history in a `}<MDXTag name=\"strong\" components={components} parentName=\"li\">{`version control`}</MDXTag>{` system like GIT`}</MDXTag>\n</MDXTag></MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Terraform can automate provisioning of the `}<MDXTag name=\"strong\" components={components} parentName=\"li\">{`infrastructure itself`}</MDXTag>{`. `}</MDXTag>\n</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"installation-of-terraform\"}}>{`Installation of Terraform`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Head onto the Terraform website, download the .zip file and then move the binary after unzipping into your path to access it from the CLI.`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"hello-terraform\"}}>{`Hello Terraform!`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Example hello using Terraform to spin up an EC2 micro instance.`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-kotlin\"}}>{`provider \"aws\" {\n  access_key = \"ACCESS_KEY_HERE\"\n  secret_key = \"SECRET_KEY_HERE\"\n  region     = \"ap-southeast-1\"\n}\n\nresource \"aws_instance\" \"example\" {\n  ami           = \"ami-0d729a60\"\n  instance_type = \"t2.micro\"\n}\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`To initialise and spin up the instance, run the following:`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-bash\"}}>{`\\$ terraform init\n\\$ terraform plan -out file.terraform\n\\$ terraform apply file.terraform\n\\$ terraform destory # tear down the instance\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"variables\"}}>{`Variables`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`To create variables, we create two files `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`provider.tf`}</MDXTag>{` and `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`vars.tf`}</MDXTag>{` that we can commit and one git ignored file `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`terraform.tfvars`}</MDXTag>{` to store these private variables in.`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-kotlin\"}}>{`# provider.tf\nprovider \"aws\" {\n    access_key=\"\\${var.AWS_ACCESS_KEY}\"\n    secret_key=\"\\${var.AWS_SECRET_KEY}\"\n    region=\"\\${var.AWS_REGION}\"\n}\n\n# vars.tf\nvariable \"AWS_ACCESS_KEY\" {}\nvariable \"AWS_SECRET_KEY\" {}\nvariable \"AWS_REGION\" {\n    default = \"ap-southeast-2\"\n}\n\n# terraform.tfvars\nAWS_ACCESS_KEY=\"\"\nAWS_SECRET_KEY=\"\"\nAWS_REGION=\"\"\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`For env vars: Terraform will read environment variables in the form of `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`TF_VAR_name`}</MDXTag>{` to find the value for a variable. For example, the `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`TF_VAR_access_key`}</MDXTag>{` variable can be set to set the `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`access_key`}</MDXTag>{` variable.`}</MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"lookup-examples\"}}>{`Lookup examples`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-kotlin\"}}>{`# instance.tf\nresource \"aws_instance\" \"example\" {\n  ami           = \"\\${lookup(var.AMIS, var.AWS_REGION)}\"\n  instance_type = \"t2.micro\"\n}\n\n# provider.tf\nprovider \"aws\" {\n    access_key = \"\\${var.AWS_ACCESS_KEY}\"\n    secret_key = \"\\${var.AWS_SECRET_KEY}\"\n    region = \"\\${var.AWS_REGION}\"\n}\n\n# vars.tf\nvariable \"AWS_ACCESS_KEY\" {}\nvariable \"AWS_SECRET_KEY\" {}\nvariable \"AWS_REGION\" {\n  default = \"eu-west-1\"\n}\nvariable \"AMIS\" {\n  type = \"map\"\n  default = {\n    us-east-1 = \"ami-13be557e\"\n    us-west-2 = \"ami-06b94666\"\n    eu-west-1 = \"ami-0d729a60\"\n  }\n}\n\n# terraform.tfvars\nAWS_ACCESS_KEY=\"\"\nAWS_SECRET_KEY=\"\"\nAWS_REGION=\"\"\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`For info on which ami results from where, checkout `}<MDXTag name=\"a\" components={components} parentName=\"p\" props={{\"href\":\"https://cloud-images.ubuntu.com/locator/ec2/\"}}>{`https://cloud-images.ubuntu.com/locator/ec2/`}</MDXTag>{`.`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"software-provisioning\"}}>{`Software Provisioning`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`There are 2 ways to provision software:`}</MDXTag>\n<MDXTag name=\"ol\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ol\">\n<MDXTag name=\"p\" components={components} parentName=\"li\">{`Build your own custom AMI (ie Packer).`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ol\">\n<MDXTag name=\"p\" components={components} parentName=\"li\">{`Another way is to be standardized AMIs and then install the software you need on it: `}</MDXTag>\n<MDXTag name=\"ul\" components={components} parentName=\"li\">\n<MDXTag name=\"li\" components={components} parentName=\"ul\">\n<MDXTag name=\"p\" components={components} parentName=\"li\">{`Use file uploads`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">\n<MDXTag name=\"p\" components={components} parentName=\"li\">{`Use remote exec`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">\n<MDXTag name=\"p\" components={components} parentName=\"li\">{`Use automation tools like chef, puppet, ansible`}</MDXTag>\n</MDXTag>\n</MDXTag>\n</MDXTag>\n</MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"file-uploads\"}}>{`File Uploads`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-kotlin\"}}>{`# instance.tf\nresource \"aws_instance\" \"example\" {\n    ami           = \"\\${lookup(var.AMIS, var.AWS_REGION)}\"\n    instance_type = \"t2.micro\"\n    \n    provisioner \"file\" {\n        source = \"app.conf\"\n        destination = \"/etc/myapp.conf\"\n    }\n}\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`The provisioner will have to use SSH etc.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Another example with the connection:`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-kotlin\"}}>{`# instance.tf\nresource \"aws_instance\" \"example\" {\n    ami           = \"\\${lookup(var.AMIS, var.AWS_REGION)}\"\n    instance_type = \"t2.micro\"\n    # IF SSH\n    key_name = \"\\${aws_key_pem.mykey.key_name}\"\n    # ENDIF\n    \n    provisioner \"file\" {\n        source = \"app.conf\"\n        destination = \"/etc/myapp.conf\"\n        # ! FOR PASSWORD\n        connection {\n            user = \"\\${var.instance_username}\"\n            password = \"\\${var.instance_password}\"\n        }\n        \n        connection {\n            user = \"\\${var.instance_username}\"\n            private_key = \"\\${file(\\${var.path_to_private_key})}\"\n        }\n    }\n    \n    # IF YOU UPLOAD A .sh FILE AND WANT TO RUN IT\n    provisioner \"remote-exec\" {\n        inline = [\n            \"chmod +x /path/to/script.sh\",\n            \"/path/to/script.sh arguments\"\n        ]\n    }\n}\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"attributes\"}}>{`Attributes`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"state\"}}>{`State`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Terraform keeps state in `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`terraform.tfstate`}</MDXTag>{`.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`To configure, you add a file `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`backend.tf`}</MDXTag>{`:`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-kotlin\"}}>{`terraform {\n    # IF Consul\n    backend \"consul\" {\n        address = \"demo.consul.io\" # host name of consul cluster\n        path = \"terraform/myproject\"\n    }\n    \n    # ELSEIF S3\n    backend \"s3\" {\n        bucket = \"bucket\"\n        key = \"terraform/myproject\"\n        region = \"ap-southeast-2\"\n    }\n    \n    #ENDIF\n}\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`\\$ terraform init`}</MDXTag>{` will do what you require for it all to work.`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"data-sources\"}}>{`Data Sources`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Provide you with dynamic information.`}</MDXTag>\n<MDXTag name=\"ul\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`A lot of data is available by AWS in a structured format using their API`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Terraform also exposes this info using data sources.`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Examples include the list of AMIs, list of AZs etc.`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-kotlin\"}}>{`# provider.tf\nprovider \"aws\" { \n    region = \"\\${var.AWS_REGION}\"\n}\n\n# securitygroup.tf\ndata \"aws_ip_ranges\" \"european_ec2\" {\n  regions = [ \"eu-west-1\", \"eu-central-1\" ]\n  services = [ \"ec2\" ]\n}\n\nresource \"aws_security_group\" \"from_europe\" {\n name = \"from_europe\"\n\n  ingress {\n    from_port = \"443\"\n    to_port = \"443\"\n    protocol = \"tcp\"\n    cidr_blocks = [ \"\\${data.aws_ip_ranges.european_ec2.cidr_blocks}\" ]\n  }\n  tags {\n    CreateDate = \"\\${data.aws_ip_ranges.european_ec2.create_date}\"\n    SyncToken = \"\\${data.aws_ip_ranges.european_ec2.sync_token}\"\n  }\n\n}\n\n# vars.tf\nvariable \"AWS_REGION\" {\n  default = \"eu-west-1\"\n}\nvariable \"AMIS\" {\n  type = \"map\"\n  default = {\n    us-east-1 = \"ami-13be557e\"\n    us-west-2 = \"ami-06b94666\"\n    eu-west-1 = \"ami-844e0bf7\"\n  }\n}\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"templates\"}}>{`Templates`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Can help create `}<MDXTag name=\"strong\" components={components} parentName=\"p\">{`customized configuration files`}</MDXTag>{`.`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"modules\"}}>{`Modules`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Help to make your terraform more organised. `}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`You can also use third party modules (like modules from Github).`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`It also helps to `}<MDXTag name=\"strong\" components={components} parentName=\"p\">{`reuse`}</MDXTag>{` parts of your code (eg set up network in AWS - VPC).`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-kotlin\"}}>{`# Install form git\nmodule \"module-example\" {\n    source = \"github.com/wardviaene/terraform-module-example\"\n}\n\n# Use module from local folder\nmodule \"module-example\" {\n    source = \"./module-example\"\n}\n\n# A module passing arguments \nmodule \"module-example\" {\n    source = \"./module-example\"\n    region = \"us-west-1\"\n    ip-range = \"10.0.0.0/8\"\n    cluster-size = \"3\"\n}\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`Inside of the module folder, you can also have Terraform files:`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-kotlin\"}}>{`# module-example/vars.tf\nvariable \"region\" {}\nvariable \"ip-range\" {}\nvariable \"cluster-size\" {}\n\n# module-example/cluster.tf\nresource \"aws_instance\" \"instance-1\" { ... }\nresource \"aws_instance\" \"instance-2\" { ... }\nresource \"aws_instance\" \"instance-3\" { ... }\n\n# module-example/output.tf\noutput \"aws-cluster\" {\n    value = \"\\${aws_instance.instance-1.publicip}\"\n}\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`You use the output from the module in the main part of your code!`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-kotlin\"}}>{`output \"some-output\" {\n    value = \"\\${module.module-example.aws-cluster}\"\n}\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"downloading-a-module\"}}>{`Downloading a module`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-kotlin\"}}>{`terraform get # this will fetch the modules and store it in .terraform/modules/\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"terraform-command-overview\"}}>{`Terraform Command Overview`}</MDXTag>\n<MDXTag name=\"table\" components={components}>\n<MDXTag name=\"thead\" components={components} parentName=\"table\">\n<MDXTag name=\"tr\" components={components} parentName=\"thead\">\n<MDXTag name=\"th\" components={components} parentName=\"tr\" props={{\"align\":null}}>{`Command`}</MDXTag>\n<MDXTag name=\"th\" components={components} parentName=\"tr\" props={{\"align\":null}}>{`Description`}</MDXTag>\n</MDXTag>\n</MDXTag>\n<MDXTag name=\"tbody\" components={components} parentName=\"table\">\n<MDXTag name=\"tr\" components={components} parentName=\"tbody\">\n<MDXTag name=\"td\" components={components} parentName=\"tr\" props={{\"align\":null}}>{`terraform apply`}</MDXTag>\n<MDXTag name=\"td\" components={components} parentName=\"tr\" props={{\"align\":null}}>{`Applies state.`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"tr\" components={components} parentName=\"tbody\">\n<MDXTag name=\"td\" components={components} parentName=\"tr\" props={{\"align\":null}}>{`destroy`}</MDXTag>\n<MDXTag name=\"td\" components={components} parentName=\"tr\" props={{\"align\":null}}>{`Destroys all Terraform managed state.`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"tr\" components={components} parentName=\"tbody\">\n<MDXTag name=\"td\" components={components} parentName=\"tr\" props={{\"align\":null}}>{`fmt`}</MDXTag>\n<MDXTag name=\"td\" components={components} parentName=\"tr\" props={{\"align\":null}}>{`Rewrite terraform config files to canonical format and style.`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"tr\" components={components} parentName=\"tbody\">\n<MDXTag name=\"td\" components={components} parentName=\"tr\" props={{\"align\":null}}>{`get`}</MDXTag>\n<MDXTag name=\"td\" components={components} parentName=\"tr\" props={{\"align\":null}}>{`Download and update modules.`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"tr\" components={components} parentName=\"tbody\">\n<MDXTag name=\"td\" components={components} parentName=\"tr\" props={{\"align\":null}}>{`graph`}</MDXTag>\n<MDXTag name=\"td\" components={components} parentName=\"tr\" props={{\"align\":null}}>{`Create a visual representation of a configuration or execution plan.`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"tr\" components={components} parentName=\"tbody\">\n<MDXTag name=\"td\" components={components} parentName=\"tr\" props={{\"align\":null}}><MDXTag name=\"inlineCode\" components={components} parentName=\"td\">{`import <options> <ADDRESS> <ID>`}</MDXTag></MDXTag>\n<MDXTag name=\"td\" components={components} parentName=\"tr\" props={{\"align\":null}}>{`Find infrastructure resource identified with ID and import the state into terraform.tfstate with resource id ADDRESS.`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"tr\" components={components} parentName=\"tbody\">\n<MDXTag name=\"td\" components={components} parentName=\"tr\" props={{\"align\":null}}><MDXTag name=\"inlineCode\" components={components} parentName=\"td\">{`output <options> <NAME>`}</MDXTag></MDXTag>\n<MDXTag name=\"td\" components={components} parentName=\"tr\" props={{\"align\":null}}>{`Output any of your resources.`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"tr\" components={components} parentName=\"tbody\">\n<MDXTag name=\"td\" components={components} parentName=\"tr\" props={{\"align\":null}}>{`plan`}</MDXTag>\n<MDXTag name=\"td\" components={components} parentName=\"tr\" props={{\"align\":null}}>{`Show changes made to infrastructure.`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"tr\" components={components} parentName=\"tbody\">\n<MDXTag name=\"td\" components={components} parentName=\"tr\" props={{\"align\":null}}>{`refresh`}</MDXTag>\n<MDXTag name=\"td\" components={components} parentName=\"tr\" props={{\"align\":null}}>{`Refresh the remote state. Can identify differences between state file and remote state.`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"tr\" components={components} parentName=\"tbody\">\n<MDXTag name=\"td\" components={components} parentName=\"tr\" props={{\"align\":null}}>{`remote`}</MDXTag>\n<MDXTag name=\"td\" components={components} parentName=\"tr\" props={{\"align\":null}}>{`Configure remote state storage.`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"tr\" components={components} parentName=\"tbody\">\n<MDXTag name=\"td\" components={components} parentName=\"tr\" props={{\"align\":null}}>{`show`}</MDXTag>\n<MDXTag name=\"td\" components={components} parentName=\"tr\" props={{\"align\":null}}>{`Show human readable output from a state or a plan.`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"tr\" components={components} parentName=\"tbody\">\n<MDXTag name=\"td\" components={components} parentName=\"tr\" props={{\"align\":null}}>{`state`}</MDXTag>\n<MDXTag name=\"td\" components={components} parentName=\"tr\" props={{\"align\":null}}>{`Used for advanced state management eg rename resource`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"tr\" components={components} parentName=\"tbody\">\n<MDXTag name=\"td\" components={components} parentName=\"tr\" props={{\"align\":null}}>{`taint`}</MDXTag>\n<MDXTag name=\"td\" components={components} parentName=\"tr\" props={{\"align\":null}}>{`Destroy and recreate resource.`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"tr\" components={components} parentName=\"tbody\">\n<MDXTag name=\"td\" components={components} parentName=\"tr\" props={{\"align\":null}}>{`validate`}</MDXTag>\n<MDXTag name=\"td\" components={components} parentName=\"tr\" props={{\"align\":null}}>{`Validate terraform syntax.`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"tr\" components={components} parentName=\"tbody\">\n<MDXTag name=\"td\" components={components} parentName=\"tr\" props={{\"align\":null}}>{`untaint`}</MDXTag>\n<MDXTag name=\"td\" components={components} parentName=\"tr\" props={{\"align\":null}}>{`Undo a taint.`}</MDXTag>\n</MDXTag>\n</MDXTag>\n</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"\"}}></MDXTag>\n           </MDXTag>\n  }\n}\n  "]}]}