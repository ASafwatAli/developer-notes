{"remainingRequest":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/docz-core/node_modules/babel-loader/lib/index.js??ref--6-1!/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/@mdx-js/loader/index.js??ref--6-2!/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/source-map-loader/index.js!/Users/dennis.okeeffe/Project-Imposter/developer-notes/manual/Design-Patterns/Adapter-Pattern.md","dependencies":[{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/manual/Design-Patterns/Adapter-Pattern.md","mtime":1562563032023},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/cache-loader/dist/cjs.js","mtime":1581496618588},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/docz-core/node_modules/babel-loader/lib/index.js","mtime":1578565694890},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/@mdx-js/loader/index.js","mtime":1581496618277},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/source-map-loader/index.js","mtime":1580255490569}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/dennis.okeeffe/Project-Imposter/developer-notes/manual/Design-Patterns/Adapter-Pattern.md"],"names":["React","mdx","makeShortcode","name","MDXDefaultShortcode","props","console","warn","layoutProps","MDXLayout","MDXContent","components","isMDXComponent"],"mappings":";;;;;;;;;;;;AAAA;AACE,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,QAAoB,eAApB;AACA;;AAGF,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAAAC,IAAI;AAAA,SAAI,SAASC,mBAAT,CAA6BC,KAA7B,EAAoC;AAChEC,IAAAA,OAAO,CAACC,IAAR,CAAa,eAAeJ,IAAf,GAAsB,yEAAnC;AACA,WAAO,6BAASE,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAP;AACD,GAHyB;AAAA,CAA1B;;AAKA,IAAMG,WAAW,GAAG,EAApB;AAGA,IAAMC,SAAS,GAAG,SAAlB;AACA,eAAe,SAASC,UAAT,OAGZ;AAAA,MAFDC,UAEC,QAFDA,UAEC;AAAA,MADEN,KACF;;AACD,SAAO,IAAC,SAAD,oBAAeG,WAAf,EAAgCH,KAAhC;AAAuC,IAAA,UAAU,EAAEM,UAAnD;AAA+D,IAAA,OAAO,EAAC,WAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACL,wBAAQ;AACN,UAAM;AADA,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADK,EAIL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAK;AAAM,IAAA,UAAU,EAAC;AAAjB,KAA2B;AAC5B,iBAAa;AADe,GAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,ohBAAL,CAJK,EAgCL,wBAAQ;AACN,UAAM;AADA,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8CAhCK,EAmCL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAnCK,EAoCL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAK;AAAM,IAAA,UAAU,EAAC;AAAjB,KAA2B;AAC5B,iBAAa;AADe,GAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,k4EAAL,CApCK,CAAP;AAsID;;;;;;;;;;;;;AAEDD,UAAU,CAACE,cAAX,GAA4B,IAA5B;;;;;;;;;;0BArJMV,a;0BAKAM,W;0BAGAC,S;0BACkBC,U","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"adapter-pattern\"\n    }}>{`Adapter Pattern`}</h1>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`// the base adapter\ninterface RequestAdapter {\n  request(newParam: string): void;\n}\n\n// The adapter utilising the old way\nclass InterfaceAdapter implements RequestAdapter {\n  request(newParam: string): void {\n    const old = new OldInterface();\n    old.requestInOldWay({\n      data: newParam\n    });\n  }\n}\n\nclass OldInterface {\n  requestInOldWay(oldParam: any): void {\n    console.log(oldParam);\n  }\n}\n\n(function main() {\n  const adapter = new InterfaceAdapter();\n  adapter.request('param');\n})();\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"lightning-to-microusb-adapter-example\"\n    }}>{`Lightning To MicroUSB Adapter Example`}</h2>\n    <p>{`A great Java example:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`interface LightningPhone {\n    void recharge();\n    void useLightning();\n}\n\ninterface MicroUsbPhone {\n    void recharge();\n    void useMicroUsb();\n}\n\nclass Iphone implements LightningPhone {\n    private boolean connector;\n\n    @Override\n    public void useLightning() {\n        connector = true;\n        System.out.println(\"Lightning connected\");\n    }\n\n    @Override\n    public void recharge() {\n        if (connector) {\n            System.out.println(\"Recharge started\");\n            System.out.println(\"Recharge finished\");\n        } else {\n            System.out.println(\"Connect Lightning first\");\n        }\n    }\n}\n\nclass Android implements MicroUsbPhone {\n    private boolean connector;\n\n    @Override\n    public void useMicroUsb() {\n        connector = true;\n        System.out.println(\"MicroUsb connected\");\n    }\n\n    @Override\n    public void recharge() {\n        if (connector) {\n            System.out.println(\"Recharge started\");\n            System.out.println(\"Recharge finished\");\n        } else {\n            System.out.println(\"Connect MicroUsb first\");\n        }\n    }\n}\n\nclass LightningToMicroUsbAdapter implements MicroUsbPhone {\n    private final LightningPhone lightningPhone;\n\n    public LightningToMicroUsbAdapter(LightningPhone lightningPhone) {\n        this.lightningPhone = lightningPhone;\n    }\n\n    @Override\n    public void useMicroUsb() {\n        System.out.println(\"MicroUsb connected\");\n        lightningPhone.useLightning();\n    }\n\n    @Override\n    public void recharge() {\n        lightningPhone.recharge();\n    }\n}\n\npublic class AdapterDemo {\n    static void rechargeMicroUsbPhone(MicroUsbPhone phone) {\n        phone.useMicroUsb();\n        phone.recharge();\n    }\n\n    static void rechargeLightningPhone(LightningPhone phone) {\n        phone.useLightning();\n        phone.recharge();\n    }\n\n    public static void main(String[] args) {\n        Android android = new Android();\n        Iphone iPhone = new Iphone();\n\n        System.out.println(\"Recharging android with MicroUsb\");\n        rechargeMicroUsbPhone(android);\n\n        System.out.println(\"Recharging iPhone with Lightning\");\n        rechargeLightningPhone(iPhone);\n\n        System.out.println(\"Recharging iPhone with MicroUsb\");\n        rechargeMicroUsbPhone(new LightningToMicroUsbAdapter(iPhone));\n    }\n}\n`}</code></pre>\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  "]}]}