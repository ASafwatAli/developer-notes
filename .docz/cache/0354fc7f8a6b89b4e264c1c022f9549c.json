{"remainingRequest":"/Users/okeeffe_d/Project-Imposter/developer-notes/node_modules/docz-core/node_modules/babel-loader/lib/index.js??ref--6-1!/Users/okeeffe_d/Project-Imposter/developer-notes/node_modules/@mdx-js/loader/index.js??ref--6-2!/Users/okeeffe_d/Project-Imposter/developer-notes/node_modules/source-map-loader/index.js!/Users/okeeffe_d/Project-Imposter/developer-notes/manual/Redis/Redis-Kue-Nodejs.md","dependencies":[{"path":"/Users/okeeffe_d/Project-Imposter/developer-notes/manual/Redis/Redis-Kue-Nodejs.md","mtime":1548385043318},{"path":"/Users/okeeffe_d/Project-Imposter/developer-notes/node_modules/cache-loader/dist/cjs.js","mtime":1561535530324},{"path":"/Users/okeeffe_d/Project-Imposter/developer-notes/node_modules/docz-core/node_modules/babel-loader/lib/index.js","mtime":1560300163820},{"path":"/Users/okeeffe_d/Project-Imposter/developer-notes/node_modules/@mdx-js/loader/index.js","mtime":1561535530532},{"path":"/Users/okeeffe_d/Project-Imposter/developer-notes/node_modules/source-map-loader/index.js","mtime":1548285283521}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9vYmplY3RXaXRob3V0UHJvcGVydGllcyBmcm9tIi9Vc2Vycy9va2VlZmZlX2QvUHJvamVjdC1JbXBvc3Rlci9kZXZlbG9wZXItbm90ZXMvbm9kZV9tb2R1bGVzL2JhYmVsLXByZXNldC1yZWFjdC1hcHAvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzIjsvKiBAanN4IG1keCAqL2ltcG9ydCBSZWFjdCBmcm9tJ3JlYWN0JztpbXBvcnR7bWR4fWZyb20nQG1keC1qcy9yZWFjdCc7LyogQGpzeCBtZHggKi92YXIgbWFrZVNob3J0Y29kZT1mdW5jdGlvbiBtYWtlU2hvcnRjb2RlKG5hbWUpe3JldHVybiBmdW5jdGlvbiBNRFhEZWZhdWx0U2hvcnRjb2RlKHByb3BzKXtjb25zb2xlLndhcm4oIkNvbXBvbmVudCAiK25hbWUrIiB3YXMgbm90IGltcG9ydGVkLCBleHBvcnRlZCwgb3IgcHJvdmlkZWQgYnkgTURYUHJvdmlkZXIgYXMgZ2xvYmFsIHNjb3BlIik7cmV0dXJuIG1keCgiZGl2Iixwcm9wcyk7fTt9O3ZhciBsYXlvdXRQcm9wcz17fTt2YXIgTURYTGF5b3V0PSJ3cmFwcGVyIjtleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBNRFhDb250ZW50KF9yZWYpe3ZhciBjb21wb25lbnRzPV9yZWYuY29tcG9uZW50cyxwcm9wcz1fb2JqZWN0V2l0aG91dFByb3BlcnRpZXMoX3JlZixbImNvbXBvbmVudHMiXSk7cmV0dXJuIG1keChNRFhMYXlvdXQsT2JqZWN0LmFzc2lnbih7fSxsYXlvdXRQcm9wcyxwcm9wcyx7Y29tcG9uZW50czpjb21wb25lbnRzLG1keFR5cGU6Ik1EWExheW91dCJ9KSxtZHgoImgxIix7ImlkIjoicmVkaXMtcXVldWVzLWFuZC1mb3JraW5nLXdpdGgta3VlIn0sIlJlZGlzIHF1ZXVlcyBhbmQgZm9ya2luZyB3aXRoIEt1ZSIpLG1keCgicCIsbnVsbCwiUmVmZXJlbmNlIHRoZXNlIGxpbmtzOiIpLG1keCgicCIsbnVsbCxtZHgoImEiLE9iamVjdC5hc3NpZ24oe3BhcmVudE5hbWU6InAifSx7ImhyZWYiOiJodHRwczovL21lZGl1bS5jb20vQE5vcmJlcnRkZUxhbmdlbi9jb21tdW5pY2F0aW5nLWJldHdlZW4tbm9kZWpzLXByb2Nlc3Nlcy00ZTY4YmU0MmI5MTcifSksImh0dHBzOi8vbWVkaXVtLmNvbS9ATm9yYmVydGRlTGFuZ2VuL2NvbW11bmljYXRpbmctYmV0d2Vlbi1ub2RlanMtcHJvY2Vzc2VzLTRlNjhiZTQyYjkxNyIpLCJcbiIsbWR4KCJhIixPYmplY3QuYXNzaWduKHtwYXJlbnROYW1lOiJwIn0seyJocmVmIjoiaHR0cHM6Ly9tZWRpdW0uY29tL0BuaXJhdGF0dHJpL3dvcmtlcnMtYW5kLW5vZGUta3VlLWl0LXVwLTFjMTIxNWQ5YmRkZiJ9KSwiaHR0cHM6Ly9tZWRpdW0uY29tL0BuaXJhdGF0dHJpL3dvcmtlcnMtYW5kLW5vZGUta3VlLWl0LXVwLTFjMTIxNWQ5YmRkZiIpLCJcbiIsbWR4KCJhIixPYmplY3QuYXNzaWduKHtwYXJlbnROYW1lOiJwIn0seyJocmVmIjoiaHR0cHM6Ly9naXRodWIuY29tL0F1dG9tYXR0aWMva3VlIn0pLCJodHRwczovL2dpdGh1Yi5jb20vQXV0b21hdHRpYy9rdWUiKSksbWR4KCJoMiIseyJpZCI6InRsZHIifSwidGw7ZHIiKSxtZHgoInByZSIsbnVsbCxtZHgoImNvZGUiLE9iamVjdC5hc3NpZ24oe3BhcmVudE5hbWU6InByZSJ9LHsiY2xhc3NOYW1lIjoibGFuZ3VhZ2UtamF2YXNjcmlwdCJ9KSwiY29uc3QgeyBmb3JrIH0gPSByZXF1aXJlKCdjaGlsZF9wcm9jZXNzJyk7XG5cbmNvbnN0IGt1ZSA9IHJlcXVpcmUoJ2t1ZScpO1xua3VlLmFwcC5saXN0ZW4oMzA1MCk7XG5jb25zdCBwb3J0ID0gcHJvY2Vzcy5lbnYuUkVESVNfUE9SVCA/IHByb2Nlc3MuZW52LlJFRElTX1BPUlQgOiAnNjM3OSc7XG5jb25zdCBob3N0ID0gcHJvY2Vzcy5lbnYuUkVESVNfSE9TVCA/IHByb2Nlc3MuZW52LlJFRElTX0hPU1QgOiAnMTI3LjAuMC4xJztcblxubGV0IHF1ZXVlID0ga3VlLmNyZWF0ZVF1ZXVlKHtcbiAgcmVkaXM6IHtcbiAgICBob3N0OiBob3N0LFxuICAgIHBvcnQ6IHBvcnRcbiAgfVxufSk7XG5cbnF1ZXVlLnByb2Nlc3MoJ2J1aWxkJywgMSwgKGpvYiwgZG9uZSkgPT4ge1xuICBydW4oam9iLCBkb25lKTtcbn0pO1xuXG5jb25zdCBydW4gPSBhc3luYyAoam9iLCBkb25lKSA9PiB7XG4gIHRyeSB7XG4gICAgY29uc3QgeyBkYXRhIH0gPSBqb2IuZGF0YTtcbiAgICAvLyBwcm9jZXNzIGlzIGEgZm9ya2VkIHByb2Nlc3NcbiAgICBjb25zdCBjb21wdXRlID0gZm9yaygnLi9wcm9jZXNzZXMvYnVpbGRXZWIuanMnKTtcbiAgICBjb21wdXRlLnNlbmQoZGF0YSk7XG5cbiAgICBjb21wdXRlLm9uKCdtZXNzYWdlJywgKF8pID0+IHtcbiAgICAgIHJldHVybiBkb25lKCk7XG4gICAgfSk7XG4gIH0gY2F0Y2ggKGVycikge1xuICAgIGNvbnNvbGUuZXJyb3IoZXJyKTtcbiAgICByZXR1cm4gZG9uZShuZXcgRXJyb3IoSlNPTi5zdHJpbmdpZnkoZXJyKSkpO1xuICB9XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IChhcHApID0+IHtcbiAgYXBwLnBvc3QoJy8nLCBhc3luYyBmdW5jdGlvbihyZXEsIHJlcykge1xuICAgIHRyeSB7XG4gICAgICAvLyBDcmVhdGUgYSBmb3JrIGZvciBhIHByb2Nlc3NcbiAgICAgIGNvbnN0IGJ1aWxkSm9iID0gcXVldWVcbiAgICAgICAgLmNyZWF0ZSgnYnVpbGQnLCB7XG4gICAgICAgICAgLy8gSm9iIFR5cGVcbiAgICAgICAgICBwcm9qZWN0OiBwcm9qZWN0LCAvLyBKb2IgRGF0YVxuICAgICAgICAgIGRhdGE6IHJlcS5ib2R5XG4gICAgICAgIH0pXG4gICAgICAgIC5yZW1vdmVPbkNvbXBsZXRlKHRydWUpIC8vIFJFTU9WRSBUSEUgSk9CIEZST00gVEhFIFFVRVVFIE9OQ0UgSVQnUyBDT01QTEVURURcbiAgICAgICAgLmF0dGVtcHRzKDUpIC8vIFRoZSBtYXhpbXVtIG51bWJlciBvZiByZXRyaWVzIHlvdSB3YW50IHRoZSBqb2IgdG8gaGF2ZVxuICAgICAgICAuYmFja29mZih7IGRlbGF5OiA2MCAqIDEwMDAsIHR5cGU6ICdleHBvbmVudGlhbCcgfSkgLy8gVGltZSBiZXR3ZWVuIHJldHJpZXMuIFJlYWQgZG9jcy5cbiAgICAgICAgLnNhdmUoKTsgLy8gUEVSU0lTVCBUSEUgREFNTiBKT0IgTE9MXG5cbiAgICAgIGJ1aWxkSm9iLm9uKCdmYWlsZWQnLCBmdW5jdGlvbihlcnJvck1lc3NhZ2UpIHtcbiAgICAgICAgY29uc29sZS5sb2coJ0pvYiBmYWlsZWQnKTtcbiAgICAgICAgbGV0IGVycm9yID0gSlNPTi5wYXJzZShlcnJvck1lc3NhZ2UpO1xuICAgICAgICAvLyBlcnJvciBub3cgY29udGFpbnMgdGhlIG9iamVjdCBwYXNzZWQgZnJvbSB0aGUgd29ya2VyIHdoZW4gdGhlIGpvYiBmYWlsZWRcbiAgICAgICAgY29uc29sZS5sb2coZXJyb3IpOyAvLyBDaGVjayBpdCBvdXQgZm9yIHlvdXJzZWxmXG4gICAgICAgIC8vIGNhbGwgcGFnZXJkdXR5IG9yIHdoYXRldmVyIGphenogeW91IHdhbm5hIGRvIGluIGNhc2Ugb2YgZmFpbHVyZVxuICAgICAgfSk7XG5cbiAgICAgIHJlcy5zdGF0dXMoMjAwKS5zZW5kKCdCdWlsZGluZyAnICsgcHJvamVjdCk7XG4gICAgfSBjYXRjaCAoZXJyKSB7XG4gICAgICByZXR1cm4gcmVzLnN0YXR1cyg1MDApLnNlbmQoJ0ZhaWxlZCcpO1xuICAgIH1cbiAgfSk7XG59O1xuXG4vLyBidWlsZFdlYi5qc1xuY29uc3QgcnVuID0gYXN5bmMgKGRhdGEpID0+IHtcbiAgdHJ5IHtcbiAgICBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgIHByb2Nlc3Muc2VuZCgnRG9uZScpO1xuICAgIH0sIDMwMDApO1xuICB9IGNhdGNoIChlcnIpIHtcbiAgICBjb25zb2xlLmVycm9yKGVycik7XG4gIH1cbn07XG5cbnByb2Nlc3Mub24oJ21lc3NhZ2UnLCAoZGF0YSkgPT4ge1xuICBydW4oZGF0YSk7XG59KTtcbiIpKSk7fWlmKHR5cGVvZiBNRFhDb250ZW50IT09J3VuZGVmaW5lZCcmJk1EWENvbnRlbnQmJk1EWENvbnRlbnQ9PT1PYmplY3QoTURYQ29udGVudCkmJk9iamVjdC5pc0V4dGVuc2libGUoTURYQ29udGVudCkpe09iamVjdC5kZWZpbmVQcm9wZXJ0eShNRFhDb250ZW50LCdfX2ZpbGVtZXRhJyx7ZW51bWVyYWJsZTp0cnVlLGNvbmZpZ3VyYWJsZTp0cnVlLHZhbHVlOntuYW1lOiJNRFhDb250ZW50IixmaWxlbmFtZToibWFudWFsL1JlZGlzL1JlZGlzLUt1ZS1Ob2RlanMubWQifX0pO31NRFhDb250ZW50LmlzTURYQ29tcG9uZW50PXRydWU7"},{"version":3,"sources":["/Users/okeeffe_d/Project-Imposter/developer-notes/manual/Redis/Redis-Kue-Nodejs.md"],"names":["React","mdx","makeShortcode","name","MDXDefaultShortcode","props","console","warn","layoutProps","MDXLayout","MDXContent","components","isMDXComponent"],"mappings":"4LAAA,cACE,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,GAAT,KAAoB,eAApB,CACA,cAGF,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAAAC,IAAI,QAAI,SAASC,CAAAA,mBAAT,CAA6BC,KAA7B,CAAoC,CAChEC,OAAO,CAACC,IAAR,CAAa,aAAeJ,IAAf,CAAsB,yEAAnC,EACA,MAAO,WAASE,KAAT,CAAP,CACD,CAHyB,EAA1B,CAKA,GAAMG,CAAAA,WAAW,CAAG,EAApB,CAGA,GAAMC,CAAAA,SAAS,CAAG,SAAlB,CACA,cAAe,SAASC,CAAAA,UAAT,MAGZ,IAFDC,CAAAA,UAEC,MAFDA,UAEC,CADEN,KACF,+CACD,MAAO,KAAC,SAAD,kBAAeG,WAAf,CAAgCH,KAAhC,EAAuC,UAAU,CAAEM,UAAnD,CAA+D,OAAO,CAAC,WAAvE,GACL,SAAQ,CACN,KAAM,mCADA,CAAR,qCADK,CAIL,sCAJK,CAKL,aAAG,uBAAG,UAAU,CAAC,GAAd,EAAsB,CACrB,OAAQ,yFADa,CAAtB,4FAAH,MAGF,uBAAG,UAAU,CAAC,GAAd,EAAsB,CAChB,OAAQ,wEADQ,CAAtB,2EAHE,MAMF,uBAAG,UAAU,CAAC,GAAd,EAAsB,CAChB,OAAQ,mCADQ,CAAtB,sCANE,CALK,CAcL,SAAQ,CACN,KAAM,MADA,CAAR,SAdK,CAiBL,eAAK,0BAAM,UAAU,CAAC,KAAjB,EAA2B,CAC5B,YAAa,qBADe,CAA3B,gkEAAL,CAjBK,CAAP,CAmGD,C,4QAEDD,UAAU,CAACE,cAAX,CAA4B,IAA5B","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"redis-queues-and-forking-with-kue\"\n    }}>{`Redis queues and forking with Kue`}</h1>\n    <p>{`Reference these links:`}</p>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"https://medium.com/@NorbertdeLangen/communicating-between-nodejs-processes-4e68be42b917\"\n      }}>{`https://medium.com/@NorbertdeLangen/communicating-between-nodejs-processes-4e68be42b917`}</a>{`\n`}<a parentName=\"p\" {...{\n        \"href\": \"https://medium.com/@niratattri/workers-and-node-kue-it-up-1c1215d9bddf\"\n      }}>{`https://medium.com/@niratattri/workers-and-node-kue-it-up-1c1215d9bddf`}</a>{`\n`}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/Automattic/kue\"\n      }}>{`https://github.com/Automattic/kue`}</a></p>\n    <h2 {...{\n      \"id\": \"tldr\"\n    }}>{`tl;dr`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`const { fork } = require('child_process');\n\nconst kue = require('kue');\nkue.app.listen(3050);\nconst port = process.env.REDIS_PORT ? process.env.REDIS_PORT : '6379';\nconst host = process.env.REDIS_HOST ? process.env.REDIS_HOST : '127.0.0.1';\n\nlet queue = kue.createQueue({\n  redis: {\n    host: host,\n    port: port\n  }\n});\n\nqueue.process('build', 1, (job, done) => {\n  run(job, done);\n});\n\nconst run = async (job, done) => {\n  try {\n    const { data } = job.data;\n    // process is a forked process\n    const compute = fork('./processes/buildWeb.js');\n    compute.send(data);\n\n    compute.on('message', (_) => {\n      return done();\n    });\n  } catch (err) {\n    console.error(err);\n    return done(new Error(JSON.stringify(err)));\n  }\n};\n\nmodule.exports = (app) => {\n  app.post('/', async function(req, res) {\n    try {\n      // Create a fork for a process\n      const buildJob = queue\n        .create('build', {\n          // Job Type\n          project: project, // Job Data\n          data: req.body\n        })\n        .removeOnComplete(true) // REMOVE THE JOB FROM THE QUEUE ONCE IT'S COMPLETED\n        .attempts(5) // The maximum number of retries you want the job to have\n        .backoff({ delay: 60 * 1000, type: 'exponential' }) // Time between retries. Read docs.\n        .save(); // PERSIST THE DAMN JOB LOL\n\n      buildJob.on('failed', function(errorMessage) {\n        console.log('Job failed');\n        let error = JSON.parse(errorMessage);\n        // error now contains the object passed from the worker when the job failed\n        console.log(error); // Check it out for yourself\n        // call pagerduty or whatever jazz you wanna do in case of failure\n      });\n\n      res.status(200).send('Building ' + project);\n    } catch (err) {\n      return res.status(500).send('Failed');\n    }\n  });\n};\n\n// buildWeb.js\nconst run = async (data) => {\n  try {\n    setTimeout(() => {\n      process.send('Done');\n    }, 3000);\n  } catch (err) {\n    console.error(err);\n  }\n};\n\nprocess.on('message', (data) => {\n  run(data);\n});\n`}</code></pre>\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  "]}]}