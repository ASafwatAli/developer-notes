{"remainingRequest":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/docz-core/node_modules/babel-loader/lib/index.js??ref--6-1!/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/@mdx-js/loader/index.js??ref--6-2!/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/source-map-loader/index.js!/Users/dennis.okeeffe/Project-Imposter/developer-notes/manual/AWS/S3-Lambda-Subdirectories.md","dependencies":[{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/manual/AWS/S3-Lambda-Subdirectories.md","mtime":1562563032010},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/cache-loader/dist/cjs.js","mtime":1564095360956},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/docz-core/node_modules/babel-loader/lib/index.js","mtime":1562568123838},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/@mdx-js/loader/index.js","mtime":1565139338792},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/source-map-loader/index.js","mtime":1564095361765}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9vYmplY3RXaXRob3V0UHJvcGVydGllcyBmcm9tIi9Vc2Vycy9kZW5uaXMub2tlZWZmZS9Qcm9qZWN0LUltcG9zdGVyL2RldmVsb3Blci1ub3Rlcy9ub2RlX21vZHVsZXMvYmFiZWwtcHJlc2V0LXJlYWN0LWFwcC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0V2l0aG91dFByb3BlcnRpZXMiOy8qIEBqc3ggbWR4ICovaW1wb3J0IFJlYWN0IGZyb20ncmVhY3QnO2ltcG9ydHttZHh9ZnJvbSdAbWR4LWpzL3JlYWN0JzsvKiBAanN4IG1keCAqL3ZhciBtYWtlU2hvcnRjb2RlPWZ1bmN0aW9uIG1ha2VTaG9ydGNvZGUobmFtZSl7cmV0dXJuIGZ1bmN0aW9uIE1EWERlZmF1bHRTaG9ydGNvZGUocHJvcHMpe2NvbnNvbGUud2FybigiQ29tcG9uZW50ICIrbmFtZSsiIHdhcyBub3QgaW1wb3J0ZWQsIGV4cG9ydGVkLCBvciBwcm92aWRlZCBieSBNRFhQcm92aWRlciBhcyBnbG9iYWwgc2NvcGUiKTtyZXR1cm4gbWR4KCJkaXYiLHByb3BzKTt9O307dmFyIGxheW91dFByb3BzPXt9O3ZhciBNRFhMYXlvdXQ9IndyYXBwZXIiO2V4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIE1EWENvbnRlbnQoX3JlZil7dmFyIGNvbXBvbmVudHM9X3JlZi5jb21wb25lbnRzLHByb3BzPV9vYmplY3RXaXRob3V0UHJvcGVydGllcyhfcmVmLFsiY29tcG9uZW50cyJdKTtyZXR1cm4gbWR4KE1EWExheW91dCxPYmplY3QuYXNzaWduKHt9LGxheW91dFByb3BzLHByb3BzLHtjb21wb25lbnRzOmNvbXBvbmVudHMsbWR4VHlwZToiTURYTGF5b3V0In0pLG1keCgiaDEiLHsiaWQiOiJzZXR0aW5nLXVwLWEtbGFtYmRhY2xvdWRmcm9udC1zZXR1cC10by1mZXRjaC1zdWJkaXJlY3Rvcmllcy1pbi1zMyJ9LCJTZXR0aW5nIHVwIGEgTGFtYmRhL0Nsb3VkZnJvbnQgc2V0dXAgdG8gZmV0Y2ggc3ViZGlyZWN0b3JpZXMgaW4gUzMiKSxtZHgoImgyIix7ImlkIjoibGlua3MifSwiTGlua3MiKSxtZHgoInVsIixudWxsLG1keCgibGkiLHtwYXJlbnROYW1lOiJ1bCJ9LG1keCgiYSIsT2JqZWN0LmFzc2lnbih7cGFyZW50TmFtZToibGkifSx7ImhyZWYiOiJodHRwczovL2F3cy5hbWF6b24uY29tL2Jsb2dzL2NvbXB1dGUvaW1wbGVtZW50aW5nLWRlZmF1bHQtZGlyZWN0b3J5LWluZGV4ZXMtaW4tYW1hem9uLXMzLWJhY2tlZC1hbWF6b24tY2xvdWRmcm9udC1vcmlnaW5zLXVzaW5nLWxhbWJkYWVkZ2UvIn0pLCJVc2VmdWwgYmxvZyBndWlkZSIpKSxtZHgoImxpIix7cGFyZW50TmFtZToidWwifSxtZHgoImEiLE9iamVjdC5hc3NpZ24oe3BhcmVudE5hbWU6ImxpIn0seyJocmVmIjoiaHR0cHM6Ly9tZWRpdW0uY29tL0Bzdmlua2xlL2hvdy10by1kZXBsb3ktYS1yZWFjdC1hcHAtdG8tYS1zdWJkaXJlY3RvcnktZjY5NGQ0NjQyN2MxIn0pLCJTZXJ2aW5nIENSQSBmcm9tIHN1YmRpcmVjdG9yaWVzIikpKSxtZHgoImgyIix7ImlkIjoic2V0dXAifSwiU2V0dXAiKSxtZHgoImgzIix7ImlkIjoiMS1zMy1idWNrZXQifSwiMS4gUzMgQnVja2V0IiksbWR4KCJwIixudWxsLCJTZXQgdXAgYSByZXN0cmljdGVkIFMzIGJ1Y2tldC4gV2l0aGluIHRoaXMgYnVja2V0LCBoYXZlIHN1YmRpcmVjdG9yaWVzIHRoYXQgaG91c2UgdGhlaXIgb3duIGluZGV4Lmh0bWwgZmlsZS4iKSxtZHgoImgzIix7ImlkIjoiMi1zZXQtdXAtY2xvdWRmcm9udCJ9LCIyLiBTZXQgdXAgQ2xvdWRGcm9udCIpLG1keCgicCIsbnVsbCwiRm9sbG93IHRoZSBwZXJtaXNzaW9ucyBzZXR1cCBpbiB0aGUgYWJvdmUgYXJ0aWNsZSB0byBrbm93IGhvdyB0byBzZXQgdXAgdGhlIGNvcnJlY3QgZXZlbnQuIiksbWR4KCJoMyIseyJpZCI6IjMtdGhpcy1pcy10aGUtc2V0dXAtZm9yLWEtamF2YXNjcmlwdC1sYW1iZGEtY2FsbCJ9LCIzLiBUaGlzIGlzIHRoZSBzZXR1cCBmb3IgYSBKYXZhU2NyaXB0IExhbWJkYSBjYWxsLiIpLG1keCgicCIsbnVsbCwiVGhpcyBtdXN0IGJlIGRvbmUgaW4gYSByZWdpb24gdGhhdCBzdXBwb3J0cyBMYW1iZGFAbmV4dC4iKSxtZHgoInByZSIsbnVsbCxtZHgoImNvZGUiLE9iamVjdC5hc3NpZ24oe3BhcmVudE5hbWU6InByZSJ9LHsiY2xhc3NOYW1lIjoibGFuZ3VhZ2UtamF2YXNjcmlwdCJ9KSwiJ3VzZSBzdHJpY3QnO1xuZXhwb3J0cy5oYW5kbGVyID0gKGV2ZW50LCBjb250ZXh0LCBjYWxsYmFjaykgPT4ge1xuIC8vIEV4dHJhY3QgdGhlIHJlcXVlc3QgZnJvbSB0aGUgQ2xvdWRGcm9udCBldmVudCB0aGF0IGlzIHNlbnQgdG8gTGFtYmRhQEVkZ2VcbiB2YXIgcmVxdWVzdCA9IGV2ZW50LlJlY29yZHNbMF0uY2YucmVxdWVzdDtcblxuIC8vIEV4dHJhY3QgdGhlIFVSSSBmcm9tIHRoZSByZXF1ZXN0XG4gdmFyIG9sZHVyaSA9IHJlcXVlc3QudXJpO1xuXG4gLy8gTWF0Y2ggYW55ICcvJyB0aGF0IG9jY3VycyBhdCB0aGUgZW5kIG9mIGEgVVJJLiBSZXBsYWNlIGl0IHdpdGggYSBkZWZhdWx0IGluZGV4XG4gdmFyIG5ld3VyaSA9IG9sZHVyaS5yZXBsYWNlKC9cXC8kLywgJy9pbmRleC5odG1sJyk7XG5cbiAvLyBMb2cgdGhlIFVSSSBhcyByZWNlaXZlZCBieSBDbG91ZEZyb250IGFuZCB0aGUgbmV3IFVSSSB0byBiZSB1c2VkIHRvIGZldGNoIGZyb20gb3JpZ2luXG4gY29uc29sZS5sb2coJ09sZCBVUkk6ICcgKyBvbGR1cmkpO1xuIGNvbnNvbGUubG9nKCdOZXcgVVJJOiAnICsgbmV3dXJpKTtcblxuIC8vIFJlcGxhY2UgdGhlIHJlY2VpdmVkIFVSSSB3aXRoIHRoZSBVUkkgdGhhdCBpbmNsdWRlcyB0aGUgaW5kZXggcGFnZVxuIHJlcXVlc3QudXJpID0gbmV3dXJpO1xuXG4gLy8gUmV0dXJuIHRvIENsb3VkRnJvbnRcbiByZXR1cm4gY2FsbGJhY2sobnVsbCwgcmVxdWVzdCk7XG59O1xuIikpLG1keCgiaDMiLHsiaWQiOiJkZXBsb3lpbmctY3JhLWFwcCJ9LCJEZXBsb3lpbmcgQ1JBIEFwcCIpLG1keCgiaDMiLHsiaWQiOiIxLXVwZGF0ZS1wYWNrYWdlanNvbiJ9LCIxLiBVcGRhdGUgcGFja2FnZS5qc29uIiksbWR4KCJwcmUiLG51bGwsbWR4KCJjb2RlIixPYmplY3QuYXNzaWduKHtwYXJlbnROYW1lOiJwcmUifSx7ImNsYXNzTmFtZSI6Imxhbmd1YWdlLWpzb24ifSksIlwiaG9tZXBhZ2VcIjogXCIuXCIsXG4iKSksbWR4KCJoMyIseyJpZCI6IjItdXBkYXRlLXJvdXRlciJ9LCIyLiBVcGRhdGUgcm91dGVyIiksbWR4KCJwcmUiLG51bGwsbWR4KCJjb2RlIixPYmplY3QuYXNzaWduKHtwYXJlbnROYW1lOiJwcmUifSx7ImNsYXNzTmFtZSI6Imxhbmd1YWdlLWphdmFzY3JpcHQifSksImV4cG9ydCBjb25zdCBkZXZSb3V0ZXIgPSAoKSA9PiAoXG4gPFJvdXRlciBoaXN0b3J5PXticm93c2VySGlzdG9yeX0+XG4gIDxSb3V0ZSBwYXRoPXsnL3BhZ2UtcHJvZmlsZSd9IGNvbXBvbmVudD17UGFnZVByb2ZpbGV9IC8+XG4gIDxSb3V0ZSBwYXRoPVwiKlwiIGV4YWN0PXt0cnVlfSBjb21wb25lbnQ9e1BhZ2VIb21lfSAvPlxuIDwvUm91dGVyPlxuKTtcblxuZXhwb3J0IGNvbnN0IHByb2RSb3V0ZXIgPSAoKSA9PiAoXG4gPFJvdXRlciBoaXN0b3J5PXticm93c2VySGlzdG9yeX0+XG4gIDxSb3V0ZSBwYXRoPXsnL3BhZ2UtcHJvZmlsZSd9IGNvbXBvbmVudD17UGFnZVByb2ZpbGV9IC8+XG4gIDxSb3V0ZSBwYXRoPXsnLyd9IGNvbXBvbmVudD17UGFnZUhvbWV9IC8+XG4gIDxSb3V0ZSBwYXRoPXsnKid9IGV4YWN0PXt0cnVlfSBjb21wb25lbnQ9e1BhZ2VIb21lfSAvPlxuIDwvUm91dGVyPlxuKTtcblxuZXhwb3J0IGNvbnN0IHJvdXRlciA9ICgpID0+XG4gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdkZXZlbG9wbWVudCcgPyBwcm9kUm91dGVyKCkgOiBkZXZSb3V0ZXIoKTtcbiIpKSxtZHgoImgzIix7ImlkIjoiMy11cGRhdGUtcm91dGVycHVzaC1jYWxscyJ9LCIzLiBVcGRhdGUgcm91dGVyLnB1c2ggY2FsbHMiKSxtZHgoInByZSIsbnVsbCxtZHgoImNvZGUiLE9iamVjdC5hc3NpZ24oe3BhcmVudE5hbWU6InByZSJ9LHsiY2xhc3NOYW1lIjoibGFuZ3VhZ2UtamF2YXNjcmlwdCJ9KSwiaW1wb3J0IENvbmZpZyBmcm9tICdzcmMvYXBwLmpzb24nO1xucm91dGVyLnB1c2gocHJvY2Vzcy5lbnYuUFVCTElDX1VSTCArICcvdGVzdCcpO1xuXG4vLyBJbiB1c2VcbmZ1bmN0aW9uIGhhbmRsZUxpbmsoZSwgZCkge1xuIGlmIChkLmhyZWZbMF0gPT09ICcvJykge1xuICBlLnByZXZlbnREZWZhdWx0KCk7XG4gIGNvbnN0IHsgcm91dGVyIH0gPSB0aGlzLnByb3BzO1xuICByb3V0ZXIucHVzaChDb25maWcuYmFzZVVybCArIGQuaHJlZik7XG4gfVxufVxuIikpLG1keCgiaDMiLHsiaWQiOiI0LXNldC1hLWJhc2V1cmwtaW4tYXBwanNvbiJ9LCI0LiBTZXQgYSBiYXNlVXJsIGluIGFwcC5qc29uIiksbWR4KCJwcmUiLG51bGwsbWR4KCJjb2RlIixPYmplY3QuYXNzaWduKHtwYXJlbnROYW1lOiJwcmUifSx7ImNsYXNzTmFtZSI6Imxhbmd1YWdlLWpzb24ifSksIntcbiBcImJhc2VVcmxcIjogXCIvZGF0by1jbXMtdGVzdFwiXG59XG4iKSkpO31pZih0eXBlb2YgTURYQ29udGVudCE9PSd1bmRlZmluZWQnJiZNRFhDb250ZW50JiZNRFhDb250ZW50PT09T2JqZWN0KE1EWENvbnRlbnQpJiZPYmplY3QuaXNFeHRlbnNpYmxlKE1EWENvbnRlbnQpKXtPYmplY3QuZGVmaW5lUHJvcGVydHkoTURYQ29udGVudCwnX19maWxlbWV0YScse2VudW1lcmFibGU6dHJ1ZSxjb25maWd1cmFibGU6dHJ1ZSx2YWx1ZTp7bmFtZToiTURYQ29udGVudCIsZmlsZW5hbWU6Im1hbnVhbC9BV1MvUzMtTGFtYmRhLVN1YmRpcmVjdG9yaWVzLm1kIn19KTt9TURYQ29udGVudC5pc01EWENvbXBvbmVudD10cnVlOw=="},{"version":3,"sources":["/Users/dennis.okeeffe/Project-Imposter/developer-notes/manual/AWS/S3-Lambda-Subdirectories.md"],"names":["React","mdx","makeShortcode","name","MDXDefaultShortcode","props","console","warn","layoutProps","MDXLayout","MDXContent","components","isMDXComponent"],"mappings":"iMAAA,cACE,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,GAAT,KAAoB,eAApB,CACA,cAGF,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAAAC,IAAI,QAAI,SAASC,CAAAA,mBAAT,CAA6BC,KAA7B,CAAoC,CAChEC,OAAO,CAACC,IAAR,CAAa,aAAeJ,IAAf,CAAsB,yEAAnC,EACA,MAAO,WAASE,KAAT,CAAP,CACD,CAHyB,EAA1B,CAKA,GAAMG,CAAAA,WAAW,CAAG,EAApB,CAGA,GAAMC,CAAAA,SAAS,CAAG,SAAlB,CACA,cAAe,SAASC,CAAAA,UAAT,MAGZ,IAFDC,CAAAA,UAEC,MAFDA,UAEC,CADEN,KACF,+CACD,MAAO,KAAC,SAAD,kBAAeG,WAAf,CAAgCH,KAAhC,EAAuC,UAAU,CAAEM,UAAnD,CAA+D,OAAO,CAAC,WAAvE,GACL,SAAQ,CACN,KAAM,mEADA,CAAR,sEADK,CAIL,SAAQ,CACN,KAAM,OADA,CAAR,SAJK,CAOL,cACE,UAAI,UAAU,CAAC,IAAf,EAAoB,uBAAG,UAAU,CAAC,IAAd,EAAuB,CACvC,OAAQ,6IAD+B,CAAvB,sBAApB,CADF,CAIE,UAAI,UAAU,CAAC,IAAf,EAAoB,uBAAG,UAAU,CAAC,IAAd,EAAuB,CACvC,OAAQ,sFAD+B,CAAvB,oCAApB,CAJF,CAPK,CAeL,SAAQ,CACN,KAAM,OADA,CAAR,SAfK,CAkBL,SAAQ,CACN,KAAM,aADA,CAAR,gBAlBK,CAqBL,4HArBK,CAsBL,SAAQ,CACN,KAAM,qBADA,CAAR,wBAtBK,CAyBL,0GAzBK,CA0BL,SAAQ,CACN,KAAM,kDADA,CAAR,sDA1BK,CA6BL,wEA7BK,CA8BL,eAAK,0BAAM,UAAU,CAAC,KAAjB,EAA2B,CAC5B,YAAa,qBADe,CAA3B,8tBAAL,CA9BK,CAsDL,SAAQ,CACN,KAAM,mBADA,CAAR,qBAtDK,CAyDL,SAAQ,CACN,KAAM,sBADA,CAAR,0BAzDK,CA4DL,eAAK,0BAAM,UAAU,CAAC,KAAjB,EAA2B,CAC5B,YAAa,eADe,CAA3B,2BAAL,CA5DK,CAgEL,SAAQ,CACN,KAAM,iBADA,CAAR,oBAhEK,CAmEL,eAAK,0BAAM,UAAU,CAAC,KAAjB,EAA2B,CAC5B,YAAa,qBADe,CAA3B,mjBAAL,CAnEK,CAuFL,SAAQ,CACN,KAAM,2BADA,CAAR,+BAvFK,CA0FL,eAAK,0BAAM,UAAU,CAAC,KAAjB,EAA2B,CAC5B,YAAa,qBADe,CAA3B,uQAAL,CA1FK,CAwGL,SAAQ,CACN,KAAM,4BADA,CAAR,gCAxGK,CA2GL,eAAK,0BAAM,UAAU,CAAC,KAAjB,EAA2B,CAC5B,YAAa,eADe,CAA3B,6CAAL,CA3GK,CAAP,CAkHD,C,kRAEDD,UAAU,CAACE,cAAX,CAA4B,IAA5B","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"setting-up-a-lambdacloudfront-setup-to-fetch-subdirectories-in-s3\"\n    }}>{`Setting up a Lambda/Cloudfront setup to fetch subdirectories in S3`}</h1>\n    <h2 {...{\n      \"id\": \"links\"\n    }}>{`Links`}</h2>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://aws.amazon.com/blogs/compute/implementing-default-directory-indexes-in-amazon-s3-backed-amazon-cloudfront-origins-using-lambdaedge/\"\n        }}>{`Useful blog guide`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://medium.com/@svinkle/how-to-deploy-a-react-app-to-a-subdirectory-f694d46427c1\"\n        }}>{`Serving CRA from subdirectories`}</a></li>\n    </ul>\n    <h2 {...{\n      \"id\": \"setup\"\n    }}>{`Setup`}</h2>\n    <h3 {...{\n      \"id\": \"1-s3-bucket\"\n    }}>{`1. S3 Bucket`}</h3>\n    <p>{`Set up a restricted S3 bucket. Within this bucket, have subdirectories that house their own index.html file.`}</p>\n    <h3 {...{\n      \"id\": \"2-set-up-cloudfront\"\n    }}>{`2. Set up CloudFront`}</h3>\n    <p>{`Follow the permissions setup in the above article to know how to set up the correct event.`}</p>\n    <h3 {...{\n      \"id\": \"3-this-is-the-setup-for-a-javascript-lambda-call\"\n    }}>{`3. This is the setup for a JavaScript Lambda call.`}</h3>\n    <p>{`This must be done in a region that supports Lambda@next.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`'use strict';\nexports.handler = (event, context, callback) => {\n // Extract the request from the CloudFront event that is sent to Lambda@Edge\n var request = event.Records[0].cf.request;\n\n // Extract the URI from the request\n var olduri = request.uri;\n\n // Match any '/' that occurs at the end of a URI. Replace it with a default index\n var newuri = olduri.replace(/\\\\/$/, '/index.html');\n\n // Log the URI as received by CloudFront and the new URI to be used to fetch from origin\n console.log('Old URI: ' + olduri);\n console.log('New URI: ' + newuri);\n\n // Replace the received URI with the URI that includes the index page\n request.uri = newuri;\n\n // Return to CloudFront\n return callback(null, request);\n};\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"deploying-cra-app\"\n    }}>{`Deploying CRA App`}</h3>\n    <h3 {...{\n      \"id\": \"1-update-packagejson\"\n    }}>{`1. Update package.json`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`\"homepage\": \".\",\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"2-update-router\"\n    }}>{`2. Update router`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`export const devRouter = () => (\n <Router history={browserHistory}>\n  <Route path={'/page-profile'} component={PageProfile} />\n  <Route path=\"*\" exact={true} component={PageHome} />\n </Router>\n);\n\nexport const prodRouter = () => (\n <Router history={browserHistory}>\n  <Route path={'/page-profile'} component={PageProfile} />\n  <Route path={'/'} component={PageHome} />\n  <Route path={'*'} exact={true} component={PageHome} />\n </Router>\n);\n\nexport const router = () =>\n process.env.NODE_ENV !== 'development' ? prodRouter() : devRouter();\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"3-update-routerpush-calls\"\n    }}>{`3. Update router.push calls`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`import Config from 'src/app.json';\nrouter.push(process.env.PUBLIC_URL + '/test');\n\n// In use\nfunction handleLink(e, d) {\n if (d.href[0] === '/') {\n  e.preventDefault();\n  const { router } = this.props;\n  router.push(Config.baseUrl + d.href);\n }\n}\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"4-set-a-baseurl-in-appjson\"\n    }}>{`4. Set a baseUrl in app.json`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`{\n \"baseUrl\": \"/dato-cms-test\"\n}\n`}</code></pre>\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  "]}]}