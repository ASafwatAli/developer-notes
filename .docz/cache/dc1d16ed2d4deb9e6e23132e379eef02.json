{"remainingRequest":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/docz-core/node_modules/babel-loader/lib/index.js??ref--6-1!/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/@mdx-js/loader/index.js??ref--6-2!/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/source-map-loader/index.js!/Users/dennis.okeeffe/Project-Imposter/developer-notes/manual/Kubernetes/EKS-Docker-Setup.md","dependencies":[{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/manual/Kubernetes/EKS-Docker-Setup.md","mtime":1562563032052},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/cache-loader/dist/cjs.js","mtime":1564095360956},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/docz-core/node_modules/babel-loader/lib/index.js","mtime":1562568123838},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/@mdx-js/loader/index.js","mtime":1565139338792},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/source-map-loader/index.js","mtime":1564095361765}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9vYmplY3RXaXRob3V0UHJvcGVydGllcyBmcm9tIi9Vc2Vycy9kZW5uaXMub2tlZWZmZS9Qcm9qZWN0LUltcG9zdGVyL2RldmVsb3Blci1ub3Rlcy9ub2RlX21vZHVsZXMvYmFiZWwtcHJlc2V0LXJlYWN0LWFwcC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0V2l0aG91dFByb3BlcnRpZXMiOy8qIEBqc3ggbWR4ICovaW1wb3J0IFJlYWN0IGZyb20ncmVhY3QnO2ltcG9ydHttZHh9ZnJvbSdAbWR4LWpzL3JlYWN0JzsvKiBAanN4IG1keCAqL3ZhciBtYWtlU2hvcnRjb2RlPWZ1bmN0aW9uIG1ha2VTaG9ydGNvZGUobmFtZSl7cmV0dXJuIGZ1bmN0aW9uIE1EWERlZmF1bHRTaG9ydGNvZGUocHJvcHMpe2NvbnNvbGUud2FybigiQ29tcG9uZW50ICIrbmFtZSsiIHdhcyBub3QgaW1wb3J0ZWQsIGV4cG9ydGVkLCBvciBwcm92aWRlZCBieSBNRFhQcm92aWRlciBhcyBnbG9iYWwgc2NvcGUiKTtyZXR1cm4gbWR4KCJkaXYiLHByb3BzKTt9O307dmFyIGxheW91dFByb3BzPXt9O3ZhciBNRFhMYXlvdXQ9IndyYXBwZXIiO2V4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIE1EWENvbnRlbnQoX3JlZil7dmFyIGNvbXBvbmVudHM9X3JlZi5jb21wb25lbnRzLHByb3BzPV9vYmplY3RXaXRob3V0UHJvcGVydGllcyhfcmVmLFsiY29tcG9uZW50cyJdKTtyZXR1cm4gbWR4KE1EWExheW91dCxPYmplY3QuYXNzaWduKHt9LGxheW91dFByb3BzLHByb3BzLHtjb21wb25lbnRzOmNvbXBvbmVudHMsbWR4VHlwZToiTURYTGF5b3V0In0pLG1keCgiaDEiLHsiaWQiOiJla3MtZG9ja2VyLXNldHVwIn0sIkVLUyBEb2NrZXIgU2V0dXAiKSxtZHgoInAiLG51bGwsIlB1bGwgdWJ1bnR1IGxhdGVzdCBpbWFnZSBmcm9tIERvY2tlciBIdWIuIiksbWR4KCJoMiIseyJpZCI6InN0YXJ0aW5nLXRoZS1pbWFnZSJ9LCJTdGFydGluZyB0aGUgaW1hZ2UiKSxtZHgoInByZSIsbnVsbCxtZHgoImNvZGUiLE9iamVjdC5hc3NpZ24oe3BhcmVudE5hbWU6InByZSJ9LHsiY2xhc3NOYW1lIjoibGFuZ3VhZ2Utc2hlbGwifSksIiMgU3RhcnQgdGhlIGNvbnRhaW5lclxuZG9ja2VyIHJ1biAtZGl0IC1wIDgwMDE6ODAwMSAtZSBcIkFXU19BQ0NFU1NfS0VZPSR7QVdTX0FDQ0VTU19LRVl9XCIgLWUgXCJBV1NfU0VDUkVUX0tFWT0ke0FXU19TRUNSRVRfQUNDRVNTX0tFWX1cIiAtZSBcIkFXU19SRUdJT049YXAtc291dGhlYXN0LTJcIiAtLW5hbWUgZWtzIHVidW50dSAvYmluL3NoXG4jIENvbmZpcm0gaXQgaXMgcnVubmluZ1xuc3VkbyBkb2NrZXIgcHNcbiMgQXR0YWNoIHRvIGNvbnRhaW5lclxuc3VkbyBkb2NrZXIgYXR0YWNoIGVrc1xuIyBJZiB5b3UgbmVlZCB0byBjb3B5IGZpbGVzIHRvIC9yb290XG5kb2NrZXIgY3AgZm9sZGVyLyBteWNvbnRhaW5lcjovcm9vdFxuIikpLG1keCgiaDIiLHsiaWQiOiJjb21taXQtY2hhbmdlcyJ9LCJDb21taXQgY2hhbmdlcyIpLG1keCgicHJlIixudWxsLG1keCgiY29kZSIsT2JqZWN0LmFzc2lnbih7cGFyZW50TmFtZToicHJlIn0seyJjbGFzc05hbWUiOiJsYW5ndWFnZS1zaGVsbCJ9KSwic3VkbyBkb2NrZXIgY29tbWl0IENPTlRBSU5FUl9JRCB1YnVudHU6VEFHXG4iKSksbWR4KCJoMiIseyJpZCI6Imluc3RhbGxhdGlvbiJ9LCJJbnN0YWxsYXRpb24iKSxtZHgoInAiLG51bGwsIklmIHlvdSBoYXZlbid0IHNhdmVkIGFuIHVwZGF0ZWQgY29udGFpbmVyLCBmb2xsb3cgdGhpcyB0byBpbnN0YWxsIEFXUyBDTEksIFB5dGhvbjMsICIsbWR4KCJpbmxpbmVDb2RlIix7cGFyZW50TmFtZToicCJ9LCJhd3MtaWFtLWF1dGhlbnRpY2F0b3IiKSwiLCBla3NjdGwgYW5kIGt1YmVjdGwuIE5vdGUgeW91IG1pZ2h0IG5lZWQgdG8gdXNlICIsbWR4KCJpbmxpbmVDb2RlIix7cGFyZW50TmFtZToicCJ9LCJzdWRvIiksIi4iKSxtZHgoInByZSIsbnVsbCxtZHgoImNvZGUiLE9iamVjdC5hc3NpZ24oe3BhcmVudE5hbWU6InByZSJ9LHsiY2xhc3NOYW1lIjoibGFuZ3VhZ2Utc2hlbGwifSksImFwdC1nZXQgdXBkYXRlXG4jIEdldCBBV1MgQ0xJXG5hcHQtZ2V0IGluc3RhbGwgYXdzY2xpXG5hcHQtZ2V0IGluc3RhbGwgLS1yZWluc3RhbGwgZ3JvZmYtYmFzZSAjIG1heSBiZSByZXF1aXJlZCBpcyBhd3MgbWVudGlvbnMgaXRcbmFwdC1nZXQgaW5zdGFsbCBjdXJsXG4jIEluc3RhbGwga3ViZWN0bFxuY3VybCAtTE8gaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL2t1YmVybmV0ZXMtcmVsZWFzZS9yZWxlYXNlLyQoY3VybCAtcyBodHRwczovL3N0b3JhZ2UuZ29vZ2xlYXBpcy5jb20va3ViZXJuZXRlcy1yZWxlYXNlL3JlbGVhc2Uvc3RhYmxlLnR4dCkvYmluL2xpbnV4L2FtZDY0L2t1YmVjdGxcbmNobW9kICt4IC4va3ViZWN0bFxubXYgLi9rdWJlY3RsIC91c3IvbG9jYWwvYmluL2t1YmVjdGxcbiMgSW5zdGFsbCBla3NjdGxcbmN1cmwgLS1zaWxlbnQgLS1sb2NhdGlvbiBcImh0dHBzOi8vZ2l0aHViLmNvbS93ZWF2ZXdvcmtzL2Vrc2N0bC9yZWxlYXNlcy9kb3dubG9hZC9sYXRlc3RfcmVsZWFzZS9la3NjdGxfJCh1bmFtZSAtcylfYW1kNjQudGFyLmd6XCIgfCB0YXIgeHogLUMgL3RtcFxubXYgL3RtcC9la3NjdGwgL3Vzci9sb2NhbC9iaW5cbiMgSW5zdGFsIGlhbS1hd3MtYXV0aGVudGljYXRvclxuY3VybCAtbyBhd3MtaWFtLWF1dGhlbnRpY2F0b3IgaHR0cHM6Ly9hbWF6b24tZWtzLnMzLXVzLXdlc3QtMi5hbWF6b25hd3MuY29tLzEuMTEuNS8yMDE4LTEyLTA2L2Jpbi9saW51eC9hbWQ2NC9hd3MtaWFtLWF1dGhlbnRpY2F0b3JcbmNobW9kICt4IC4vYXdzLWlhbS1hdXRoZW50aWNhdG9yXG5jcCAuL2F3cy1pYW0tYXV0aGVudGljYXRvciAvdXNyL2Jpbi9hd3MtaWFtLWF1dGhlbnRpY2F0b3IgJiYgZXhwb3J0IFBBVEg9JEhPTUUvYmluOiRQQVRIXG4jIEVuYWJsZSBjb2xvciBwcm9tcHRcbm5hbm8gfi8uYmFzaHJjICMgdW5jb21tZW50IHNlY3Rpb24gYWJvdXQgYmFzaFxuIikpKTt9aWYodHlwZW9mIE1EWENvbnRlbnQhPT0ndW5kZWZpbmVkJyYmTURYQ29udGVudCYmTURYQ29udGVudD09PU9iamVjdChNRFhDb250ZW50KSYmT2JqZWN0LmlzRXh0ZW5zaWJsZShNRFhDb250ZW50KSl7T2JqZWN0LmRlZmluZVByb3BlcnR5KE1EWENvbnRlbnQsJ19fZmlsZW1ldGEnLHtlbnVtZXJhYmxlOnRydWUsY29uZmlndXJhYmxlOnRydWUsdmFsdWU6e25hbWU6Ik1EWENvbnRlbnQiLGZpbGVuYW1lOiJtYW51YWwvS3ViZXJuZXRlcy9FS1MtRG9ja2VyLVNldHVwLm1kIn19KTt9TURYQ29udGVudC5pc01EWENvbXBvbmVudD10cnVlOw=="},{"version":3,"sources":["/Users/dennis.okeeffe/Project-Imposter/developer-notes/manual/Kubernetes/EKS-Docker-Setup.md"],"names":["React","mdx","makeShortcode","name","MDXDefaultShortcode","props","console","warn","layoutProps","MDXLayout","MDXContent","components","isMDXComponent"],"mappings":"iMAAA,cACE,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,GAAT,KAAoB,eAApB,CACA,cAGF,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAAAC,IAAI,QAAI,SAASC,CAAAA,mBAAT,CAA6BC,KAA7B,CAAoC,CAChEC,OAAO,CAACC,IAAR,CAAa,aAAeJ,IAAf,CAAsB,yEAAnC,EACA,MAAO,WAASE,KAAT,CAAP,CACD,CAHyB,EAA1B,CAKA,GAAMG,CAAAA,WAAW,CAAG,EAApB,CAGA,GAAMC,CAAAA,SAAS,CAAG,SAAlB,CACA,cAAe,SAASC,CAAAA,UAAT,MAGZ,IAFDC,CAAAA,UAEC,MAFDA,UAEC,CADEN,KACF,+CACD,MAAO,KAAC,SAAD,kBAAeG,WAAf,CAAgCH,KAAhC,EAAuC,UAAU,CAAEM,UAAnD,CAA+D,OAAO,CAAC,WAAvE,GACL,SAAQ,CACN,KAAM,kBADA,CAAR,oBADK,CAIL,yDAJK,CAKL,SAAQ,CACN,KAAM,oBADA,CAAR,sBALK,CAQL,eAAK,0BAAM,UAAU,CAAC,KAAjB,EAA2B,CAC5B,YAAa,gBADe,CAA3B,+WAAL,CARK,CAmBL,SAAQ,CACN,KAAM,gBADA,CAAR,kBAnBK,CAsBL,eAAK,0BAAM,UAAU,CAAC,KAAjB,EAA2B,CAC5B,YAAa,gBADe,CAA3B,iDAAL,CAtBK,CA0BL,SAAQ,CACN,KAAM,cADA,CAAR,gBA1BK,CA6BL,oGAA2F,kBAAY,UAAU,CAAC,GAAvB,0BAA3F,qDAAiN,kBAAY,UAAU,CAAC,GAAvB,SAAjN,KA7BK,CA8BL,eAAK,0BAAM,UAAU,CAAC,KAAjB,EAA2B,CAC5B,YAAa,gBADe,CAA3B,o8BAAL,CA9BK,CAAP,CAoDD,C,iRAEDD,UAAU,CAACE,cAAX,CAA4B,IAA5B","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"eks-docker-setup\"\n    }}>{`EKS Docker Setup`}</h1>\n    <p>{`Pull ubuntu latest image from Docker Hub.`}</p>\n    <h2 {...{\n      \"id\": \"starting-the-image\"\n    }}>{`Starting the image`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`# Start the container\ndocker run -dit -p 8001:8001 -e \"AWS_ACCESS_KEY=\\${AWS_ACCESS_KEY}\" -e \"AWS_SECRET_KEY=\\${AWS_SECRET_ACCESS_KEY}\" -e \"AWS_REGION=ap-southeast-2\" --name eks ubuntu /bin/sh\n# Confirm it is running\nsudo docker ps\n# Attach to container\nsudo docker attach eks\n# If you need to copy files to /root\ndocker cp folder/ mycontainer:/root\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"commit-changes\"\n    }}>{`Commit changes`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`sudo docker commit CONTAINER_ID ubuntu:TAG\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"installation\"\n    }}>{`Installation`}</h2>\n    <p>{`If you haven't saved an updated container, follow this to install AWS CLI, Python3, `}<inlineCode parentName=\"p\">{`aws-iam-authenticator`}</inlineCode>{`, eksctl and kubectl. Note you might need to use `}<inlineCode parentName=\"p\">{`sudo`}</inlineCode>{`.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`apt-get update\n# Get AWS CLI\napt-get install awscli\napt-get install --reinstall groff-base # may be required is aws mentions it\napt-get install curl\n# Install kubectl\ncurl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl\nchmod +x ./kubectl\nmv ./kubectl /usr/local/bin/kubectl\n# Install eksctl\ncurl --silent --location \"https://github.com/weaveworks/eksctl/releases/download/latest_release/eksctl_$(uname -s)_amd64.tar.gz\" | tar xz -C /tmp\nmv /tmp/eksctl /usr/local/bin\n# Instal iam-aws-authenticator\ncurl -o aws-iam-authenticator https://amazon-eks.s3-us-west-2.amazonaws.com/1.11.5/2018-12-06/bin/linux/amd64/aws-iam-authenticator\nchmod +x ./aws-iam-authenticator\ncp ./aws-iam-authenticator /usr/bin/aws-iam-authenticator && export PATH=$HOME/bin:$PATH\n# Enable color prompt\nnano ~/.bashrc # uncomment section about bash\n`}</code></pre>\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  "]}]}