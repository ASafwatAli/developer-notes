{"remainingRequest":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/docz-core/node_modules/babel-loader/lib/index.js??ref--6-1!/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/@mdx-js/loader/index.js??ref--6-2!/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/source-map-loader/index.js!/Users/dennis.okeeffe/Project-Imposter/developer-notes/manual/Elixir/Elixir-School.md","dependencies":[{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/manual/Elixir/Elixir-School.md","mtime":1565243577714},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/cache-loader/dist/cjs.js","mtime":1564095360956},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/docz-core/node_modules/babel-loader/lib/index.js","mtime":1562568123838},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/@mdx-js/loader/index.js","mtime":1565139338792},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/source-map-loader/index.js","mtime":1564095361765}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9vYmplY3RXaXRob3V0UHJvcGVydGllcyBmcm9tIi9Vc2Vycy9kZW5uaXMub2tlZWZmZS9Qcm9qZWN0LUltcG9zdGVyL2RldmVsb3Blci1ub3Rlcy9ub2RlX21vZHVsZXMvYmFiZWwtcHJlc2V0LXJlYWN0LWFwcC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0V2l0aG91dFByb3BlcnRpZXMiOy8qIEBqc3ggbWR4ICovaW1wb3J0IFJlYWN0IGZyb20ncmVhY3QnO2ltcG9ydHttZHh9ZnJvbSdAbWR4LWpzL3JlYWN0JzsvKiBAanN4IG1keCAqL3ZhciBtYWtlU2hvcnRjb2RlPWZ1bmN0aW9uIG1ha2VTaG9ydGNvZGUobmFtZSl7cmV0dXJuIGZ1bmN0aW9uIE1EWERlZmF1bHRTaG9ydGNvZGUocHJvcHMpe2NvbnNvbGUud2FybigiQ29tcG9uZW50ICIrbmFtZSsiIHdhcyBub3QgaW1wb3J0ZWQsIGV4cG9ydGVkLCBvciBwcm92aWRlZCBieSBNRFhQcm92aWRlciBhcyBnbG9iYWwgc2NvcGUiKTtyZXR1cm4gbWR4KCJkaXYiLHByb3BzKTt9O307dmFyIGxheW91dFByb3BzPXt9O3ZhciBNRFhMYXlvdXQ9IndyYXBwZXIiO2V4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIE1EWENvbnRlbnQoX3JlZil7dmFyIGNvbXBvbmVudHM9X3JlZi5jb21wb25lbnRzLHByb3BzPV9vYmplY3RXaXRob3V0UHJvcGVydGllcyhfcmVmLFsiY29tcG9uZW50cyJdKTtyZXR1cm4gbWR4KE1EWExheW91dCxPYmplY3QuYXNzaWduKHt9LGxheW91dFByb3BzLHByb3BzLHtjb21wb25lbnRzOmNvbXBvbmVudHMsbWR4VHlwZToiTURYTGF5b3V0In0pLG1keCgiaDEiLHsiaWQiOiJlbGl4aXItc2Nob29sIn0sIkVsaXhpciBTY2hvb2wiKSxtZHgoInAiLG51bGwsIlJlZmVyZW5jZXMgYW5kIG5vdGVzIGNvbWUgZnJvbSB0aGUgIixtZHgoImEiLE9iamVjdC5hc3NpZ24oe3BhcmVudE5hbWU6InAifSx7ImhyZWYiOiJodHRwczovL2VsaXhpcnNjaG9vbC5jb20vZW4vIn0pLCJFbGl4aXIgU2Nob29sIHBhZ2UiKSwiLiIpLG1keCgiaDIiLHsiaWQiOiJiYXNpYy10eXBlcyJ9LCJCYXNpYyBUeXBlcyIpLG1keCgicCIsbnVsbCwiVGhlc2UganVzdCBpbmNsdWRlIHVudXN1YWwgb25lcyB0aGF0IGFyZSBpbXBvcnRhbnQgdG8ga25vdzoiKSxtZHgoImgzIix7ImlkIjoiYXRvbXMifSwiQXRvbXMiKSxtZHgoInAiLG51bGwsIkEgY29uc3RhbnQgd2hvc2UgbmFtZSBpcyB2YWx1ZSAtIHN5bm9ueW1vdXMgd2l0aCBSdWJ5IFN5bWJvbHM6IiksbWR4KCJwcmUiLG51bGwsbWR4KCJjb2RlIixPYmplY3QuYXNzaWduKHtwYXJlbnROYW1lOiJwcmUifSx7ImNsYXNzTmFtZSI6Imxhbmd1YWdlLWVsaXhpciJ9KSwiOmZvbyA9PSA6YmFyICMgcmV0dXJucyBmYWxzZVxuIikpLG1keCgicCIsbnVsbCwiQm9vbGVhbnMgIixtZHgoImlubGluZUNvZGUiLHtwYXJlbnROYW1lOiJwIn0sInRydWUiKSwiIGFuZCAiLG1keCgiaW5saW5lQ29kZSIse3BhcmVudE5hbWU6InAifSwiZmFsc2UiKSwiIGFyZSBhbHNvIHRoZSBhdG9tcyAiLG1keCgiaW5saW5lQ29kZSIse3BhcmVudE5hbWU6InAifSwiOnRydWUiKSwiIGFuZCAiLG1keCgiaW5saW5lQ29kZSIse3BhcmVudE5hbWU6InAifSwiOmZhbHNlIiksIi4iKSxtZHgoInByZSIsbnVsbCxtZHgoImNvZGUiLE9iamVjdC5hc3NpZ24oe3BhcmVudE5hbWU6InByZSJ9LHsiY2xhc3NOYW1lIjoibGFuZ3VhZ2UtZWxpeGlyIn0pLCJ0cnVlIHw+IGlzX2F0b20gIyB0cnVlXG46dHJ1ZSB8PiBpc19ib29sZWFuICMgdHJ1ZVxuOnRydWUgPT09IHRydWUgIyB0cnVlXG4iKSksbWR4KCJwIixudWxsLCJUaGUgbmFtZXMgb2YgbW9kdWxlcyBhcmUgYWxzbyBhdG9tczoiKSxtZHgoInByZSIsbnVsbCxtZHgoImNvZGUiLE9iamVjdC5hc3NpZ24oe3BhcmVudE5hbWU6InByZSJ9LHsiY2xhc3NOYW1lIjoibGFuZ3VhZ2UtZWxpeGlyIn0pLCJpc19hdG9tKE15QXBwLk15TW9kdWxlKSAjIHRydWVcbiIpKSxtZHgoInAiLG51bGwsIkF0b21zIGFyZSBhbHNvIHVzZWQgdG8gcmVmZXJlbmNlIG1vZHVsZXMgZnJvbSBFcmxhbmcgbGlicmFyaWVzLCBpbmNsdWRpbmcgYnVpbHQgaW4gb25lcy4iKSxtZHgoInByZSIsbnVsbCxtZHgoImNvZGUiLE9iamVjdC5hc3NpZ24oe3BhcmVudE5hbWU6InByZSJ9LHsiY2xhc3NOYW1lIjoibGFuZ3VhZ2UtZWxpeGlyIn0pLCI6Y3J5cHRvLnN0cm9uZ19yYW5kX2J5dGVzIDMgIyA8PDIzLCAxMDQsIDEwOD4+XG4iKSksbWR4KCJoMiIseyJpZCI6ImNvbmRpdGlvbmFscyJ9LCJDb25kaXRpb25hbHMiKSxtZHgoInAiLG51bGwsIkVsaXhpciBwcm92aWRlcyB0aGUgfHwsICYmLCBhbmQgISBib29sZWFuIG9wZXJhdG9ycy4gVGhlcmUgYXJlIHRocmVlIGFkZGl0aW9uYWwgb3BlcmF0b3JzIHdob3NlIGZpcnN0IGFyZ3VtZW50IG11c3QgYmUgYSBib29sZWFuICh0cnVlIG9yIGZhbHNlKToiKSxtZHgoInByZSIsbnVsbCxtZHgoImNvZGUiLE9iamVjdC5hc3NpZ24oe3BhcmVudE5hbWU6InByZSJ9LHsiY2xhc3NOYW1lIjoibGFuZ3VhZ2Utc2hlbGwifSksImlleD4gdHJ1ZSBhbmQgNDJcbjQyXG5pZXg+IGZhbHNlIG9yIHRydWVcbnRydWVcbmlleD4gbm90IGZhbHNlXG50cnVlXG5pZXg+IDQyIGFuZCB0cnVlXG4qKiAoQXJndW1lbnRFcnJvcikgYXJndW1lbnQgZXJyb3I6IDQyXG5pZXg+IG5vdCA0MlxuKiogKEFyZ3VtZW50RXJyb3IpIGFyZ3VtZW50IGVycm9yXG4iKSksbWR4KCJwIixudWxsLCJOb3RlOiBFbGl4aXJcdTIwMTlzIGFuZCBhbmQgb3IgYWN0dWFsbHkgbWFwIHRvICIsbWR4KCJpbmxpbmVDb2RlIix7cGFyZW50TmFtZToicCJ9LCJhbmRhbHNvIiksIiBhbmQgIixtZHgoImlubGluZUNvZGUiLHtwYXJlbnROYW1lOiJwIn0sIm9yZWxzZSIpLCIgaW4gRXJsYW5nLiIpLG1keCgiaDIiLHsiaWQiOiJjb21wYXJpc29ucyJ9LCJDb21wYXJpc29ucyIpLG1keCgicCIsbnVsbCwiRWxpeGlyIGNvbWVzIHdpdGggYWxsIHRoZSBjb21wYXJpc29uIG9wZXJhdG9ycyB3ZVx1MjAxOXJlIHVzZWQgdG86ID09LCAhPSwgPT09LCAhPT0sIDw9LCA+PSwgPCwgYW5kID4uIiksbWR4KCJwIixudWxsLCJGb3Igc3RyaWN0IGNvbXBhcmlzb24gb2YgaW50ZWdlcnMgYW5kIGZsb2F0cywgdXNlID09PToiKSxtZHgoInByZSIsbnVsbCxtZHgoImNvZGUiLE9iamVjdC5hc3NpZ24oe3BhcmVudE5hbWU6InByZSJ9LHsiY2xhc3NOYW1lIjoibGFuZ3VhZ2Utc2hlbGwifSksImlleD4gMiA9PSAyLjBcbnRydWVcbmlleD4gMiA9PT0gMi4wXG5mYWxzZVxuIikpLG1keCgiaDIiLHsiaWQiOiJpbnRlcnBvbGF0aW9uIn0sIkludGVycG9sYXRpb24iKSxtZHgoInByZSIsbnVsbCxtZHgoImNvZGUiLE9iamVjdC5hc3NpZ24oe3BhcmVudE5hbWU6InByZSJ9LHsiY2xhc3NOYW1lIjoibGFuZ3VhZ2Utc2hlbGwifSksImlleD4gbmFtZSA9IFwiU2VhblwiXG5pZXg+IFwiSGVsbG8gI3tuYW1lfVwiXG5cIkhlbGxvIFNlYW5cIlxuIikpLG1keCgiaDIiLHsiaWQiOiJjb25jYXRlbmF0aW9uIn0sIkNvbmNhdGVuYXRpb24iKSxtZHgoInByZSIsbnVsbCxtZHgoImNvZGUiLE9iamVjdC5hc3NpZ24oe3BhcmVudE5hbWU6InByZSJ9LHsiY2xhc3NOYW1lIjoibGFuZ3VhZ2Utc2hlbGwifSksImlleD4gbmFtZSA9IFwiU2VhblwiXG5pZXg+IFwiSGVsbG8gXCIgPD4gbmFtZVxuXCJIZWxsbyBTZWFuXCJcbiIpKSxtZHgoImgyIix7ImlkIjoicGF0dGVybi1tYXRjaGluZyJ9LCJQYXR0ZXJuIE1hdGNoaW5nIiksbWR4KCJoMyIseyJpZCI6Im1hdGNoLW9wZXJhdG9yIn0sIk1hdGNoIE9wZXJhdG9yIiksbWR4KCJwcmUiLG51bGwsbWR4KCJjb2RlIixPYmplY3QuYXNzaWduKHtwYXJlbnROYW1lOiJwcmUifSx7ImNsYXNzTmFtZSI6Imxhbmd1YWdlLXNoZWxsIn0pLCIjIEFzc2lnbm1lbnRcbmlleD4geCA9IDFcbjFcbiMgUGF0dGVybiBtYXRjaGluZ1xuaWV4PiAxID0geFxuMVxuaWV4PiAyID0geFxuKiogKE1hdGNoRXJyb3IpIG5vIG1hdGNoIG9mIHJpZ2h0IGhhbmQgc2lkZSB2YWx1ZTogMVxuXG4jIExpc3RzXG5pZXg+IGxpc3QgPSBbMSwgMiwgM11cbmlleD4gWzEsIDIsIDNdID0gbGlzdFxuWzEsIDIsIDNdXG5pZXg+IFtdID0gbGlzdFxuKiogKE1hdGNoRXJyb3IpIG5vIG1hdGNoIG9mIHJpZ2h0IGhhbmQgc2lkZSB2YWx1ZTogWzEsIDIsIDNdXG5cbmlleD4gWzEgfCB0YWlsXSA9IGxpc3RcblsxLCAyLCAzXVxuaWV4PiB0YWlsXG5bMiwgM11cbmlleD4gWzIgfCBfXSA9IGxpc3RcbioqIChNYXRjaEVycm9yKSBubyBtYXRjaCBvZiByaWdodCBoYW5kIHNpZGUgdmFsdWU6IFsxLCAyLCAzXVxuXG4jIFR1cGxlc1xuaWV4PiB7Om9rLCB2YWx1ZX0gPSB7Om9rLCBcIlN1Y2Nlc3NmdWwhXCJ9XG57Om9rLCBcIlN1Y2Nlc3NmdWwhXCJ9XG5pZXg+IHZhbHVlXG5cIlN1Y2Nlc3NmdWwhXCJcbmlleD4gezpvaywgdmFsdWV9ID0gezplcnJvcn1cbioqIChNYXRjaEVycm9yKSBubyBtYXRjaCBvZiByaWdodCBoYW5kIHNpZGUgdmFsdWU6IHs6ZXJyb3J9XG4iKSksbWR4KCJoMyIseyJpZCI6InBpbi1vcGVyYXRvciJ9LCJQaW4gT3BlcmF0b3IiKSxtZHgoInByZSIsbnVsbCxtZHgoImNvZGUiLE9iamVjdC5hc3NpZ24oe3BhcmVudE5hbWU6InByZSJ9LHsiY2xhc3NOYW1lIjoibGFuZ3VhZ2Utc2hlbGwifSksImlleD4geCA9IDFcbjFcbmlleD4gXnggPSAyXG4qKiAoTWF0Y2hFcnJvcikgbm8gbWF0Y2ggb2YgcmlnaHQgaGFuZCBzaWRlIHZhbHVlOiAyXG5pZXg+IHt4LCBeeH0gPSB7MiwgMX1cbnsyLCAxfVxuaWV4PiB4XG4yXG4iKSksbWR4KCJwIixudWxsLCJBbiBleGFtcGxlIG9mIHBpbm5pbmcgaW4gYSBmdW5jdGlvbiBjbGF1c2U6IiksbWR4KCJwcmUiLG51bGwsbWR4KCJjb2RlIixPYmplY3QuYXNzaWduKHtwYXJlbnROYW1lOiJwcmUifSx7ImNsYXNzTmFtZSI6Imxhbmd1YWdlLXNoZWxsIn0pLCJpZXg+IGdyZWV0aW5nID0gXCJIZWxsb1wiXG5cIkhlbGxvXCJcbmlleD4gZ3JlZXQgPSBmblxuLi4uPiAgICheZ3JlZXRpbmcsIG5hbWUpIC0+IFwiSGkgI3tuYW1lfVwiXG4uLi4+ICAgKGdyZWV0aW5nLCBuYW1lKSAtPiBcIiN7Z3JlZXRpbmd9LCAje25hbWV9XCJcbi4uLj4gZW5kXG4jRnVuY3Rpb248MTIuNTQxMTg3OTIvMiBpbiA6ZXJsX2V2YWwuZXhwci81PlxuaWV4PiBncmVldC4oXCJIZWxsb1wiLCBcIlNlYW5cIilcblwiSGkgU2VhblwiXG5pZXg+IGdyZWV0LihcIk1vcm5pbidcIiwgXCJTZWFuXCIpXG5cIk1vcm5pbicsIFNlYW5cIlxuaWV4PiBncmVldGluZ1xuXCJIZWxsb1wiXG4iKSkpO31pZih0eXBlb2YgTURYQ29udGVudCE9PSd1bmRlZmluZWQnJiZNRFhDb250ZW50JiZNRFhDb250ZW50PT09T2JqZWN0KE1EWENvbnRlbnQpJiZPYmplY3QuaXNFeHRlbnNpYmxlKE1EWENvbnRlbnQpKXtPYmplY3QuZGVmaW5lUHJvcGVydHkoTURYQ29udGVudCwnX19maWxlbWV0YScse2VudW1lcmFibGU6dHJ1ZSxjb25maWd1cmFibGU6dHJ1ZSx2YWx1ZTp7bmFtZToiTURYQ29udGVudCIsZmlsZW5hbWU6Im1hbnVhbC9FbGl4aXIvRWxpeGlyLVNjaG9vbC5tZCJ9fSk7fU1EWENvbnRlbnQuaXNNRFhDb21wb25lbnQ9dHJ1ZTs="},{"version":3,"sources":["/Users/dennis.okeeffe/Project-Imposter/developer-notes/manual/Elixir/Elixir-School.md"],"names":["React","mdx","makeShortcode","name","MDXDefaultShortcode","props","console","warn","layoutProps","MDXLayout","MDXContent","components","isMDXComponent"],"mappings":"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","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"elixir-school\"\n    }}>{`Elixir School`}</h1>\n    <p>{`References and notes come from the `}<a parentName=\"p\" {...{\n        \"href\": \"https://elixirschool.com/en/\"\n      }}>{`Elixir School page`}</a>{`.`}</p>\n    <h2 {...{\n      \"id\": \"basic-types\"\n    }}>{`Basic Types`}</h2>\n    <p>{`These just include unusual ones that are important to know:`}</p>\n    <h3 {...{\n      \"id\": \"atoms\"\n    }}>{`Atoms`}</h3>\n    <p>{`A constant whose name is value - synonymous with Ruby Symbols:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-elixir\"\n      }}>{`:foo == :bar # returns false\n`}</code></pre>\n    <p>{`Booleans `}<inlineCode parentName=\"p\">{`true`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`false`}</inlineCode>{` are also the atoms `}<inlineCode parentName=\"p\">{`:true`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`:false`}</inlineCode>{`.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-elixir\"\n      }}>{`true |> is_atom # true\n:true |> is_boolean # true\n:true === true # true\n`}</code></pre>\n    <p>{`The names of modules are also atoms:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-elixir\"\n      }}>{`is_atom(MyApp.MyModule) # true\n`}</code></pre>\n    <p>{`Atoms are also used to reference modules from Erlang libraries, including built in ones.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-elixir\"\n      }}>{`:crypto.strong_rand_bytes 3 # <<23, 104, 108>>\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"conditionals\"\n    }}>{`Conditionals`}</h2>\n    <p>{`Elixir provides the ||, &&, and ! boolean operators. There are three additional operators whose first argument must be a boolean (true or false):`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`iex> true and 42\n42\niex> false or true\ntrue\niex> not false\ntrue\niex> 42 and true\n** (ArgumentError) argument error: 42\niex> not 42\n** (ArgumentError) argument error\n`}</code></pre>\n    <p>{`Note: Elixir’s and and or actually map to `}<inlineCode parentName=\"p\">{`andalso`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`orelse`}</inlineCode>{` in Erlang.`}</p>\n    <h2 {...{\n      \"id\": \"comparisons\"\n    }}>{`Comparisons`}</h2>\n    <p>{`Elixir comes with all the comparison operators we’re used to: ==, !=, ===, !==, <=, >=, <, and >.`}</p>\n    <p>{`For strict comparison of integers and floats, use ===:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`iex> 2 == 2.0\ntrue\niex> 2 === 2.0\nfalse\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"interpolation\"\n    }}>{`Interpolation`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`iex> name = \"Sean\"\niex> \"Hello #{name}\"\n\"Hello Sean\"\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"concatenation\"\n    }}>{`Concatenation`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`iex> name = \"Sean\"\niex> \"Hello \" <> name\n\"Hello Sean\"\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"pattern-matching\"\n    }}>{`Pattern Matching`}</h2>\n    <h3 {...{\n      \"id\": \"match-operator\"\n    }}>{`Match Operator`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`# Assignment\niex> x = 1\n1\n# Pattern matching\niex> 1 = x\n1\niex> 2 = x\n** (MatchError) no match of right hand side value: 1\n\n# Lists\niex> list = [1, 2, 3]\niex> [1, 2, 3] = list\n[1, 2, 3]\niex> [] = list\n** (MatchError) no match of right hand side value: [1, 2, 3]\n\niex> [1 | tail] = list\n[1, 2, 3]\niex> tail\n[2, 3]\niex> [2 | _] = list\n** (MatchError) no match of right hand side value: [1, 2, 3]\n\n# Tuples\niex> {:ok, value} = {:ok, \"Successful!\"}\n{:ok, \"Successful!\"}\niex> value\n\"Successful!\"\niex> {:ok, value} = {:error}\n** (MatchError) no match of right hand side value: {:error}\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"pin-operator\"\n    }}>{`Pin Operator`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`iex> x = 1\n1\niex> ^x = 2\n** (MatchError) no match of right hand side value: 2\niex> {x, ^x} = {2, 1}\n{2, 1}\niex> x\n2\n`}</code></pre>\n    <p>{`An example of pinning in a function clause:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`iex> greeting = \"Hello\"\n\"Hello\"\niex> greet = fn\n...>   (^greeting, name) -> \"Hi #{name}\"\n...>   (greeting, name) -> \"#{greeting}, #{name}\"\n...> end\n#Function<12.54118792/2 in :erl_eval.expr/5>\niex> greet.(\"Hello\", \"Sean\")\n\"Hi Sean\"\niex> greet.(\"Mornin'\", \"Sean\")\n\"Mornin', Sean\"\niex> greeting\n\"Hello\"\n`}</code></pre>\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  "]}]}