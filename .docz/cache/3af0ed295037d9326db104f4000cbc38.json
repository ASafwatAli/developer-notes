{"remainingRequest":"/Users/okeeffe_d/Business/Documentation/node_modules/babel-loader/lib/index.js?{\"presets\":[[\"/Users/okeeffe_d/Business/Documentation/node_modules/babel-preset-docz/dist/index.js\",{\"flow\":true,\"typescript\":false,\"parseProps\":true}]],\"plugins\":[[\"/Users/okeeffe_d/Business/Documentation/node_modules/docz-utils/lib/named-asset-import.js\",{\"loaderMap\":{\"svg\":{\"ReactComponent\":\"@svgr/webpack?-prettier,-svgo![path]\"}}}]],\"babelrc\":false,\"cacheCompression\":true,\"compact\":true}!/Users/okeeffe_d/Business/Documentation/manual/Amplify/Graphql-Setup.md","dependencies":[{"path":"/Users/okeeffe_d/Business/Documentation/manual/Amplify/Graphql-Setup.md","mtime":1548209344241},{"path":"/Users/okeeffe_d/Business/Documentation/node_modules/cache-loader/dist/cjs.js","mtime":1548134640245},{"path":"/Users/okeeffe_d/Business/Documentation/node_modules/babel-loader/lib/index.js","mtime":1548134640227}],"contextDependencies":[],"result":["function _typeof(obj){if(typeof Symbol===\"function\"&&typeof Symbol.iterator===\"symbol\"){_typeof=function _typeof(obj){return typeof obj;};}else{_typeof=function _typeof(obj){return obj&&typeof Symbol===\"function\"&&obj.constructor===Symbol&&obj!==Symbol.prototype?\"symbol\":typeof obj;};}return _typeof(obj);}function _objectWithoutProperties(source,excluded){if(source==null)return{};var target=_objectWithoutPropertiesLoose(source,excluded);var key,i;if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++){key=sourceSymbolKeys[i];if(excluded.indexOf(key)>=0)continue;if(!Object.prototype.propertyIsEnumerable.call(source,key))continue;target[key]=source[key];}}return target;}function _objectWithoutPropertiesLoose(source,excluded){if(source==null)return{};var target={};var sourceKeys=Object.keys(source);var key,i;for(i=0;i<sourceKeys.length;i++){key=sourceKeys[i];if(excluded.indexOf(key)>=0)continue;target[key]=source[key];}return target;}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\");}}function _defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}function _createClass(Constructor,protoProps,staticProps){if(protoProps)_defineProperties(Constructor.prototype,protoProps);if(staticProps)_defineProperties(Constructor,staticProps);return Constructor;}function _possibleConstructorReturn(self,call){if(call&&(_typeof(call)===\"object\"||typeof call===\"function\")){return call;}return _assertThisInitialized(self);}function _assertThisInitialized(self){if(self===void 0){throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");}return self;}function _getPrototypeOf(o){_getPrototypeOf=Object.setPrototypeOf?Object.getPrototypeOf:function _getPrototypeOf(o){return o.__proto__||Object.getPrototypeOf(o);};return _getPrototypeOf(o);}function _inherits(subClass,superClass){if(typeof superClass!==\"function\"&&superClass!==null){throw new TypeError(\"Super expression must either be null or a function\");}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,writable:true,configurable:true}});if(superClass)_setPrototypeOf(subClass,superClass);}function _setPrototypeOf(o,p){_setPrototypeOf=Object.setPrototypeOf||function _setPrototypeOf(o,p){o.__proto__=p;return o;};return _setPrototypeOf(o,p);}import React from'react';import{MDXTag}from'@mdx-js/tag';var MDXContent=/*#__PURE__*/function(_React$Component){_inherits(MDXContent,_React$Component);function MDXContent(props){var _this;_classCallCheck(this,MDXContent);_this=_possibleConstructorReturn(this,_getPrototypeOf(MDXContent).call(this,props));_this.layout=null;return _this;}_createClass(MDXContent,[{key:\"render\",value:function render(){var _this$props=this.props,components=_this$props.components,props=_objectWithoutProperties(_this$props,[\"components\"]);return React.createElement(MDXTag,{name:\"wrapper\",components:components},React.createElement(MDXTag,{name:\"h1\",components:components,props:{\"id\":\"graphql-setup\"}},\"GraphQL Setup\"),React.createElement(MDXTag,{name:\"h2\",components:components,props:{\"id\":\"links\"}},\"Links\"),React.createElement(MDXTag,{name:\"p\",components:components},React.createElement(MDXTag,{name:\"a\",components:components,parentName:\"p\",props:{\"href\":\"https://blog.expo.io/how-to-build-cloud-powered-mobile-apps-with-expo-aws-amplify-2fddc898f9a2\"}},\"https://blog.expo.io/how-to-build-cloud-powered-mobile-apps-with-expo-aws-amplify-2fddc898f9a2\"),React.createElement(MDXTag,{name:\"a\",components:components,parentName:\"p\",props:{\"href\":\"https://hackernoon.com/introducing-the-aws-amplify-graphql-client-8a1a1e514fde\"}},\"https://hackernoon.com/introducing-the-aws-amplify-graphql-client-8a1a1e514fde\")),React.createElement(MDXTag,{name:\"h2\",components:components,props:{\"id\":\"to-get-it-running\"}},\"To get it running\"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{\"className\":\"language-bash\"}},\"amplify init\\namplify add api\\n# > GraphQL\\n# > name\\n# > API Key\\n# > No\\n# > Yes\\n# Select single or one-to-many\\n# y\\n\")),React.createElement(MDXTag,{name:\"p\",components:components},\"Not that you can preset a schema to have used for Amplify.\"),React.createElement(MDXTag,{name:\"p\",components:components},\"Example, create a \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"schema.graphql\"),\" file with following and pass the path during setup:\"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{\"className\":\"language-javascript\"}},\"type Pet @model {\\n  id: ID!\\n  name: String!\\n  description: String\\n  hello: String\\n}\\n\")),React.createElement(MDXTag,{name:\"h3\",components:components,props:{\"id\":\"example-schema\"}},\"Example schema\"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{\"className\":\"language-javascript\"}},\"type Pet @model {\\n  id: ID!\\n  name: String!\\n  description: String\\n}\\n\")),React.createElement(MDXTag,{name:\"h3\",components:components,props:{\"id\":\"example-mutation\"}},\"Example mutation\"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{\"className\":\"language-javascript\"}},\"import API, { graphqlOperation } from '@aws-amplify/api';\\n\\n// define mutation\\nconst createPet = `\\n  mutation($name: String!, $description: String) {\\n    createPet(input: {\\n      name: $name\\n      description: $description\\n  }) {\\n    id\\n    name\\n    description\\n  }\\n}`;\\n// execute a mutation\\nstate = { name: '' };\\nonChangeText = (value) => {\\n  this.setState({ name: value });\\n};\\ncreatePet = async () => {\\n  const pet = this.state;\\n  await API.graphql(graphqlOperation(createPet, pet));\\n};\\n\")),React.createElement(MDXTag,{name:\"h3\",components:components,props:{\"id\":\"example-query\"}},\"Example query\"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{\"className\":\"language-javascript\"}},\"// define query\\nconst listPets = `\\n  query {\\n    listPets {\\n      items {\\n        id\\n        name\\n        description\\n      }\\n    }\\n }\\n`\\n// execute query\\ngetPets = () => {\\n  const data = await API.graphql(graphqlOperation(listPets))\\n  // do something with data\\n}\\n\")),React.createElement(MDXTag,{name:\"h2\",components:components,props:{\"id\":\"autogenerating-code-for-the-schema\"}},\"Autogenerating code for the schema\"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{\"className\":\"language-bash\"}},\"amplify codegen add\\n\")),React.createElement(MDXTag,{name:\"h2\",components:components,props:{\"id\":\"1-many-many-to-many-relationship-schemas\"}},\"1-many, many-to-many relationship schemas\"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{\"className\":\"language-javascript\"}},\"type Post @model {\\n  id: ID!\\n  title: String!\\n  editors: [PostEditor] @connection(name: \\\"PostEditors\\\")\\n}\\n# Create a join model and disable queries as you don't need them\\n# and can query through Post.editors and User.posts\\ntype PostEditor @model(queries: null) {\\n  id: ID!\\n  post: Post! @connection(name: \\\"PostEditors\\\")\\n  editor: User! @connection(name: \\\"UserEditors\\\")\\n}\\ntype User @model {\\n  id: ID!\\n  username: String!\\n  posts: [PostEditor] @connection(name: \\\"UserEditors\\\")\\n}\\n\")));}}]);return MDXContent;}(React.Component);export{MDXContent as default};MDXContent.__docgenInfo={\"description\":\"\",\"methods\":[],\"displayName\":\"MDXContent\"};",{"version":3,"sources":["/Users/okeeffe_d/Business/Documentation/manual/Amplify/Graphql-Setup.md"],"names":["React","MDXTag","MDXContent","props","layout","components","Component"],"mappings":"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","sourcesContent":["\n  import React from 'react'\n  import { MDXTag } from '@mdx-js/tag'\n  \n\nexport default class MDXContent extends React.Component {\n  constructor(props) {\n    super(props)\n    this.layout = null\n  }\n  render() {\n    const { components, ...props } = this.props\n\n    return <MDXTag\n             name=\"wrapper\"\n             \n             components={components}><MDXTag name=\"h1\" components={components} props={{\"id\":\"graphql-setup\"}}>{`GraphQL Setup`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"links\"}}>{`Links`}</MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"a\" components={components} parentName=\"p\" props={{\"href\":\"https://blog.expo.io/how-to-build-cloud-powered-mobile-apps-with-expo-aws-amplify-2fddc898f9a2\"}}>{`https://blog.expo.io/how-to-build-cloud-powered-mobile-apps-with-expo-aws-amplify-2fddc898f9a2`}</MDXTag>\n<MDXTag name=\"a\" components={components} parentName=\"p\" props={{\"href\":\"https://hackernoon.com/introducing-the-aws-amplify-graphql-client-8a1a1e514fde\"}}>{`https://hackernoon.com/introducing-the-aws-amplify-graphql-client-8a1a1e514fde`}</MDXTag></MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"to-get-it-running\"}}>{`To get it running`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-bash\"}}>{`amplify init\namplify add api\n# > GraphQL\n# > name\n# > API Key\n# > No\n# > Yes\n# Select single or one-to-many\n# y\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`Not that you can preset a schema to have used for Amplify.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Example, create a `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`schema.graphql`}</MDXTag>{` file with following and pass the path during setup:`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-javascript\"}}>{`type Pet @model {\n  id: ID!\n  name: String!\n  description: String\n  hello: String\n}\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"example-schema\"}}>{`Example schema`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-javascript\"}}>{`type Pet @model {\n  id: ID!\n  name: String!\n  description: String\n}\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"example-mutation\"}}>{`Example mutation`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-javascript\"}}>{`import API, { graphqlOperation } from '@aws-amplify/api';\n\n// define mutation\nconst createPet = \\`\n  mutation(\\$name: String!, \\$description: String) {\n    createPet(input: {\n      name: \\$name\n      description: \\$description\n  }) {\n    id\n    name\n    description\n  }\n}\\`;\n// execute a mutation\nstate = { name: '' };\nonChangeText = (value) => {\n  this.setState({ name: value });\n};\ncreatePet = async () => {\n  const pet = this.state;\n  await API.graphql(graphqlOperation(createPet, pet));\n};\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"example-query\"}}>{`Example query`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-javascript\"}}>{`// define query\nconst listPets = \\`\n  query {\n    listPets {\n      items {\n        id\n        name\n        description\n      }\n    }\n }\n\\`\n// execute query\ngetPets = () => {\n  const data = await API.graphql(graphqlOperation(listPets))\n  // do something with data\n}\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"autogenerating-code-for-the-schema\"}}>{`Autogenerating code for the schema`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-bash\"}}>{`amplify codegen add\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"1-many-many-to-many-relationship-schemas\"}}>{`1-many, many-to-many relationship schemas`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-javascript\"}}>{`type Post @model {\n  id: ID!\n  title: String!\n  editors: [PostEditor] @connection(name: \"PostEditors\")\n}\n# Create a join model and disable queries as you don't need them\n# and can query through Post.editors and User.posts\ntype PostEditor @model(queries: null) {\n  id: ID!\n  post: Post! @connection(name: \"PostEditors\")\n  editor: User! @connection(name: \"UserEditors\")\n}\ntype User @model {\n  id: ID!\n  username: String!\n  posts: [PostEditor] @connection(name: \"UserEditors\")\n}\n`}</MDXTag></MDXTag>\n           </MDXTag>\n  }\n}\n  "]}]}