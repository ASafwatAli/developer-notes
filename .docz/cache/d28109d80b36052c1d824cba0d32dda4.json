{"remainingRequest":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/docz-core/node_modules/babel-loader/lib/index.js??ref--6-1!/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/@mdx-js/loader/index.js??ref--6-2!/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/source-map-loader/index.js!/Users/dennis.okeeffe/Project-Imposter/developer-notes/manual/Kotlin/Kotlin-Basics.md","dependencies":[{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/manual/Kotlin/Kotlin-Basics.md","mtime":1570486140841},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/cache-loader/dist/cjs.js","mtime":1564095360956},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/docz-core/node_modules/babel-loader/lib/index.js","mtime":1562568123838},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/@mdx-js/loader/index.js","mtime":1565139338792},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/source-map-loader/index.js","mtime":1564095361765}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9vYmplY3RXaXRob3V0UHJvcGVydGllcyBmcm9tIi9Vc2Vycy9kZW5uaXMub2tlZWZmZS9Qcm9qZWN0LUltcG9zdGVyL2RldmVsb3Blci1ub3Rlcy9ub2RlX21vZHVsZXMvYmFiZWwtcHJlc2V0LXJlYWN0LWFwcC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0V2l0aG91dFByb3BlcnRpZXMiOy8qIEBqc3ggbWR4ICovaW1wb3J0IFJlYWN0IGZyb20ncmVhY3QnO2ltcG9ydHttZHh9ZnJvbSdAbWR4LWpzL3JlYWN0JzsvKiBAanN4IG1keCAqL3ZhciBtYWtlU2hvcnRjb2RlPWZ1bmN0aW9uIG1ha2VTaG9ydGNvZGUobmFtZSl7cmV0dXJuIGZ1bmN0aW9uIE1EWERlZmF1bHRTaG9ydGNvZGUocHJvcHMpe2NvbnNvbGUud2FybigiQ29tcG9uZW50ICIrbmFtZSsiIHdhcyBub3QgaW1wb3J0ZWQsIGV4cG9ydGVkLCBvciBwcm92aWRlZCBieSBNRFhQcm92aWRlciBhcyBnbG9iYWwgc2NvcGUiKTtyZXR1cm4gbWR4KCJkaXYiLHByb3BzKTt9O307dmFyIGxheW91dFByb3BzPXt9O3ZhciBNRFhMYXlvdXQ9IndyYXBwZXIiO2V4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIE1EWENvbnRlbnQoX3JlZil7dmFyIGNvbXBvbmVudHM9X3JlZi5jb21wb25lbnRzLHByb3BzPV9vYmplY3RXaXRob3V0UHJvcGVydGllcyhfcmVmLFsiY29tcG9uZW50cyJdKTtyZXR1cm4gbWR4KE1EWExheW91dCxPYmplY3QuYXNzaWduKHt9LGxheW91dFByb3BzLHByb3BzLHtjb21wb25lbnRzOmNvbXBvbmVudHMsbWR4VHlwZToiTURYTGF5b3V0In0pLG1keCgiaDEiLHsiaWQiOiJrb3RsaW4tYmFzaWNzIn0sIktvdGxpbiBCYXNpY3MiKSxtZHgoInAiLG51bGwsIlRoaXMgaGlnaGxpZ2h0IGp1c3QgY292ZXJzIHNjZW5hcmlvcyBub3QgZW50aXJlbHkgc3RhbmRhcmRpc2VkIHRvIG1vc3QgcHJvZ3JhbW1pbmcgbGFuZ3VhZ2VzIGVnIGl0IHdpbGwgbm90IGNvdmVyIHdoaWxlIGxvb3BzIGV0Yy4iKSxtZHgoImgyIix7ImlkIjoia290bGluLXJlcGwifSwiS290bGluIFJFUEwiKSxtZHgoInAiLG51bGwsIkJyZXcgaW5zdGFsbCAiLG1keCgiaW5saW5lQ29kZSIse3BhcmVudE5hbWU6InAifSwia290bGluIiksIiBhbmQgdGhlbiB5b3UnbGwgaGF2ZSBhY2Nlc3MgdG8gdGhlIFJFUEwuIiksbWR4KCJwIixudWxsLCJVc2UgIixtZHgoImlubGluZUNvZGUiLHtwYXJlbnROYW1lOiJwIn0sImtvdGxpbmMiKSwiIHdpdGggbm8gYXJndW1lbnRzIHRvIGVudGVyIHRoZSBSRVBMLiIpLG1keCgicCIsbnVsbCwiVG8gY29tcGlsZSBhbmQgcnVuIGNvZGUgZnJvbSB0aGUgY29tbWFuZCBsaW5lOiIpLG1keCgicHJlIixudWxsLG1keCgiY29kZSIsT2JqZWN0LmFzc2lnbih7cGFyZW50TmFtZToicHJlIn0seyJjbGFzc05hbWUiOiJsYW5ndWFnZS1zaGVsbCJ9KSwia290bGluYyBoZWxsby5rdCAtaW5jbHVkZS1ydW50aW1lIC1kIGhlbGxvLmphclxuamF2YSAtamFyIGhlbGxvLmphclxuIikpLG1keCgiaDIiLHsiaWQiOiJoZWxsby1rb3RsaW4ifSwiSGVsbG8sIEtvdGxpbiIpLG1keCgicHJlIixudWxsLG1keCgiY29kZSIsT2JqZWN0LmFzc2lnbih7cGFyZW50TmFtZToicHJlIn0seyJjbGFzc05hbWUiOiJsYW5ndWFnZS1rb3RsaW4ifSksImZ1biBtYWluKGFyZ3M6IEFycmF5PFN0cmluZz4pIHtcbiAgcHJpbnRsbihcIkhlbGxvLCBLb3RsaW4hXCIpXG59XG4iKSksbWR4KCJoMiIseyJpZCI6InNoaWZ0LW9wZXJhdG9ycyJ9LCJTaGlmdCBPcGVyYXRvcnMiKSxtZHgoInByZSIsbnVsbCxtZHgoImNvZGUiLE9iamVjdC5hc3NpZ24oe3BhcmVudE5hbWU6InByZSJ9LHsiY2xhc3NOYW1lIjoibGFuZ3VhZ2Uta290bGluIn0pLCIxIHNobCAzIC8vIHNoaWZ0IGxlZnRcbjMyIHNociAyIC8vIHNoaWZ0IHJpZ2h0XG4iKSksbWR4KCJoMiIseyJpZCI6Im1hdGgtZnVuY3Rpb25zIn0sIk1hdGggRnVuY3Rpb25zIiksbWR4KCJwcmUiLG51bGwsbWR4KCJjb2RlIixPYmplY3QuYXNzaWduKHtwYXJlbnROYW1lOiJwcmUifSx7ImNsYXNzTmFtZSI6Imxhbmd1YWdlLWtvdGxpbiJ9KSwiaW1wb3J0IGtvdGxpbi5tYXRoLipcblxuZnVuIG1haW4oYXJnczogQXJyYXk8U3RyaW5nPikge1xuICBzaW4oNDUgKiBQSSAvIDE4MCkgLy8gMC43MDcxMDY3ODExODY1NDc1XG59XG5cbnNxcnQoNC4wKSAvLyAyLjBcblxubWF4KDEsMikgLy8gMlxuIikpLG1keCgiaDIiLHsiaWQiOiJuYW1pbmcifSwiTmFtaW5nIiksbWR4KCJwcmUiLG51bGwsbWR4KCJjb2RlIixPYmplY3QuYXNzaWduKHtwYXJlbnROYW1lOiJwcmUifSx7ImNsYXNzTmFtZSI6Imxhbmd1YWdlLWtvdGxpbiJ9KSwidmFsIG51bWJlcjogSW50ID0gMTAgLy8gY29uc3RhbnRzXG5cbmNvbnN0IHZhbCByZWFsbHlDb25zdGFudDogSW50ID0gNDIgLy8gdG9wIGxldmVsIGtleXdvcmQgdG8gbWFyayBpdCBhcyBjb21waWxlLXRpbWUgY29uc3RhbnRcblxudmFyIHZhcmlhYmxlTnVtYmVyOiBJbnQgPSA0MlxudmFyaWFibGVOdW1iZXIgPSAxMiAvLyBhbGxvd2VkXG4iKSksbWR4KCJoMiIseyJpZCI6InR5cGUtY29udmVyc2lvbiJ9LCJUeXBlIENvbnZlcnNpb24iKSxtZHgoInByZSIsbnVsbCxtZHgoImNvZGUiLE9iamVjdC5hc3NpZ24oe3BhcmVudE5hbWU6InByZSJ9LHsiY2xhc3NOYW1lIjoibGFuZ3VhZ2Uta290bGluIn0pLCJ2YXIgaW50ZWdlcjogSW50ID0gMTAwXG52YXIgZGVjaW1hbDogRG91YmxlID0gMTIuNVxuaW50ZWdlciA9IGRlY2ltYWwgLy8gVEhST1dTIGVycm9yXG5pbnRlZ2VyID0gZGVjaW1hbC50b0ludCgpIC8vIHdvcmtzIG5pY2VyXG4iKSksbWR4KCJwIixudWxsLCJUbyBkbyBpbXBsaWNpdCBjb252ZXJzaW9uOiIpLG1keCgicHJlIixudWxsLG1keCgiY29kZSIsT2JqZWN0LmFzc2lnbih7cGFyZW50TmFtZToicHJlIn0seyJjbGFzc05hbWUiOiJsYW5ndWFnZS1rb3RsaW4ifSksInZhbCBob3VybHlSYXRlOiBEb3VibGUgPSAxOS41XG52YWwgaG91cnNXb3JrZWQ6IEludCA9IDEwXG52YWwgdG90YWxDb3N0OiBEb3VibGUgPSBob3VybHlSYXRlICogaG91cnNXb3JrZWRcbiIpKSxtZHgoImgyIix7ImlkIjoiY2hhcnMtdnMtc3RyaW5ncyJ9LCJDaGFycyBWcyBTdHJpbmdzIiksbWR4KCJwcmUiLG51bGwsbWR4KCJjb2RlIixPYmplY3QuYXNzaWduKHtwYXJlbnROYW1lOiJwcmUifSx7ImNsYXNzTmFtZSI6Imxhbmd1YWdlLWtvdGxpbiJ9KSwidmFsIGNoYXJhY3RlckE6IENoYXIgPSAnYScgLy8gbXVzdCBiZSBzaW5nbGUgcXVvdGVzXG52YWwgc3RyaW5nRG9nOiBTdHJpbmcgPSBcIkRvZ1wiIC8vIG11c3QgYmUgZG91YmxlIHF1b3Rlc1xuIikpLG1keCgicCIsbnVsbCwiU3RyaW5nIGludGVycG9sYXRpb24gaGFwcGVucyB3aXRoICIsbWR4KCJpbmxpbmVDb2RlIix7cGFyZW50TmFtZToicCJ9LCIkIiksIjoiKSxtZHgoInByZSIsbnVsbCxtZHgoImNvZGUiLE9iamVjdC5hc3NpZ24oe3BhcmVudE5hbWU6InByZSJ9LHsiY2xhc3NOYW1lIjoibGFuZ3VhZ2Uta290bGluIn0pLCJ2YXIgbmFtZSA9IFwiRGlja1wiXG52YXIgbWVzc2FnZSA9IFwiSGVsbG8gbXkgbmFtZSBpcyAkbmFtZSFcIiAvLyBcIkhlbGxvIG15IG5hbWUgaXMgRGljayFcIlxuIikpLG1keCgicCIsbnVsbCwiTXVsdGlsaW5lIHN0cmluZ3M6IiksbWR4KCJwcmUiLG51bGwsbWR4KCJjb2RlIixPYmplY3QuYXNzaWduKHtwYXJlbnROYW1lOiJwcmUifSx7ImNsYXNzTmFtZSI6Imxhbmd1YWdlLWtvdGxpbiJ9KSwibGV0IGJpZ1N0cmluZyA9IFwiXCJcIlxuICB8WW91IGNhbiBoYXZlIGEgc3RyaW5nXG4gIHx0aGF0IGNvbnRhaW5zIG11bHRpcGxlXG4gIHxsaW5lc1xuICB8YnlcbiAgfGRvaW5nIHRoaXMuXG4gIFwiXCJcIi50cmltTWFyZ2luKClcbnByaW50bG4oYmlnU3RyaW5nKVxuIikpLG1keCgicCIsbnVsbCwiVGhlIGFib3ZlIHdpbGwgcHJpbnQ6IiksbWR4KCJwcmUiLG51bGwsbWR4KCJjb2RlIixPYmplY3QuYXNzaWduKHtwYXJlbnROYW1lOiJwcmUifSx7ImNsYXNzTmFtZSI6Imxhbmd1YWdlLXRleHQifSksIllvdSBjYW4gaGF2ZSBhIHN0cmluZ1xudGhhdCBjb250YWlucyBtdWx0aXBsZVxubGluZXNcbmJ5XG5kb2luZyB0aGlzLlxuIikpLG1keCgiaDIiLHsiaWQiOiJwYWlyLS10cmlwbGVzIn0sIlBhaXIgKyBUcmlwbGVzIiksbWR4KCJwcmUiLG51bGwsbWR4KCJjb2RlIixPYmplY3QuYXNzaWduKHtwYXJlbnROYW1lOiJwcmUifSx7ImNsYXNzTmFtZSI6Imxhbmd1YWdlLWtvdGxpbiJ9KSwidmFsIGNvb3JkaW5hdGVzOiBQYWlyPEludCwgSW50PiA9IFBhaXIoMiwgMylcbnZhbCBjb29yZGluYXRlczNEID0gVHJpcGxlKDIsIDMsIDEpXG4iKSksbWR4KCJoMiIseyJpZCI6Im51bWJlci10eXBlcyJ9LCJOdW1iZXIgdHlwZXMiKSxtZHgoInByZSIsbnVsbCxtZHgoImNvZGUiLE9iamVjdC5hc3NpZ24oe3BhcmVudE5hbWU6InByZSJ9LHsiY2xhc3NOYW1lIjoibGFuZ3VhZ2Uta290bGluIn0pLCJ2YWwgYTogU2hvcnQgPSAxMlxudmFsIGI6IEJ5dGUgPSAxMjBcbnZhbCBjOiBJbnQgPSAtMTAwMDAwXG5cbnZhbCBhbnN3ZXIgPSBhICsgYiArIGMgLy8gQW5zd2VyIHdpbGwgYmUgYW4gSW50XG4iKSksbWR4KCJoMiIseyJpZCI6ImFueS11bml0LWFuZC1ub3RoaW5nIn0sIkFueSwgVW5pdCwgYW5kIE5vdGhpbmciKSxtZHgoInByZSIsbnVsbCxtZHgoImNvZGUiLE9iamVjdC5hc3NpZ24oe3BhcmVudE5hbWU6InByZSJ9LHsiY2xhc3NOYW1lIjoibGFuZ3VhZ2Uta290bGluIn0pLCJ2YWwgYW55TnVtOiBBbnkgPSAxXG52YWwgYW55U3RyaW5nOiBBbnkgPSBcIllvXCJcbiIpKSxtZHgoInAiLG51bGwsbWR4KCJpbmxpbmVDb2RlIix7cGFyZW50TmFtZToicCJ9LCJVbml0IiksIiBpcyBhIHNwZWNpYWwgdHlwZSB3aGljaCBvbmx5IGV2ZXIgcmVwcmVzZW50cyBvbmUgdmFsdWU6IHRoZSBVbml0IG9iamVjdC4gSXQgaXMgc2ltaWxhciB0byB0aGUgdm9pZCB0eXBlIGluIEphdmEsIGV4Y2VwdCBpdCBtYWtlcyB3b3JraW5nIHdpdGggZ2VuZXJpY3MgZWFzaWVyOiIpLG1keCgicHJlIixudWxsLG1keCgiY29kZSIsT2JqZWN0LmFzc2lnbih7cGFyZW50TmFtZToicHJlIn0seyJjbGFzc05hbWUiOiJsYW5ndWFnZS1rb3RsaW4ifSksImZ1biBhZGQoKSB7XG4gIHZhbCByZXN1bHQgPSAyICsgMlxuICBwcmludGxuKHJlc3VsdClcbn1cblxuLy8gc2FtZSBhc1xuZnVuIGFkZCgpOiBVbml0IHtcbiAgdmFsIHJlc3VsdCA9IDIgKyAyXG4gIHByaW50bG4ocmVzdWx0KVxufVxuIikpLG1keCgicCIsbnVsbCxtZHgoImlubGluZUNvZGUiLHtwYXJlbnROYW1lOiJwIn0sIk5vdGhpbmciKSwiIGlzIGEgdHlwZSB0aGF0IGlzIGhlbHBmdWwgZm9yIGRlY2xhcmluZyB0aGF0IGEgZnVuY3Rpb24gbm90IG9ubHkgZG9lc24ndCByZXR1cm4gYW55dGhpbmcsIGJ1dCBhbHNvIG5ldmVyIGNvbXBsZXRlcy4iKSxtZHgoInAiLG51bGwsIlRoaXMgY2FuIG9jY3VyIGlmIGEgZnVuY3Rpb24gZWl0aGVyIGNhdXNlcyB0aGUgcHJvZ3JhbSB0byBzdG9wIGNvbXBsZXRlbHkgYnkgdGhyb3dpbmcgYW4gIixtZHgoImlubGluZUNvZGUiLHtwYXJlbnROYW1lOiJwIn0sIkV4Y2VwdGlvbiIpLCIgb3IgaWYgaXQgc2ltcGx5IGdvZXMgb24gZm9yZXZlciB3aXRob3V0IGV2ZXIgZmluaXNoaW5nLiIpLG1keCgiaDIiLHsiaWQiOiJjb250cm9sLWxvZ2ljIn0sIkNvbnRyb2wgTG9naWMiKSxtZHgoInAiLG51bGwsIldvcnRoIG5vdGluZyBpZi9lbHNlIGNhbiBiZSBzaW5nbGUgbGluZSBpZSAiLG1keCgiaW5saW5lQ29kZSIse3BhcmVudE5hbWU6InAifSwidmFsIG1pbiA9IGlmIChhIDwgYikgYSBlbHNlIGIiKSwiLiIpLG1keCgiaDMiLHsiaWQiOiJyYW5nZSJ9LCJSYW5nZSIpLG1keCgicHJlIixudWxsLG1keCgiY29kZSIsT2JqZWN0LmFzc2lnbih7cGFyZW50TmFtZToicHJlIn0seyJjbGFzc05hbWUiOiJsYW5ndWFnZS1rb3RsaW4ifSksInZhbCBjbG9zZWRSYW5nZSA9IDAuLjUgLy8gKDAsMSwyLDMsNCw1KVxudmFsIGhhbGZPcGVuUmFuZ2UgPSAwIHVudGlsIDUgLy8gKDAsMSwyLDMsNClcbnZhbCBkZWNyZWFzaW5nUmFuZ2UgPSA1IGRvd25UbyAwIC8vICg1LDQsMywyLDEsMClcbiIpKSxtZHgoImgzIix7ImlkIjoicmVwZWF0In0sIlJlcGVhdCIpLG1keCgicHJlIixudWxsLG1keCgiY29kZSIsT2JqZWN0LmFzc2lnbih7cGFyZW50TmFtZToicHJlIn0seyJjbGFzc05hbWUiOiJsYW5ndWFnZS1rb3RsaW4ifSksInN1bSA9IDFcbnZhciBsYXN0U3VtID0gMFxucmVwZWF0KDEwKSB7XG4gIHZhbCB0ZW1wID0gc3VtXG4gIHN1bSArPSBsYXN0U3VtXG4gIGxhc3RTdW0gPSB0ZW1wXG59XG4iKSksbWR4KCJoMyIseyJpZCI6InN0ZXBwaW5nIn0sIlN0ZXBwaW5nIiksbWR4KCJwcmUiLG51bGwsbWR4KCJjb2RlIixPYmplY3QuYXNzaWduKHtwYXJlbnROYW1lOiJwcmUifSx7ImNsYXNzTmFtZSI6Imxhbmd1YWdlLWtvdGxpbiJ9KSwic3VtID0gMFxuZm9yIChpIGluIDEuLmNvdW50IHN0ZXAgMikge1xuICBzdW0gKz0gaVxufVxuIikpLG1keCgicCIsbnVsbCwiWW91IGNvdWxkIGV2ZW4gIixtZHgoImlubGluZUNvZGUiLHtwYXJlbnROYW1lOiJwIn0sImRvd25UbyIpLCIgc3RlcDoiKSxtZHgoInByZSIsbnVsbCxtZHgoImNvZGUiLE9iamVjdC5hc3NpZ24oe3BhcmVudE5hbWU6InByZSJ9LHsiY2xhc3NOYW1lIjoibGFuZ3VhZ2Uta290bGluIn0pLCJzdW0gPSAwXG5mb3IgKGkgaW4gY291bnQgZG93blRvIDEgc3RlcCAyKSB7XG4gIHN1bSArPSBpXG59XG4iKSksbWR4KCJoMyIseyJpZCI6ImxhYmVsbGVkLXN0YXRlbWVudHMifSwiTGFiZWxsZWQgU3RhdGVtZW50cyIpLG1keCgicHJlIixudWxsLG1keCgiY29kZSIsT2JqZWN0LmFzc2lnbih7cGFyZW50TmFtZToicHJlIn0seyJjbGFzc05hbWUiOiJsYW5ndWFnZS1rb3RsaW4ifSksInN1bSA9IDBcbmZvciAocm93IGluIDAgdW50aWwgOCkge1xuICBpZiAocm93ICUgMiA9PSAwKSB7XG4gICAgY29udGludWVcbiAgfVxuICBmb3IgKGNvbHVtbiBpbiAwIHVudGlsIDgpIHtcbiAgICBzdW0gKz0gcm93ICogY29sdW1uXG4gIH1cbn1cbiIpKSxtZHgoImgyIix7ImlkIjoid2hlbi1leHByZXNzaW9ucyJ9LCJXaGVuIEV4cHJlc3Npb25zIiksbWR4KCJwcmUiLG51bGwsbWR4KCJjb2RlIixPYmplY3QuYXNzaWduKHtwYXJlbnROYW1lOiJwcmUifSx7ImNsYXNzTmFtZSI6Imxhbmd1YWdlLWtvdGxpbiJ9KSwidmFsIG51bWJlciA9IDEwXG53aGVuIChudW1iZXIpIHtcbiAgMCAtPiBwcmludGxuKFwiWmVyb1wiKVxuICBlbHNlIC0+IHByaW50bG4oXCJOb24temVyb1wiKVxufVxuXG4vLyBtdWx0aS12YWx1ZWQgd2hlbnNcbnZhbCBzdHJpbmcgPSBcIkRvZ1wiXG53aGVuIChzdHJpbmcpIHtcbiAgXCJDYXRcIiwgXCJEb2dcIiAtPiBwcmludGxuKFwiQW5pbWFsIGlzIGEgaG91c2UgcGV0LlwiKVxuICBlbHNlIC0+IHByaW50bG4oXCJBbmltYWwgaXMgbm90IGEgaG91c2UgcGV0LlwiKVxufVxuXG4vLyB3aGVuIGluIHJhbmdlXG50aW1lT2ZEYXkgPSB3aGVuIChob3VyT2ZEYXkpIHtcbiAgaW4gMC4uNSAtPiBcIkVhcmx5IG1vcm5pbmdcIlxuICBpbiA2Li4xMSAtPiBcIk1vcm5pbmdcIlxuICBpbiAxMi4uMTYgLT4gXCJBZnRlcm5vb25cIlxuICBpbiAxNy4uMTkgLT4gXCJFdmVuaW5nXCJcbiAgaW4gMjAuLjIzIC0+IFwiTGF0ZSBldmVuaW5nXCJcbiAgZWxzZSAtPiBcIklOVkFMSUQgSE9VUiFcIlxufVxuXG4vLyBjb25kaXRpb25zIGluIHdoZW4gc3RhdGVtZW50c1xud2hlbiB7XG4gIHggPT0gMCAmJiB5ID09IDAgJiYgeiA9PSAwIC0+IHByaW50bG4oXCJPcmlnaW5cIilcbiAgeSA9PSAwICYmIHogPT0gMCAtPiBwcmludGxuKFwiT24gdGhlIHgtYXhpcyBhdCB4ID0gJHhcIilcbiAgeCA9PSAwICYmIHogPT0gMCAtPiBwcmludGxuKFwiT24gdGhlIHktYXhpcyBhdCB5ID0gJHlcIilcbiAgeCA9PSAwICYmIHkgPT0gMCAtPiBwcmludGxuKFwiT24gdGhlIHotYXhpcyBhdCB6ID0gJHpcIilcbiAgZWxzZSAtPiBwcmludGxuKFwiU29tZXdoZXJlIGluIHNwYWNlIGF0IHggPSAkeCwgeSA9ICR5LCB6ID0gJHpcIilcbn1cbiIpKSxtZHgoImgyIix7ImlkIjoiZnVuY3Rpb25zIn0sIkZ1bmN0aW9ucyIpLG1keCgicCIsbnVsbCwiTm90ZSB0aGF0IHBhcmFtZXRlcnMgYXJlIGNvbnN0YW50cyBieSBkZWZhdWx0LiIpLG1keCgicHJlIixudWxsLG1keCgiY29kZSIsT2JqZWN0LmFzc2lnbih7cGFyZW50TmFtZToicHJlIn0seyJjbGFzc05hbWUiOiJsYW5ndWFnZS1rb3RsaW4ifSksImZ1biBwcmludE15TmFtZSgpIHtcbiAgcHJpbnRsbihcIk15IG5hbWUgaXMgRGljayBMdWNhcy5cIilcbn1cblxuLy8gd2l0aCBwYXJhbXNcbmZ1biBwcmludE11bHRpcGxlT2ZGaXZlKHZhbHVlOiBJbnQpIHtcbiAgcHJpbnRsbihcIiR2YWx1ZSAqIDUgPSAke3ZhbHVlICogNX1cIilcbn1cbnByaW50TXVsdGlwbGVPZkZpdmUoMTApXG5cbi8vIHN0cmluZyBpbnRlcnBvbGF0ZWRcbmZ1biBwcmludE11bHRpcGxlT2YobXVsdGlwbGllcjogSW50LCBhbmRWYWx1ZTogSW50KSB7XG4gIHByaW50bG4oXCIkbXVsdGlwbGllciAqICRhbmRWYWx1ZSA9ICR7bXVsdGlwbGllciAqIGFuZFZhbHVlfVwiKVxufVxucHJpbnRNdWx0aXBsZU9mKDQsIDIpXG4iKSksbWR4KCJwIixudWxsLCJJZiBhIGZ1bmN0aW9uIGNvbnNpc3RzIHNvbGVseSBvZiBhIHNpbmdsZSBleHByZXNzaW9uLCB5b3UgY2FuIGFzc2lnbiB0aGUgZXhwcmVzc2lvbiB0byB0aGUgZnVuY3Rpb24gdXNpbmcgPSB3aGlsZSBhdCB0aGUgc2FtZSB0aW1lIG5vdCB1c2luZyBicmFjZXMsIGEgcmV0dXJuIHR5cGUsIG9yIGEgcmV0dXJuIHN0YXRlbWVudDoiKSxtZHgoInByZSIsbnVsbCxtZHgoImNvZGUiLE9iamVjdC5hc3NpZ24oe3BhcmVudE5hbWU6InByZSJ9LHsiY2xhc3NOYW1lIjoibGFuZ3VhZ2Uta290bGluIn0pLCJmdW4gbXVsdGlwbHlJbmZlcnJlZChudW1iZXI6IEludCwgbXVsdGlwbGllcjogSW50KSA9IG51bWJlciAqIG11bHRpcGxpZXJcbiIpKSxtZHgoImgzIix7ImlkIjoib3ZlcmxvYWRpbmcifSwiT3ZlcmxvYWRpbmciKSxtZHgoInByZSIsbnVsbCxtZHgoImNvZGUiLE9iamVjdC5hc3NpZ24oe3BhcmVudE5hbWU6InByZSJ9LHsiY2xhc3NOYW1lIjoibGFuZ3VhZ2Uta290bGluIn0pLCJmdW4gZ2V0VmFsdWUodmFsdWU6IEludCk6IEludCB7XG4gIHJldHVybiB2YWx1ZSArIDFcbn1cbmZ1biBnZXRWYWx1ZSh2YWx1ZTogU3RyaW5nKTogU3RyaW5nIHtcbiAgcmV0dXJuIFwiVGhlIHZhbHVlIGlzICR2YWx1ZVwiXG59XG4iKSksbWR4KCJoMyIseyJpZCI6ImZ1bmN0aW9ucy1hcy12YXJpYWJsZXMifSwiRnVuY3Rpb25zIEFzIFZhcmlhYmxlcyIpLG1keCgicHJlIixudWxsLG1keCgiY29kZSIsT2JqZWN0LmFzc2lnbih7cGFyZW50TmFtZToicHJlIn0seyJjbGFzc05hbWUiOiJsYW5ndWFnZS1rb3RsaW4ifSksImZ1biBhZGQoYTogSW50LCBiOiBJbnQpOiBJbnQge1xuICByZXR1cm4gYSArIGJcbn1cblxudmFyIGZ1bmN0aW9uID0gOjphZGRcbmZ1bmN0aW9uKDQsMikgLy8gd29ya3NcbiIpKSk7fWlmKHR5cGVvZiBNRFhDb250ZW50IT09J3VuZGVmaW5lZCcmJk1EWENvbnRlbnQmJk1EWENvbnRlbnQ9PT1PYmplY3QoTURYQ29udGVudCkmJk9iamVjdC5pc0V4dGVuc2libGUoTURYQ29udGVudCkpe09iamVjdC5kZWZpbmVQcm9wZXJ0eShNRFhDb250ZW50LCdfX2ZpbGVtZXRhJyx7ZW51bWVyYWJsZTp0cnVlLGNvbmZpZ3VyYWJsZTp0cnVlLHZhbHVlOntuYW1lOiJNRFhDb250ZW50IixmaWxlbmFtZToibWFudWFsL0tvdGxpbi9Lb3RsaW4tQmFzaWNzLm1kIn19KTt9TURYQ29udGVudC5pc01EWENvbXBvbmVudD10cnVlOw=="},{"version":3,"sources":["/Users/dennis.okeeffe/Project-Imposter/developer-notes/manual/Kotlin/Kotlin-Basics.md"],"names":["React","mdx","makeShortcode","name","MDXDefaultShortcode","props","console","warn","layoutProps","MDXLayout","MDXContent","components","isMDXComponent"],"mappings":"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","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"kotlin-basics\"\n    }}>{`Kotlin Basics`}</h1>\n    <p>{`This highlight just covers scenarios not entirely standardised to most programming languages eg it will not cover while loops etc.`}</p>\n    <h2 {...{\n      \"id\": \"kotlin-repl\"\n    }}>{`Kotlin REPL`}</h2>\n    <p>{`Brew install `}<inlineCode parentName=\"p\">{`kotlin`}</inlineCode>{` and then you'll have access to the REPL.`}</p>\n    <p>{`Use `}<inlineCode parentName=\"p\">{`kotlinc`}</inlineCode>{` with no arguments to enter the REPL.`}</p>\n    <p>{`To compile and run code from the command line:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`kotlinc hello.kt -include-runtime -d hello.jar\njava -jar hello.jar\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"hello-kotlin\"\n    }}>{`Hello, Kotlin`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-kotlin\"\n      }}>{`fun main(args: Array<String>) {\n  println(\"Hello, Kotlin!\")\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"shift-operators\"\n    }}>{`Shift Operators`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-kotlin\"\n      }}>{`1 shl 3 // shift left\n32 shr 2 // shift right\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"math-functions\"\n    }}>{`Math Functions`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-kotlin\"\n      }}>{`import kotlin.math.*\n\nfun main(args: Array<String>) {\n  sin(45 * PI / 180) // 0.7071067811865475\n}\n\nsqrt(4.0) // 2.0\n\nmax(1,2) // 2\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"naming\"\n    }}>{`Naming`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-kotlin\"\n      }}>{`val number: Int = 10 // constants\n\nconst val reallyConstant: Int = 42 // top level keyword to mark it as compile-time constant\n\nvar variableNumber: Int = 42\nvariableNumber = 12 // allowed\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"type-conversion\"\n    }}>{`Type Conversion`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-kotlin\"\n      }}>{`var integer: Int = 100\nvar decimal: Double = 12.5\ninteger = decimal // THROWS error\ninteger = decimal.toInt() // works nicer\n`}</code></pre>\n    <p>{`To do implicit conversion:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-kotlin\"\n      }}>{`val hourlyRate: Double = 19.5\nval hoursWorked: Int = 10\nval totalCost: Double = hourlyRate * hoursWorked\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"chars-vs-strings\"\n    }}>{`Chars Vs Strings`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-kotlin\"\n      }}>{`val characterA: Char = 'a' // must be single quotes\nval stringDog: String = \"Dog\" // must be double quotes\n`}</code></pre>\n    <p>{`String interpolation happens with `}<inlineCode parentName=\"p\">{`$`}</inlineCode>{`:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-kotlin\"\n      }}>{`var name = \"Dick\"\nvar message = \"Hello my name is $name!\" // \"Hello my name is Dick!\"\n`}</code></pre>\n    <p>{`Multiline strings:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-kotlin\"\n      }}>{`let bigString = \"\"\"\n  |You can have a string\n  |that contains multiple\n  |lines\n  |by\n  |doing this.\n  \"\"\".trimMargin()\nprintln(bigString)\n`}</code></pre>\n    <p>{`The above will print:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-text\"\n      }}>{`You can have a string\nthat contains multiple\nlines\nby\ndoing this.\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"pair--triples\"\n    }}>{`Pair + Triples`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-kotlin\"\n      }}>{`val coordinates: Pair<Int, Int> = Pair(2, 3)\nval coordinates3D = Triple(2, 3, 1)\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"number-types\"\n    }}>{`Number types`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-kotlin\"\n      }}>{`val a: Short = 12\nval b: Byte = 120\nval c: Int = -100000\n\nval answer = a + b + c // Answer will be an Int\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"any-unit-and-nothing\"\n    }}>{`Any, Unit, and Nothing`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-kotlin\"\n      }}>{`val anyNum: Any = 1\nval anyString: Any = \"Yo\"\n`}</code></pre>\n    <p><inlineCode parentName=\"p\">{`Unit`}</inlineCode>{` is a special type which only ever represents one value: the Unit object. It is similar to the void type in Java, except it makes working with generics easier:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-kotlin\"\n      }}>{`fun add() {\n  val result = 2 + 2\n  println(result)\n}\n\n// same as\nfun add(): Unit {\n  val result = 2 + 2\n  println(result)\n}\n`}</code></pre>\n    <p><inlineCode parentName=\"p\">{`Nothing`}</inlineCode>{` is a type that is helpful for declaring that a function not only doesn't return anything, but also never completes.`}</p>\n    <p>{`This can occur if a function either causes the program to stop completely by throwing an `}<inlineCode parentName=\"p\">{`Exception`}</inlineCode>{` or if it simply goes on forever without ever finishing.`}</p>\n    <h2 {...{\n      \"id\": \"control-logic\"\n    }}>{`Control Logic`}</h2>\n    <p>{`Worth noting if/else can be single line ie `}<inlineCode parentName=\"p\">{`val min = if (a < b) a else b`}</inlineCode>{`.`}</p>\n    <h3 {...{\n      \"id\": \"range\"\n    }}>{`Range`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-kotlin\"\n      }}>{`val closedRange = 0..5 // (0,1,2,3,4,5)\nval halfOpenRange = 0 until 5 // (0,1,2,3,4)\nval decreasingRange = 5 downTo 0 // (5,4,3,2,1,0)\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"repeat\"\n    }}>{`Repeat`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-kotlin\"\n      }}>{`sum = 1\nvar lastSum = 0\nrepeat(10) {\n  val temp = sum\n  sum += lastSum\n  lastSum = temp\n}\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"stepping\"\n    }}>{`Stepping`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-kotlin\"\n      }}>{`sum = 0\nfor (i in 1..count step 2) {\n  sum += i\n}\n`}</code></pre>\n    <p>{`You could even `}<inlineCode parentName=\"p\">{`downTo`}</inlineCode>{` step:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-kotlin\"\n      }}>{`sum = 0\nfor (i in count downTo 1 step 2) {\n  sum += i\n}\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"labelled-statements\"\n    }}>{`Labelled Statements`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-kotlin\"\n      }}>{`sum = 0\nfor (row in 0 until 8) {\n  if (row % 2 == 0) {\n    continue\n  }\n  for (column in 0 until 8) {\n    sum += row * column\n  }\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"when-expressions\"\n    }}>{`When Expressions`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-kotlin\"\n      }}>{`val number = 10\nwhen (number) {\n  0 -> println(\"Zero\")\n  else -> println(\"Non-zero\")\n}\n\n// multi-valued whens\nval string = \"Dog\"\nwhen (string) {\n  \"Cat\", \"Dog\" -> println(\"Animal is a house pet.\")\n  else -> println(\"Animal is not a house pet.\")\n}\n\n// when in range\ntimeOfDay = when (hourOfDay) {\n  in 0..5 -> \"Early morning\"\n  in 6..11 -> \"Morning\"\n  in 12..16 -> \"Afternoon\"\n  in 17..19 -> \"Evening\"\n  in 20..23 -> \"Late evening\"\n  else -> \"INVALID HOUR!\"\n}\n\n// conditions in when statements\nwhen {\n  x == 0 && y == 0 && z == 0 -> println(\"Origin\")\n  y == 0 && z == 0 -> println(\"On the x-axis at x = $x\")\n  x == 0 && z == 0 -> println(\"On the y-axis at y = $y\")\n  x == 0 && y == 0 -> println(\"On the z-axis at z = $z\")\n  else -> println(\"Somewhere in space at x = $x, y = $y, z = $z\")\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"functions\"\n    }}>{`Functions`}</h2>\n    <p>{`Note that parameters are constants by default.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-kotlin\"\n      }}>{`fun printMyName() {\n  println(\"My name is Dick Lucas.\")\n}\n\n// with params\nfun printMultipleOfFive(value: Int) {\n  println(\"$value * 5 = \\${value * 5}\")\n}\nprintMultipleOfFive(10)\n\n// string interpolated\nfun printMultipleOf(multiplier: Int, andValue: Int) {\n  println(\"$multiplier * $andValue = \\${multiplier * andValue}\")\n}\nprintMultipleOf(4, 2)\n`}</code></pre>\n    <p>{`If a function consists solely of a single expression, you can assign the expression to the function using = while at the same time not using braces, a return type, or a return statement:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-kotlin\"\n      }}>{`fun multiplyInferred(number: Int, multiplier: Int) = number * multiplier\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"overloading\"\n    }}>{`Overloading`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-kotlin\"\n      }}>{`fun getValue(value: Int): Int {\n  return value + 1\n}\nfun getValue(value: String): String {\n  return \"The value is $value\"\n}\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"functions-as-variables\"\n    }}>{`Functions As Variables`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-kotlin\"\n      }}>{`fun add(a: Int, b: Int): Int {\n  return a + b\n}\n\nvar function = ::add\nfunction(4,2) // works\n`}</code></pre>\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  "]}]}