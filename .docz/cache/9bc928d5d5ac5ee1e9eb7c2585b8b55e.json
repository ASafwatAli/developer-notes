{"remainingRequest":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/docz-core/node_modules/babel-loader/lib/index.js??ref--6-1!/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/@mdx-js/loader/index.js??ref--6-2!/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/source-map-loader/index.js!/Users/dennis.okeeffe/Project-Imposter/developer-notes/manual/Python/Python-Slack-Bot.md","dependencies":[{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/manual/Python/Python-Slack-Bot.md","mtime":1579078174020},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/cache-loader/dist/cjs.js","mtime":1564095360956},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/docz-core/node_modules/babel-loader/lib/index.js","mtime":1562568123838},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/@mdx-js/loader/index.js","mtime":1565139338792},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/source-map-loader/index.js","mtime":1564095361765}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9vYmplY3RXaXRob3V0UHJvcGVydGllcyBmcm9tIi9Vc2Vycy9kZW5uaXMub2tlZWZmZS9Qcm9qZWN0LUltcG9zdGVyL2RldmVsb3Blci1ub3Rlcy9ub2RlX21vZHVsZXMvYmFiZWwtcHJlc2V0LXJlYWN0LWFwcC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0V2l0aG91dFByb3BlcnRpZXMiOy8qIEBqc3ggbWR4ICovaW1wb3J0IFJlYWN0IGZyb20ncmVhY3QnO2ltcG9ydHttZHh9ZnJvbSdAbWR4LWpzL3JlYWN0JzsvKiBAanN4IG1keCAqL3ZhciBtYWtlU2hvcnRjb2RlPWZ1bmN0aW9uIG1ha2VTaG9ydGNvZGUobmFtZSl7cmV0dXJuIGZ1bmN0aW9uIE1EWERlZmF1bHRTaG9ydGNvZGUocHJvcHMpe2NvbnNvbGUud2FybigiQ29tcG9uZW50ICIrbmFtZSsiIHdhcyBub3QgaW1wb3J0ZWQsIGV4cG9ydGVkLCBvciBwcm92aWRlZCBieSBNRFhQcm92aWRlciBhcyBnbG9iYWwgc2NvcGUiKTtyZXR1cm4gbWR4KCJkaXYiLHByb3BzKTt9O307dmFyIGxheW91dFByb3BzPXt9O3ZhciBNRFhMYXlvdXQ9IndyYXBwZXIiO2V4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIE1EWENvbnRlbnQoX3JlZil7dmFyIGNvbXBvbmVudHM9X3JlZi5jb21wb25lbnRzLHByb3BzPV9vYmplY3RXaXRob3V0UHJvcGVydGllcyhfcmVmLFsiY29tcG9uZW50cyJdKTtyZXR1cm4gbWR4KE1EWExheW91dCxPYmplY3QuYXNzaWduKHt9LGxheW91dFByb3BzLHByb3BzLHtjb21wb25lbnRzOmNvbXBvbmVudHMsbWR4VHlwZToiTURYTGF5b3V0In0pLG1keCgiaHIiLG51bGwpLG1keCgiaDIiLHsiaWQiOiJpbnRybyJ9LCJJbnRybyIpLG1keCgicCIsbnVsbCwiRmlyc3Qgb2YgYWxsLCBjbG9uZSB0aGUgIixtZHgoImlubGluZUNvZGUiLHtwYXJlbnROYW1lOiJwIn0sInB5dGhvbl9ydG1ib3QiKSwiIGdpdCByZXBvLiIpLG1keCgicCIsbnVsbCwiVGhlbiwgaGVhZCB0byBzbGFjay5jb20gZm9yIHlvdXIgcGVyc29uYWwgYWNjb3VudCwgY2xpY2sgIixtZHgoImlubGluZUNvZGUiLHtwYXJlbnROYW1lOiJwIn0sImJ1aWxkIiksIiBmcm9tIHRoZSBhcHBzIHBhZ2UgYW5kIGFkZCBhIGN1c3RvbSBib3QuIiksbWR4KCJwIixudWxsLCJHcmFiIHRoZSBBUEkgdG9rZW4gYW5kIGNvcHkgaXQgaW50byBhICIsbWR4KCJpbmxpbmVDb2RlIix7cGFyZW50TmFtZToicCJ9LCJydG1ib3QuY29uZiIpLCIgZmlsZSBhdCB0aGUgcm9vdCBvZiB5b3VyIGRpcmVjdG9yeS4iKSxtZHgoImgyIix7ImlkIjoiY3JlYXRpbmctcGx1Z2lucyJ9LCJDcmVhdGluZyBwbHVnaW5zIiksbWR4KCJwIixudWxsLCJJbiB0aGUgIixtZHgoImlubGluZUNvZGUiLHtwYXJlbnROYW1lOiJwIn0sInBsdWdpbnMiKSwiIGZvbGRlciwgY3JlYXRlIGEgZm9sZGVyIHdpdGggdGhlIG5hbWUgb2YgdGhlIHBsdWdpbiBhbmQgdGhlbiB3aXRoaW4gdGhlICIsbWR4KCJpbmxpbmVDb2RlIix7cGFyZW50TmFtZToicCJ9LCJwbHVnaW4ucHkiKSwiIGl0c2VsZi4gSW5zaWRlLCB5b3Ugd2FudCB0byBlbnN1cmUgeW91IGhhdmUgYSAiLG1keCgiaW5saW5lQ29kZSIse3BhcmVudE5hbWU6InAifSwib3V0cHV0cyA9IFtdIiksIiBhbmQgIixtZHgoImlubGluZUNvZGUiLHtwYXJlbnROYW1lOiJwIn0sImNyb250YWJsZSA9IFtdIiksIiBsaXN0IHJlYWR5IHRvIGdvLiIpLG1keCgicCIsbnVsbCwiRnJvbSBoZXJlLCB5b3UgY2FuIGRlZmluZSBwcm9jZXNzZXMgYXMgc286ICIsbWR4KCJpbmxpbmVDb2RlIix7cGFyZW50TmFtZToicCJ9LCJkZWYgcHJvY2Vzc19uYW1laGVyZShkYXRhKToiKSwiLiIpLG1keCgicCIsbnVsbCwiVGhlIGRhdGEgYXJndW1lbnQgaXMgdGhlIGRhdGEgcmVjaWV2ZWQgYnkgdGhlIGJvdC4iKSxtZHgoImgyIix7ImlkIjoiYmFuYW5hLXBsdWdpbiJ9LCJCYW5hbmEgUGx1Z2luIiksbWR4KCJwIixudWxsLCJJbiB0aGUgIixtZHgoImlubGluZUNvZGUiLHtwYXJlbnROYW1lOiJwIn0sInBsdWdpbnMiKSwiIGRpcmVjdG9yeSwgY3JlYXRlICIsbWR4KCJpbmxpbmVDb2RlIix7cGFyZW50TmFtZToicCJ9LCJiYW5hbmEucHkiKSksbWR4KCJwcmUiLG51bGwsbWR4KCJjb2RlIixPYmplY3QuYXNzaWduKHtwYXJlbnROYW1lOiJwcmUifSx7ImNsYXNzTmFtZSI6Imxhbmd1YWdlLXB5dGhvbiJ9KSwiaW1wb3J0IHJhbmRvbVxuXG5mcm9tIG5sdGsudG9rZW5pemUgaW1wb3J0IHNlbnRfdG9rZW5pemVtIHdvcmRwdW5jdF90b2tlbml6ZVxuZnJvbSBub3VuX2hvdW5kIGltcG9ydCBOb3VuSG91bmRcblxuY3JvbnRhYmxlID0gW11cbm91dHB1dHMgPSBbXVxuXG5uaCA9IE5vdW5Ib3VuZCgpXG5cbmRlZiBwcm9jZXNzX21lc3NhZ2UoZGF0YSk6XG4gICAgICAgIG1lc3NhYWdlID0gZGF0YVsndGV4dCddXG4gICAgICAgIHNlbnRlbmNlcyA9IHNlbnRfdG9rZW5pemUobWVzc2FnZSlcbiAgICAgICAgc2VudGVuY2VzX251bSA9IHJhbmRvbS5yYW5kaW50KDAsIGxlbihzZW50ZW5jZXMpIC0gMSlcbiAgICAgICAgc2V0ZW5jZSA9IHNlbnRlbmNlc1tzdGVuY2VfbnVtXVxuICAgICAgICB3b3JkcyA9IHdvcmRwdW5jdF90b2tlbml6ZShzZW50ZW5jZSlcbiAgICAgICAgbm91bnMgPSBuaC5wcm9jZXNzKHNlbnRlbmNlKVxuICAgICAgICByZXBsYWNlbWVudCA9IHJhbmRvbS5jaG9pY2Uobm91bnNbJ25vdW5zJ10pXG4gICAgICAgIHdvcmRzW3dvcmRzLmluZGV4KHJlcGxhY2VtZW50KSA9ICdiYW5hbmEnXVxuICAgICAgICBzZW50ZW5jZXNbc2VudGVuY2VfbnVtXSA9ICcgJy5qb2luKHdvcmRzKVxuICAgICAgICBvdXRwdXRzLmFwcGVuZChbZGF0YVtcImNoYW5uZWxcIl0sICcgJy5qb2luKHNlbnRlbmNlcyldKVxuIikpKTt9aWYodHlwZW9mIE1EWENvbnRlbnQhPT0ndW5kZWZpbmVkJyYmTURYQ29udGVudCYmTURYQ29udGVudD09PU9iamVjdChNRFhDb250ZW50KSYmT2JqZWN0LmlzRXh0ZW5zaWJsZShNRFhDb250ZW50KSl7T2JqZWN0LmRlZmluZVByb3BlcnR5KE1EWENvbnRlbnQsJ19fZmlsZW1ldGEnLHtlbnVtZXJhYmxlOnRydWUsY29uZmlndXJhYmxlOnRydWUsdmFsdWU6e25hbWU6Ik1EWENvbnRlbnQiLGZpbGVuYW1lOiJtYW51YWwvUHl0aG9uL1B5dGhvbi1TbGFjay1Cb3QubWQifX0pO31NRFhDb250ZW50LmlzTURYQ29tcG9uZW50PXRydWU7"},{"version":3,"sources":["/Users/dennis.okeeffe/Project-Imposter/developer-notes/manual/Python/Python-Slack-Bot.md"],"names":["React","mdx","makeShortcode","name","MDXDefaultShortcode","props","console","warn","layoutProps","MDXLayout","MDXContent","components","isMDXComponent"],"mappings":"iMAAA,cACE,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,GAAT,KAAoB,eAApB,CACA,cAGF,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAAAC,IAAI,QAAI,SAASC,CAAAA,mBAAT,CAA6BC,KAA7B,CAAoC,CAChEC,OAAO,CAACC,IAAR,CAAa,aAAeJ,IAAf,CAAsB,yEAAnC,EACA,MAAO,WAASE,KAAT,CAAP,CACD,CAHyB,EAA1B,CAKA,GAAMG,CAAAA,WAAW,CAAG,EAApB,CAGA,GAAMC,CAAAA,SAAS,CAAG,SAAlB,CACA,cAAe,SAASC,CAAAA,UAAT,MAGZ,IAFDC,CAAAA,UAEC,MAFDA,UAEC,CADEN,KACF,+CACD,MAAO,KAAC,SAAD,kBAAeG,WAAf,CAAgCH,KAAhC,EAAuC,UAAU,CAAEM,UAAnD,CAA+D,OAAO,CAAC,WAAvE,GACL,cADK,CAEL,SAAQ,CACN,KAAM,OADA,CAAR,SAFK,CAKL,wCAA+B,kBAAY,UAAU,CAAC,GAAvB,kBAA/B,cALK,CAML,yEAAgE,kBAAY,UAAU,CAAC,GAAvB,UAAhE,6CANK,CAOL,sDAA6C,kBAAY,UAAU,CAAC,GAAvB,gBAA7C,wCAPK,CAQL,SAAQ,CACN,KAAM,kBADA,CAAR,oBARK,CAWL,uBAAc,kBAAY,UAAU,CAAC,GAAvB,YAAd,6EAA8I,kBAAY,UAAU,CAAC,GAAvB,cAA9I,mDAAsP,kBAAY,UAAU,CAAC,GAAvB,iBAAtP,SAAuT,kBAAY,UAAU,CAAC,GAAvB,mBAAvT,sBAXK,CAYL,2DAAkD,kBAAY,UAAU,CAAC,GAAvB,gCAAlD,KAZK,CAaL,kEAbK,CAcL,SAAQ,CACN,KAAM,eADA,CAAR,iBAdK,CAiBL,uBAAc,kBAAY,UAAU,CAAC,GAAvB,YAAd,uBAAwF,kBAAY,UAAU,CAAC,GAAvB,cAAxF,CAjBK,CAkBL,eAAK,0BAAM,UAAU,CAAC,KAAjB,EAA2B,CAC5B,YAAa,iBADe,CAA3B,8qBAAL,CAlBK,CAAP,CA2CD,C,6QAEDD,UAAU,CAACE,cAAX,CAA4B,IAA5B","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <hr></hr>\n    <h2 {...{\n      \"id\": \"intro\"\n    }}>{`Intro`}</h2>\n    <p>{`First of all, clone the `}<inlineCode parentName=\"p\">{`python_rtmbot`}</inlineCode>{` git repo.`}</p>\n    <p>{`Then, head to slack.com for your personal account, click `}<inlineCode parentName=\"p\">{`build`}</inlineCode>{` from the apps page and add a custom bot.`}</p>\n    <p>{`Grab the API token and copy it into a `}<inlineCode parentName=\"p\">{`rtmbot.conf`}</inlineCode>{` file at the root of your directory.`}</p>\n    <h2 {...{\n      \"id\": \"creating-plugins\"\n    }}>{`Creating plugins`}</h2>\n    <p>{`In the `}<inlineCode parentName=\"p\">{`plugins`}</inlineCode>{` folder, create a folder with the name of the plugin and then within the `}<inlineCode parentName=\"p\">{`plugin.py`}</inlineCode>{` itself. Inside, you want to ensure you have a `}<inlineCode parentName=\"p\">{`outputs = []`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`crontable = []`}</inlineCode>{` list ready to go.`}</p>\n    <p>{`From here, you can define processes as so: `}<inlineCode parentName=\"p\">{`def process_namehere(data):`}</inlineCode>{`.`}</p>\n    <p>{`The data argument is the data recieved by the bot.`}</p>\n    <h2 {...{\n      \"id\": \"banana-plugin\"\n    }}>{`Banana Plugin`}</h2>\n    <p>{`In the `}<inlineCode parentName=\"p\">{`plugins`}</inlineCode>{` directory, create `}<inlineCode parentName=\"p\">{`banana.py`}</inlineCode></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-python\"\n      }}>{`import random\n\nfrom nltk.tokenize import sent_tokenizem wordpunct_tokenize\nfrom noun_hound import NounHound\n\ncrontable = []\noutputs = []\n\nnh = NounHound()\n\ndef process_message(data):\n        messaage = data['text']\n        sentences = sent_tokenize(message)\n        sentences_num = random.randint(0, len(sentences) - 1)\n        setence = sentences[stence_num]\n        words = wordpunct_tokenize(sentence)\n        nouns = nh.process(sentence)\n        replacement = random.choice(nouns['nouns'])\n        words[words.index(replacement) = 'banana']\n        sentences[sentence_num] = ' '.join(words)\n        outputs.append([data[\"channel\"], ' '.join(sentences)])\n`}</code></pre>\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  "]}]}