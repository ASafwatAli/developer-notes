{"remainingRequest":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/docz-core/node_modules/babel-loader/lib/index.js??ref--6-1!/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/@mdx-js/loader/index.js??ref--6-2!/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/source-map-loader/index.js!/Users/dennis.okeeffe/Project-Imposter/developer-notes/manual/Data-Structures/Go.md","dependencies":[{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/manual/Data-Structures/Go.md","mtime":1562563032022},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/cache-loader/dist/cjs.js","mtime":1564095360956},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/docz-core/node_modules/babel-loader/lib/index.js","mtime":1562568123838},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/@mdx-js/loader/index.js","mtime":1565139338792},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/source-map-loader/index.js","mtime":1564095361765}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9vYmplY3RXaXRob3V0UHJvcGVydGllcyBmcm9tIi9Vc2Vycy9kZW5uaXMub2tlZWZmZS9Qcm9qZWN0LUltcG9zdGVyL2RldmVsb3Blci1ub3Rlcy9ub2RlX21vZHVsZXMvYmFiZWwtcHJlc2V0LXJlYWN0LWFwcC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0V2l0aG91dFByb3BlcnRpZXMiOy8qIEBqc3ggbWR4ICovaW1wb3J0IFJlYWN0IGZyb20ncmVhY3QnO2ltcG9ydHttZHh9ZnJvbSdAbWR4LWpzL3JlYWN0JzsvKiBAanN4IG1keCAqL3ZhciBtYWtlU2hvcnRjb2RlPWZ1bmN0aW9uIG1ha2VTaG9ydGNvZGUobmFtZSl7cmV0dXJuIGZ1bmN0aW9uIE1EWERlZmF1bHRTaG9ydGNvZGUocHJvcHMpe2NvbnNvbGUud2FybigiQ29tcG9uZW50ICIrbmFtZSsiIHdhcyBub3QgaW1wb3J0ZWQsIGV4cG9ydGVkLCBvciBwcm92aWRlZCBieSBNRFhQcm92aWRlciBhcyBnbG9iYWwgc2NvcGUiKTtyZXR1cm4gbWR4KCJkaXYiLHByb3BzKTt9O307dmFyIGxheW91dFByb3BzPXt9O3ZhciBNRFhMYXlvdXQ9IndyYXBwZXIiO2V4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIE1EWENvbnRlbnQoX3JlZil7dmFyIGNvbXBvbmVudHM9X3JlZi5jb21wb25lbnRzLHByb3BzPV9vYmplY3RXaXRob3V0UHJvcGVydGllcyhfcmVmLFsiY29tcG9uZW50cyJdKTtyZXR1cm4gbWR4KE1EWExheW91dCxPYmplY3QuYXNzaWduKHt9LGxheW91dFByb3BzLHByb3BzLHtjb21wb25lbnRzOmNvbXBvbmVudHMsbWR4VHlwZToiTURYTGF5b3V0In0pLG1keCgiaDEiLHsiaWQiOiJnby1kYXRhLXN0cnVjdHVyZXMifSwiR28gRGF0YSBTdHJ1Y3R1cmVzIiksbWR4KCJoMiIseyJpZCI6ImZpenpidXp6In0sIkZpenpidXp6IiksbWR4KCJwcmUiLG51bGwsbWR4KCJjb2RlIixPYmplY3QuYXNzaWduKHtwYXJlbnROYW1lOiJwcmUifSx7ImNsYXNzTmFtZSI6Imxhbmd1YWdlLWdvIn0pLCJmdW5jIGZpenpCdXp6KGkgaW50KSBzdHJpbmcge1xuICBzd2l0Y2ggdHJ1ZSB7XG4gICAgY2FzZSBpJTMgPT0gMCAmJiBpJTUgPT0gMDpcbiAgICAgICAgcmV0dXJuIFwiZml6emJ1enpcIlxuICAgIGNhc2UgaSUzID09IDA6XG4gICAgICAgIHJldHVybiBcImZpenpcIlxuICAgIGNhc2UgaSU1ID09IDA6XG4gICAgICAgIHJldHVybiBcImJ1enpcIlxuICAgIGRlZmF1bHQ6XG4gICAgICAgIHJldHVybiBzdHJjb252Lkl0b2EoaSlcbiAgfVxufVxuIikpLG1keCgiaDIiLHsiaWQiOiJjaHVua2VkLWFycmF5cyJ9LCJDaHVua2VkIEFycmF5cyIpLG1keCgicHJlIixudWxsLG1keCgiY29kZSIsT2JqZWN0LmFzc2lnbih7cGFyZW50TmFtZToicHJlIn0seyJjbGFzc05hbWUiOiJsYW5ndWFnZS1nbyJ9KSwiZnVuYyBhcnJheUNodW5rKGFyciBbXWludCwgc2l6ZSBpbnQpIFtdW11pbnQge1xuICAgIGlmIGxlbihhcnIpIDw9IDAge1xuICAgICAgICByZXR1cm4gbmlsXG4gICAgfVxuXG4gICAgdmFyIHRtcCBbXWludFxuICAgIHZhciBjaHVua2VkQXJyIFtdW11pbnRcbiAgICBmb3IgaSwgaXRlbSA6PSByYW5nZSBhcnIge1xuICAgICAgICB0bXAgPSBhcHBlbmQodG1wLCBpdGVtKVxuXG4gICAgICAgIGlzRmluYWwgOj0gbGVuKGFyciktMSA9PSBpXG4gICAgICAgIGlmIGklc2l6ZSA9PSBzaXplLTEgfHwgaXNGaW5hbCB7XG4gICAgICAgICAgICBmbXQuUHJpbnRmKFwiJXZcIiwgdG1wKVxuICAgICAgICAgICAgY2h1bmtlZEFyciA9IGFwcGVuZChjaHVua2VkQXJyLCB0bXApXG4gICAgICAgICAgICB0bXAgPSBuaWxcbiAgICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiBjaHVua2VkQXJyXG59XG4iKSksbWR4KCJoMiIseyJpZCI6InBhbGluZHJvbWVzIn0sIlBhbGluZHJvbWVzIiksbWR4KCJwcmUiLG51bGwsbWR4KCJjb2RlIixPYmplY3QuYXNzaWduKHtwYXJlbnROYW1lOiJwcmUifSx7ImNsYXNzTmFtZSI6Imxhbmd1YWdlLWdvIn0pLCJwYWNrYWdlIG1haW5cblxuLy8gcmV0dXJuIHdoZXRoZXIgaXQgaXMgYSBwYWxpbmRyb21lIG9yIG5vdFxuZnVuYyBtYWluKCkge1xuICAgIHJldHVyblxufVxuXG4vLyBTdHJpbmcgY29udmVydHMgc3RyaW5nIHN0cnVjdCBleHBlY3RpbmcgcGFsaW5kcm9tZXNcbnR5cGUgU3RyaW5nIHN0cnVjdCB7XG4gICAgc3RyIHN0cmluZ1xufVxuXG5mdW5jIG5ld1BhbGluZHJvbWUocyBzdHJpbmcpIFN0cmluZyB7XG4gICAgcmV0dXJuIFN0cmluZ3tzfVxufVxuXG5mdW5jIChzIFN0cmluZykgaXNQYWxpbmRyb21lKCkgYm9vbCB7XG4gICAgciA6PSBbXXJ1bmUocy5zdHIpXG4gICAgZm9yIGksIGogOj0gMCwgbGVuKHIpLTE7IGkgPCBsZW4ocikvMjsgaSwgaiA9IGkrMSwgai0xIHtcbiAgICAgICAgaWYgcltpXSAhPSByW2pdIHtcbiAgICAgICAgICAgIHJldHVybiBmYWxzZVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgcmV0dXJuIHRydWVcbn1cbiIpKSk7fWlmKHR5cGVvZiBNRFhDb250ZW50IT09J3VuZGVmaW5lZCcmJk1EWENvbnRlbnQmJk1EWENvbnRlbnQ9PT1PYmplY3QoTURYQ29udGVudCkmJk9iamVjdC5pc0V4dGVuc2libGUoTURYQ29udGVudCkpe09iamVjdC5kZWZpbmVQcm9wZXJ0eShNRFhDb250ZW50LCdfX2ZpbGVtZXRhJyx7ZW51bWVyYWJsZTp0cnVlLGNvbmZpZ3VyYWJsZTp0cnVlLHZhbHVlOntuYW1lOiJNRFhDb250ZW50IixmaWxlbmFtZToibWFudWFsL0RhdGEtU3RydWN0dXJlcy9Hby5tZCJ9fSk7fU1EWENvbnRlbnQuaXNNRFhDb21wb25lbnQ9dHJ1ZTs="},{"version":3,"sources":["/Users/dennis.okeeffe/Project-Imposter/developer-notes/manual/Data-Structures/Go.md"],"names":["React","mdx","makeShortcode","name","MDXDefaultShortcode","props","console","warn","layoutProps","MDXLayout","MDXContent","components","isMDXComponent"],"mappings":"iMAAA,cACE,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,GAAT,KAAoB,eAApB,CACA,cAGF,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAAAC,IAAI,QAAI,SAASC,CAAAA,mBAAT,CAA6BC,KAA7B,CAAoC,CAChEC,OAAO,CAACC,IAAR,CAAa,aAAeJ,IAAf,CAAsB,yEAAnC,EACA,MAAO,WAASE,KAAT,CAAP,CACD,CAHyB,EAA1B,CAKA,GAAMG,CAAAA,WAAW,CAAG,EAApB,CAGA,GAAMC,CAAAA,SAAS,CAAG,SAAlB,CACA,cAAe,SAASC,CAAAA,UAAT,MAGZ,IAFDC,CAAAA,UAEC,MAFDA,UAEC,CADEN,KACF,+CACD,MAAO,KAAC,SAAD,kBAAeG,WAAf,CAAgCH,KAAhC,EAAuC,UAAU,CAAEM,UAAnD,CAA+D,OAAO,CAAC,WAAvE,GACL,SAAQ,CACN,KAAM,oBADA,CAAR,sBADK,CAIL,SAAQ,CACN,KAAM,UADA,CAAR,YAJK,CAOL,eAAK,0BAAM,UAAU,CAAC,KAAjB,EAA2B,CAC5B,YAAa,aADe,CAA3B,kQAAL,CAPK,CAsBL,SAAQ,CACN,KAAM,gBADA,CAAR,kBAtBK,CAyBL,eAAK,0BAAM,UAAU,CAAC,KAAjB,EAA2B,CAC5B,YAAa,aADe,CAA3B,scAAL,CAzBK,CAgDL,SAAQ,CACN,KAAM,aADA,CAAR,eAhDK,CAmDL,eAAK,0BAAM,UAAU,CAAC,KAAjB,EAA2B,CAC5B,YAAa,aADe,CAA3B,ieAAL,CAnDK,CAAP,CAiFD,C,wQAEDD,UAAU,CAACE,cAAX,CAA4B,IAA5B","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"go-data-structures\"\n    }}>{`Go Data Structures`}</h1>\n    <h2 {...{\n      \"id\": \"fizzbuzz\"\n    }}>{`Fizzbuzz`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-go\"\n      }}>{`func fizzBuzz(i int) string {\n  switch true {\n    case i%3 == 0 && i%5 == 0:\n        return \"fizzbuzz\"\n    case i%3 == 0:\n        return \"fizz\"\n    case i%5 == 0:\n        return \"buzz\"\n    default:\n        return strconv.Itoa(i)\n  }\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"chunked-arrays\"\n    }}>{`Chunked Arrays`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-go\"\n      }}>{`func arrayChunk(arr []int, size int) [][]int {\n    if len(arr) <= 0 {\n        return nil\n    }\n\n    var tmp []int\n    var chunkedArr [][]int\n    for i, item := range arr {\n        tmp = append(tmp, item)\n\n        isFinal := len(arr)-1 == i\n        if i%size == size-1 || isFinal {\n            fmt.Printf(\"%v\", tmp)\n            chunkedArr = append(chunkedArr, tmp)\n            tmp = nil\n        }\n    }\n\n    return chunkedArr\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"palindromes\"\n    }}>{`Palindromes`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-go\"\n      }}>{`package main\n\n// return whether it is a palindrome or not\nfunc main() {\n    return\n}\n\n// String converts string struct expecting palindromes\ntype String struct {\n    str string\n}\n\nfunc newPalindrome(s string) String {\n    return String{s}\n}\n\nfunc (s String) isPalindrome() bool {\n    r := []rune(s.str)\n    for i, j := 0, len(r)-1; i < len(r)/2; i, j = i+1, j-1 {\n        if r[i] != r[j] {\n            return false\n        }\n    }\n\n    return true\n}\n`}</code></pre>\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  "]}]}