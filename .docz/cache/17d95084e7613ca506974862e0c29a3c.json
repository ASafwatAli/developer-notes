{"remainingRequest":"/Users/okeeffe_d/Project-Imposter/developer-notes/node_modules/docz-core/node_modules/babel-loader/lib/index.js??ref--6-1!/Users/okeeffe_d/Project-Imposter/developer-notes/node_modules/@mdx-js/loader/index.js??ref--6-2!/Users/okeeffe_d/Project-Imposter/developer-notes/node_modules/source-map-loader/index.js!/Users/okeeffe_d/Project-Imposter/developer-notes/manual/Scala/Scala-Expressions.md","dependencies":[{"path":"/Users/okeeffe_d/Project-Imposter/developer-notes/manual/Scala/Scala-Expressions.md","mtime":1554772130195},{"path":"/Users/okeeffe_d/Project-Imposter/developer-notes/node_modules/cache-loader/dist/cjs.js","mtime":1561535530324},{"path":"/Users/okeeffe_d/Project-Imposter/developer-notes/node_modules/docz-core/node_modules/babel-loader/lib/index.js","mtime":1560300163820},{"path":"/Users/okeeffe_d/Project-Imposter/developer-notes/node_modules/@mdx-js/loader/index.js","mtime":1561535530532},{"path":"/Users/okeeffe_d/Project-Imposter/developer-notes/node_modules/source-map-loader/index.js","mtime":1548285283521}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9vYmplY3RXaXRob3V0UHJvcGVydGllcyBmcm9tIi9Vc2Vycy9va2VlZmZlX2QvUHJvamVjdC1JbXBvc3Rlci9kZXZlbG9wZXItbm90ZXMvbm9kZV9tb2R1bGVzL2JhYmVsLXByZXNldC1yZWFjdC1hcHAvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzIjsvKiBAanN4IG1keCAqL2ltcG9ydCBSZWFjdCBmcm9tJ3JlYWN0JztpbXBvcnR7bWR4fWZyb20nQG1keC1qcy9yZWFjdCc7LyogQGpzeCBtZHggKi92YXIgbWFrZVNob3J0Y29kZT1mdW5jdGlvbiBtYWtlU2hvcnRjb2RlKG5hbWUpe3JldHVybiBmdW5jdGlvbiBNRFhEZWZhdWx0U2hvcnRjb2RlKHByb3BzKXtjb25zb2xlLndhcm4oIkNvbXBvbmVudCAiK25hbWUrIiB3YXMgbm90IGltcG9ydGVkLCBleHBvcnRlZCwgb3IgcHJvdmlkZWQgYnkgTURYUHJvdmlkZXIgYXMgZ2xvYmFsIHNjb3BlIik7cmV0dXJuIG1keCgiZGl2Iixwcm9wcyk7fTt9O3ZhciBsYXlvdXRQcm9wcz17fTt2YXIgTURYTGF5b3V0PSJ3cmFwcGVyIjtleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBNRFhDb250ZW50KF9yZWYpe3ZhciBjb21wb25lbnRzPV9yZWYuY29tcG9uZW50cyxwcm9wcz1fb2JqZWN0V2l0aG91dFByb3BlcnRpZXMoX3JlZixbImNvbXBvbmVudHMiXSk7cmV0dXJuIG1keChNRFhMYXlvdXQsT2JqZWN0LmFzc2lnbih7fSxsYXlvdXRQcm9wcyxwcm9wcyx7Y29tcG9uZW50czpjb21wb25lbnRzLG1keFR5cGU6Ik1EWExheW91dCJ9KSxtZHgoImgxIix7ImlkIjoic2NhbGEtZXhwcmVzc2lvbnMtYW5kLWZ1bmN0aW9ucyJ9LCJTY2FsYSBFeHByZXNzaW9ucyBhbmQgRnVuY3Rpb25zIiksbWR4KCJwIixudWxsLCJBcyBvcHBvc2VkIHRvIGluc3RydWN0aW9ucywgZXZlcnl0aGluZyBpbiBTY2FsYSBpcyBjb25zaWRlcmVkIGFuICIsbWR4KCJpbmxpbmVDb2RlIix7cGFyZW50TmFtZToicCJ9LCJleHByZXNzaW9uIiksIi4gRXZlbiBpZi9lbHNlIHN0YXRlbWVudHMgdGhlbXNlbHZlcyBpbiBTY2FsYSBhcmUgZXhwcmVzc2lvbnMuIiksbWR4KCJoMiIseyJpZCI6ImZvci1sb29wcyJ9LCJGb3IgTG9vcHMiKSxtZHgoInAiLG51bGwsIkZvciBsb29wcyBhcmUgbm90IHJlY29tbWVuZGVkIGluIFNjYWxhLiBUaGV5IHJldHVybiAiLG1keCgiaW5saW5lQ29kZSIse3BhcmVudE5hbWU6InAifSwiVW5pdCIpLCIgd2hpY2ggaW4gaXRzZWxmIGlzIGVxdWl2YWxlbnQgdG8iLG1keCgiaW5saW5lQ29kZSIse3BhcmVudE5hbWU6InAifSwibnVsbCIpLCIuIFRoaXMgaXMgdGhlIGNhc2UgZm9yIHNpZGUgZWZmZWN0cyAtIGFuIGludGVyZ3JhbCBwYXJ0IG9mIHVuZGVyc3RhbmRpbmcgU2NhbGEuIiksbWR4KCJoMiIseyJpZCI6ImNvZGUtYmxvY2tzIn0sIkNvZGUgQmxvY2tzIiksbWR4KCJwIixudWxsLCJOb3RlIHRoYXQgaWYgeW91IHdyaXRlIGEgY29kZSBibG9jaywgdGhlIGxhc3QgdmFsdWUgaW4gdGhlIGNvZGUgYmxvY2sgaXMgcmV0dXJuZWQgYXMgdGhlIHZhbHVlLiIpLG1keCgicHJlIixudWxsLG1keCgiY29kZSIsT2JqZWN0LmFzc2lnbih7cGFyZW50TmFtZToicHJlIn0seyJjbGFzc05hbWUiOiJsYW5ndWFnZS1zY2FsYSJ9KSwidmFsIGNvZGVCbG9jayA9IHtcbiAgICB2YWwgYSA9IDFcbiAgICB2YWwgYiA9IDJcblxuICAgIGlmKGEgPCBiKSBcImhpXCIgZWxzZSBcImJ5ZVwiXG59XG5cbnByaW50bG4oY29kZUJsb2NrKVxuLy8gZXZhbHVhdGVzIHRvIFwiaGlcIlxuIikpLG1keCgiaDIiLHsiaWQiOiJleGFtcGxlcy1vZi1leHByZXNzaW9ucy1hbmQtc2lkZS1lZmZlY3RzIn0sIkV4YW1wbGVzIG9mIEV4cHJlc3Npb25zIGFuZCBTaWRlIEVmZmVjdHMiKSxtZHgoInByZSIsbnVsbCxtZHgoImNvZGUiLE9iamVjdC5hc3NpZ24oe3BhcmVudE5hbWU6InByZSJ9LHsiY2xhc3NOYW1lIjoibGFuZ3VhZ2Utc2NhbGEifSksIlwiaGVsbG9cIiAvLyB0eXBlIFN0cmluZ1xucHJpbnRsbihcImhlbGxvXCIpIC8vIHR5cGUgVW5pdFxuXG4vLyB0eXBlIEJvb2xlYW5cbnZhbCBhID0ge1xuICAgIDIgPCAzXG59XG5cbi8vIHR5cGUgSW50IHZhbHVlIDEwXG52YWwgYiA9IHtcbiAgICBpZihhKSAxMjMgZWxzZSAzMjFcbiAgICAxMFxufVxuXG4vLyBjIGlzIG9mIHR5cGUgVW5pdFxudmFyIGkgPSAwXG52YWwgYyA9IHdoaWxlIChpIDwgMTApIHtcbiAgICBpICs9IDFcbn1cbiIpKSxtZHgoImgyIix7ImlkIjoiZnVuY3Rpb25zIn0sIkZ1bmN0aW9ucyIpLG1keCgicHJlIixudWxsLG1keCgiY29kZSIsT2JqZWN0LmFzc2lnbih7cGFyZW50TmFtZToicHJlIn0seyJjbGFzc05hbWUiOiJsYW5ndWFnZS1zY2FsYSJ9KSwib2JqZWN0IEZ1bmN0aW9ucyBleHRlbmRzIEFwcCB7XG4gICAgLy8gdGhpcyB3b3JrcyBiZWNhdXNlIHdlIGtub3cgZXZlcnl0aGluZyBpcyBhbiBleHByZXNzaW9uXG4gICAgZGVmIGZ1bmN0aW9uRXhhbXBsZShhOiBTdHJpbmcsIGI6IEludCk6IFN0cmluZyA9IGEgKyBcIiBcIiArIGJcblxuICAgIGRlZiBwYXJhbWV0ZXJsZXNzRnVuYygpOiBJbnQgPSA0MlxuICAgIHByaW50bG4ocGFyYW1ldGVybGVzc0Z1bmMoKSlcbiAgICAvLyBhbHNvIHZhbGlkIGluIFNjYWxhIHRvIGNhbGwgZnVuY1xuICAgIHByaW50bG4ocGFyYW1ldGVybGVzc0Z1bmMpXG5cbiAgICBkZWYgcmVwZXRlckZ1bmMoYTogU3RyaW5nLCBuOiBJbnQpOiBTdHJpbmcgID0ge1xuICAgICAgICBpZiAobiA9PSAxKSBhXG4gICAgICAgIGVsc2UgYSArIHJlcGV0ZXJGdW5jKGEsIG4tMSlcbiAgICB9XG59XG4iKSkpO31pZih0eXBlb2YgTURYQ29udGVudCE9PSd1bmRlZmluZWQnJiZNRFhDb250ZW50JiZNRFhDb250ZW50PT09T2JqZWN0KE1EWENvbnRlbnQpJiZPYmplY3QuaXNFeHRlbnNpYmxlKE1EWENvbnRlbnQpKXtPYmplY3QuZGVmaW5lUHJvcGVydHkoTURYQ29udGVudCwnX19maWxlbWV0YScse2VudW1lcmFibGU6dHJ1ZSxjb25maWd1cmFibGU6dHJ1ZSx2YWx1ZTp7bmFtZToiTURYQ29udGVudCIsZmlsZW5hbWU6Im1hbnVhbC9TY2FsYS9TY2FsYS1FeHByZXNzaW9ucy5tZCJ9fSk7fU1EWENvbnRlbnQuaXNNRFhDb21wb25lbnQ9dHJ1ZTs="},{"version":3,"sources":["/Users/okeeffe_d/Project-Imposter/developer-notes/manual/Scala/Scala-Expressions.md"],"names":["React","mdx","makeShortcode","name","MDXDefaultShortcode","props","console","warn","layoutProps","MDXLayout","MDXContent","components","isMDXComponent"],"mappings":"4LAAA,cACE,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,GAAT,KAAoB,eAApB,CACA,cAGF,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAAAC,IAAI,QAAI,SAASC,CAAAA,mBAAT,CAA6BC,KAA7B,CAAoC,CAChEC,OAAO,CAACC,IAAR,CAAa,aAAeJ,IAAf,CAAsB,yEAAnC,EACA,MAAO,WAASE,KAAT,CAAP,CACD,CAHyB,EAA1B,CAKA,GAAMG,CAAAA,WAAW,CAAG,EAApB,CAGA,GAAMC,CAAAA,SAAS,CAAG,SAAlB,CACA,cAAe,SAASC,CAAAA,UAAT,MAGZ,IAFDC,CAAAA,UAEC,MAFDA,UAEC,CADEN,KACF,+CACD,MAAO,KAAC,SAAD,kBAAeG,WAAf,CAAgCH,KAAhC,EAAuC,UAAU,CAAEM,UAAnD,CAA+D,OAAO,CAAC,WAAvE,GACL,SAAQ,CACN,KAAM,iCADA,CAAR,mCADK,CAIL,iFAAwE,kBAAY,UAAU,CAAC,GAAvB,eAAxE,kEAJK,CAKL,SAAQ,CACN,KAAM,WADA,CAAR,aALK,CAQL,oEAA2D,kBAAY,UAAU,CAAC,GAAvB,SAA3D,qCAAgJ,kBAAY,UAAU,CAAC,GAAvB,SAAhJ,mFARK,CASL,SAAQ,CACN,KAAM,aADA,CAAR,eATK,CAYL,+GAZK,CAaL,eAAK,0BAAM,UAAU,CAAC,KAAjB,EAA2B,CAC5B,YAAa,gBADe,CAA3B,4IAAL,CAbK,CAyBL,SAAQ,CACN,KAAM,0CADA,CAAR,4CAzBK,CA4BL,eAAK,0BAAM,UAAU,CAAC,KAAjB,EAA2B,CAC5B,YAAa,gBADe,CAA3B,8PAAL,CA5BK,CAkDL,SAAQ,CACN,KAAM,WADA,CAAR,aAlDK,CAqDL,eAAK,0BAAM,UAAU,CAAC,KAAjB,EAA2B,CAC5B,YAAa,gBADe,CAA3B,0bAAL,CArDK,CAAP,CAuED,C,6QAEDD,UAAU,CAACE,cAAX,CAA4B,IAA5B","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"scala-expressions-and-functions\"\n    }}>{`Scala Expressions and Functions`}</h1>\n    <p>{`As opposed to instructions, everything in Scala is considered an `}<inlineCode parentName=\"p\">{`expression`}</inlineCode>{`. Even if/else statements themselves in Scala are expressions.`}</p>\n    <h2 {...{\n      \"id\": \"for-loops\"\n    }}>{`For Loops`}</h2>\n    <p>{`For loops are not recommended in Scala. They return `}<inlineCode parentName=\"p\">{`Unit`}</inlineCode>{` which in itself is equivalent to`}<inlineCode parentName=\"p\">{`null`}</inlineCode>{`. This is the case for side effects - an intergral part of understanding Scala.`}</p>\n    <h2 {...{\n      \"id\": \"code-blocks\"\n    }}>{`Code Blocks`}</h2>\n    <p>{`Note that if you write a code block, the last value in the code block is returned as the value.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-scala\"\n      }}>{`val codeBlock = {\n    val a = 1\n    val b = 2\n\n    if(a < b) \"hi\" else \"bye\"\n}\n\nprintln(codeBlock)\n// evaluates to \"hi\"\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"examples-of-expressions-and-side-effects\"\n    }}>{`Examples of Expressions and Side Effects`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-scala\"\n      }}>{`\"hello\" // type String\nprintln(\"hello\") // type Unit\n\n// type Boolean\nval a = {\n    2 < 3\n}\n\n// type Int value 10\nval b = {\n    if(a) 123 else 321\n    10\n}\n\n// c is of type Unit\nvar i = 0\nval c = while (i < 10) {\n    i += 1\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"functions\"\n    }}>{`Functions`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-scala\"\n      }}>{`object Functions extends App {\n    // this works because we know everything is an expression\n    def functionExample(a: String, b: Int): String = a + \" \" + b\n\n    def parameterlessFunc(): Int = 42\n    println(parameterlessFunc())\n    // also valid in Scala to call func\n    println(parameterlessFunc)\n\n    def repeterFunc(a: String, n: Int): String  = {\n        if (n == 1) a\n        else a + repeterFunc(a, n-1)\n    }\n}\n`}</code></pre>\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  "]}]}