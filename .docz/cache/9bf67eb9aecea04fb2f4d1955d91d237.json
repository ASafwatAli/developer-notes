{"remainingRequest":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/docz-core/node_modules/babel-loader/lib/index.js??ref--6-1!/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/@mdx-js/loader/index.js??ref--6-2!/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/source-map-loader/index.js!/Users/dennis.okeeffe/Project-Imposter/developer-notes/manual/Linux/Linux-Essentials.md","dependencies":[{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/manual/Linux/Linux-Essentials.md","mtime":1579078160143},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/cache-loader/dist/cjs.js","mtime":1581496618588},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/docz-core/node_modules/babel-loader/lib/index.js","mtime":1578565694890},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/@mdx-js/loader/index.js","mtime":1581496618277},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/source-map-loader/index.js","mtime":1580255490569}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/dennis.okeeffe/Project-Imposter/developer-notes/manual/Linux/Linux-Essentials.md"],"names":["React","mdx","makeShortcode","name","MDXDefaultShortcode","props","console","warn","layoutProps","MDXLayout","MDXContent","components","isMDXComponent"],"mappings":";;;;;;;;;;;;AAAA;AACE,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,QAAoB,eAApB;AACA;;AAGF,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAAAC,IAAI;AAAA,SAAI,SAASC,mBAAT,CAA6BC,KAA7B,EAAoC;AAChEC,IAAAA,OAAO,CAACC,IAAR,CAAa,eAAeJ,IAAf,GAAsB,yEAAnC;AACA,WAAO,6BAASE,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAP;AACD,GAHyB;AAAA,CAA1B;;AAKA,IAAMG,WAAW,GAAG,EAApB;AAGA,IAAMC,SAAS,GAAG,SAAlB;AACA,eAAe,SAASC,UAAT,OAGZ;AAAA,MAFDC,UAEC,QAFDA,UAEC;AAAA,MADEN,KACF;;AACD,SAAO,IAAC,SAAD,oBAAeG,WAAf,EAAgCH,KAAhC;AAAuC,IAAA,UAAU,EAAEM,UAAnD;AAA+D,IAAA,OAAO,EAAC,WAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACL,wBAAQ;AACN,UAAM;AADA,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADK,EAIL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,UAAU,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAoB;AAAG,IAAA,UAAU,EAAC;AAAd,KAAuB;AACvC,YAAQ;AAD+B,GAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAApB,EAE6B;AAAI,IAAA,UAAU,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACzB;AAAI,IAAA,UAAU,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAoB;AAAG,IAAA,UAAU,EAAC;AAAd,KAAuB;AACvC,YAAQ;AAD+B,GAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qDAApB,CADyB,EAIzB;AAAI,IAAA,UAAU,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAoB;AAAG,IAAA,UAAU,EAAC;AAAd,KAAuB;AACvC,YAAQ;AAD+B,GAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCAApB,EAE2C;AAAI,IAAA,UAAU,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACvC;AAAI,IAAA,UAAU,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAoB;AAAG,IAAA,UAAU,EAAC;AAAd,KAAuB;AACvC,YAAQ;AAD+B,GAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAApB,CADuC,EAIvC;AAAI,IAAA,UAAU,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAoB;AAAG,IAAA,UAAU,EAAC;AAAd,KAAuB;AACvC,YAAQ;AAD+B,GAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAApB,CAJuC,EAOvC;AAAI,IAAA,UAAU,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAoB;AAAG,IAAA,UAAU,EAAC;AAAd,KAAuB;AACvC,YAAQ;AAD+B,GAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAApB,CAPuC,EAUvC;AAAI,IAAA,UAAU,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAoB;AAAG,IAAA,UAAU,EAAC;AAAd,KAAuB;AACvC,YAAQ;AAD+B,GAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAApB,CAVuC,EAavC;AAAI,IAAA,UAAU,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAoB;AAAG,IAAA,UAAU,EAAC;AAAd,KAAuB;AACvC,YAAQ;AAD+B,GAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCAApB,CAbuC,EAgBvC;AAAI,IAAA,UAAU,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAoB;AAAG,IAAA,UAAU,EAAC;AAAd,KAAuB;AACvC,YAAQ;AAD+B,GAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCAApB,CAhBuC,EAmBvC;AAAI,IAAA,UAAU,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAoB;AAAG,IAAA,UAAU,EAAC;AAAd,KAAuB;AACvC,YAAQ;AAD+B,GAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAApB,CAnBuC,EAsBvC;AAAI,IAAA,UAAU,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAoB;AAAG,IAAA,UAAU,EAAC;AAAd,KAAuB;AACvC,YAAQ;AAD+B,GAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAApB,CAtBuC,EAyBvC;AAAI,IAAA,UAAU,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAoB;AAAG,IAAA,UAAU,EAAC;AAAd,KAAuB;AACvC,YAAQ;AAD+B,GAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAApB,CAzBuC,EA4BvC;AAAI,IAAA,UAAU,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAoB;AAAG,IAAA,UAAU,EAAC;AAAd,KAAuB;AACvC,YAAQ;AAD+B,GAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAApB,CA5BuC,CAF3C,CAJyB,EAsCzB;AAAI,IAAA,UAAU,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAoB;AAAG,IAAA,UAAU,EAAC;AAAd,KAAuB;AACvC,YAAQ;AAD+B,GAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sDAApB,EAE0D;AAAI,IAAA,UAAU,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACtD;AAAI,IAAA,UAAU,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAoB;AAAG,IAAA,UAAU,EAAC;AAAd,KAAuB;AACvC,YAAQ;AAD+B,GAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAApB,CADsD,CAF1D,CAtCyB,EA6CzB;AAAI,IAAA,UAAU,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAoB;AAAG,IAAA,UAAU,EAAC;AAAd,KAAuB;AACvC,YAAQ;AAD+B,GAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uDAApB,EAE2D;AAAI,IAAA,UAAU,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACvD;AAAI,IAAA,UAAU,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAoB;AAAG,IAAA,UAAU,EAAC;AAAd,KAAuB;AACvC,YAAQ;AAD+B,GAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAApB,CADuD,CAF3D,CA7CyB,EAoDzB;AAAI,IAAA,UAAU,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAoB;AAAG,IAAA,UAAU,EAAC;AAAd,KAAuB;AACvC,YAAQ;AAD+B,GAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uDAApB,EAE2D;AAAI,IAAA,UAAU,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACvD;AAAI,IAAA,UAAU,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAoB;AAAG,IAAA,UAAU,EAAC;AAAd,KAAuB;AACvC,YAAQ;AAD+B,GAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAApB,CADuD,CAF3D,CApDyB,EA2DzB;AAAI,IAAA,UAAU,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAoB;AAAG,IAAA,UAAU,EAAC;AAAd,KAAuB;AACvC,YAAQ;AAD+B,GAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CAApB,CA3DyB,EA8DzB;AAAI,IAAA,UAAU,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAoB;AAAG,IAAA,UAAU,EAAC;AAAd,KAAuB;AACvC,YAAQ;AAD+B,GAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uDAApB,EAE2D;AAAI,IAAA,UAAU,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACvD;AAAI,IAAA,UAAU,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAoB;AAAG,IAAA,UAAU,EAAC;AAAd,KAAuB;AACvC,YAAQ;AAD+B,GAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAApB,CADuD,CAF3D,CA9DyB,EAqEzB;AAAI,IAAA,UAAU,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAoB;AAAG,IAAA,UAAU,EAAC;AAAd,KAAuB;AACvC,YAAQ;AAD+B,GAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4CAApB,CArEyB,EAwEzB;AAAI,IAAA,UAAU,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAoB;AAAG,IAAA,UAAU,EAAC;AAAd,KAAuB;AACvC,YAAQ;AAD+B,GAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wCAApB,EAE4C;AAAI,IAAA,UAAU,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACxC;AAAI,IAAA,UAAU,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAoB;AAAG,IAAA,UAAU,EAAC;AAAd,KAAuB;AACvC,YAAQ;AAD+B,GAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAApB,CADwC,EAIxC;AAAI,IAAA,UAAU,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAoB;AAAG,IAAA,UAAU,EAAC;AAAd,KAAuB;AACvC,YAAQ;AAD+B,GAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAApB,CAJwC,EAOxC;AAAI,IAAA,UAAU,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAoB;AAAG,IAAA,UAAU,EAAC;AAAd,KAAuB;AACvC,YAAQ;AAD+B,GAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCAApB,CAPwC,EAUxC;AAAI,IAAA,UAAU,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAoB;AAAG,IAAA,UAAU,EAAC;AAAd,KAAuB;AACvC,YAAQ;AAD+B,GAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oDAApB,CAVwC,EAaxC;AAAI,IAAA,UAAU,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAoB;AAAG,IAAA,UAAU,EAAC;AAAd,KAAuB;AACvC,YAAQ;AAD+B,GAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gDAApB,CAbwC,EAgBxC;AAAI,IAAA,UAAU,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAoB;AAAG,IAAA,UAAU,EAAC;AAAd,KAAuB;AACvC,YAAQ;AAD+B,GAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gDAApB,CAhBwC,CAF5C,CAxEyB,CAF7B,CADF,CAJK,EAuGL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAvGK,EAwGL,wBAAQ;AACN,UAAM;AADA,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qDAxGK,EA2GL,wBAAQ;AACN,UAAM;AADA,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCA3GK,EA8GL,wBAAQ;AACN,UAAM;AADA,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cA9GK,EAiHL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAK;AAAM,IAAA,UAAU,EAAC;AAAjB,KAA2B,EAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4YAAL,CAjHK,EAmIL,wBAAQ;AACN,UAAM;AADA,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAnIK,EAsIL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uDAAqD;AAAY,IAAA,UAAU,EAAC,GAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAArD,CAtIK,EAuIL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8CAvIK,EAwIL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gIAA8H;AAAY,IAAA,UAAU,EAAC,GAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAA9H,0CAxIK,EAyIL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAmB;AAAY,IAAA,UAAU,EAAC,GAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAnB,6BAzIK,EA0IL,wBAAQ;AACN,UAAM;AADA,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBA1IK,EA6IL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4DA7IK,EA+IL,wBAAQ;AACN,UAAM;AADA,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BA/IK,EAkJL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2FAlJK,EAmJL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gEAnJK,EAoJL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAG;AAAY,IAAA,UAAU,EAAC,GAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAH,2EApJK,EAqJL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAG;AAAY,IAAA,UAAU,EAAC,GAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAH,wBAAuF;AAAY,IAAA,UAAU,EAAC,GAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAvF,uEArJK,EAsJL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCAAiC;AAAY,IAAA,UAAU,EAAC,GAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAjC,4EAtJK,EAuJL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iHAvJK,EAwJL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAK;AAAM,IAAA,UAAU,EAAC;AAAjB,KAA2B,EAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mLAAL,CAxJK,EA4JL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6DAA2D;AAAY,IAAA,UAAU,EAAC,GAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAA3D,wDA5JK,EA6JL,wBAAQ;AACN,UAAM;AADA,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCA7JK,EAgKL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yIAhKK,EAiKL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAG;AAAQ,IAAA,UAAU,EAAC,GAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAAH,CAjKK,EAkKL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wJAlKK,EAmKL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAG;AAAQ,IAAA,UAAU,EAAC,GAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAH,CAnKK,EAoKL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oDApKK,EAqKL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4CArKK,EAsKL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAG;AAAY,IAAA,UAAU,EAAC,GAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAAH,+GAtKK,EAuKL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iEAA+D;AAAY,IAAA,UAAU,EAAC,GAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAA/D,MAvKK,EAwKL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qFAAmF;AAAY,IAAA,UAAU,EAAC,GAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAnF,8BAxKK,EAyKL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qEAzKK,EA0KL,wBAAQ;AACN,UAAM;AADA,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCA1KK,EA6KL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAG;AAAY,IAAA,UAAU,EAAC,GAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAH,CA7KK,EA8KL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCA9KK,EA+KL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAK;AAAM,IAAA,UAAU,EAAC;AAAjB,KAA2B,EAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4CAAL,CA/KK,EAkLL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2EAlLK,EAmLL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uFAnLK,EAoLL,wBAAQ;AACN,UAAM;AADA,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBApLK,EAuLL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gGAvLK,EAwLL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oFAxLK,EAyLL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAG;AAAQ,IAAA,UAAU,EAAC,GAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAH,CAzLK,EA0LL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAK;AAAM,IAAA,UAAU,EAAC;AAAjB,KAA2B,EAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4VAAL,CA1LK,EA4ML,wBAAQ;AACN,UAAM;AADA,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBA5MK,EA+ML;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,UAAU,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+EADF,EAEE;AAAI,IAAA,UAAU,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uFAFF,EAGE;AAAI,IAAA,UAAU,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wCAHF,CA/MK,EAoNL,wBAAQ;AACN,UAAM;AADA,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BApNK,EAuNL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6FAvNK,EAwNL,wBAAQ;AACN,UAAM;AADA,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAxNK,EA2NL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4FAA0F;AAAI,IAAA,UAAU,EAAC,GAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAA1F,uBAAkJ;AAAI,IAAA,UAAU,EAAC,GAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAlJ,MA3NK,EA4NL,wBAAQ;AACN,UAAM;AADA,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sDA5NK,EA+NL,wBAAQ;AACN,UAAM;AADA,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YA/NK,EAkOL,wBAAQ;AACN,UAAM;AADA,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uDAlOK,EAqOL,wBAAQ;AACN,UAAM;AADA,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BArOK,EAwOL,wBAAQ;AACN,UAAM;AADA,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uDAxOK,EA2OL,wBAAQ;AACN,UAAM;AADA,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BA3OK,EA8OL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA9OK,EA+OL,wBAAQ;AACN,UAAM;AADA,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CA/OK,EAkPL,wBAAQ;AACN,UAAM;AADA,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uDAlPK,EAqPL,wBAAQ;AACN,UAAM;AADA,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BArPK,EAwPL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gFAxPK,EAyPL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAkB;AAAY,IAAA,UAAU,EAAC,GAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAlB,uBAAsF;AAAY,IAAA,UAAU,EAAC,GAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAtF,uCAA0K;AAAY,IAAA,UAAU,EAAC,GAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAA1K,mHAzPK,EA0PL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uEAAqE;AAAY,IAAA,UAAU,EAAC,GAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAArE,MA1PK,EA2PL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAK;AAAM,IAAA,UAAU,EAAC;AAAjB,KAA2B,EAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,miBAAL,CA3PK,EAoRL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IApRK,EAqRL,wBAAQ;AACN,UAAM;AADA,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4CArRK,EAwRL,wBAAQ;AACN,UAAM;AADA,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wCAxRK,EA2RL,wBAAQ;AACN,UAAM;AADA,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BA3RK,EA8RL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CA9RK,EA+RL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wDA/RK,EAgSL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+GAhSK,EAiSL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,UAAU,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6IADF,EAEE;AAAI,IAAA,UAAU,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CAFF,EAGE;AAAI,IAAA,UAAU,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iDAHF,CAjSK,EAsSL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uHAtSK,EAuSL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAK;AAAM,IAAA,UAAU,EAAC;AAAjB,KAA2B,EAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sDAAL,CAvSK,EA0SL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAA4B;AAAY,IAAA,UAAU,EAAC,GAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAA5B,sFA1SK,EA2SL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kHA3SK,EA4SL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iHAA+G;AAAY,IAAA,UAAU,EAAC,GAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAA/G,WAAsK;AAAY,IAAA,UAAU,EAAC,GAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAtK,qDA5SK,EA6SL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA7SK,EA8SL,wBAAQ;AACN,UAAM;AADA,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BA9SK,EAiTL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAjTK,EAkTL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qJAAmJ;AAAY,IAAA,UAAU,EAAC,GAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAnJ,CAlTK,EAmTL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2NAnTK,EAoTL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAK;AAAM,IAAA,UAAU,EAAC;AAAjB,KAA2B,EAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAL,CApTK,EAsTL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAG;AAAY,IAAA,UAAU,EAAC,GAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAH,oCAAoF;AAAY,IAAA,UAAU,EAAC,GAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAApF,yDAAyL;AAAY,IAAA,UAAU,EAAC,GAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAzL,4CAtTK,EAuTL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gMAvTK,EAwTL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4IAxTK,EAyTL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAgB;AAAY,IAAA,UAAU,EAAC,GAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAhB,wCAzTK,EA0TL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sQA1TK,EA2TL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mIA3TK,EA4TL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAuB;AAAY,IAAA,UAAU,EAAC,GAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAvB,8EA5TK,EA6TL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+IA7TK,EA8TL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA9TK,EA+TL,wBAAQ;AACN,UAAM;AADA,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCA/TK,EAkUL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4GAlUK,EAmUL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yGAnUK,EAoUL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCAAuC;AAAY,IAAA,UAAU,EAAC,GAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAvC,gBApUK,EAqUL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kDArUK,EAsUL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,UAAU,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAoB;AAAY,IAAA,UAAU,EAAC,IAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAApB,oCADF,EAEE;AAAI,IAAA,UAAU,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAoB;AAAY,IAAA,UAAU,EAAC,IAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAApB,iDAFF,EAGE;AAAI,IAAA,UAAU,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAoB;AAAY,IAAA,UAAU,EAAC,IAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAApB,yDAHF,CAtUK,EA2UL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mEAAiE;AAAY,IAAA,UAAU,EAAC,GAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAjE,WAA0H;AAAY,IAAA,UAAU,EAAC,GAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAA1H,MA3UK,EA4UL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAA+B;AAAY,IAAA,UAAU,EAAC,GAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAA/B,iDA5UK,EA6UL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAgB;AAAY,IAAA,UAAU,EAAC,GAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAhB,2FA7UK,EA8UL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wLA9UK,EA+UL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAkB;AAAY,IAAA,UAAU,EAAC,GAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAlB,uCAAwG;AAAY,IAAA,UAAU,EAAC,GAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAxG,UAAgK;AAAY,IAAA,UAAU,EAAC,GAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAhK,wCA/UK,EAgVL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yHAhVK,EAiVL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAqB;AAAY,IAAA,UAAU,EAAC,GAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAArB,6GAjVK,EAkVL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAlVK,EAmVL,wBAAQ;AACN,UAAM;AADA,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oDAnVK,EAsVL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAG;AAAQ,IAAA,UAAU,EAAC,GAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAH,CAtVK,EAuVL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,UAAU,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAoB;AAAY,IAAA,UAAU,EAAC,IAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAApB,4JADF,EAEE;AAAI,IAAA,UAAU,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAoB;AAAY,IAAA,UAAU,EAAC,IAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAApB,uPAFF,CAvVK,EA2VL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8HA3VK,EA4VL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,UAAU,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAoB;AAAY,IAAA,UAAU,EAAC,IAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAApB,4CADF,CA5VK,EA+VL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iMA/VK,EAgWL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,UAAU,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAoB;AAAY,IAAA,UAAU,EAAC,IAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAApB,kCADF,CAhWK,EAmWL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uHAnWK,EAoWL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IApWK,EAqWL,wBAAQ;AACN,UAAM;AADA,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gDArWK,EAwWL,wBAAQ;AACN,UAAM;AADA,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gDAxWK,CAAP;AA4WD;;;;;;;;;;;;;AAEDD,UAAU,CAACE,cAAX,GAA4B,IAA5B;;;;;;;;;;0BA3XMV,a;0BAKAM,W;0BAGAC,S;0BACkBC,U","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"linux-essentials\"\n    }}>{`Linux Essentials`}</h1>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"#linux-essentials\"\n        }}>{`Linux Essentials`}</a><ul parentName=\"li\">\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#linux-2-finding-your-way-on-a-linux-systems\"\n            }}>{`LINUX-2: Finding Your Way on a Linux Systems`}</a></li>\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#linux-21-command-line-basics\"\n            }}>{`LINUX-2.1: Command Line Basics`}</a><ul parentName=\"li\">\n              <li parentName=\"ul\"><a parentName=\"li\" {...{\n                  \"href\": \"#uname\"\n                }}>{`uname`}</a></li>\n              <li parentName=\"ul\"><a parentName=\"li\" {...{\n                  \"href\": \"#history-and-completion\"\n                }}>{`History and completion`}</a></li>\n              <li parentName=\"ul\"><a parentName=\"li\" {...{\n                  \"href\": \"#cd-and-pwd\"\n                }}>{`cd and pwd`}</a></li>\n              <li parentName=\"ul\"><a parentName=\"li\" {...{\n                  \"href\": \"#shell-config-files\"\n                }}>{`Shell config files`}</a></li>\n              <li parentName=\"ul\"><a parentName=\"li\" {...{\n                  \"href\": \"#variables-envsys-variables\"\n                }}>{`Variables: Env/Sys Variables`}</a></li>\n              <li parentName=\"ul\"><a parentName=\"li\" {...{\n                  \"href\": \"#variables-user-defined-vars\"\n                }}>{`Variables: User Defined vars`}</a></li>\n              <li parentName=\"ul\"><a parentName=\"li\" {...{\n                  \"href\": \"#globbing\"\n                }}>{`Globbing`}</a></li>\n              <li parentName=\"ul\"><a parentName=\"li\" {...{\n                  \"href\": \"#quoting\"\n                }}>{`Quoting`}</a></li>\n              <li parentName=\"ul\"><a parentName=\"li\" {...{\n                  \"href\": \"#formatting-commands\"\n                }}>{`Formatting Commands`}</a></li>\n              <li parentName=\"ul\"><a parentName=\"li\" {...{\n                  \"href\": \"#working-with-options\"\n                }}>{`Working with Options`}</a></li>\n            </ul></li>\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#linux-22-using-the-command-line-to-get-help\"\n            }}>{`LINUX-2.2: Using the Command Line to Get Help`}</a><ul parentName=\"li\">\n              <li parentName=\"ul\"><a parentName=\"li\" {...{\n                  \"href\": \"#man\"\n                }}>{`Man`}</a></li>\n            </ul></li>\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#linux-23-using-directories-and-listing-files\"\n            }}>{`LINUX-2.3: Using Directories and Listing Files`}</a><ul parentName=\"li\">\n              <li parentName=\"ul\"><a parentName=\"li\" {...{\n                  \"href\": \"#the-linux-file-system\"\n                }}>{`The Linux File System`}</a></li>\n            </ul></li>\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#linux-24-creating-moving-and-deleting-files\"\n            }}>{`LINUX-2.4: Creating, Moving and Deleting Files`}</a><ul parentName=\"li\">\n              <li parentName=\"ul\"><a parentName=\"li\" {...{\n                  \"href\": \"#files-and-directories\"\n                }}>{`Files and Directories`}</a></li>\n            </ul></li>\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#linux-3-the-power-of-the-command-line\"\n            }}>{`LINUX-3: The Power of the Command Line`}</a></li>\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#linux-31-archiving-files-on-the-command-line\"\n            }}>{`LINUX-3.1: Archiving Files on the Command Line`}</a><ul parentName=\"li\">\n              <li parentName=\"ul\"><a parentName=\"li\" {...{\n                  \"href\": \"#files-directories\"\n                }}>{`Files, Directories`}</a></li>\n            </ul></li>\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#linux-5-the-linux-operating-system\"\n            }}>{`LINUX-5: The Linux Operating System`}</a></li>\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#linux-53-where-data-is-stored\"\n            }}>{`LINUX-5.3: Where Data is Stored`}</a><ul parentName=\"li\">\n              <li parentName=\"ul\"><a parentName=\"li\" {...{\n                  \"href\": \"#linux-531-kernel\"\n                }}>{`LINUX-5.3.1: Kernel`}</a></li>\n              <li parentName=\"ul\"><a parentName=\"li\" {...{\n                  \"href\": \"#linux-532-processes\"\n                }}>{`LINUX-5.3.2: Processes`}</a></li>\n              <li parentName=\"ul\"><a parentName=\"li\" {...{\n                  \"href\": \"#linux-533-syslog-klog-dmesg\"\n                }}>{`LINUX-5.3.3: syslog, klog, dmesg`}</a></li>\n              <li parentName=\"ul\"><a parentName=\"li\" {...{\n                  \"href\": \"#linux-534-lib-usrlib-etc-varlog\"\n                }}>{`LINUX-5.3.4: /lib, /usr/lib, /etc, /var/log`}</a></li>\n              <li parentName=\"ul\"><a parentName=\"li\" {...{\n                  \"href\": \"#linux-54-your-computer-on-the-network\"\n                }}>{`LINUX-5.4: Your Computer on the Network`}</a></li>\n              <li parentName=\"ul\"><a parentName=\"li\" {...{\n                  \"href\": \"#linux-531-internet-network-routers\"\n                }}>{`LINUX-5.3.1: Internet, Network, Routers`}</a></li>\n            </ul></li>\n        </ul></li>\n    </ul>\n    <hr></hr>\n    <h2 {...{\n      \"id\": \"linux-2-finding-your-way-on-a-linux-systems\"\n    }}>{`LINUX-2: Finding Your Way on a Linux Systems`}</h2>\n    <h2 {...{\n      \"id\": \"linux-21-command-line-basics\"\n    }}>{`LINUX-2.1: Command Line Basics`}</h2>\n    <h3 {...{\n      \"id\": \"uname\"\n    }}>{`uname`}</h3>\n    <pre><code parentName=\"pre\" {...{}}>{`okeeffe_d@dok ~$ uname\nDarwin\n\nokeeffe_d@dok ~$ uname -n\ndok.gateway\n\nokeeffe_d@dok ~$ uname -r\n15.6.0\n\nokeeffe_d@dok ~$ uname -m\nx86_64\n\nokeeffe_d@dok ~$ uname -p\ni386\n\nokeeffe_d@dok ~$ uname -a                                    1 ↵\nDarwin dok.gateway 15.6.0 Darwin Kernel Version 15.6.0: Thu Jun 23 18:25:34 PDT 2016; root:xnu-3248.60.10~1/RELEASE_X86_64 x86_64\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"history-and-completion\"\n    }}>{`History and completion`}</h3>\n    <p>{`All commands are kept in the history file eg. `}<inlineCode parentName=\"p\">{`.bash_history`}</inlineCode></p>\n    <p>{`You can cycle through with the arrows.`}</p>\n    <p>{`ENV variables can allow us to control history. We can also change the history file length (default 500) by we could go `}<inlineCode parentName=\"p\">{`export HISTFILESIZE=99999`}</inlineCode>{` to make our History file far longer.`}</p>\n    <p>{`We can also `}<inlineCode parentName=\"p\">{`tab`}</inlineCode>{` to autocomplete things.`}</p>\n    <h3 {...{\n      \"id\": \"cd-and-pwd\"\n    }}>{`cd and pwd`}</h3>\n    <p>{`cd - change directory\npwd - print working directory`}</p>\n    <h3 {...{\n      \"id\": \"shell-config-files\"\n    }}>{`Shell config files`}</h3>\n    <p>{`This will vary depending on what kind of shell we are using eg. login or not login.`}</p>\n    <p>{`We can configure it to boot automatically (run level 5).`}</p>\n    <p><inlineCode parentName=\"p\">{`/etc/.bash_rc`}</inlineCode>{` is set up to run different commands and ENV vars for our enviornment.`}</p>\n    <p><inlineCode parentName=\"p\">{`/etc/.bash_profile`}</inlineCode>{` and other hidden `}<inlineCode parentName=\"p\">{`.bash_name`}</inlineCode>{` run at certain times etc. which can be used for login shells etc.`}</p>\n    <p>{`If you run a login shell, `}<inlineCode parentName=\"p\">{`.bash_profile`}</inlineCode>{` will be the first to run. No distribution will use all of these files.`}</p>\n    <p>{`There is also a certain order to how these files are called upon. Call order is also dependent on the OS.`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`// dependent on non login shells or login shells - eg booting into a machine\n.bash_profile\n.bash_login || .bash_rc // it will use the first that it finds and use that\n`}</code></pre>\n    <p>{`Every file is also user specific. If you can change `}<inlineCode parentName=\"p\">{`/etc/profile`}</inlineCode>{` you can change the settings for every single user.`}</p>\n    <h3 {...{\n      \"id\": \"variables-envsys-variables\"\n    }}>{`Variables: Env/Sys Variables`}</h3>\n    <p>{`There are user defined and system defined variables. It is stored in the systems RAM that is reserved for this sort of operation.`}</p>\n    <p><strong parentName=\"p\">{`Environment Variables`}</strong></p>\n    <p>{`These are named and defined by the OS. This is generally run from our shell prompt. Eg. the tilda key will always move us to our Home directory.`}</p>\n    <p><strong parentName=\"p\">{`User Variables`}</strong></p>\n    <p>{`These can be defined by the user themselves.`}</p>\n    <p>{`Adding a PATH for a new application.`}</p>\n    <p><inlineCode parentName=\"p\">{`PATH=$PATH:/var/opt/`}</inlineCode>{` - this will append the folder to a new env variable. Now we can add new scripts that we want to run here!`}</p>\n    <p>{`To make it apply to all of our login shells, we then go `}<inlineCode parentName=\"p\">{`export PATH`}</inlineCode>{`.`}</p>\n    <p>{`To keep it automatically when we start our system, we will need to edit our `}<inlineCode parentName=\"p\">{`.bash_profile`}</inlineCode>{` and adjust the path var.`}</p>\n    <p>{`Note: Interactive shells are ones that you can interact with.`}</p>\n    <h3 {...{\n      \"id\": \"variables-user-defined-vars\"\n    }}>{`Variables: User Defined vars`}</h3>\n    <p><inlineCode parentName=\"p\">{`var=value`}</inlineCode></p>\n    <p>{`So how do we create this?`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`awesome=\"dennis\"\necho $awesome\n`}</code></pre>\n    <p>{`To use this in other shells, again, we need to export the variable.`}</p>\n    <p>{`Variable names can container letters and numbers but cannot start with numbers.`}</p>\n    <h3 {...{\n      \"id\": \"globbing\"\n    }}>{`Globbing`}</h3>\n    <p>{`Globbing is the process of expanding a non-specific file name using a wildcard variable.`}</p>\n    <p>{`Globbing - Global Command. Historically, it came from the /etc/glob program.`}</p>\n    <p><strong parentName=\"p\">{`Commands`}</strong></p>\n    <pre><code parentName=\"pre\" {...{}}>{`// find all .txt files\nls *.txt\n\n// list files that start with test\nls test*\n\n// replace the ? with an char\nls ????.txt\n\n// find file based on something you know with the ? wildcard\nls Monday-file?.txt\n\n// find files that begin with F\nls [F]*.txt\n\n// specify letter you think might come one way or another\nls f[igh][lfz]*\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"quoting\"\n    }}>{`Quoting`}</h3>\n    <ul>\n      <li parentName=\"ul\">{`Double quotes allow us to still use the value of variables and commands`}</li>\n      <li parentName=\"ul\">{`Single quotes preserve the literaly meaning of each character of a given string`}</li>\n      <li parentName=\"ul\">{`Backslash is an escape character`}</li>\n    </ul>\n    <h3 {...{\n      \"id\": \"formatting-commands\"\n    }}>{`Formatting Commands`}</h3>\n    <p>{`We can use the backslash so that we can continue writing the command on the new line.`}</p>\n    <h3 {...{\n      \"id\": \"working-with-options\"\n    }}>{`Working with Options`}</h3>\n    <p>{`The commands parameters can be roughly divided in parameters starting with a dash (`}<em parentName=\"p\">{`options`}</em>{`) and no dashes (`}<em parentName=\"p\">{`arguments`}</em>{`)`}</p>\n    <h2 {...{\n      \"id\": \"linux-22-using-the-command-line-to-get-help\"\n    }}>{`LINUX-2.2: Using the Command Line to Get Help`}</h2>\n    <h3 {...{\n      \"id\": \"man\"\n    }}>{`Man`}</h3>\n    <h2 {...{\n      \"id\": \"linux-23-using-directories-and-listing-files\"\n    }}>{`LINUX-2.3: Using Directories and Listing Files`}</h2>\n    <h3 {...{\n      \"id\": \"the-linux-file-system\"\n    }}>{`The Linux File System`}</h3>\n    <h2 {...{\n      \"id\": \"linux-24-creating-moving-and-deleting-files\"\n    }}>{`LINUX-2.4: Creating, Moving and Deleting Files`}</h2>\n    <h3 {...{\n      \"id\": \"files-and-directories\"\n    }}>{`Files and Directories`}</h3>\n    <hr></hr>\n    <h2 {...{\n      \"id\": \"linux-3-the-power-of-the-command-line\"\n    }}>{`LINUX-3: The Power of the Command Line`}</h2>\n    <h2 {...{\n      \"id\": \"linux-31-archiving-files-on-the-command-line\"\n    }}>{`LINUX-3.1: Archiving Files on the Command Line`}</h2>\n    <h3 {...{\n      \"id\": \"files-directories\"\n    }}>{`Files, Directories`}</h3>\n    <p>{`We can archive multiple files into a single file and then compress them.`}</p>\n    <p>{`We can use `}<inlineCode parentName=\"p\">{`Tar`}</inlineCode>{` to compress and `}<inlineCode parentName=\"p\">{`zip`}</inlineCode>{` which is generally for windows. `}<inlineCode parentName=\"p\">{`tar`}</inlineCode>{` is a Linux utility that archives things. It does not compress or compact files. It just sticks them together.`}</p>\n    <p>{`It was originally used to create tape backups. Tar stands for `}<inlineCode parentName=\"p\">{`Tape Archive`}</inlineCode>{`.`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`# inside of a folder that contains a folder with three files\n# if we want to archive this folder\n# tar -cf creates the file name.tar\n# tar -xf extracts the file name.tar\n\ntar -cf folder1tar.tar folder1\n\n# this would archive folder1\n\ntar -xf folder1tar.tar\n\n# extracting this, we will have folder1 back\n\n# tar multiple archive files at once\n# ls\n# file1.txt file2.txt file3.txt\n\ntar -cf files.tar file1.txt file3.txt\n\n# now we will have files.tar with those two files\n\ntar -xf files.tar\n\n# extracts those two files\n`}</code></pre>\n    <hr></hr>\n    <h2 {...{\n      \"id\": \"linux-5-the-linux-operating-system\"\n    }}>{`LINUX-5: The Linux Operating System`}</h2>\n    <h2 {...{\n      \"id\": \"linux-53-where-data-is-stored\"\n    }}>{`LINUX-5.3: Where Data is Stored`}</h2>\n    <h3 {...{\n      \"id\": \"linux-531-kernel\"\n    }}>{`LINUX-5.3.1: Kernel`}</h3>\n    <p>{`The Linux Kernel is a Unix-like OS.`}</p>\n    <p>{`The Linux is the core of any Linux installation.`}</p>\n    <p>{`The Linux kernel is responsible for managing every other piece of software on a running Linux computer.`}</p>\n    <ul>\n      <li parentName=\"ul\">{`It is responsibile for all of the interfacing of all the applications down to hardware between the interprocess communication system.`}</li>\n      <li parentName=\"ul\">{`Provides critical low level tasks.`}</li>\n      <li parentName=\"ul\">{`Loaded very early on in the boot process.`}</li>\n    </ul>\n    <p>{`We could change the program that runs as the first process by adding it to the boot loader option command line.`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`# run bash first after boot\ninit=/bin/bash\n`}</code></pre>\n    <p>{`First program is the `}<inlineCode parentName=\"p\">{`sbininit`}</inlineCode>{` process. This will run programs as child processes for things such as login etc.`}</p>\n    <p>{`Processes can leave behind children process that will be adopted. It's a tree like Hierarchy of processes.`}</p>\n    <p>{`There could be dozens to hundreds of processes. The kernel is at the top. We can then use commands like `}<inlineCode parentName=\"p\">{`ps`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`top`}</inlineCode>{` to directly see and manipulate these processes.`}</p>\n    <hr></hr>\n    <h3 {...{\n      \"id\": \"linux-532-processes\"\n    }}>{`LINUX-5.3.2: Processes`}</h3>\n    <p>{`All processes have a PID.`}</p>\n    <p>{`Each process has an id which starts with one. There is also a PPID associated for the parents ID. We can identify these with utilities like `}<inlineCode parentName=\"p\">{`ps`}</inlineCode></p>\n    <p>{`The following command will allow you to see the processes with flags -a for all users, -u for showing users that are running the process, and -x for displaying processes which do not have a controlling terminal.`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`ps aux | grep <name>\n`}</code></pre>\n    <p><inlineCode parentName=\"p\">{`top`}</inlineCode>{` is an interactive version of `}<inlineCode parentName=\"p\">{`ps`}</inlineCode>{`. It shows a live visual. You can use options like `}<inlineCode parentName=\"p\">{`top -o CPU`}</inlineCode>{` to order usage by things like CPU etc.`}</p>\n    <p>{`Top can also provide a load average. A load average of 0 is a system that no programs are demanding CPU time. An average of 1 is a system with one program running a CPU intensive task.`}</p>\n    <p>{`Load averages can reach a number of cores. Eg. a load average of 4.0 would be a quad core system where a program requires all cores.`}</p>\n    <p>{`The term `}<inlineCode parentName=\"p\">{`hung`}</inlineCode>{` refers to an unresponsive program.`}</p>\n    <p>{`You cannot say a process is consuming too much memory just because it is at the top of the list. Sometimes, this could actually be a result of things such as a memory leak. This could be due to a bug, but at least you can kill a program in the mean time.`}</p>\n    <p>{`The kernel also grants program access to sets of memory address. Once the program is done, it should give that memory back.`}</p>\n    <p>{`There is also a `}<inlineCode parentName=\"p\">{`free`}</inlineCode>{` command in some linux systems where you can see how much memory is used.`}</p>\n    <p>{`Swap space is used for when the system runs out of RAM. It is generally low. If it rises too much, you'll suffer from performance loss.`}</p>\n    <hr></hr>\n    <h3 {...{\n      \"id\": \"linux-533-syslog-klog-dmesg\"\n    }}>{`LINUX-5.3.3: syslog, klog, dmesg`}</h3>\n    <p>{`Most background programs (daemon) write log files for being to show info about Linux Administration.`}</p>\n    <p>{`You can even tell these programs to log even more verbose message if you're looking for an issue.`}</p>\n    <p>{`Linux normally stores it in the `}<inlineCode parentName=\"p\">{`/var/log`}</inlineCode>{` directory.`}</p>\n    <p>{`We can see some interesting programs here.`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`cron`}</inlineCode>{` is a linux scheduling service.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`syslog`}</inlineCode>{` (mailbox) is the general purpose log files.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`secure`}</inlineCode>{` log is here when something requires root privilege.`}</li>\n    </ul>\n    <p>{`Most of the log files are easy to reading using things is `}<inlineCode parentName=\"p\">{`tail`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`less`}</inlineCode>{`.`}</p>\n    <p>{`If we use commands like `}<inlineCode parentName=\"p\">{`grep sshd /var/log/*`}</inlineCode>{` to actually look through all the log files!`}</p>\n    <p>{`Files in `}<inlineCode parentName=\"p\">{`/etc/sys`}</inlineCode>{` will show us some config files. This changes with each different Linux Distributions.`}</p>\n    <p>{`Once the log daemon is running, it will push messages towards a specific log file. The ring buffer is a log file for the kernel, which is stored on memory as opposed to a disk.`}</p>\n    <p>{`We can use `}<inlineCode parentName=\"p\">{`dmesg`}</inlineCode>{` tool! Instead, if we pipe it to `}<inlineCode parentName=\"p\">{`tail`}</inlineCode>{` or `}<inlineCode parentName=\"p\">{`less`}</inlineCode>{`, we can check out the dynamic log.`}</p>\n    <p>{`If there issues that you don't understand, you can still check this out and find answers through a search engine.`}</p>\n    <p>{`If we jump to `}<inlineCode parentName=\"p\">{`/etc/rc.d/rc.local`}</inlineCode>{` file, we can set up dmesg > /var/log/dmesg, we can start logging the dmesg file to this file on reboot.`}</p>\n    <hr></hr>\n    <h3 {...{\n      \"id\": \"linux-534-lib-usrlib-etc-varlog\"\n    }}>{`LINUX-5.3.4: /lib, /usr/lib, /etc, /var/log`}</h3>\n    <p><strong parentName=\"p\">{`Data Locations`}</strong></p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`/lib`}</inlineCode>{` : Linked library files used by binaries in /bin and /usr/bin - Dynamic libraries and files used for the boot process. - Kernel modules also live here.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`/usr/lib`}</inlineCode>{` : Linked library files used by binaries in /bin and /usr/bin - Dynamic libraries and support static files for executables. - You can create your own helper files by creating more subdirectories here for things such as plugins and extensions.`}</li>\n    </ul>\n    <p>{`These two folders are similar to Windows .dll - the binaries or executables on the Mac are store in the above folders.`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`/etc`}</inlineCode>{` : Configuration files for our Linux OS`}</li>\n    </ul>\n    <p>{`This stores things for our Configuration. Things like mySql, Apache etc are stored here. For different daemons on the program, they will have a subdirectory in the etc folder directory.`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`/var/log`}</inlineCode>{` : Log files for our Linux OS`}</li>\n    </ul>\n    <p>{`This is used for the log files from the different daemons which we can use for trouble shooting down the track.`}</p>\n    <hr></hr>\n    <h3 {...{\n      \"id\": \"linux-54-your-computer-on-the-network\"\n    }}>{`LINUX-5.4: Your Computer on the Network`}</h3>\n    <h3 {...{\n      \"id\": \"linux-531-internet-network-routers\"\n    }}>{`LINUX-5.3.1: Internet, Network, Routers`}</h3>\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  "]}]}