{"remainingRequest":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/docz-core/node_modules/babel-loader/lib/index.js??ref--6-1!/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/@mdx-js/loader/index.js??ref--6-2!/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/source-map-loader/index.js!/Users/dennis.okeeffe/Project-Imposter/developer-notes/manual/DevOps/DevOps-Essentials.md","dependencies":[{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/manual/DevOps/DevOps-Essentials.md","mtime":1562563032030},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/cache-loader/dist/cjs.js","mtime":1581496618588},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/docz-core/node_modules/babel-loader/lib/index.js","mtime":1578565694890},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/@mdx-js/loader/index.js","mtime":1581496618277},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/source-map-loader/index.js","mtime":1580255490569}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/dennis.okeeffe/Project-Imposter/developer-notes/manual/DevOps/DevOps-Essentials.md"],"names":["React","mdx","makeShortcode","name","MDXDefaultShortcode","props","console","warn","layoutProps","MDXLayout","MDXContent","components","isMDXComponent"],"mappings":"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","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"devops-essentials\"\n    }}>{`DevOps-Essentials`}</h1>\n    {\n      /* TOC */\n    }\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"#devops-essentials\"\n        }}>{`DevOps-Essentials`}</a><ul parentName=\"li\">\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#10-traditional-responsibility-silos\"\n            }}>{`1.0 Traditional Responsibility Silos`}</a></li>\n        </ul></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"#terminology\"\n        }}>{`Terminology`}</a><ul parentName=\"li\">\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#20-iaas---infrastructure-as-a-service\"\n            }}>{`2.0: IaaS - Infrastructure as a Service`}</a></li>\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#21-paas---platform-as-a-service\"\n            }}>{`2.1: PaaS - Platform as a Service`}</a></li>\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#22-saas---software-as-a-service\"\n            }}>{`2.2: SaaS - Software as a Service`}</a></li>\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#30-build-automation\"\n            }}>{`3.0: Build Automation`}</a></li>\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#31-ci-and-cd\"\n            }}>{`3.1: CI and CD`}</a></li>\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#40-jenkins\"\n            }}>{`4.0: Jenkins`}</a></li>\n        </ul></li>\n    </ul>\n    {\n      /* /TOC */\n    }\n    <p><strong parentName=\"p\">{`What is DevOps?`}</strong></p>\n    <p>{`A software development method that stresses communication, collaboration, integration, automation and a measurement of cooperation between software devs and other IT professionals.`}</p>\n    <p>{`It acknowledges the interdependence of software dev, quality assure and IT operations.`}</p>\n    <p>{`You'll hear things like CI, build automation and treating the infrastructure like code.`}</p>\n    <p>{`It addresses short comings and obstacles that we come across in our careers.`}</p>\n    <h2 {...{\n      \"id\": \"10-traditional-responsibility-silos\"\n    }}>{`1.0 Traditional Responsibility Silos`}</h2>\n    <p>{`IT Operations are usually broken into the following:`}</p>\n    <ol>\n      <li parentName=\"ol\">{`Infrastructure and Monitoring`}</li>\n      <li parentName=\"ol\">{`Architecture and Planning`}</li>\n      <li parentName=\"ol\">{`Maintenence`}</li>\n      <li parentName=\"ol\">{`Support`}</li>\n    </ol>\n    <p>{`This is the traditional operations stack.`}</p>\n    <p>{`IT Dev is broken down into methodologies like the following:`}</p>\n    <ol>\n      <li parentName=\"ol\">{`Prototyping`}</li>\n      <li parentName=\"ol\">{`Waterfall`}</li>\n      <li parentName=\"ol\">{`Agile`}</li>\n      <li parentName=\"ol\">{`Rapid`}</li>\n    </ol>\n    <p>{`Hardware and networking were not necessarily well understood by skilled software developers and vice versa.`}</p>\n    <h1 {...{\n      \"id\": \"terminology\"\n    }}>{`Terminology`}</h1>\n    <h2 {...{\n      \"id\": \"20-iaas---infrastructure-as-a-service\"\n    }}>{`2.0: IaaS - Infrastructure as a Service`}</h2>\n    <ul>\n      <li parentName=\"ul\">{`Setting up a service for using IT Infrastructure`}</li>\n      <li parentName=\"ul\">{`\"Stack\" involved includes things from hardware to the operating system and applications that sit on top.`}</li>\n      <li parentName=\"ul\">{`Virtualisation is almost indistinguishable in speed when compared to standard infrastructure is`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"21-paas---platform-as-a-service\"\n    }}>{`2.1: PaaS - Platform as a Service`}</h2>\n    <p>{`Further down the rabbit hole! Next step in the redefinition of IT was looking at how the platform was provided.`}</p>\n    <p>{`This delivers a \"computer platform\" for consumption. It generally includes all of IaaS + a few additions.`}</p>\n    <p>{`In addition to before, this also addings in `}<inlineCode parentName=\"p\">{`runtime`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`middleware`}</inlineCode>{`. Services like `}<inlineCode parentName=\"p\">{`Azure`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`App Engine`}</inlineCode>{` were some of the first to offer the underlying computer and storage resources that could scale automatically to match application demand so manual allocation of resources was no longer necessary.`}</p>\n    <p>{`It converged developer and operations skillsets even more.`}</p>\n    <h2 {...{\n      \"id\": \"22-saas---software-as-a-service\"\n    }}>{`2.2: SaaS - Software as a Service`}</h2>\n    <p>{`Skills needed in this area has completely converged.`}</p>\n    <p>{`It is an important driving force behind DevOps. A ton of autoscaling code was written to deal with this.`}</p>\n    <p>{`Here, we need traditional software AND hardware personnel that need the same skills to operate within this space.`}</p>\n    <hr></hr>\n    <h2 {...{\n      \"id\": \"30-build-automation\"\n    }}>{`3.0: Build Automation`}</h2>\n    <p>{`Historically, this referred to software development. The process of \"building\" or compiling software that can then be deployed via script or cron jobs to various environments, including production systems.`}</p>\n    <p>{`It is about minimizing the deployment without manual intervention.`}</p>\n    <p>{`Generally the entire stack will look like the flow from top to bottom:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`Dev Environment\n|\nSource Repo\n|\nBuild Server\n|\nIntegration Server\n|\nTest Server\n|\nProduction Server\n`}</code></pre>\n    <p>{`It includes automated testing and rollback capabilities. This build is consistent and can reduce the troubleshooting when there are problems as a result.`}</p>\n    <h2 {...{\n      \"id\": \"31-ci-and-cd\"\n    }}>{`3.1: CI and CD`}</h2>\n    <ul>\n      <li parentName=\"ul\">{`CI means the practise of mergine dev working copies with the shared source main branch multiple times per day.`}</li>\n      <li parentName=\"ul\">{`CD is an approach where valuable software is produced in small delivery cycles and ensures that those features can be reliably and consistenly released at any point in time.`}</li>\n    </ul>\n    <p>{`CI has more to do with how the software code is managed throughout the development lifecycle, whereas CD is how valuable and how quickly that software can be released when it is determined that the aggregate features are valuable enough.`}</p>\n    <p>{`Although related, they are different in what they accomplish.`}</p>\n    <p>{`DevOps uses each one and in term feeds the other in the chain.`}</p>\n    <hr></hr>\n    <h2 {...{\n      \"id\": \"40-jenkins\"\n    }}>{`4.0: Jenkins`}</h2>\n    <p>{`Jenkins is build automation on steroids. It can be considered a CI but often considered a CD tool as well.`}</p>\n    <p>{`Used normally for build deployments, but can do anything from deploying scripts to launching virtual machines through VMWare or Vagrant to Docker.`}</p>\n    <p>{`It helps create a basic build job to the custom direction of containers with unit testing etc.`}</p>\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  "]}]}