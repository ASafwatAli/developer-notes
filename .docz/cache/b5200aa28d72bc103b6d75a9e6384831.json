{"remainingRequest":"/Users/okeeffe_d/Business/Documentation/node_modules/babel-loader/lib/index.js?{\"presets\":[[\"/Users/okeeffe_d/Business/Documentation/node_modules/babel-preset-docz/dist/index.js\",{\"flow\":true,\"typescript\":false,\"parseProps\":true}]],\"plugins\":[[\"/Users/okeeffe_d/Business/Documentation/node_modules/docz-utils/lib/named-asset-import.js\",{\"loaderMap\":{\"svg\":{\"ReactComponent\":\"@svgr/webpack?-prettier,-svgo![path]\"}}}]],\"babelrc\":false,\"cacheCompression\":true,\"compact\":true}!/Users/okeeffe_d/Business/Documentation/manual/COMP3520-OS/3-Threads.md","dependencies":[{"path":"/Users/okeeffe_d/Business/Documentation/manual/COMP3520-OS/3-Threads.md","mtime":1548209344281},{"path":"/Users/okeeffe_d/Business/Documentation/node_modules/cache-loader/dist/cjs.js","mtime":1548134640245},{"path":"/Users/okeeffe_d/Business/Documentation/node_modules/babel-loader/lib/index.js","mtime":1548134640227}],"contextDependencies":[],"result":["function _typeof(obj){if(typeof Symbol===\"function\"&&typeof Symbol.iterator===\"symbol\"){_typeof=function _typeof(obj){return typeof obj;};}else{_typeof=function _typeof(obj){return obj&&typeof Symbol===\"function\"&&obj.constructor===Symbol&&obj!==Symbol.prototype?\"symbol\":typeof obj;};}return _typeof(obj);}function _objectWithoutProperties(source,excluded){if(source==null)return{};var target=_objectWithoutPropertiesLoose(source,excluded);var key,i;if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++){key=sourceSymbolKeys[i];if(excluded.indexOf(key)>=0)continue;if(!Object.prototype.propertyIsEnumerable.call(source,key))continue;target[key]=source[key];}}return target;}function _objectWithoutPropertiesLoose(source,excluded){if(source==null)return{};var target={};var sourceKeys=Object.keys(source);var key,i;for(i=0;i<sourceKeys.length;i++){key=sourceKeys[i];if(excluded.indexOf(key)>=0)continue;target[key]=source[key];}return target;}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\");}}function _defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}function _createClass(Constructor,protoProps,staticProps){if(protoProps)_defineProperties(Constructor.prototype,protoProps);if(staticProps)_defineProperties(Constructor,staticProps);return Constructor;}function _possibleConstructorReturn(self,call){if(call&&(_typeof(call)===\"object\"||typeof call===\"function\")){return call;}return _assertThisInitialized(self);}function _assertThisInitialized(self){if(self===void 0){throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");}return self;}function _getPrototypeOf(o){_getPrototypeOf=Object.setPrototypeOf?Object.getPrototypeOf:function _getPrototypeOf(o){return o.__proto__||Object.getPrototypeOf(o);};return _getPrototypeOf(o);}function _inherits(subClass,superClass){if(typeof superClass!==\"function\"&&superClass!==null){throw new TypeError(\"Super expression must either be null or a function\");}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,writable:true,configurable:true}});if(superClass)_setPrototypeOf(subClass,superClass);}function _setPrototypeOf(o,p){_setPrototypeOf=Object.setPrototypeOf||function _setPrototypeOf(o,p){o.__proto__=p;return o;};return _setPrototypeOf(o,p);}import React from'react';import{MDXTag}from'@mdx-js/tag';var MDXContent=/*#__PURE__*/function(_React$Component){_inherits(MDXContent,_React$Component);function MDXContent(props){var _this;_classCallCheck(this,MDXContent);_this=_possibleConstructorReturn(this,_getPrototypeOf(MDXContent).call(this,props));_this.layout=null;return _this;}_createClass(MDXContent,[{key:\"render\",value:function render(){var _this$props=this.props,components=_this$props.components,props=_objectWithoutProperties(_this$props,[\"components\"]);return React.createElement(MDXTag,{name:\"wrapper\",components:components},React.createElement(MDXTag,{name:\"h1\",components:components,props:{\"id\":\"week-3---threads\"}},\"Week 3 - Threads\"),React.createElement(MDXTag,{name:\"h2\",components:components,props:{\"id\":\"processes-and-threads\"}},\"Processes and Threads\"),React.createElement(MDXTag,{name:\"p\",components:components},\"Processes have two characteristics:\"),React.createElement(MDXTag,{name:\"ol\",components:components},React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ol\"},\"Resource Ownership \",React.createElement(MDXTag,{name:\"ul\",components:components,parentName:\"li\"},React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"process includes a virtual address space to hold the process image \"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"the OS performs a protection function to prevent unwanted interference between processes with respect to resources\"))),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ol\"},\"Scheduling/Execution\",React.createElement(MDXTag,{name:\"ul\",components:components,parentName:\"li\"},React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"follows an execution path that may be interleaved with other processes \"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"a process has an execution state (Running, Ready, etc.) and a dispatching priority and is scheduled and dispatched by the OS\")))),React.createElement(MDXTag,{name:\"p\",components:components},\"These two characteristics are treated independently by modern operating systems:\\n- the unit of dispatching is referred to as a \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"thread\"),\" or lightweight process\\n- the unit of resource ownership is referred to as a \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"process\"),\" or \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"task\")),React.createElement(MDXTag,{name:\"h2\",components:components,props:{\"id\":\"multithreading\"}},\"Multithreading\"),React.createElement(MDXTag,{name:\"p\",components:components},\"The ability of an OS to support multiple, concurrect paths of execution within a single process\"),React.createElement(MDXTag,{name:\"h2\",components:components,props:{\"id\":\"process\"}},\"Process\"),React.createElement(MDXTag,{name:\"p\",components:components},\"The unit of resource allocation and a unit of protection.\"),React.createElement(MDXTag,{name:\"p\",components:components},\"A process is associated with: \"),React.createElement(MDXTag,{name:\"ul\",components:components},React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"A virtual address space which holds the process image \"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"Protected access to\\n- Processors\\n- Other processes\\n- Files\\n- I/O resources \")),React.createElement(MDXTag,{name:\"h2\",components:components,props:{\"id\":\"multiple-threads-in-process\"}},\"Multiple threads in Process\"),React.createElement(MDXTag,{name:\"p\",components:components},\"Each thread has:\"),React.createElement(MDXTag,{name:\"ul\",components:components},React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"Access to the memory and resources of its process (all threads of a process share this)\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"An execution state (running, ready, etc.)\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"Saved thread context when not running \"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"An execution stack \"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"Some per-thread static storage for local variables\")),React.createElement(MDXTag,{name:\"h2\",components:components,props:{\"id\":\"single-threaded-vs-multi-threaded\"}},\"Single-Threaded vs multi threaded\"),React.createElement(MDXTag,{name:\"ul\",components:components},React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"Both have \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"li\"},\"Process Control Block\")),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"Both have \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"li\"},\"User Address Space\")),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"Single thread has a \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"li\"},\"User Stack\"),\" and \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"li\"},\"Kernel Stack\")),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"Multithread process has a \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"li\"},\"User Stack\"),\", \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"li\"},\"Kernel Stack\"),\", \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"li\"},\"Thread Control Block\"),\" within each thread\")),React.createElement(MDXTag,{name:\"h2\",components:components,props:{\"id\":\"threads\"}},\"Threads\"),React.createElement(MDXTag,{name:\"p\",components:components},\"In OS that supports threads: scheduling and dispatching done on thread basis \"),React.createElement(MDXTag,{name:\"ul\",components:components},React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"Most of the state info dealing with execution is maintained in thread-level data structures \"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"Several actions that affect all of the threads in a process and that the OS must manage at the process level\\n- Suspending process means all threads of a process\\n- Terminates a process terminates all threads within the process \"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"Similar to processes, threads have execution states and may synchronize with one another.\")),React.createElement(MDXTag,{name:\"h2\",components:components,props:{\"id\":\"thread-execution-states\"}},\"Thread Execution States\"),React.createElement(MDXTag,{name:\"p\",components:components},\"Three basic states\"),React.createElement(MDXTag,{name:\"ol\",components:components},React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ol\"},\"Running \"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ol\"},\"Ready \"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ol\"},\"Blocked \")),React.createElement(MDXTag,{name:\"p\",components:components},\"Operations associated with a change in thread state \"),React.createElement(MDXTag,{name:\"ul\",components:components},React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"Spawn (another thread)\\n- allocate register context and stacks \"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"Block\\n- move to an event queue waiting for the event\\n- issue: will blocking a thread block other, or all, threads within the same process?\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"Unblock\\n- moved the the \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"li\"},\"Ready\"),\" queue for execution\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"Finish (thread)\\n- de-allocate register context and stacks \")),React.createElement(MDXTag,{name:\"h2\",components:components,props:{\"id\":\"thread-synchronization\"}},\"Thread Synchronization\"),React.createElement(MDXTag,{name:\"p\",components:components},\"Necessity to sync activities of all threads and prevent interference between each other.\"),React.createElement(MDXTag,{name:\"ul\",components:components},React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"all threads of a process share the same address space and other resources \"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"any alteration of a resource by one thread affects the other threads in the same process \")),React.createElement(MDXTag,{name:\"p\",components:components},\"In general, the techniques used for thread sync are the same as those for process sync.\"),React.createElement(MDXTag,{name:\"h2\",components:components,props:{\"id\":\"types-of-threads\"}},\"Types of Threads\"),React.createElement(MDXTag,{name:\"ol\",components:components},React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ol\"},\"User Level Thread (ULT)\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ol\"},\"Kernel Level Thread (KLT) \",React.createElement(MDXTag,{name:\"ul\",components:components,parentName:\"li\"},React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"also called kernel-supported threads or lightweight threads\")))),React.createElement(MDXTag,{name:\"h2\",components:components,props:{\"id\":\"user-level-threads\"}},\"User-Level Threads\"),React.createElement(MDXTag,{name:\"p\",components:components},\"Thread management all done by application.\"),React.createElement(MDXTag,{name:\"ul\",components:components},React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"Multithreading is managed by a runtime threads lib \")),React.createElement(MDXTag,{name:\"p\",components:components},\"The kernel is not aware of the existence of threads \"),React.createElement(MDXTag,{name:\"ul\",components:components},React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"Only schedule the process as a unit and assigns a single execution state to that process \")),React.createElement(MDXTag,{name:\"h2\",components:components,props:{\"id\":\"disadvantages-of-ult\"}},\"Disadvantages of ULT\"),React.createElement(MDXTag,{name:\"p\",components:components},\"In a typical OS many system calls are blocking \"),React.createElement(MDXTag,{name:\"ul\",components:components},React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"as a result, when a ULT executes a system call, not only is the thread blocked, but all within the process are blocked \")),React.createElement(MDXTag,{name:\"p\",components:components},\"In a pure ULT strategy, multithreaded applications cannot take advantage of multiprocessing.\"),React.createElement(MDXTag,{name:\"h2\",components:components,props:{\"id\":\"kernel-level-threads\"}},\"Kernel-Level Threads\"),React.createElement(MDXTag,{name:\"p\",components:components},\"Kernel maintains context information for the process and the threads. \"),React.createElement(MDXTag,{name:\"ul\",components:components},React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"No thread management done by application \")),React.createElement(MDXTag,{name:\"p\",components:components},\"Scheduling is done on a thread basis.\"),React.createElement(MDXTag,{name:\"p\",components:components},\"Windows is an example of this approach.\"),React.createElement(MDXTag,{name:\"h2\",components:components,props:{\"id\":\"advantages-of-klt\"}},\"Advantages of KLT\"),React.createElement(MDXTag,{name:\"p\",components:components},\"The kernel can simultaneously schedule multiple threads from the same process on multiple processors.\"),React.createElement(MDXTag,{name:\"p\",components:components},\"If one thread is blocked, the kernel schedules another thread of the same process.\"),React.createElement(MDXTag,{name:\"p\",components:components},\"Kernel routines themselves can be multithreaded.\"),React.createElement(MDXTag,{name:\"h2\",components:components,props:{\"id\":\"multicore--multithreading\"}},\"Multicore & Multithreading\"),React.createElement(MDXTag,{name:\"p\",components:components},\"Achieves concurrency without the overhead of using multiple processes.\"),React.createElement(MDXTag,{name:\"p\",components:components},\"Threads within the same process can exchange information through their common address space and have access to the shared resources of the process.\"),React.createElement(MDXTag,{name:\"ul\",components:components},React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"Threads of any process can run on any processor\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"Soft affinity:\\n- dispatcher tries to assign a ready thread to the same processor it last ran on\\n- helps reuse data still in that processor's memory caches from the previous execution of the thread \"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"Hard affinity:\\n- an application restricts thread execution to certain processors\")),React.createElement(MDXTag,{name:\"h2\",components:components,props:{\"id\":\"multicore-challenges\"}},\"Multicore Challenges\"),React.createElement(MDXTag,{name:\"ul\",components:components},React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"Dividing activities \"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"Balance \"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"Data splitting \"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"Data dependency \"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"Testing and debugging \")),React.createElement(MDXTag,{name:\"h2\",components:components,props:{\"id\":\"linux-threads\"}},\"Linux Threads\"),React.createElement(MDXTag,{name:\"p\",components:components},\"Linux uses the same internal representation for processes and threads; a thread is simply a new process (or task) that happens to share the same address space as its parent.\"),React.createElement(MDXTag,{name:\"p\",components:components},\"A distinction is only made when a new thread is created by the \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"clone\"),\" system call\\n- \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"fork\"),\" creates a new process with its own entirely new process context\\n- \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"clone\"),\" creates a new process with its own identity, but that is allowed to share the data structures of its parent\"),React.createElement(MDXTag,{name:\"p\",components:components},\"Using \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"clone\"),\" gives the application fine-grained control over exactly what is shared between two threads.\"),React.createElement(MDXTag,{name:\"table\",components:components},React.createElement(MDXTag,{name:\"thead\",components:components,parentName:\"table\"},React.createElement(MDXTag,{name:\"tr\",components:components,parentName:\"thead\"},React.createElement(MDXTag,{name:\"th\",components:components,parentName:\"tr\",props:{\"align\":null}},\"flag\"),React.createElement(MDXTag,{name:\"th\",components:components,parentName:\"tr\",props:{\"align\":null}},\"meaning\"))),React.createElement(MDXTag,{name:\"tbody\",components:components,parentName:\"table\"},React.createElement(MDXTag,{name:\"tr\",components:components,parentName:\"tbody\"},React.createElement(MDXTag,{name:\"td\",components:components,parentName:\"tr\",props:{\"align\":null}},React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"td\"},\"CLONE_FS\")),React.createElement(MDXTag,{name:\"td\",components:components,parentName:\"tr\",props:{\"align\":null}},\"File-system info is shared\")),React.createElement(MDXTag,{name:\"tr\",components:components,parentName:\"tbody\"},React.createElement(MDXTag,{name:\"td\",components:components,parentName:\"tr\",props:{\"align\":null}},React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"td\"},\"CLONE_VM\")),React.createElement(MDXTag,{name:\"td\",components:components,parentName:\"tr\",props:{\"align\":null}},\"The same mem space is shared\")),React.createElement(MDXTag,{name:\"tr\",components:components,parentName:\"tbody\"},React.createElement(MDXTag,{name:\"td\",components:components,parentName:\"tr\",props:{\"align\":null}},React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"td\"},\"CLONE_SIGHAND\")),React.createElement(MDXTag,{name:\"td\",components:components,parentName:\"tr\",props:{\"align\":null}},\"Signal handlers are shared\")),React.createElement(MDXTag,{name:\"tr\",components:components,parentName:\"tbody\"},React.createElement(MDXTag,{name:\"td\",components:components,parentName:\"tr\",props:{\"align\":null}},React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"td\"},\"CLONE_FILES\")),React.createElement(MDXTag,{name:\"td\",components:components,parentName:\"tr\",props:{\"align\":null}},\"The set of open files are shared\")))),React.createElement(MDXTag,{name:\"h2\",components:components,props:{\"id\":\"windows-threads\"}},\"Windows Threads\"),React.createElement(MDXTag,{name:\"p\",components:components},\"Processes and servies provided by the Windows Kernel are relatively simple and general purpose.\"),React.createElement(MDXTag,{name:\"ul\",components:components},React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"implemented as objects \"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"created as new process or a copy of an existing process \"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"exec proc may contain one or more threads \"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"both procs and thread objects have built-in sync capabilities\")),React.createElement(MDXTag,{name:\"p\",components:components},\"Windows makes use of two types of process-related objects:\"),React.createElement(MDXTag,{name:\"p\",components:components},React.createElement(MDXTag,{name:\"strong\",components:components,parentName:\"p\"},\"Processes\"),\"\\n\\u2013 an entity corresponding to a user job or application that owns resources\"),React.createElement(MDXTag,{name:\"p\",components:components},React.createElement(MDXTag,{name:\"strong\",components:components,parentName:\"p\"},\"Threads\"),\"\\n\\u2013 a dispatchable unit of work that executes sequentially and is interruptible\"));}}]);return MDXContent;}(React.Component);export{MDXContent as default};MDXContent.__docgenInfo={\"description\":\"\",\"methods\":[],\"displayName\":\"MDXContent\"};",{"version":3,"sources":["/Users/okeeffe_d/Business/Documentation/manual/COMP3520-OS/3-Threads.md"],"names":["React","MDXTag","MDXContent","props","layout","components","Component"],"mappings":"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","sourcesContent":["\n  import React from 'react'\n  import { MDXTag } from '@mdx-js/tag'\n  \n\nexport default class MDXContent extends React.Component {\n  constructor(props) {\n    super(props)\n    this.layout = null\n  }\n  render() {\n    const { components, ...props } = this.props\n\n    return <MDXTag\n             name=\"wrapper\"\n             \n             components={components}><MDXTag name=\"h1\" components={components} props={{\"id\":\"week-3---threads\"}}>{`Week 3 - Threads`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"processes-and-threads\"}}>{`Processes and Threads`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Processes have two characteristics:`}</MDXTag>\n<MDXTag name=\"ol\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ol\">{`Resource Ownership `}<MDXTag name=\"ul\" components={components} parentName=\"li\">\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`process includes a virtual address space to hold the process image `}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`the OS performs a protection function to prevent unwanted interference between processes with respect to resources`}</MDXTag>\n</MDXTag></MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ol\">{`Scheduling/Execution`}<MDXTag name=\"ul\" components={components} parentName=\"li\">\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`follows an execution path that may be interleaved with other processes `}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`a process has an execution state (Running, Ready, etc.) and a dispatching priority and is scheduled and dispatched by the OS`}</MDXTag>\n</MDXTag></MDXTag>\n</MDXTag>\n<MDXTag name=\"p\" components={components}>{`These two characteristics are treated independently by modern operating systems:\n- the unit of dispatching is referred to as a `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`thread`}</MDXTag>{` or lightweight process\n- the unit of resource ownership is referred to as a `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`process`}</MDXTag>{` or `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`task`}</MDXTag></MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"multithreading\"}}>{`Multithreading`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`The ability of an OS to support multiple, concurrect paths of execution within a single process`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"process\"}}>{`Process`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`The unit of resource allocation and a unit of protection.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`A process is associated with: `}</MDXTag>\n<MDXTag name=\"ul\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`A virtual address space which holds the process image `}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Protected access to\n- Processors\n- Other processes\n- Files\n- I/O resources `}</MDXTag>\n</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"multiple-threads-in-process\"}}>{`Multiple threads in Process`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Each thread has:`}</MDXTag>\n<MDXTag name=\"ul\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Access to the memory and resources of its process (all threads of a process share this)`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`An execution state (running, ready, etc.)`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Saved thread context when not running `}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`An execution stack `}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Some per-thread static storage for local variables`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"single-threaded-vs-multi-threaded\"}}>{`Single-Threaded vs multi threaded`}</MDXTag>\n<MDXTag name=\"ul\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Both have `}<MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`Process Control Block`}</MDXTag></MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Both have `}<MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`User Address Space`}</MDXTag></MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Single thread has a `}<MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`User Stack`}</MDXTag>{` and `}<MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`Kernel Stack`}</MDXTag></MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Multithread process has a `}<MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`User Stack`}</MDXTag>{`, `}<MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`Kernel Stack`}</MDXTag>{`, `}<MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`Thread Control Block`}</MDXTag>{` within each thread`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"threads\"}}>{`Threads`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`In OS that supports threads: scheduling and dispatching done on thread basis `}</MDXTag>\n<MDXTag name=\"ul\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Most of the state info dealing with execution is maintained in thread-level data structures `}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Several actions that affect all of the threads in a process and that the OS must manage at the process level\n- Suspending process means all threads of a process\n- Terminates a process terminates all threads within the process `}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Similar to processes, threads have execution states and may synchronize with one another.`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"thread-execution-states\"}}>{`Thread Execution States`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Three basic states`}</MDXTag>\n<MDXTag name=\"ol\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ol\">{`Running `}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ol\">{`Ready `}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ol\">{`Blocked `}</MDXTag>\n</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Operations associated with a change in thread state `}</MDXTag>\n<MDXTag name=\"ul\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Spawn (another thread)\n- allocate register context and stacks `}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Block\n- move to an event queue waiting for the event\n- issue: will blocking a thread block other, or all, threads within the same process?`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Unblock\n- moved the the `}<MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`Ready`}</MDXTag>{` queue for execution`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Finish (thread)\n- de-allocate register context and stacks `}</MDXTag>\n</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"thread-synchronization\"}}>{`Thread Synchronization`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Necessity to sync activities of all threads and prevent interference between each other.`}</MDXTag>\n<MDXTag name=\"ul\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`all threads of a process share the same address space and other resources `}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`any alteration of a resource by one thread affects the other threads in the same process `}</MDXTag>\n</MDXTag>\n<MDXTag name=\"p\" components={components}>{`In general, the techniques used for thread sync are the same as those for process sync.`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"types-of-threads\"}}>{`Types of Threads`}</MDXTag>\n<MDXTag name=\"ol\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ol\">{`User Level Thread (ULT)`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ol\">{`Kernel Level Thread (KLT) `}<MDXTag name=\"ul\" components={components} parentName=\"li\">\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`also called kernel-supported threads or lightweight threads`}</MDXTag>\n</MDXTag></MDXTag>\n</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"user-level-threads\"}}>{`User-Level Threads`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Thread management all done by application.`}</MDXTag>\n<MDXTag name=\"ul\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Multithreading is managed by a runtime threads lib `}</MDXTag>\n</MDXTag>\n<MDXTag name=\"p\" components={components}>{`The kernel is not aware of the existence of threads `}</MDXTag>\n<MDXTag name=\"ul\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Only schedule the process as a unit and assigns a single execution state to that process `}</MDXTag>\n</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"disadvantages-of-ult\"}}>{`Disadvantages of ULT`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`In a typical OS many system calls are blocking `}</MDXTag>\n<MDXTag name=\"ul\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`as a result, when a ULT executes a system call, not only is the thread blocked, but all within the process are blocked `}</MDXTag>\n</MDXTag>\n<MDXTag name=\"p\" components={components}>{`In a pure ULT strategy, multithreaded applications cannot take advantage of multiprocessing.`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"kernel-level-threads\"}}>{`Kernel-Level Threads`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Kernel maintains context information for the process and the threads. `}</MDXTag>\n<MDXTag name=\"ul\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`No thread management done by application `}</MDXTag>\n</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Scheduling is done on a thread basis.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Windows is an example of this approach.`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"advantages-of-klt\"}}>{`Advantages of KLT`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`The kernel can simultaneously schedule multiple threads from the same process on multiple processors.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`If one thread is blocked, the kernel schedules another thread of the same process.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Kernel routines themselves can be multithreaded.`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"multicore--multithreading\"}}>{`Multicore & Multithreading`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Achieves concurrency without the overhead of using multiple processes.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Threads within the same process can exchange information through their common address space and have access to the shared resources of the process.`}</MDXTag>\n<MDXTag name=\"ul\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Threads of any process can run on any processor`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Soft affinity:\n- dispatcher tries to assign a ready thread to the same processor it last ran on\n- helps reuse data still in that processor's memory caches from the previous execution of the thread `}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Hard affinity:\n- an application restricts thread execution to certain processors`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"multicore-challenges\"}}>{`Multicore Challenges`}</MDXTag>\n<MDXTag name=\"ul\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Dividing activities `}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Balance `}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Data splitting `}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Data dependency `}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Testing and debugging `}</MDXTag>\n</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"linux-threads\"}}>{`Linux Threads`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Linux uses the same internal representation for processes and threads; a thread is simply a new process (or task) that happens to share the same address space as its parent.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`A distinction is only made when a new thread is created by the `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`clone`}</MDXTag>{` system call\n- `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`fork`}</MDXTag>{` creates a new process with its own entirely new process context\n- `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`clone`}</MDXTag>{` creates a new process with its own identity, but that is allowed to share the data structures of its parent`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Using `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`clone`}</MDXTag>{` gives the application fine-grained control over exactly what is shared between two threads.`}</MDXTag>\n<MDXTag name=\"table\" components={components}>\n<MDXTag name=\"thead\" components={components} parentName=\"table\">\n<MDXTag name=\"tr\" components={components} parentName=\"thead\">\n<MDXTag name=\"th\" components={components} parentName=\"tr\" props={{\"align\":null}}>{`flag`}</MDXTag>\n<MDXTag name=\"th\" components={components} parentName=\"tr\" props={{\"align\":null}}>{`meaning`}</MDXTag>\n</MDXTag>\n</MDXTag>\n<MDXTag name=\"tbody\" components={components} parentName=\"table\">\n<MDXTag name=\"tr\" components={components} parentName=\"tbody\">\n<MDXTag name=\"td\" components={components} parentName=\"tr\" props={{\"align\":null}}><MDXTag name=\"inlineCode\" components={components} parentName=\"td\">{`CLONE_FS`}</MDXTag></MDXTag>\n<MDXTag name=\"td\" components={components} parentName=\"tr\" props={{\"align\":null}}>{`File-system info is shared`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"tr\" components={components} parentName=\"tbody\">\n<MDXTag name=\"td\" components={components} parentName=\"tr\" props={{\"align\":null}}><MDXTag name=\"inlineCode\" components={components} parentName=\"td\">{`CLONE_VM`}</MDXTag></MDXTag>\n<MDXTag name=\"td\" components={components} parentName=\"tr\" props={{\"align\":null}}>{`The same mem space is shared`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"tr\" components={components} parentName=\"tbody\">\n<MDXTag name=\"td\" components={components} parentName=\"tr\" props={{\"align\":null}}><MDXTag name=\"inlineCode\" components={components} parentName=\"td\">{`CLONE_SIGHAND`}</MDXTag></MDXTag>\n<MDXTag name=\"td\" components={components} parentName=\"tr\" props={{\"align\":null}}>{`Signal handlers are shared`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"tr\" components={components} parentName=\"tbody\">\n<MDXTag name=\"td\" components={components} parentName=\"tr\" props={{\"align\":null}}><MDXTag name=\"inlineCode\" components={components} parentName=\"td\">{`CLONE_FILES`}</MDXTag></MDXTag>\n<MDXTag name=\"td\" components={components} parentName=\"tr\" props={{\"align\":null}}>{`The set of open files are shared`}</MDXTag>\n</MDXTag>\n</MDXTag>\n</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"windows-threads\"}}>{`Windows Threads`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Processes and servies provided by the Windows Kernel are relatively simple and general purpose.`}</MDXTag>\n<MDXTag name=\"ul\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`implemented as objects `}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`created as new process or a copy of an existing process `}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`exec proc may contain one or more threads `}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`both procs and thread objects have built-in sync capabilities`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Windows makes use of two types of process-related objects:`}</MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"strong\" components={components} parentName=\"p\">{`Processes`}</MDXTag>{`\n– an entity corresponding to a user job or application that owns resources`}</MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"strong\" components={components} parentName=\"p\">{`Threads`}</MDXTag>{`\n– a dispatchable unit of work that executes sequentially and is interruptible`}</MDXTag>\n           </MDXTag>\n  }\n}\n  "]}]}