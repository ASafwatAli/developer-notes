{"remainingRequest":"/Users/okeeffe_d/Project-Imposter/developer-notes/node_modules/docz-core/node_modules/babel-loader/lib/index.js??ref--6-1!/Users/okeeffe_d/Project-Imposter/developer-notes/node_modules/@mdx-js/loader/index.js??ref--6-2!/Users/okeeffe_d/Project-Imposter/developer-notes/node_modules/source-map-loader/index.js!/Users/okeeffe_d/Project-Imposter/developer-notes/manual/Go/Go-Basic-Slices.md","dependencies":[{"path":"/Users/okeeffe_d/Project-Imposter/developer-notes/manual/Go/Go-Basic-Slices.md","mtime":1551332290565},{"path":"/Users/okeeffe_d/Project-Imposter/developer-notes/node_modules/cache-loader/dist/cjs.js","mtime":1561535530324},{"path":"/Users/okeeffe_d/Project-Imposter/developer-notes/node_modules/docz-core/node_modules/babel-loader/lib/index.js","mtime":1560300163820},{"path":"/Users/okeeffe_d/Project-Imposter/developer-notes/node_modules/@mdx-js/loader/index.js","mtime":1561535530532},{"path":"/Users/okeeffe_d/Project-Imposter/developer-notes/node_modules/source-map-loader/index.js","mtime":1548285283521}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9vYmplY3RXaXRob3V0UHJvcGVydGllcyBmcm9tIi9Vc2Vycy9va2VlZmZlX2QvUHJvamVjdC1JbXBvc3Rlci9kZXZlbG9wZXItbm90ZXMvbm9kZV9tb2R1bGVzL2JhYmVsLXByZXNldC1yZWFjdC1hcHAvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzIjsvKiBAanN4IG1keCAqL2ltcG9ydCBSZWFjdCBmcm9tJ3JlYWN0JztpbXBvcnR7bWR4fWZyb20nQG1keC1qcy9yZWFjdCc7LyogQGpzeCBtZHggKi92YXIgbWFrZVNob3J0Y29kZT1mdW5jdGlvbiBtYWtlU2hvcnRjb2RlKG5hbWUpe3JldHVybiBmdW5jdGlvbiBNRFhEZWZhdWx0U2hvcnRjb2RlKHByb3BzKXtjb25zb2xlLndhcm4oIkNvbXBvbmVudCAiK25hbWUrIiB3YXMgbm90IGltcG9ydGVkLCBleHBvcnRlZCwgb3IgcHJvdmlkZWQgYnkgTURYUHJvdmlkZXIgYXMgZ2xvYmFsIHNjb3BlIik7cmV0dXJuIG1keCgiZGl2Iixwcm9wcyk7fTt9O3ZhciBsYXlvdXRQcm9wcz17fTt2YXIgTURYTGF5b3V0PSJ3cmFwcGVyIjtleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBNRFhDb250ZW50KF9yZWYpe3ZhciBjb21wb25lbnRzPV9yZWYuY29tcG9uZW50cyxwcm9wcz1fb2JqZWN0V2l0aG91dFByb3BlcnRpZXMoX3JlZixbImNvbXBvbmVudHMiXSk7cmV0dXJuIG1keChNRFhMYXlvdXQsT2JqZWN0LmFzc2lnbih7fSxsYXlvdXRQcm9wcyxwcm9wcyx7Y29tcG9uZW50czpjb21wb25lbnRzLG1keFR5cGU6Ik1EWExheW91dCJ9KSxtZHgoImgxIix7ImlkIjoiYmFzaWMtc2xpY2UtZnVuY3Rpb25zIn0sIkJhc2ljIFNsaWNlIEZ1bmN0aW9ucyIpLG1keCgicCIsbnVsbCwiU2V0IHVwIHRoZSBmb2xkZXIgd2l0aCB0ZXN0IGFuZCBtYWluIGZpbGU6IiksbWR4KCJwcmUiLG51bGwsbWR4KCJjb2RlIixPYmplY3QuYXNzaWduKHtwYXJlbnROYW1lOiJwcmUifSx7ImNsYXNzTmFtZSI6Imxhbmd1YWdlLWdvIn0pLCIvLyBzbGljZXNfdGVzdC5nb1xucGFja2FnZSBzbGljZXNcblxuaW1wb3J0IChcbiAgICBcInRlc3RpbmdcIlxuKVxuXG4vLyBzbGljZXMuZ29cbnBhY2thZ2Ugc2xpY2VzXG4iKSksbWR4KCJoMiIseyJpZCI6InB1c2gifSwiUHVzaCIpLG1keCgicHJlIixudWxsLG1keCgiY29kZSIsT2JqZWN0LmFzc2lnbih7cGFyZW50TmFtZToicHJlIn0seyJjbGFzc05hbWUiOiJsYW5ndWFnZS1nbyJ9KSwiLy8gc2xpY2VzX3Rlc3QuZ29cbmZ1bmMgVGVzdFB1c2hUb0ludFNsaWNlKHQgKnRlc3RpbmcuVCkge1xuICAgIHMgOj0gW11pbnR7MSwgMiwgM31cbiAgICBpIDo9IDRcblxuICAgIGV4cCA6PSBbXWludHsxLCAyLCAzLCA0fVxuICAgIHJlcyA6PSBQdXNoKHMsIGkpXG4gICAgZm9yIGlkeCwgdmFsIDo9IHJhbmdlIHJlcyB7XG4gICAgICAgIGlmIGV4cFtpZHhdICE9IHZhbCB7XG4gICAgICAgICAgICB0LkZhdGFsZihcIkV4cGVjdGVkICUrdiwgZ290ICUrdlwiLCBleHAsIHJlcylcbiAgICAgICAgfVxuICAgIH1cbn1cblxuLy8gUHVzaCBhcHBlbmQgaW50IHRvIGVuZCBvZiBpbnQgc2xpY2VcbmZ1bmMgUHVzaChhIFtdaW50LCBiIGludCkgW11pbnQge1xuICAgIHJldHVybiBhcHBlbmQoYSwgYilcbn1cbiIpKSxtZHgoImgyIix7ImlkIjoicG9wIn0sIlBvcCIpLG1keCgicHJlIixudWxsLG1keCgiY29kZSIsT2JqZWN0LmFzc2lnbih7cGFyZW50TmFtZToicHJlIn0seyJjbGFzc05hbWUiOiJsYW5ndWFnZS1nbyJ9KSwiLy8gc2xpY2VzX3Rlc3QuZ29cbmZ1bmMgVGVzdFBvcEludEZyb21TbGljZVNsaWNlKHQgKnRlc3RpbmcuVCkge1xuICAgIHMgOj0gW11pbnR7MSwgMiwgMywgNH1cblxuICAgIGV4cEFyciA6PSBbXWludHsxLCAyLCAzfVxuICAgIGV4cCA6PSA0XG5cbiAgICByZXMsIHJlc0FyciA6PSBQb3AocylcbiAgICBmb3IgaWR4LCB2YWwgOj0gcmFuZ2UgcmVzQXJyIHtcbiAgICAgICAgaWYgZXhwQXJyW2lkeF0gIT0gdmFsIHtcbiAgICAgICAgICAgIHQuRmF0YWxmKFwiRXhwZWN0ZWQgJSt2LCBnb3QgJSt2XCIsIGV4cCwgcmVzKVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgaWYgZXhwICE9IHJlcyB7XG4gICAgICAgIHQuRmF0YWxmKFwiUG9wcGVkIGludGVnZXIgbm90IGFzIGV4cGVjdGVkXCIpXG4gICAgfVxufVxuXG4vLyBQb3AgcmV0dXJuIGFuIGludGVnZXIgZnJvbSBhbiBhcnJheSArIGFycmF5IHdpdGhvdXQgbGFzdCBpbmRleFxuZnVuYyBQb3AoYSBbXWludCkgKGludCwgW11pbnQpIHtcbiAgICB4LCBiIDo9IGFbbGVuKGEpLTFdLCBhWzpsZW4oYSktMV1cbiAgICByZXR1cm4geCwgYlxufVxuIikpLG1keCgiaDIiLHsiaWQiOiJ1bnNoaWZ0In0sIlVuc2hpZnQiKSxtZHgoInByZSIsbnVsbCxtZHgoImNvZGUiLE9iamVjdC5hc3NpZ24oe3BhcmVudE5hbWU6InByZSJ9LHsiY2xhc3NOYW1lIjoibGFuZ3VhZ2UtZ28ifSksIi8vIHNsaWNlc190ZXN0LmdvXG5cbi8vIFVuc2hpZnQgYXBwZW5kIGFzIGZpcnN0IGVsZW1lbnQgYW5kIHJldHVybiBuZXcgc2xpY2VcbmZ1bmMgVW5zaGlmdChhIFtdaW50LCBiIGludCkgW11pbnQge1xuICAgIHJldHVybiBhcHBlbmQoW11pbnR7Yn0sIGEuLi4pXG59XG4iKSksbWR4KCJoMiIseyJpZCI6InNoaWZ0In0sIlNoaWZ0IiksbWR4KCJwcmUiLG51bGwsbWR4KCJjb2RlIixPYmplY3QuYXNzaWduKHtwYXJlbnROYW1lOiJwcmUifSx7ImNsYXNzTmFtZSI6Imxhbmd1YWdlLWdvIn0pLCIvLyBzbGljZXNfdGVzdC5nb1xuXG4vLyBTaGlmdCByZW1vdmUgZnJvbSBmcm9udCBhbmQgcmV0dXJuIGludCBhbmQgbmV3IHNsaWNlXG5mdW5jIFNoaWZ0KGEgW11pbnQpIChpbnQsIFtdaW50KSB7XG4gICAgeCwgYiA6PSBhWzBdLCBhWzE6XVxuICAgIHJldHVybiB4LCBiXG59XG4iKSkpO31pZih0eXBlb2YgTURYQ29udGVudCE9PSd1bmRlZmluZWQnJiZNRFhDb250ZW50JiZNRFhDb250ZW50PT09T2JqZWN0KE1EWENvbnRlbnQpJiZPYmplY3QuaXNFeHRlbnNpYmxlKE1EWENvbnRlbnQpKXtPYmplY3QuZGVmaW5lUHJvcGVydHkoTURYQ29udGVudCwnX19maWxlbWV0YScse2VudW1lcmFibGU6dHJ1ZSxjb25maWd1cmFibGU6dHJ1ZSx2YWx1ZTp7bmFtZToiTURYQ29udGVudCIsZmlsZW5hbWU6Im1hbnVhbC9Hby9Hby1CYXNpYy1TbGljZXMubWQifX0pO31NRFhDb250ZW50LmlzTURYQ29tcG9uZW50PXRydWU7"},{"version":3,"sources":["/Users/okeeffe_d/Project-Imposter/developer-notes/manual/Go/Go-Basic-Slices.md"],"names":["React","mdx","makeShortcode","name","MDXDefaultShortcode","props","console","warn","layoutProps","MDXLayout","MDXContent","components","isMDXComponent"],"mappings":"4LAAA,cACE,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,GAAT,KAAoB,eAApB,CACA,cAGF,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAAAC,IAAI,QAAI,SAASC,CAAAA,mBAAT,CAA6BC,KAA7B,CAAoC,CAChEC,OAAO,CAACC,IAAR,CAAa,aAAeJ,IAAf,CAAsB,yEAAnC,EACA,MAAO,WAASE,KAAT,CAAP,CACD,CAHyB,EAA1B,CAKA,GAAMG,CAAAA,WAAW,CAAG,EAApB,CAGA,GAAMC,CAAAA,SAAS,CAAG,SAAlB,CACA,cAAe,SAASC,CAAAA,UAAT,MAGZ,IAFDC,CAAAA,UAEC,MAFDA,UAEC,CADEN,KACF,+CACD,MAAO,KAAC,SAAD,kBAAeG,WAAf,CAAgCH,KAAhC,EAAuC,UAAU,CAAEM,UAAnD,CAA+D,OAAO,CAAC,WAAvE,GACL,SAAQ,CACN,KAAM,uBADA,CAAR,yBADK,CAIL,0DAJK,CAKL,eAAK,0BAAM,UAAU,CAAC,KAAjB,EAA2B,CAC5B,YAAa,aADe,CAA3B,wGAAL,CALK,CAiBL,SAAQ,CACN,KAAM,MADA,CAAR,QAjBK,CAoBL,eAAK,0BAAM,UAAU,CAAC,KAAjB,EAA2B,CAC5B,YAAa,aADe,CAA3B,qZAAL,CApBK,CAyCL,SAAQ,CACN,KAAM,KADA,CAAR,OAzCK,CA4CL,eAAK,0BAAM,UAAU,CAAC,KAAjB,EAA2B,CAC5B,YAAa,aADe,CAA3B,yjBAAL,CA5CK,CAuEL,SAAQ,CACN,KAAM,SADA,CAAR,WAvEK,CA0EL,eAAK,0BAAM,UAAU,CAAC,KAAjB,EAA2B,CAC5B,YAAa,aADe,CAA3B,+JAAL,CA1EK,CAmFL,SAAQ,CACN,KAAM,OADA,CAAR,SAnFK,CAsFL,eAAK,0BAAM,UAAU,CAAC,KAAjB,EAA2B,CAC5B,YAAa,aADe,CAA3B,oKAAL,CAtFK,CAAP,CAiGD,C,wQAEDD,UAAU,CAACE,cAAX,CAA4B,IAA5B","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"basic-slice-functions\"\n    }}>{`Basic Slice Functions`}</h1>\n    <p>{`Set up the folder with test and main file:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-go\"\n      }}>{`// slices_test.go\npackage slices\n\nimport (\n    \"testing\"\n)\n\n// slices.go\npackage slices\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"push\"\n    }}>{`Push`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-go\"\n      }}>{`// slices_test.go\nfunc TestPushToIntSlice(t *testing.T) {\n    s := []int{1, 2, 3}\n    i := 4\n\n    exp := []int{1, 2, 3, 4}\n    res := Push(s, i)\n    for idx, val := range res {\n        if exp[idx] != val {\n            t.Fatalf(\"Expected %+v, got %+v\", exp, res)\n        }\n    }\n}\n\n// Push append int to end of int slice\nfunc Push(a []int, b int) []int {\n    return append(a, b)\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"pop\"\n    }}>{`Pop`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-go\"\n      }}>{`// slices_test.go\nfunc TestPopIntFromSliceSlice(t *testing.T) {\n    s := []int{1, 2, 3, 4}\n\n    expArr := []int{1, 2, 3}\n    exp := 4\n\n    res, resArr := Pop(s)\n    for idx, val := range resArr {\n        if expArr[idx] != val {\n            t.Fatalf(\"Expected %+v, got %+v\", exp, res)\n        }\n    }\n\n    if exp != res {\n        t.Fatalf(\"Popped integer not as expected\")\n    }\n}\n\n// Pop return an integer from an array + array without last index\nfunc Pop(a []int) (int, []int) {\n    x, b := a[len(a)-1], a[:len(a)-1]\n    return x, b\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"unshift\"\n    }}>{`Unshift`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-go\"\n      }}>{`// slices_test.go\n\n// Unshift append as first element and return new slice\nfunc Unshift(a []int, b int) []int {\n    return append([]int{b}, a...)\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"shift\"\n    }}>{`Shift`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-go\"\n      }}>{`// slices_test.go\n\n// Shift remove from front and return int and new slice\nfunc Shift(a []int) (int, []int) {\n    x, b := a[0], a[1:]\n    return x, b\n}\n`}</code></pre>\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  "]}]}