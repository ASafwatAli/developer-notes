{"remainingRequest":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/docz-core/node_modules/babel-loader/lib/index.js??ref--6-1!/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/@mdx-js/loader/index.js??ref--6-2!/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/source-map-loader/index.js!/Users/dennis.okeeffe/Project-Imposter/developer-notes/manual/COMP3520-OS/3-Threads.md","dependencies":[{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/manual/COMP3520-OS/3-Threads.md","mtime":1562563032017},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/cache-loader/dist/cjs.js","mtime":1581496618588},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/docz-core/node_modules/babel-loader/lib/index.js","mtime":1578565694890},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/@mdx-js/loader/index.js","mtime":1581496618277},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/source-map-loader/index.js","mtime":1580255490569}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/dennis.okeeffe/Project-Imposter/developer-notes/manual/COMP3520-OS/3-Threads.md"],"names":["React","mdx","makeShortcode","name","MDXDefaultShortcode","props","console","warn","layoutProps","MDXLayout","MDXContent","components","isMDXComponent"],"mappings":"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","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"week-3---threads\"\n    }}>{`Week 3 - Threads`}</h1>\n    <h2 {...{\n      \"id\": \"processes-and-threads\"\n    }}>{`Processes and Threads`}</h2>\n    <p>{`Processes have two characteristics:`}</p>\n    <ol>\n      <li parentName=\"ol\">{`Resource Ownership `}<ul parentName=\"li\">\n          <li parentName=\"ul\">{`process includes a virtual address space to hold the process image `}</li>\n          <li parentName=\"ul\">{`the OS performs a protection function to prevent unwanted interference between processes with respect to resources`}</li>\n        </ul></li>\n      <li parentName=\"ol\">{`Scheduling/Execution`}<ul parentName=\"li\">\n          <li parentName=\"ul\">{`follows an execution path that may be interleaved with other processes `}</li>\n          <li parentName=\"ul\">{`a process has an execution state (Running, Ready, etc.) and a dispatching priority and is scheduled and dispatched by the OS`}</li>\n        </ul></li>\n    </ol>\n    <p>{`These two characteristics are treated independently by modern operating systems:\n- the unit of dispatching is referred to as a `}<inlineCode parentName=\"p\">{`thread`}</inlineCode>{` or lightweight process\n- the unit of resource ownership is referred to as a `}<inlineCode parentName=\"p\">{`process`}</inlineCode>{` or `}<inlineCode parentName=\"p\">{`task`}</inlineCode></p>\n    <h2 {...{\n      \"id\": \"multithreading\"\n    }}>{`Multithreading`}</h2>\n    <p>{`The ability of an OS to support multiple, concurrect paths of execution within a single process`}</p>\n    <h2 {...{\n      \"id\": \"process\"\n    }}>{`Process`}</h2>\n    <p>{`The unit of resource allocation and a unit of protection.`}</p>\n    <p>{`A process is associated with: `}</p>\n    <ul>\n      <li parentName=\"ul\">{`A virtual address space which holds the process image `}</li>\n      <li parentName=\"ul\">{`Protected access to\n- Processors\n- Other processes\n- Files\n- I/O resources `}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"multiple-threads-in-process\"\n    }}>{`Multiple threads in Process`}</h2>\n    <p>{`Each thread has:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Access to the memory and resources of its process (all threads of a process share this)`}</li>\n      <li parentName=\"ul\">{`An execution state (running, ready, etc.)`}</li>\n      <li parentName=\"ul\">{`Saved thread context when not running `}</li>\n      <li parentName=\"ul\">{`An execution stack `}</li>\n      <li parentName=\"ul\">{`Some per-thread static storage for local variables`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"single-threaded-vs-multi-threaded\"\n    }}>{`Single-Threaded vs multi threaded`}</h2>\n    <ul>\n      <li parentName=\"ul\">{`Both have `}<inlineCode parentName=\"li\">{`Process Control Block`}</inlineCode></li>\n      <li parentName=\"ul\">{`Both have `}<inlineCode parentName=\"li\">{`User Address Space`}</inlineCode></li>\n      <li parentName=\"ul\">{`Single thread has a `}<inlineCode parentName=\"li\">{`User Stack`}</inlineCode>{` and `}<inlineCode parentName=\"li\">{`Kernel Stack`}</inlineCode></li>\n      <li parentName=\"ul\">{`Multithread process has a `}<inlineCode parentName=\"li\">{`User Stack`}</inlineCode>{`, `}<inlineCode parentName=\"li\">{`Kernel Stack`}</inlineCode>{`, `}<inlineCode parentName=\"li\">{`Thread Control Block`}</inlineCode>{` within each thread`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"threads\"\n    }}>{`Threads`}</h2>\n    <p>{`In OS that supports threads: scheduling and dispatching done on thread basis `}</p>\n    <ul>\n      <li parentName=\"ul\">{`Most of the state info dealing with execution is maintained in thread-level data structures `}</li>\n      <li parentName=\"ul\">{`Several actions that affect all of the threads in a process and that the OS must manage at the process level\n- Suspending process means all threads of a process\n- Terminates a process terminates all threads within the process `}</li>\n      <li parentName=\"ul\">{`Similar to processes, threads have execution states and may synchronize with one another.`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"thread-execution-states\"\n    }}>{`Thread Execution States`}</h2>\n    <p>{`Three basic states`}</p>\n    <ol>\n      <li parentName=\"ol\">{`Running `}</li>\n      <li parentName=\"ol\">{`Ready `}</li>\n      <li parentName=\"ol\">{`Blocked `}</li>\n    </ol>\n    <p>{`Operations associated with a change in thread state `}</p>\n    <ul>\n      <li parentName=\"ul\">{`Spawn (another thread)\n- allocate register context and stacks `}</li>\n      <li parentName=\"ul\">{`Block\n- move to an event queue waiting for the event\n- issue: will blocking a thread block other, or all, threads within the same process?`}</li>\n      <li parentName=\"ul\">{`Unblock\n- moved the the `}<inlineCode parentName=\"li\">{`Ready`}</inlineCode>{` queue for execution`}</li>\n      <li parentName=\"ul\">{`Finish (thread)\n- de-allocate register context and stacks `}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"thread-synchronization\"\n    }}>{`Thread Synchronization`}</h2>\n    <p>{`Necessity to sync activities of all threads and prevent interference between each other.`}</p>\n    <ul>\n      <li parentName=\"ul\">{`all threads of a process share the same address space and other resources `}</li>\n      <li parentName=\"ul\">{`any alteration of a resource by one thread affects the other threads in the same process `}</li>\n    </ul>\n    <p>{`In general, the techniques used for thread sync are the same as those for process sync.`}</p>\n    <h2 {...{\n      \"id\": \"types-of-threads\"\n    }}>{`Types of Threads`}</h2>\n    <ol>\n      <li parentName=\"ol\">{`User Level Thread (ULT)`}</li>\n      <li parentName=\"ol\">{`Kernel Level Thread (KLT) `}<ul parentName=\"li\">\n          <li parentName=\"ul\">{`also called kernel-supported threads or lightweight threads`}</li>\n        </ul></li>\n    </ol>\n    <h2 {...{\n      \"id\": \"user-level-threads\"\n    }}>{`User-Level Threads`}</h2>\n    <p>{`Thread management all done by application.`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Multithreading is managed by a runtime threads lib `}</li>\n    </ul>\n    <p>{`The kernel is not aware of the existence of threads `}</p>\n    <ul>\n      <li parentName=\"ul\">{`Only schedule the process as a unit and assigns a single execution state to that process `}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"disadvantages-of-ult\"\n    }}>{`Disadvantages of ULT`}</h2>\n    <p>{`In a typical OS many system calls are blocking `}</p>\n    <ul>\n      <li parentName=\"ul\">{`as a result, when a ULT executes a system call, not only is the thread blocked, but all within the process are blocked `}</li>\n    </ul>\n    <p>{`In a pure ULT strategy, multithreaded applications cannot take advantage of multiprocessing.`}</p>\n    <h2 {...{\n      \"id\": \"kernel-level-threads\"\n    }}>{`Kernel-Level Threads`}</h2>\n    <p>{`Kernel maintains context information for the process and the threads. `}</p>\n    <ul>\n      <li parentName=\"ul\">{`No thread management done by application `}</li>\n    </ul>\n    <p>{`Scheduling is done on a thread basis.`}</p>\n    <p>{`Windows is an example of this approach.`}</p>\n    <h2 {...{\n      \"id\": \"advantages-of-klt\"\n    }}>{`Advantages of KLT`}</h2>\n    <p>{`The kernel can simultaneously schedule multiple threads from the same process on multiple processors.`}</p>\n    <p>{`If one thread is blocked, the kernel schedules another thread of the same process.`}</p>\n    <p>{`Kernel routines themselves can be multithreaded.`}</p>\n    <h2 {...{\n      \"id\": \"multicore--multithreading\"\n    }}>{`Multicore & Multithreading`}</h2>\n    <p>{`Achieves concurrency without the overhead of using multiple processes.`}</p>\n    <p>{`Threads within the same process can exchange information through their common address space and have access to the shared resources of the process.`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Threads of any process can run on any processor`}</li>\n      <li parentName=\"ul\">{`Soft affinity:\n- dispatcher tries to assign a ready thread to the same processor it last ran on\n- helps reuse data still in that processor's memory caches from the previous execution of the thread `}</li>\n      <li parentName=\"ul\">{`Hard affinity:\n- an application restricts thread execution to certain processors`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"multicore-challenges\"\n    }}>{`Multicore Challenges`}</h2>\n    <ul>\n      <li parentName=\"ul\">{`Dividing activities `}</li>\n      <li parentName=\"ul\">{`Balance `}</li>\n      <li parentName=\"ul\">{`Data splitting `}</li>\n      <li parentName=\"ul\">{`Data dependency `}</li>\n      <li parentName=\"ul\">{`Testing and debugging `}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"linux-threads\"\n    }}>{`Linux Threads`}</h2>\n    <p>{`Linux uses the same internal representation for processes and threads; a thread is simply a new process (or task) that happens to share the same address space as its parent.`}</p>\n    <p>{`A distinction is only made when a new thread is created by the `}<inlineCode parentName=\"p\">{`clone`}</inlineCode>{` system call\n- `}<inlineCode parentName=\"p\">{`fork`}</inlineCode>{` creates a new process with its own entirely new process context\n- `}<inlineCode parentName=\"p\">{`clone`}</inlineCode>{` creates a new process with its own identity, but that is allowed to share the data structures of its parent`}</p>\n    <p>{`Using `}<inlineCode parentName=\"p\">{`clone`}</inlineCode>{` gives the application fine-grained control over exactly what is shared between two threads.`}</p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`flag`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`meaning`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`CLONE_FS`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`File-system info is shared`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`CLONE_VM`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`The same mem space is shared`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`CLONE_SIGHAND`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Signal handlers are shared`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`CLONE_FILES`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`The set of open files are shared`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <h2 {...{\n      \"id\": \"windows-threads\"\n    }}>{`Windows Threads`}</h2>\n    <p>{`Processes and servies provided by the Windows Kernel are relatively simple and general purpose.`}</p>\n    <ul>\n      <li parentName=\"ul\">{`implemented as objects `}</li>\n      <li parentName=\"ul\">{`created as new process or a copy of an existing process `}</li>\n      <li parentName=\"ul\">{`exec proc may contain one or more threads `}</li>\n      <li parentName=\"ul\">{`both procs and thread objects have built-in sync capabilities`}</li>\n    </ul>\n    <p>{`Windows makes use of two types of process-related objects:`}</p>\n    <p><strong parentName=\"p\">{`Processes`}</strong>{`\n– an entity corresponding to a user job or application that owns resources`}</p>\n    <p><strong parentName=\"p\">{`Threads`}</strong>{`\n– a dispatchable unit of work that executes sequentially and is interruptible`}</p>\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  "]}]}