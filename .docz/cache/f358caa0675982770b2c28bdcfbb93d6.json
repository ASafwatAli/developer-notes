{"remainingRequest":"/Users/okeeffe_d/Business/Documentation/node_modules/babel-loader/lib/index.js?{\"presets\":[[\"/Users/okeeffe_d/Business/Documentation/node_modules/babel-preset-docz/dist/index.js\",{\"flow\":true,\"typescript\":false,\"parseProps\":true}]],\"plugins\":[[\"/Users/okeeffe_d/Business/Documentation/node_modules/docz-utils/lib/named-asset-import.js\",{\"loaderMap\":{\"svg\":{\"ReactComponent\":\"@svgr/webpack?-prettier,-svgo![path]\"}}}]],\"babelrc\":false,\"cacheCompression\":true,\"compact\":true}!/Users/okeeffe_d/Business/Documentation/manual/React/guidelines.md","dependencies":[{"path":"/Users/okeeffe_d/Business/Documentation/manual/React/guidelines.md","mtime":1548209344425},{"path":"/Users/okeeffe_d/Business/Documentation/node_modules/cache-loader/dist/cjs.js","mtime":1548134640245},{"path":"/Users/okeeffe_d/Business/Documentation/node_modules/babel-loader/lib/index.js","mtime":1548134640227}],"contextDependencies":[],"result":["function _typeof(obj){if(typeof Symbol===\"function\"&&typeof Symbol.iterator===\"symbol\"){_typeof=function _typeof(obj){return typeof obj;};}else{_typeof=function _typeof(obj){return obj&&typeof Symbol===\"function\"&&obj.constructor===Symbol&&obj!==Symbol.prototype?\"symbol\":typeof obj;};}return _typeof(obj);}function _objectWithoutProperties(source,excluded){if(source==null)return{};var target=_objectWithoutPropertiesLoose(source,excluded);var key,i;if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++){key=sourceSymbolKeys[i];if(excluded.indexOf(key)>=0)continue;if(!Object.prototype.propertyIsEnumerable.call(source,key))continue;target[key]=source[key];}}return target;}function _objectWithoutPropertiesLoose(source,excluded){if(source==null)return{};var target={};var sourceKeys=Object.keys(source);var key,i;for(i=0;i<sourceKeys.length;i++){key=sourceKeys[i];if(excluded.indexOf(key)>=0)continue;target[key]=source[key];}return target;}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\");}}function _defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}function _createClass(Constructor,protoProps,staticProps){if(protoProps)_defineProperties(Constructor.prototype,protoProps);if(staticProps)_defineProperties(Constructor,staticProps);return Constructor;}function _possibleConstructorReturn(self,call){if(call&&(_typeof(call)===\"object\"||typeof call===\"function\")){return call;}return _assertThisInitialized(self);}function _assertThisInitialized(self){if(self===void 0){throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");}return self;}function _getPrototypeOf(o){_getPrototypeOf=Object.setPrototypeOf?Object.getPrototypeOf:function _getPrototypeOf(o){return o.__proto__||Object.getPrototypeOf(o);};return _getPrototypeOf(o);}function _inherits(subClass,superClass){if(typeof superClass!==\"function\"&&superClass!==null){throw new TypeError(\"Super expression must either be null or a function\");}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,writable:true,configurable:true}});if(superClass)_setPrototypeOf(subClass,superClass);}function _setPrototypeOf(o,p){_setPrototypeOf=Object.setPrototypeOf||function _setPrototypeOf(o,p){o.__proto__=p;return o;};return _setPrototypeOf(o,p);}import React from'react';import{MDXTag}from'@mdx-js/tag';var MDXContent=/*#__PURE__*/function(_React$Component){_inherits(MDXContent,_React$Component);function MDXContent(props){var _this;_classCallCheck(this,MDXContent);_this=_possibleConstructorReturn(this,_getPrototypeOf(MDXContent).call(this,props));_this.layout=null;return _this;}_createClass(MDXContent,[{key:\"render\",value:function render(){var _this$props=this.props,components=_this$props.components,props=_objectWithoutProperties(_this$props,[\"components\"]);return React.createElement(MDXTag,{name:\"wrapper\",components:components},React.createElement(MDXTag,{name:\"hr\",components:components}),React.createElement(MDXTag,{name:\"p\",components:components},\"Author: Dennis O'Keeffe\"),React.createElement(MDXTag,{name:\"h2\",components:components,props:{\"id\":\"section-react\"}},\"Section: React\"),React.createElement(MDXTag,{name:\"h1\",components:components,props:{\"id\":\"guidelines-for-using-react\"}},\"Guidelines for using React\"),React.createElement(MDXTag,{name:\"p\",components:components},\"These are by no means rules but \",React.createElement(MDXTag,{name:\"strong\",components:components,parentName:\"p\"},\"guidelines\"),\" for how to decide on whether the component should connect directly Redux and making decisions on whether or not the component is required in multiple forms, readied for different platforms etc.\"),React.createElement(MDXTag,{name:\"h2\",components:components,props:{\"id\":\"sections\"}},\"Sections\"),React.createElement(MDXTag,{name:\"ol\",components:components},React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ol\"},\"When to use Redux and connect a function?\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ol\"},\"When to decide to use a multicomponent?\")),React.createElement(MDXTag,{name:\"h2\",components:components,props:{\"id\":\"1-when-to-use-redux-and-connect-a-function\"}},\"1. When to use Redux and connect a function?\"),React.createElement(MDXTag,{name:\"p\",components:components},\"There are two types of components: stateful (\\\"smart\\\") components and stateless (\\\"dumb\\\") components.\"),React.createElement(MDXTag,{name:\"p\",components:components},\"The \\\"dumb\\\" stateless components have one job: \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"Take data as input and display\"),\". In order to make components malleable and reusable, we aim to decouple them from state and ensure that they can then be reuseable and display differing information based on what is handed down to them.\"),React.createElement(MDXTag,{name:\"p\",components:components},\"Take the following example:\"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{\"className\":\"language-javascript\"}},\"// Stateless, \\\"dumb\\\" component\\nconst ComponentNumberDisplay = props => (\\n    <div className=\\\"component-number-display\\\">\\n        <p className=\\\"copy\\\">{props.number}</p>\\n    </div>\\n);\\n\\n// Stateful, \\\"smart\\\" components\\nconst PageOne = () => (\\n    <section className=\\\"page-one\\\">\\n        <div className=\\\"container-content\\\">\\n            <ComponentNumberDisplay number={4} />\\n        </div>\\n    </section>\\n);\\n\\nconst PageTwo = () => (\\n    <section className=\\\"page-two\\\">\\n        <div className=\\\"container-content\\\">\\n            <ComponentNumberDisplay number={7} />\\n            <ComponentNumberDisplay number={10} />\\n        </div>\\n    </section>\\n);\\n\\nconst PageThree = () => {\\n    const numbers = [1,2,3];\\n    const mapComponentNumberDisplays = (numbers) => {\\n        return numbers.map((number, index) => (<ComponentNumberDisplay key={index} number={number} />)\\n    }\\n\\n    return (\\n        <section className=\\\"page-two\\\">\\n            <div className=\\\"container-content\\\">\\n                {mapComponentNumberDisplays(numbers)}\\n            </div>\\n        </section>\\n    );\\n}\\n\")),React.createElement(MDXTag,{name:\"p\",components:components},\"In this example, \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"PageOne\"),\", \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"PageTwo\"),\", \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"PageThree\"),\" are all \\\"smart\\\", stateful components, although this means that they themselves are not very reusable given how rigid they are for what the display.\"),React.createElement(MDXTag,{name:\"p\",components:components},\"On the other hand, \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"ComponentNumberDisplay\"),\" will just display whatever is passed down from the parent itself. The aim of the game is to pass down props from the \",React.createElement(MDXTag,{name:\"strong\",components:components,parentName:\"p\"},\"single\"),\" parent that we connect up. In the case of the web and apps, we should make the stateful component the \",React.createElement(MDXTag,{name:\"strong\",components:components,parentName:\"p\"},\"page\"),\" where possible and pass down the rest of the props.\"),React.createElement(MDXTag,{name:\"p\",components:components},\"To illustrate this, we will now introduce a Redux connected component and how data will be passed down the chain.\"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{\"className\":\"language-javascript\"}},\"// Stateless, \\\"dumb\\\" component\\nconst ComponentNumberDisplay = (props) => (\\n    <div className=\\\"component-number-display\\\">\\n        <p className=\\\"copy\\\">{props.number}</p>\\n    </div>\\n);\\n\\n// Stateless, \\\"dumb\\\" component\\nconst ComponentTextDisplay = (props) => (\\n    <div className=\\\"component-number-display\\\">\\n        <p className=\\\"copy\\\">{props.copy}</p>\\n    </div>\\n);\\n\\n// Stateless, \\\"dumb\\\" component\\nconst ComponentDataDisplay = (props) => (\\n    <React.Fragment>\\n        <ComponentNumberDisplay {...props} />\\n        <ComponentTextDisplay {...props} />\\n    </React.Fragment>\\n);\\n\\n// In another file, PageOne\\nimport React, { Component } from 'react';\\nimport { connect } from 'react-redux';\\n\\n/* user imports */\\nimport ComponentDataDisplay from 'app/components/ComponentDataDisplay';\\n\\nclass PageOne extends Component {\\n    /**\\n     * Render <%= name %> component\\n     * @memberof <%= name %>\\n     * @var {function} render Render <%= name %> component\\n     * @returns {<%= name %>} component\\n     */\\n    render() {\\n        const { number, copy } = this.props;\\n        return (\\n            <div className=\\\"page-one\\\">\\n                <ComponentDataDisplay {...props} />\\n                {/* Alternative to be specific */}\\n                <ComponentDataDisplay number={number} copy={copy} />\\n            </div>\\n        );\\n    }\\n}\\n\\n// Map reducer state to a props object\\nconst mapStateToProps = (state) => ({\\n    number: state.SomeReducer.number,\\n    copy: state.AnotherReducer.copy\\n});\\n\\n// Connect those props to the component\\nexport default connect(mapStateToProps, {})(PageOne);\\n\")),React.createElement(MDXTag,{name:\"p\",components:components},\"In this example, \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"PageOne\"),\" is connected to Redux and gets \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"number\"),\" and \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"copy\"),\" added to \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"props\"),\". From here, we can either destructure those variables or just pass down all the props to \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"ComponentDataDisplay\"),\". Within the \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"ComponentDataDisplay\"),\", we've just again passed down all the props from \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"PageOne\"),\" and in the case of \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"ComponentNumberDisplay\"),\" this means there is a \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"props.number\"),\" variable and for \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"ComponentTextDisplay\"),\" a \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"props.copy\"),\" variable.\"),React.createElement(MDXTag,{name:\"p\",components:components},\"Use your best decision making when deciding whether to pass down specific props or just all props.\"));}}]);return MDXContent;}(React.Component);export{MDXContent as default};MDXContent.__docgenInfo={\"description\":\"\",\"methods\":[],\"displayName\":\"MDXContent\"};",{"version":3,"sources":["/Users/okeeffe_d/Business/Documentation/manual/React/guidelines.md"],"names":["React","MDXTag","MDXContent","props","layout","components","Component"],"mappings":"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","sourcesContent":["\n  import React from 'react'\n  import { MDXTag } from '@mdx-js/tag'\n  \n\nexport default class MDXContent extends React.Component {\n  constructor(props) {\n    super(props)\n    this.layout = null\n  }\n  render() {\n    const { components, ...props } = this.props\n\n    return <MDXTag\n             name=\"wrapper\"\n             \n             components={components}><MDXTag name=\"hr\" components={components}></MDXTag>\n<MDXTag name=\"p\" components={components}>{`Author: Dennis O'Keeffe`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"section-react\"}}>{`Section: React`}</MDXTag>\n<MDXTag name=\"h1\" components={components} props={{\"id\":\"guidelines-for-using-react\"}}>{`Guidelines for using React`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`These are by no means rules but `}<MDXTag name=\"strong\" components={components} parentName=\"p\">{`guidelines`}</MDXTag>{` for how to decide on whether the component should connect directly Redux and making decisions on whether or not the component is required in multiple forms, readied for different platforms etc.`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"sections\"}}>{`Sections`}</MDXTag>\n<MDXTag name=\"ol\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ol\">{`When to use Redux and connect a function?`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ol\">{`When to decide to use a multicomponent?`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"1-when-to-use-redux-and-connect-a-function\"}}>{`1. When to use Redux and connect a function?`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`There are two types of components: stateful (\"smart\") components and stateless (\"dumb\") components.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`The \"dumb\" stateless components have one job: `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`Take data as input and display`}</MDXTag>{`. In order to make components malleable and reusable, we aim to decouple them from state and ensure that they can then be reuseable and display differing information based on what is handed down to them.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Take the following example:`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-javascript\"}}>{`// Stateless, \"dumb\" component\nconst ComponentNumberDisplay = props => (\n    <div className=\"component-number-display\">\n        <p className=\"copy\">{props.number}</p>\n    </div>\n);\n\n// Stateful, \"smart\" components\nconst PageOne = () => (\n    <section className=\"page-one\">\n        <div className=\"container-content\">\n            <ComponentNumberDisplay number={4} />\n        </div>\n    </section>\n);\n\nconst PageTwo = () => (\n    <section className=\"page-two\">\n        <div className=\"container-content\">\n            <ComponentNumberDisplay number={7} />\n            <ComponentNumberDisplay number={10} />\n        </div>\n    </section>\n);\n\nconst PageThree = () => {\n    const numbers = [1,2,3];\n    const mapComponentNumberDisplays = (numbers) => {\n        return numbers.map((number, index) => (<ComponentNumberDisplay key={index} number={number} />)\n    }\n\n    return (\n        <section className=\"page-two\">\n            <div className=\"container-content\">\n                {mapComponentNumberDisplays(numbers)}\n            </div>\n        </section>\n    );\n}\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`In this example, `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`PageOne`}</MDXTag>{`, `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`PageTwo`}</MDXTag>{`, `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`PageThree`}</MDXTag>{` are all \"smart\", stateful components, although this means that they themselves are not very reusable given how rigid they are for what the display.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`On the other hand, `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`ComponentNumberDisplay`}</MDXTag>{` will just display whatever is passed down from the parent itself. The aim of the game is to pass down props from the `}<MDXTag name=\"strong\" components={components} parentName=\"p\">{`single`}</MDXTag>{` parent that we connect up. In the case of the web and apps, we should make the stateful component the `}<MDXTag name=\"strong\" components={components} parentName=\"p\">{`page`}</MDXTag>{` where possible and pass down the rest of the props.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`To illustrate this, we will now introduce a Redux connected component and how data will be passed down the chain.`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-javascript\"}}>{`// Stateless, \"dumb\" component\nconst ComponentNumberDisplay = (props) => (\n    <div className=\"component-number-display\">\n        <p className=\"copy\">{props.number}</p>\n    </div>\n);\n\n// Stateless, \"dumb\" component\nconst ComponentTextDisplay = (props) => (\n    <div className=\"component-number-display\">\n        <p className=\"copy\">{props.copy}</p>\n    </div>\n);\n\n// Stateless, \"dumb\" component\nconst ComponentDataDisplay = (props) => (\n    <React.Fragment>\n        <ComponentNumberDisplay {...props} />\n        <ComponentTextDisplay {...props} />\n    </React.Fragment>\n);\n\n// In another file, PageOne\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\n/* user imports */\nimport ComponentDataDisplay from 'app/components/ComponentDataDisplay';\n\nclass PageOne extends Component {\n    /**\n     * Render <%= name %> component\n     * @memberof <%= name %>\n     * @var {function} render Render <%= name %> component\n     * @returns {<%= name %>} component\n     */\n    render() {\n        const { number, copy } = this.props;\n        return (\n            <div className=\"page-one\">\n                <ComponentDataDisplay {...props} />\n                {/* Alternative to be specific */}\n                <ComponentDataDisplay number={number} copy={copy} />\n            </div>\n        );\n    }\n}\n\n// Map reducer state to a props object\nconst mapStateToProps = (state) => ({\n    number: state.SomeReducer.number,\n    copy: state.AnotherReducer.copy\n});\n\n// Connect those props to the component\nexport default connect(mapStateToProps, {})(PageOne);\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`In this example, `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`PageOne`}</MDXTag>{` is connected to Redux and gets `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`number`}</MDXTag>{` and `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`copy`}</MDXTag>{` added to `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`props`}</MDXTag>{`. From here, we can either destructure those variables or just pass down all the props to `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`ComponentDataDisplay`}</MDXTag>{`. Within the `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`ComponentDataDisplay`}</MDXTag>{`, we've just again passed down all the props from `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`PageOne`}</MDXTag>{` and in the case of `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`ComponentNumberDisplay`}</MDXTag>{` this means there is a `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`props.number`}</MDXTag>{` variable and for `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`ComponentTextDisplay`}</MDXTag>{` a `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`props.copy`}</MDXTag>{` variable.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Use your best decision making when deciding whether to pass down specific props or just all props.`}</MDXTag>\n           </MDXTag>\n  }\n}\n  "]}]}