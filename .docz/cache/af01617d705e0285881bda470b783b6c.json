{"remainingRequest":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/docz-core/node_modules/babel-loader/lib/index.js??ref--6-1!/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/@mdx-js/loader/index.js??ref--6-2!/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/source-map-loader/index.js!/Users/dennis.okeeffe/Project-Imposter/developer-notes/manual/Amplify/Graphql-Setup.md","dependencies":[{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/manual/Amplify/Graphql-Setup.md","mtime":1562563032012},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/cache-loader/dist/cjs.js","mtime":1564095360956},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/docz-core/node_modules/babel-loader/lib/index.js","mtime":1562568123838},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/@mdx-js/loader/index.js","mtime":1565139338792},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/source-map-loader/index.js","mtime":1564095361765}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9vYmplY3RXaXRob3V0UHJvcGVydGllcyBmcm9tIi9Vc2Vycy9kZW5uaXMub2tlZWZmZS9Qcm9qZWN0LUltcG9zdGVyL2RldmVsb3Blci1ub3Rlcy9ub2RlX21vZHVsZXMvYmFiZWwtcHJlc2V0LXJlYWN0LWFwcC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0V2l0aG91dFByb3BlcnRpZXMiOy8qIEBqc3ggbWR4ICovaW1wb3J0IFJlYWN0IGZyb20ncmVhY3QnO2ltcG9ydHttZHh9ZnJvbSdAbWR4LWpzL3JlYWN0JzsvKiBAanN4IG1keCAqL3ZhciBtYWtlU2hvcnRjb2RlPWZ1bmN0aW9uIG1ha2VTaG9ydGNvZGUobmFtZSl7cmV0dXJuIGZ1bmN0aW9uIE1EWERlZmF1bHRTaG9ydGNvZGUocHJvcHMpe2NvbnNvbGUud2FybigiQ29tcG9uZW50ICIrbmFtZSsiIHdhcyBub3QgaW1wb3J0ZWQsIGV4cG9ydGVkLCBvciBwcm92aWRlZCBieSBNRFhQcm92aWRlciBhcyBnbG9iYWwgc2NvcGUiKTtyZXR1cm4gbWR4KCJkaXYiLHByb3BzKTt9O307dmFyIGxheW91dFByb3BzPXt9O3ZhciBNRFhMYXlvdXQ9IndyYXBwZXIiO2V4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIE1EWENvbnRlbnQoX3JlZil7dmFyIGNvbXBvbmVudHM9X3JlZi5jb21wb25lbnRzLHByb3BzPV9vYmplY3RXaXRob3V0UHJvcGVydGllcyhfcmVmLFsiY29tcG9uZW50cyJdKTtyZXR1cm4gbWR4KE1EWExheW91dCxPYmplY3QuYXNzaWduKHt9LGxheW91dFByb3BzLHByb3BzLHtjb21wb25lbnRzOmNvbXBvbmVudHMsbWR4VHlwZToiTURYTGF5b3V0In0pLG1keCgiaDEiLHsiaWQiOiJncmFwaHFsLXNldHVwIn0sIkdyYXBoUUwgU2V0dXAiKSxtZHgoImgyIix7ImlkIjoibGlua3MifSwiTGlua3MiKSxtZHgoInAiLG51bGwsbWR4KCJhIixPYmplY3QuYXNzaWduKHtwYXJlbnROYW1lOiJwIn0seyJocmVmIjoiaHR0cHM6Ly9ibG9nLmV4cG8uaW8vaG93LXRvLWJ1aWxkLWNsb3VkLXBvd2VyZWQtbW9iaWxlLWFwcHMtd2l0aC1leHBvLWF3cy1hbXBsaWZ5LTJmZGRjODk4ZjlhMiJ9KSwiaHR0cHM6Ly9ibG9nLmV4cG8uaW8vaG93LXRvLWJ1aWxkLWNsb3VkLXBvd2VyZWQtbW9iaWxlLWFwcHMtd2l0aC1leHBvLWF3cy1hbXBsaWZ5LTJmZGRjODk4ZjlhMiIpLCJcbiIsbWR4KCJhIixPYmplY3QuYXNzaWduKHtwYXJlbnROYW1lOiJwIn0seyJocmVmIjoiaHR0cHM6Ly9oYWNrZXJub29uLmNvbS9pbnRyb2R1Y2luZy10aGUtYXdzLWFtcGxpZnktZ3JhcGhxbC1jbGllbnQtOGExYTFlNTE0ZmRlIn0pLCJodHRwczovL2hhY2tlcm5vb24uY29tL2ludHJvZHVjaW5nLXRoZS1hd3MtYW1wbGlmeS1ncmFwaHFsLWNsaWVudC04YTFhMWU1MTRmZGUiKSksbWR4KCJoMiIseyJpZCI6InRvLWdldC1pdC1ydW5uaW5nIn0sIlRvIGdldCBpdCBydW5uaW5nIiksbWR4KCJwcmUiLG51bGwsbWR4KCJjb2RlIixPYmplY3QuYXNzaWduKHtwYXJlbnROYW1lOiJwcmUifSx7ImNsYXNzTmFtZSI6Imxhbmd1YWdlLWJhc2gifSksImFtcGxpZnkgaW5pdFxuYW1wbGlmeSBhZGQgYXBpXG4jID4gR3JhcGhRTFxuIyA+IG5hbWVcbiMgPiBBUEkgS2V5XG4jID4gTm9cbiMgPiBZZXNcbiMgU2VsZWN0IHNpbmdsZSBvciBvbmUtdG8tbWFueVxuIyB5XG4iKSksbWR4KCJwIixudWxsLCJOb3QgdGhhdCB5b3UgY2FuIHByZXNldCBhIHNjaGVtYSB0byBoYXZlIHVzZWQgZm9yIEFtcGxpZnkuIiksbWR4KCJwIixudWxsLCJFeGFtcGxlLCBjcmVhdGUgYSAiLG1keCgiaW5saW5lQ29kZSIse3BhcmVudE5hbWU6InAifSwic2NoZW1hLmdyYXBocWwiKSwiIGZpbGUgd2l0aCBmb2xsb3dpbmcgYW5kIHBhc3MgdGhlIHBhdGggZHVyaW5nIHNldHVwOiIpLG1keCgicHJlIixudWxsLG1keCgiY29kZSIsT2JqZWN0LmFzc2lnbih7cGFyZW50TmFtZToicHJlIn0seyJjbGFzc05hbWUiOiJsYW5ndWFnZS1qYXZhc2NyaXB0In0pLCJ0eXBlIFBldCBAbW9kZWwge1xuICBpZDogSUQhXG4gIG5hbWU6IFN0cmluZyFcbiAgZGVzY3JpcHRpb246IFN0cmluZ1xuICBoZWxsbzogU3RyaW5nXG59XG4iKSksbWR4KCJoMyIseyJpZCI6ImV4YW1wbGUtc2NoZW1hIn0sIkV4YW1wbGUgc2NoZW1hIiksbWR4KCJwcmUiLG51bGwsbWR4KCJjb2RlIixPYmplY3QuYXNzaWduKHtwYXJlbnROYW1lOiJwcmUifSx7ImNsYXNzTmFtZSI6Imxhbmd1YWdlLWphdmFzY3JpcHQifSksInR5cGUgUGV0IEBtb2RlbCB7XG4gIGlkOiBJRCFcbiAgbmFtZTogU3RyaW5nIVxuICBkZXNjcmlwdGlvbjogU3RyaW5nXG59XG4iKSksbWR4KCJoMyIseyJpZCI6ImV4YW1wbGUtbXV0YXRpb24ifSwiRXhhbXBsZSBtdXRhdGlvbiIpLG1keCgicHJlIixudWxsLG1keCgiY29kZSIsT2JqZWN0LmFzc2lnbih7cGFyZW50TmFtZToicHJlIn0seyJjbGFzc05hbWUiOiJsYW5ndWFnZS1qYXZhc2NyaXB0In0pLCJpbXBvcnQgQVBJLCB7IGdyYXBocWxPcGVyYXRpb24gfSBmcm9tICdAYXdzLWFtcGxpZnkvYXBpJztcblxuLy8gZGVmaW5lIG11dGF0aW9uXG5jb25zdCBjcmVhdGVQZXQgPSBgXG4gIG11dGF0aW9uKCRuYW1lOiBTdHJpbmchLCAkZGVzY3JpcHRpb246IFN0cmluZykge1xuICAgIGNyZWF0ZVBldChpbnB1dDoge1xuICAgICAgbmFtZTogJG5hbWVcbiAgICAgIGRlc2NyaXB0aW9uOiAkZGVzY3JpcHRpb25cbiAgfSkge1xuICAgIGlkXG4gICAgbmFtZVxuICAgIGRlc2NyaXB0aW9uXG4gIH1cbn1gO1xuLy8gZXhlY3V0ZSBhIG11dGF0aW9uXG5zdGF0ZSA9IHsgbmFtZTogJycgfTtcbm9uQ2hhbmdlVGV4dCA9ICh2YWx1ZSkgPT4ge1xuICB0aGlzLnNldFN0YXRlKHsgbmFtZTogdmFsdWUgfSk7XG59O1xuY3JlYXRlUGV0ID0gYXN5bmMgKCkgPT4ge1xuICBjb25zdCBwZXQgPSB0aGlzLnN0YXRlO1xuICBhd2FpdCBBUEkuZ3JhcGhxbChncmFwaHFsT3BlcmF0aW9uKGNyZWF0ZVBldCwgcGV0KSk7XG59O1xuIikpLG1keCgiaDMiLHsiaWQiOiJleGFtcGxlLXF1ZXJ5In0sIkV4YW1wbGUgcXVlcnkiKSxtZHgoInByZSIsbnVsbCxtZHgoImNvZGUiLE9iamVjdC5hc3NpZ24oe3BhcmVudE5hbWU6InByZSJ9LHsiY2xhc3NOYW1lIjoibGFuZ3VhZ2UtamF2YXNjcmlwdCJ9KSwiLy8gZGVmaW5lIHF1ZXJ5XG5jb25zdCBsaXN0UGV0cyA9IGBcbiAgcXVlcnkge1xuICAgIGxpc3RQZXRzIHtcbiAgICAgIGl0ZW1zIHtcbiAgICAgICAgaWRcbiAgICAgICAgbmFtZVxuICAgICAgICBkZXNjcmlwdGlvblxuICAgICAgfVxuICAgIH1cbiB9XG5gXG4vLyBleGVjdXRlIHF1ZXJ5XG5nZXRQZXRzID0gKCkgPT4ge1xuICBjb25zdCBkYXRhID0gYXdhaXQgQVBJLmdyYXBocWwoZ3JhcGhxbE9wZXJhdGlvbihsaXN0UGV0cykpXG4gIC8vIGRvIHNvbWV0aGluZyB3aXRoIGRhdGFcbn1cbiIpKSxtZHgoImgyIix7ImlkIjoiYXV0b2dlbmVyYXRpbmctY29kZS1mb3ItdGhlLXNjaGVtYSJ9LCJBdXRvZ2VuZXJhdGluZyBjb2RlIGZvciB0aGUgc2NoZW1hIiksbWR4KCJwcmUiLG51bGwsbWR4KCJjb2RlIixPYmplY3QuYXNzaWduKHtwYXJlbnROYW1lOiJwcmUifSx7ImNsYXNzTmFtZSI6Imxhbmd1YWdlLWJhc2gifSksImFtcGxpZnkgY29kZWdlbiBhZGRcbiIpKSxtZHgoImgyIix7ImlkIjoiMS1tYW55LW1hbnktdG8tbWFueS1yZWxhdGlvbnNoaXAtc2NoZW1hcyJ9LCIxLW1hbnksIG1hbnktdG8tbWFueSByZWxhdGlvbnNoaXAgc2NoZW1hcyIpLG1keCgicHJlIixudWxsLG1keCgiY29kZSIsT2JqZWN0LmFzc2lnbih7cGFyZW50TmFtZToicHJlIn0seyJjbGFzc05hbWUiOiJsYW5ndWFnZS1qYXZhc2NyaXB0In0pLCJ0eXBlIFBvc3QgQG1vZGVsIHtcbiAgaWQ6IElEIVxuICB0aXRsZTogU3RyaW5nIVxuICBlZGl0b3JzOiBbUG9zdEVkaXRvcl0gQGNvbm5lY3Rpb24obmFtZTogXCJQb3N0RWRpdG9yc1wiKVxufVxuIyBDcmVhdGUgYSBqb2luIG1vZGVsIGFuZCBkaXNhYmxlIHF1ZXJpZXMgYXMgeW91IGRvbid0IG5lZWQgdGhlbVxuIyBhbmQgY2FuIHF1ZXJ5IHRocm91Z2ggUG9zdC5lZGl0b3JzIGFuZCBVc2VyLnBvc3RzXG50eXBlIFBvc3RFZGl0b3IgQG1vZGVsKHF1ZXJpZXM6IG51bGwpIHtcbiAgaWQ6IElEIVxuICBwb3N0OiBQb3N0ISBAY29ubmVjdGlvbihuYW1lOiBcIlBvc3RFZGl0b3JzXCIpXG4gIGVkaXRvcjogVXNlciEgQGNvbm5lY3Rpb24obmFtZTogXCJVc2VyRWRpdG9yc1wiKVxufVxudHlwZSBVc2VyIEBtb2RlbCB7XG4gIGlkOiBJRCFcbiAgdXNlcm5hbWU6IFN0cmluZyFcbiAgcG9zdHM6IFtQb3N0RWRpdG9yXSBAY29ubmVjdGlvbihuYW1lOiBcIlVzZXJFZGl0b3JzXCIpXG59XG4iKSkpO31pZih0eXBlb2YgTURYQ29udGVudCE9PSd1bmRlZmluZWQnJiZNRFhDb250ZW50JiZNRFhDb250ZW50PT09T2JqZWN0KE1EWENvbnRlbnQpJiZPYmplY3QuaXNFeHRlbnNpYmxlKE1EWENvbnRlbnQpKXtPYmplY3QuZGVmaW5lUHJvcGVydHkoTURYQ29udGVudCwnX19maWxlbWV0YScse2VudW1lcmFibGU6dHJ1ZSxjb25maWd1cmFibGU6dHJ1ZSx2YWx1ZTp7bmFtZToiTURYQ29udGVudCIsZmlsZW5hbWU6Im1hbnVhbC9BbXBsaWZ5L0dyYXBocWwtU2V0dXAubWQifX0pO31NRFhDb250ZW50LmlzTURYQ29tcG9uZW50PXRydWU7"},{"version":3,"sources":["/Users/dennis.okeeffe/Project-Imposter/developer-notes/manual/Amplify/Graphql-Setup.md"],"names":["React","mdx","makeShortcode","name","MDXDefaultShortcode","props","console","warn","layoutProps","MDXLayout","MDXContent","components","isMDXComponent"],"mappings":"iMAAA,cACE,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,GAAT,KAAoB,eAApB,CACA,cAGF,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAAAC,IAAI,QAAI,SAASC,CAAAA,mBAAT,CAA6BC,KAA7B,CAAoC,CAChEC,OAAO,CAACC,IAAR,CAAa,aAAeJ,IAAf,CAAsB,yEAAnC,EACA,MAAO,WAASE,KAAT,CAAP,CACD,CAHyB,EAA1B,CAKA,GAAMG,CAAAA,WAAW,CAAG,EAApB,CAGA,GAAMC,CAAAA,SAAS,CAAG,SAAlB,CACA,cAAe,SAASC,CAAAA,UAAT,MAGZ,IAFDC,CAAAA,UAEC,MAFDA,UAEC,CADEN,KACF,+CACD,MAAO,KAAC,SAAD,kBAAeG,WAAf,CAAgCH,KAAhC,EAAuC,UAAU,CAAEM,UAAnD,CAA+D,OAAO,CAAC,WAAvE,GACL,SAAQ,CACN,KAAM,eADA,CAAR,iBADK,CAIL,SAAQ,CACN,KAAM,OADA,CAAR,SAJK,CAOL,aAAG,uBAAG,UAAU,CAAC,GAAd,EAAsB,CACrB,OAAQ,gGADa,CAAtB,mGAAH,MAGF,uBAAG,UAAU,CAAC,GAAd,EAAsB,CAChB,OAAQ,gFADQ,CAAtB,mFAHE,CAPK,CAaL,SAAQ,CACN,KAAM,mBADA,CAAR,qBAbK,CAgBL,eAAK,0BAAM,UAAU,CAAC,KAAjB,EAA2B,CAC5B,YAAa,eADe,CAA3B,8HAAL,CAhBK,CA4BL,0EA5BK,CA6BL,kCAAyB,kBAAY,UAAU,CAAC,GAAvB,mBAAzB,wDA7BK,CA8BL,eAAK,0BAAM,UAAU,CAAC,KAAjB,EAA2B,CAC5B,YAAa,qBADe,CAA3B,+FAAL,CA9BK,CAuCL,SAAQ,CACN,KAAM,gBADA,CAAR,kBAvCK,CA0CL,eAAK,0BAAM,UAAU,CAAC,KAAjB,EAA2B,CAC5B,YAAa,qBADe,CAA3B,8EAAL,CA1CK,CAkDL,SAAQ,CACN,KAAM,kBADA,CAAR,oBAlDK,CAqDL,eAAK,0BAAM,UAAU,CAAC,KAAjB,EAA2B,CAC5B,YAAa,qBADe,CAA3B,ogBAAL,CArDK,CA+EL,SAAQ,CACN,KAAM,eADA,CAAR,iBA/EK,CAkFL,eAAK,0BAAM,UAAU,CAAC,KAAjB,EAA2B,CAC5B,YAAa,qBADe,CAA3B,6RAAL,CAlFK,CAsGL,SAAQ,CACN,KAAM,oCADA,CAAR,sCAtGK,CAyGL,eAAK,0BAAM,UAAU,CAAC,KAAjB,EAA2B,CAC5B,YAAa,eADe,CAA3B,0BAAL,CAzGK,CA6GL,SAAQ,CACN,KAAM,0CADA,CAAR,6CA7GK,CAgHL,eAAK,0BAAM,UAAU,CAAC,KAAjB,EAA2B,CAC5B,YAAa,qBADe,CAA3B,0fAAL,CAhHK,CAAP,CAqID,C,2QAEDD,UAAU,CAACE,cAAX,CAA4B,IAA5B","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"graphql-setup\"\n    }}>{`GraphQL Setup`}</h1>\n    <h2 {...{\n      \"id\": \"links\"\n    }}>{`Links`}</h2>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"https://blog.expo.io/how-to-build-cloud-powered-mobile-apps-with-expo-aws-amplify-2fddc898f9a2\"\n      }}>{`https://blog.expo.io/how-to-build-cloud-powered-mobile-apps-with-expo-aws-amplify-2fddc898f9a2`}</a>{`\n`}<a parentName=\"p\" {...{\n        \"href\": \"https://hackernoon.com/introducing-the-aws-amplify-graphql-client-8a1a1e514fde\"\n      }}>{`https://hackernoon.com/introducing-the-aws-amplify-graphql-client-8a1a1e514fde`}</a></p>\n    <h2 {...{\n      \"id\": \"to-get-it-running\"\n    }}>{`To get it running`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`amplify init\namplify add api\n# > GraphQL\n# > name\n# > API Key\n# > No\n# > Yes\n# Select single or one-to-many\n# y\n`}</code></pre>\n    <p>{`Not that you can preset a schema to have used for Amplify.`}</p>\n    <p>{`Example, create a `}<inlineCode parentName=\"p\">{`schema.graphql`}</inlineCode>{` file with following and pass the path during setup:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`type Pet @model {\n  id: ID!\n  name: String!\n  description: String\n  hello: String\n}\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"example-schema\"\n    }}>{`Example schema`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`type Pet @model {\n  id: ID!\n  name: String!\n  description: String\n}\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"example-mutation\"\n    }}>{`Example mutation`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`import API, { graphqlOperation } from '@aws-amplify/api';\n\n// define mutation\nconst createPet = \\`\n  mutation($name: String!, $description: String) {\n    createPet(input: {\n      name: $name\n      description: $description\n  }) {\n    id\n    name\n    description\n  }\n}\\`;\n// execute a mutation\nstate = { name: '' };\nonChangeText = (value) => {\n  this.setState({ name: value });\n};\ncreatePet = async () => {\n  const pet = this.state;\n  await API.graphql(graphqlOperation(createPet, pet));\n};\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"example-query\"\n    }}>{`Example query`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`// define query\nconst listPets = \\`\n  query {\n    listPets {\n      items {\n        id\n        name\n        description\n      }\n    }\n }\n\\`\n// execute query\ngetPets = () => {\n  const data = await API.graphql(graphqlOperation(listPets))\n  // do something with data\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"autogenerating-code-for-the-schema\"\n    }}>{`Autogenerating code for the schema`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`amplify codegen add\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"1-many-many-to-many-relationship-schemas\"\n    }}>{`1-many, many-to-many relationship schemas`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`type Post @model {\n  id: ID!\n  title: String!\n  editors: [PostEditor] @connection(name: \"PostEditors\")\n}\n# Create a join model and disable queries as you don't need them\n# and can query through Post.editors and User.posts\ntype PostEditor @model(queries: null) {\n  id: ID!\n  post: Post! @connection(name: \"PostEditors\")\n  editor: User! @connection(name: \"UserEditors\")\n}\ntype User @model {\n  id: ID!\n  username: String!\n  posts: [PostEditor] @connection(name: \"UserEditors\")\n}\n`}</code></pre>\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  "]}]}