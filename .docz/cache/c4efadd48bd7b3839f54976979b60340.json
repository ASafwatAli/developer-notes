{"remainingRequest":"/Users/okeeffe_d/Project-Imposter/developer-notes/node_modules/docz-core/node_modules/babel-loader/lib/index.js??ref--6-1!/Users/okeeffe_d/Project-Imposter/developer-notes/node_modules/@mdx-js/loader/index.js??ref--6-2!/Users/okeeffe_d/Project-Imposter/developer-notes/node_modules/source-map-loader/index.js!/Users/okeeffe_d/Project-Imposter/developer-notes/manual/Sketch/Principles.md","dependencies":[{"path":"/Users/okeeffe_d/Project-Imposter/developer-notes/manual/Sketch/Principles.md","mtime":1548282825072},{"path":"/Users/okeeffe_d/Project-Imposter/developer-notes/node_modules/cache-loader/dist/cjs.js","mtime":1561535530324},{"path":"/Users/okeeffe_d/Project-Imposter/developer-notes/node_modules/docz-core/node_modules/babel-loader/lib/index.js","mtime":1560300163820},{"path":"/Users/okeeffe_d/Project-Imposter/developer-notes/node_modules/@mdx-js/loader/index.js","mtime":1561535530532},{"path":"/Users/okeeffe_d/Project-Imposter/developer-notes/node_modules/source-map-loader/index.js","mtime":1548285283521}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9vYmplY3RXaXRob3V0UHJvcGVydGllcyBmcm9tIi9Vc2Vycy9va2VlZmZlX2QvUHJvamVjdC1JbXBvc3Rlci9kZXZlbG9wZXItbm90ZXMvbm9kZV9tb2R1bGVzL2JhYmVsLXByZXNldC1yZWFjdC1hcHAvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzIjsvKiBAanN4IG1keCAqL2ltcG9ydCBSZWFjdCBmcm9tJ3JlYWN0JztpbXBvcnR7bWR4fWZyb20nQG1keC1qcy9yZWFjdCc7LyogQGpzeCBtZHggKi92YXIgbWFrZVNob3J0Y29kZT1mdW5jdGlvbiBtYWtlU2hvcnRjb2RlKG5hbWUpe3JldHVybiBmdW5jdGlvbiBNRFhEZWZhdWx0U2hvcnRjb2RlKHByb3BzKXtjb25zb2xlLndhcm4oIkNvbXBvbmVudCAiK25hbWUrIiB3YXMgbm90IGltcG9ydGVkLCBleHBvcnRlZCwgb3IgcHJvdmlkZWQgYnkgTURYUHJvdmlkZXIgYXMgZ2xvYmFsIHNjb3BlIik7cmV0dXJuIG1keCgiZGl2Iixwcm9wcyk7fTt9O3ZhciBsYXlvdXRQcm9wcz17fTt2YXIgTURYTGF5b3V0PSJ3cmFwcGVyIjtleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBNRFhDb250ZW50KF9yZWYpe3ZhciBjb21wb25lbnRzPV9yZWYuY29tcG9uZW50cyxwcm9wcz1fb2JqZWN0V2l0aG91dFByb3BlcnRpZXMoX3JlZixbImNvbXBvbmVudHMiXSk7cmV0dXJuIG1keChNRFhMYXlvdXQsT2JqZWN0LmFzc2lnbih7fSxsYXlvdXRQcm9wcyxwcm9wcyx7Y29tcG9uZW50czpjb21wb25lbnRzLG1keFR5cGU6Ik1EWExheW91dCJ9KSxtZHgoImgxIix7ImlkIjoicHJpbmNpcGxlcyJ9LCJQcmluY2lwbGVzIiksbWR4KCJoMiIseyJpZCI6Im9yZ2FuaXNpbmctc3ltYm9scyJ9LCJPcmdhbmlzaW5nIHN5bWJvbHMiKSxtZHgoInAiLG51bGwsIlVzZSB0aGUgc3ltYm9sIG9yZ2FuaXNlciB0byBhdXRvLW9yZ2FuaXNlIHN5bWJvbHMuIiksbWR4KCJoMiIseyJpZCI6Im5hbWluZy1jb252ZW50aW9ucyJ9LCJOYW1pbmcgY29udmVudGlvbnMiKSxtZHgoInAiLG51bGwsIldoZW4gaXQgY29tZXMgdG8gbmFtaW5nIHByaW5jaXBsZXMsIHVzZSB0aGUgY29udmVudGlvbiBvZiAiLG1keCgiaW5saW5lQ29kZSIse3BhcmVudE5hbWU6InAifSwiQnV0dG9uL1ByaW1hcnkvTGlnaHQiKSwiIHdpdGggYWltcyB0aGF0IHRoZSBmaXJzdCB3b3JkIGNhbiBiZSBwYXJzZWQgYnkgc2tldGNoIHVwIGZvciB0eXBlIGFuZCB0aGUgZm9sbG93aW5nIGVsZW1lbnRzIG9mIGEgIixtZHgoImlubGluZUNvZGUiLHtwYXJlbnROYW1lOiJwIn0sIi8iKSwiIHNwbGl0IGFycmF5IGNhbiBiZSB1c2UgdG8gZGVub3RlIGNsYXNzbmFtZXMuIiksbWR4KCJwIixudWxsLCJBbnl0aGluZyBzcGxpdCBieSAiLG1keCgiaW5saW5lQ29kZSIse3BhcmVudE5hbWU6InAifSwiLyIpLCIgaXRzZWxmIGJlY29tZXMgYSBjbGFzc25hbWUgd2hlbiBjb252ZXJ0ZWQgdXNpbmcgc2tldGNodXAuIiksbWR4KCJwIixudWxsLCJXaGVuIG5hbWluZyBwYWdlcyBhbmQgY29tcG9uZW50cywganVzdCB1c2UgY2FtZWwgY2FzaW5nIHdpdGggbm8gc3BsaXRzLiIpLG1keCgiaDIiLHsiaWQiOiJjcmVhdGluZy1uZXctc3ltYm9scyJ9LCJDcmVhdGluZyBuZXcgc3ltYm9scyIpLG1keCgicCIsbnVsbCwiRm9yIHRoZSBzYWtlIG9mIGNyZWF0aW5nIGJhc2UgY29tcG9uZW50cywganVzdCB1c2UgdGhlIGJhc2ljIGNvbG91cnMgYW5kIHRyZWF0IGl0IGxpa2UgYSB3aXJlZnJhbWUuIFRoZXNlIGNvbXBvbmVudHMgY2FuIHRoZW4gdGFrZSBvbiB0aGUgbmFtaW5nIGNvbnZlbnRpb24gYWJvdmUuIiksbWR4KCJwIixudWxsLCJXaGVuIGRlc2lnbmluZyBhIG5ldyBzZXQgb2YgY29tcG9uZW50cywgdGhlbiBkZXRhY2ggdGhlIHN5bWJvbCBpbiB0aGUgcGFnZSB3b3JrZmxvdy4gRnJvbSBoZXJlLCB5b3UgbWFrZSBjcmVhdGUgaXQgYXMgYSBuZXcgc3ltYm9sIGFzIHJlcXVpcmVkLiIpKTt9aWYodHlwZW9mIE1EWENvbnRlbnQhPT0ndW5kZWZpbmVkJyYmTURYQ29udGVudCYmTURYQ29udGVudD09PU9iamVjdChNRFhDb250ZW50KSYmT2JqZWN0LmlzRXh0ZW5zaWJsZShNRFhDb250ZW50KSl7T2JqZWN0LmRlZmluZVByb3BlcnR5KE1EWENvbnRlbnQsJ19fZmlsZW1ldGEnLHtlbnVtZXJhYmxlOnRydWUsY29uZmlndXJhYmxlOnRydWUsdmFsdWU6e25hbWU6Ik1EWENvbnRlbnQiLGZpbGVuYW1lOiJtYW51YWwvU2tldGNoL1ByaW5jaXBsZXMubWQifX0pO31NRFhDb250ZW50LmlzTURYQ29tcG9uZW50PXRydWU7"},{"version":3,"sources":["/Users/okeeffe_d/Project-Imposter/developer-notes/manual/Sketch/Principles.md"],"names":["React","mdx","makeShortcode","name","MDXDefaultShortcode","props","console","warn","layoutProps","MDXLayout","MDXContent","components","isMDXComponent"],"mappings":"4LAAA,cACE,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,GAAT,KAAoB,eAApB,CACA,cAGF,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAAAC,IAAI,QAAI,SAASC,CAAAA,mBAAT,CAA6BC,KAA7B,CAAoC,CAChEC,OAAO,CAACC,IAAR,CAAa,aAAeJ,IAAf,CAAsB,yEAAnC,EACA,MAAO,WAASE,KAAT,CAAP,CACD,CAHyB,EAA1B,CAKA,GAAMG,CAAAA,WAAW,CAAG,EAApB,CAGA,GAAMC,CAAAA,SAAS,CAAG,SAAlB,CACA,cAAe,SAASC,CAAAA,UAAT,MAGZ,IAFDC,CAAAA,UAEC,MAFDA,UAEC,CADEN,KACF,+CACD,MAAO,KAAC,SAAD,kBAAeG,WAAf,CAAgCH,KAAhC,EAAuC,UAAU,CAAEM,UAAnD,CAA+D,OAAO,CAAC,WAAvE,GACL,SAAQ,CACN,KAAM,YADA,CAAR,cADK,CAIL,SAAQ,CACN,KAAM,oBADA,CAAR,sBAJK,CAOL,kEAPK,CAQL,SAAQ,CACN,KAAM,oBADA,CAAR,sBARK,CAWL,0EAAiE,kBAAY,UAAU,CAAC,GAAvB,yBAAjE,uGAAwO,kBAAY,UAAU,CAAC,GAAvB,MAAxO,iDAXK,CAYL,kCAAyB,kBAAY,UAAU,CAAC,GAAvB,MAAzB,8DAZK,CAaL,uFAbK,CAcL,SAAQ,CACN,KAAM,sBADA,CAAR,wBAdK,CAiBL,kLAjBK,CAkBL,+JAlBK,CAAP,CAoBD,C,uQAEDD,UAAU,CAACE,cAAX,CAA4B,IAA5B","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"principles\"\n    }}>{`Principles`}</h1>\n    <h2 {...{\n      \"id\": \"organising-symbols\"\n    }}>{`Organising symbols`}</h2>\n    <p>{`Use the symbol organiser to auto-organise symbols.`}</p>\n    <h2 {...{\n      \"id\": \"naming-conventions\"\n    }}>{`Naming conventions`}</h2>\n    <p>{`When it comes to naming principles, use the convention of `}<inlineCode parentName=\"p\">{`Button/Primary/Light`}</inlineCode>{` with aims that the first word can be parsed by sketch up for type and the following elements of a `}<inlineCode parentName=\"p\">{`/`}</inlineCode>{` split array can be use to denote classnames.`}</p>\n    <p>{`Anything split by `}<inlineCode parentName=\"p\">{`/`}</inlineCode>{` itself becomes a classname when converted using sketchup.`}</p>\n    <p>{`When naming pages and components, just use camel casing with no splits.`}</p>\n    <h2 {...{\n      \"id\": \"creating-new-symbols\"\n    }}>{`Creating new symbols`}</h2>\n    <p>{`For the sake of creating base components, just use the basic colours and treat it like a wireframe. These components can then take on the naming convention above.`}</p>\n    <p>{`When designing a new set of components, then detach the symbol in the page workflow. From here, you make create it as a new symbol as required.`}</p>\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  "]}]}