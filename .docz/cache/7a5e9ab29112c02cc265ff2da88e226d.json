{"remainingRequest":"/Users/okeeffe_d/Business/Documentation/node_modules/babel-loader/lib/index.js?{\"presets\":[[\"/Users/okeeffe_d/Business/Documentation/node_modules/babel-preset-docz/dist/index.js\",{\"flow\":true,\"typescript\":false,\"parseProps\":true}]],\"plugins\":[[\"/Users/okeeffe_d/Business/Documentation/node_modules/docz-utils/lib/named-asset-import.js\",{\"loaderMap\":{\"svg\":{\"ReactComponent\":\"@svgr/webpack?-prettier,-svgo![path]\"}}}]],\"babelrc\":false,\"cacheCompression\":true,\"compact\":true}!/Users/okeeffe_d/Business/Documentation/manual/Kubernetes/Devops-Kubernetes-Course.md","dependencies":[{"path":"/Users/okeeffe_d/Business/Documentation/manual/Kubernetes/Devops-Kubernetes-Course.md","mtime":1548209344355},{"path":"/Users/okeeffe_d/Business/Documentation/node_modules/cache-loader/dist/cjs.js","mtime":1548134640245},{"path":"/Users/okeeffe_d/Business/Documentation/node_modules/babel-loader/lib/index.js","mtime":1548134640227}],"contextDependencies":[],"result":["function _typeof(obj){if(typeof Symbol===\"function\"&&typeof Symbol.iterator===\"symbol\"){_typeof=function _typeof(obj){return typeof obj;};}else{_typeof=function _typeof(obj){return obj&&typeof Symbol===\"function\"&&obj.constructor===Symbol&&obj!==Symbol.prototype?\"symbol\":typeof obj;};}return _typeof(obj);}function _objectWithoutProperties(source,excluded){if(source==null)return{};var target=_objectWithoutPropertiesLoose(source,excluded);var key,i;if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++){key=sourceSymbolKeys[i];if(excluded.indexOf(key)>=0)continue;if(!Object.prototype.propertyIsEnumerable.call(source,key))continue;target[key]=source[key];}}return target;}function _objectWithoutPropertiesLoose(source,excluded){if(source==null)return{};var target={};var sourceKeys=Object.keys(source);var key,i;for(i=0;i<sourceKeys.length;i++){key=sourceKeys[i];if(excluded.indexOf(key)>=0)continue;target[key]=source[key];}return target;}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\");}}function _defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}function _createClass(Constructor,protoProps,staticProps){if(protoProps)_defineProperties(Constructor.prototype,protoProps);if(staticProps)_defineProperties(Constructor,staticProps);return Constructor;}function _possibleConstructorReturn(self,call){if(call&&(_typeof(call)===\"object\"||typeof call===\"function\")){return call;}return _assertThisInitialized(self);}function _assertThisInitialized(self){if(self===void 0){throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");}return self;}function _getPrototypeOf(o){_getPrototypeOf=Object.setPrototypeOf?Object.getPrototypeOf:function _getPrototypeOf(o){return o.__proto__||Object.getPrototypeOf(o);};return _getPrototypeOf(o);}function _inherits(subClass,superClass){if(typeof superClass!==\"function\"&&superClass!==null){throw new TypeError(\"Super expression must either be null or a function\");}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,writable:true,configurable:true}});if(superClass)_setPrototypeOf(subClass,superClass);}function _setPrototypeOf(o,p){_setPrototypeOf=Object.setPrototypeOf||function _setPrototypeOf(o,p){o.__proto__=p;return o;};return _setPrototypeOf(o,p);}import React from'react';import{MDXTag}from'@mdx-js/tag';var MDXContent=/*#__PURE__*/function(_React$Component){_inherits(MDXContent,_React$Component);function MDXContent(props){var _this;_classCallCheck(this,MDXContent);_this=_possibleConstructorReturn(this,_getPrototypeOf(MDXContent).call(this,props));_this.layout=null;return _this;}_createClass(MDXContent,[{key:\"render\",value:function render(){var _this$props=this.props,components=_this$props.components,props=_objectWithoutProperties(_this$props,[\"components\"]);return React.createElement(MDXTag,{name:\"wrapper\",components:components},React.createElement(MDXTag,{name:\"h1\",components:components,props:{\"id\":\"devops-kubernetes-course\"}},\"DevOps Kubernetes Course\"),React.createElement(MDXTag,{name:\"h2\",components:components,props:{\"id\":\"course-layout\"}},\"Course layout\"),React.createElement(MDXTag,{name:\"ol\",components:components},React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ol\"},\"Introduction\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ol\"},\"Kubernetes Basics\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ol\"},\"Advanced Topics\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ol\"},\"Administration\")),React.createElement(MDXTag,{name:\"h3\",components:components,props:{\"id\":\"objectives\"}},\"Objectives\"),React.createElement(MDXTag,{name:\"ol\",components:components},React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ol\"},\"To understand, deploy and use Kubernetes\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ol\"},\"To get straight with \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"li\"},\"containerization\"),\" and run those containers on Kubernetes\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ol\"},\"To use Kubernetes as a single node and on AWS\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ol\"},\"To be able to run \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"li\"},\"stateless\"),\" and \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"li\"},\"stateful\"),\" applications on Kubernetes\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ol\"},\"To be able to \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"li\"},\"administer\"),\" Kubernetes\")),React.createElement(MDXTag,{name:\"h3\",components:components,props:{\"id\":\"support\"}},\"Support\"),React.createElement(MDXTag,{name:\"p\",components:components},\"All resources are in a github repository.\"),React.createElement(MDXTag,{name:\"h3\",components:components,props:{\"id\":\"getting-started\"}},\"Getting Started\"),React.createElement(MDXTag,{name:\"p\",components:components},\"kubectl: Install via brew\\nminikube: \",React.createElement(MDXTag,{name:\"a\",components:components,parentName:\"p\",props:{\"href\":\"https://github.com/kubernetes/minikube/releases\"}},\"https://github.com/kubernetes/minikube/releases\"),\"\\nkops: Install via brew\"),React.createElement(MDXTag,{name:\"p\",components:components},\"Minikube test commands:\"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{\"className\":\"language-bash\"}},\"minikube status # check status\\nminikube start # start cluster\\n\")),React.createElement(MDXTag,{name:\"p\",components:components},\"For OSX install:\"),React.createElement(MDXTag,{name:\"p\",components:components},React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"curl -Lo minikube https://storage.googleapis.com/minikube/releases/v0.25.0/minikube-darwin-amd64 && chmod +x minikube && sudo mv minikube /usr/local/bin/\")),React.createElement(MDXTag,{name:\"p\",components:components},\"Install Docker Edge to use the latest features with Kubernetes.\"),React.createElement(MDXTag,{name:\"p\",components:components},\"Otherwise follow the base instructions to get everything up and going.\"),React.createElement(MDXTag,{name:\"p\",components:components},React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"https://gist.github.com/kevin-smets/b91a34cea662d0c523968472a81788f7\")),React.createElement(MDXTag,{name:\"p\",components:components},\"This resolves DL issue: \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"mv minikube-v0.25.1.iso ~/.minikube/cache/iso/minikube-v0.25.1.iso\"),\".\"),React.createElement(MDXTag,{name:\"h3\",components:components,props:{\"id\":\"procedure-document\"}},\"Procedure Document\"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{}},\"Kubernetes Procedure Document\\nGithub repository [Read this first]\\nDownload all the course material from: https://github.com/wardviaene/kubernetes-course\\n\\nQuestions?\\nSend me a message\\n\\nUse Q&A\\n\\nJoin our facebook group: https://www.facebook.com/groups/840062592768074/\\n\\nDownload Kubectl\\nLinux: https://storage.googleapis.com/kubernetes-release/release/v1.6.1/bin/linux/amd64/kubectl\\n\\nMacOS: https://storage.googleapis.com/kubernetes-release/release/v1.6.1/bin/darwin/amd64/kubectl\\n\\nWindows:\\nhttps://github.com/eirslett/kubectl-windows/releases/download/v1.6.3/kubectl.exe\\n\\nMinikube\\nProject URL: https://github.com/kubernetes/minikube\\n\\nLatest Release and download instructions: https://github.com/kubernetes/minikube/releases\\n\\nVirtualBox: http://www.virtualbox.org\\n\\nMinikube on windows:\\nDownload the latest minikube-version.exe\\n\\nRename the file to minikube.exe and put it in C:minikube\\n\\nOpen a cmd (search for the app cmd or powershell)\\n\\nRun: cd C:minikube and enter minikube start\\n\\nTest your cluster commands\\nMake sure your cluster is running, you can check with minikube status.\\n\\nIf your cluster is not running, enter minikube start first.\\n\\nkubectl run hello-minikube --image=gcr.io/google_containers/echoserver:1.4 --port=8080\\nkubectl expose deployment hello-minikube --type=NodePort\\n\\nminikube service hello-minikube --url\\n\\n<open a browser and go to that url>\\n\\nKops\\nProject URL\\nhttps://github.com/kubernetes/kops\\n\\nFree DNS Service\\nSign up at http://freedns.afraid.org/\\n\\nChoose for subdomain hosting\\n\\nEnter the AWS nameservers given to you in route53 as nameservers for the subdomain\\n\\nhttp://www.dot.tk/ provides a free .tk domain name you can use and you can point it to the amazon AWS nameservers\\n\\n###h2\\n\\nNamecheap.com often has promotions for tld\\u2019s like .co for just a couple of bucks\\n\\n\\n\\nCluster Commands\\nkops create cluster --name=kubernetes.newtech.academy --state=s3://kops-state-b429b --zones=eu-west-1a --node-count=2 --node-size=t2.micro --master-size=t2.micro --dns-zone=kubernetes.newtech.academy\\n\\nkops update cluster kubernetes.newtech.academy --yes --state=s3://kops-state-b429b\\n\\nkops delete cluster --name kubernetes.newtech.academy --state=s3://kops-state-b429b\\n\\nkops delete cluster --name kubernetes.newtech.academy --state=s3://kops-state-b429b --yes\\n\\nKubernetes from scratch\\n\\n\\n\\n\\n\\n\\nYou can setup your cluster manually from scratch\\n\\nIf you\\u2019re planning to deploy on AWS / Google / Azure, use the tools that are fit for these platforms\\n\\nIf you have an unsupported cloud platform, and you still want Kubernetes, you can install it manually\\n\\nCoreOS + Kubernetes: ###a href=\\\"https://coreos.com/kubernetes/docs/latest/getting-started.html\\\">https://coreos.com/kubernetes/docs/latest/getting-started.html\\n\\nDocker\\nYou can download Docker Engine for:\\n\\nWindows: https://docs.docker.com/engine/installation/windows/\\n\\nMacOS: https://docs.docker.com/engine/installation/mac/\\n\\nLinux: https://docs.docker.com/engine/installation/linux/\\n\\nDevOps box\\nVirtualbox: http://www.virtualbox.org\\n\\nVagrant: http://www.vagrantup.com\\n\\nDevOps box: https://github.com/wardviaene/devops-box\\n\\nLaunch commands (in terminal / cmd / powershell):\\n\\ncd devops-box/\\n\\nvagrant up\\n\\nLaunch commands for a plain ubuntu box:\\n\\nmkdir ubuntu\\n\\nvagrant init ubuntu/xenial64\\n\\nvagrant up\\n\\nDocker commands\\nDescription\\n\\nCommand\\n\\nBuild image\\n\\ndocker build .\\n\\nBuild & Tag\\n\\ndocker build -t wardviaene/k8s-demo:latest .\\n\\nTag image\\n\\ndocker tag imageid wardviaene/k8s-demo\\n\\nPush image\\n\\ndocker push wardviaene/k8s-demo\\n\\nList images\\n\\ndocker images\\n\\nList all containers\\n\\ndocker ps -a\\n\\nKubernetes commands\\nCommand\\n\\nDescription\\n\\nkubectl get pod\\n\\nGet information about all running pods\\n\\nkubectl describe pod `<pod>`\\n\\nDescribe one pod\\n\\nkubectl expose pod `<pod>` --port=444\\n\\n--name=frontend\\n\\nExpose the port of a pod (creates a new service)\\n\\nkubectl port-forward `<pod>` 8080\\n\\nPort forward the exposed pod port to your local machine\\n\\nkubectl attach `<podname>` -i\\n\\nAttach to the pod\\n\\nkubectl exec `<pod>` -- command\\n\\nExecute a command on the pod\\n\\nkubectl label pods `<pod>` mylabel=awesome\\n\\nAdd a new label to a pod\\n\\nkubectl run -i --tty busybox --image=busybox\\n\\n--restart=Never -- sh\\n\\nRun a shell in a pod - very useful for debugging\\n\\nkubectl get deployments\\n\\nGet information on current deployments\\n\\nkubectl get rs\\n\\nGet information about the replica sets\\n\\nkubectl get pods --show-labels\\n\\nget pods, and also show labels attached to those pods\\n\\nkubectl rollout status deployment/helloworld-deployment\\n\\nGet deployment status\\n\\nkubectl set image deployment/helloworld-deployment\\n\\nk8s-demo=k8s-demo:2\\n\\nRun k8s-demo with the image label version 2\\n\\nkubectl edit deployment/helloworld-deployment\\n\\nEdit the deployment object\\n\\nkubectl rollout status deployment/helloworld-deployment\\n\\nGet the status of the rollout\\n\\nkubectl rollout history deployment/helloworld-deployment\\n\\nGet the rollout history\\n\\nkubectl rollout undo deployment/helloworld-deployment\\n\\nRollback to previous version\\n\\nkubectl rollout undo deployment/helloworld-deployment --to-revision=n\\n\\nRollback to any version version\\n\\nAWS Commands\\naws ec2 create-volume --size 10 --region us-east-1 --availability-zone us-east-1a --volume-type gp2\\n\\nCertificates\\nCreating a new key for a new user: openssl genrsa -out myuser.pem 2048\\n\\nCreating a certificate request: openssl req -new -key myuser.pem -out myuser-csr.pem -subj \\\"/CN=myuser/O=myteam/\\\"\\n\\nCreating a certificate: openssl x509 -req -in myuser-csr.pem -CA /path/to/kubernetes/ca.crt -CAkey /path/to/kubernetes/ca.key -CAcreateserial -out myuser.crt -days 10000\\n\")),React.createElement(MDXTag,{name:\"h2\",components:components,props:{\"id\":\"what-is-kubernetes\"}},\"What is Kubernetes?\"),React.createElement(MDXTag,{name:\"p\",components:components},\"Open source orchestration system for Docker.\"),React.createElement(MDXTag,{name:\"ul\",components:components},React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"Let's you schedule containers on a cluster of machines\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"You can run multiple containers on one machine\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"You can run long running services (like web apps)\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"K8s will manage the state of these containers\",React.createElement(MDXTag,{name:\"ul\",components:components,parentName:\"li\"},React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"Can start the container on specific nodes\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"Will restart a container when it gets killed\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"Can move containers from one node to another node\"))),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"Instead of just running a few docker containers on one host manually, K8s can manage that for you\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"K8 clusters can go to thousands of nodes\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"Other orcherstrators:\",React.createElement(MDXTag,{name:\"ul\",components:components,parentName:\"li\"},React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"Docker Swarm\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"Mesos\")))),React.createElement(MDXTag,{name:\"p\",components:components},\"You can run K8s anywhere:\"),React.createElement(MDXTag,{name:\"ul\",components:components},React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"One premise (private)\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"Public\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"Hybrid\")),React.createElement(MDXTag,{name:\"p\",components:components},\"It is highly modular and open source. It is also backed by Google.\"),React.createElement(MDXTag,{name:\"h2\",components:components,props:{\"id\":\"containers-intro\"}},\"Containers intro\"),React.createElement(MDXTag,{name:\"p\",components:components},\"Container VS VM: No Hypervisor and Guest OS layer.\"),React.createElement(MDXTag,{name:\"p\",components:components},\"Containers on Cloud Providers do still use the hypervisor to seperate users.\"),React.createElement(MDXTag,{name:\"p\",components:components},\"Docker is the most popular container software. An alternative is \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"rkt\"),\".\"),React.createElement(MDXTag,{name:\"p\",components:components},\"Benefits? It works in isolation. You ship the binary with all the dependencies and create a closer parity.\"),React.createElement(MDXTag,{name:\"p\",components:components},\"Docker makes development teams able to ship faster.\"),React.createElement(MDXTag,{name:\"p\",components:components},\"You can run the same image on prem and in the cloud with what should be the same results.\"),React.createElement(MDXTag,{name:\"h2\",components:components,props:{\"id\":\"kubernetes-setup\"}},\"Kubernetes Setup\"),React.createElement(MDXTag,{name:\"p\",components:components},\"Something to note is that there are more integrations for certain Cloud Providers like AWS & GCE. Thingsl ike \\\"Volumes\\\" and \\\"External Load Balancers\\\" work only with support Cloud Providers.\"),React.createElement(MDXTag,{name:\"h3\",components:components,props:{\"id\":\"running-locally\"}},\"Running locally\"),React.createElement(MDXTag,{name:\"p\",components:components},\"We can use \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"minikube\"),\" to spin up a local single machine with a Kubernetes cluster.\"),React.createElement(MDXTag,{name:\"h4\",components:components,props:{\"id\":\"minikube\"}},\"Minikube\"),React.createElement(MDXTag,{name:\"p\",components:components},\"Minikube is a tool that makes running k8s locally easy.\"),React.createElement(MDXTag,{name:\"p\",components:components},\"It runs a single-node Kubernetes cluster inside a Linux VM.\"),React.createElement(MDXTag,{name:\"p\",components:components},\"It's aimed on users who just want to just test it out or use if for development.\"),React.createElement(MDXTag,{name:\"p\",components:components},\"It cannot spin up a roduction cluster, it's a one node machine with no high availability.\"),React.createElement(MDXTag,{name:\"p\",components:components},\"You need VM to run all this.\"),React.createElement(MDXTag,{name:\"p\",components:components},\"To run a cluster, just run \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"minikube start\"),\".\"),React.createElement(MDXTag,{name:\"p\",components:components},\"To check your config after spinning up Kubernetes, use \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"cat ~/.kube/config\"),\".\"),React.createElement(MDXTag,{name:\"h3\",components:components,props:{\"id\":\"running-on-aws\"}},\"Running on AWS\"),React.createElement(MDXTag,{name:\"p\",components:components},\"Until EKS comes out, we can spin up a Kubernetes cluster using KOPS.\"),React.createElement(MDXTag,{name:\"p\",components:components},\"You need to ensure that you download Vagrant and a VM.\"),React.createElement(MDXTag,{name:\"p\",components:components},\"For running the Vagrant box, you can run \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"vagrant up --provider virtualbox\"),\".\"),React.createElement(MDXTag,{name:\"p\",components:components},\"You can then use \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"vagrant ssh\"),\" to ssh in.\"),React.createElement(MDXTag,{name:\"p\",components:components},\"After you are in, download Kops:\"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{}},\"curl -LO https://github.com/kubernetes/kops/releases/download/$(curl -s https://api.github.com/repos/kubernetes/kops/releases/latest | grep tag_name | cut -d '\\\"' -f 4)/kops-linux-amd64\\nchmod +x kops-linux-amd64\\nsudo mv kops-linux-amd64 /usr/local/bin/kops\\n\")),React.createElement(MDXTag,{name:\"p\",components:components},\"Ensure that you also download \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"python-pip\"),\":\"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{}},\"sudo apt-get install software-properties-common\\nsudo apt-add-repository universe\\nsudo apt-get update\\nsudo apt-get install python-pip\\n\")),React.createElement(MDXTag,{name:\"p\",components:components},\"Then install awscli:\"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{}},\"export LC_ALL=C # if run into an error about locale settings\\nsudo pip install awscli\\n\")),React.createElement(MDXTag,{name:\"p\",components:components},\"You will then need to create an AWS account.\"),React.createElement(MDXTag,{name:\"p\",components:components},\"After setting up the AWSCLI, installing Kops and creating a S3 Bucket + setting up the Route53 Name Servers (on somewhere like NameCheap), you can move on.\"),React.createElement(MDXTag,{name:\"h3\",components:components,props:{\"id\":\"cluster-setup-on-kops\"}},\"Cluster setup on Kops\"),React.createElement(MDXTag,{name:\"p\",components:components},\"First, download Kops for Linux on the Vagrant box and move it.\"),React.createElement(MDXTag,{name:\"p\",components:components},\"Before creating the cluster, you will need to create new keys. \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"ssh-keygen -f .ssh/id_rsa\"),\".\"),React.createElement(MDXTag,{name:\"p\",components:components},\"To create the cluster (example), run \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"kops create cluster --name=kubernetes.test --state=s3://kops-state-oeiajrie93 --zones=ap-southeast-2a --node-count=2 --node-size=t2.micro --master-size=t2.micro --dns-zone=givemeyeezy.online\")),React.createElement(MDXTag,{name:\"p\",components:components},\"This DNS zone is basically just the one that we set up.\"),React.createElement(MDXTag,{name:\"p\",components:components},\"You'll get something back like\"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{}},\"I0311 21:48:46.821364    7553 create_cluster.go:439] Inferred --cloud=aws from zone \\\"ap-southeast-2a\\\"\\nI0311 21:48:46.821506    7553 create_cluster.go:971] Using SSH public key: /home/vagrant/.ssh/id_rsa.pub\\nI0311 21:48:48.232635    7553 subnets.go:184] Assigned CIDR 172.20.32.0/19 to subnet ap-southeast-2a\\nPreviewing changes that will be made:\\n\\nI0311 21:48:52.305360    7553 executor.go:91] Tasks: 0 done / 73 total; 31 can run\\nI0311 21:48:53.503124    7553 executor.go:91] Tasks: 31 done / 73 total; 24 can run\\nI0311 21:48:53.958875    7553 executor.go:91] Tasks: 55 done / 73 total; 16 can run\\nI0311 21:48:54.237870    7553 executor.go:91] Tasks: 71 done / 73 total; 2 can run\\nI0311 21:48:54.262347    7553 executor.go:91] Tasks: 73 done / 73 total; 0 can run\\nWill create resources:\\n  AutoscalingGroup/master-ap-southeast-2a.masters.kubernetes.test\\n  MinSize               1\\n  MaxSize               1\\n  Subnets               [name:ap-southeast-2a.kubernetes.test]\\n  Tags                  {k8s.io/role/master: 1, Name: master-ap-southeast-2a.masters.kubernetes.test, KubernetesCluster: kubernetes.test, k8s.io/cluster-autoscaler/node-template/label/kops.k8s.io/instancegroup: master-ap-southeast-2a}\\n  LaunchConfiguration   name:master-ap-southeast-2a.masters.kubernetes.test\\n\\n  AutoscalingGroup/nodes.kubernetes.test\\n  MinSize               2\\n  MaxSize               2\\n  Subnets               [name:ap-southeast-2a.kubernetes.test]\\n  Tags                  {k8s.io/cluster-autoscaler/node-template/label/kops.k8s.io/instancegroup: nodes, k8s.io/role/node: 1, Name: nodes.kubernetes.test, KubernetesCluster: kubernetes.test}\\n  LaunchConfiguration   name:nodes.kubernetes.test\\n\\n  DHCPOptions/kubernetes.test\\n  DomainName            ap-southeast-2.compute.internal\\n  DomainNameServers     AmazonProvidedDNS\\n\\n  EBSVolume/a.etcd-events.kubernetes.test\\n  AvailabilityZone      ap-southeast-2a\\n  VolumeType            gp2\\n  SizeGB                20\\n  Encrypted             false\\n  Tags                  {KubernetesCluster: kubernetes.test, k8s.io/etcd/events: a/a, k8s.io/role/master: 1, Name: a.etcd-events.kubernetes.test}\\n\\n  EBSVolume/a.etcd-main.kubernetes.test\\n  AvailabilityZone      ap-southeast-2a\\n  VolumeType            gp2\\n  SizeGB                20\\n  Encrypted             false\\n  Tags                  {k8s.io/etcd/main: a/a, k8s.io/role/master: 1, Name: a.etcd-main.kubernetes.test, KubernetesCluster: kubernetes.test}\\n\\n  IAMInstanceProfile/masters.kubernetes.test\\n\\n  IAMInstanceProfile/nodes.kubernetes.test\\n\\n  IAMInstanceProfileRole/masters.kubernetes.test\\n  InstanceProfile       name:masters.kubernetes.test id:masters.kubernetes.test\\n  Role                  name:masters.kubernetes.test\\n\\n  IAMInstanceProfileRole/nodes.kubernetes.test\\n  InstanceProfile       name:nodes.kubernetes.test id:nodes.kubernetes.test\\n  Role                  name:nodes.kubernetes.test\\n\\n  IAMRole/masters.kubernetes.test\\n  ExportWithID          masters\\n\\n  IAMRole/nodes.kubernetes.test\\n  ExportWithID          nodes\\n\\n  IAMRolePolicy/masters.kubernetes.test\\n  Role                  name:masters.kubernetes.test\\n\\n  IAMRolePolicy/nodes.kubernetes.test\\n  Role                  name:nodes.kubernetes.test\\n\\n  InternetGateway/kubernetes.test\\n  VPC                   name:kubernetes.test\\n  Shared                false\\n\\n  Keypair/apiserver-aggregator\\n  Subject               cn=aggregator\\n  Type                  client\\n  Signer                name:apiserver-aggregator-ca id:cn=apiserver-aggregator-ca\\n\\n  Keypair/apiserver-aggregator-ca\\n  Subject               cn=apiserver-aggregator-ca\\n  Type                  ca\\n\\n  Keypair/apiserver-proxy-client\\n  Subject               cn=apiserver-proxy-client\\n  Type                  client\\n  Signer                name:ca id:cn=kubernetes\\n\\n  Keypair/ca\\n  Subject               cn=kubernetes\\n  Type                  ca\\n\\n  Keypair/kops\\n  Subject               o=system:masters,cn=kops\\n  Type                  client\\n  Signer                name:ca id:cn=kubernetes\\n\\n  Keypair/kube-controller-manager\\n  Subject               cn=system:kube-controller-manager\\n  Type                  client\\n  Signer                name:ca id:cn=kubernetes\\n\\n  Keypair/kube-proxy\\n  Subject               cn=system:kube-proxy\\n  Type                  client\\n  Signer                name:ca id:cn=kubernetes\\n\\n  Keypair/kube-scheduler\\n  Subject               cn=system:kube-scheduler\\n  Type                  client\\n  Signer                name:ca id:cn=kubernetes\\n\\n  Keypair/kubecfg\\n  Subject               o=system:masters,cn=kubecfg\\n  Type                  client\\n  Signer                name:ca id:cn=kubernetes\\n\\n  Keypair/kubelet\\n  Subject               o=system:nodes,cn=kubelet\\n  Type                  client\\n  Signer                name:ca id:cn=kubernetes\\n\\n  Keypair/kubelet-api\\n  Subject               cn=kubelet-api\\n  Type                  client\\n  Signer                name:ca id:cn=kubernetes\\n\\n  Keypair/master\\n  Subject               cn=kubernetes-master\\n  Type                  server\\n  AlternateNames        [100.64.0.1, 127.0.0.1, api.internal.kubernetes.test, api.kubernetes.test, kubernetes, kubernetes.default, kubernetes.default.svc, kubernetes.default.svc.cluster.local]\\n  Signer                name:ca id:cn=kubernetes\\n\\n  LaunchConfiguration/master-ap-southeast-2a.masters.kubernetes.test\\n  ImageID               kope.io/k8s-1.8-debian-jessie-amd64-hvm-ebs-2018-01-14\\n  InstanceType          t2.micro\\n  SSHKey                name:kubernetes.kubernetes.test-e8:be:8d:cf:90:3b:52:6e:f7:23:29:0a:32:d1:cd:de id:kubernetes.kubernetes.test-e8:be:8d:cf:90:3b:52:6e:f7:23:29:0a:32:d1:cd:de\\n  SecurityGroups        [name:masters.kubernetes.test]\\n  AssociatePublicIP     true\\n  IAMInstanceProfile    name:masters.kubernetes.test id:masters.kubernetes.test\\n  RootVolumeSize        64\\n  RootVolumeType        gp2\\n  SpotPrice\\n\\n  LaunchConfiguration/nodes.kubernetes.test\\n  ImageID               kope.io/k8s-1.8-debian-jessie-amd64-hvm-ebs-2018-01-14\\n  InstanceType          t2.micro\\n  SSHKey                name:kubernetes.kubernetes.test-e8:be:8d:cf:90:3b:52:6e:f7:23:29:0a:32:d1:cd:de id:kubernetes.kubernetes.test-e8:be:8d:cf:90:3b:52:6e:f7:23:29:0a:32:d1:cd:de\\n  SecurityGroups        [name:nodes.kubernetes.test]\\n  AssociatePublicIP     true\\n  IAMInstanceProfile    name:nodes.kubernetes.test id:nodes.kubernetes.test\\n  RootVolumeSize        128\\n  RootVolumeType        gp2\\n  SpotPrice\\n\\n  ManagedFile/kubernetes.test-addons-bootstrap\\n  Location              addons/bootstrap-channel.yaml\\n\\n  ManagedFile/kubernetes.test-addons-core.addons.k8s.io\\n  Location              addons/core.addons.k8s.io/v1.4.0.yaml\\n\\n  ManagedFile/kubernetes.test-addons-dns-controller.addons.k8s.io-k8s-1.6\\n  Location              addons/dns-controller.addons.k8s.io/k8s-1.6.yaml\\n\\n  ManagedFile/kubernetes.test-addons-dns-controller.addons.k8s.io-pre-k8s-1.6\\n  Location              addons/dns-controller.addons.k8s.io/pre-k8s-1.6.yaml\\n\\n  ManagedFile/kubernetes.test-addons-kube-dns.addons.k8s.io-k8s-1.6\\n  Location              addons/kube-dns.addons.k8s.io/k8s-1.6.yaml\\n\\n  ManagedFile/kubernetes.test-addons-kube-dns.addons.k8s.io-pre-k8s-1.6\\n  Location              addons/kube-dns.addons.k8s.io/pre-k8s-1.6.yaml\\n\\n  ManagedFile/kubernetes.test-addons-limit-range.addons.k8s.io\\n  Location              addons/limit-range.addons.k8s.io/v1.5.0.yaml\\n\\n  ManagedFile/kubernetes.test-addons-rbac.addons.k8s.io-k8s-1.8\\n  Location              addons/rbac.addons.k8s.io/k8s-1.8.yaml\\n\\n  ManagedFile/kubernetes.test-addons-storage-aws.addons.k8s.io-v1.6.0\\n  Location              addons/storage-aws.addons.k8s.io/v1.6.0.yaml\\n\\n  ManagedFile/kubernetes.test-addons-storage-aws.addons.k8s.io-v1.7.0\\n  Location              addons/storage-aws.addons.k8s.io/v1.7.0.yaml\\n\\n  Route/0.0.0.0/0\\n  RouteTable            name:kubernetes.test\\n  CIDR                  0.0.0.0/0\\n  InternetGateway       name:kubernetes.test\\n\\n  RouteTable/kubernetes.test\\n  VPC                   name:kubernetes.test\\n\\n  RouteTableAssociation/ap-southeast-2a.kubernetes.test\\n  RouteTable            name:kubernetes.test\\n  Subnet                name:ap-southeast-2a.kubernetes.test\\n\\n  SSHKey/kubernetes.kubernetes.test-e8:be:8d:cf:90:3b:52:6e:f7:23:29:0a:32:d1:cd:de\\n  KeyFingerprint        c4:89:af:59:a1:1d:6e:ef:7a:9d:12:65:bc:e2:82:4f\\n\\n  Secret/admin\\n\\n  Secret/kube\\n\\n  Secret/kube-proxy\\n\\n  Secret/kubelet\\n\\n  Secret/system:controller_manager\\n\\n  Secret/system:dns\\n\\n  Secret/system:logging\\n\\n  Secret/system:monitoring\\n\\n  Secret/system:scheduler\\n\\n  SecurityGroup/masters.kubernetes.test\\n  Description           Security group for masters\\n  VPC                   name:kubernetes.test\\n  RemoveExtraRules      [port=22, port=443, port=2380, port=2381, port=4001, port=4002, port=4789, port=179]\\n\\n  SecurityGroup/nodes.kubernetes.test\\n  Description           Security group for nodes\\n  VPC                   name:kubernetes.test\\n  RemoveExtraRules      [port=22]\\n\\n  SecurityGroupRule/all-master-to-master\\n  SecurityGroup         name:masters.kubernetes.test\\n  SourceGroup           name:masters.kubernetes.test\\n\\n  SecurityGroupRule/all-master-to-node\\n  SecurityGroup         name:nodes.kubernetes.test\\n  SourceGroup           name:masters.kubernetes.test\\n\\n  SecurityGroupRule/all-node-to-node\\n  SecurityGroup         name:nodes.kubernetes.test\\n  SourceGroup           name:nodes.kubernetes.test\\n\\n  SecurityGroupRule/https-external-to-master-0.0.0.0/0\\n  SecurityGroup         name:masters.kubernetes.test\\n  CIDR                  0.0.0.0/0\\n  Protocol              tcp\\n  FromPort              443\\n  ToPort                443\\n\\n  SecurityGroupRule/master-egress\\n  SecurityGroup         name:masters.kubernetes.test\\n  CIDR                  0.0.0.0/0\\n  Egress                true\\n\\n  SecurityGroupRule/node-egress\\n  SecurityGroup         name:nodes.kubernetes.test\\n  CIDR                  0.0.0.0/0\\n  Egress                true\\n\\n  SecurityGroupRule/node-to-master-tcp-1-2379\\n  SecurityGroup         name:masters.kubernetes.test\\n  Protocol              tcp\\n  FromPort              1\\n  ToPort                2379\\n  SourceGroup           name:nodes.kubernetes.test\\n\\n  SecurityGroupRule/node-to-master-tcp-2382-4000\\n  SecurityGroup         name:masters.kubernetes.test\\n  Protocol              tcp\\n  FromPort              2382\\n  ToPort                4000\\n  SourceGroup           name:nodes.kubernetes.test\\n\\n  SecurityGroupRule/node-to-master-tcp-4003-65535\\n  SecurityGroup         name:masters.kubernetes.test\\n  Protocol              tcp\\n  FromPort              4003\\n  ToPort                65535\\n  SourceGroup           name:nodes.kubernetes.test\\n\\n  SecurityGroupRule/node-to-master-udp-1-65535\\n  SecurityGroup         name:masters.kubernetes.test\\n  Protocol              udp\\n  FromPort              1\\n  ToPort                65535\\n  SourceGroup           name:nodes.kubernetes.test\\n\\n  SecurityGroupRule/ssh-external-to-master-0.0.0.0/0\\n  SecurityGroup         name:masters.kubernetes.test\\n  CIDR                  0.0.0.0/0\\n  Protocol              tcp\\n  FromPort              22\\n  ToPort                22\\n\\n  SecurityGroupRule/ssh-external-to-node-0.0.0.0/0\\n  SecurityGroup         name:nodes.kubernetes.test\\n  CIDR                  0.0.0.0/0\\n  Protocol              tcp\\n  FromPort              22\\n  ToPort                22\\n\\n  Subnet/ap-southeast-2a.kubernetes.test\\n  VPC                   name:kubernetes.test\\n  AvailabilityZone      ap-southeast-2a\\n  CIDR                  172.20.32.0/19\\n  Shared                false\\n  Tags                  {Name: ap-southeast-2a.kubernetes.test, KubernetesCluster: kubernetes.test, kubernetes.io/cluster/kubernetes.test: owned, kubernetes.io/role/elb: 1}\\n\\n  VPC/kubernetes.test\\n  CIDR                  172.20.0.0/16\\n  EnableDNSHostnames    true\\n  EnableDNSSupport      true\\n  Shared                false\\n  Tags                  {Name: kubernetes.test, KubernetesCluster: kubernetes.test, kubernetes.io/cluster/kubernetes.test: owned}\\n\\n  VPCDHCPOptionsAssociation/kubernetes.test\\n  VPC                   name:kubernetes.test\\n  DHCPOptions           name:kubernetes.test\\n\\nMust specify --yes to apply changes\\n\\nCluster configuration has been created.\\n\\nSuggestions:\\n * list clusters with: kops get cluster\\n * edit this cluster with: kops edit cluster kubernetes.test\\n * edit your node instance group: kops edit ig --name=kubernetes.test nodes\\n * edit your master instance group: kops edit ig --name=kubernetes.test master-ap-southeast-2a\\n\\nFinally configure your cluster with: kops update cluster kubernetes.test --yes\\n\")),React.createElement(MDXTag,{name:\"p\",components:components},\"To edit the cluster, run \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"kops edit cluster kubernetes.test --state=s3://kops-state-oeiajrie93\"),\" and then to update run \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"kops update cluster kubernetes.test --yes --state=s3://kops-state-oeiajrie93\")),React.createElement(MDXTag,{name:\"p\",components:components},\"If we now run \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"cat ~/.kube/config\"),\" we can see the password and username information needed.\"),React.createElement(MDXTag,{name:\"p\",components:components},\"To check if the nodes are up, run \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"kubectl get node\"),\".\"),React.createElement(MDXTag,{name:\"p\",components:components},\"Then, we can again run \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"kubectl run hello-minikube ...\")),React.createElement(MDXTag,{name:\"p\",components:components},\"If you have issues hit up \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"https://www.digitalocean.com/community/tutorials/how-to-set-up-time-synchronization-on-ubuntu-16-04\"),\" for date syncing.\"),React.createElement(MDXTag,{name:\"h2\",components:components,props:{\"id\":\"kops-quicklist\"}},\"KOPS QuickList\"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{\"className\":\"language-bash\"}},\"# create\\nkops create cluster --name=doksandbox.com --state=s3://kops-state-doksandbox --zones=ap-southeast-2a --node-count=1 --node-size=t2.micro --master-size=t2.micro --dns-zone=doksandbox.com\\n\\n# edit\\nkops edit cluster doksandbox.com --state=s3://kops-state-doksandbox\\n\\n# update\\nkops update cluster doksandbox.com --yes --state=s3://kops-state-doksandbox\\n\\n# delete\\nkops delete cluster doksandbox.com --yes --state=s3://kops-state-doksandbox\\n\\n# suggestions\\nkops validate cluster --state=s3://kops-state-doksandbox  # validate cluster\\nkubectl get nodes --show-labels # list nodes\\nssh -i ~/.ssh/id_rsa admin@api.kubernetes.doksandbox.com # ssh to the master\\nThe admin user is specific to Debian. If not using Debian please use the appropriate user based on your OS.\\n\\n# check DNS\\ndig afxr doksandbox.com\\n\")),React.createElement(MDXTag,{name:\"p\",components:components},\"To get a basic service up and running, hit \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"kubectl run hello-minikube --image=gcr.io/google_containers/echoserver:1.4 --port=8080\"),\" and head to the VPC security network to update and expose that port to all IPs to prove that is all works correctly. The port will be dynamic.\"),React.createElement(MDXTag,{name:\"h3\",components:components,props:{\"id\":\"building-docker-containers\"}},\"Building Docker Containers\"),React.createElement(MDXTag,{name:\"p\",components:components},\"If installing onto Linux, check \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"https://docs.docker.com/install/linux/docker-ce/ubuntu/#install-docker-ce-1\")),React.createElement(MDXTag,{name:\"p\",components:components},\"To do a demo, \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"sudo apt-get install git\"),\" and \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"git clone https://github.com/wardviaene/docker-demo\"),\" to get a demo folder.\"),React.createElement(MDXTag,{name:\"p\",components:components},\"Change in, \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"sudo docker build .\"),\" and then to run the container use \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"docker run -p 3000:3000 -t <id>\")),React.createElement(MDXTag,{name:\"h3\",components:components,props:{\"id\":\"docker-registery\"}},\"Docker registery\"),React.createElement(MDXTag,{name:\"p\",components:components},\"To upload to the registry:\"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{}},\"docker login # fill in login details\\ndocker tag imageid okeeffed/docker-demo\\ndocker push okeeffed/docker-demo\\n\")),React.createElement(MDXTag,{name:\"p\",components:components},\"There are a few limitations for each Docker/Kubernetes relationship:\"),React.createElement(MDXTag,{name:\"ol\",components:components},React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ol\"},\"Don't try to create one giant docker image fo you app, but split it up if necessary.\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ol\"},\"All data in the container is not preserved. You need volumes for this.\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ol\"},\"Check 12factor.net for methodologies\")),React.createElement(MDXTag,{name:\"h3\",components:components,props:{\"id\":\"running-the-docker-app-on-kubernetes\"}},\"Running the Docker app on Kubernetes\"),React.createElement(MDXTag,{name:\"p\",components:components},\"We need to create a \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"pod definition\"),\".\"),React.createElement(MDXTag,{name:\"p\",components:components},\"This describes an application running on Kubernetes.\"),React.createElement(MDXTag,{name:\"p\",components:components},\"A pod can container \",React.createElement(MDXTag,{name:\"em\",components:components,parentName:\"p\"},\"one or more tightly coupled containers\"),\" that make up the app.\"),React.createElement(MDXTag,{name:\"p\",components:components},\"Those apps can easily communicate with each other using their local \",React.createElement(MDXTag,{name:\"strong\",components:components,parentName:\"p\"},\"port numbers\"),\".\"),React.createElement(MDXTag,{name:\"p\",components:components},\"The app for us at the moment has only one container.\"),React.createElement(MDXTag,{name:\"p\",components:components},\"To build this, we create a podfile with all the pod definition:\"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{\"className\":\"language-yaml\"}},\"# pod-helloworld.yml\\napiVersion: v1\\nkind: Pod\\nmetadata:\\n  name: nodehelloworld.example.com\\n  labels:\\n  app: helloworld\\nspec:\\n  containers:\\n  - name: k8s-demo\\n    image: okeeffed/docker-demo\\n    ports:\\n    - containerPort: 3000\\n\")),React.createElement(MDXTag,{name:\"p\",components:components},\"To create this pod, we run \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"kubectl create -f ./pod-helloworld.yml\")),React.createElement(MDXTag,{name:\"p\",components:components},React.createElement(MDXTag,{name:\"strong\",components:components,parentName:\"p\"},\"Some useful commands\")),React.createElement(MDXTag,{name:\"table\",components:components},React.createElement(MDXTag,{name:\"thead\",components:components,parentName:\"table\"},React.createElement(MDXTag,{name:\"tr\",components:components,parentName:\"thead\"},React.createElement(MDXTag,{name:\"th\",components:components,parentName:\"tr\",props:{\"align\":null}},\"Command\"),React.createElement(MDXTag,{name:\"th\",components:components,parentName:\"tr\",props:{\"align\":null}},\"Description\"))),React.createElement(MDXTag,{name:\"tbody\",components:components,parentName:\"table\"},React.createElement(MDXTag,{name:\"tr\",components:components,parentName:\"tbody\"},React.createElement(MDXTag,{name:\"td\",components:components,parentName:\"tr\",props:{\"align\":null}},\"kubectl get pod\"),React.createElement(MDXTag,{name:\"td\",components:components,parentName:\"tr\",props:{\"align\":null}},\"Get info about all running pods\")),React.createElement(MDXTag,{name:\"tr\",components:components,parentName:\"tbody\"},React.createElement(MDXTag,{name:\"td\",components:components,parentName:\"tr\",props:{\"align\":null}},\"kubectl describe pod \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"td\"},\"<pod>\")),React.createElement(MDXTag,{name:\"td\",components:components,parentName:\"tr\",props:{\"align\":null}},\"Describe one pod\")),React.createElement(MDXTag,{name:\"tr\",components:components,parentName:\"tbody\"},React.createElement(MDXTag,{name:\"td\",components:components,parentName:\"tr\",props:{\"align\":null}},\"kubectl expose pod \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"td\"},\"<pod>\"),\" --port=444 --name=frontend\"),React.createElement(MDXTag,{name:\"td\",components:components,parentName:\"tr\",props:{\"align\":null}},\"Expose the port of a pod (creates a new service)\")),React.createElement(MDXTag,{name:\"tr\",components:components,parentName:\"tbody\"},React.createElement(MDXTag,{name:\"td\",components:components,parentName:\"tr\",props:{\"align\":null}},\"kubectl port-forward \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"td\"},\"<pod>\"),\" 8080\"),React.createElement(MDXTag,{name:\"td\",components:components,parentName:\"tr\",props:{\"align\":null}},\"Port forward the local machine\")),React.createElement(MDXTag,{name:\"tr\",components:components,parentName:\"tbody\"},React.createElement(MDXTag,{name:\"td\",components:components,parentName:\"tr\",props:{\"align\":null}},\"kubectl attach \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"td\"},\"<podname>\"),\" -i\"),React.createElement(MDXTag,{name:\"td\",components:components,parentName:\"tr\",props:{\"align\":null}},\"Attach to pod\")),React.createElement(MDXTag,{name:\"tr\",components:components,parentName:\"tbody\"},React.createElement(MDXTag,{name:\"td\",components:components,parentName:\"tr\",props:{\"align\":null}},\"kubectl exec \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"td\"},\"<pod>\"),\" -- command\"),React.createElement(MDXTag,{name:\"td\",components:components,parentName:\"tr\",props:{\"align\":null}},\"Execute a command on the pod\")),React.createElement(MDXTag,{name:\"tr\",components:components,parentName:\"tbody\"},React.createElement(MDXTag,{name:\"td\",components:components,parentName:\"tr\",props:{\"align\":null}},\"kubectl label pods \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"td\"},\"<pod>\"),\" mylabel=awesome\"),React.createElement(MDXTag,{name:\"td\",components:components,parentName:\"tr\",props:{\"align\":null}},\"Add new label to pod\")),React.createElement(MDXTag,{name:\"tr\",components:components,parentName:\"tbody\"},React.createElement(MDXTag,{name:\"td\",components:components,parentName:\"tr\",props:{\"align\":null}},\"kubectl run -i -tty busybox --image=busybox --restart=Never -- sh\"),React.createElement(MDXTag,{name:\"td\",components:components,parentName:\"tr\",props:{\"align\":null}},\"Run a shell in a pod - very useful for debugging\")))),React.createElement(MDXTag,{name:\"h3\",components:components,props:{\"id\":\"how-to-port-forward\"}},\"How to port-forward\"),React.createElement(MDXTag,{name:\"p\",components:components},\"Running \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"kubectl describe pod nodehelloworld.example.com\"),\" will then give us info on what is going on here.\"),React.createElement(MDXTag,{name:\"p\",components:components},\"To listen locally, we can port-forward: \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"kubectl port-forward nodehelloworld.example.com 8081:3000\")),React.createElement(MDXTag,{name:\"h3\",components:components,props:{\"id\":\"exposing-the-pod\"}},\"Exposing the pod\"),React.createElement(MDXTag,{name:\"p\",components:components},React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"kubectl expose pod nodehelloworld.example.com --type=NodePort --name nodehelloworld-service\")),React.createElement(MDXTag,{name:\"p\",components:components},\"Check this with \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"kubectl get service\")),React.createElement(MDXTag,{name:\"p\",components:components},\"When you see what port is being forwarded, you can again open that up on the security settings and direct to that port.\"),React.createElement(MDXTag,{name:\"h3\",components:components,props:{\"id\":\"setting-up-the-external-load-balancer\"}},\"Setting up the external load balancer\"),React.createElement(MDXTag,{name:\"p\",components:components},\"This will allow the outside world to have traffic routed to the correct pod.\"),React.createElement(MDXTag,{name:\"p\",components:components},\"To create the service for this:\"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{\"className\":\"language-yaml\"}},\"apiVersion: v1\\nkind: Service\\nmetadata:\\n  name: helloworld-service\\nspec:\\n  ports:\\n  - port: 80\\n  targetPort: nodejs-port\\n  protocol: TCP\\n  selector:\\n  app: helloworld\\n  type: LoadBalancer\\n\")),React.createElement(MDXTag,{name:\"p\",components:components},\"Using \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"kubectl create -f <file>\"),\" will create the pods and kops will autoconfigure what is required.\"),React.createElement(MDXTag,{name:\"h2\",components:components,props:{\"id\":\"kubernetes-basics\"}},\"Kubernetes Basics\"),React.createElement(MDXTag,{name:\"h3\",components:components,props:{\"id\":\"node-architecture\"}},\"Node Architecture\"),React.createElement(MDXTag,{name:\"p\",components:components},\"Within each node can be a collection of pods routed by iptables and within each pod are the Docker containers.\"),React.createElement(MDXTag,{name:\"p\",components:components},\"These containers can talk easily to each other using localhost and ports.\"),React.createElement(MDXTag,{name:\"p\",components:components},\"Each node also has a \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"kubelet\"),\" and \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"kube-proxy\"),\". The \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"kubelet\"),\" talks to the master node and \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"kube-proxy\"),\" talks to the iptables.\"),React.createElement(MDXTag,{name:\"p\",components:components},\"A service itself can be like the load balancer. The service will be publicly available.\"),React.createElement(MDXTag,{name:\"p\",components:components},\"When we look deeper at a pod yaml file, we have the containers called as the specs.\"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{\"className\":\"language-yaml\"}},\"# pod-helloworld.yml\\napiVersion: v1\\nkind: Pod\\nmetadata:\\n  name: nodehelloworld.example.com\\n  labels:\\n  app: helloworld\\nspec:\\n  # The containers are listed here\\n  containers:\\n  - name: k8s-demo\\n    image: okeeffed/docker-demo\\n    ports:\\n    - containerPort: 3000\\n\")),React.createElement(MDXTag,{name:\"h3\",components:components,props:{\"id\":\"replication-controller\"}},\"Replication Controller\"),React.createElement(MDXTag,{name:\"h4\",components:components,props:{\"id\":\"scaling\"}},\"Scaling\"),React.createElement(MDXTag,{name:\"p\",components:components},\"If your application is \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"stateless\"),\" you can horizontally scale it.\"),React.createElement(MDXTag,{name:\"ul\",components:components},React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"Stateless = your appllication doesn't have a \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"li\"},\"state\"),\", it doesn't write any local files / keeps local sessions. This prevents pods from falling out of sync.\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"All traditional databases are \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"li\"},\"stateful\")),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"Most \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"li\"},\"web applications\"),\" can be made stateless\",React.createElement(MDXTag,{name:\"ul\",components:components,parentName:\"li\"},React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"Session management needs to be done outside the container\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"Any file to be saved cannot be saved locally\")))),React.createElement(MDXTag,{name:\"p\",components:components},\"If needed, you can use \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"volumes\"),\" to still run stateful apps.\"),React.createElement(MDXTag,{name:\"p\",components:components},\"Those stateful apps can't horizontally scale, but you can run them in a single container and vertically scale (allocate more CPU/Mem/Disk).\"),React.createElement(MDXTag,{name:\"p\",components:components},\"Scaling in Kubernetes can be done using the \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"Replication Controller\"),\".\"),React.createElement(MDXTag,{name:\"p\",components:components},\"The replication controller will ensure a specified number of pod replicas will run at all times.\"),React.createElement(MDXTag,{name:\"p\",components:components},\"A pod created with the replica controller will automatically be replaced if they fail, get deleted or are terminated.\"),React.createElement(MDXTag,{name:\"p\",components:components},\"Using the replication controller is also recommended if you just want to make sure 1 pod is always running, even after reboots.\"),React.createElement(MDXTag,{name:\"p\",components:components},\"You can then run a replication controller with just 1 replica to ensure that it is always running.\"),React.createElement(MDXTag,{name:\"p\",components:components},\"To create a replication controller:\"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{\"className\":\"language-yaml\"}},\"# rc-helloworld.yml\\napiVersion: v1\\nkind: ReplicationController # Changed from Pod\\nmetadata:\\n  name: helloworld-container\\nspec: # Replation controller also has a spec\\n  replicas: 2 # set two pod replicas\\n  selector:  # select the app\\n  app: helloworld\\n  template:\\n  # stand Pod metadata and spec\\n  metadata:\\n    name: nodehelloworld.example.com\\n    labels:\\n    app: helloworld\\n  spec:\\n    # The containers are listed here\\n    containers:\\n    - name: k8s-demo\\n      image: okeeffed/docker-demo\\n      ports:\\n      - containerPort: 3000\\n\")),React.createElement(MDXTag,{name:\"p\",components:components},\"When this controller is created with \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"kubectl\"),\", you will see that the two pods are created with a differing suffix.\"),React.createElement(MDXTag,{name:\"p\",components:components},\"Now we have horizontally scaled this pod.\"),React.createElement(MDXTag,{name:\"p\",components:components},\"If one of these pods is now deleted, the master node will automatically schedule a new one.\"),React.createElement(MDXTag,{name:\"p\",components:components},\"We can also scale this by using \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"kubectl scale --replicas=4 -f <replication-controller-name.yml>\"),\".\"),React.createElement(MDXTag,{name:\"p\",components:components},\"We can also use it with the following:\"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{}},\"kubectl get rc # get replication controllers\\n# assume helloworld-controller shows up\\nkubectl scale --replicas=1 rc/helloworld-container\\nkubectl get pods # will show only one pod remaining\\n\")),React.createElement(MDXTag,{name:\"h2\",components:components,props:{\"id\":\"deployments\"}},\"Deployments\"),React.createElement(MDXTag,{name:\"p\",components:components},\"Replication Set is the next gen Replication Controller:\"),React.createElement(MDXTag,{name:\"ul\",components:components},React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"It supports new selector that can do selection based on filtering according a set of values eg environment either \\\"dev\\\" or \\\"qa\\\"\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"It's not only based on equality. You can do more complex things.\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"This RS is used by the Deployment.\")),React.createElement(MDXTag,{name:\"p\",components:components},\"A deployment is a declaration that allows you to do app \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"deployments\"),\" and \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"updates\"),\".\"),React.createElement(MDXTag,{name:\"p\",components:components},\"When using the deployment object, you definte the \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"state\"),\" of your application. Kubernetes will then make sure the clusters matches your desired state.\"),React.createElement(MDXTag,{name:\"p\",components:components},\"Just using the replication controller or replication set might be cumbersome to deploy apps.\"),React.createElement(MDXTag,{name:\"p\",components:components},\"With a deployment object you can:\"),React.createElement(MDXTag,{name:\"ol\",components:components},React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ol\"},\"Create a deployment (e.g. deploying an app)\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ol\"},\"Update a deployment (e.g. new version)\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ol\"},\"Do rolling updates (zero downtime deployments)\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ol\"},\"Roll back\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ol\"},\"Pause/resume a deployment (ie rollout to only certain percentage of pods)\")),React.createElement(MDXTag,{name:\"p\",components:components},\"An example of a deployment:\"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{\"className\":\"language-yaml\"}},\"# deployment-helloworld.yml\\napiVersion: extensions/v1beta1\\nkind: Deployment # Changed from Pod\\nmetadata:\\n  name: helloworld-deployment\\nspec: # Replation controller also has a spec\\n  replicas: 3 # set two pod replicas\\n  template:\\n  # stand Pod metadata and spec\\n  metadata:\\n    labels:\\n    app: helloworld\\n  spec:\\n    # The containers are listed here\\n    containers:\\n    - name: k8s-demo\\n      image: okeeffed/docker-demo\\n      ports:\\n      - containerPort: 3000\\n\")),React.createElement(MDXTag,{name:\"h3\",components:components,props:{\"id\":\"useful-commands\"}},\"Useful commands\"),React.createElement(MDXTag,{name:\"table\",components:components},React.createElement(MDXTag,{name:\"thead\",components:components,parentName:\"table\"},React.createElement(MDXTag,{name:\"tr\",components:components,parentName:\"thead\"},React.createElement(MDXTag,{name:\"th\",components:components,parentName:\"tr\",props:{\"align\":null}},\"Command\"),React.createElement(MDXTag,{name:\"th\",components:components,parentName:\"tr\",props:{\"align\":null}},\"Description\"))),React.createElement(MDXTag,{name:\"tbody\",components:components,parentName:\"table\"},React.createElement(MDXTag,{name:\"tr\",components:components,parentName:\"tbody\"},React.createElement(MDXTag,{name:\"td\",components:components,parentName:\"tr\",props:{\"align\":null}},\"kubectl get deployments\"),React.createElement(MDXTag,{name:\"td\",components:components,parentName:\"tr\",props:{\"align\":null}},\"Get info on current deployments\")),React.createElement(MDXTag,{name:\"tr\",components:components,parentName:\"tbody\"},React.createElement(MDXTag,{name:\"td\",components:components,parentName:\"tr\",props:{\"align\":null}},\"kubectl get rs\"),React.createElement(MDXTag,{name:\"td\",components:components,parentName:\"tr\",props:{\"align\":null}},\"Get info about the replica set\")),React.createElement(MDXTag,{name:\"tr\",components:components,parentName:\"tbody\"},React.createElement(MDXTag,{name:\"td\",components:components,parentName:\"tr\",props:{\"align\":null}},\"kubectl get pods --show-labels\"),React.createElement(MDXTag,{name:\"td\",components:components,parentName:\"tr\",props:{\"align\":null}},\"Get pods + labels attached to pods\")),React.createElement(MDXTag,{name:\"tr\",components:components,parentName:\"tbody\"},React.createElement(MDXTag,{name:\"td\",components:components,parentName:\"tr\",props:{\"align\":null}},\"kubectl rollout status deployment/helloworld-deployment\"),React.createElement(MDXTag,{name:\"td\",components:components,parentName:\"tr\",props:{\"align\":null}},\"Get deployment status\")),React.createElement(MDXTag,{name:\"tr\",components:components,parentName:\"tbody\"},React.createElement(MDXTag,{name:\"td\",components:components,parentName:\"tr\",props:{\"align\":null}},\"kubectl set image deployment/helloworld-deployment k8s-demo=k8s-demo:2\"),React.createElement(MDXTag,{name:\"td\",components:components,parentName:\"tr\",props:{\"align\":null}},\"Run k8s-demo with the image label version 2\")),React.createElement(MDXTag,{name:\"tr\",components:components,parentName:\"tbody\"},React.createElement(MDXTag,{name:\"td\",components:components,parentName:\"tr\",props:{\"align\":null}},\"kubectl edit deployment/helloworld-deployment\"),React.createElement(MDXTag,{name:\"td\",components:components,parentName:\"tr\",props:{\"align\":null}},\"Edit the deployment object\")),React.createElement(MDXTag,{name:\"tr\",components:components,parentName:\"tbody\"},React.createElement(MDXTag,{name:\"td\",components:components,parentName:\"tr\",props:{\"align\":null}},\"kubectl rollout status deployment/helloworld-deployment\"),React.createElement(MDXTag,{name:\"td\",components:components,parentName:\"tr\",props:{\"align\":null}},\"Get the status of the rollout\")),React.createElement(MDXTag,{name:\"tr\",components:components,parentName:\"tbody\"},React.createElement(MDXTag,{name:\"td\",components:components,parentName:\"tr\",props:{\"align\":null}},\"kubectl rollout history \",\"[deployment]\"),React.createElement(MDXTag,{name:\"td\",components:components,parentName:\"tr\",props:{\"align\":null}},\"Get the rollout history\")),React.createElement(MDXTag,{name:\"tr\",components:components,parentName:\"tbody\"},React.createElement(MDXTag,{name:\"td\",components:components,parentName:\"tr\",props:{\"align\":null}},\"kubectl rollout undo \",\"[deployment]\"),React.createElement(MDXTag,{name:\"td\",components:components,parentName:\"tr\",props:{\"align\":null}},\"Rollback to previous version\")),React.createElement(MDXTag,{name:\"tr\",components:components,parentName:\"tbody\"},React.createElement(MDXTag,{name:\"td\",components:components,parentName:\"tr\",props:{\"align\":null}},\"kubectl rollout undo \",\"[deployment]\",\" --to-revision=n\"),React.createElement(MDXTag,{name:\"td\",components:components,parentName:\"tr\",props:{\"align\":null}},\"Rollback to previous version\")))),React.createElement(MDXTag,{name:\"h3\",components:components,props:{\"id\":\"demo-deployment-notes\"}},\"Demo: Deployment notes\"),React.createElement(MDXTag,{name:\"p\",components:components},\"Again, get pods will sho the pods with appended suffixes auto-determined by Kubernetes.\"),React.createElement(MDXTag,{name:\"p\",components:components},\"You can verify rollout status using the commands above.\"),React.createElement(MDXTag,{name:\"h2\",components:components,props:{\"id\":\"services\"}},\"Services\"),React.createElement(MDXTag,{name:\"p\",components:components},\"Pods themselves are very dynamic, they come and go on the Kubernetes cluster.\"),React.createElement(MDXTag,{name:\"ul\",components:components},React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"When using a \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"li\"},\"Replication Controller\"),\", pods are termined and created during scaling operations.\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"Wehn using \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"li\"},\"Deployments\"),\", when updating the image version, pods are terminated and new pods take the place of older pods.\")),React.createElement(MDXTag,{name:\"p\",components:components},\"That's why Pods should never be accessed directly, but always through a Service.\"),React.createElement(MDXTag,{name:\"p\",components:components},\"A service is the \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"logical bridge\"),\" between the \\\"mortal\\\" pods and other services or end-users.\"),React.createElement(MDXTag,{name:\"p\",components:components},\"When using the \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"kubectl expose\"),\" command, you create a service for you pod to be accessed externally.\"),React.createElement(MDXTag,{name:\"p\",components:components},\"Creating a service will create an endpoint for your pod(s):\"),React.createElement(MDXTag,{name:\"ol\",components:components},React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ol\"},\"A ClusterIP: a virtual IP address only reachable from within the cluster (this is default)\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ol\"},\"A NodePort: a port that is the same on each node that is also reachable externally.\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ol\"},\"A LoadBalancer: created by the Cloud provider that will route external traffic on every node on the NodePort\")),React.createElement(MDXTag,{name:\"p\",components:components},\"The options shown only allow virtual IPs and ports.\"),React.createElement(MDXTag,{name:\"p\",components:components},\"There is also a possibility to use \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"DNS Names\")),React.createElement(MDXTag,{name:\"p\",components:components},\"The \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"ExternalName\"),\" can provide a DNS name for the service e.g. for service discovery using DNS.\"),React.createElement(MDXTag,{name:\"p\",components:components},\"This \",React.createElement(MDXTag,{name:\"strong\",components:components,parentName:\"p\"},\"only\"),\" works when the DNS add-on is enabled.\"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{\"className\":\"language-yaml\"}},\"# helloworld-service.yml\\napiVersion: v1\\nkind: Service\\nmetadata:\\n  name: helloworld-service\\nspec:\\n  ports: # specify the ports the service uses\\n  - port: 31001\\n    nodePort: 31001\\n    # name below defined from pod\\n    targetPort: nodejs-port\\n    protocol: TCP\\n  selector:\\n  # service for this app\\n  app: helloworld\\n  type: NodePort\\n\")),React.createElement(MDXTag,{name:\"h2\",components:components,props:{\"id\":\"tags\"}},\"Tags\"),React.createElement(MDXTag,{name:\"p\",components:components},\"Similar to Labels for AWS\"),React.createElement(MDXTag,{name:\"p\",components:components},\"For example, you can label your objects.\"),React.createElement(MDXTag,{name:\"p\",components:components},\"For instance: Key could be \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"environment\"),\", and the value could be \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"dev\"),\"/\",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"staging\"),\"/\",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"qa\"),\"/\",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"prod\"),\".\"),React.createElement(MDXTag,{name:\"p\",components:components},\"Maybe you could also tag the department that is comes from etc.\"),React.createElement(MDXTag,{name:\"p\",components:components},\"Labels are not unique. You can then use \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"label selectors\"),\" to match labels.\"),React.createElement(MDXTag,{name:\"p\",components:components},\"Eg. a particular pod can only run on a node label with \\\"evironment\\\" equals \\\"development\\\".\"),React.createElement(MDXTag,{name:\"p\",components:components},\"More complex matching: \\\"environment\\\" in \\\"development\\\" or \\\"qa\\\".\"),React.createElement(MDXTag,{name:\"p\",components:components},\"You can also use labels to tag nodes. Once tagged, you can use labels selectors to let pods only run on specific nodes.\"),React.createElement(MDXTag,{name:\"p\",components:components},\"There are two steps required to run a pod on a specific set of nodes:\"),React.createElement(MDXTag,{name:\"ol\",components:components},React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ol\"},\"First you tag the node\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ol\"},\"Then you add a \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"li\"},\"nodeSelector\"),\" to your pod configuration\")),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{}},\"kubectl label nodes node1 hardware=high-spec\\nkubectl label nodes node1 hardware=low-spec\\n\")),React.createElement(MDXTag,{name:\"p\",components:components},\"Secondly, add a pod that uses those labels:\"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{\"className\":\"language-yaml\"}},\"# pod-helloworld.yml\\napiVersion: v1\\nkind: Pod\\nmetadata:\\n  name: nodehelloworld.example.com\\n  labels:\\n  app: helloworld\\nspec:\\n  # The containers are listed here\\n  containers:\\n  - name: k8s-demo\\n    image: okeeffed/docker-demo\\n    ports:\\n    - containerPort: 3000\\n  nodeSelector:\\n  hardware: high-spec\\n\")),React.createElement(MDXTag,{name:\"h3\",components:components,props:{\"id\":\"demo-using-tags\"}},\"Demo: Using tags\"),React.createElement(MDXTag,{name:\"p\",components:components},\"It only really makes sense if you have multiple nodes (doesn't really make sense on minikube).\"),React.createElement(MDXTag,{name:\"h2\",components:components,props:{\"id\":\"healthchecks\"}},\"Healthchecks\"),React.createElement(MDXTag,{name:\"p\",components:components},\"If the application malfunctions, the pod and container may still be running but the application may no longer be running. This is where health checks come in.\"),React.createElement(MDXTag,{name:\"p\",components:components},\"Two types:\"),React.createElement(MDXTag,{name:\"ol\",components:components},React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ol\"},\"Running a command in the container periodically\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ol\"},\"Periodic checks on a URL\")),React.createElement(MDXTag,{name:\"p\",components:components},\"The typical prod application behind a load balancer should always have health checks implemented in some way to ensure availability and resiliency.\"),React.createElement(MDXTag,{name:\"p\",components:components},\"Below you can see where the healthcheck is. You can check the port or container port name.\"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{\"className\":\"language-yaml\"}},\"# pod-helloworld.yml\\napiVersion: v1\\nkind: Pod\\nmetadata:\\n  name: nodehelloworld.example.com\\n  labels:\\n  app: helloworld\\nspec:\\n  # The containers are listed here\\n  containers:\\n  - name: k8s-demo\\n    image: okeeffed/docker-demo\\n    ports:\\n    - containerPort: 3000\\n    # @@@ This is the health check\\n    livenessProbe:\\n    httpGet:\\n      path: /\\n      port: 3000\\n    initialDelaySeconds: 15\\n    timeoutSeconds: 30\\n\")),React.createElement(MDXTag,{name:\"h2\",components:components,props:{\"id\":\"secrets\"}},\"Secrets\"),React.createElement(MDXTag,{name:\"p\",components:components},\"A way to distribute credentials, keys, passwords or secret data to the pods.\"),React.createElement(MDXTag,{name:\"p\",components:components},\"Kubernetes itself uses this Secrets mechanism to provide the credentials to access the internal API.\"),React.createElement(MDXTag,{name:\"p\",components:components},\"You can use the same mechanism to provide secrets to your application.\"),React.createElement(MDXTag,{name:\"p\",components:components},React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"secrets\"),\" is just one way to provide secrets that is native to Kubernetes. There are still other ways to do this.\"),React.createElement(MDXTag,{name:\"h3\",components:components,props:{\"id\":\"how-to-use-them\"}},\"How to use them\"),React.createElement(MDXTag,{name:\"ul\",components:components},React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"Use as env vars\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"Use as a file in a pod\",React.createElement(MDXTag,{name:\"ul\",components:components,parentName:\"li\"},React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"This requires volumes to be mounted\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"In this volume you have files\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"This can be use for things like dotenv files\"))),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"You can use an external image to pull secrets (private image registry)\")),React.createElement(MDXTag,{name:\"p\",components:components},\"Generating:\"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{\"className\":\"language-bash\"}},\"echo -n \\\"root\\\" > ./username.txt\\necho -n \\\"password\\\" > ./password.txt\\nkubectl create secret generic db-user-pass --from-file=./username.txt --from-file=./password.txt\\n# > secret \\\"db-user-pass\\\" created\\n\")),React.createElement(MDXTag,{name:\"p\",components:components},\"A secret can also be a SSH key or SSL cert.\"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{\"className\":\"language-bash\"}},\"kubectl create secret generic ssl-cert --from-file=ssh-privatekey=~/.ssh/id_rsa --ssl-cert-=ssl-cert=mysslcert.crt\\n\")),React.createElement(MDXTag,{name:\"p\",components:components},\"To generate secrets using yaml defs:\"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{\"className\":\"language-yaml\"}},\"apiVersion: v1\\nkind: Secret\\nmetadata:\\n  name: db-secret\\ntype: Opaque\\ndata:\\n  password: pwd\\n  username: usr\\n\")),React.createElement(MDXTag,{name:\"p\",components:components},\"Then, you can generate it as base64 like so:\"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{\"className\":\"language-bash\"}},\"echo -n \\\"password\\\" | base64\\n# > pwd\\n\\nkubectl create -f secrets-db-secret.yml\\n# > secret \\\"db-secret\\\" created\\n\")),React.createElement(MDXTag,{name:\"p\",components:components},\"To create a pod that uses secrets:\"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{\"className\":\"language-yaml\"}},\"# pod-helloworld.yml w/ secrets\\napiVersion: v1\\nkind: Pod\\nmetadata:\\n  name: nodehelloworld.example.com\\n  labels:\\n  app: helloworld\\nspec:\\n  # The containers are listed here\\n  containers:\\n  - name: k8s-demo\\n    image: okeeffed/docker-demo\\n    ports:\\n    - containerPort: 3000\\n    # @@@ This are the envs\\n    env:\\n    - name: SECRET_USERNAME\\n      valueFrom:\\n      secretKeyRef:\\n        name: db-secret\\n        key: username\\n    - name: SECRET_PASSWORD\\n      [...]\\n\")),React.createElement(MDXTag,{name:\"p\",components:components},\"Alternatively when providing in a file:\"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{\"className\":\"language-yaml\"}},\"# pod-helloworld.yml w/ secrets\\napiVersion: v1\\nkind: Pod\\nmetadata:\\n  name: nodehelloworld.example.com\\n  labels:\\n  app: helloworld\\nspec:\\n  # The containers are listed here\\n  containers:\\n  - name: k8s-demo\\n  image: okeeffed/docker-demo\\n  ports:\\n  - containerPort: 3000\\n  # @@@ This are the envs in a volume mount\\n  volumeMounts:\\n  - name: credvolume\\n    mountPath: /etc/creds\\n    readOnly: true\\n  volumes:\\n  - name: credvolume\\n  secret:\\n    secretName: db-secrets\\n\")),React.createElement(MDXTag,{name:\"h3\",components:components,props:{\"id\":\"demo-wordpress-secrets\"}},\"Demo: Wordpress Secrets\"),React.createElement(MDXTag,{name:\"p\",components:components},\"This demo ends up creating a secrets file, a pod definition and a service to expose the wordpress pod.\"),React.createElement(MDXTag,{name:\"p\",components:components},\"However, note that deleting the current setup will result in a container restarting to maintain state, but when that happens the WordPress site has to be re-installed because the data was not saved. The solution for this will be in the volumes lab.\"),React.createElement(MDXTag,{name:\"h2\",components:components,props:{\"id\":\"web-ui\"}},\"Web UI\"),React.createElement(MDXTag,{name:\"p\",components:components},\"Kubernetes comes with a \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"Web UI\"),\" you can use instead of kubectl commands.\"),React.createElement(MDXTag,{name:\"p\",components:components},\"You can use it to:\"),React.createElement(MDXTag,{name:\"ol\",components:components},React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ol\"},\"Get an overview of running applications on your cluster\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ol\"},\"Creating and modifying individual Kubernetes resources and workloads (like kubectl create and delete)\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ol\"},\"Retrieve info on state or resources.\")),React.createElement(MDXTag,{name:\"p\",components:components},\"You can reach this UI at \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"https://<kubernetes-master>/ui\")),React.createElement(MDXTag,{name:\"p\",components:components},\"If you cannot access it, you can install it manually:\"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{\"className\":\"language-bash\"}},\"kubectl create -f https://rawgit.com/kubernetes/dashboard/master/src/deploy/kubernetes-dashboard.yaml\\n# If the password is asked\\nkubectl config view\\n\\n# If you're on minikube\\nminikube dashboard # or --url for the url\\n\")),React.createElement(MDXTag,{name:\"h3\",components:components,props:{\"id\":\"demo-web-ui\"}},\"Demo: Web UI\"),React.createElement(MDXTag,{name:\"p\",components:components},\"Using the web ui you can see some really interesting info and graphs on usage.\"),React.createElement(MDXTag,{name:\"h1\",components:components,props:{\"id\":\"advanced-topics\"}},\"Advanced Topics\"),React.createElement(MDXTag,{name:\"h2\",components:components,props:{\"id\":\"service-discovery\"}},\"Service Discovery\"),React.createElement(MDXTag,{name:\"p\",components:components},\"As of Kubernetes 1.3, DNS is a \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"built-in\"),\" service launched automatically using the addon manager.\"),React.createElement(MDXTag,{name:\"p\",components:components},\"The addons are in the \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"/etc/kubernetes/addons\"),\" directory on the master node.\"),React.createElement(MDXTag,{name:\"p\",components:components},\"The service can be used within pods to find other services running on the same cluster.\"),React.createElement(MDXTag,{name:\"p\",components:components},\"Multiple containers within 1 pod don't need this service, as they can contact each other directly. A container in the same pod can just use \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"localhost:port\"),\".\"),React.createElement(MDXTag,{name:\"p\",components:components},\"To make DNS work, a pod will need a \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"service definition\"),\".\"),React.createElement(MDXTag,{name:\"p\",components:components},\"How can app 1 reach app 2 using DNS? The container itself can talk to the service of App 2.\"),React.createElement(MDXTag,{name:\"p\",components:components},\"If you ran the host for \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"app1-service\"),\" and got back 10.0.0.1, \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"host app2-service\"),\" could get back 10.0.0.2.\"),React.createElement(MDXTag,{name:\"p\",components:components},\"Examples from the CL\"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{\"className\":\"language-bash\"}},\"host app1-service\\n# has addr 10.0.0.1\\nhost app2-service\\n# has addr 10.0.0.2\\nhost app2-service.default\\n# app2-service.default has address 10.0.0.2\\nhost app2-service.default.svc.cluster.local\\n# app2-service.default.svc.cluster.local has addr 10.0.0.2\\n\")),React.createElement(MDXTag,{name:\"p\",components:components},\"The \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"default\"),\" stands for default namespace. Pods and services can be launched in different namespaces (to logically seperate your cluster).\"),React.createElement(MDXTag,{name:\"p\",components:components},\"So how does this resolution work?\"),React.createElement(MDXTag,{name:\"p\",components:components},\"Say we have a pod and we run \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"kubectl run -i -tty busybox --image=busybox --restart=Never -- sh\"),\" and the from the shell run \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"cat /etc/resolv.conf\"),\", can can see that there will be a \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"nameserver\"),\". If you do a lookup of the service name in this folder, you'll see why the above works with \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\".default\"),\" and \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\".default.svc.whatever\"),\".\"),React.createElement(MDXTag,{name:\"h3\",components:components,props:{\"id\":\"demo-service-discovery\"}},\"Demo: Service Discovery\"),React.createElement(MDXTag,{name:\"p\",components:components},\"After creating a secrets type, pod type for a database (SQL using the secrets), and a service for exposing certain ports for the database and then deploying three replicas for a \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"helloworld-deployment\"),\" that also has a \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"index-db.js\"),\" file which we run \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"node index-db.js\"),\" which will have code that works on the service. The value of the \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"MYSQL_HOST\"),\" being set to \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"database-service\"),\" will resolve with the database-service.yml file where the metadata \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"name\"),\" is \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"database-service\"),\".\"),React.createElement(MDXTag,{name:\"p\",components:components},\"Running \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"kubectl get pod\"),\" we should see the database plus 3 pods running for the deployment.\"),React.createElement(MDXTag,{name:\"p\",components:components},\"Running \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"kubectl logs [deployment-name]\"),\" will also show us the logs for that pod.\"),React.createElement(MDXTag,{name:\"p\",components:components},\"Again, remember that running \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"kubectl get svc\"),\" will get all the services available.\"),React.createElement(MDXTag,{name:\"h2\",components:components,props:{\"id\":\"configmap\"}},\"ConfigMap\"),React.createElement(MDXTag,{name:\"p\",components:components},\"Config params that are not secret can be put in the ConfigMap.\"),React.createElement(MDXTag,{name:\"p\",components:components},\"The input is again key-value pairs.\"),React.createElement(MDXTag,{name:\"p\",components:components},\"The \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"ConfigMap\"),\" key-value pairs can then be read by the app using:\"),React.createElement(MDXTag,{name:\"ol\",components:components},React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ol\"},\"Env variables\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ol\"},\"Container commandline args in the Pod config\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ol\"},\"Using volumes\")),React.createElement(MDXTag,{name:\"p\",components:components},\"It can also contain full config files eg. a webserver config file. Then that file can then be mounted using volumes where the application expects its config file.\"),React.createElement(MDXTag,{name:\"p\",components:components},\"This was you can \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"inject\"),\" config settings into containers without changing the container itself.\"),React.createElement(MDXTag,{name:\"p\",components:components},\"To generate a configmap using files:\"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{\"className\":\"language-bash\"}},\"$ cat << EOF > app.properties\\ndriver=jdbc\\ndatabase=postgres\\nlookandfeel=1\\notherparams=xyz\\nparam.with.hierarchy=xyz\\nEOF\\n$ kubectl create configmap app-config --from-file=app.properties\\n\")),React.createElement(MDXTag,{name:\"p\",components:components},\"How to use it? You can create a pod that exposes the ConfigMap using a volume.\"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{\"className\":\"language-yaml\"}},\"# pod-helloworld.yml w/ secrets\\napiVersion: v1\\nkind: Pod\\nmetadata:\\n  name: nodehelloworld.example.com\\n  labels:\\n  app: helloworld\\nspec:\\n  # The containers are listed here\\n  containers:\\n  - name: k8s-demo\\n  image: okeeffed/docker-demo\\n  ports:\\n  - containerPort: 3000\\n  # @@@ This are the envs in a volume mount\\n  volumeMounts:\\n  - name: credvolume\\n    mountPath: /etc/creds\\n    readOnly: true\\n  # @@@ For the ConfigMap\\n  - name: config-volume\\n    mountPath: /etc/config\\n  volumes:\\n  - name: credvolume\\n  secret:\\n    secretName: db-secrets\\n  # @@@ For the ConfigMap\\n  - name: config-volume\\n  configMap:\\n    name: app-config\\n\")),React.createElement(MDXTag,{name:\"p\",components:components},\"From \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"/etc/config\"),\" , the config values will be stored in files at \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"/etc/config/driver\"),\" and \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"/etc/config/param/with/hierarchy\"),\".\"),React.createElement(MDXTag,{name:\"p\",components:components},\"This is an example of a pod that exposes the ConfigMap as env variables:\"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{\"className\":\"language-yaml\"}},\"# pod-helloworld.yml w/ secrets\\napiVersion: v1\\nkind: Pod\\nmetadata:\\n  name: nodehelloworld.example.com\\n  labels:\\n  app: helloworld\\nspec:\\n  # The containers are listed here\\n  containers:\\n  - name: k8s-demo\\n  image: okeeffed/docker-demo\\n  ports:\\n  - containerPort: 3000\\n  # @@@ This are the envs in a volume mount\\n  env:\\n  - name: DRIVER\\n    valueFrom: # where you get the value from\\n    configMapKeyRef: # ensuring the ref comes from the configMap\\n    name: app-config\\n    key: driver\\n  - name: DATABASE\\n  [ ... ]\\n\")),React.createElement(MDXTag,{name:\"h3\",components:components,props:{\"id\":\"demo-config-map\"}},\"Demo: Config Map\"),React.createElement(MDXTag,{name:\"p\",components:components},\"Using an example for a reverse proxy config for NGINX:\"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{}},\"server {\\n  listen  80;\\n  server_name localhost;\\n\\n  location / {\\n  proxy_bind 127.0.0.1;\\n  proxy_pass http://127.0.0.1:3000;\\n  }\\n\\n  error_page  500 502 503 504 /50x.html;\\n  location = /50x.html {\\n  root    /usr/share/nginx/html;\\n  }\\n}\\n\")),React.createElement(MDXTag,{name:\"p\",components:components},\"We could then create this config map with \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"kubectl create configmap nginx-config --from-file=reverseproxy.conf\"),\".\"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{\"className\":\"language-yaml\"}},\"# pod-helloworld.yml w/ secrets\\napiVersion: v1\\nkind: Pod\\nmetadata:\\n  name: hellonginx.example.com\\n  labels:\\n  app: hellonginx\\nspec:\\n  # The containers are listed here\\n  containers:\\n    - name: nginx\\n    image: nginx:1.11\\n    ports:\\n    - containerPort: 80\\n    # @@@ The import conf stuff\\n    volumeMounts:\\n    - name: config-volume\\n        mountPath: /etc/nginx/conf.d\\n  - name: k8s-demo\\n  image: okeeffed/docker-demo\\n  ports:\\n    - containerPort: 3000\\n  # @@@ The important mounting\\n  volumes:\\n    - name: config-volume # @@@ this is referred to above in volumeMounts\\n    configMap:\\n        name: nginx-config\\n        items:\\n        - key: reverseproxy.conf\\n        path: reverseproxy.conf\\n\")),React.createElement(MDXTag,{name:\"p\",components:components},\"After then also creating the service, we can grab the minikube service url and use curl to get info on that request. From here, would could see that it is \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"nginx\"),\" answer the request and transferring it to the Node port.\"),React.createElement(MDXTag,{name:\"p\",components:components},\"If we then want to jump into the nginx container to see what is going on, we can run \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"kubectl exec -i -t helloworld-nginx -c nginx -- bash\"),\" (-c flag to specify container) and run \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"ps x\"),\" to see the processes and we can \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"cat /etc/nginx/conf.d/reverseproxy.conf\"),\".\"),React.createElement(MDXTag,{name:\"p\",components:components},\"At this stage, we can enable SSL for NGINX.\"),React.createElement(MDXTag,{name:\"h2\",components:components,props:{\"id\":\"ingress-controller\"}},\"Ingress Controller\"),React.createElement(MDXTag,{name:\"p\",components:components},\"Ingress a solution since Kub 1.1 that allows inbound connections to the cluster.\"),React.createElement(MDXTag,{name:\"p\",components:components},\"It's an alternative to the external \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"LoadBalancer\"),\" and \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"nodePorts\"),\". It allows you to easily expose services that need to be accessible from outside to the cluster.\"),React.createElement(MDXTag,{name:\"p\",components:components},\"With ingress you can run your own ingress controller (basically a loudbalancer) within the Kub Cluster.\"),React.createElement(MDXTag,{name:\"p\",components:components},\"There are default ingress controller available, or you can write your own ingress controller.\"),React.createElement(MDXTag,{name:\"p\",components:components},\"How does it work? If you connect over 80/443 you will first hit the \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"Ingress Controller\"),\". You can use the NGINX controller that comes with Kubernetes. That controller will the dirrect all the traffic.\"),React.createElement(MDXTag,{name:\"p\",components:components},\"The \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"ingress rules\"),\" could define that if you go to \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"host-x.example.com\"),\" you go to \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"Pod 1\"),\" etc. You can even redirect slash URLs specifically.\"),React.createElement(MDXTag,{name:\"p\",components:components},\"To create an Ingress Controller:\"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{\"className\":\"language-yaml\"}},\"# ingress-controller.yml w/ secrets\\napiVersion: extensions/v1beta1\\nkind: Ingress\\nmetadata:\\n  name: helloworld-rules\\nspec:\\n  # @@@ Setting the important rules\\n  rules:\\n    - host: helloworld-v1.example.com\\n      http:\\n        paths:\\n          - path: /\\n          backend:\\n            serviceName: helloworld-v1\\n            servicePort: 80\\n    - host: helloworld-v2.example.com\\n      http:\\n        paths:\\n          - path: /\\n          backend:\\n            serviceName: helloworld-v2\\n            servicePort: 80\\n\")),React.createElement(MDXTag,{name:\"h3\",components:components,props:{\"id\":\"demo-ingress-controller\"}},\"Demo: Ingress Controller\"),React.createElement(MDXTag,{name:\"p\",components:components},\"In the example, the ingress controller is a \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"Replication Controller\"),\" to ensure that there is always one up and running.\"),React.createElement(MDXTag,{name:\"p\",components:components},\"After deploying, if we curl with the -H host flag with \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"helloworld-v1.whatever.com\"),\" and v2 respectively, it would have the ingress controller route to each server.\"),React.createElement(MDXTag,{name:\"h2\",components:components,props:{\"id\":\"external-dns\"}},\"External DNS\"),React.createElement(MDXTag,{name:\"p\",components:components},\"On public cloud providers, you can use the ingress controller to \",React.createElement(MDXTag,{name:\"strong\",components:components,parentName:\"p\"},\"reduce the cost of your LoadBalancers\"),\".\"),React.createElement(MDXTag,{name:\"ul\",components:components},React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"You could use 1 LoadBalancer that captures all the external traffic and send it to the ingress controller.\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"IngCont can be configured to route the different traffic to all your apps based on HTTP rules.\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"Only works for HTTP(s)-based apps\")),React.createElement(MDXTag,{name:\"p\",components:components},\"The External DNS tool will automatically create the necessary DNS records in your external DNS server (like route53).\"),React.createElement(MDXTag,{name:\"ul\",components:components},React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"For every hostname used in ingress, it'll create a new record to send traffic to load balancer.\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"The major DNS providers are supported: Route53, Google CloudDNS, CloudFlare etc.\")),React.createElement(MDXTag,{name:\"p\",components:components},React.createElement(MDXTag,{name:\"img\",components:components,parentName:\"p\",props:{\"src\":\"https://res.cloudinary.com/gitgoodclub/image/upload/v1539998347/Screen_Shot_2018-10-20_at_12.18.14_pm.png\",\"alt\":\"Diagram\"}})),React.createElement(MDXTag,{name:\"h2\",components:components,props:{\"id\":\"volumes\"}},\"Volumes\"),React.createElement(MDXTag,{name:\"p\",components:components},\"How can we run stateful apps?\"),React.createElement(MDXTag,{name:\"p\",components:components},\"Volumes in kubernetes allow you to store data outside of the container. So far, all the applications have been stateless for this reason. This can be done with external services like a database, caching server (eg MySQL, AWS S3).\"),React.createElement(MDXTag,{name:\"p\",components:components},\"Persistent Volumes in Kubernetes allow you to attach a volume to a container that exists even when the container stops. Volumes can be attached using different volume plugins. Eg local volume, EBS Storage etc.\"),React.createElement(MDXTag,{name:\"h3\",components:components,props:{\"id\":\"using-ebs-storage\"}},\"Using EBS Storage\"),React.createElement(MDXTag,{name:\"p\",components:components},\"With this, we can keep state. You could run a \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"MySQL\"),\" database using persistent volumes, although this may not be ready for production yet.\"),React.createElement(MDXTag,{name:\"p\",components:components},\"The use case is that if your node stops working, the pod can be rescheduled on another node, and the volume can be attached to the new node.\"),React.createElement(MDXTag,{name:\"p\",components:components},\"To use volumes, you first need to create the volume:\"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{\"className\":\"language-bash\"}},\"aws ec2 create-volume --sze 1- --region us-east-1 --availability-zone us-east-1 --volume-type gp2\\n\")),React.createElement(MDXTag,{name:\"p\",components:components},\"Next, we need to create a pod with a volume def:\"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{\"className\":\"language-yaml\"}},\"# pod-helloworld.yml w/ secrets\\napiVersion: v1\\nkind: Pod\\nmetadata:\\n  name: hellonginx.example.com\\n  labels:\\n  app: hellonginx\\nspec:\\n  # The containers are listed here\\n  containers:\\n    - name: k8s-demo\\n    image: okeeffed/k8s-demo\\n    volumeMounts:\\n    - name: myvolume\\n      mountPath: myvolume\\n  # @@@ The important mounting\\n  volumes:\\n    - name: myvolume # @@@ this is referred to above in volumeMounts\\n      awsElasticBlockStore:\\n        volumeID: vol-9835id\\n\")),React.createElement(MDXTag,{name:\"h3\",components:components,props:{\"id\":\"demo-volumes\"}},\"Demo: Volumes\"),React.createElement(MDXTag,{name:\"p\",components:components},\"Using Vagrant for kops, we can first create a volume using the above mentioned command.\"),React.createElement(MDXTag,{name:\"p\",components:components},\"After receiving a response, you can replace the .yml pod definition config file to attach that volumeID. Once the deployment is created and deployed. \"),React.createElement(MDXTag,{name:\"ul\",components:components},React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"After create and confirmation, we can get the pod name \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"li\"},\"kubectl get pod\"),\" and attach \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"li\"},\"kubectl exec helloworld-deployment-923id -i -t -- bash\"),\" and then run \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"li\"},\"ls -ahl /myvol/\"),\" to check for volume.\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"If we run \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"li\"},\"echo 'test' > /myvol/myvol.txt\"),\" and \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"li\"},\"echo 'test 2' > /test.txt\"),\", we know that the latter file will not persist if the pod is restarted/rescheduled.\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"If we run \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"li\"},\"kubectl drain ip --force\"),\" we can drain the pod. Assuming this is a \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"li\"},\"Replication Controller\"),\" or \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"li\"},\"Deployment\"),\", another container should spin up.\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"Once that pod is attached to another node, we can also attach back to the pod on the new node with the \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"li\"},\"exec\"),\" command and we can confirm that the \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"li\"},\"/myvol/myvol.txt\"),\" is still there, although the other \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"li\"},\"/test.txt\"),\" is no longer there since it was not saved to the volume.\")),React.createElement(MDXTag,{name:\"p\",components:components},\"If you need to remove the ebs volume, you can run \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"aws ec2 delete-volume --volume-id vol-[id]\"),\".\"),React.createElement(MDXTag,{name:\"h2\",components:components,props:{\"id\":\"volume-provisioning\"}},\"Volume Provisioning\"),React.createElement(MDXTag,{name:\"p\",components:components},\"The kubs plugins have the capability to \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"provision storage\"),\" for you. The AWS Plugin can for instance \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"provision storage\"),\" for you by creating the volumes in AWS before attaching them to a node.\"),React.createElement(MDXTag,{name:\"p\",components:components},\"This is done using the \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"StorageClass\"),\" object -- this is beta for the course but should be stable soon.\"),React.createElement(MDXTag,{name:\"p\",components:components},\"To use autoprovisioing, create the following:\"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{\"className\":\"language-yaml\"}},\"# storage.yml\\nkind: StorageClass\\napiVersion: storage.k8s.io/v1\\nmetadata:\\n  name: standard\\nprovisioner: kubernetes.io/aws-ebs\\nparameters:\\n  type: gp2\\n  zone: ap-southeast-1\\n\")),React.createElement(MDXTag,{name:\"p\",components:components},\"Next, you can create a volume claim and specify the size:\"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{\"className\":\"language-yaml\"}},\"# my-volume-claim.yml\\nkind: PersistentVolumeClaim\\napiVersion: v1\\nmetadata:\\n  name: myclaim\\n  annotations:\\n    volume.beta.kubernetes.io/storage-class: \\\"standard\\\"\\nspec:\\n  accessModes:\\n    - ReadWriteOnce\\n  resources:\\n    requests:\\n      storage: 8Gi\\n\")),React.createElement(MDXTag,{name:\"p\",components:components},\"Finally, if launching a pod:\"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{\"className\":\"language-yaml\"}},\"# pod-helloworld.yml w/ secrets\\napiVersion: v1\\nkind: Pod\\nmetadata:\\n  name: mypod\\nspec:\\n  # The containers are listed here\\n  containers:\\n    - name: myfrontend\\n    image: nginx\\n    volumeMounts:\\n    - name: mypd\\n      mountPath: '/var/www/html'\\n  # @@@ The important mounting\\n  volumes:\\n    - name: mypd # @@@ this is referred to above in volumeMounts\\n      persistentVolumeClaim:\\n        claimName: myclaim # @@@ refers to my claim from the previous type definition\\n\")),React.createElement(MDXTag,{name:\"h2\",components:components,props:{\"id\":\"demo-using-wordpress-with-volumes\"}},\"Demo: Using Wordpress with Volumes\"),React.createElement(MDXTag,{name:\"p\",components:components},\"After declaring a \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"StorageClass\"),\" class from a yaml file and a \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"PersistentVolumeClaim\"),\" class.\"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{\"className\":\"language-yaml\"}},\"# storage.yml\\nkind: StorageClass\\napiVersion: storage.k8s.io/v1beta1\\nmetadata:\\n  name: standard\\nprovisioner: kubernetes.io/aws-ebs\\nparameters:\\n  type: gp2\\n  zone: eu-west-1a\\n\")),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{\"className\":\"language-yaml\"}},\"# PV Claim\\nkind: PersistentVolumeClaim\\napiVersion: v1\\nmetadata:\\n  name: db-storage\\n  annotations:\\n    volume.beta.kubernetes.io/storage-class: \\\"standard\\\"\\nspec:\\n  accessModes:\\n    - ReadWriteOnce\\n  resources:\\n    requests:\\n      storage: 8Gi\\n\")),React.createElement(MDXTag,{name:\"p\",components:components},\"There is also a simple ReplicationController for the Wordpress DB. In the spe for the container for mysql, we declare where the \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"mountPath\"),\" will be.\"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{\"className\":\"language-yaml\"}},\"apiVersion: v1\\nkind: ReplicationController\\nmetadata:\\n  name: wordpress-db\\nspec:\\n  replicas: 1\\n  selector:\\n    app: wordpress-db\\n  template:\\n    metadata:\\n      name: wordpress-db\\n      labels:\\n        app: wordpress-db\\n    spec:\\n      containers:\\n      - name: mysql\\n        image: mysql:5.7\\n        args:\\n          - \\\"--ignore-db-dir=lost+found\\\"\\n        ports:\\n        - name: mysql-port\\n          containerPort: 3306\\n        env:\\n          - name: MYSQL_ROOT_PASSWORD\\n            valueFrom:\\n              secretKeyRef:\\n                name: wordpress-secrets\\n                key: db-password\\n        volumeMounts:\\n        - mountPath: \\\"/var/lib/mysql\\\"\\n          name: mysql-storage\\n      volumes:\\n        - name: mysql-storage\\n          persistentVolumeClaim:\\n            claimName: db-storage\\n\")),React.createElement(MDXTag,{name:\"p\",components:components},\"Having a makeshift secrets file for secrets:\"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{\"className\":\"language-yaml\"}},\"apiVersion: v1\\nkind: Secret\\nmetadata:\\n  name: wordpress-secrets\\ntype: Opaque\\ndata:\\n  db-password: cGFzc3dvcmQ=\\n  # random sha1 strings - change all these lines\\n  authkey: MTQ3ZDVhMTIzYmU1ZTRiMWQ1NzUyOWFlNWE2YzRjY2FhMDkyZGQ4OA==\\n  loggedinkey: MTQ3ZDVhMTIzYmU1ZTRiMWQ1NzUyOWFlNWE2YzRjY2FhMDkyZGQ4OQ==\\n  secureauthkey: MTQ3ZDVhMTIzYmU1ZTRiMWQ1NzUyOWFlNWE2YzRjY2FhMDkyZGQ5MQ==\\n  noncekey: MTQ3ZDVhMTIzYmU1ZTRiMWQ1NzUyOWFlNWE2YzRjY2FhMDkyZGQ5MA==\\n  authsalt: MTQ3ZDVhMTIzYmU1ZTRiMWQ1NzUyOWFlNWE2YzRjY2FhMDkyZGQ5Mg==\\n  secureauthsalt: MTQ3ZDVhMTIzYmU1ZTRiMWQ1NzUyOWFlNWE2YzRjY2FhMDkyZGQ5Mw==\\n  loggedinsalt: MTQ3ZDVhMTIzYmU1ZTRiMWQ1NzUyOWFlNWE2YzRjY2FhMDkyZGQ5NA==\\n  noncesalt: MTQ3ZDVhMTIzYmU1ZTRiMWQ1NzUyOWFlNWE2YzRjY2FhMDkyZGQ5NQ==\\n\")),React.createElement(MDXTag,{name:\"p\",components:components},\"To open up the service for the port:\"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{\"className\":\"language-yaml\"}},\"apiVersion: v1\\nkind: Service\\nmetadata:\\n  name: wordpress-db\\nspec:\\n  ports:\\n  - port: 3306\\n    protocol: TCP\\n  selector:\\n    app: wordpress-db\\n  type: NodePort\\n\")),React.createElement(MDXTag,{name:\"p\",components:components},\"Opening up the web and web service:\"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{\"className\":\"language-yaml\"}},\"apiVersion: extensions/v1beta1\\nkind: Deployment\\nmetadata:\\n  name: wordpress-deployment\\nspec:\\n  replicas: 2\\n  template:\\n    metadata:\\n      labels:\\n        app: wordpress\\n    spec:\\n      containers:\\n      - name: wordpress\\n        image: wordpress:4-php7.0\\n        # uncomment to fix perm issue, see also https://github.com/kubernetes/kubernetes/issues/2630\\n        # command: ['bash', '-c', 'chown www-data:www-data /var/www/html/wp-content/uploads && apache2-foreground']\\n        ports:\\n        - name: http-port\\n          containerPort: 80\\n        env:\\n          - name: WORDPRESS_DB_PASSWORD\\n            valueFrom:\\n              secretKeyRef:\\n                name: wordpress-secrets\\n                key: db-password\\n          - name: WORDPRESS_AUTH_KEY\\n            valueFrom:\\n              secretKeyRef:\\n                name: wordpress-secrets\\n                key: authkey\\n          - name: WORDPRESS_LOGGED_IN_KEY\\n            valueFrom:\\n              secretKeyRef:\\n                name: wordpress-secrets\\n                key: loggedinkey\\n          - name: WORDPRESS_SECURE_AUTH_KEY\\n            valueFrom:\\n              secretKeyRef:\\n                name: wordpress-secrets\\n                key: secureauthkey\\n          - name: WORDPRESS_NONCE_KEY\\n            valueFrom:\\n              secretKeyRef:\\n                name: wordpress-secrets\\n                key: noncekey\\n          - name: WORDPRESS_AUTH_SALT\\n            valueFrom:\\n              secretKeyRef:\\n                name: wordpress-secrets\\n                key: authsalt\\n          - name: WORDPRESS_SECURE_AUTH_SALT\\n            valueFrom:\\n              secretKeyRef:\\n                name: wordpress-secrets\\n                key: secureauthsalt\\n          - name: WORDPRESS_LOGGED_IN_SALT\\n            valueFrom:\\n              secretKeyRef:\\n                name: wordpress-secrets\\n                key: loggedinsalt\\n          - name: WORDPRESS_NONCE_SALT\\n            valueFrom:\\n              secretKeyRef:\\n                name: wordpress-secrets\\n                key: noncesalt\\n          - name: WORDPRESS_DB_HOST\\n            value: wordpress-db\\n        volumeMounts:\\n        # shared storage for things like media\\n        - mountPath: /var/www/html/wp-content/uploads\\n          name: uploads\\n      volumes:\\n      - name: uploads\\n        nfs:\\n          server: eu-west-1a.fs-5714e89e.efs.eu-west-1.amazonaws.com\\n          path: /\\n\")),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{\"className\":\"language-yaml\"}},\"apiVersion: v1\\nkind: Service\\nmetadata:\\n  name: wordpress\\nspec:\\n  ports:\\n  - port: 80\\n    targetPort: http-port\\n    protocol: TCP\\n  selector:\\n    app: wordpress\\n  type: LoadBalancer\\n\")),React.createElement(MDXTag,{name:\"p\",components:components},\"With the AWS Commandline, you can create a file system and mount target. For the fs, run \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"aws efs create-file-system --creation-token\"),\" and then after grabbing the file-system-id and subnet-id, you can run \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"aws efs create-mount-target --file-system-id <id> --security-groups <sg>\"),\". Ensure in the above \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"nfs\"),\" volume you update the fs id.\"),React.createElement(MDXTag,{name:\"h2\",components:components,props:{\"id\":\"pod-presets\"}},\"Pod Presets\"),React.createElement(MDXTag,{name:\"p\",components:components},\"Pod presets can inject information into pods at runtime.\"),React.createElement(MDXTag,{name:\"ul\",components:components},React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"Used to inject Kubernetes Resources like Secrets, ConfigMaps, Volumes and Environment variables. \")),React.createElement(MDXTag,{name:\"p\",components:components},\"Imagine you have 20 apps to deploy, all with a specific credential. You can edit the 20 specs and add the creds, or you can use presets to create 1 \",React.createElement(MDXTag,{name:\"strong\",components:components,parentName:\"p\"},\"Preset Object\"),\", which will \",React.createElement(MDXTag,{name:\"strong\",components:components,parentName:\"p\"},\"inject an environment variable or config file to all matching pods.\")),React.createElement(MDXTag,{name:\"p\",components:components},\"When injecting env vars and volume mounts, the Pod Preset will apply the changes to ll containers within the pod.\"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{\"className\":\"language-yaml\"}},\"# PodPreset File\\napiVersion: settings.k8s.io/v1alpha1\\nkind: PodPreset\\nmetadata:\\n  name: allow-database\\nspec:\\n  selector:\\n    matchLabels:\\n      role: frontend\\n  env:\\n    - name: DB_PORT\\n      value: '6379'\\n  volumeMounts:\\n    - mountPath: /cache\\n      name: cache-volume\\n  volumes:\\n    - name: cache-volume\\n      emptyDir: {}\\n\")),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{\"className\":\"language-yml\"}},\"# Pod file using PodPreset\\napiVersion: v1\\nkind: Pod\\nmetadata:\\n  name: website\\n  labels:\\n    app: website\\n    role: frontend\\nspec:\\n  containers:\\n    - name: website\\n      image: nginx\\n      ports:\\n        - containerPort: 80\\n\")),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{\"className\":\"language-bash\"}},\"$ kubectl create -f pod-preset.yml\\n$ kubectl create -f pod.yml\\n\")),React.createElement(MDXTag,{name:\"h2\",components:components,props:{\"id\":\"stateful-sets---formerly-pet-sets\"}},\"Stateful Sets - (formerly Pet Sets)\"),React.createElement(MDXTag,{name:\"p\",components:components},\"Stateful dist apps - new feature from Kub 1.3.\"),React.createElement(MDXTag,{name:\"p\",components:components},\"It is introduced to be able to run \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"stateful applications\"),\" that need:\"),React.createElement(MDXTag,{name:\"ol\",components:components},React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ol\"},\"A stable pod hostname (instead of podname-randomstr) - will have an index ie podname-0, podname-1 etc.\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ol\"},\"Stateful app requires multi pods with vols based on their ordinal number. Currently deleting and/or scaling a PetSet down will not deleted volumes associated.\")),React.createElement(MDXTag,{name:\"p\",components:components},\"A pet set will allow your stateful app to use DNS to find out peers. One running node of the Pet Set is called a \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"Pet\"),\". Using Pet Sets you can run for instance 5 cassandra nodes on Kubs named cass-1 until cass-5.\"),React.createElement(MDXTag,{name:\"p\",components:components},\"The big difference is that you don't want to connect just any specific service, you want to make sure pod whatever definitely connects to another pod.\"),React.createElement(MDXTag,{name:\"p\",components:components},\"This pet set also allows order to startup and teardown of pets.\"),React.createElement(MDXTag,{name:\"p\",components:components},\"Still a lot of work for future work.\"),React.createElement(MDXTag,{name:\"h2\",components:components,props:{\"id\":\"daemon-sets\"}},\"Daemon Sets\"),React.createElement(MDXTag,{name:\"ul\",components:components},React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"Ensure that every single node in the Kubernetes cluster runs the same pod resource. This is useful to ensure a certain pod is running on every single kubernetes node.\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"When a node is added to the cluster, a new pod will be started automatically\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"Same when a node is removed, the pod will not be rescheduled on another node\")),React.createElement(MDXTag,{name:\"p\",components:components},\"Use cases:\"),React.createElement(MDXTag,{name:\"ol\",components:components},React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ol\"},\"Logging aggregators\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ol\"},\"Monitoring\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ol\"},\"Load Balancers/Reverse Proxies/API Gateways\")),React.createElement(MDXTag,{name:\"h2\",components:components,props:{\"id\":\"resource-usage-monitoring\"}},\"Resource Usage Monitoring\"),React.createElement(MDXTag,{name:\"ul\",components:components},React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"Heapster enables \",React.createElement(MDXTag,{name:\"strong\",components:components,parentName:\"li\"},\"Container Cluster Monitoring\"),\" and \",React.createElement(MDXTag,{name:\"strong\",components:components,parentName:\"li\"},\"Performance Analysis\"),\".\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"It's providing a monitoring platform for Kubernetes.\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"It's a prerequisite if you want to do \",React.createElement(MDXTag,{name:\"strong\",components:components,parentName:\"li\"},\"pod auto-scaling\"),\" in Kubernetes.\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"Heapster exports cluster metrix \",React.createElement(MDXTag,{name:\"strong\",components:components,parentName:\"li\"},\"via REST endpoints\"),\".\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"You can use different backends with Heapster.\",React.createElement(MDXTag,{name:\"ul\",components:components,parentName:\"li\"},React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"Demo uses \",React.createElement(MDXTag,{name:\"strong\",components:components,parentName:\"li\"},\"InfluxDB\"),\", but Kafka is also possible.\"))),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"Visualisations can be shown with Grafana. \",React.createElement(MDXTag,{name:\"ul\",components:components,parentName:\"li\"},React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"Kubernetes dashboard will also show graphs once monitoring is enabled.\"))),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"All these technologies can be started in pods\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"The \",React.createElement(MDXTag,{name:\"strong\",components:components,parentName:\"li\"},\"yaml files\"),\" can be found on the github repo of Heapster.\")),React.createElement(MDXTag,{name:\"p\",components:components},\"Since Heapster is now deprecated, you would have to use \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"metrics-server\"),\" or an alternative like \",React.createElement(MDXTag,{name:\"strong\",components:components,parentName:\"p\"},\"Prometheus\"),\".\"),React.createElement(MDXTag,{name:\"h2\",components:components,props:{\"id\":\"horiztonal-pod-autoscaling\"}},\"Horiztonal Pod Autoscaling\"),React.createElement(MDXTag,{name:\"p\",components:components},React.createElement(MDXTag,{name:\"a\",components:components,parentName:\"p\",props:{\"href\":\"https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale-walkthrough/\"}},\"Link to main Kubernetes site\")),React.createElement(MDXTag,{name:\"ul\",components:components},React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},React.createElement(MDXTag,{name:\"p\",components:components,parentName:\"li\"},\"Kubernetes has the possibility to autoscale pods based on metrics.\")),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},React.createElement(MDXTag,{name:\"p\",components:components,parentName:\"li\"},\"Kubernetes can autoscale Deployment, Replication Controller or ReplicaSet.\")),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},React.createElement(MDXTag,{name:\"p\",components:components,parentName:\"li\"},\"In Kubernetes 1.3 \",React.createElement(MDXTag,{name:\"strong\",components:components,parentName:\"p\"},\"scaling based on CPU\"),\" usage is possible out of the box.\"),React.createElement(MDXTag,{name:\"ul\",components:components,parentName:\"li\"},React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"Application based metrics are also available (like queries per second or average request latency).\",React.createElement(MDXTag,{name:\"ul\",components:components,parentName:\"li\"},React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"To enable, the cluster has to be started with env var ENABLE_CUSTOM_METRICS to be true.\"))))),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},React.createElement(MDXTag,{name:\"p\",components:components,parentName:\"li\"},\"It will periodically query the utilization for the targeted pods.\"),React.createElement(MDXTag,{name:\"ul\",components:components,parentName:\"li\"},React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"By default 30 sec, can be changed using the \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"li\"},\"--horizontal-pod-autoscaler-sync-period\"),\"flag when launching the controller manager.\"))),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},React.createElement(MDXTag,{name:\"p\",components:components,parentName:\"li\"},\"Requires the metrics system to work.\"))),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{\"className\":\"language-yaml\"}},\"apiVersion: autoscaling/v1\\nkind: HorizontalPodAutoscaler\\nmetadata:\\n  name: hpa-example-autoscaler\\nspec:\\n  scaleTargetRef:\\n    apiVersion: extensions/v1beta1\\n    kind: Deployment\\n    name: hpa-example\\n  minReplicas: 1\\n  maxReplicas: 10\\n  targetCPUUtilizationPercentage: 50\\n\")),React.createElement(MDXTag,{name:\"h2\",components:components,props:{\"id\":\"affinityanti-affinity\"}},\"Affinity/Anti-Affinity\"),React.createElement(MDXTag,{name:\"ul\",components:components},React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"The affinity/anti-affinity feature allows you to do \",React.createElement(MDXTag,{name:\"strong\",components:components,parentName:\"li\"},\"more complex scheduling\"),\" than the nodeSelector and also \",React.createElement(MDXTag,{name:\"strong\",components:components,parentName:\"li\"},\"works on Pods\"),\".\",React.createElement(MDXTag,{name:\"ul\",components:components,parentName:\"li\"},React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"The language is \",React.createElement(MDXTag,{name:\"strong\",components:components,parentName:\"li\"},\"more expressive\"),\".\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"You can create \",React.createElement(MDXTag,{name:\"strong\",components:components,parentName:\"li\"},\"rules that are not hard requirements\"),\", but rather a \",React.createElement(MDXTag,{name:\"strong\",components:components,parentName:\"li\"},\"preferred rule\"),\", meaning that the scheduler will stil be able to schedule your pod, even if the rules cannot be met.\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"You can create rules to take other pod labels into account\",React.createElement(MDXTag,{name:\"ul\",components:components,parentName:\"li\"},React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"Example, you can make sure two different pods are never on the same node.\"))))),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"Kubernetes can do \",React.createElement(MDXTag,{name:\"strong\",components:components,parentName:\"li\"},\"node affinity\"),\" and \",React.createElement(MDXTag,{name:\"strong\",components:components,parentName:\"li\"},\"pod affinity/anti-affinity\"),\".\",React.createElement(MDXTag,{name:\"ul\",components:components,parentName:\"li\"},React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"Node affinity is similar to the nodeSelector.\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"Pod affinity/anti-affinity allows you to create rules \",React.createElement(MDXTag,{name:\"strong\",components:components,parentName:\"li\"},\"how pods should be scheduled taking into account other running pods\"),\".\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"Affinity/anti-affinity mechanism is only relevant during scheduling, once a pod is running, it'll need to be recreated to apply the rules again.\"))),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"There are currently 2 types you can use for node affinity:\",React.createElement(MDXTag,{name:\"ul\",components:components,parentName:\"li\"},React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"1) requiredDuringSchedulingIgnoredDuringExecution\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"2) preferredDuringSchedulingIgnoredDuringExecution\"))),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"The \",React.createElement(MDXTag,{name:\"strong\",components:components,parentName:\"li\"},\"first one\"),\" sets a \",React.createElement(MDXTag,{name:\"strong\",components:components,parentName:\"li\"},\"hard requirement\"),\" (like the nodeSelector).\",React.createElement(MDXTag,{name:\"ul\",components:components,parentName:\"li\"},React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"The rules must be met before the pod can be scheduled.\"))),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"The \",React.createElement(MDXTag,{name:\"strong\",components:components,parentName:\"li\"},\"second type\"),\" will try to enforce the rule, but it will not guarantee it.\",React.createElement(MDXTag,{name:\"ul\",components:components,parentName:\"li\"},React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"Even if the rule is not met, the pod can still be scheduled, it's a soft requirement, a preference.\")))),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{\"className\":\"language-yaml\"}},\"apiVersion: apps/v1\\nkind: Deployment\\nmetadata:\\n  name: <% helloworld-deployment %>\\nspec:\\n  replicas: 2\\n  template:\\n    metadata:\\n      labels:\\n        app: <% app_name %>\\n    spec:\\n      affinity:\\n        nodeAffinity:\\n          requiredDuringSchedulingIgnoredDuringExecution:\\n            nodeSelectorTerms:\\n              - matchExpressions:\\n                  - key: env\\n                    operator: In\\n                    values:\\n                      - dev\\n          preferredDuringSchedulingIgnoredDuringExecution:\\n            - weight: 1 # higher the weighting, the more emphasis on rule\\n              preference:\\n                matchExpressions:\\n                  - key: team\\n                    operator: In\\n                    values:\\n                      - engineering-project1\\n      containers:\\n        - name: k8s-demo\\n          image: <% image_name %>\\n          port:\\n            - containerPort: 3000\\n\")),React.createElement(MDXTag,{name:\"p\",components:components},\"When scheduling, Kubernetes will score every node by summarizing the weightings per node.\"),React.createElement(MDXTag,{name:\"ul\",components:components},React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"Eg two different rules with weights 1and 5.\",React.createElement(MDXTag,{name:\"ul\",components:components,parentName:\"li\"},React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"If both rules match, score 6.\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"If only rule with weight 1 matches, score 1.\"))),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"The node that has the highest total score, that's where the pod will be scheduled on.\")),React.createElement(MDXTag,{name:\"h2\",components:components,props:{\"id\":\"313-interpod-affinityanti-affinity\"}},\"3.13 Interpod Affinity/Anti-Affinity\"),React.createElement(MDXTag,{name:\"ul\",components:components},React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"This allows you to influence scheduling based on the labels of other pods that are \",React.createElement(MDXTag,{name:\"strong\",components:components,parentName:\"li\"},\"already running\"),\" on the cluster.\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"Pods belong to a namespace, so rules apply to namespace (default to pod name).\")),React.createElement(MDXTag,{name:\"p\",components:components},\"Two types:\"),React.createElement(MDXTag,{name:\"ol\",components:components},React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ol\"},\"requiredDuringSchedulingIgnoredDuringExecution\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ol\"},\"preferredDuringSchedulingIgnoredDuringExecution\")),React.createElement(MDXTag,{name:\"p\",components:components},\"The required type create rules that must be met for the pod to be scheduled, the preferred type is a \\\"soft\\\" type and the rules may be met.\"),React.createElement(MDXTag,{name:\"p\",components:components},\"A good use case for \",React.createElement(MDXTag,{name:\"strong\",components:components,parentName:\"p\"},\"pod affinity is co-located pods\"),\".\"),React.createElement(MDXTag,{name:\"ul\",components:components},React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"Example, you have an app that uses redis as cache and you want to have the Redis pod on the same node as the app itself.\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"Another use-case is to co-locate pods within the \",React.createElement(MDXTag,{name:\"strong\",components:components,parentName:\"li\"},\"same availability zone\"),\".\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"When writing your pod affinity and anti-affinity rules, you need to specify a \",React.createElement(MDXTag,{name:\"strong\",components:components,parentName:\"li\"},\"topology domain\"),\", called \",React.createElement(MDXTag,{name:\"strong\",components:components,parentName:\"li\"},\"topologyKey\"),\" in the rules.\",React.createElement(MDXTag,{name:\"ul\",components:components,parentName:\"li\"},React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"Key refers to a node label.\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"If affinity rule matches, \",React.createElement(MDXTag,{name:\"strong\",components:components,parentName:\"li\"},\"new pod\"),\" will only be scheduled on \",React.createElement(MDXTag,{name:\"strong\",components:components,parentName:\"li\"},\"nodes\"),\" that have the \",React.createElement(MDXTag,{name:\"strong\",components:components,parentName:\"li\"},\"same topologyKey\"),\" value as the \",React.createElement(MDXTag,{name:\"strong\",components:components,parentName:\"li\"},\"current running pod\"),\".\")))),React.createElement(MDXTag,{name:\"p\",components:components},React.createElement(MDXTag,{name:\"img\",components:components,parentName:\"p\",props:{\"src\":\"https://res.cloudinary.com/gitgoodclub/image/upload/v1540165720/Screen_Shot_2018-10-22_at_10.48.04_am.png\",\"alt\":\"Interpod Affinity and anti-affinity\"}})),React.createElement(MDXTag,{name:\"p\",components:components},React.createElement(MDXTag,{name:\"img\",components:components,parentName:\"p\",props:{\"src\":\"https://res.cloudinary.com/gitgoodclub/image/upload/v1540165853/Screen_Shot_2018-10-22_at_10.50.27_am.png\",\"alt\":\"Zone topology\"}})),React.createElement(MDXTag,{name:\"h3\",components:components,props:{\"id\":\"anti-affinity\"}},\"Anti-affinity\"),React.createElement(MDXTag,{name:\"p\",components:components},\"You can use anti-affinity to make sure a \",React.createElement(MDXTag,{name:\"strong\",components:components,parentName:\"p\"},\"pod is only scehduled once on a node\"),\".\"),React.createElement(MDXTag,{name:\"ul\",components:components},React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"Example 3 nodes and you want to schedule 2 pods but they shouldn't be on the same node.\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"Pod anti-affinity allows you to create a rule that say to \",React.createElement(MDXTag,{name:\"strong\",components:components,parentName:\"li\"},\"not schedule on the same host if a pod label matches\"),\".\")),React.createElement(MDXTag,{name:\"p\",components:components},React.createElement(MDXTag,{name:\"img\",components:components,parentName:\"p\",props:{\"src\":\"https://res.cloudinary.com/gitgoodclub/image/upload/v1540165853/Screen_Shot_2018-10-22_at_10.50.27_am.png\",\"alt\":\"Anti-affinity\"}})),React.createElement(MDXTag,{name:\"h3\",components:components,props:{\"id\":\"topology-operators\"}},\"Topology operators\"),React.createElement(MDXTag,{name:\"ul\",components:components},React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"In\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"NotIn\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"Exists\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"DoesNotExist\")),React.createElement(MDXTag,{name:\"p\",components:components},\"Affinity requires a substantial amount of processor. Take this into account if you have a lot of rules.\"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{\"className\":\"language-yaml\"}},\"# pod-affinity.yml\\napiVersion: extensions/v1beta1\\nkind: Deployment\\nmetadata:\\n  name: pod-affinity-1\\nspec:\\n  replicas: 1\\n  template:\\n    metadata:\\n      labels:\\n        app: pod-affinity-1\\n    spec:\\n      containers:\\n      - name: k8s-demo\\n        image: wardviaene/k8s-demo\\n        ports:\\n        - name: nodejs-port\\n          containerPort: 3000\\n---\\napiVersion: extensions/v1beta1\\nkind: Deployment\\nmetadata:\\n  name: pod-affinity-2\\nspec:\\n  replicas: 1\\n  template:\\n    metadata:\\n      labels:\\n        app: pod-affinity-2\\n    spec:\\n      affinity:\\n        podAffinity:\\n          requiredDuringSchedulingIgnoredDuringExecution:\\n            - labelSelector:\\n                matchExpressions:\\n                  - key: \\\"app\\\"\\n                    operator: In\\n                    values:\\n                    - pod-affinity-1\\n              topologyKey: \\\"kubernetes.io/hostname\\\" # this could be change for zoning\\n      containers:\\n      - name: redis\\n        image: redis\\n        ports:\\n        - name: redis-port\\n          containerPort: 6379\\n\")),React.createElement(MDXTag,{name:\"p\",components:components},\"We can then check this is fine by running \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"kubectl get pod -o wide\"),\" to see the Node the pods are running on.\"),React.createElement(MDXTag,{name:\"p\",components:components},\"As for anti-affinity:\"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{\"className\":\"language-yaml\"}},\"apiVersion: extensions/v1beta1\\nkind: Deployment\\nmetadata:\\n  name: pod-affinity-1\\nspec:\\n  replicas: 1\\n  template:\\n    metadata:\\n      labels:\\n        app: pod-affinity-1\\n    spec:\\n      containers:\\n      - name: k8s-demo\\n        image: wardviaene/k8s-demo\\n        ports:\\n        - name: nodejs-port\\n          containerPort: 3000\\n---\\napiVersion: extensions/v1beta1\\nkind: Deployment\\nmetadata:\\n  name: pod-affinity-2\\nspec:\\n  replicas: 3\\n  template:\\n    metadata:\\n      labels:\\n        app: pod-affinity-2\\n    spec:\\n      affinity:\\n        podAffinity:\\n          requiredDuringSchedulingIgnoredDuringExecution:\\n            - labelSelector:\\n                matchExpressions:\\n                  - key: \\\"app\\\"\\n                    operator: In\\n                    values:\\n                    - pod-affinity-1\\n              topologyKey: \\\"kubernetes.io/hostname\\\"\\n      containers:\\n      - name: redis\\n        image: redis\\n        ports:\\n        - name: redis-port\\n          containerPort: 6379\\n---\\napiVersion: extensions/v1beta1\\nkind: Deployment\\nmetadata:\\n  name: pod-affinity-3\\nspec:\\n  replicas: 3\\n  template:\\n    metadata:\\n      labels:\\n        app: pod-affinity-3\\n    spec:\\n      affinity:\\n        podAntiAffinity:\\n          requiredDuringSchedulingIgnoredDuringExecution:\\n            - labelSelector:\\n                matchExpressions:\\n                  - key: \\\"app\\\"\\n                    operator: In\\n                    values:\\n                    - pod-affinity-1\\n              topologyKey: \\\"kubernetes.io/hostname\\\"\\n      containers:\\n      - name: k8s-demo\\n        image: wardviaene/k8s-demo\\n        ports:\\n        - name: nodejs-port\\n          containerPort: 3000\\n---\\napiVersion: extensions/v1beta1\\nkind: Deployment\\nmetadata:\\n  name: pod-affinity-4\\nspec:\\n  replicas: 1\\n  template:\\n    metadata:\\n      labels:\\n        app: pod-affinity-4\\n    spec:\\n      affinity:\\n        podAntiAffinity:\\n          requiredDuringSchedulingIgnoredDuringExecution:\\n            - labelSelector:\\n                matchExpressions:\\n                  - key: \\\"app\\\"\\n                    operator: In\\n                    values:\\n                    - pod-affinity-1\\n                    - pod-affinity-3\\n              topologyKey: \\\"kubernetes.io/hostname\\\"\\n      containers:\\n      - name: k8s-demo\\n        image: wardviaene/k8s-demo\\n        ports:\\n        - name: nodejs-port\\n          containerPort: 3000\\n---\\n\")),React.createElement(MDXTag,{name:\"p\",components:components},React.createElement(MDXTag,{name:\"img\",components:components,parentName:\"p\",props:{\"src\":\"https://res.cloudinary.com/gitgoodclub/image/upload/v1540170357/Screen_Shot_2018-10-22_at_12.05.28_pm.png\",\"alt\":\"Resulting run with the affinity/anti-affinity\"}})),React.createElement(MDXTag,{name:\"p\",components:components},\"Note that there are differences between \",React.createElement(MDXTag,{name:\"strong\",components:components,parentName:\"p\"},\"preferred\"),\" and \",React.createElement(MDXTag,{name:\"strong\",components:components,parentName:\"p\"},\"required\"),\". With preferred, you may still have the pod scheduled in events we don't necessarily want as a best case scenario.\"),React.createElement(MDXTag,{name:\"h2\",components:components,props:{\"id\":\"314-taints-and-tolerations\"}},\"3.14 Taints and Tolerations\"),React.createElement(MDXTag,{name:\"p\",components:components},\"Tolerations is the opposite of node affinity.\"),React.createElement(MDXTag,{name:\"ul\",components:components},React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"Allows a node to \",React.createElement(MDXTag,{name:\"strong\",components:components,parentName:\"li\"},\"repels a set of pods\"),\".\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},React.createElement(MDXTag,{name:\"strong\",components:components,parentName:\"li\"},\"Taints mark\"),\" a node, tolerations are applied to pods to influence the scheduling of a pod.\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"One use case for taints is to make sure that when you create a new pod, they're not scheduled on the master (\",React.createElement(MDXTag,{name:\"strong\",components:components,parentName:\"li\"},\"node-role.kubernetes.io/master:NoSchedule\"),\"). This is the default.\")),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{\"className\":\"language-bash\"}},\"# To add a taint\\n$ kubectl taint nodes node1 key=value:NoSchedule # This will make sure that no pods will be scheduled on node1 as long as they don't have a matching toleration\\n\")),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{\"className\":\"language-yaml\"}},\"# tolerations.yml\\napiVersion: extensions/v1beta1\\nkind: Deployment\\nmetadata:\\n  name: tolerations-1\\nspec:\\n  replicas: 3\\n  template:\\n    metadata:\\n      labels:\\n        app: tolerations-1\\n    spec:\\n      containers:\\n      - name: k8s-demo\\n        image: wardviaene/k8s-demo\\n        ports:\\n        - name: nodejs-port\\n          containerPort: 3000\\n---\\napiVersion: extensions/v1beta1\\nkind: Deployment\\nmetadata:\\n  name: tolerations-2\\nspec:\\n  replicas: 3\\n  template:\\n    metadata:\\n      labels:\\n        app: tolerations-2\\n    spec:\\n      tolerations:\\n      - key: \\\"type\\\"\\n        operator: \\\"Equal\\\"\\n        value: \\\"specialnode\\\"\\n        effect: \\\"NoSchedule\\\"\\n      containers:\\n      - name: k8s-demo\\n        image: wardviaene/k8s-demo\\n        ports:\\n        - name: nodejs-port\\n          containerPort: 3000\\n\")),React.createElement(MDXTag,{name:\"h3\",components:components,props:{\"id\":\"tolerations-usage\"}},\"Tolerations usage\"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{\"className\":\"language-bash\"}},\"# Taint a node\\n$ kubectl taint nodes NODE-NAME type=specialnode:NoSchedule\\n\\n# Taint with NoExecute\\n$ kubectl taint nodes NODE-NAME testkey=testvalue:NoExecute\\n\")),React.createElement(MDXTag,{name:\"h3\",components:components,props:{\"id\":\"keys\"}},\"Keys\"),React.createElement(MDXTag,{name:\"ul\",components:components},React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"Operators\",React.createElement(MDXTag,{name:\"ul\",components:components,parentName:\"li\"},React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},React.createElement(MDXTag,{name:\"strong\",components:components,parentName:\"li\"},\"Equal\"),\" (providing key + value)\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},React.createElement(MDXTag,{name:\"strong\",components:components,parentName:\"li\"},\"Exists\"),\" (only providing a key, checking only whether a key exists)\"))),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"Effects\",React.createElement(MDXTag,{name:\"ul\",components:components,parentName:\"li\"},React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},React.createElement(MDXTag,{name:\"strong\",components:components,parentName:\"li\"},\"NoSchedule\"),\" (hard requirement that apod will not be scheduled unless there is a matching toleration)\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},React.createElement(MDXTag,{name:\"strong\",components:components,parentName:\"li\"},\"PreferNoSchedule\"),\" (avoid placing a pod that doesn't have a matching tolerationg, but it's not a hard requirement)\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},React.createElement(MDXTag,{name:\"strong\",components:components,parentName:\"li\"},\"NoExecute\"),\" (evict pods with non-matching tolerations)\",React.createElement(MDXTag,{name:\"ul\",components:components,parentName:\"li\"},React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},React.createElement(MDXTag,{name:\"strong\",components:components,parentName:\"li\"},\"tolerationSeconds\"),\" key can be applied with a time in seconds for how long a node can run before it is evicted.\")))))),React.createElement(MDXTag,{name:\"h3\",components:components,props:{\"id\":\"use-cases\"}},\"Use Cases\"),React.createElement(MDXTag,{name:\"ul\",components:components},React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"Existing node taints for \",React.createElement(MDXTag,{name:\"strong\",components:components,parentName:\"li\"},\"master nodes\"),\".\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"Taint nodes that are \",React.createElement(MDXTag,{name:\"strong\",components:components,parentName:\"li\"},\"dedicated\"),\" for a team or user.\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"Node for \",React.createElement(MDXTag,{name:\"strong\",components:components,parentName:\"li\"},\"specific hardware\"),\" (ie GPUs) you can taint them to void running non-specific applications on those nodes.\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"Alpha but soon-to-be beta feature is to \",React.createElement(MDXTag,{name:\"strong\",components:components,parentName:\"li\"},\"taint nodes by condition\"),\".\")),React.createElement(MDXTag,{name:\"h3\",components:components,props:{\"id\":\"useful-taints-and-tolerations\"}},\"Useful Taints and Tolerations\"),React.createElement(MDXTag,{name:\"ul\",components:components},React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},React.createElement(MDXTag,{name:\"strong\",components:components,parentName:\"li\"},\"node.kubernetes.io/not-ready\")),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},React.createElement(MDXTag,{name:\"strong\",components:components,parentName:\"li\"},\"node.kubernetes.io/unreachable\")),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},React.createElement(MDXTag,{name:\"strong\",components:components,parentName:\"li\"},\"node.kubernetes.io/out-of-disk\")),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},React.createElement(MDXTag,{name:\"strong\",components:components,parentName:\"li\"},\"node.kubernetes.io/memory-pressure\")),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},React.createElement(MDXTag,{name:\"strong\",components:components,parentName:\"li\"},\"node.kubernetes.io/disk-pressure\")),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},React.createElement(MDXTag,{name:\"strong\",components:components,parentName:\"li\"},\"node.kubernetes.io/network-unavailable\")),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},React.createElement(MDXTag,{name:\"strong\",components:components,parentName:\"li\"},\"node.kubernetes.io/unschedulable\"))),React.createElement(MDXTag,{name:\"h2\",components:components,props:{\"id\":\"315-customer-resource-definitions-crds\"}},\"3.15 Customer Resource Definitions (CRDs)\"),React.createElement(MDXTag,{name:\"ul\",components:components},React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"Let's you extend Kubernetes API.\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"Resources are the endpoints in the Kubernetes API that store collections of API Objects (ie Deployment, LoadBalancer).\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"Operators use CRDs to extend the Kubernetes API with their own functionality.\")),React.createElement(MDXTag,{name:\"h2\",components:components,props:{\"id\":\"316-operators\"}},\"3.16 Operators\"),React.createElement(MDXTag,{name:\"p\",components:components},\"An \",React.createElement(MDXTag,{name:\"strong\",components:components,parentName:\"p\"},\"Operator\"),\" is a method of \",React.createElement(MDXTag,{name:\"strong\",components:components,parentName:\"p\"},\"packaging, deploying and managing\"),\" a Kubernetes Application.\"),React.createElement(MDXTag,{name:\"p\",components:components},\"It puts \",React.createElement(MDXTag,{name:\"strong\",components:components,parentName:\"p\"},\"operational knowledge\"),\" in an application.\"),React.createElement(MDXTag,{name:\"ul\",components:components},React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"Brings the user \",React.createElement(MDXTag,{name:\"strong\",components:components,parentName:\"li\"},\"closer to the experience of managed cloud services\"),\", rather than having to know all the specifics of an application deployed to Kubernetes.\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"Once an Operator is deployed, it can be \",React.createElement(MDXTag,{name:\"strong\",components:components,parentName:\"li\"},\"managed using Custom Resource Definitions\"),\" (arbitraty types that extend the Kubernetes API).\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"It also provides a great way to deploy Stateful applications to Kubernetes.\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"There are operators for Prometheus, Valut, Rook (storage), MySQL, PostgresSQL and so on.\")),React.createElement(MDXTag,{name:\"h3\",components:components,props:{\"id\":\"postgresql-operator-demo\"}},\"PostgreSQL Operator Demo\"),React.createElement(MDXTag,{name:\"p\",components:components},\"If you just deploy a PostgreSQL container, it'd only start the database. But if you're going to use this \",React.createElement(MDXTag,{name:\"strong\",components:components,parentName:\"p\"},\"operator\"),\", it'll allow you to also \",React.createElement(MDXTag,{name:\"strong\",components:components,parentName:\"p\"},\"create replicas, initiate a failover, create backups, scale\"),\".\"),React.createElement(MDXTag,{name:\"ul\",components:components},React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"An operator contains a lot of the \",React.createElement(MDXTag,{name:\"strong\",components:components,parentName:\"li\"},\"management logic\"),\" that you as an administrator or user might want, rather than having to implement it yourself.\")),React.createElement(MDXTag,{name:\"h2\",components:components,props:{\"id\":\"4-kubernetes-administration\"}},\"4. Kubernetes Administration\"),React.createElement(MDXTag,{name:\"p\",components:components},React.createElement(MDXTag,{name:\"img\",components:components,parentName:\"p\",props:{\"src\":\"https://res.cloudinary.com/gitgoodclub/image/upload/v1540175278/Screen_Shot_2018-10-22_at_1.26.57_pm.png\",\"alt\":\"Kubernetes Master Overview\"}})),React.createElement(MDXTag,{name:\"ul\",components:components},React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"When you deploy a new Pod, the information is stored in \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"li\"},\"etcd\"),\".\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"Schedular talks to REST api.\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"REST api is used to handle tasks.\",React.createElement(MDXTag,{name:\"ul\",components:components,parentName:\"li\"},React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"Interfaces with Kubelets on the nodes.\")))),React.createElement(MDXTag,{name:\"h2\",components:components,props:{\"id\":\"41-resource-quotas\"}},\"4.1 Resource Quotas\"),React.createElement(MDXTag,{name:\"ul\",components:components},React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"Resource management is useful when giving access to a person or a team.\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"You don't want one person or team \",React.createElement(MDXTag,{name:\"strong\",components:components,parentName:\"li\"},\"taking up all the resources\"),\" (e.g. CPU/Memory) of the cluster.\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"You can divide the cluster into \",React.createElement(MDXTag,{name:\"strong\",components:components,parentName:\"li\"},\"namespaces\"),\" and enable resource quotas on it.\",React.createElement(MDXTag,{name:\"ul\",components:components,parentName:\"li\"},React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"You can do this using the \",React.createElement(MDXTag,{name:\"strong\",components:components,parentName:\"li\"},\"ResourceQuota\"),\" and \",React.createElement(MDXTag,{name:\"strong\",components:components,parentName:\"li\"},\"ObjectQuota\"),\" objects.\"))),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"Each container can specify \",React.createElement(MDXTag,{name:\"strong\",components:components,parentName:\"li\"},\"request capacity\"),\" and \",React.createElement(MDXTag,{name:\"strong\",components:components,parentName:\"li\"},\"capacity limits\"),\".\",React.createElement(MDXTag,{name:\"ul\",components:components,parentName:\"li\"},React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},React.createElement(MDXTag,{name:\"strong\",components:components,parentName:\"li\"},\"Request capacity\"),\" is an \",React.createElement(MDXTag,{name:\"strong\",components:components,parentName:\"li\"},\"explicit request\"),\" for resources.\",React.createElement(MDXTag,{name:\"ul\",components:components,parentName:\"li\"},React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"The scheduler can use the \",React.createElement(MDXTag,{name:\"strong\",components:components,parentName:\"li\"},\"request capacity\"),\" to make decisions on where to put the pod on.\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"You can see it as a \",React.createElement(MDXTag,{name:\"strong\",components:components,parentName:\"li\"},\"minimum amount of resources the pod needs\"),\".\"))),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},React.createElement(MDXTag,{name:\"strong\",components:components,parentName:\"li\"},\"Resource limit\"),\" is a limit imposed to the container.\",React.createElement(MDXTag,{name:\"ul\",components:components,parentName:\"li\"},React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"Container will not be able to utilize more resources than specified.\")))))),React.createElement(MDXTag,{name:\"h3\",components:components,props:{\"id\":\"resource-quota-examples\"}},\"Resource Quota Examples\"),React.createElement(MDXTag,{name:\"ul\",components:components},React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"You run a \",React.createElement(MDXTag,{name:\"strong\",components:components,parentName:\"li\"},\"deployment\"),\" with a \",React.createElement(MDXTag,{name:\"strong\",components:components,parentName:\"li\"},\"pod\"),\" with a \",React.createElement(MDXTag,{name:\"strong\",components:components,parentName:\"li\"},\"CPU resource\"),\" request of \",React.createElement(MDXTag,{name:\"strong\",components:components,parentName:\"li\"},\"200m\"),\". (200 millicpu/milliocores).\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"200m = 0.2 = 20% of CPU core of running node.\",React.createElement(MDXTag,{name:\"ul\",components:components,parentName:\"li\"},React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"If node has 2 cores, still 20% of a single core.\"))),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"You can also put a limit eg 400m.\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"Memory quotes defined in MB or GB.\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"Each pod needs the capacity quota defined during creation.\",React.createElement(MDXTag,{name:\"ul\",components:components,parentName:\"li\"},React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"Admin can specify default request values for pods that don't specify any values for capacity.\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"The same is valid for limit quotas.\"))),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"If resource is requested more than the allowed capacity, the server API will give an error 403 FORBIDDEN and \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"li\"},\"kubectl\"),\" will show an error.\")),React.createElement(MDXTag,{name:\"h3\",components:components,props:{\"id\":\"resource-quote-options\"}},\"Resource Quote options\"),React.createElement(MDXTag,{name:\"table\",components:components},React.createElement(MDXTag,{name:\"thead\",components:components,parentName:\"table\"},React.createElement(MDXTag,{name:\"tr\",components:components,parentName:\"thead\"},React.createElement(MDXTag,{name:\"th\",components:components,parentName:\"tr\",props:{\"align\":null}},\"Resource\"),React.createElement(MDXTag,{name:\"th\",components:components,parentName:\"tr\",props:{\"align\":null}},\"Description\"))),React.createElement(MDXTag,{name:\"tbody\",components:components,parentName:\"table\"},React.createElement(MDXTag,{name:\"tr\",components:components,parentName:\"tbody\"},React.createElement(MDXTag,{name:\"td\",components:components,parentName:\"tr\",props:{\"align\":null}},\"requests.cpu\"),React.createElement(MDXTag,{name:\"td\",components:components,parentName:\"tr\",props:{\"align\":null}},\"Sum of CPU reqs of all pos cannot exceed this value\")),React.createElement(MDXTag,{name:\"tr\",components:components,parentName:\"tbody\"},React.createElement(MDXTag,{name:\"td\",components:components,parentName:\"tr\",props:{\"align\":null}},\"requests.mem\"),React.createElement(MDXTag,{name:\"td\",components:components,parentName:\"tr\",props:{\"align\":null}},\"Sum of MEM reqs of all pods cannot exceed this value\")),React.createElement(MDXTag,{name:\"tr\",components:components,parentName:\"tbody\"},React.createElement(MDXTag,{name:\"td\",components:components,parentName:\"tr\",props:{\"align\":null}},\"requests.storage\"),React.createElement(MDXTag,{name:\"td\",components:components,parentName:\"tr\",props:{\"align\":null}},\"Sum of storage reqs of all persistent volume claims cannot exceed this value\")),React.createElement(MDXTag,{name:\"tr\",components:components,parentName:\"tbody\"},React.createElement(MDXTag,{name:\"td\",components:components,parentName:\"tr\",props:{\"align\":null}},\"limits.cpu\"),React.createElement(MDXTag,{name:\"td\",components:components,parentName:\"tr\",props:{\"align\":null}},\"Sum of CPU limits of all pods cannot exceed this value\")),React.createElement(MDXTag,{name:\"tr\",components:components,parentName:\"tbody\"},React.createElement(MDXTag,{name:\"td\",components:components,parentName:\"tr\",props:{\"align\":null}},\"limits.memory\"),React.createElement(MDXTag,{name:\"td\",components:components,parentName:\"tr\",props:{\"align\":null}},\"Sum of MEM limits of all pods cannot exceed this value\")))),React.createElement(MDXTag,{name:\"p\",components:components},\"You can also set limits on:\"),React.createElement(MDXTag,{name:\"ul\",components:components},React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"configmaps\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"persistentvolumeclaims\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"pods\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"replicationcontrollers\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"resourcequotas\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"services\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"services.loadbalancer\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"services.nodeports\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"secrets\")),React.createElement(MDXTag,{name:\"h2\",components:components,props:{\"id\":\"42-namespaces\"}},\"4.2 Namespaces\"),React.createElement(MDXTag,{name:\"p\",components:components},\"Namespaces allow you to create \",React.createElement(MDXTag,{name:\"strong\",components:components,parentName:\"p\"},\"virtual clusters\"),\" within the same physical cluster.\"),React.createElement(MDXTag,{name:\"ul\",components:components},React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"Namespaces \",React.createElement(MDXTag,{name:\"strong\",components:components,parentName:\"li\"},\"logically separates\"),\" your cluster.\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"The standard namespace is called \",React.createElement(MDXTag,{name:\"strong\",components:components,parentName:\"li\"},\"\\\"default\\\"\"),\" and that's where all the resources are launched by default.\",React.createElement(MDXTag,{name:\"ul\",components:components,parentName:\"li\"},React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"There is also \",React.createElement(MDXTag,{name:\"strong\",components:components,parentName:\"li\"},\"kube-system\"),\" - a namespace for kubernetes specific resources.\"))),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"Namespaces are intended when you have \",React.createElement(MDXTag,{name:\"strong\",components:components,parentName:\"li\"},\"multiple teams/projects\"),\" using the Kubernetes cluster.\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"Resource names within namespace must be unique.\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"You can divide resources of a Kubernetes cluster using namespaces.\",React.createElement(MDXTag,{name:\"ul\",components:components,parentName:\"li\"},React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"You can limit resources on a per namespace basis.\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"E.g. Marketing team can only use a maximum of 10GiB of memory, 2 loadbalancers, 2 CPU cores.\")))),React.createElement(MDXTag,{name:\"h3\",components:components,props:{\"id\":\"namespace-commands\"}},\"Namespace commands\"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{\"className\":\"language-bash\"}},\"$ kubectl create namespace myspace # create namespace myspace\\n$ kubectl get namespaces # list all namespaces\\n# Set default namespace to launch resources in\\n$ export CONTEXT=$(kubectl config view | awk '/current-context/{print $2}')\\n$ kubectl config set-context $CONTEXT --namespace=myspace\\n\")),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{\"className\":\"language-yaml\"}},\"apiVersion: 1\\nkind: ResourceQuota\\nmetadata:\\n    name: objects-counts\\n    namespace: myspace\\nspec:\\n    hard:\\n        configmaps: \\\"10\\\"\\n        persistentvolumesclaim: \\\"4\\\"\\n        replicationcontrollers: \\\"20\\\"\\n        secrets: \\\"10\\\"\\n        services: \\\"10\\\"\\n        services.loadbalancers: \\\"2\\\"\\n\")),React.createElement(MDXTag,{name:\"h3\",components:components,props:{\"id\":\"demo-resourcequotas\"}},\"Demo ResourceQuotas\"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{\"className\":\"language-yaml\"}},\"# resourcequota.yml\\napiVersion: v1\\nkind: Namespace\\nmetadata:\\n  name: myspace\\n---\\napiVersion: v1\\nkind: ResourceQuota\\nmetadata:\\n  name: compute-quota\\n  namespace: myspace\\nspec:\\n  hard:\\n    requests.cpu: \\\"1\\\"\\n    requests.memory: 1Gi\\n    limits.cpu: \\\"2\\\"\\n    limits.memory: 2Gi\\n---\\napiVersion: v1\\nkind: ResourceQuota\\nmetadata:\\n  name: object-quota\\n  namespace: myspace\\nspec:\\n  hard:\\n    configmaps: \\\"10\\\"\\n    persistentvolumeclaims: \\\"4\\\"\\n    replicationcontrollers: \\\"20\\\"\\n    secrets: \\\"10\\\"\\n    services: \\\"10\\\"\\n    services.loadbalancers: \\\"2\\\"\\n\")),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{\"className\":\"language-yaml\"}},\"# helloworld-with-quotas.yaml\\napiVersion: extensions/v1beta1\\nkind: Deployment\\nmetadata:\\n  name: helloworld-deployment\\n  namespace: myspace\\nspec:\\n  replicas: 3\\n  template:\\n    metadata:\\n      labels:\\n        app: helloworld\\n    spec:\\n      containers:\\n      - name: k8s-demo\\n        image: wardviaene/k8s-demo\\n        ports:\\n        - name: nodejs-port\\n          containerPort: 3000\\n        resources:\\n          requests:\\n            cpu: 200m\\n            memory: 0.5Gi\\n          limits:\\n            cpu: 400m\\n            memory: 1Gi\\n\")),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{\"className\":\"language-yaml\"}},\"# helloworld-no-quotas.yaml\\napiVersion: extensions/v1beta1\\nkind: Deployment\\nmetadata:\\n  name: helloworld-deployment\\n  namespace: myspace\\nspec:\\n  replicas: 3\\n  template:\\n    metadata:\\n      labels:\\n        app: helloworld\\n    spec:\\n      containers:\\n      - name: k8s-demo\\n        image: wardviaene/k8s-demo\\n        ports:\\n        - name: nodejs-port\\n          containerPort: 3000\\n\")),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{\"className\":\"language-yaml\"}},\"# default.yaml\\napiVersion: v1\\nkind: LimitRange\\nmetadata:\\n  name: limits\\n  namespace: myspace\\nspec:\\n  limits:\\n  - default:\\n      cpu: 200m\\n      memory: 512Mi\\n    defaultRequest:\\n      cpu: 100m\\n      memory: 256Mi\\n    type: Container\\n\")),React.createElement(MDXTag,{name:\"p\",components:components},\"The following commands can be used to get check resources:\"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{\"className\":\"language-bash\"}},\"$ kubectl get <% pod_name %> --namespace=myspace\\n$ kubectl describe <% pod_name %> --namespace=myspace\\n\")),React.createElement(MDXTag,{name:\"h2\",components:components,props:{\"id\":\"43-user-management\"}},\"4.3 User Management\"),React.createElement(MDXTag,{name:\"p\",components:components},\"There are two user types:\"),React.createElement(MDXTag,{name:\"ol\",components:components},React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ol\"},\"Normal user (used to access the cluster externally) ie through kubctl.\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ol\"},\"Service user (which is managed by an object in Kubernetes).\",React.createElement(MDXTag,{name:\"ul\",components:components,parentName:\"li\"},React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"Used to authenticate within the cluster ie from inside pod of kubelet.\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"These creds are managed like \",React.createElement(MDXTag,{name:\"strong\",components:components,parentName:\"li\"},\"secrets\"),\".\")))),React.createElement(MDXTag,{name:\"h3\",components:components,props:{\"id\":\"normal-users\"}},\"Normal Users\"),React.createElement(MDXTag,{name:\"p\",components:components},\"Auth strategies include:\"),React.createElement(MDXTag,{name:\"ul\",components:components},React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"Client certificates\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"Bearer Tokens \"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"Authentication Proxy\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"HTTP Basic Authentication\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"OpenID\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"Webhooks\")),React.createElement(MDXTag,{name:\"p\",components:components},\"They have the following attributes:\"),React.createElement(MDXTag,{name:\"ul\",components:components},React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"Username (e.g. user123 or email@email.com)\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"A UID\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"Groups\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"Extra fields to store extra info\")),React.createElement(MDXTag,{name:\"p\",components:components},\"After a normal user authenticates, it was hav access to everything.\"),React.createElement(MDXTag,{name:\"ul\",components:components},React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"To limit, you need to configure auth.\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"There are multiple offerings:\",React.createElement(MDXTag,{name:\"ul\",components:components,parentName:\"li\"},React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"AlwaysAllow / AlwaysDeny\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"ABAC (Attribute-Based Access Control)\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"RBAC (Role Based Access Control)\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"Webhook (auth by remote service)\")))),React.createElement(MDXTag,{name:\"h3\",components:components,props:{\"id\":\"service-users\"}},\"Service Users\"),React.createElement(MDXTag,{name:\"ul\",components:components},React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"Service Users are using \",React.createElement(MDXTag,{name:\"strong\",components:components,parentName:\"li\"},\"Service Account Tokens\"),\".\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"They are stored as \",React.createElement(MDXTag,{name:\"strong\",components:components,parentName:\"li\"},\"credentials using Secrets\"),\".\",React.createElement(MDXTag,{name:\"ul\",components:components,parentName:\"li\"},React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"Those Secrets are also mounted in pods to allow communication between the services.\"))),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"Service Users are \",React.createElement(MDXTag,{name:\"strong\",components:components,parentName:\"li\"},\"specific to a namespace\"),\".\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"They are created automatically by the API or manually using \",React.createElement(MDXTag,{name:\"strong\",components:components,parentName:\"li\"},\"objects\"),\".\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"Any API call \",React.createElement(MDXTag,{name:\"strong\",components:components,parentName:\"li\"},\"not authenticated\"),\" is considered as an \",React.createElement(MDXTag,{name:\"strong\",components:components,parentName:\"li\"},\"anonymous\"),\" user.\")),React.createElement(MDXTag,{name:\"h3\",components:components,props:{\"id\":\"other-notes-on-user-management\"}},\"Other notes on User Management\"),React.createElement(MDXTag,{name:\"p\",components:components},\"Auth is still a work in progress. The demo itself shows the creation of a asymmetric key and updating Minikube to allow that as the user.\"),React.createElement(MDXTag,{name:\"h2\",components:components,props:{\"id\":\"44-rbac-role-based-access-control\"}},\"4.4 RBAC (Role Based Access Control)\"),React.createElement(MDXTag,{name:\"ul\",components:components},React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"Regulates access using \",React.createElement(MDXTag,{name:\"strong\",components:components,parentName:\"li\"},\"roles\"),\".\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"Allows admins to dynamically configure permission policies.\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"This is what I'll use in the demo.\")),React.createElement(MDXTag,{name:\"p\",components:components},\"You add RBAC resources with \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"kubectl\"),\" from a yaml format file.\"),React.createElement(MDXTag,{name:\"p\",components:components},\"First, define a role, then assign users/groups to that role.\"),React.createElement(MDXTag,{name:\"p\",components:components},\"You can create roles limited to a namespace or that applies across all namespaces.\"),React.createElement(MDXTag,{name:\"ul\",components:components},React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},React.createElement(MDXTag,{name:\"strong\",components:components,parentName:\"li\"},\"Role\"),\" (single namespace) and \",React.createElement(MDXTag,{name:\"strong\",components:components,parentName:\"li\"},\"ClusterRole\"),\" (cluster-wide).\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},React.createElement(MDXTag,{name:\"strong\",components:components,parentName:\"li\"},\"RoleBinding\"),\" (single namespace) and \",React.createElement(MDXTag,{name:\"strong\",components:components,parentName:\"li\"},\"ClusterRoleBinding\"),\" (cluster-wide).\")),React.createElement(MDXTag,{name:\"h2\",components:components,props:{\"id\":\"45-networking\"}},\"4.5 Networking\"),React.createElement(MDXTag,{name:\"p\",components:components},\"Communication topics already covered:\"),React.createElement(MDXTag,{name:\"ul\",components:components},React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"Container to container: communication within a pod.\",React.createElement(MDXTag,{name:\"ul\",components:components,parentName:\"li\"},React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"Through \",React.createElement(MDXTag,{name:\"strong\",components:components,parentName:\"li\"},\"localhost\"),\" and the \",React.createElement(MDXTag,{name:\"strong\",components:components,parentName:\"li\"},\"port number\"),\".\"))),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"Pod-To-Service comms\",React.createElement(MDXTag,{name:\"ul\",components:components,parentName:\"li\"},React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"Using \",React.createElement(MDXTag,{name:\"strong\",components:components,parentName:\"li\"},\"NodePort\"),\" and \",React.createElement(MDXTag,{name:\"strong\",components:components,parentName:\"li\"},\"DNS\"),\".\"))),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"External-To-Service\",React.createElement(MDXTag,{name:\"ul\",components:components,parentName:\"li\"},React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"Using \",React.createElement(MDXTag,{name:\"strong\",components:components,parentName:\"li\"},\"LoadBalancer\"),\", \",React.createElement(MDXTag,{name:\"strong\",components:components,parentName:\"li\"},\"NodePort\"),\".\")))),React.createElement(MDXTag,{name:\"h3\",components:components,props:{\"id\":\"pods\"}},\"Pods\"),React.createElement(MDXTag,{name:\"ul\",components:components},React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"The pod should always be routable.\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"Kubernetes assumes that pods should be able to communicate to other pods, regardless of which node they are running.\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"Kubernetes assumes that pods should be able to communicate to other pods, regardless of which node they are running.\",React.createElement(MDXTag,{name:\"ul\",components:components,parentName:\"li\"},React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"Every pod has its \",React.createElement(MDXTag,{name:\"strong\",components:components,parentName:\"li\"},\"own IP address\"),\".\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"Pods on different nodes need to be able to communicate to each other using those IP addresses.\",React.createElement(MDXTag,{name:\"ul\",components:components,parentName:\"li\"},React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"This is implemented differently depending on your networking setup.\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"On AWS: kubenet networking (kops default).\")))))),React.createElement(MDXTag,{name:\"h3\",components:components,props:{\"id\":\"kubenet-networking\"}},\"Kubenet Networking\"),React.createElement(MDXTag,{name:\"ul\",components:components},React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"Every pod can get an IP that is \",React.createElement(MDXTag,{name:\"strong\",components:components,parentName:\"li\"},\"routable\"),\" using the AWS Virtual Private Network (VPC).\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"The kubernetes master allocates a /24 subnet to each node (254 IP addresses).\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"The subnet is added to the VPCs route table.\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"There is a limit of \",React.createElement(MDXTag,{name:\"strong\",components:components,parentName:\"li\"},\"50 entries\"),\", which means you can't have more than 50 nodes in a single AWS cluster.\")),React.createElement(MDXTag,{name:\"h3\",components:components,props:{\"id\":\"vpc-alternatives\"}},\"VPC Alternatives\"),React.createElement(MDXTag,{name:\"p\",components:components},\"Not every cloud provider has VPC-tech (GCE and Azure do).\"),React.createElement(MDXTag,{name:\"p\",components:components},\"The alternatives for things like on-prem etc are:\"),React.createElement(MDXTag,{name:\"ol\",components:components},React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ol\"},React.createElement(MDXTag,{name:\"p\",components:components,parentName:\"li\"},\"Container Network Interface (CNI)\"),React.createElement(MDXTag,{name:\"ul\",components:components,parentName:\"li\"},React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},React.createElement(MDXTag,{name:\"p\",components:components,parentName:\"li\"},\"Software that provides libraries/plugins for network interfaces within containers.\")),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},React.createElement(MDXTag,{name:\"p\",components:components,parentName:\"li\"},\"Popular solutions are \",React.createElement(MDXTag,{name:\"strong\",components:components,parentName:\"p\"},\"Calico, Weave\"),\" (standalone or with CNI).\")))),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ol\"},React.createElement(MDXTag,{name:\"p\",components:components,parentName:\"li\"},\"An Overlay Network\"),React.createElement(MDXTag,{name:\"ul\",components:components,parentName:\"li\"},React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},React.createElement(MDXTag,{name:\"strong\",components:components,parentName:\"li\"},\"Flannel\"),\" is an easy and popular way.\")))),React.createElement(MDXTag,{name:\"h2\",components:components,props:{\"id\":\"46-node-maintenance\"}},\"4.6 Node Maintenance\"),React.createElement(MDXTag,{name:\"p\",components:components},\"It is the \",React.createElement(MDXTag,{name:\"strong\",components:components,parentName:\"p\"},\"Node Controller\"),\" that is responsible for managing the Node object.\"),React.createElement(MDXTag,{name:\"ul\",components:components},React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"It assigns \",React.createElement(MDXTag,{name:\"strong\",components:components,parentName:\"li\"},\"IP Space\"),\" to the node when a new node is launched.\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"It keeps the \",React.createElement(MDXTag,{name:\"strong\",components:components,parentName:\"li\"},\"node list\"),\" up to date with the available machines.\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"The node controller is also monitoring the \",React.createElement(MDXTag,{name:\"strong\",components:components,parentName:\"li\"},\"health of the node\"),\".\",React.createElement(MDXTag,{name:\"ul\",components:components,parentName:\"li\"},React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"If a node is \",React.createElement(MDXTag,{name:\"strong\",components:components,parentName:\"li\"},\"unhealthy it gets deleted\"),\".\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"Pods running on the unhealthy node will then get \",React.createElement(MDXTag,{name:\"strong\",components:components,parentName:\"li\"},\"rescheduled\"),\".\")))),React.createElement(MDXTag,{name:\"h3\",components:components,props:{\"id\":\"adding-a-new-node\"}},\"Adding a new node\"),React.createElement(MDXTag,{name:\"p\",components:components},\"When adding a new node, the \",React.createElement(MDXTag,{name:\"strong\",components:components,parentName:\"p\"},\"kubelet\"),\" will attempt to register itself. This is called \",React.createElement(MDXTag,{name:\"strong\",components:components,parentName:\"p\"},\"self-registration\"),\" and is the default behaviour.\"),React.createElement(MDXTag,{name:\"ul\",components:components},React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"It allows you to \",React.createElement(MDXTag,{name:\"strong\",components:components,parentName:\"li\"},\"easily add more nodes\"),\" to the cluster without making API changes yourself.\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"A new node object is \",React.createElement(MDXTag,{name:\"strong\",components:components,parentName:\"li\"},\"automatically\"),\" created with:\",React.createElement(MDXTag,{name:\"ul\",components:components,parentName:\"li\"},React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"The metadata (with a name: IP or hostname).\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"Labels (e.g. cloud region / availability zone / instance size).\"))),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"Has \",React.createElement(MDXTag,{name:\"strong\",components:components,parentName:\"li\"},\"node condition\"),\" (e.g. Ready, OutOfDisk).\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"When you want to \",React.createElement(MDXTag,{name:\"strong\",components:components,parentName:\"li\"},\"decomission\"),\" a node, you want to do it gracefully.\",React.createElement(MDXTag,{name:\"ul\",components:components,parentName:\"li\"},React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"Drain a node before you shut it down or take it out of the cluster.\")))),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{\"className\":\"language-bash\"}},\"# drain a node\\n$ kubectl drain nodename --grace-period=600\\n\\n# if node runs pods not managed by a controller but just a single pod\\n$ kubectl drain nodename --force\\n\")),React.createElement(MDXTag,{name:\"p\",components:components},React.createElement(MDXTag,{name:\"img\",components:components,parentName:\"p\",props:{\"src\":\"https://res.cloudinary.com/gitgoodclub/image/upload/v1540183374/Screen_Shot_2018-10-22_at_3.42.29_pm.png\",\"alt\":\"Terminal draining\"}})),React.createElement(MDXTag,{name:\"h2\",components:components,props:{\"id\":\"47-high-availability\"}},\"4.7 High Availability\"),React.createElement(MDXTag,{name:\"p\",components:components},\"If you are running in prod, you willwant all master services in \",React.createElement(MDXTag,{name:\"strong\",components:components,parentName:\"p\"},\"high availability\"),\".\"),React.createElement(MDXTag,{name:\"h3\",components:components,props:{\"id\":\"setup\"}},\"Setup\"),React.createElement(MDXTag,{name:\"ol\",components:components},React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ol\"},React.createElement(MDXTag,{name:\"strong\",components:components,parentName:\"li\"},\"Clustering etcd:\"),\" at least run 3 etcd nodes.\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ol\"},React.createElement(MDXTag,{name:\"strong\",components:components,parentName:\"li\"},\"Replicated API servers:\"),\" with a a LoadBalancer\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ol\"},\"Running multiple instances of the \",React.createElement(MDXTag,{name:\"strong\",components:components,parentName:\"li\"},\"scheduler\"),\" and the \",React.createElement(MDXTag,{name:\"strong\",components:components,parentName:\"li\"},\"controllers\"),\".\",React.createElement(MDXTag,{name:\"ul\",components:components,parentName:\"li\"},React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"only one of them will be the leader, the others are on stand-by.\")))),React.createElement(MDXTag,{name:\"p\",components:components},React.createElement(MDXTag,{name:\"img\",components:components,parentName:\"p\",props:{\"src\":\"https://res.cloudinary.com/gitgoodclub/image/upload/v1540183580/Screen_Shot_2018-10-22_at_3.46.05_pm.png\",\"alt\":\"HA Overview\"}})),React.createElement(MDXTag,{name:\"p\",components:components},React.createElement(MDXTag,{name:\"img\",components:components,parentName:\"p\",props:{\"src\":\"https://res.cloudinary.com/gitgoodclub/image/upload/v1540183671/Screen_Shot_2018-10-22_at_3.46.52_pm.png\",\"alt\":\"HA diagram\"}})),React.createElement(MDXTag,{name:\"h3\",components:components,props:{\"id\":\"kops-with-multiple-masters-for-ha\"}},\"Kops with multiple masters for HA\"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{\"className\":\"language-bash\"}},\"kops create cluster --name=... --zones=eu-west-1a,eu-west-1b,eu-west-1c --master-zones=eu-west-1a,eu-west-1b,eu-west-1c\\n\")),React.createElement(MDXTag,{name:\"p\",components:components},\"This becomes more complex for volumes since EBS volumes are based within zones.\"),React.createElement(MDXTag,{name:\"h2\",components:components,props:{\"id\":\"48-tls-on-elb-using-annotations\"}},\"4.8 TLS on ELB using Annotations\"),React.createElement(MDXTag,{name:\"p\",components:components},\"You can setup \",React.createElement(MDXTag,{name:\"strong\",components:components,parentName:\"p\"},\"cloud specific features\"),\" (like TLS termination) on AWS LoadBalancers that you create in Kubernetes using services of type LoadBalancer.\"),React.createElement(MDXTag,{name:\"p\",components:components},\"You can do this using \",React.createElement(MDXTag,{name:\"strong\",components:components,parentName:\"p\"},\"annotations\"),\" to pass some flags for cloud configuration eg aws-load-balancer-ssl-cert, aws-load-balancer-backend-protocol etc.\"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{\"className\":\"language-yaml\"}},\"# helloworld-elb-tls-service.yaml\\napiVersion: v1\\nkind: Service\\nmetadata:\\n  name: helloworld-service\\n  annotations:\\n    service.beta.kubernetes.io/aws-load-balancer-ssl-cert: \\\"arn:aws:acm:region:accountid:certificate/...\\\" #replace this value\\n    service.beta.kubernetes.io/aws-load-balancer-backend-protocol: \\\"http\\\"\\n    service.beta.kubernetes.io/aws-load-balancer-ssl-ports: \\\"443\\\"\\n    service.beta.kubernetes.io/aws-load-balancer-connection-draining-enabled: \\\"true\\\"\\n    service.beta.kubernetes.io/aws-load-balancer-connection-draining-timeout: \\\"60\\\"\\n    service.beta.kubernetes.io/aws-load-balancer-additional-resource-tags: \\\"environment=dev,app=helloworld\\\"\\nspec:\\n  ports:\\n  - name: http\\n    port: 80\\n    targetPort: nodejs-port\\n    protocol: TCP\\n  - name: https\\n    port: 443\\n    targetPort: nodejs-port\\n    protocol: TCP\\n  selector:\\n    app: helloworld\\n  type: LoadBalancer\\n\")),React.createElement(MDXTag,{name:\"h2\",components:components,props:{\"id\":\"5-packaging-and-deploying-on-kubernetes\"}},\"5. Packaging and Deploying on Kubernetes\"),React.createElement(MDXTag,{name:\"h2\",components:components,props:{\"id\":\"51-intro-to-helm\"}},\"5.1 Intro to Helm\"),React.createElement(MDXTag,{name:\"p\",components:components},\"Helm is the best way to find, share and use software built for Kubernetes.\"),React.createElement(MDXTag,{name:\"ul\",components:components},React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"Package manager for Kubernetes.\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"Helps you manage Kubernetes apps.\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"Maintained by CNCF.\")),React.createElement(MDXTag,{name:\"p\",components:components},\"To use, download the Helm client.\"),React.createElement(MDXTag,{name:\"p\",components:components},\"To run, use \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"helm init\"),\".\"),React.createElement(MDXTag,{name:\"ul\",components:components},React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"This will installer Tiller\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"If you have RBAC installed (recent clusters have it enabled by default), you'll also need to add a ServiceAccount and RBAC rules.\")),React.createElement(MDXTag,{name:\"p\",components:components},\"Helm uses a packaging format call \",React.createElement(MDXTag,{name:\"strong\",components:components,parentName:\"p\"},\"charts\"),\".\"),React.createElement(MDXTag,{name:\"ul\",components:components},React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"A chart is a collection of files that describe a set of Kubernetes resources.\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"A single chart can deploy an app, a piece of software or a database.\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"It can have depencies ie Wordpress chart requires mysql chart.\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"You can also write your own chart.\")),React.createElement(MDXTag,{name:\"h3\",components:components,props:{\"id\":\"helm-commands\"}},\"Helm commands\"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{\"className\":\"language-bash\"}},\"$ helm init # install tiller on the cluster\\n$ helm reset # remove tiller\\n$ helm install # install chart\\n$ helm search redis #looks for redis chart\\n$ helm install --name myredis stable/redis # install chart from redis search found under myredis\\n$ helm delete myredis # delete redis install named myredis\\n$ helm create <% chart_name %> # create your own chart\\n\")),React.createElement(MDXTag,{name:\"h3\",components:components,props:{\"id\":\"installing-helm\"}},\"Installing Helm\"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{\"className\":\"language-bash\"}},\"$ curl https://raw.githubusercontent.com/helm/helm/master/scripts/get > get_helm.sh\\n$ chmod 700 get_helm.sh\\n$ ./get_helm.sh\\n\")),React.createElement(MDXTag,{name:\"h4\",components:components,props:{\"id\":\"linux-distro-install\"}},\"Linux Distro Install\"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{\"className\":\"language-bash\"}},\"$ wget https://kubernetes-helm.storage.googleapis.com/helm-v2.11.0-linux-amd64.tar.gz\\n$ tar -xzvf helm-v2.11.0-linux-amd64.tar.gz\\n$ sudo mv linux-amd64/helm /usr/local/bin/helm\\n\")),React.createElement(MDXTag,{name:\"h3\",components:components,props:{\"id\":\"adding-to-cluster\"}},\"Adding to cluster\"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{\"className\":\"language-bash\"}},\"$ kubectl create -f helm-rbac.yaml\\n$ helm init --service-account tiller\\n\")),React.createElement(MDXTag,{name:\"h2\",components:components,props:{\"id\":\"52-creating-your-own-helm-charts\"}},\"5.2 Creating your own helm charts\"),React.createElement(MDXTag,{name:\"p\",components:components},\"This is the recommended way to deploy applications.\"),React.createElement(MDXTag,{name:\"ul\",components:components},React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},React.createElement(MDXTag,{name:\"p\",components:components,parentName:\"li\"},\"Packaging the app allows you to deploy the app in 1 command.\")),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},React.createElement(MDXTag,{name:\"p\",components:components,parentName:\"li\"},\"Helm allows for upgrades and rollbacks.\")),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},React.createElement(MDXTag,{name:\"p\",components:components,parentName:\"li\"},\"Helm chart is also version controlled.\"))),React.createElement(MDXTag,{name:\"h2\",components:components,props:{\"id\":\"53-setting-up-helm-repo-with-s3\"}},\"5.3 Setting up Helm Repo with S3\"),React.createElement(MDXTag,{name:\"p\",components:components},\"If you have charts stored on S3:\"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{\"className\":\"language-bash\"}},\"# Install plugin\\n$ helm plugin install https://github.com/hypnoglow/helm-s3.git\\n\\n# Initialise s3 bucket\\n$ helm s3 init s3://helm-bucket/charts\\n\\n# Add report to helm\\n$ helm repo add my-charts s3://helm-bucket/charts\\n\")),React.createElement(MDXTag,{name:\"h2\",components:components,props:{\"id\":\"6-serverless-on-kubernetes\"}},\"6. Serverless on Kubernetes\"),React.createElement(MDXTag,{name:\"p\",components:components},\"With the serverless products, you don't need to manage the underlying functions. It can also greatly reduce costs.\"),React.createElement(MDXTag,{name:\"p\",components:components},\"Great for not worrying about many operational aspects.\"),React.createElement(MDXTag,{name:\"p\",components:components},\"You can also use functions to start applications on Kubernetes instead of containers. You can install and use any of the projects to let developers launch functions on your Kubernetes cluster.\"),React.createElement(MDXTag,{name:\"h2\",components:components,props:{\"id\":\"61-intro-to-kubeless\"}},\"6.1 Intro to Kubeless\"),React.createElement(MDXTag,{name:\"p\",components:components},\"This is a Kubernetes-native framework. It leverages Kubernetes resource to provide auto-scaling, API routing, monitoring and more.\"),React.createElement(MDXTag,{name:\"p\",components:components},\"It uses \",React.createElement(MDXTag,{name:\"strong\",components:components,parentName:\"p\"},\"Customer Resource Definitions\"),\" to be able to create functions.\"),React.createElement(MDXTag,{name:\"p\",components:components},\"You deploy a function with your preferred language. Once you deploy, you need to determine how it will be triggered.\"),React.createElement(MDXTag,{name:\"h2\",components:components,props:{\"id\":\"62-creating-functions-on-kubeless\"}},\"6.2 Creating functions on Kubeless\"),React.createElement(MDXTag,{name:\"h3\",components:components,props:{\"id\":\"installing-the-cli\"}},\"Installing the CLI\"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{\"className\":\"language-bash\"}},\"$ wget https://github.com/kubeless/kubeless/releases/download/v1.0.0-alpha.8/kubeless_linux-amd64.zip\\n$ sudo apt-get install unzip # if you need to unzip\\n$ unzip kubeless_linux-amd64.zip\\n$ sudo mv bundles/kubeless_linux-amd64/kubeless /usr/local/bin\\n$ rm -r bundles/\\n\")),React.createElement(MDXTag,{name:\"h3\",components:components,props:{\"id\":\"deploy-kubeless\"}},\"Deploy kubeless\"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{\"className\":\"language-bash\"}},\"$ kubectl create ns kubeless\\n$ kubectl create -f https://github.com/kubeless/kubeless/releases/download/v1.0.0-alpha.8/kubeless-v1.0.0-alpha.8.yaml\\n\")),React.createElement(MDXTag,{name:\"h3\",components:components,props:{\"id\":\"deploy-function-on-kubernetes\"}},\"Deploy function on Kubernetes\"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{\"className\":\"language-bash\"}},\"kubeless function deploy myfunc --runtime nodejs6 --dependencies node-example/package.json --handler test.myfunction --from-file node-example/example.js\\n\")),React.createElement(MDXTag,{name:\"h4\",components:components,props:{\"id\":\"useful-functions\"}},\"Useful functions\"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{\"className\":\"language-bash\"}},\"# List function\\n$ kubeless function ls\\n# Call function\\n$ kubeless function call myfunction --data 'this is some data'\\n# Expose function\\n$ kubectl create -f nginx-ingress-controller-with-elb.yml\\n# Linking the function to the ingress controller\\n$ kubeless trigger http create myfunction --function-name myfunction --hostname myfunction.domain.name\\n\")),React.createElement(MDXTag,{name:\"h3\",components:components,props:{\"id\":\"usage-with-kafka\"}},\"Usage with Kafka\"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{\"className\":\"language-bash\"}},\"# Kafka installation\\nexport RELEASE=$(curl -s https://api.github.com/repos/kubeless/kafka-trigger/releases/latest | grep tag_name | cut -d '\\\"' -f 4)\\nkubectl create -f https://github.com/kubeless/kafka-trigger/releases/download/$RELEASE/kafka-zookeeper-$RELEASE.yaml\\n\\n# Trigger and publish\\nkubeless trigger kafka create test --function-selector created-by=kubeless,function=uppercase --trigger-topic uppercase\\nkubeless topic publish --topic uppercase --data \\\"this message will be converted to uppercase\\\"\\n\")),React.createElement(MDXTag,{name:\"h2\",components:components,props:{\"id\":\"7-microservices\"}},\"7. Microservices\"),React.createElement(MDXTag,{name:\"p\",components:components},\"If we have multiple apps that require information from between each other, we need to start talking about the  \",React.createElement(MDXTag,{name:\"strong\",components:components,parentName:\"p\"},\"service mesh\"),\". Normally between applications,  we run into the following problems:\"),React.createElement(MDXTag,{name:\"ul\",components:components},React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"There is no encryption\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"No retries.\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"No fallover.\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"No intelligent load balancer.\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"No routing decisions.\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"No metrics/logs/traces.\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"No access control.\")),React.createElement(MDXTag,{name:\"p\",components:components},\"One solution is to implement \",React.createElement(MDXTag,{name:\"strong\",components:components,parentName:\"p\"},\"sidecars\"),\" which is a proxy to every single microservice. This can resolve issues such as encryption, retries when a connection fails, intelligent load balancing.\"),React.createElement(MDXTag,{name:\"p\",components:components},\"You could also add a \",React.createElement(MDXTag,{name:\"strong\",components:components,parentName:\"p\"},\"management interface\"),\" which resolves routing decisions, metrics/logs/traces and access control (ie valid certificate etc).\"),React.createElement(MDXTag,{name:\"p\",components:components},\"This brings us to \",React.createElement(MDXTag,{name:\"strong\",components:components,parentName:\"p\"},\"Istio\"),\".\"),React.createElement(MDXTag,{name:\"p\",components:components},React.createElement(MDXTag,{name:\"img\",components:components,parentName:\"p\",props:{\"src\":\"https://res.cloudinary.com/gitgoodclub/image/upload/v1540090167/istio-diagram.png\",\"alt\":\"Istio diagram\"}})),React.createElement(MDXTag,{name:\"h2\",components:components,props:{\"id\":\"71-istio-installation\"}},\"7.1 Istio Installation\"),React.createElement(MDXTag,{name:\"p\",components:components},\"If you want to use Istio, it's worth now using a node with enough memory ie t2.medium.\"),React.createElement(MDXTag,{name:\"h3\",components:components,props:{\"id\":\"kops-configuration\"}},\"Kops configuration\"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{\"className\":\"language-bash\"}},\"$ kops edit cluster kubernetes.newtech.academy\\n\")),React.createElement(MDXTag,{name:\"p\",components:components},\"Add:\"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{}},\"spec:\\n  kubeAPIServer:\\n    admissionControl:\\n    - NamespaceLifecycle\\n    - LimitRanger\\n    - ServiceAccount\\n    - PersistentVolumeLabel\\n    - DefaultStorageClass\\n    - DefaultTolerationSeconds\\n    - MutatingAdmissionWebhook\\n    - ValidatingAdmissionWebhook\\n    - ResourceQuota\\n    - NodeRestriction\\n    - Priority\\n\")),React.createElement(MDXTag,{name:\"h3\",components:components,props:{\"id\":\"download-102\"}},\"Download (1.0.2):\"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{\"className\":\"language-bash\"}},\"$ cd ~\\n$ wget https://github.com/istio/istio/releases/download/1.0.2/istio-1.0.2-linux.tar.gz\\ntar -xzvf istio-1.0.2-linux.tar.gz\\n$ cd istio-1.0.2\\n# Alternatively just export the PATH so you don't have to logout\\n$ echo 'export PATH=\\\"$PATH:/home/ubuntu/istio-1.0.2/bin\\\"' >> ~/.profile\\n$ istioctl # check everything is running correctly\\n\")),React.createElement(MDXTag,{name:\"h3\",components:components,props:{\"id\":\"download-latest\"}},\"Download (latest):\"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{\"className\":\"language-bash\"}},\"$ cd ~\\n$ curl -L https://git.io/getLatestIstio | sh -\\n$ echo 'export PATH=\\\"$PATH:/home/ubuntu/istio-1.0.2/bin\\\"' >> ~/.profile # change 1.0.2 in your version -- alternative just export the PATH so you don't have to logout\\n$ cd istio-1.0.2 # change 1.0.2 in your version\\n\")),React.createElement(MDXTag,{name:\"h3\",components:components,props:{\"id\":\"istio-install\"}},\"Istio install\"),React.createElement(MDXTag,{name:\"p\",components:components},\"Apply CRDs:\"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{\"className\":\"language-bash\"}},\"$ kubectl apply -f ~/istio-1.0.2/install/kubernetes/helm/istio/templates/crds.yaml\\n\")),React.createElement(MDXTag,{name:\"p\",components:components},\"Wait a few seconds.\"),React.createElement(MDXTag,{name:\"p\",components:components},\"Option 1: with no mutual TLS authentication\"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{\"className\":\"language-bash\"}},\"$ kubectl apply -f ~/istio-1.0.2/install/kubernetes/istio-demo.yaml\\n\")),React.createElement(MDXTag,{name:\"p\",components:components},\"Option 2: or with mutual TLS authentication\"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{\"className\":\"language-bash\"}},\"$ kubectl apply -f ~/istio-1.0.2/install/kubernetes/istio-demo-auth.yaml\\n\")),React.createElement(MDXTag,{name:\"h2\",components:components,props:{\"id\":\"72-example-app\"}},\"7.2 Example app\"),React.createElement(MDXTag,{name:\"p\",components:components},React.createElement(MDXTag,{name:\"img\",components:components,parentName:\"p\",props:{\"src\":\"https://res.cloudinary.com/gitgoodclub/image/upload/v1540091246/Screen_Shot_2018-10-21_at_2.07.07_pm.png\",\"alt\":\"Example app diagram\"}})),React.createElement(MDXTag,{name:\"h3\",components:components,props:{\"id\":\"example-app-from-istio\"}},\"Example app (from istio)\"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{\"className\":\"language-bash\"}},\"export PATH=\\\"$PATH:/home/ubuntu/istio-1.0.2/bin\\\"\\nkubectl apply -f <(istioctl kube-inject -f samples/bookinfo/platform/kube/bookinfo.yaml)\\n\")),React.createElement(MDXTag,{name:\"h3\",components:components,props:{\"id\":\"hello-world-app\"}},\"Hello world app\"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{\"className\":\"language-bash\"}},\"export PATH=\\\"$PATH:/home/ubuntu/istio-1.0.2/bin\\\"\\nkubectl apply -f <(istioctl kube-inject -f helloworld.yaml)\\nkubectl apply -f helloworld-gw.yaml\\n\")),React.createElement(MDXTag,{name:\"h3\",components:components,props:{\"id\":\"mutual-tls-example\"}},\"Mutual TLS example\"),React.createElement(MDXTag,{name:\"p\",components:components},\"Create pods, services, destinationrules, virtualservices\"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{\"className\":\"language-bash\"}},\"kubectl create -f <(istioctl kube-inject -f helloworld-tls.yaml)\\nkubectl create -f helloworld-legacy.yaml\\n\")),React.createElement(MDXTag,{name:\"h3\",components:components,props:{\"id\":\"end-user-authentication\"}},\"End-user authentication\"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{\"className\":\"language-bash\"}},\"kubectl create -f <(istioctl kube-inject -f helloworld-jwt.yaml)\\nkubectl create -f helloworld-jwt-enable.yaml\\n\")),React.createElement(MDXTag,{name:\"p\",components:components},\"If we want to access a Pod, we need to use a gateway. \"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{\"className\":\"language-yaml\"}},\"# helloworld-gw.yaml\\napiVersion: networking.istio.io/v1alpha3\\nkind: Gateway\\nmetadata:\\n  name: helloworld-gateway\\nspec:\\n  selector:\\n    istio: ingressgateway # use istio default controller\\n  servers:\\n  - port:\\n      number: 80\\n      name: http\\n      protocol: HTTP\\n    hosts:\\n    - \\\"*\\\"\\n---\\napiVersion: networking.istio.io/v1alpha3\\nkind: VirtualService\\nmetadata:\\n  name: helloworld\\nspec:\\n  hosts:\\n  - \\\"*\\\"\\n  gateways:\\n  - helloworld-gateway\\n  http:\\n  - match:\\n    - uri:\\n        prefix: /hello\\n    route:\\n    - destination:\\n        host: hello.default.svc.cluster.local\\n        port:\\n          number: 8080\\n\")),React.createElement(MDXTag,{name:\"p\",components:components},\"If you want a service within Istio, you will always need to define the \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"VirtualService\"),\". We don't need the \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"VirtualService\"),\" for services that are accessed by the client.\"),React.createElement(MDXTag,{name:\"h2\",components:components,props:{\"id\":\"73-advanced-istio-routing\"}},\"7.3 Advanced Istio Routing\"),React.createElement(MDXTag,{name:\"p\",components:components},React.createElement(MDXTag,{name:\"img\",components:components,parentName:\"p\",props:{\"src\":\"https://res.cloudinary.com/gitgoodclub/image/upload/v1540109060/Screen_Shot_2018-10-21_at_7.04.07_pm.png\",\"alt\":\"Advanced Routing Setup\"}})),React.createElement(MDXTag,{name:\"p\",components:components},\"Thanks to Istio, we can do advanced routing based around the above diagram thanks to the Deployments having different metadata:\"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{\"className\":\"language-yaml\"}},\"apiVersion: networking.istio.io/v1alpha3\\nkind: DestinationRule\\nmetadata:\\n  name: hello\\nspec:\\n  host: hello.default.svc.cluster.local\\n  # ! Subsets is where the magic happens!\\n  subsets:\\n  - name: v1\\n    labels:\\n      version: v1\\n  - name: v2\\n    labels:\\n      version: v2\\n---\\napiVersion: networking.istio.io/v1alpha3\\nkind: VirtualService\\nmetadata:\\n  name: helloworld\\nspec:\\n  hosts:\\n  - \\\"hello.example.com\\\"\\n  gateways:\\n  - helloworld-gateway\\n  http:\\n  - match:\\n    - headers:\\n        end-user:\\n          exact: john\\n    route:\\n    - destination:\\n        host: hello.default.svc.cluster.local\\n        subset: v2 # ! match v2 only\\n        port:\\n          number: 8080\\n  - route: # default route for hello.example.com\\n    - destination:\\n        host: ! hello.default.svc.cluster.local\\n        subset: v1 # match v1 only\\n        port:\\n          number: 8080\\n\")),React.createElement(MDXTag,{name:\"p\",components:components},\"Now, if we apply this virtual service to the service mesh, then based on whether we pass the \\\"end-user\\\" header or not, we will hit either v1 or v2!\"),React.createElement(MDXTag,{name:\"h2\",components:components,props:{\"id\":\"74-canary-deployments\"}},\"7.4 Canary deployments\"),React.createElement(MDXTag,{name:\"p\",components:components},\"Canary deployments basically want routing mainly to the first version, but we also want some A/B testing to have version 2 having a 10% weight.\"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{\"className\":\"language-yaml\"}},\"apiVersion: networking.istio.io/v1alpha3\\nkind: DestinationRule\\nmetadata:\\n  name: hello\\nspec:\\n  host: hello.default.svc.cluster.local\\n  subsets:\\n  - name: v1\\n    labels:\\n      version: v1\\n  - name: v2\\n    labels:\\n      version: v2\\n---\\napiVersion: networking.istio.io/v1alpha3\\nkind: VirtualService\\nmetadata:\\n  name: helloworld\\nspec:\\n  hosts:\\n  - \\\"hello.example.com\\\"\\n  gateways:\\n  - helloworld-gateway\\n  http:\\n  - route:\\n    - destination:\\n        host: hello.default.svc.cluster.local\\n        subset: v1\\n        port:\\n          number: 8080\\n      weight: 90\\n    - destination:\\n        host: hello.default.svc.cluster.local\\n        subset: v2\\n        port:\\n          number: 8080\\n      weight: 10\\n\")),React.createElement(MDXTag,{name:\"h2\",components:components,props:{\"id\":\"75-running-retries\"}},\"7.5 Running retries\"),React.createElement(MDXTag,{name:\"p\",components:components},\"If one of the pods stop working, we can retry to another pod without the client seeing any of the issues. The example app has one of three pods running with a 5s latency but a 2s timeout to demonstrate this. It looks like the following:\"),React.createElement(MDXTag,{name:\"p\",components:components},React.createElement(MDXTag,{name:\"img\",components:components,parentName:\"p\",props:{\"src\":\"https://res.cloudinary.com/gitgoodclub/image/upload/v1540110459/Screen_Shot_2018-10-21_at_7.26.50_pm.png\",\"alt\":\"Retry diagram\"}})),React.createElement(MDXTag,{name:\"h2\",components:components,props:{\"id\":\"76-mutual-tls\"}},\"7.6 Mutual TLS\"),React.createElement(MDXTag,{name:\"p\",components:components},\"The goals of Istio security are:\"),React.createElement(MDXTag,{name:\"ul\",components:components},React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},React.createElement(MDXTag,{name:\"strong\",components:components,parentName:\"li\"},\"Security by default:\"),\" no changes needed for application code and infrastructure.\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},React.createElement(MDXTag,{name:\"strong\",components:components,parentName:\"li\"},\"Defense in depth:\"),\" integrate with existing security systems to provide multiple layers of defense.\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},React.createElement(MDXTag,{name:\"strong\",components:components,parentName:\"li\"},\"Zero-trust network:\"),\" build security solutions on untrusted networks.\")),React.createElement(MDXTag,{name:\"p\",components:components},\"Two types of auth:\"),React.createElement(MDXTag,{name:\"ol\",components:components},React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ol\"},\"Transport authentication (service to service authentication) using Mutual TLS.\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ol\"},\"Origin authentication (end-user authentication). Verifying the end user using JWTs.\")),React.createElement(MDXTag,{name:\"p\",components:components},\"Mutual TLS can be turned on \",React.createElement(MDXTag,{name:\"strong\",components:components,parentName:\"p\"},\"without having to change the code of applications\"),\" (because of the sidecar deployment).\"),React.createElement(MDXTag,{name:\"p\",components:components},\"It provides each service with a \",React.createElement(MDXTag,{name:\"strong\",components:components,parentName:\"p\"},\"strong identity\"),\".\"),React.createElement(MDXTag,{name:\"ul\",components:components},React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"Attacks like impersonation be rerouting DNS records will fail, because a fake application can't prove its identity using the certificate mechanism.\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},React.createElement(MDXTag,{name:\"strong\",components:components,parentName:\"li\"},\"Secures (encrypts)\"),\" service-to-service and end-user-to-service communication.\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"Provides key and certificate management to \",React.createElement(MDXTag,{name:\"strong\",components:components,parentName:\"li\"},\"manage generation, distribution and rotation\"),\".\")),React.createElement(MDXTag,{name:\"p\",components:components},React.createElement(MDXTag,{name:\"img\",components:components,parentName:\"p\",props:{\"src\":\"https://res.cloudinary.com/gitgoodclub/image/upload/v1540153502/Screen_Shot_2018-10-22_at_7.24.10_am.png\",\"alt\":\"TLS Example App\"}})),React.createElement(MDXTag,{name:\"ul\",components:components},React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"Legacy applications with not have a sidecar. \"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"One service will go LTR, and the other RTL.\")),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{\"className\":\"language-yaml\"}},\"apiVersion: v1\\nkind: Namespace\\nmetadata:\\n  name: ns1\\n---\\napiVersion: v1\\nkind: Namespace\\nmetadata:\\n  name: ns2\\n---\\napiVersion: extensions/v1beta1\\nkind: Deployment\\nmetadata:\\n  name: hello-tls\\n  namespace: ns1\\nspec:\\n  replicas: 1\\n  template:\\n    metadata:\\n      labels:\\n        app: hello\\n        version: v1-tls\\n    spec:\\n      containers:\\n      - name: hello\\n        image: wardviaene/http-echo\\n        env:\\n        - name: TEXT\\n          value: hello\\n        - name: NEXT\\n          value: \\\"world.ns2:8080\\\"\\n        ports:\\n        - name: http\\n          containerPort: 8080\\n---\\napiVersion: extensions/v1beta1\\nkind: Deployment\\nmetadata:\\n  name: world-tls\\n  namespace: ns2\\nspec:\\n  replicas: 1\\n  template:\\n    metadata:\\n      labels:\\n        app: world\\n        version: v1-tls\\n    spec:\\n      containers:\\n      - name: hello\\n        image: wardviaene/http-echo\\n        env:\\n        - name: TEXT\\n          value: world\\n        - name: NEXT\\n          value: \\\"end.legacy:8080\\\"\\n        ports:\\n        - name: http\\n          containerPort: 8080\\n---\\napiVersion: extensions/v1beta1\\nkind: Deployment\\nmetadata:\\n  name: world-reverse-tls\\n  namespace: ns2\\nspec:\\n  replicas: 1\\n  template:\\n    metadata:\\n      labels:\\n        app: world-reverse\\n        version: v1-tls\\n    spec:\\n      containers:\\n      - name: hello\\n        image: wardviaene/http-echo\\n        env:\\n        - name: TEXT\\n          value: world\\n        - name: NEXT\\n          value: \\\"end-reverse.ns1:8080\\\"\\n        ports:\\n        - name: http\\n          containerPort: 8080\\n---\\napiVersion: extensions/v1beta1\\nkind: Deployment\\nmetadata:\\n  name: end-reverse-tls\\n  namespace: ns1\\nspec:\\n  replicas: 1\\n  template:\\n    metadata:\\n      labels:\\n        app: end-reverse\\n        version: v1-tls\\n    spec:\\n      containers:\\n      - name: hello\\n        image: wardviaene/http-echo\\n        env:\\n        - name: TEXT\\n          value: \\\"!!!\\\"\\n        ports:\\n        - name: http\\n          containerPort: 8080\\n---\\napiVersion: v1\\nkind: Service\\nmetadata:\\n  name: hello\\n  namespace: ns1\\n  labels:\\n    app: hello\\nspec:\\n  selector:\\n    app: hello\\n  ports:\\n  - name: http\\n    port: 8080\\n    targetPort: 8080\\n---\\napiVersion: v1\\nkind: Service\\nmetadata:\\n  name: world\\n  namespace: ns2\\n  labels:\\n    app: world\\nspec:\\n  selector:\\n    app: world\\n  ports:\\n  - name: http\\n    port: 8080\\n    targetPort: 8080\\n---\\napiVersion: v1\\nkind: Service\\nmetadata:\\n  name: world-reverse\\n  namespace: ns2\\n  labels:\\n    app: world-reverse\\nspec:\\n  selector:\\n    app: world-reverse\\n  ports:\\n  - name: http\\n    port: 8080\\n    targetPort: 8080\\n---\\napiVersion: v1\\nkind: Service\\nmetadata:\\n  name: end-reverse\\n  namespace: ns1\\n  labels:\\n    app: end-reverse\\nspec:\\n  selector:\\n    app: end-reverse\\n  ports:\\n  - name: http\\n    port: 8080\\n    targetPort: 8080\\n---\\napiVersion: networking.istio.io/v1alpha3\\nkind: Gateway\\nmetadata:\\n  name: helloworld-gateway\\nspec:\\n  selector:\\n    istio: ingressgateway # use istio default controller\\n  servers:\\n  - port:\\n      number: 80\\n      name: http\\n      protocol: HTTP\\n    hosts:\\n    - \\\"*\\\"\\n---\\napiVersion: networking.istio.io/v1alpha3\\nkind: DestinationRule\\nmetadata:\\n  name: hello\\nspec:\\n  host: hello.ns1.svc.cluster.local\\n  # uncomment to enable mutual TLS\\n  #trafficPolicy:\\n  #  tls:\\n  #    mode: ISTIO_MUTUAL\\n  subsets:\\n  - name: v1-tls\\n    labels:\\n      version: v1-tls\\n---\\napiVersion: networking.istio.io/v1alpha3\\nkind: DestinationRule\\nmetadata:\\n  name: hello-reverse\\nspec:\\n  host: hello-reverse.legacy.svc.cluster.local\\n  # uncomment to enable mutual TLS\\n  #trafficPolicy:\\n  #  tls:\\n  #    mode: ISTIO_MUTUAL\\n  subsets:\\n  - name: v1-tls\\n    labels:\\n      version: v1-tls\\n---\\napiVersion: networking.istio.io/v1alpha3\\nkind: VirtualService\\nmetadata:\\n  name: helloworld-tls\\nspec:\\n  hosts:\\n  - \\\"hello-tls.example.com\\\"\\n  gateways:\\n  - helloworld-gateway\\n  http:\\n  - route:\\n    - destination:\\n        host: hello.ns1.svc.cluster.local\\n        subset: v1-tls # match v3 only\\n        port:\\n          number: 8080\\n---\\napiVersion: networking.istio.io/v1alpha3\\nkind: VirtualService\\nmetadata:\\n  name: helloworld-tls-reverse\\nspec:\\n  hosts:\\n  - \\\"hello-tls-reverse.example.com\\\"\\n  gateways:\\n  - helloworld-gateway\\n  http:\\n  - route:\\n    - destination:\\n        host: hello-reverse.legacy.svc.cluster.local\\n        subset: v1-tls\\n        port:\\n          number: 8080\\n\")),React.createElement(MDXTag,{name:\"p\",components:components},\"As for the missing legacy services, they can be found in the \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"helloworld-legacy\"),\" file:\"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{\"className\":\"language-yaml\"}},\"apiVersion: v1\\nkind: Namespace\\nmetadata:\\n  name: legacy\\n---\\napiVersion: extensions/v1beta1\\nkind: Deployment\\nmetadata:\\n  name: end-tls\\n  namespace: legacy\\nspec:\\n  replicas: 1\\n  template:\\n    metadata:\\n      labels:\\n        app: end\\n        version: v1-tls\\n    spec:\\n      containers:\\n      - name: hello\\n        image: wardviaene/http-echo\\n        env:\\n        - name: TEXT\\n          value: \\\"!!!\\\"\\n        ports:\\n        - name: http\\n          containerPort: 8080\\n---\\napiVersion: extensions/v1beta1\\nkind: Deployment\\nmetadata:\\n  name: hello-reverse-tls\\n  namespace: legacy\\nspec:\\n  replicas: 1\\n  template:\\n    metadata:\\n      labels:\\n        app: hello-reverse\\n        version: v1-tls\\n    spec:\\n      containers:\\n      - name: hello\\n        image: wardviaene/http-echo\\n        env:\\n        - name: TEXT\\n          value: hello\\n        - name: NEXT\\n          value: \\\"world-reverse.ns2:8080\\\"\\n        ports:\\n        - name: http\\n          containerPort: 8080\\n---\\napiVersion: v1\\nkind: Service\\nmetadata:\\n  name: end\\n  namespace: legacy\\n  labels:\\n    app: end\\nspec:\\n  selector:\\n    app: end\\n  ports:\\n  - name: http\\n    port: 8080\\n    targetPort: 8080\\n---\\napiVersion: v1\\nkind: Service\\nmetadata:\\n  name: hello-reverse\\n  namespace: legacy\\n  labels:\\n    app: hello-reverse\\nspec:\\n  selector:\\n    app: hello-reverse\\n  ports:\\n  - name: http\\n    port: 8080\\n    targetPort: 8080\\n\")),React.createElement(MDXTag,{name:\"p\",components:components},\"Both these files can applied by running the following:\"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{\"className\":\"language-bash\"}},\"$ kubectl apply -f <(istioctl kube-inject -f helloworld-tls.yaml)\\n$ kubectl apply -f helloworld-legacy.yaml\\n$ kubetl get svc -o wide -n istio-system # get services from istio-system services\\n# After getting the load balancer, you can then curl the ELB passing the Host header\\n\")),React.createElement(MDXTag,{name:\"p\",components:components},\"Now we need to \",React.createElement(MDXTag,{name:\"strong\",components:components,parentName:\"p\"},\"enable TLS authetication.\")),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{\"className\":\"language-yaml\"}},\"# helloworld-rbac-enable.yaml\\napiVersion: authentication.istio.io/v1alpha1\\nkind: \\\"MeshPolicy\\\"\\nmetadata:\\n  name: \\\"default\\\"\\nspec:\\n  peers:\\n  - mtls: {}\\n---\\n# ensures mtls is push to side cars\\napiVersion: networking.istio.io/v1alpha3\\nkind: DestinationRule\\nmetadata:\\n  name: \\\"enable-mtls\\\"\\n  namespace: \\\"default\\\" # even though we specify a namespace, this rule applies to all namespaces\\nspec:\\n  host: \\\"*.local\\\"\\n  trafficPolicy:\\n    tls:\\n      mode: ISTIO_MUTUAL\\n---\\napiVersion: networking.istio.io/v1alpha3\\nkind: DestinationRule\\nmetadata:\\n name: \\\"api-server\\\"\\nspec:\\n host: \\\"kubernetes.default.svc.cluster.local\\\"\\n trafficPolicy:\\n   tls:\\n     mode: DISABLE\\n---\\napiVersion: networking.istio.io/v1alpha3\\nkind: DestinationRule\\nmetadata:\\n  name: \\\"legacy\\\"\\nspec:\\n  host: \\\"end.legacy.svc.cluster.local\\\"\\n  trafficPolicy:\\n    tls:\\n      mode: DISABLE\\n\")),React.createElement(MDXTag,{name:\"p\",components:components},\"Apply this file to enable mutual TLS that works one way but not the other (as like in the diagram). However, in the above yaml files we did now enable the traffic policy, so you need to update that and apply the updated files for all of this to work.\"),React.createElement(MDXTag,{name:\"h2\",components:components,props:{\"id\":\"77-rbac-with-istio-and-mtls\"}},\"7.7 RBAC with Istio and MTLS\"),React.createElement(MDXTag,{name:\"p\",components:components},\"Now that we have MTLS, we have strong identites.\"),React.createElement(MDXTag,{name:\"p\",components:components},\"Based on those identities, we can start doing \",React.createElement(MDXTag,{name:\"strong\",components:components,parentName:\"p\"},\"Role Based Access Control (RBAC)\"),\".\"),React.createElement(MDXTag,{name:\"p\",components:components},\"RBAC allows us to limit access \",React.createElement(MDXTag,{name:\"strong\",components:components,parentName:\"p\"},\"between our services\"),\" and from \",React.createElement(MDXTag,{name:\"strong\",components:components,parentName:\"p\"},\"end-user to services\"),\".\"),React.createElement(MDXTag,{name:\"p\",components:components},\"Istio is able to verify the identity of a service by \",React.createElement(MDXTag,{name:\"strong\",components:components,parentName:\"p\"},\"checking the identity of the x.509 certificate (which comes with enabled mutual TLS)\"),\". Example: with RBAC, service A might be able to be contacted by B, but not by C.\"),React.createElement(MDXTag,{name:\"p\",components:components},\"Istio is using SPIFFE standard (another CNFC project).\"),React.createElement(MDXTag,{name:\"p\",components:components},\"RBAC in istio:\"),React.createElement(MDXTag,{name:\"ul\",components:components},React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"Can provide \",React.createElement(MDXTag,{name:\"strong\",components:components,parentName:\"li\"},\"service-to-service\"),\" and \",React.createElement(MDXTag,{name:\"strong\",components:components,parentName:\"li\"},\"end-user-to-service\"),\" auth.\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"Supports \",React.createElement(MDXTag,{name:\"strong\",components:components,parentName:\"li\"},\"conditions\"),\" and \",React.createElement(MDXTag,{name:\"strong\",components:components,parentName:\"li\"},\"role-binding\"),\".\",React.createElement(MDXTag,{name:\"ul\",components:components,parentName:\"li\"},React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"You can bind to \",React.createElement(MDXTag,{name:\"strong\",components:components,parentName:\"li\"},\"ServiceAccounts\"),\" (which can be linked to pods).\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"End-user-to-service can for example let you create \",React.createElement(MDXTag,{name:\"strong\",components:components,parentName:\"li\"},\"condition on being authenticated using JWT\"),\".\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"It has high performance.\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"Not enabled by default.\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"We can enable it globally or on a namespace.\")))),React.createElement(MDXTag,{name:\"p\",components:components},\"Example for including it on the \\\"default\\\" namespace:\"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{\"className\":\"language-yaml\"}},\"apiVersion: \\\"rbac.istio.io/v1alpha1\\\"\\nkind: RbacConfig\\nmetadata:\\n  name: default\\nspec:\\n  mode: 'ON_WITH_INCLUSION'\\n  inclusion:\\n    namespaces: [\\\"default\\\"]\\n---\\napiVersion: authentication.istio.io/v1alpha1\\nkind: \\\"MeshPolicy\\\"\\nmetadata:\\n  name: \\\"default\\\"\\nspec:\\n  peers:\\n  - mtls: {}\\n---\\napiVersion: networking.istio.io/v1alpha3\\nkind: DestinationRule\\nmetadata:\\n  name: \\\"enable-mtls\\\"\\n  namespace: \\\"default\\\" # even though we specify a namespace, this rule applies to all namespaces\\nspec:\\n  host: \\\"*.local\\\"\\n  trafficPolicy:\\n    tls:\\n      mode: ISTIO_MUTUAL\\n---\\napiVersion: networking.istio.io/v1alpha3\\nkind: DestinationRule\\nmetadata:\\n name: \\\"api-server\\\"\\nspec:\\n host: \\\"kubernetes.default.svc.cluster.local\\\"\\n trafficPolicy:\\n   tls:\\n     mode: DISABLE\\n\")),React.createElement(MDXTag,{name:\"p\",components:components},\"We can then create a \",React.createElement(MDXTag,{name:\"strong\",components:components,parentName:\"p\"},\"ServiceRole\"),\" specifying the rules and a \",React.createElement(MDXTag,{name:\"strong\",components:components,parentName:\"p\"},\"ServiceRoleBinding\"),\" to link a \",React.createElement(MDXTag,{name:\"strong\",components:components,parentName:\"p\"},\"ServiceRole\"),\" to a subject (example Kubernetes \",React.createElement(MDXTag,{name:\"strong\",components:components,parentName:\"p\"},\"ServiceAccount\"),\").\"),React.createElement(MDXTag,{name:\"p\",components:components},\"Example of how we want the demo to look when it comes to what it can contact:\"),React.createElement(MDXTag,{name:\"p\",components:components},React.createElement(MDXTag,{name:\"img\",components:components,parentName:\"p\",props:{\"src\":\"https://res.cloudinary.com/gitgoodclub/image/upload/v1540155683/Screen_Shot_2018-10-22_at_8.00.47_am.png\",\"alt\":\"Contact rules\"}})),React.createElement(MDXTag,{name:\"p\",components:components},\"The order for the following is:\"),React.createElement(MDXTag,{name:\"ol\",components:components},React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ol\"},\"Create \",React.createElement(MDXTag,{name:\"strong\",components:components,parentName:\"li\"},\"ServiceRoles\"),\" that only enable certain methods and services with specific access.\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ol\"},\"Enable \",React.createElement(MDXTag,{name:\"strong\",components:components,parentName:\"li\"},\"ServiceRoleBindings\"),\" to bind that the \",React.createElement(MDXTag,{name:\"strong\",components:components,parentName:\"li\"},\"ServiceRoles\"),\" to a \",React.createElement(MDXTag,{name:\"strong\",components:components,parentName:\"li\"},\"subject\"),\" (or \",React.createElement(MDXTag,{name:\"strong\",components:components,parentName:\"li\"},\"ingress controller name\"),\" in the first case).\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ol\"},\"Create the \",React.createElement(MDXTag,{name:\"strong\",components:components,parentName:\"li\"},\"ServiceAccounts\"),\" that have the correct metadata required for the \",React.createElement(MDXTag,{name:\"strong\",components:components,parentName:\"li\"},\"ServiceRoleBindings\"),\".\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ol\"},\"Create the \",React.createElement(MDXTag,{name:\"strong\",components:components,parentName:\"li\"},\"Deployments\"),\" that have the affiliated \",React.createElement(MDXTag,{name:\"strong\",components:components,parentName:\"li\"},\"ServiceAccount\"),\" required.\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ol\"},\"Create a \",React.createElement(MDXTag,{name:\"strong\",components:components,parentName:\"li\"},\"Service\"),\" for that \",React.createElement(MDXTag,{name:\"strong\",components:components,parentName:\"li\"},\"Deployment\"),\".\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ol\"},\"Create the \",React.createElement(MDXTag,{name:\"strong\",components:components,parentName:\"li\"},\"Gateway\"),\" that uses the default \",React.createElement(MDXTag,{name:\"strong\",components:components,parentName:\"li\"},\"Istio Gateway\"),\" to access the \",React.createElement(MDXTag,{name:\"strong\",components:components,parentName:\"li\"},\"Services\"),\".\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ol\"},\"Create the \",React.createElement(MDXTag,{name:\"strong\",components:components,parentName:\"li\"},\"VirtualService\"),\" that gives us access to the hello world app through the \",React.createElement(MDXTag,{name:\"strong\",components:components,parentName:\"li\"},\"Gateway\"),\" connected to the \",React.createElement(MDXTag,{name:\"strong\",components:components,parentName:\"li\"},\"Service\"),\" which sits within the \",React.createElement(MDXTag,{name:\"strong\",components:components,parentName:\"li\"},\"ServiceMesh\"),\" from the \",React.createElement(MDXTag,{name:\"strong\",components:components,parentName:\"li\"},\"IngressController\"),\".\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ol\"},\"Create the \",React.createElement(MDXTag,{name:\"strong\",components:components,parentName:\"li\"},\"DestinationRule\"),\" that allows allows access to the \",React.createElement(MDXTag,{name:\"strong\",components:components,parentName:\"li\"},\"VirtualService\"),\" using \",React.createElement(MDXTag,{name:\"strong\",components:components,parentName:\"li\"},\"MTLS\"),\" from the \",React.createElement(MDXTag,{name:\"strong\",components:components,parentName:\"li\"},\"IngressController\"),\" which is a \",React.createElement(MDXTag,{name:\"strong\",components:components,parentName:\"li\"},\"Reverse Proxy internal load balancer\"),\" accessed from the external \",React.createElement(MDXTag,{name:\"strong\",components:components,parentName:\"li\"},\"AWS LoadBalancer\"),\" tied to the accessible \",React.createElement(MDXTag,{name:\"strong\",components:components,parentName:\"li\"},\"DNS Records\"),\".\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ol\"},\"You can now access the microservice from the \",React.createElement(MDXTag,{name:\"strong\",components:components,parentName:\"li\"},\"AWS LoadBalancer Route53 alias\"),\" passing the \",React.createElement(MDXTag,{name:\"strong\",components:components,parentName:\"li\"},\"internal namespace domain\"),\" as the \",React.createElement(MDXTag,{name:\"strong\",components:components,parentName:\"li\"},\"host header\"),\".\")),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{\"className\":\"language-yaml\"}},\"# ! helloworld-rbac.yaml file\\napiVersion: \\\"rbac.istio.io/v1alpha1\\\"\\nkind: ServiceRole\\nmetadata:\\n  name: hello-viewer\\n  namespace: default\\nspec:\\n  rules:\\n  - services: [\\\"hello.default.svc.cluster.local\\\"]\\n    methods: [\\\"GET\\\", \\\"HEAD\\\"]\\n---\\napiVersion: \\\"rbac.istio.io/v1alpha1\\\"\\nkind: ServiceRole\\nmetadata:\\n  name: world-viewer\\n  namespace: default\\nspec:\\n  rules:\\n  - services: [\\\"world.default.svc.cluster.local\\\"]\\n    methods: [\\\"GET\\\", \\\"HEAD\\\"]\\n---\\napiVersion: \\\"rbac.istio.io/v1alpha1\\\"\\nkind: ServiceRole\\nmetadata:\\n  name: world-2-viewer\\n  namespace: default\\nspec:\\n  rules:\\n  - services: [\\\"world-2.default.svc.cluster.local\\\"]\\n    methods: [\\\"GET\\\", \\\"HEAD\\\"]\\n---\\napiVersion: \\\"rbac.istio.io/v1alpha1\\\"\\nkind: ServiceRoleBinding\\nmetadata:\\n  name: istio-ingress-binding\\n  namespace: default\\nspec:\\n  subjects:\\n  - properties:\\n      source.namespace: \\\"istio-system\\\"\\n  roleRef:\\n    kind: ServiceRole\\n    name: \\\"hello-viewer\\\"\\n---\\napiVersion: \\\"rbac.istio.io/v1alpha1\\\"\\nkind: ServiceRoleBinding\\nmetadata:\\n  name: hello-user-binding\\n  namespace: default\\nspec:\\n  subjects:\\n  - user: \\\"cluster.local/ns/default/sa/hello\\\"\\n  roleRef:\\n    kind: ServiceRole\\n    name: \\\"world-viewer\\\"\\n---\\napiVersion: \\\"rbac.istio.io/v1alpha1\\\"\\nkind: ServiceRoleBinding\\nmetadata:\\n  name: world-user-binding\\n  namespace: default\\nspec:\\n  subjects:\\n  - user: \\\"cluster.local/ns/default/sa/world\\\"\\n  roleRef:\\n    kind: ServiceRole\\n    name: \\\"world-2-viewer\\\"\\n---\\n###\\n### Kubernetes Service accounts\\n###\\napiVersion: v1\\nkind: ServiceAccount\\nmetadata:\\n  name: hello\\n---\\napiVersion: v1\\nkind: ServiceAccount\\nmetadata:\\n  name: world\\n---\\n###\\n### helloworld.yaml deployments, including a serviceaccount\\n### for the hello deployment and the world deployment\\n###\\napiVersion: extensions/v1beta1\\nkind: Deployment\\nmetadata:\\n  name: hello\\nspec:\\n  replicas: 1\\n  template:\\n    metadata:\\n      labels:\\n        app: hello\\n        version: v1\\n    spec:\\n      serviceAccountName: hello  # service account\\n      containers:\\n      - name: hello\\n        image: wardviaene/http-echo\\n        env:\\n        - name: TEXT\\n          value: hello\\n        - name: NEXT\\n          value: \\\"world:8080\\\"\\n        ports:\\n        - name: http\\n          containerPort: 8080\\n---\\napiVersion: v1\\nkind: Service\\nmetadata:\\n  name: hello\\n  labels:\\n    app: hello\\nspec:\\n  selector:\\n    app: hello\\n  ports:\\n  - name: http\\n    port: 8080\\n    targetPort: 8080\\n---\\napiVersion: extensions/v1beta1\\nkind: Deployment\\nmetadata:\\n  name: world\\nspec:\\n  replicas: 1\\n  template:\\n    metadata:\\n      labels:\\n        app: world\\n        version: v1\\n    spec:\\n      serviceAccountName: world  # service account\\n      containers:\\n      - name: world\\n        image: wardviaene/http-echo\\n        env:\\n        - name: TEXT\\n          value: world\\n        - name: NEXT\\n          value: \\\"world-2:8080\\\"\\n        ports:\\n        - name: http\\n          containerPort: 8080\\n---\\napiVersion: v1\\nkind: Service\\nmetadata:\\n  name: world\\n  labels:\\n    app: world\\nspec:\\n  selector:\\n    app: world\\n  ports:\\n  - name: http\\n    port: 8080\\n    targetPort: 8080\\n---\\napiVersion: extensions/v1beta1\\nkind: Deployment\\nmetadata:\\n  name: world-2\\nspec:\\n  replicas: 1\\n  template:\\n    metadata:\\n      labels:\\n        app: world-2\\n        version: v1\\n    spec:\\n      containers:\\n      - name: world-2\\n        image: wardviaene/http-echo\\n        env:\\n        - name: TEXT\\n          value: \\\"!!!\\\"\\n        ports:\\n        - name: http\\n          containerPort: 8080\\n---\\napiVersion: v1\\nkind: Service\\nmetadata:\\n  name: world-2\\n  labels:\\n    app: world-2\\nspec:\\n  selector:\\n    app: world-2\\n  ports:\\n  - name: http\\n    port: 8080\\n    targetPort: 8080\\n---\\napiVersion: networking.istio.io/v1alpha3\\nkind: Gateway\\nmetadata:\\n  name: helloworld-gateway\\nspec:\\n  selector:\\n    istio: ingressgateway # use istio default controller\\n  servers:\\n  - port:\\n      number: 80\\n      name: http\\n      protocol: HTTP\\n    hosts:\\n    - \\\"*\\\"\\n---\\napiVersion: networking.istio.io/v1alpha3\\nkind: VirtualService\\nmetadata:\\n  name: helloworld\\nspec:\\n  hosts:\\n  - \\\"hello-rbac.example.com\\\"\\n  gateways:\\n  - helloworld-gateway\\n  http:\\n  - route:\\n    - destination:\\n        host: hello.default.svc.cluster.local\\n        subset: v1\\n        port:\\n          number: 8080\\n---\\napiVersion: networking.istio.io/v1alpha3\\nkind: DestinationRule\\nmetadata:\\n  name: hello\\nspec:\\n  host: hello.default.svc.cluster.local\\n  # uncomment to enable mutual TLS\\n  trafficPolicy:\\n    tls:\\n      mode: ISTIO_MUTUAL\\n  subsets:\\n  - name: v1\\n    labels:\\n      version: v1\\n\")),React.createElement(MDXTag,{name:\"p\",components:components},\"This again requires the rbac prequisite:\"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{\"className\":\"language-yaml\"}},\"# helloworld-rbac-enable.yaml\\napiVersion: authentication.istio.io/v1alpha1\\nkind: \\\"MeshPolicy\\\"\\nmetadata:\\n  name: \\\"default\\\"\\nspec:\\n  peers:\\n  - mtls: {}\\n---\\n# ensures mtls is push to side cars\\napiVersion: networking.istio.io/v1alpha3\\nkind: DestinationRule\\nmetadata:\\n  name: \\\"enable-mtls\\\"\\n  namespace: \\\"default\\\" # even though we specify a namespace, this rule applies to all namespaces\\nspec:\\n  host: \\\"*.local\\\"\\n  trafficPolicy:\\n    tls:\\n      mode: ISTIO_MUTUAL\\n---\\napiVersion: networking.istio.io/v1alpha3\\nkind: DestinationRule\\nmetadata:\\n name: \\\"api-server\\\"\\nspec:\\n host: \\\"kubernetes.default.svc.cluster.local\\\"\\n trafficPolicy:\\n   tls:\\n     mode: DISABLE\\n---\\napiVersion: networking.istio.io/v1alpha3\\nkind: DestinationRule\\nmetadata:\\n  name: \\\"legacy\\\"\\nspec:\\n  host: \\\"end.legacy.svc.cluster.local\\\"\\n  trafficPolicy:\\n    tls:\\n      mode: DISABLE\\n\")),React.createElement(MDXTag,{name:\"p\",components:components},React.createElement(MDXTag,{name:\"img\",components:components,parentName:\"p\",props:{\"src\":\"https://res.cloudinary.com/gitgoodclub/image/upload/v1540159695/Screen_Shot_2018-10-22_at_9.07.45_am.png\",\"alt\":\"After applying the files to Istio\"}})),React.createElement(MDXTag,{name:\"p\",components:components},\"Evidently enough, it is incredibly important to ensure the routing is set up correctly so there is no large scale failure.\"),React.createElement(MDXTag,{name:\"h2\",components:components,props:{\"id\":\"78-end-user-authentication\"}},\"7.8 End-user Authentication\"),React.createElement(MDXTag,{name:\"p\",components:components},\"Istio currently supports JWT tokens to authenticate users.\"),React.createElement(MDXTag,{name:\"p\",components:components},\"In the implementation, the user will receive a JWT token from an authenticated server after logging in.\"),React.createElement(MDXTag,{name:\"ul\",components:components},React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"This app will provide us with a token that is \",React.createElement(MDXTag,{name:\"strong\",components:components,parentName:\"li\"},\"signed with a key\"),\".\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"The data is not encrypted, but the \",React.createElement(MDXTag,{name:\"strong\",components:components,parentName:\"li\"},\"token contains a signature\"),\", which can be \",React.createElement(MDXTag,{name:\"strong\",components:components,parentName:\"li\"},\"verified\"),\" to see \",React.createElement(MDXTag,{name:\"strong\",components:components,parentName:\"li\"},\"whether it was really created by the server\"),\".\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"Only the server has the \",React.createElement(MDXTag,{name:\"strong\",components:components,parentName:\"li\"},\"private key\"),\", so we can't recreate or tamper with the token.\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"Using microservices, every app would need to be \",React.createElement(MDXTag,{name:\"strong\",components:components,parentName:\"li\"},\"seperately configured\"),\".\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"Every service would need to \",React.createElement(MDXTag,{name:\"strong\",components:components,parentName:\"li\"},\"validate the token\"),\".\",React.createElement(MDXTag,{name:\"ul\",components:components,parentName:\"li\"},React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"Once validated the service would need to check whether the user has access to this service.\"))),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"With Istio, \",React.createElement(MDXTag,{name:\"strong\",components:components,parentName:\"li\"},\"this can be taken away from the app code and managed centrally.\")),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"You can configure the \",React.createElement(MDXTag,{name:\"strong\",components:components,parentName:\"li\"},\"jwt token signature/properties\"),\" you expect in into and have \",React.createElement(MDXTag,{name:\"strong\",components:components,parentName:\"li\"},\"policies to allow/disallow access to a service.\"),React.createElement(MDXTag,{name:\"ul\",components:components,parentName:\"li\"},React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"Example \\\"hello\\\" app might only be accessible if user is authenticated.\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"The \",React.createElement(MDXTag,{name:\"strong\",components:components,parentName:\"li\"},\"sidecar\"),\" will verify the \",React.createElement(MDXTag,{name:\"strong\",components:components,parentName:\"li\"},\"validity\"),\" of the signature, to make sure the token is valid.\")))),React.createElement(MDXTag,{name:\"p\",components:components},React.createElement(MDXTag,{name:\"img\",components:components,parentName:\"p\",props:{\"src\":\"https://res.cloudinary.com/gitgoodclub/image/upload/v1540160832/Screen_Shot_2018-10-22_at_9.26.42_am.png\",\"alt\":\"JWT Token setup\"}})),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{\"className\":\"language-yaml\"}},\"# Istio with JWT Auth\\n# helloworld-jwt.yaml\\napiVersion: networking.istio.io/v1alpha3\\nkind: Gateway\\nmetadata:\\n  name: helloworld-gateway\\nspec:\\n  selector:\\n    istio: ingressgateway # use istio default controller\\n  servers:\\n  - port:\\n      number: 80\\n      name: http\\n      protocol: HTTP\\n    hosts:\\n    - \\\"*\\\"\\n---\\napiVersion: networking.istio.io/v1alpha3\\nkind: VirtualService\\nmetadata:\\n  name: helloworld-auth\\nspec:\\n  # this is a change to previous\\n  hosts:\\n  - \\\"auth.kubernetes.newtech.academy\\\"\\n  gateways:\\n  - helloworld-gateway\\n  http:\\n  - route:\\n    - destination:\\n        host: auth.default.svc.cluster.local\\n        port:\\n          number: 8080\\n---\\napiVersion: networking.istio.io/v1alpha3\\nkind: VirtualService\\nmetadata:\\n  name: helloworld-hello\\nspec:\\n  hosts:\\n  - \\\"hello.kubernetes.newtech.academy\\\"\\n  gateways:\\n  - helloworld-gateway\\n  http:\\n  - route:\\n    - destination:\\n        host: hello.default.svc.cluster.local\\n        port:\\n          number: 8080\\n---\\napiVersion: extensions/v1beta1\\nkind: Deployment\\nmetadata:\\n  name: auth\\nspec:\\n  replicas: 1\\n  template:\\n    metadata:\\n      labels:\\n        app: auth\\n        version: v1\\n    spec:\\n      containers:\\n      - name: auth\\n        image: wardviaene/http-echo\\n        env:\\n        - name: TEXT\\n          value: this is the authentication service\\n        ports:\\n        - name: http\\n          containerPort: 8080\\n---\\napiVersion: v1\\nkind: Service\\nmetadata:\\n  name: auth\\n  labels:\\n    app: auth\\nspec:\\n  selector:\\n    app: auth\\n  ports:\\n  - name: http\\n    port: 8080\\n    targetPort: 8080\\n---\\napiVersion: extensions/v1beta1\\nkind: Deployment\\nmetadata:\\n  name: hello\\nspec:\\n  replicas: 1\\n  template:\\n    metadata:\\n      labels:\\n        app: hello\\n        version: v1\\n    spec:\\n      containers:\\n      - name: hello\\n        image: wardviaene/http-echo\\n        env:\\n        - name: TEXT\\n          value: Hello, you can only reach this service when authenticated\\n        ports:\\n        - name: http\\n          containerPort: 8080\\n---\\napiVersion: v1\\nkind: Service\\nmetadata:\\n  name: hello\\n  labels:\\n    app: hello\\nspec:\\n  selector:\\n    app: hello\\n  ports:\\n  - name: http\\n    port: 8080\\n    targetPort: 8080\\n###\\n### Enable TLS\\n###\\n---\\napiVersion: authentication.istio.io/v1alpha1\\nkind: \\\"MeshPolicy\\\"\\nmetadata:\\n  name: \\\"default\\\"\\nspec:\\n  peers:\\n  - mtls: {}\\n---\\napiVersion: networking.istio.io/v1alpha3\\nkind: DestinationRule\\nmetadata:\\n  name: \\\"enable-mtls\\\"\\n  namespace: \\\"default\\\" # even though we specify a namespace, this rule applies to all namespaces\\nspec:\\n  host: \\\"*.local\\\"\\n  trafficPolicy:\\n    tls:\\n      mode: ISTIO_MUTUAL\\n---\\napiVersion: networking.istio.io/v1alpha3\\nkind: DestinationRule\\nmetadata:\\n name: \\\"api-server\\\"\\nspec:\\n host: \\\"kubernetes.default.svc.cluster.local\\\"\\n trafficPolicy:\\n   tls:\\n     mode: DISABLE\\n\")),React.createElement(MDXTag,{name:\"p\",components:components},\"To get to auth, we need to create an alias for \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"auth.domain.name\"),\" in Route 53 to expose the load balancer.\"),React.createElement(MDXTag,{name:\"p\",components:components},\"To enable the policy for the JWT token auth to take effect, we need to apply the following to the cluster:\"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{\"className\":\"language-yaml\"}},\"# helloworld-jwt-enable.yaml\\napiVersion: \\\"authentication.istio.io/v1alpha1\\\"\\nkind: \\\"Policy\\\"\\nmetadata:\\n  name: \\\"jwt-example\\\"\\nspec:\\n  targets:\\n  - name: hello\\n  peers:\\n  - mtls: {}\\n  origins:\\n  - jwt:\\n      # jwksUri is from auth uri we setup in Route53\\n      issuer: \\\"http-echo@http-echo.kubernetes.newtech.academy\\\"\\n      jwksUri: \\\"http://auth.kubernetes.newtech.academy/.well-known/jwks.json\\\"\\n  principalBinding: USE_ORIGIN\\n---\\n\")),React.createElement(MDXTag,{name:\"p\",components:components},\"After fetching the token, we can now access authenticated routes by passing the header \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"\\\"Authorization\\\": \\\"Bearer $TOKEN\\\"\"),\".\"),React.createElement(MDXTag,{name:\"p\",components:components},\"The example uses \",React.createElement(MDXTag,{name:\"a\",components:components,parentName:\"p\",props:{\"href\":\"https://github.com/wardviaene/http-echo/blob/master/main.go\"}},\"this Github repo\"),\" with the /login route to do auth and another route to check the auth from other services.\"),React.createElement(MDXTag,{name:\"p\",components:components},\"Something useful is that you can also check the logs of the Istio proxy. This can be done with \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"kubectl logs <% pod_name %> -c istio-proxy\"),\".\"),React.createElement(MDXTag,{name:\"h2\",components:components,props:{\"id\":\"79-istio-ingress-traffic\"}},\"7.9 Istio Ingress Traffic\"),React.createElement(MDXTag,{name:\"p\",components:components},\"To enable ingress traffic to allow to access outside services, we can apply an external service file. The following example will allow the \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"ifconfig.co\"),\" hostname to be accessible from the pods.\"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{\"className\":\"language-yaml\"}},\"# external-service.yaml\\n#\\n# http\\n#\\napiVersion: networking.istio.io/v1alpha3\\nkind: ServiceEntry\\nmetadata:\\n  name: ifconfig-co-http\\nspec:\\n  hosts:\\n  - ifconfig.co\\n  ports:\\n  - number: 80\\n    name: http\\n    protocol: HTTP\\n  resolution: DNS\\n  location: MESH_EXTERNAL\\n---\\n#\\n# https\\n#\\napiVersion: networking.istio.io/v1alpha3\\nkind: ServiceEntry\\nmetadata:\\n  name: ifconfig-co-https\\nspec:\\n  hosts:\\n  - ifconfig.co\\n  ports:\\n  - number: 443\\n    name: https\\n    protocol: HTTPS\\n  resolution: DNS\\n  location: MESH_EXTERNAL\\n---\\napiVersion: networking.istio.io/v1alpha3\\nkind: VirtualService\\nmetadata:\\n  name: ifconfig-co\\nspec:\\n  hosts:\\n  - ifconfig.co\\n  tls:\\n  - match:\\n    - port: 443\\n      sni_hosts:\\n      - ifconfig.co\\n    route:\\n    - destination:\\n        host: ifconfig.co\\n        port:\\n          number: 443\\n      weight: 100\\n\")),React.createElement(MDXTag,{name:\"p\",components:components},\"You should now be able to log into the pod to try out contacting other services.\"),React.createElement(MDXTag,{name:\"h2\",components:components,props:{\"id\":\"710-distributed-tracing-with-jaegar\"}},\"7.10 Distributed Tracing with Jaegar\"),React.createElement(MDXTag,{name:\"p\",components:components},\"Jaegar is automatically store in the \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"isto-system\"),\". You can confirm this with the following:\"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{\"className\":\"language-bash\"}},\"$ kubectl get pod -n istio-system # istio-tracing pod\\n$ kubectl get svc -n istio-system # jaegar-[agent/collector/query]\\n# You could export the port for jaegar-query by updating the service\\n$ kubectl edit svc jaegar-query -n istio-system # changing ClusterIP to LoadBalancer\\n\")),React.createElement(MDXTag,{name:\"p\",components:components},\"To find the traces, you need to find the svc \",React.createElement(MDXTag,{name:\"strong\",components:components,parentName:\"p\"},\"LoadBalancer\"),\" port for Jaegar Query and then you can access the web url using the port.\"),React.createElement(MDXTag,{name:\"h2\",components:components,props:{\"id\":\"711-istio-metrics-with-grafana\"}},\"7.11 Istio Metrics with Grafana\"),React.createElement(MDXTag,{name:\"p\",components:components},\"Similar to Jaegar, you can find the Grafana service by getting the services for the Istio System.\"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{\"className\":\"language-bash\"}},\"$ kubectl get svc -n istio-system # grafana\\n# You could export the port for grafana by updating the service\\n$ kubectl edit svc grafana -n istio-system # changing ClusterIP to LoadBalancer\\n\")),React.createElement(MDXTag,{name:\"h2\",components:components,props:{\"id\":\"8-intro-to-kubeadm\"}},\"8. Intro to kubeadm\"),React.createElement(MDXTag,{name:\"p\",components:components},\"This is an alternative to running Kubernetes that is not using \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"kops\")));}}]);return MDXContent;}(React.Component);export{MDXContent as default};MDXContent.__docgenInfo={\"description\":\"\",\"methods\":[],\"displayName\":\"MDXContent\"};",{"version":3,"sources":["/Users/okeeffe_d/Business/Documentation/manual/Kubernetes/Devops-Kubernetes-Course.md"],"names":["React","MDXTag","MDXContent","props","layout","components","Component"],"mappings":"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","sourcesContent":["\n  import React from 'react'\n  import { MDXTag } from '@mdx-js/tag'\n  \n\nexport default class MDXContent extends React.Component {\n  constructor(props) {\n    super(props)\n    this.layout = null\n  }\n  render() {\n    const { components, ...props } = this.props\n\n    return <MDXTag\n             name=\"wrapper\"\n             \n             components={components}><MDXTag name=\"h1\" components={components} props={{\"id\":\"devops-kubernetes-course\"}}>{`DevOps Kubernetes Course`}</MDXTag>\n{/* TOC -->autoauto- [DevOps Kubernetes Course](#devops-kubernetes-course)auto    - [Course layout](#course-layout)auto        - [Objectives](#objectives)auto        - [Support](#support)auto        - [Getting Started](#getting-started)auto        - [Procedure Document](#procedure-document)auto    - [What is Kubernetes?](#what-is-kubernetes)auto    - [Containers intro](#containers-intro)auto    - [Kubernetes Setup](#kubernetes-setup)auto        - [Running locally](#running-locally)auto            - [Minikube](#minikube)auto        - [Running on AWS](#running-on-aws)auto        - [Cluster setup on Kops](#cluster-setup-on-kops)auto    - [KOPS QuickList](#kops-quicklist)auto        - [Building Docker Containers](#building-docker-containers)auto        - [Docker registery](#docker-registery)auto        - [Running the Docker app on Kubernetes](#running-the-docker-app-on-kubernetes)auto        - [How to port-forward](#how-to-port-forward)auto        - [Exposing the pod](#exposing-the-pod)auto        - [Setting up the external load balancer](#setting-up-the-external-load-balancer)auto    - [Kubernetes Basics](#kubernetes-basics)auto        - [Node Architecture](#node-architecture)auto        - [Replication Controller](#replication-controller)auto            - [Scaling](#scaling)auto    - [Deployments](#deployments)auto        - [Useful commands](#useful-commands)auto        - [Demo: Deployment notes](#demo-deployment-notes)auto    - [Services](#services)auto    - [Tags](#tags)auto        - [Demo: Using tags](#demo-using-tags)auto    - [Healthchecks](#healthchecks)auto    - [Secrets](#secrets)auto        - [How to use them](#how-to-use-them)auto        - [Demo: Wordpress Secrets](#demo-wordpress-secrets)auto    - [Web UI](#web-ui)auto        - [Demo: Web UI](#demo-web-ui)auto- [Advanced Topics](#advanced-topics)auto    - [Service Discovery](#service-discovery)auto        - [Demo: Service Discovery](#demo-service-discovery)auto    - [ConfigMap](#configmap)auto        - [Demo: Config Map](#demo-config-map)auto    - [Ingress Controller](#ingress-controller)auto        - [Demo: Ingress Controller](#demo-ingress-controller)auto    - [External DNS](#external-dns)auto    - [Volumes](#volumes)auto        - [Using EBS Storage](#using-ebs-storage)auto        - [Demo: Volumes](#demo-volumes)auto    - [Volume Provisioning](#volume-provisioning)auto    - [Demo: Using Wordpress with Volumes](#demo-using-wordpress-with-volumes)auto    - [Pod Presets](#pod-presets)auto    - [Stateful Sets - (formerly Pet Sets)](#stateful-sets---formerly-pet-sets)auto    - [Daemon Sets](#daemon-sets)auto    - [Resource Usage Monitoring](#resource-usage-monitoring)auto    - [Horiztonal Pod Autoscaling](#horiztonal-pod-autoscaling)auto    - [Affinity/Anti-Affinity](#affinityanti-affinity)auto    - [3.13 Interpod Affinity/Anti-Affinity](#313-interpod-affinityanti-affinity)auto        - [Anti-affinity](#anti-affinity)auto        - [Topology operators](#topology-operators)auto    - [3.14 Taints and Tolerations](#314-taints-and-tolerations)auto        - [Tolerations usage](#tolerations-usage)auto        - [Keys](#keys)auto        - [Use Cases](#use-cases)auto        - [Useful Taints and Tolerations](#useful-taints-and-tolerations)auto    - [3.15 Customer Resource Definitions (CRDs)](#315-customer-resource-definitions-crds)auto    - [3.16 Operators](#316-operators)auto        - [PostgreSQL Operator Demo](#postgresql-operator-demo)auto    - [4. Kubernetes Administration](#4-kubernetes-administration)auto    - [4.1 Resource Quotas](#41-resource-quotas)auto        - [Resource Quota Examples](#resource-quota-examples)auto        - [Resource Quote options](#resource-quote-options)auto    - [4.2 Namespaces](#42-namespaces)auto        - [Namespace commands](#namespace-commands)auto        - [Demo ResourceQuotas](#demo-resourcequotas)auto    - [4.3 User Management](#43-user-management)auto        - [Normal Users](#normal-users)auto        - [Service Users](#service-users)auto        - [Other notes on User Management](#other-notes-on-user-management)auto    - [4.4 RBAC (Role Based Access Control)](#44-rbac-role-based-access-control)auto    - [4.5 Networking](#45-networking)auto        - [Pods](#pods)auto        - [Kubenet Networking](#kubenet-networking)auto        - [VPC Alternatives](#vpc-alternatives)auto    - [4.6 Node Maintenance](#46-node-maintenance)auto        - [Adding a new node](#adding-a-new-node)auto    - [4.7 High Availability](#47-high-availability)auto        - [Setup](#setup)auto        - [Kops with multiple masters for HA](#kops-with-multiple-masters-for-ha)auto    - [4.8 TLS on ELB using Annotations](#48-tls-on-elb-using-annotations)auto    - [5. Packaging and Deploying on Kubernetes](#5-packaging-and-deploying-on-kubernetes)auto    - [5.1 Intro to Helm](#51-intro-to-helm)auto        - [Helm commands](#helm-commands)auto        - [Installing Helm](#installing-helm)auto            - [Linux Distro Install](#linux-distro-install)auto        - [Adding to cluster](#adding-to-cluster)auto    - [5.2 Creating your own helm charts](#52-creating-your-own-helm-charts)auto    - [5.3 Setting up Helm Repo with S3](#53-setting-up-helm-repo-with-s3)auto    - [6. Serverless on Kubernetes](#6-serverless-on-kubernetes)auto    - [6.1 Intro to Kubeless](#61-intro-to-kubeless)auto    - [6.2 Creating functions on Kubeless](#62-creating-functions-on-kubeless)auto        - [Installing the CLI](#installing-the-cli)auto        - [Deploy kubeless](#deploy-kubeless)auto        - [Deploy function on Kubernetes](#deploy-function-on-kubernetes)auto            - [Useful functions](#useful-functions)auto        - [Usage with Kafka](#usage-with-kafka)auto    - [7. Microservices](#7-microservices)auto    - [7.1 Istio Installation](#71-istio-installation)auto        - [Kops configuration](#kops-configuration)auto        - [Download (1.0.2):](#download-102)auto        - [Download (latest):](#download-latest)auto        - [Istio install](#istio-install)auto    - [7.2 Example app](#72-example-app)auto        - [Example app (from istio)](#example-app-from-istio)auto        - [Hello world app](#hello-world-app)auto        - [Mutual TLS example](#mutual-tls-example)auto        - [End-user authentication](#end-user-authentication)auto    - [7.3 Advanced Istio Routing](#73-advanced-istio-routing)auto    - [7.4 Canary deployments](#74-canary-deployments)auto    - [7.5 Running retries](#75-running-retries)auto    - [7.6 Mutual TLS](#76-mutual-tls)auto    - [7.7 RBAC with Istio and MTLS](#77-rbac-with-istio-and-mtls)auto    - [7.8 End-user Authentication](#78-end-user-authentication)auto    - [7.9 Istio Ingress Traffic](#79-istio-ingress-traffic)auto    - [7.10 Distributed Tracing with Jaegar](#710-distributed-tracing-with-jaegar)auto    - [7.11 Istio Metrics with Grafana](#711-istio-metrics-with-grafana)auto    - [8. Intro to kubeadm](#8-intro-to-kubeadm)autoauto<!-- /TOC */}\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"course-layout\"}}>{`Course layout`}</MDXTag>\n<MDXTag name=\"ol\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ol\">{`Introduction`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ol\">{`Kubernetes Basics`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ol\">{`Advanced Topics`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ol\">{`Administration`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"objectives\"}}>{`Objectives`}</MDXTag>\n<MDXTag name=\"ol\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ol\">{`To understand, deploy and use Kubernetes`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ol\">{`To get straight with `}<MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`containerization`}</MDXTag>{` and run those containers on Kubernetes`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ol\">{`To use Kubernetes as a single node and on AWS`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ol\">{`To be able to run `}<MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`stateless`}</MDXTag>{` and `}<MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`stateful`}</MDXTag>{` applications on Kubernetes`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ol\">{`To be able to `}<MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`administer`}</MDXTag>{` Kubernetes`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"support\"}}>{`Support`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`All resources are in a github repository.`}</MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"getting-started\"}}>{`Getting Started`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`kubectl: Install via brew\nminikube: `}<MDXTag name=\"a\" components={components} parentName=\"p\" props={{\"href\":\"https://github.com/kubernetes/minikube/releases\"}}>{`https://github.com/kubernetes/minikube/releases`}</MDXTag>{`\nkops: Install via brew`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Minikube test commands:`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-bash\"}}>{`minikube status # check status\nminikube start # start cluster\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`For OSX install:`}</MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`curl -Lo minikube https://storage.googleapis.com/minikube/releases/v0.25.0/minikube-darwin-amd64 && chmod +x minikube && sudo mv minikube /usr/local/bin/`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`Install Docker Edge to use the latest features with Kubernetes.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Otherwise follow the base instructions to get everything up and going.`}</MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`https://gist.github.com/kevin-smets/b91a34cea662d0c523968472a81788f7`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`This resolves DL issue: `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`mv minikube-v0.25.1.iso ~/.minikube/cache/iso/minikube-v0.25.1.iso`}</MDXTag>{`.`}</MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"procedure-document\"}}>{`Procedure Document`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{}}>{`Kubernetes Procedure Document\nGithub repository [Read this first]\nDownload all the course material from: https://github.com/wardviaene/kubernetes-course\n\nQuestions?\nSend me a message\n\nUse Q&A\n\nJoin our facebook group: https://www.facebook.com/groups/840062592768074/\n\nDownload Kubectl\nLinux: https://storage.googleapis.com/kubernetes-release/release/v1.6.1/bin/linux/amd64/kubectl\n\nMacOS: https://storage.googleapis.com/kubernetes-release/release/v1.6.1/bin/darwin/amd64/kubectl\n\nWindows:\nhttps://github.com/eirslett/kubectl-windows/releases/download/v1.6.3/kubectl.exe\n\nMinikube\nProject URL: https://github.com/kubernetes/minikube\n\nLatest Release and download instructions: https://github.com/kubernetes/minikube/releases\n\nVirtualBox: http://www.virtualbox.org\n\nMinikube on windows:\nDownload the latest minikube-version.exe\n\nRename the file to minikube.exe and put it in C:\\minikube\n\nOpen a cmd (search for the app cmd or powershell)\n\nRun: cd C:\\minikube and enter minikube start\n\nTest your cluster commands\nMake sure your cluster is running, you can check with minikube status.\n\nIf your cluster is not running, enter minikube start first.\n\nkubectl run hello-minikube --image=gcr.io/google_containers/echoserver:1.4 --port=8080\nkubectl expose deployment hello-minikube --type=NodePort\n\nminikube service hello-minikube --url\n\n<open a browser and go to that url>\n\nKops\nProject URL\nhttps://github.com/kubernetes/kops\n\nFree DNS Service\nSign up at http://freedns.afraid.org/\n\nChoose for subdomain hosting\n\nEnter the AWS nameservers given to you in route53 as nameservers for the subdomain\n\nhttp://www.dot.tk/ provides a free .tk domain name you can use and you can point it to the amazon AWS nameservers\n\n###h2\n\nNamecheap.com often has promotions for tld’s like .co for just a couple of bucks\n\n\n\nCluster Commands\nkops create cluster --name=kubernetes.newtech.academy --state=s3://kops-state-b429b --zones=eu-west-1a --node-count=2 --node-size=t2.micro --master-size=t2.micro --dns-zone=kubernetes.newtech.academy\n\nkops update cluster kubernetes.newtech.academy --yes --state=s3://kops-state-b429b\n\nkops delete cluster --name kubernetes.newtech.academy --state=s3://kops-state-b429b\n\nkops delete cluster --name kubernetes.newtech.academy --state=s3://kops-state-b429b --yes\n\nKubernetes from scratch\n\n\n\n\n\n\nYou can setup your cluster manually from scratch\n\nIf you’re planning to deploy on AWS / Google / Azure, use the tools that are fit for these platforms\n\nIf you have an unsupported cloud platform, and you still want Kubernetes, you can install it manually\n\nCoreOS + Kubernetes: ###a href=\"https://coreos.com/kubernetes/docs/latest/getting-started.html\">https://coreos.com/kubernetes/docs/latest/getting-started.html\n\nDocker\nYou can download Docker Engine for:\n\nWindows: https://docs.docker.com/engine/installation/windows/\n\nMacOS: https://docs.docker.com/engine/installation/mac/\n\nLinux: https://docs.docker.com/engine/installation/linux/\n\nDevOps box\nVirtualbox: http://www.virtualbox.org\n\nVagrant: http://www.vagrantup.com\n\nDevOps box: https://github.com/wardviaene/devops-box\n\nLaunch commands (in terminal / cmd / powershell):\n\ncd devops-box/\n\nvagrant up\n\nLaunch commands for a plain ubuntu box:\n\nmkdir ubuntu\n\nvagrant init ubuntu/xenial64\n\nvagrant up\n\nDocker commands\nDescription\n\nCommand\n\nBuild image\n\ndocker build .\n\nBuild & Tag\n\ndocker build -t wardviaene/k8s-demo:latest .\n\nTag image\n\ndocker tag imageid wardviaene/k8s-demo\n\nPush image\n\ndocker push wardviaene/k8s-demo\n\nList images\n\ndocker images\n\nList all containers\n\ndocker ps -a\n\nKubernetes commands\nCommand\n\nDescription\n\nkubectl get pod\n\nGet information about all running pods\n\nkubectl describe pod \\`<pod>\\`\n\nDescribe one pod\n\nkubectl expose pod \\`<pod>\\` --port=444\n\n--name=frontend\n\nExpose the port of a pod (creates a new service)\n\nkubectl port-forward \\`<pod>\\` 8080\n\nPort forward the exposed pod port to your local machine\n\nkubectl attach \\`<podname>\\` -i\n\nAttach to the pod\n\nkubectl exec \\`<pod>\\` -- command\n\nExecute a command on the pod\n\nkubectl label pods \\`<pod>\\` mylabel=awesome\n\nAdd a new label to a pod\n\nkubectl run -i --tty busybox --image=busybox\n\n--restart=Never -- sh\n\nRun a shell in a pod - very useful for debugging\n\nkubectl get deployments\n\nGet information on current deployments\n\nkubectl get rs\n\nGet information about the replica sets\n\nkubectl get pods --show-labels\n\nget pods, and also show labels attached to those pods\n\nkubectl rollout status deployment/helloworld-deployment\n\nGet deployment status\n\nkubectl set image deployment/helloworld-deployment\n\nk8s-demo=k8s-demo:2\n\nRun k8s-demo with the image label version 2\n\nkubectl edit deployment/helloworld-deployment\n\nEdit the deployment object\n\nkubectl rollout status deployment/helloworld-deployment\n\nGet the status of the rollout\n\nkubectl rollout history deployment/helloworld-deployment\n\nGet the rollout history\n\nkubectl rollout undo deployment/helloworld-deployment\n\nRollback to previous version\n\nkubectl rollout undo deployment/helloworld-deployment --to-revision=n\n\nRollback to any version version\n\nAWS Commands\naws ec2 create-volume --size 10 --region us-east-1 --availability-zone us-east-1a --volume-type gp2\n\nCertificates\nCreating a new key for a new user: openssl genrsa -out myuser.pem 2048\n\nCreating a certificate request: openssl req -new -key myuser.pem -out myuser-csr.pem -subj \"/CN=myuser/O=myteam/\"\n\nCreating a certificate: openssl x509 -req -in myuser-csr.pem -CA /path/to/kubernetes/ca.crt -CAkey /path/to/kubernetes/ca.key -CAcreateserial -out myuser.crt -days 10000\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"what-is-kubernetes\"}}>{`What is Kubernetes?`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Open source orchestration system for Docker.`}</MDXTag>\n<MDXTag name=\"ul\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Let's you schedule containers on a cluster of machines`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`You can run multiple containers on one machine`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`You can run long running services (like web apps)`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`K8s will manage the state of these containers`}<MDXTag name=\"ul\" components={components} parentName=\"li\">\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Can start the container on specific nodes`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Will restart a container when it gets killed`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Can move containers from one node to another node`}</MDXTag>\n</MDXTag></MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Instead of just running a few docker containers on one host manually, K8s can manage that for you`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`K8 clusters can go to thousands of nodes`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Other orcherstrators:`}<MDXTag name=\"ul\" components={components} parentName=\"li\">\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Docker Swarm`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Mesos`}</MDXTag>\n</MDXTag></MDXTag>\n</MDXTag>\n<MDXTag name=\"p\" components={components}>{`You can run K8s anywhere:`}</MDXTag>\n<MDXTag name=\"ul\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`One premise (private)`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Public`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Hybrid`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"p\" components={components}>{`It is highly modular and open source. It is also backed by Google.`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"containers-intro\"}}>{`Containers intro`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Container VS VM: No Hypervisor and Guest OS layer.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Containers on Cloud Providers do still use the hypervisor to seperate users.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Docker is the most popular container software. An alternative is `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`rkt`}</MDXTag>{`.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Benefits? It works in isolation. You ship the binary with all the dependencies and create a closer parity.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Docker makes development teams able to ship faster.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`You can run the same image on prem and in the cloud with what should be the same results.`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"kubernetes-setup\"}}>{`Kubernetes Setup`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Something to note is that there are more integrations for certain Cloud Providers like AWS & GCE. Thingsl ike \"Volumes\" and \"External Load Balancers\" work only with support Cloud Providers.`}</MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"running-locally\"}}>{`Running locally`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`We can use `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`minikube`}</MDXTag>{` to spin up a local single machine with a Kubernetes cluster.`}</MDXTag>\n<MDXTag name=\"h4\" components={components} props={{\"id\":\"minikube\"}}>{`Minikube`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Minikube is a tool that makes running k8s locally easy.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`It runs a single-node Kubernetes cluster inside a Linux VM.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`It's aimed on users who just want to just test it out or use if for development.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`It cannot spin up a roduction cluster, it's a one node machine with no high availability.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`You need VM to run all this.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`To run a cluster, just run `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`minikube start`}</MDXTag>{`.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`To check your config after spinning up Kubernetes, use `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`cat ~/.kube/config`}</MDXTag>{`.`}</MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"running-on-aws\"}}>{`Running on AWS`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Until EKS comes out, we can spin up a Kubernetes cluster using KOPS.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`You need to ensure that you download Vagrant and a VM.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`For running the Vagrant box, you can run `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`vagrant up --provider virtualbox`}</MDXTag>{`.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`You can then use `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`vagrant ssh`}</MDXTag>{` to ssh in.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`After you are in, download Kops:`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{}}>{`curl -LO https://github.com/kubernetes/kops/releases/download/\\$(curl -s https://api.github.com/repos/kubernetes/kops/releases/latest | grep tag_name | cut -d '\"' -f 4)/kops-linux-amd64\nchmod +x kops-linux-amd64\nsudo mv kops-linux-amd64 /usr/local/bin/kops\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`Ensure that you also download `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`python-pip`}</MDXTag>{`:`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{}}>{`sudo apt-get install software-properties-common\nsudo apt-add-repository universe\nsudo apt-get update\nsudo apt-get install python-pip\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`Then install awscli:`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{}}>{`export LC_ALL=C # if run into an error about locale settings\nsudo pip install awscli\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`You will then need to create an AWS account.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`After setting up the AWSCLI, installing Kops and creating a S3 Bucket + setting up the Route53 Name Servers (on somewhere like NameCheap), you can move on.`}</MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"cluster-setup-on-kops\"}}>{`Cluster setup on Kops`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`First, download Kops for Linux on the Vagrant box and move it.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Before creating the cluster, you will need to create new keys. `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`ssh-keygen -f .ssh/id_rsa`}</MDXTag>{`.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`To create the cluster (example), run `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`kops create cluster --name=kubernetes.test --state=s3://kops-state-oeiajrie93 --zones=ap-southeast-2a --node-count=2 --node-size=t2.micro --master-size=t2.micro --dns-zone=givemeyeezy.online`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`This DNS zone is basically just the one that we set up.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`You'll get something back like`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{}}>{`I0311 21:48:46.821364    7553 create_cluster.go:439] Inferred --cloud=aws from zone \"ap-southeast-2a\"\nI0311 21:48:46.821506    7553 create_cluster.go:971] Using SSH public key: /home/vagrant/.ssh/id_rsa.pub\nI0311 21:48:48.232635    7553 subnets.go:184] Assigned CIDR 172.20.32.0/19 to subnet ap-southeast-2a\nPreviewing changes that will be made:\n\nI0311 21:48:52.305360    7553 executor.go:91] Tasks: 0 done / 73 total; 31 can run\nI0311 21:48:53.503124    7553 executor.go:91] Tasks: 31 done / 73 total; 24 can run\nI0311 21:48:53.958875    7553 executor.go:91] Tasks: 55 done / 73 total; 16 can run\nI0311 21:48:54.237870    7553 executor.go:91] Tasks: 71 done / 73 total; 2 can run\nI0311 21:48:54.262347    7553 executor.go:91] Tasks: 73 done / 73 total; 0 can run\nWill create resources:\n  AutoscalingGroup/master-ap-southeast-2a.masters.kubernetes.test\n  MinSize               1\n  MaxSize               1\n  Subnets               [name:ap-southeast-2a.kubernetes.test]\n  Tags                  {k8s.io/role/master: 1, Name: master-ap-southeast-2a.masters.kubernetes.test, KubernetesCluster: kubernetes.test, k8s.io/cluster-autoscaler/node-template/label/kops.k8s.io/instancegroup: master-ap-southeast-2a}\n  LaunchConfiguration   name:master-ap-southeast-2a.masters.kubernetes.test\n\n  AutoscalingGroup/nodes.kubernetes.test\n  MinSize               2\n  MaxSize               2\n  Subnets               [name:ap-southeast-2a.kubernetes.test]\n  Tags                  {k8s.io/cluster-autoscaler/node-template/label/kops.k8s.io/instancegroup: nodes, k8s.io/role/node: 1, Name: nodes.kubernetes.test, KubernetesCluster: kubernetes.test}\n  LaunchConfiguration   name:nodes.kubernetes.test\n\n  DHCPOptions/kubernetes.test\n  DomainName            ap-southeast-2.compute.internal\n  DomainNameServers     AmazonProvidedDNS\n\n  EBSVolume/a.etcd-events.kubernetes.test\n  AvailabilityZone      ap-southeast-2a\n  VolumeType            gp2\n  SizeGB                20\n  Encrypted             false\n  Tags                  {KubernetesCluster: kubernetes.test, k8s.io/etcd/events: a/a, k8s.io/role/master: 1, Name: a.etcd-events.kubernetes.test}\n\n  EBSVolume/a.etcd-main.kubernetes.test\n  AvailabilityZone      ap-southeast-2a\n  VolumeType            gp2\n  SizeGB                20\n  Encrypted             false\n  Tags                  {k8s.io/etcd/main: a/a, k8s.io/role/master: 1, Name: a.etcd-main.kubernetes.test, KubernetesCluster: kubernetes.test}\n\n  IAMInstanceProfile/masters.kubernetes.test\n\n  IAMInstanceProfile/nodes.kubernetes.test\n\n  IAMInstanceProfileRole/masters.kubernetes.test\n  InstanceProfile       name:masters.kubernetes.test id:masters.kubernetes.test\n  Role                  name:masters.kubernetes.test\n\n  IAMInstanceProfileRole/nodes.kubernetes.test\n  InstanceProfile       name:nodes.kubernetes.test id:nodes.kubernetes.test\n  Role                  name:nodes.kubernetes.test\n\n  IAMRole/masters.kubernetes.test\n  ExportWithID          masters\n\n  IAMRole/nodes.kubernetes.test\n  ExportWithID          nodes\n\n  IAMRolePolicy/masters.kubernetes.test\n  Role                  name:masters.kubernetes.test\n\n  IAMRolePolicy/nodes.kubernetes.test\n  Role                  name:nodes.kubernetes.test\n\n  InternetGateway/kubernetes.test\n  VPC                   name:kubernetes.test\n  Shared                false\n\n  Keypair/apiserver-aggregator\n  Subject               cn=aggregator\n  Type                  client\n  Signer                name:apiserver-aggregator-ca id:cn=apiserver-aggregator-ca\n\n  Keypair/apiserver-aggregator-ca\n  Subject               cn=apiserver-aggregator-ca\n  Type                  ca\n\n  Keypair/apiserver-proxy-client\n  Subject               cn=apiserver-proxy-client\n  Type                  client\n  Signer                name:ca id:cn=kubernetes\n\n  Keypair/ca\n  Subject               cn=kubernetes\n  Type                  ca\n\n  Keypair/kops\n  Subject               o=system:masters,cn=kops\n  Type                  client\n  Signer                name:ca id:cn=kubernetes\n\n  Keypair/kube-controller-manager\n  Subject               cn=system:kube-controller-manager\n  Type                  client\n  Signer                name:ca id:cn=kubernetes\n\n  Keypair/kube-proxy\n  Subject               cn=system:kube-proxy\n  Type                  client\n  Signer                name:ca id:cn=kubernetes\n\n  Keypair/kube-scheduler\n  Subject               cn=system:kube-scheduler\n  Type                  client\n  Signer                name:ca id:cn=kubernetes\n\n  Keypair/kubecfg\n  Subject               o=system:masters,cn=kubecfg\n  Type                  client\n  Signer                name:ca id:cn=kubernetes\n\n  Keypair/kubelet\n  Subject               o=system:nodes,cn=kubelet\n  Type                  client\n  Signer                name:ca id:cn=kubernetes\n\n  Keypair/kubelet-api\n  Subject               cn=kubelet-api\n  Type                  client\n  Signer                name:ca id:cn=kubernetes\n\n  Keypair/master\n  Subject               cn=kubernetes-master\n  Type                  server\n  AlternateNames        [100.64.0.1, 127.0.0.1, api.internal.kubernetes.test, api.kubernetes.test, kubernetes, kubernetes.default, kubernetes.default.svc, kubernetes.default.svc.cluster.local]\n  Signer                name:ca id:cn=kubernetes\n\n  LaunchConfiguration/master-ap-southeast-2a.masters.kubernetes.test\n  ImageID               kope.io/k8s-1.8-debian-jessie-amd64-hvm-ebs-2018-01-14\n  InstanceType          t2.micro\n  SSHKey                name:kubernetes.kubernetes.test-e8:be:8d:cf:90:3b:52:6e:f7:23:29:0a:32:d1:cd:de id:kubernetes.kubernetes.test-e8:be:8d:cf:90:3b:52:6e:f7:23:29:0a:32:d1:cd:de\n  SecurityGroups        [name:masters.kubernetes.test]\n  AssociatePublicIP     true\n  IAMInstanceProfile    name:masters.kubernetes.test id:masters.kubernetes.test\n  RootVolumeSize        64\n  RootVolumeType        gp2\n  SpotPrice\n\n  LaunchConfiguration/nodes.kubernetes.test\n  ImageID               kope.io/k8s-1.8-debian-jessie-amd64-hvm-ebs-2018-01-14\n  InstanceType          t2.micro\n  SSHKey                name:kubernetes.kubernetes.test-e8:be:8d:cf:90:3b:52:6e:f7:23:29:0a:32:d1:cd:de id:kubernetes.kubernetes.test-e8:be:8d:cf:90:3b:52:6e:f7:23:29:0a:32:d1:cd:de\n  SecurityGroups        [name:nodes.kubernetes.test]\n  AssociatePublicIP     true\n  IAMInstanceProfile    name:nodes.kubernetes.test id:nodes.kubernetes.test\n  RootVolumeSize        128\n  RootVolumeType        gp2\n  SpotPrice\n\n  ManagedFile/kubernetes.test-addons-bootstrap\n  Location              addons/bootstrap-channel.yaml\n\n  ManagedFile/kubernetes.test-addons-core.addons.k8s.io\n  Location              addons/core.addons.k8s.io/v1.4.0.yaml\n\n  ManagedFile/kubernetes.test-addons-dns-controller.addons.k8s.io-k8s-1.6\n  Location              addons/dns-controller.addons.k8s.io/k8s-1.6.yaml\n\n  ManagedFile/kubernetes.test-addons-dns-controller.addons.k8s.io-pre-k8s-1.6\n  Location              addons/dns-controller.addons.k8s.io/pre-k8s-1.6.yaml\n\n  ManagedFile/kubernetes.test-addons-kube-dns.addons.k8s.io-k8s-1.6\n  Location              addons/kube-dns.addons.k8s.io/k8s-1.6.yaml\n\n  ManagedFile/kubernetes.test-addons-kube-dns.addons.k8s.io-pre-k8s-1.6\n  Location              addons/kube-dns.addons.k8s.io/pre-k8s-1.6.yaml\n\n  ManagedFile/kubernetes.test-addons-limit-range.addons.k8s.io\n  Location              addons/limit-range.addons.k8s.io/v1.5.0.yaml\n\n  ManagedFile/kubernetes.test-addons-rbac.addons.k8s.io-k8s-1.8\n  Location              addons/rbac.addons.k8s.io/k8s-1.8.yaml\n\n  ManagedFile/kubernetes.test-addons-storage-aws.addons.k8s.io-v1.6.0\n  Location              addons/storage-aws.addons.k8s.io/v1.6.0.yaml\n\n  ManagedFile/kubernetes.test-addons-storage-aws.addons.k8s.io-v1.7.0\n  Location              addons/storage-aws.addons.k8s.io/v1.7.0.yaml\n\n  Route/0.0.0.0/0\n  RouteTable            name:kubernetes.test\n  CIDR                  0.0.0.0/0\n  InternetGateway       name:kubernetes.test\n\n  RouteTable/kubernetes.test\n  VPC                   name:kubernetes.test\n\n  RouteTableAssociation/ap-southeast-2a.kubernetes.test\n  RouteTable            name:kubernetes.test\n  Subnet                name:ap-southeast-2a.kubernetes.test\n\n  SSHKey/kubernetes.kubernetes.test-e8:be:8d:cf:90:3b:52:6e:f7:23:29:0a:32:d1:cd:de\n  KeyFingerprint        c4:89:af:59:a1:1d:6e:ef:7a:9d:12:65:bc:e2:82:4f\n\n  Secret/admin\n\n  Secret/kube\n\n  Secret/kube-proxy\n\n  Secret/kubelet\n\n  Secret/system:controller_manager\n\n  Secret/system:dns\n\n  Secret/system:logging\n\n  Secret/system:monitoring\n\n  Secret/system:scheduler\n\n  SecurityGroup/masters.kubernetes.test\n  Description           Security group for masters\n  VPC                   name:kubernetes.test\n  RemoveExtraRules      [port=22, port=443, port=2380, port=2381, port=4001, port=4002, port=4789, port=179]\n\n  SecurityGroup/nodes.kubernetes.test\n  Description           Security group for nodes\n  VPC                   name:kubernetes.test\n  RemoveExtraRules      [port=22]\n\n  SecurityGroupRule/all-master-to-master\n  SecurityGroup         name:masters.kubernetes.test\n  SourceGroup           name:masters.kubernetes.test\n\n  SecurityGroupRule/all-master-to-node\n  SecurityGroup         name:nodes.kubernetes.test\n  SourceGroup           name:masters.kubernetes.test\n\n  SecurityGroupRule/all-node-to-node\n  SecurityGroup         name:nodes.kubernetes.test\n  SourceGroup           name:nodes.kubernetes.test\n\n  SecurityGroupRule/https-external-to-master-0.0.0.0/0\n  SecurityGroup         name:masters.kubernetes.test\n  CIDR                  0.0.0.0/0\n  Protocol              tcp\n  FromPort              443\n  ToPort                443\n\n  SecurityGroupRule/master-egress\n  SecurityGroup         name:masters.kubernetes.test\n  CIDR                  0.0.0.0/0\n  Egress                true\n\n  SecurityGroupRule/node-egress\n  SecurityGroup         name:nodes.kubernetes.test\n  CIDR                  0.0.0.0/0\n  Egress                true\n\n  SecurityGroupRule/node-to-master-tcp-1-2379\n  SecurityGroup         name:masters.kubernetes.test\n  Protocol              tcp\n  FromPort              1\n  ToPort                2379\n  SourceGroup           name:nodes.kubernetes.test\n\n  SecurityGroupRule/node-to-master-tcp-2382-4000\n  SecurityGroup         name:masters.kubernetes.test\n  Protocol              tcp\n  FromPort              2382\n  ToPort                4000\n  SourceGroup           name:nodes.kubernetes.test\n\n  SecurityGroupRule/node-to-master-tcp-4003-65535\n  SecurityGroup         name:masters.kubernetes.test\n  Protocol              tcp\n  FromPort              4003\n  ToPort                65535\n  SourceGroup           name:nodes.kubernetes.test\n\n  SecurityGroupRule/node-to-master-udp-1-65535\n  SecurityGroup         name:masters.kubernetes.test\n  Protocol              udp\n  FromPort              1\n  ToPort                65535\n  SourceGroup           name:nodes.kubernetes.test\n\n  SecurityGroupRule/ssh-external-to-master-0.0.0.0/0\n  SecurityGroup         name:masters.kubernetes.test\n  CIDR                  0.0.0.0/0\n  Protocol              tcp\n  FromPort              22\n  ToPort                22\n\n  SecurityGroupRule/ssh-external-to-node-0.0.0.0/0\n  SecurityGroup         name:nodes.kubernetes.test\n  CIDR                  0.0.0.0/0\n  Protocol              tcp\n  FromPort              22\n  ToPort                22\n\n  Subnet/ap-southeast-2a.kubernetes.test\n  VPC                   name:kubernetes.test\n  AvailabilityZone      ap-southeast-2a\n  CIDR                  172.20.32.0/19\n  Shared                false\n  Tags                  {Name: ap-southeast-2a.kubernetes.test, KubernetesCluster: kubernetes.test, kubernetes.io/cluster/kubernetes.test: owned, kubernetes.io/role/elb: 1}\n\n  VPC/kubernetes.test\n  CIDR                  172.20.0.0/16\n  EnableDNSHostnames    true\n  EnableDNSSupport      true\n  Shared                false\n  Tags                  {Name: kubernetes.test, KubernetesCluster: kubernetes.test, kubernetes.io/cluster/kubernetes.test: owned}\n\n  VPCDHCPOptionsAssociation/kubernetes.test\n  VPC                   name:kubernetes.test\n  DHCPOptions           name:kubernetes.test\n\nMust specify --yes to apply changes\n\nCluster configuration has been created.\n\nSuggestions:\n * list clusters with: kops get cluster\n * edit this cluster with: kops edit cluster kubernetes.test\n * edit your node instance group: kops edit ig --name=kubernetes.test nodes\n * edit your master instance group: kops edit ig --name=kubernetes.test master-ap-southeast-2a\n\nFinally configure your cluster with: kops update cluster kubernetes.test --yes\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`To edit the cluster, run `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`kops edit cluster kubernetes.test --state=s3://kops-state-oeiajrie93`}</MDXTag>{` and then to update run `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`kops update cluster kubernetes.test --yes --state=s3://kops-state-oeiajrie93`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`If we now run `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`cat ~/.kube/config`}</MDXTag>{` we can see the password and username information needed.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`To check if the nodes are up, run `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`kubectl get node`}</MDXTag>{`.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Then, we can again run `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`kubectl run hello-minikube ...`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`If you have issues hit up `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`https://www.digitalocean.com/community/tutorials/how-to-set-up-time-synchronization-on-ubuntu-16-04`}</MDXTag>{` for date syncing.`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"kops-quicklist\"}}>{`KOPS QuickList`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-bash\"}}>{`# create\nkops create cluster --name=doksandbox.com --state=s3://kops-state-doksandbox --zones=ap-southeast-2a --node-count=1 --node-size=t2.micro --master-size=t2.micro --dns-zone=doksandbox.com\n\n# edit\nkops edit cluster doksandbox.com --state=s3://kops-state-doksandbox\n\n# update\nkops update cluster doksandbox.com --yes --state=s3://kops-state-doksandbox\n\n# delete\nkops delete cluster doksandbox.com --yes --state=s3://kops-state-doksandbox\n\n# suggestions\nkops validate cluster --state=s3://kops-state-doksandbox  # validate cluster\nkubectl get nodes --show-labels # list nodes\nssh -i ~/.ssh/id_rsa admin@api.kubernetes.doksandbox.com # ssh to the master\nThe admin user is specific to Debian. If not using Debian please use the appropriate user based on your OS.\n\n# check DNS\ndig afxr doksandbox.com\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`To get a basic service up and running, hit `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`kubectl run hello-minikube --image=gcr.io/google_containers/echoserver:1.4 --port=8080`}</MDXTag>{` and head to the VPC security network to update and expose that port to all IPs to prove that is all works correctly. The port will be dynamic.`}</MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"building-docker-containers\"}}>{`Building Docker Containers`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`If installing onto Linux, check `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`https://docs.docker.com/install/linux/docker-ce/ubuntu/#install-docker-ce-1`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`To do a demo, `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`sudo apt-get install git`}</MDXTag>{` and `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`git clone https://github.com/wardviaene/docker-demo`}</MDXTag>{` to get a demo folder.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Change in, `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`sudo docker build .`}</MDXTag>{` and then to run the container use `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`docker run -p 3000:3000 -t <id>`}</MDXTag></MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"docker-registery\"}}>{`Docker registery`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`To upload to the registry:`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{}}>{`docker login # fill in login details\ndocker tag imageid okeeffed/docker-demo\ndocker push okeeffed/docker-demo\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`There are a few limitations for each Docker/Kubernetes relationship:`}</MDXTag>\n<MDXTag name=\"ol\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ol\">{`Don't try to create one giant docker image fo you app, but split it up if necessary.`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ol\">{`All data in the container is not preserved. You need volumes for this.`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ol\">{`Check 12factor.net for methodologies`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"running-the-docker-app-on-kubernetes\"}}>{`Running the Docker app on Kubernetes`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`We need to create a `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`pod definition`}</MDXTag>{`.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`This describes an application running on Kubernetes.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`A pod can container `}<MDXTag name=\"em\" components={components} parentName=\"p\">{`one or more tightly coupled containers`}</MDXTag>{` that make up the app.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Those apps can easily communicate with each other using their local `}<MDXTag name=\"strong\" components={components} parentName=\"p\">{`port numbers`}</MDXTag>{`.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`The app for us at the moment has only one container.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`To build this, we create a podfile with all the pod definition:`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-yaml\"}}>{`# pod-helloworld.yml\napiVersion: v1\nkind: Pod\nmetadata:\n  name: nodehelloworld.example.com\n  labels:\n  app: helloworld\nspec:\n  containers:\n  - name: k8s-demo\n    image: okeeffed/docker-demo\n    ports:\n    - containerPort: 3000\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`To create this pod, we run `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`kubectl create -f ./pod-helloworld.yml`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"strong\" components={components} parentName=\"p\">{`Some useful commands`}</MDXTag></MDXTag>\n<MDXTag name=\"table\" components={components}>\n<MDXTag name=\"thead\" components={components} parentName=\"table\">\n<MDXTag name=\"tr\" components={components} parentName=\"thead\">\n<MDXTag name=\"th\" components={components} parentName=\"tr\" props={{\"align\":null}}>{`Command`}</MDXTag>\n<MDXTag name=\"th\" components={components} parentName=\"tr\" props={{\"align\":null}}>{`Description`}</MDXTag>\n</MDXTag>\n</MDXTag>\n<MDXTag name=\"tbody\" components={components} parentName=\"table\">\n<MDXTag name=\"tr\" components={components} parentName=\"tbody\">\n<MDXTag name=\"td\" components={components} parentName=\"tr\" props={{\"align\":null}}>{`kubectl get pod`}</MDXTag>\n<MDXTag name=\"td\" components={components} parentName=\"tr\" props={{\"align\":null}}>{`Get info about all running pods`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"tr\" components={components} parentName=\"tbody\">\n<MDXTag name=\"td\" components={components} parentName=\"tr\" props={{\"align\":null}}>{`kubectl describe pod `}<MDXTag name=\"inlineCode\" components={components} parentName=\"td\">{`<pod>`}</MDXTag></MDXTag>\n<MDXTag name=\"td\" components={components} parentName=\"tr\" props={{\"align\":null}}>{`Describe one pod`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"tr\" components={components} parentName=\"tbody\">\n<MDXTag name=\"td\" components={components} parentName=\"tr\" props={{\"align\":null}}>{`kubectl expose pod `}<MDXTag name=\"inlineCode\" components={components} parentName=\"td\">{`<pod>`}</MDXTag>{` --port=444 --name=frontend`}</MDXTag>\n<MDXTag name=\"td\" components={components} parentName=\"tr\" props={{\"align\":null}}>{`Expose the port of a pod (creates a new service)`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"tr\" components={components} parentName=\"tbody\">\n<MDXTag name=\"td\" components={components} parentName=\"tr\" props={{\"align\":null}}>{`kubectl port-forward `}<MDXTag name=\"inlineCode\" components={components} parentName=\"td\">{`<pod>`}</MDXTag>{` 8080`}</MDXTag>\n<MDXTag name=\"td\" components={components} parentName=\"tr\" props={{\"align\":null}}>{`Port forward the local machine`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"tr\" components={components} parentName=\"tbody\">\n<MDXTag name=\"td\" components={components} parentName=\"tr\" props={{\"align\":null}}>{`kubectl attach `}<MDXTag name=\"inlineCode\" components={components} parentName=\"td\">{`<podname>`}</MDXTag>{` -i`}</MDXTag>\n<MDXTag name=\"td\" components={components} parentName=\"tr\" props={{\"align\":null}}>{`Attach to pod`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"tr\" components={components} parentName=\"tbody\">\n<MDXTag name=\"td\" components={components} parentName=\"tr\" props={{\"align\":null}}>{`kubectl exec `}<MDXTag name=\"inlineCode\" components={components} parentName=\"td\">{`<pod>`}</MDXTag>{` -- command`}</MDXTag>\n<MDXTag name=\"td\" components={components} parentName=\"tr\" props={{\"align\":null}}>{`Execute a command on the pod`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"tr\" components={components} parentName=\"tbody\">\n<MDXTag name=\"td\" components={components} parentName=\"tr\" props={{\"align\":null}}>{`kubectl label pods `}<MDXTag name=\"inlineCode\" components={components} parentName=\"td\">{`<pod>`}</MDXTag>{` mylabel=awesome`}</MDXTag>\n<MDXTag name=\"td\" components={components} parentName=\"tr\" props={{\"align\":null}}>{`Add new label to pod`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"tr\" components={components} parentName=\"tbody\">\n<MDXTag name=\"td\" components={components} parentName=\"tr\" props={{\"align\":null}}>{`kubectl run -i -tty busybox --image=busybox --restart=Never -- sh`}</MDXTag>\n<MDXTag name=\"td\" components={components} parentName=\"tr\" props={{\"align\":null}}>{`Run a shell in a pod - very useful for debugging`}</MDXTag>\n</MDXTag>\n</MDXTag>\n</MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"how-to-port-forward\"}}>{`How to port-forward`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Running `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`kubectl describe pod nodehelloworld.example.com`}</MDXTag>{` will then give us info on what is going on here.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`To listen locally, we can port-forward: `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`kubectl port-forward nodehelloworld.example.com 8081:3000`}</MDXTag></MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"exposing-the-pod\"}}>{`Exposing the pod`}</MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`kubectl expose pod nodehelloworld.example.com --type=NodePort --name nodehelloworld-service`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`Check this with `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`kubectl get service`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`When you see what port is being forwarded, you can again open that up on the security settings and direct to that port.`}</MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"setting-up-the-external-load-balancer\"}}>{`Setting up the external load balancer`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`This will allow the outside world to have traffic routed to the correct pod.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`To create the service for this:`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-yaml\"}}>{`apiVersion: v1\nkind: Service\nmetadata:\n  name: helloworld-service\nspec:\n  ports:\n  - port: 80\n  targetPort: nodejs-port\n  protocol: TCP\n  selector:\n  app: helloworld\n  type: LoadBalancer\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`Using `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`kubectl create -f <file>`}</MDXTag>{` will create the pods and kops will autoconfigure what is required.`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"kubernetes-basics\"}}>{`Kubernetes Basics`}</MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"node-architecture\"}}>{`Node Architecture`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Within each node can be a collection of pods routed by iptables and within each pod are the Docker containers.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`These containers can talk easily to each other using localhost and ports.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Each node also has a `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`kubelet`}</MDXTag>{` and `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`kube-proxy`}</MDXTag>{`. The `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`kubelet`}</MDXTag>{` talks to the master node and `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`kube-proxy`}</MDXTag>{` talks to the iptables.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`A service itself can be like the load balancer. The service will be publicly available.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`When we look deeper at a pod yaml file, we have the containers called as the specs.`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-yaml\"}}>{`# pod-helloworld.yml\napiVersion: v1\nkind: Pod\nmetadata:\n  name: nodehelloworld.example.com\n  labels:\n  app: helloworld\nspec:\n  # The containers are listed here\n  containers:\n  - name: k8s-demo\n    image: okeeffed/docker-demo\n    ports:\n    - containerPort: 3000\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"replication-controller\"}}>{`Replication Controller`}</MDXTag>\n<MDXTag name=\"h4\" components={components} props={{\"id\":\"scaling\"}}>{`Scaling`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`If your application is `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`stateless`}</MDXTag>{` you can horizontally scale it.`}</MDXTag>\n<MDXTag name=\"ul\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Stateless = your appllication doesn't have a `}<MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`state`}</MDXTag>{`, it doesn't write any local files / keeps local sessions. This prevents pods from falling out of sync.`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`All traditional databases are `}<MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`stateful`}</MDXTag></MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Most `}<MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`web applications`}</MDXTag>{` can be made stateless`}<MDXTag name=\"ul\" components={components} parentName=\"li\">\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Session management needs to be done outside the container`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Any file to be saved cannot be saved locally`}</MDXTag>\n</MDXTag></MDXTag>\n</MDXTag>\n<MDXTag name=\"p\" components={components}>{`If needed, you can use `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`volumes`}</MDXTag>{` to still run stateful apps.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Those stateful apps can't horizontally scale, but you can run them in a single container and vertically scale (allocate more CPU/Mem/Disk).`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Scaling in Kubernetes can be done using the `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`Replication Controller`}</MDXTag>{`.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`The replication controller will ensure a specified number of pod replicas will run at all times.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`A pod created with the replica controller will automatically be replaced if they fail, get deleted or are terminated.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Using the replication controller is also recommended if you just want to make sure 1 pod is always running, even after reboots.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`You can then run a replication controller with just 1 replica to ensure that it is always running.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`To create a replication controller:`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-yaml\"}}>{`# rc-helloworld.yml\napiVersion: v1\nkind: ReplicationController # Changed from Pod\nmetadata:\n  name: helloworld-container\nspec: # Replation controller also has a spec\n  replicas: 2 # set two pod replicas\n  selector:  # select the app\n  app: helloworld\n  template:\n  # stand Pod metadata and spec\n  metadata:\n    name: nodehelloworld.example.com\n    labels:\n    app: helloworld\n  spec:\n    # The containers are listed here\n    containers:\n    - name: k8s-demo\n      image: okeeffed/docker-demo\n      ports:\n      - containerPort: 3000\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`When this controller is created with `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`kubectl`}</MDXTag>{`, you will see that the two pods are created with a differing suffix.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Now we have horizontally scaled this pod.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`If one of these pods is now deleted, the master node will automatically schedule a new one.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`We can also scale this by using `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`kubectl scale --replicas=4 -f <replication-controller-name.yml>`}</MDXTag>{`.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`We can also use it with the following:`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{}}>{`kubectl get rc # get replication controllers\n# assume helloworld-controller shows up\nkubectl scale --replicas=1 rc/helloworld-container\nkubectl get pods # will show only one pod remaining\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"deployments\"}}>{`Deployments`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Replication Set is the next gen Replication Controller:`}</MDXTag>\n<MDXTag name=\"ul\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`It supports new selector that can do selection based on filtering according a set of values eg environment either \"dev\" or \"qa\"`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`It's not only based on equality. You can do more complex things.`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`This RS is used by the Deployment.`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"p\" components={components}>{`A deployment is a declaration that allows you to do app `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`deployments`}</MDXTag>{` and `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`updates`}</MDXTag>{`.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`When using the deployment object, you definte the `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`state`}</MDXTag>{` of your application. Kubernetes will then make sure the clusters matches your desired state.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Just using the replication controller or replication set might be cumbersome to deploy apps.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`With a deployment object you can:`}</MDXTag>\n<MDXTag name=\"ol\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ol\">{`Create a deployment (e.g. deploying an app)`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ol\">{`Update a deployment (e.g. new version)`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ol\">{`Do rolling updates (zero downtime deployments)`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ol\">{`Roll back`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ol\">{`Pause/resume a deployment (ie rollout to only certain percentage of pods)`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"p\" components={components}>{`An example of a deployment:`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-yaml\"}}>{`# deployment-helloworld.yml\napiVersion: extensions/v1beta1\nkind: Deployment # Changed from Pod\nmetadata:\n  name: helloworld-deployment\nspec: # Replation controller also has a spec\n  replicas: 3 # set two pod replicas\n  template:\n  # stand Pod metadata and spec\n  metadata:\n    labels:\n    app: helloworld\n  spec:\n    # The containers are listed here\n    containers:\n    - name: k8s-demo\n      image: okeeffed/docker-demo\n      ports:\n      - containerPort: 3000\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"useful-commands\"}}>{`Useful commands`}</MDXTag>\n<MDXTag name=\"table\" components={components}>\n<MDXTag name=\"thead\" components={components} parentName=\"table\">\n<MDXTag name=\"tr\" components={components} parentName=\"thead\">\n<MDXTag name=\"th\" components={components} parentName=\"tr\" props={{\"align\":null}}>{`Command`}</MDXTag>\n<MDXTag name=\"th\" components={components} parentName=\"tr\" props={{\"align\":null}}>{`Description`}</MDXTag>\n</MDXTag>\n</MDXTag>\n<MDXTag name=\"tbody\" components={components} parentName=\"table\">\n<MDXTag name=\"tr\" components={components} parentName=\"tbody\">\n<MDXTag name=\"td\" components={components} parentName=\"tr\" props={{\"align\":null}}>{`kubectl get deployments`}</MDXTag>\n<MDXTag name=\"td\" components={components} parentName=\"tr\" props={{\"align\":null}}>{`Get info on current deployments`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"tr\" components={components} parentName=\"tbody\">\n<MDXTag name=\"td\" components={components} parentName=\"tr\" props={{\"align\":null}}>{`kubectl get rs`}</MDXTag>\n<MDXTag name=\"td\" components={components} parentName=\"tr\" props={{\"align\":null}}>{`Get info about the replica set`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"tr\" components={components} parentName=\"tbody\">\n<MDXTag name=\"td\" components={components} parentName=\"tr\" props={{\"align\":null}}>{`kubectl get pods --show-labels`}</MDXTag>\n<MDXTag name=\"td\" components={components} parentName=\"tr\" props={{\"align\":null}}>{`Get pods + labels attached to pods`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"tr\" components={components} parentName=\"tbody\">\n<MDXTag name=\"td\" components={components} parentName=\"tr\" props={{\"align\":null}}>{`kubectl rollout status deployment/helloworld-deployment`}</MDXTag>\n<MDXTag name=\"td\" components={components} parentName=\"tr\" props={{\"align\":null}}>{`Get deployment status`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"tr\" components={components} parentName=\"tbody\">\n<MDXTag name=\"td\" components={components} parentName=\"tr\" props={{\"align\":null}}>{`kubectl set image deployment/helloworld-deployment k8s-demo=k8s-demo:2`}</MDXTag>\n<MDXTag name=\"td\" components={components} parentName=\"tr\" props={{\"align\":null}}>{`Run k8s-demo with the image label version 2`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"tr\" components={components} parentName=\"tbody\">\n<MDXTag name=\"td\" components={components} parentName=\"tr\" props={{\"align\":null}}>{`kubectl edit deployment/helloworld-deployment`}</MDXTag>\n<MDXTag name=\"td\" components={components} parentName=\"tr\" props={{\"align\":null}}>{`Edit the deployment object`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"tr\" components={components} parentName=\"tbody\">\n<MDXTag name=\"td\" components={components} parentName=\"tr\" props={{\"align\":null}}>{`kubectl rollout status deployment/helloworld-deployment`}</MDXTag>\n<MDXTag name=\"td\" components={components} parentName=\"tr\" props={{\"align\":null}}>{`Get the status of the rollout`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"tr\" components={components} parentName=\"tbody\">\n<MDXTag name=\"td\" components={components} parentName=\"tr\" props={{\"align\":null}}>{`kubectl rollout history `}{`[deployment]`}</MDXTag>\n<MDXTag name=\"td\" components={components} parentName=\"tr\" props={{\"align\":null}}>{`Get the rollout history`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"tr\" components={components} parentName=\"tbody\">\n<MDXTag name=\"td\" components={components} parentName=\"tr\" props={{\"align\":null}}>{`kubectl rollout undo `}{`[deployment]`}</MDXTag>\n<MDXTag name=\"td\" components={components} parentName=\"tr\" props={{\"align\":null}}>{`Rollback to previous version`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"tr\" components={components} parentName=\"tbody\">\n<MDXTag name=\"td\" components={components} parentName=\"tr\" props={{\"align\":null}}>{`kubectl rollout undo `}{`[deployment]`}{` --to-revision=n`}</MDXTag>\n<MDXTag name=\"td\" components={components} parentName=\"tr\" props={{\"align\":null}}>{`Rollback to previous version`}</MDXTag>\n</MDXTag>\n</MDXTag>\n</MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"demo-deployment-notes\"}}>{`Demo: Deployment notes`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Again, get pods will sho the pods with appended suffixes auto-determined by Kubernetes.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`You can verify rollout status using the commands above.`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"services\"}}>{`Services`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Pods themselves are very dynamic, they come and go on the Kubernetes cluster.`}</MDXTag>\n<MDXTag name=\"ul\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`When using a `}<MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`Replication Controller`}</MDXTag>{`, pods are termined and created during scaling operations.`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Wehn using `}<MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`Deployments`}</MDXTag>{`, when updating the image version, pods are terminated and new pods take the place of older pods.`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"p\" components={components}>{`That's why Pods should never be accessed directly, but always through a Service.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`A service is the `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`logical bridge`}</MDXTag>{` between the \"mortal\" pods and other services or end-users.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`When using the `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`kubectl expose`}</MDXTag>{` command, you create a service for you pod to be accessed externally.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Creating a service will create an endpoint for your pod(s):`}</MDXTag>\n<MDXTag name=\"ol\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ol\">{`A ClusterIP: a virtual IP address only reachable from within the cluster (this is default)`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ol\">{`A NodePort: a port that is the same on each node that is also reachable externally.`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ol\">{`A LoadBalancer: created by the Cloud provider that will route external traffic on every node on the NodePort`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"p\" components={components}>{`The options shown only allow virtual IPs and ports.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`There is also a possibility to use `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`DNS Names`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`The `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`ExternalName`}</MDXTag>{` can provide a DNS name for the service e.g. for service discovery using DNS.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`This `}<MDXTag name=\"strong\" components={components} parentName=\"p\">{`only`}</MDXTag>{` works when the DNS add-on is enabled.`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-yaml\"}}>{`# helloworld-service.yml\napiVersion: v1\nkind: Service\nmetadata:\n  name: helloworld-service\nspec:\n  ports: # specify the ports the service uses\n  - port: 31001\n    nodePort: 31001\n    # name below defined from pod\n    targetPort: nodejs-port\n    protocol: TCP\n  selector:\n  # service for this app\n  app: helloworld\n  type: NodePort\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"tags\"}}>{`Tags`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Similar to Labels for AWS`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`For example, you can label your objects.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`For instance: Key could be `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`environment`}</MDXTag>{`, and the value could be `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`dev`}</MDXTag>{`/`}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`staging`}</MDXTag>{`/`}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`qa`}</MDXTag>{`/`}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`prod`}</MDXTag>{`.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Maybe you could also tag the department that is comes from etc.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Labels are not unique. You can then use `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`label selectors`}</MDXTag>{` to match labels.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Eg. a particular pod can only run on a node label with \"evironment\" equals \"development\".`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`More complex matching: \"environment\" in \"development\" or \"qa\".`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`You can also use labels to tag nodes. Once tagged, you can use labels selectors to let pods only run on specific nodes.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`There are two steps required to run a pod on a specific set of nodes:`}</MDXTag>\n<MDXTag name=\"ol\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ol\">{`First you tag the node`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ol\">{`Then you add a `}<MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`nodeSelector`}</MDXTag>{` to your pod configuration`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{}}>{`kubectl label nodes node1 hardware=high-spec\nkubectl label nodes node1 hardware=low-spec\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`Secondly, add a pod that uses those labels:`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-yaml\"}}>{`# pod-helloworld.yml\napiVersion: v1\nkind: Pod\nmetadata:\n  name: nodehelloworld.example.com\n  labels:\n  app: helloworld\nspec:\n  # The containers are listed here\n  containers:\n  - name: k8s-demo\n    image: okeeffed/docker-demo\n    ports:\n    - containerPort: 3000\n  nodeSelector:\n  hardware: high-spec\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"demo-using-tags\"}}>{`Demo: Using tags`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`It only really makes sense if you have multiple nodes (doesn't really make sense on minikube).`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"healthchecks\"}}>{`Healthchecks`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`If the application malfunctions, the pod and container may still be running but the application may no longer be running. This is where health checks come in.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Two types:`}</MDXTag>\n<MDXTag name=\"ol\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ol\">{`Running a command in the container periodically`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ol\">{`Periodic checks on a URL`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"p\" components={components}>{`The typical prod application behind a load balancer should always have health checks implemented in some way to ensure availability and resiliency.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Below you can see where the healthcheck is. You can check the port or container port name.`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-yaml\"}}>{`# pod-helloworld.yml\napiVersion: v1\nkind: Pod\nmetadata:\n  name: nodehelloworld.example.com\n  labels:\n  app: helloworld\nspec:\n  # The containers are listed here\n  containers:\n  - name: k8s-demo\n    image: okeeffed/docker-demo\n    ports:\n    - containerPort: 3000\n    # @@@ This is the health check\n    livenessProbe:\n    httpGet:\n      path: /\n      port: 3000\n    initialDelaySeconds: 15\n    timeoutSeconds: 30\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"secrets\"}}>{`Secrets`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`A way to distribute credentials, keys, passwords or secret data to the pods.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Kubernetes itself uses this Secrets mechanism to provide the credentials to access the internal API.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`You can use the same mechanism to provide secrets to your application.`}</MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`secrets`}</MDXTag>{` is just one way to provide secrets that is native to Kubernetes. There are still other ways to do this.`}</MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"how-to-use-them\"}}>{`How to use them`}</MDXTag>\n<MDXTag name=\"ul\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Use as env vars`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Use as a file in a pod`}<MDXTag name=\"ul\" components={components} parentName=\"li\">\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`This requires volumes to be mounted`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`In this volume you have files`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`This can be use for things like dotenv files`}</MDXTag>\n</MDXTag></MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`You can use an external image to pull secrets (private image registry)`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Generating:`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-bash\"}}>{`echo -n \"root\" > ./username.txt\necho -n \"password\" > ./password.txt\nkubectl create secret generic db-user-pass --from-file=./username.txt --from-file=./password.txt\n# > secret \"db-user-pass\" created\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`A secret can also be a SSH key or SSL cert.`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-bash\"}}>{`kubectl create secret generic ssl-cert --from-file=ssh-privatekey=~/.ssh/id_rsa --ssl-cert-=ssl-cert=mysslcert.crt\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`To generate secrets using yaml defs:`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-yaml\"}}>{`apiVersion: v1\nkind: Secret\nmetadata:\n  name: db-secret\ntype: Opaque\ndata:\n  password: pwd\n  username: usr\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`Then, you can generate it as base64 like so:`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-bash\"}}>{`echo -n \"password\" | base64\n# > pwd\n\nkubectl create -f secrets-db-secret.yml\n# > secret \"db-secret\" created\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`To create a pod that uses secrets:`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-yaml\"}}>{`# pod-helloworld.yml w/ secrets\napiVersion: v1\nkind: Pod\nmetadata:\n  name: nodehelloworld.example.com\n  labels:\n  app: helloworld\nspec:\n  # The containers are listed here\n  containers:\n  - name: k8s-demo\n    image: okeeffed/docker-demo\n    ports:\n    - containerPort: 3000\n    # @@@ This are the envs\n    env:\n    - name: SECRET_USERNAME\n      valueFrom:\n      secretKeyRef:\n        name: db-secret\n        key: username\n    - name: SECRET_PASSWORD\n      [...]\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`Alternatively when providing in a file:`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-yaml\"}}>{`# pod-helloworld.yml w/ secrets\napiVersion: v1\nkind: Pod\nmetadata:\n  name: nodehelloworld.example.com\n  labels:\n  app: helloworld\nspec:\n  # The containers are listed here\n  containers:\n  - name: k8s-demo\n  image: okeeffed/docker-demo\n  ports:\n  - containerPort: 3000\n  # @@@ This are the envs in a volume mount\n  volumeMounts:\n  - name: credvolume\n    mountPath: /etc/creds\n    readOnly: true\n  volumes:\n  - name: credvolume\n  secret:\n    secretName: db-secrets\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"demo-wordpress-secrets\"}}>{`Demo: Wordpress Secrets`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`This demo ends up creating a secrets file, a pod definition and a service to expose the wordpress pod.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`However, note that deleting the current setup will result in a container restarting to maintain state, but when that happens the WordPress site has to be re-installed because the data was not saved. The solution for this will be in the volumes lab.`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"web-ui\"}}>{`Web UI`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Kubernetes comes with a `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`Web UI`}</MDXTag>{` you can use instead of kubectl commands.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`You can use it to:`}</MDXTag>\n<MDXTag name=\"ol\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ol\">{`Get an overview of running applications on your cluster`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ol\">{`Creating and modifying individual Kubernetes resources and workloads (like kubectl create and delete)`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ol\">{`Retrieve info on state or resources.`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"p\" components={components}>{`You can reach this UI at `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`https://<kubernetes-master>/ui`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`If you cannot access it, you can install it manually:`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-bash\"}}>{`kubectl create -f https://rawgit.com/kubernetes/dashboard/master/src/deploy/kubernetes-dashboard.yaml\n# If the password is asked\nkubectl config view\n\n# If you're on minikube\nminikube dashboard # or --url for the url\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"demo-web-ui\"}}>{`Demo: Web UI`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Using the web ui you can see some really interesting info and graphs on usage.`}</MDXTag>\n<MDXTag name=\"h1\" components={components} props={{\"id\":\"advanced-topics\"}}>{`Advanced Topics`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"service-discovery\"}}>{`Service Discovery`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`As of Kubernetes 1.3, DNS is a `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`built-in`}</MDXTag>{` service launched automatically using the addon manager.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`The addons are in the `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`/etc/kubernetes/addons`}</MDXTag>{` directory on the master node.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`The service can be used within pods to find other services running on the same cluster.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Multiple containers within 1 pod don't need this service, as they can contact each other directly. A container in the same pod can just use `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`localhost:port`}</MDXTag>{`.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`To make DNS work, a pod will need a `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`service definition`}</MDXTag>{`.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`How can app 1 reach app 2 using DNS? The container itself can talk to the service of App 2.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`If you ran the host for `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`app1-service`}</MDXTag>{` and got back 10.0.0.1, `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`host app2-service`}</MDXTag>{` could get back 10.0.0.2.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Examples from the CL`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-bash\"}}>{`host app1-service\n# has addr 10.0.0.1\nhost app2-service\n# has addr 10.0.0.2\nhost app2-service.default\n# app2-service.default has address 10.0.0.2\nhost app2-service.default.svc.cluster.local\n# app2-service.default.svc.cluster.local has addr 10.0.0.2\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`The `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`default`}</MDXTag>{` stands for default namespace. Pods and services can be launched in different namespaces (to logically seperate your cluster).`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`So how does this resolution work?`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Say we have a pod and we run `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`kubectl run -i -tty busybox --image=busybox --restart=Never -- sh`}</MDXTag>{` and the from the shell run `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`cat /etc/resolv.conf`}</MDXTag>{`, can can see that there will be a `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`nameserver`}</MDXTag>{`. If you do a lookup of the service name in this folder, you'll see why the above works with `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`.default`}</MDXTag>{` and `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`.default.svc.whatever`}</MDXTag>{`.`}</MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"demo-service-discovery\"}}>{`Demo: Service Discovery`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`After creating a secrets type, pod type for a database (SQL using the secrets), and a service for exposing certain ports for the database and then deploying three replicas for a `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`helloworld-deployment`}</MDXTag>{` that also has a `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`index-db.js`}</MDXTag>{` file which we run `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`node index-db.js`}</MDXTag>{` which will have code that works on the service. The value of the `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`MYSQL_HOST`}</MDXTag>{` being set to `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`database-service`}</MDXTag>{` will resolve with the database-service.yml file where the metadata `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`name`}</MDXTag>{` is `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`database-service`}</MDXTag>{`.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Running `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`kubectl get pod`}</MDXTag>{` we should see the database plus 3 pods running for the deployment.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Running `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`kubectl logs [deployment-name]`}</MDXTag>{` will also show us the logs for that pod.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Again, remember that running `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`kubectl get svc`}</MDXTag>{` will get all the services available.`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"configmap\"}}>{`ConfigMap`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Config params that are not secret can be put in the ConfigMap.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`The input is again key-value pairs.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`The `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`ConfigMap`}</MDXTag>{` key-value pairs can then be read by the app using:`}</MDXTag>\n<MDXTag name=\"ol\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ol\">{`Env variables`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ol\">{`Container commandline args in the Pod config`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ol\">{`Using volumes`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"p\" components={components}>{`It can also contain full config files eg. a webserver config file. Then that file can then be mounted using volumes where the application expects its config file.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`This was you can `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`inject`}</MDXTag>{` config settings into containers without changing the container itself.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`To generate a configmap using files:`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-bash\"}}>{`\\$ cat << EOF > app.properties\ndriver=jdbc\ndatabase=postgres\nlookandfeel=1\notherparams=xyz\nparam.with.hierarchy=xyz\nEOF\n\\$ kubectl create configmap app-config --from-file=app.properties\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`How to use it? You can create a pod that exposes the ConfigMap using a volume.`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-yaml\"}}>{`# pod-helloworld.yml w/ secrets\napiVersion: v1\nkind: Pod\nmetadata:\n  name: nodehelloworld.example.com\n  labels:\n  app: helloworld\nspec:\n  # The containers are listed here\n  containers:\n  - name: k8s-demo\n  image: okeeffed/docker-demo\n  ports:\n  - containerPort: 3000\n  # @@@ This are the envs in a volume mount\n  volumeMounts:\n  - name: credvolume\n    mountPath: /etc/creds\n    readOnly: true\n  # @@@ For the ConfigMap\n  - name: config-volume\n    mountPath: /etc/config\n  volumes:\n  - name: credvolume\n  secret:\n    secretName: db-secrets\n  # @@@ For the ConfigMap\n  - name: config-volume\n  configMap:\n    name: app-config\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`From `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`/etc/config`}</MDXTag>{` , the config values will be stored in files at `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`/etc/config/driver`}</MDXTag>{` and `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`/etc/config/param/with/hierarchy`}</MDXTag>{`.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`This is an example of a pod that exposes the ConfigMap as env variables:`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-yaml\"}}>{`# pod-helloworld.yml w/ secrets\napiVersion: v1\nkind: Pod\nmetadata:\n  name: nodehelloworld.example.com\n  labels:\n  app: helloworld\nspec:\n  # The containers are listed here\n  containers:\n  - name: k8s-demo\n  image: okeeffed/docker-demo\n  ports:\n  - containerPort: 3000\n  # @@@ This are the envs in a volume mount\n  env:\n  - name: DRIVER\n    valueFrom: # where you get the value from\n    configMapKeyRef: # ensuring the ref comes from the configMap\n    name: app-config\n    key: driver\n  - name: DATABASE\n  [ ... ]\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"demo-config-map\"}}>{`Demo: Config Map`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Using an example for a reverse proxy config for NGINX:`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{}}>{`server {\n  listen  80;\n  server_name localhost;\n\n  location / {\n  proxy_bind 127.0.0.1;\n  proxy_pass http://127.0.0.1:3000;\n  }\n\n  error_page  500 502 503 504 /50x.html;\n  location = /50x.html {\n  root    /usr/share/nginx/html;\n  }\n}\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`We could then create this config map with `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`kubectl create configmap nginx-config --from-file=reverseproxy.conf`}</MDXTag>{`.`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-yaml\"}}>{`# pod-helloworld.yml w/ secrets\napiVersion: v1\nkind: Pod\nmetadata:\n  name: hellonginx.example.com\n  labels:\n  app: hellonginx\nspec:\n  # The containers are listed here\n  containers:\n    - name: nginx\n    image: nginx:1.11\n    ports:\n    - containerPort: 80\n    # @@@ The import conf stuff\n    volumeMounts:\n    - name: config-volume\n        mountPath: /etc/nginx/conf.d\n  - name: k8s-demo\n  image: okeeffed/docker-demo\n  ports:\n    - containerPort: 3000\n  # @@@ The important mounting\n  volumes:\n    - name: config-volume # @@@ this is referred to above in volumeMounts\n    configMap:\n        name: nginx-config\n        items:\n        - key: reverseproxy.conf\n        path: reverseproxy.conf\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`After then also creating the service, we can grab the minikube service url and use curl to get info on that request. From here, would could see that it is `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`nginx`}</MDXTag>{` answer the request and transferring it to the Node port.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`If we then want to jump into the nginx container to see what is going on, we can run `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`kubectl exec -i -t helloworld-nginx -c nginx -- bash`}</MDXTag>{` (-c flag to specify container) and run `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`ps x`}</MDXTag>{` to see the processes and we can `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`cat /etc/nginx/conf.d/reverseproxy.conf`}</MDXTag>{`.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`At this stage, we can enable SSL for NGINX.`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"ingress-controller\"}}>{`Ingress Controller`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Ingress a solution since Kub 1.1 that allows inbound connections to the cluster.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`It's an alternative to the external `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`LoadBalancer`}</MDXTag>{` and `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`nodePorts`}</MDXTag>{`. It allows you to easily expose services that need to be accessible from outside to the cluster.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`With ingress you can run your own ingress controller (basically a loudbalancer) within the Kub Cluster.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`There are default ingress controller available, or you can write your own ingress controller.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`How does it work? If you connect over 80/443 you will first hit the `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`Ingress Controller`}</MDXTag>{`. You can use the NGINX controller that comes with Kubernetes. That controller will the dirrect all the traffic.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`The `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`ingress rules`}</MDXTag>{` could define that if you go to `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`host-x.example.com`}</MDXTag>{` you go to `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`Pod 1`}</MDXTag>{` etc. You can even redirect slash URLs specifically.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`To create an Ingress Controller:`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-yaml\"}}>{`# ingress-controller.yml w/ secrets\napiVersion: extensions/v1beta1\nkind: Ingress\nmetadata:\n  name: helloworld-rules\nspec:\n  # @@@ Setting the important rules\n  rules:\n    - host: helloworld-v1.example.com\n      http:\n        paths:\n          - path: /\n          backend:\n            serviceName: helloworld-v1\n            servicePort: 80\n    - host: helloworld-v2.example.com\n      http:\n        paths:\n          - path: /\n          backend:\n            serviceName: helloworld-v2\n            servicePort: 80\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"demo-ingress-controller\"}}>{`Demo: Ingress Controller`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`In the example, the ingress controller is a `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`Replication Controller`}</MDXTag>{` to ensure that there is always one up and running.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`After deploying, if we curl with the -H host flag with `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`helloworld-v1.whatever.com`}</MDXTag>{` and v2 respectively, it would have the ingress controller route to each server.`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"external-dns\"}}>{`External DNS`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`On public cloud providers, you can use the ingress controller to `}<MDXTag name=\"strong\" components={components} parentName=\"p\">{`reduce the cost of your LoadBalancers`}</MDXTag>{`.`}</MDXTag>\n<MDXTag name=\"ul\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`You could use 1 LoadBalancer that captures all the external traffic and send it to the ingress controller.`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`IngCont can be configured to route the different traffic to all your apps based on HTTP rules.`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Only works for HTTP(s)-based apps`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"p\" components={components}>{`The External DNS tool will automatically create the necessary DNS records in your external DNS server (like route53).`}</MDXTag>\n<MDXTag name=\"ul\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`For every hostname used in ingress, it'll create a new record to send traffic to load balancer.`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`The major DNS providers are supported: Route53, Google CloudDNS, CloudFlare etc.`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"img\" components={components} parentName=\"p\" props={{\"src\":\"https://res.cloudinary.com/gitgoodclub/image/upload/v1539998347/Screen_Shot_2018-10-20_at_12.18.14_pm.png\",\"alt\":\"Diagram\"}}></MDXTag></MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"volumes\"}}>{`Volumes`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`How can we run stateful apps?`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Volumes in kubernetes allow you to store data outside of the container. So far, all the applications have been stateless for this reason. This can be done with external services like a database, caching server (eg MySQL, AWS S3).`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Persistent Volumes in Kubernetes allow you to attach a volume to a container that exists even when the container stops. Volumes can be attached using different volume plugins. Eg local volume, EBS Storage etc.`}</MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"using-ebs-storage\"}}>{`Using EBS Storage`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`With this, we can keep state. You could run a `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`MySQL`}</MDXTag>{` database using persistent volumes, although this may not be ready for production yet.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`The use case is that if your node stops working, the pod can be rescheduled on another node, and the volume can be attached to the new node.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`To use volumes, you first need to create the volume:`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-bash\"}}>{`aws ec2 create-volume --sze 1- --region us-east-1 --availability-zone us-east-1 --volume-type gp2\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`Next, we need to create a pod with a volume def:`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-yaml\"}}>{`# pod-helloworld.yml w/ secrets\napiVersion: v1\nkind: Pod\nmetadata:\n  name: hellonginx.example.com\n  labels:\n  app: hellonginx\nspec:\n  # The containers are listed here\n  containers:\n    - name: k8s-demo\n    image: okeeffed/k8s-demo\n    volumeMounts:\n    - name: myvolume\n      mountPath: myvolume\n  # @@@ The important mounting\n  volumes:\n    - name: myvolume # @@@ this is referred to above in volumeMounts\n      awsElasticBlockStore:\n        volumeID: vol-9835id\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"demo-volumes\"}}>{`Demo: Volumes`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Using Vagrant for kops, we can first create a volume using the above mentioned command.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`After receiving a response, you can replace the .yml pod definition config file to attach that volumeID. Once the deployment is created and deployed. `}</MDXTag>\n<MDXTag name=\"ul\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`After create and confirmation, we can get the pod name `}<MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`kubectl get pod`}</MDXTag>{` and attach `}<MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`kubectl exec helloworld-deployment-923id -i -t -- bash`}</MDXTag>{` and then run `}<MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`ls -ahl /myvol/`}</MDXTag>{` to check for volume.`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`If we run `}<MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`echo 'test' > /myvol/myvol.txt`}</MDXTag>{` and `}<MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`echo 'test 2' > /test.txt`}</MDXTag>{`, we know that the latter file will not persist if the pod is restarted/rescheduled.`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`If we run `}<MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`kubectl drain ip --force`}</MDXTag>{` we can drain the pod. Assuming this is a `}<MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`Replication Controller`}</MDXTag>{` or `}<MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`Deployment`}</MDXTag>{`, another container should spin up.`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Once that pod is attached to another node, we can also attach back to the pod on the new node with the `}<MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`exec`}</MDXTag>{` command and we can confirm that the `}<MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`/myvol/myvol.txt`}</MDXTag>{` is still there, although the other `}<MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`/test.txt`}</MDXTag>{` is no longer there since it was not saved to the volume.`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"p\" components={components}>{`If you need to remove the ebs volume, you can run `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`aws ec2 delete-volume --volume-id vol-[id]`}</MDXTag>{`.`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"volume-provisioning\"}}>{`Volume Provisioning`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`The kubs plugins have the capability to `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`provision storage`}</MDXTag>{` for you. The AWS Plugin can for instance `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`provision storage`}</MDXTag>{` for you by creating the volumes in AWS before attaching them to a node.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`This is done using the `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`StorageClass`}</MDXTag>{` object -- this is beta for the course but should be stable soon.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`To use autoprovisioing, create the following:`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-yaml\"}}>{`# storage.yml\nkind: StorageClass\napiVersion: storage.k8s.io/v1\nmetadata:\n  name: standard\nprovisioner: kubernetes.io/aws-ebs\nparameters:\n  type: gp2\n  zone: ap-southeast-1\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`Next, you can create a volume claim and specify the size:`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-yaml\"}}>{`# my-volume-claim.yml\nkind: PersistentVolumeClaim\napiVersion: v1\nmetadata:\n  name: myclaim\n  annotations:\n    volume.beta.kubernetes.io/storage-class: \"standard\"\nspec:\n  accessModes:\n    - ReadWriteOnce\n  resources:\n    requests:\n      storage: 8Gi\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`Finally, if launching a pod:`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-yaml\"}}>{`# pod-helloworld.yml w/ secrets\napiVersion: v1\nkind: Pod\nmetadata:\n  name: mypod\nspec:\n  # The containers are listed here\n  containers:\n    - name: myfrontend\n    image: nginx\n    volumeMounts:\n    - name: mypd\n      mountPath: '/var/www/html'\n  # @@@ The important mounting\n  volumes:\n    - name: mypd # @@@ this is referred to above in volumeMounts\n      persistentVolumeClaim:\n        claimName: myclaim # @@@ refers to my claim from the previous type definition\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"demo-using-wordpress-with-volumes\"}}>{`Demo: Using Wordpress with Volumes`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`After declaring a `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`StorageClass`}</MDXTag>{` class from a yaml file and a `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`PersistentVolumeClaim`}</MDXTag>{` class.`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-yaml\"}}>{`# storage.yml\nkind: StorageClass\napiVersion: storage.k8s.io/v1beta1\nmetadata:\n  name: standard\nprovisioner: kubernetes.io/aws-ebs\nparameters:\n  type: gp2\n  zone: eu-west-1a\n`}</MDXTag></MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-yaml\"}}>{`# PV Claim\nkind: PersistentVolumeClaim\napiVersion: v1\nmetadata:\n  name: db-storage\n  annotations:\n    volume.beta.kubernetes.io/storage-class: \"standard\"\nspec:\n  accessModes:\n    - ReadWriteOnce\n  resources:\n    requests:\n      storage: 8Gi\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`There is also a simple ReplicationController for the Wordpress DB. In the spe for the container for mysql, we declare where the `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`mountPath`}</MDXTag>{` will be.`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-yaml\"}}>{`apiVersion: v1\nkind: ReplicationController\nmetadata:\n  name: wordpress-db\nspec:\n  replicas: 1\n  selector:\n    app: wordpress-db\n  template:\n    metadata:\n      name: wordpress-db\n      labels:\n        app: wordpress-db\n    spec:\n      containers:\n      - name: mysql\n        image: mysql:5.7\n        args:\n          - \"--ignore-db-dir=lost+found\"\n        ports:\n        - name: mysql-port\n          containerPort: 3306\n        env:\n          - name: MYSQL_ROOT_PASSWORD\n            valueFrom:\n              secretKeyRef:\n                name: wordpress-secrets\n                key: db-password\n        volumeMounts:\n        - mountPath: \"/var/lib/mysql\"\n          name: mysql-storage\n      volumes:\n        - name: mysql-storage\n          persistentVolumeClaim:\n            claimName: db-storage\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`Having a makeshift secrets file for secrets:`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-yaml\"}}>{`apiVersion: v1\nkind: Secret\nmetadata:\n  name: wordpress-secrets\ntype: Opaque\ndata:\n  db-password: cGFzc3dvcmQ=\n  # random sha1 strings - change all these lines\n  authkey: MTQ3ZDVhMTIzYmU1ZTRiMWQ1NzUyOWFlNWE2YzRjY2FhMDkyZGQ4OA==\n  loggedinkey: MTQ3ZDVhMTIzYmU1ZTRiMWQ1NzUyOWFlNWE2YzRjY2FhMDkyZGQ4OQ==\n  secureauthkey: MTQ3ZDVhMTIzYmU1ZTRiMWQ1NzUyOWFlNWE2YzRjY2FhMDkyZGQ5MQ==\n  noncekey: MTQ3ZDVhMTIzYmU1ZTRiMWQ1NzUyOWFlNWE2YzRjY2FhMDkyZGQ5MA==\n  authsalt: MTQ3ZDVhMTIzYmU1ZTRiMWQ1NzUyOWFlNWE2YzRjY2FhMDkyZGQ5Mg==\n  secureauthsalt: MTQ3ZDVhMTIzYmU1ZTRiMWQ1NzUyOWFlNWE2YzRjY2FhMDkyZGQ5Mw==\n  loggedinsalt: MTQ3ZDVhMTIzYmU1ZTRiMWQ1NzUyOWFlNWE2YzRjY2FhMDkyZGQ5NA==\n  noncesalt: MTQ3ZDVhMTIzYmU1ZTRiMWQ1NzUyOWFlNWE2YzRjY2FhMDkyZGQ5NQ==\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`To open up the service for the port:`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-yaml\"}}>{`apiVersion: v1\nkind: Service\nmetadata:\n  name: wordpress-db\nspec:\n  ports:\n  - port: 3306\n    protocol: TCP\n  selector:\n    app: wordpress-db\n  type: NodePort\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`Opening up the web and web service:`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-yaml\"}}>{`apiVersion: extensions/v1beta1\nkind: Deployment\nmetadata:\n  name: wordpress-deployment\nspec:\n  replicas: 2\n  template:\n    metadata:\n      labels:\n        app: wordpress\n    spec:\n      containers:\n      - name: wordpress\n        image: wordpress:4-php7.0\n        # uncomment to fix perm issue, see also https://github.com/kubernetes/kubernetes/issues/2630\n        # command: ['bash', '-c', 'chown www-data:www-data /var/www/html/wp-content/uploads && apache2-foreground']\n        ports:\n        - name: http-port\n          containerPort: 80\n        env:\n          - name: WORDPRESS_DB_PASSWORD\n            valueFrom:\n              secretKeyRef:\n                name: wordpress-secrets\n                key: db-password\n          - name: WORDPRESS_AUTH_KEY\n            valueFrom:\n              secretKeyRef:\n                name: wordpress-secrets\n                key: authkey\n          - name: WORDPRESS_LOGGED_IN_KEY\n            valueFrom:\n              secretKeyRef:\n                name: wordpress-secrets\n                key: loggedinkey\n          - name: WORDPRESS_SECURE_AUTH_KEY\n            valueFrom:\n              secretKeyRef:\n                name: wordpress-secrets\n                key: secureauthkey\n          - name: WORDPRESS_NONCE_KEY\n            valueFrom:\n              secretKeyRef:\n                name: wordpress-secrets\n                key: noncekey\n          - name: WORDPRESS_AUTH_SALT\n            valueFrom:\n              secretKeyRef:\n                name: wordpress-secrets\n                key: authsalt\n          - name: WORDPRESS_SECURE_AUTH_SALT\n            valueFrom:\n              secretKeyRef:\n                name: wordpress-secrets\n                key: secureauthsalt\n          - name: WORDPRESS_LOGGED_IN_SALT\n            valueFrom:\n              secretKeyRef:\n                name: wordpress-secrets\n                key: loggedinsalt\n          - name: WORDPRESS_NONCE_SALT\n            valueFrom:\n              secretKeyRef:\n                name: wordpress-secrets\n                key: noncesalt\n          - name: WORDPRESS_DB_HOST\n            value: wordpress-db\n        volumeMounts:\n        # shared storage for things like media\n        - mountPath: /var/www/html/wp-content/uploads\n          name: uploads\n      volumes:\n      - name: uploads\n        nfs:\n          server: eu-west-1a.fs-5714e89e.efs.eu-west-1.amazonaws.com\n          path: /\n`}</MDXTag></MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-yaml\"}}>{`apiVersion: v1\nkind: Service\nmetadata:\n  name: wordpress\nspec:\n  ports:\n  - port: 80\n    targetPort: http-port\n    protocol: TCP\n  selector:\n    app: wordpress\n  type: LoadBalancer\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`With the AWS Commandline, you can create a file system and mount target. For the fs, run `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`aws efs create-file-system --creation-token`}</MDXTag>{` and then after grabbing the file-system-id and subnet-id, you can run `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`aws efs create-mount-target --file-system-id <id> --security-groups <sg>`}</MDXTag>{`. Ensure in the above `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`nfs`}</MDXTag>{` volume you update the fs id.`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"pod-presets\"}}>{`Pod Presets`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Pod presets can inject information into pods at runtime.`}</MDXTag>\n<MDXTag name=\"ul\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Used to inject Kubernetes Resources like Secrets, ConfigMaps, Volumes and Environment variables. `}</MDXTag>\n</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Imagine you have 20 apps to deploy, all with a specific credential. You can edit the 20 specs and add the creds, or you can use presets to create 1 `}<MDXTag name=\"strong\" components={components} parentName=\"p\">{`Preset Object`}</MDXTag>{`, which will `}<MDXTag name=\"strong\" components={components} parentName=\"p\">{`inject an environment variable or config file to all matching pods.`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`When injecting env vars and volume mounts, the Pod Preset will apply the changes to ll containers within the pod.`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-yaml\"}}>{`# PodPreset File\napiVersion: settings.k8s.io/v1alpha1\nkind: PodPreset\nmetadata:\n  name: allow-database\nspec:\n  selector:\n    matchLabels:\n      role: frontend\n  env:\n    - name: DB_PORT\n      value: '6379'\n  volumeMounts:\n    - mountPath: /cache\n      name: cache-volume\n  volumes:\n    - name: cache-volume\n      emptyDir: {}\n`}</MDXTag></MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-yml\"}}>{`# Pod file using PodPreset\napiVersion: v1\nkind: Pod\nmetadata:\n  name: website\n  labels:\n    app: website\n    role: frontend\nspec:\n  containers:\n    - name: website\n      image: nginx\n      ports:\n        - containerPort: 80\n`}</MDXTag></MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-bash\"}}>{`\\$ kubectl create -f pod-preset.yml\n\\$ kubectl create -f pod.yml\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"stateful-sets---formerly-pet-sets\"}}>{`Stateful Sets - (formerly Pet Sets)`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Stateful dist apps - new feature from Kub 1.3.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`It is introduced to be able to run `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`stateful applications`}</MDXTag>{` that need:`}</MDXTag>\n<MDXTag name=\"ol\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ol\">{`A stable pod hostname (instead of podname-randomstr) - will have an index ie podname-0, podname-1 etc.`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ol\">{`Stateful app requires multi pods with vols based on their ordinal number. Currently deleting and/or scaling a PetSet down will not deleted volumes associated.`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"p\" components={components}>{`A pet set will allow your stateful app to use DNS to find out peers. One running node of the Pet Set is called a `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`Pet`}</MDXTag>{`. Using Pet Sets you can run for instance 5 cassandra nodes on Kubs named cass-1 until cass-5.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`The big difference is that you don't want to connect just any specific service, you want to make sure pod whatever definitely connects to another pod.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`This pet set also allows order to startup and teardown of pets.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Still a lot of work for future work.`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"daemon-sets\"}}>{`Daemon Sets`}</MDXTag>\n<MDXTag name=\"ul\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Ensure that every single node in the Kubernetes cluster runs the same pod resource. This is useful to ensure a certain pod is running on every single kubernetes node.`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`When a node is added to the cluster, a new pod will be started automatically`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Same when a node is removed, the pod will not be rescheduled on another node`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Use cases:`}</MDXTag>\n<MDXTag name=\"ol\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ol\">{`Logging aggregators`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ol\">{`Monitoring`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ol\">{`Load Balancers/Reverse Proxies/API Gateways`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"resource-usage-monitoring\"}}>{`Resource Usage Monitoring`}</MDXTag>\n<MDXTag name=\"ul\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Heapster enables `}<MDXTag name=\"strong\" components={components} parentName=\"li\">{`Container Cluster Monitoring`}</MDXTag>{` and `}<MDXTag name=\"strong\" components={components} parentName=\"li\">{`Performance Analysis`}</MDXTag>{`.`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`It's providing a monitoring platform for Kubernetes.`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`It's a prerequisite if you want to do `}<MDXTag name=\"strong\" components={components} parentName=\"li\">{`pod auto-scaling`}</MDXTag>{` in Kubernetes.`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Heapster exports cluster metrix `}<MDXTag name=\"strong\" components={components} parentName=\"li\">{`via REST endpoints`}</MDXTag>{`.`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`You can use different backends with Heapster.`}<MDXTag name=\"ul\" components={components} parentName=\"li\">\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Demo uses `}<MDXTag name=\"strong\" components={components} parentName=\"li\">{`InfluxDB`}</MDXTag>{`, but Kafka is also possible.`}</MDXTag>\n</MDXTag></MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Visualisations can be shown with Grafana. `}<MDXTag name=\"ul\" components={components} parentName=\"li\">\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Kubernetes dashboard will also show graphs once monitoring is enabled.`}</MDXTag>\n</MDXTag></MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`All these technologies can be started in pods`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`The `}<MDXTag name=\"strong\" components={components} parentName=\"li\">{`yaml files`}</MDXTag>{` can be found on the github repo of Heapster.`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Since Heapster is now deprecated, you would have to use `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`metrics-server`}</MDXTag>{` or an alternative like `}<MDXTag name=\"strong\" components={components} parentName=\"p\">{`Prometheus`}</MDXTag>{`.`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"horiztonal-pod-autoscaling\"}}>{`Horiztonal Pod Autoscaling`}</MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"a\" components={components} parentName=\"p\" props={{\"href\":\"https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale-walkthrough/\"}}>{`Link to main Kubernetes site`}</MDXTag></MDXTag>\n<MDXTag name=\"ul\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">\n<MDXTag name=\"p\" components={components} parentName=\"li\">{`Kubernetes has the possibility to autoscale pods based on metrics.`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">\n<MDXTag name=\"p\" components={components} parentName=\"li\">{`Kubernetes can autoscale Deployment, Replication Controller or ReplicaSet.`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">\n<MDXTag name=\"p\" components={components} parentName=\"li\">{`In Kubernetes 1.3 `}<MDXTag name=\"strong\" components={components} parentName=\"p\">{`scaling based on CPU`}</MDXTag>{` usage is possible out of the box.`}</MDXTag>\n<MDXTag name=\"ul\" components={components} parentName=\"li\">\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Application based metrics are also available (like queries per second or average request latency).`}<MDXTag name=\"ul\" components={components} parentName=\"li\">\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`To enable, the cluster has to be started with env var ENABLE_CUSTOM_METRICS to be true.`}</MDXTag>\n</MDXTag></MDXTag>\n</MDXTag>\n</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">\n<MDXTag name=\"p\" components={components} parentName=\"li\">{`It will periodically query the utilization for the targeted pods.`}</MDXTag>\n<MDXTag name=\"ul\" components={components} parentName=\"li\">\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`By default 30 sec, can be changed using the `}<MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`--horizontal-pod-autoscaler-sync-period`}</MDXTag>{`flag when launching the controller manager.`}</MDXTag>\n</MDXTag>\n</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">\n<MDXTag name=\"p\" components={components} parentName=\"li\">{`Requires the metrics system to work.`}</MDXTag>\n</MDXTag>\n</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-yaml\"}}>{`apiVersion: autoscaling/v1\nkind: HorizontalPodAutoscaler\nmetadata:\n  name: hpa-example-autoscaler\nspec:\n  scaleTargetRef:\n    apiVersion: extensions/v1beta1\n    kind: Deployment\n    name: hpa-example\n  minReplicas: 1\n  maxReplicas: 10\n  targetCPUUtilizationPercentage: 50\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"affinityanti-affinity\"}}>{`Affinity/Anti-Affinity`}</MDXTag>\n<MDXTag name=\"ul\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`The affinity/anti-affinity feature allows you to do `}<MDXTag name=\"strong\" components={components} parentName=\"li\">{`more complex scheduling`}</MDXTag>{` than the nodeSelector and also `}<MDXTag name=\"strong\" components={components} parentName=\"li\">{`works on Pods`}</MDXTag>{`.`}<MDXTag name=\"ul\" components={components} parentName=\"li\">\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`The language is `}<MDXTag name=\"strong\" components={components} parentName=\"li\">{`more expressive`}</MDXTag>{`.`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`You can create `}<MDXTag name=\"strong\" components={components} parentName=\"li\">{`rules that are not hard requirements`}</MDXTag>{`, but rather a `}<MDXTag name=\"strong\" components={components} parentName=\"li\">{`preferred rule`}</MDXTag>{`, meaning that the scheduler will stil be able to schedule your pod, even if the rules cannot be met.`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`You can create rules to take other pod labels into account`}<MDXTag name=\"ul\" components={components} parentName=\"li\">\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Example, you can make sure two different pods are never on the same node.`}</MDXTag>\n</MDXTag></MDXTag>\n</MDXTag></MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Kubernetes can do `}<MDXTag name=\"strong\" components={components} parentName=\"li\">{`node affinity`}</MDXTag>{` and `}<MDXTag name=\"strong\" components={components} parentName=\"li\">{`pod affinity/anti-affinity`}</MDXTag>{`.`}<MDXTag name=\"ul\" components={components} parentName=\"li\">\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Node affinity is similar to the nodeSelector.`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Pod affinity/anti-affinity allows you to create rules `}<MDXTag name=\"strong\" components={components} parentName=\"li\">{`how pods should be scheduled taking into account other running pods`}</MDXTag>{`.`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Affinity/anti-affinity mechanism is only relevant during scheduling, once a pod is running, it'll need to be recreated to apply the rules again.`}</MDXTag>\n</MDXTag></MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`There are currently 2 types you can use for node affinity:`}<MDXTag name=\"ul\" components={components} parentName=\"li\">\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`1) requiredDuringSchedulingIgnoredDuringExecution`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`2) preferredDuringSchedulingIgnoredDuringExecution`}</MDXTag>\n</MDXTag></MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`The `}<MDXTag name=\"strong\" components={components} parentName=\"li\">{`first one`}</MDXTag>{` sets a `}<MDXTag name=\"strong\" components={components} parentName=\"li\">{`hard requirement`}</MDXTag>{` (like the nodeSelector).`}<MDXTag name=\"ul\" components={components} parentName=\"li\">\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`The rules must be met before the pod can be scheduled.`}</MDXTag>\n</MDXTag></MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`The `}<MDXTag name=\"strong\" components={components} parentName=\"li\">{`second type`}</MDXTag>{` will try to enforce the rule, but it will not guarantee it.`}<MDXTag name=\"ul\" components={components} parentName=\"li\">\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Even if the rule is not met, the pod can still be scheduled, it's a soft requirement, a preference.`}</MDXTag>\n</MDXTag></MDXTag>\n</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-yaml\"}}>{`apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: <% helloworld-deployment %>\nspec:\n  replicas: 2\n  template:\n    metadata:\n      labels:\n        app: <% app_name %>\n    spec:\n      affinity:\n        nodeAffinity:\n          requiredDuringSchedulingIgnoredDuringExecution:\n            nodeSelectorTerms:\n              - matchExpressions:\n                  - key: env\n                    operator: In\n                    values:\n                      - dev\n          preferredDuringSchedulingIgnoredDuringExecution:\n            - weight: 1 # higher the weighting, the more emphasis on rule\n              preference:\n                matchExpressions:\n                  - key: team\n                    operator: In\n                    values:\n                      - engineering-project1\n      containers:\n        - name: k8s-demo\n          image: <% image_name %>\n          port:\n            - containerPort: 3000\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`When scheduling, Kubernetes will score every node by summarizing the weightings per node.`}</MDXTag>\n<MDXTag name=\"ul\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Eg two different rules with weights 1and 5.`}<MDXTag name=\"ul\" components={components} parentName=\"li\">\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`If both rules match, score 6.`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`If only rule with weight 1 matches, score 1.`}</MDXTag>\n</MDXTag></MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`The node that has the highest total score, that's where the pod will be scheduled on.`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"313-interpod-affinityanti-affinity\"}}>{`3.13 Interpod Affinity/Anti-Affinity`}</MDXTag>\n<MDXTag name=\"ul\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`This allows you to influence scheduling based on the labels of other pods that are `}<MDXTag name=\"strong\" components={components} parentName=\"li\">{`already running`}</MDXTag>{` on the cluster.`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Pods belong to a namespace, so rules apply to namespace (default to pod name).`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Two types:`}</MDXTag>\n<MDXTag name=\"ol\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ol\">{`requiredDuringSchedulingIgnoredDuringExecution`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ol\">{`preferredDuringSchedulingIgnoredDuringExecution`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"p\" components={components}>{`The required type create rules that must be met for the pod to be scheduled, the preferred type is a \"soft\" type and the rules may be met.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`A good use case for `}<MDXTag name=\"strong\" components={components} parentName=\"p\">{`pod affinity is co-located pods`}</MDXTag>{`.`}</MDXTag>\n<MDXTag name=\"ul\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Example, you have an app that uses redis as cache and you want to have the Redis pod on the same node as the app itself.`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Another use-case is to co-locate pods within the `}<MDXTag name=\"strong\" components={components} parentName=\"li\">{`same availability zone`}</MDXTag>{`.`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`When writing your pod affinity and anti-affinity rules, you need to specify a `}<MDXTag name=\"strong\" components={components} parentName=\"li\">{`topology domain`}</MDXTag>{`, called `}<MDXTag name=\"strong\" components={components} parentName=\"li\">{`topologyKey`}</MDXTag>{` in the rules.`}<MDXTag name=\"ul\" components={components} parentName=\"li\">\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Key refers to a node label.`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`If affinity rule matches, `}<MDXTag name=\"strong\" components={components} parentName=\"li\">{`new pod`}</MDXTag>{` will only be scheduled on `}<MDXTag name=\"strong\" components={components} parentName=\"li\">{`nodes`}</MDXTag>{` that have the `}<MDXTag name=\"strong\" components={components} parentName=\"li\">{`same topologyKey`}</MDXTag>{` value as the `}<MDXTag name=\"strong\" components={components} parentName=\"li\">{`current running pod`}</MDXTag>{`.`}</MDXTag>\n</MDXTag></MDXTag>\n</MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"img\" components={components} parentName=\"p\" props={{\"src\":\"https://res.cloudinary.com/gitgoodclub/image/upload/v1540165720/Screen_Shot_2018-10-22_at_10.48.04_am.png\",\"alt\":\"Interpod Affinity and anti-affinity\"}}></MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"img\" components={components} parentName=\"p\" props={{\"src\":\"https://res.cloudinary.com/gitgoodclub/image/upload/v1540165853/Screen_Shot_2018-10-22_at_10.50.27_am.png\",\"alt\":\"Zone topology\"}}></MDXTag></MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"anti-affinity\"}}>{`Anti-affinity`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`You can use anti-affinity to make sure a `}<MDXTag name=\"strong\" components={components} parentName=\"p\">{`pod is only scehduled once on a node`}</MDXTag>{`.`}</MDXTag>\n<MDXTag name=\"ul\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Example 3 nodes and you want to schedule 2 pods but they shouldn't be on the same node.`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Pod anti-affinity allows you to create a rule that say to `}<MDXTag name=\"strong\" components={components} parentName=\"li\">{`not schedule on the same host if a pod label matches`}</MDXTag>{`.`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"img\" components={components} parentName=\"p\" props={{\"src\":\"https://res.cloudinary.com/gitgoodclub/image/upload/v1540165853/Screen_Shot_2018-10-22_at_10.50.27_am.png\",\"alt\":\"Anti-affinity\"}}></MDXTag></MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"topology-operators\"}}>{`Topology operators`}</MDXTag>\n<MDXTag name=\"ul\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`In`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`NotIn`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Exists`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`DoesNotExist`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Affinity requires a substantial amount of processor. Take this into account if you have a lot of rules.`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-yaml\"}}>{`# pod-affinity.yml\napiVersion: extensions/v1beta1\nkind: Deployment\nmetadata:\n  name: pod-affinity-1\nspec:\n  replicas: 1\n  template:\n    metadata:\n      labels:\n        app: pod-affinity-1\n    spec:\n      containers:\n      - name: k8s-demo\n        image: wardviaene/k8s-demo\n        ports:\n        - name: nodejs-port\n          containerPort: 3000\n---\napiVersion: extensions/v1beta1\nkind: Deployment\nmetadata:\n  name: pod-affinity-2\nspec:\n  replicas: 1\n  template:\n    metadata:\n      labels:\n        app: pod-affinity-2\n    spec:\n      affinity:\n        podAffinity:\n          requiredDuringSchedulingIgnoredDuringExecution:\n            - labelSelector:\n                matchExpressions:\n                  - key: \"app\"\n                    operator: In\n                    values:\n                    - pod-affinity-1\n              topologyKey: \"kubernetes.io/hostname\" # this could be change for zoning\n      containers:\n      - name: redis\n        image: redis\n        ports:\n        - name: redis-port\n          containerPort: 6379\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`We can then check this is fine by running `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`kubectl get pod -o wide`}</MDXTag>{` to see the Node the pods are running on.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`As for anti-affinity:`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-yaml\"}}>{`apiVersion: extensions/v1beta1\nkind: Deployment\nmetadata:\n  name: pod-affinity-1\nspec:\n  replicas: 1\n  template:\n    metadata:\n      labels:\n        app: pod-affinity-1\n    spec:\n      containers:\n      - name: k8s-demo\n        image: wardviaene/k8s-demo\n        ports:\n        - name: nodejs-port\n          containerPort: 3000\n---\napiVersion: extensions/v1beta1\nkind: Deployment\nmetadata:\n  name: pod-affinity-2\nspec:\n  replicas: 3\n  template:\n    metadata:\n      labels:\n        app: pod-affinity-2\n    spec:\n      affinity:\n        podAffinity:\n          requiredDuringSchedulingIgnoredDuringExecution:\n            - labelSelector:\n                matchExpressions:\n                  - key: \"app\"\n                    operator: In\n                    values:\n                    - pod-affinity-1\n              topologyKey: \"kubernetes.io/hostname\"\n      containers:\n      - name: redis\n        image: redis\n        ports:\n        - name: redis-port\n          containerPort: 6379\n---\napiVersion: extensions/v1beta1\nkind: Deployment\nmetadata:\n  name: pod-affinity-3\nspec:\n  replicas: 3\n  template:\n    metadata:\n      labels:\n        app: pod-affinity-3\n    spec:\n      affinity:\n        podAntiAffinity:\n          requiredDuringSchedulingIgnoredDuringExecution:\n            - labelSelector:\n                matchExpressions:\n                  - key: \"app\"\n                    operator: In\n                    values:\n                    - pod-affinity-1\n              topologyKey: \"kubernetes.io/hostname\"\n      containers:\n      - name: k8s-demo\n        image: wardviaene/k8s-demo\n        ports:\n        - name: nodejs-port\n          containerPort: 3000\n---\napiVersion: extensions/v1beta1\nkind: Deployment\nmetadata:\n  name: pod-affinity-4\nspec:\n  replicas: 1\n  template:\n    metadata:\n      labels:\n        app: pod-affinity-4\n    spec:\n      affinity:\n        podAntiAffinity:\n          requiredDuringSchedulingIgnoredDuringExecution:\n            - labelSelector:\n                matchExpressions:\n                  - key: \"app\"\n                    operator: In\n                    values:\n                    - pod-affinity-1\n                    - pod-affinity-3\n              topologyKey: \"kubernetes.io/hostname\"\n      containers:\n      - name: k8s-demo\n        image: wardviaene/k8s-demo\n        ports:\n        - name: nodejs-port\n          containerPort: 3000\n---\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"img\" components={components} parentName=\"p\" props={{\"src\":\"https://res.cloudinary.com/gitgoodclub/image/upload/v1540170357/Screen_Shot_2018-10-22_at_12.05.28_pm.png\",\"alt\":\"Resulting run with the affinity/anti-affinity\"}}></MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`Note that there are differences between `}<MDXTag name=\"strong\" components={components} parentName=\"p\">{`preferred`}</MDXTag>{` and `}<MDXTag name=\"strong\" components={components} parentName=\"p\">{`required`}</MDXTag>{`. With preferred, you may still have the pod scheduled in events we don't necessarily want as a best case scenario.`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"314-taints-and-tolerations\"}}>{`3.14 Taints and Tolerations`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Tolerations is the opposite of node affinity.`}</MDXTag>\n<MDXTag name=\"ul\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Allows a node to `}<MDXTag name=\"strong\" components={components} parentName=\"li\">{`repels a set of pods`}</MDXTag>{`.`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"strong\" components={components} parentName=\"li\">{`Taints mark`}</MDXTag>{` a node, tolerations are applied to pods to influence the scheduling of a pod.`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`One use case for taints is to make sure that when you create a new pod, they're not scheduled on the master (`}<MDXTag name=\"strong\" components={components} parentName=\"li\">{`node-role.kubernetes.io/master:NoSchedule`}</MDXTag>{`). This is the default.`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-bash\"}}>{`# To add a taint\n\\$ kubectl taint nodes node1 key=value:NoSchedule # This will make sure that no pods will be scheduled on node1 as long as they don't have a matching toleration\n`}</MDXTag></MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-yaml\"}}>{`# tolerations.yml\napiVersion: extensions/v1beta1\nkind: Deployment\nmetadata:\n  name: tolerations-1\nspec:\n  replicas: 3\n  template:\n    metadata:\n      labels:\n        app: tolerations-1\n    spec:\n      containers:\n      - name: k8s-demo\n        image: wardviaene/k8s-demo\n        ports:\n        - name: nodejs-port\n          containerPort: 3000\n---\napiVersion: extensions/v1beta1\nkind: Deployment\nmetadata:\n  name: tolerations-2\nspec:\n  replicas: 3\n  template:\n    metadata:\n      labels:\n        app: tolerations-2\n    spec:\n      tolerations:\n      - key: \"type\"\n        operator: \"Equal\"\n        value: \"specialnode\"\n        effect: \"NoSchedule\"\n      containers:\n      - name: k8s-demo\n        image: wardviaene/k8s-demo\n        ports:\n        - name: nodejs-port\n          containerPort: 3000\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"tolerations-usage\"}}>{`Tolerations usage`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-bash\"}}>{`# Taint a node\n\\$ kubectl taint nodes NODE-NAME type=specialnode:NoSchedule\n\n# Taint with NoExecute\n\\$ kubectl taint nodes NODE-NAME testkey=testvalue:NoExecute\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"keys\"}}>{`Keys`}</MDXTag>\n<MDXTag name=\"ul\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Operators`}<MDXTag name=\"ul\" components={components} parentName=\"li\">\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"strong\" components={components} parentName=\"li\">{`Equal`}</MDXTag>{` (providing key + value)`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"strong\" components={components} parentName=\"li\">{`Exists`}</MDXTag>{` (only providing a key, checking only whether a key exists)`}</MDXTag>\n</MDXTag></MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Effects`}<MDXTag name=\"ul\" components={components} parentName=\"li\">\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"strong\" components={components} parentName=\"li\">{`NoSchedule`}</MDXTag>{` (hard requirement that apod will not be scheduled unless there is a matching toleration)`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"strong\" components={components} parentName=\"li\">{`PreferNoSchedule`}</MDXTag>{` (avoid placing a pod that doesn't have a matching tolerationg, but it's not a hard requirement)`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"strong\" components={components} parentName=\"li\">{`NoExecute`}</MDXTag>{` (evict pods with non-matching tolerations)`}<MDXTag name=\"ul\" components={components} parentName=\"li\">\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"strong\" components={components} parentName=\"li\">{`tolerationSeconds`}</MDXTag>{` key can be applied with a time in seconds for how long a node can run before it is evicted.`}</MDXTag>\n</MDXTag></MDXTag>\n</MDXTag></MDXTag>\n</MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"use-cases\"}}>{`Use Cases`}</MDXTag>\n<MDXTag name=\"ul\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Existing node taints for `}<MDXTag name=\"strong\" components={components} parentName=\"li\">{`master nodes`}</MDXTag>{`.`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Taint nodes that are `}<MDXTag name=\"strong\" components={components} parentName=\"li\">{`dedicated`}</MDXTag>{` for a team or user.`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Node for `}<MDXTag name=\"strong\" components={components} parentName=\"li\">{`specific hardware`}</MDXTag>{` (ie GPUs) you can taint them to void running non-specific applications on those nodes.`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Alpha but soon-to-be beta feature is to `}<MDXTag name=\"strong\" components={components} parentName=\"li\">{`taint nodes by condition`}</MDXTag>{`.`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"useful-taints-and-tolerations\"}}>{`Useful Taints and Tolerations`}</MDXTag>\n<MDXTag name=\"ul\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"strong\" components={components} parentName=\"li\">{`node.kubernetes.io/not-ready`}</MDXTag></MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"strong\" components={components} parentName=\"li\">{`node.kubernetes.io/unreachable`}</MDXTag></MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"strong\" components={components} parentName=\"li\">{`node.kubernetes.io/out-of-disk`}</MDXTag></MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"strong\" components={components} parentName=\"li\">{`node.kubernetes.io/memory-pressure`}</MDXTag></MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"strong\" components={components} parentName=\"li\">{`node.kubernetes.io/disk-pressure`}</MDXTag></MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"strong\" components={components} parentName=\"li\">{`node.kubernetes.io/network-unavailable`}</MDXTag></MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"strong\" components={components} parentName=\"li\">{`node.kubernetes.io/unschedulable`}</MDXTag></MDXTag>\n</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"315-customer-resource-definitions-crds\"}}>{`3.15 Customer Resource Definitions (CRDs)`}</MDXTag>\n<MDXTag name=\"ul\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Let's you extend Kubernetes API.`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Resources are the endpoints in the Kubernetes API that store collections of API Objects (ie Deployment, LoadBalancer).`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Operators use CRDs to extend the Kubernetes API with their own functionality.`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"316-operators\"}}>{`3.16 Operators`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`An `}<MDXTag name=\"strong\" components={components} parentName=\"p\">{`Operator`}</MDXTag>{` is a method of `}<MDXTag name=\"strong\" components={components} parentName=\"p\">{`packaging, deploying and managing`}</MDXTag>{` a Kubernetes Application.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`It puts `}<MDXTag name=\"strong\" components={components} parentName=\"p\">{`operational knowledge`}</MDXTag>{` in an application.`}</MDXTag>\n<MDXTag name=\"ul\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Brings the user `}<MDXTag name=\"strong\" components={components} parentName=\"li\">{`closer to the experience of managed cloud services`}</MDXTag>{`, rather than having to know all the specifics of an application deployed to Kubernetes.`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Once an Operator is deployed, it can be `}<MDXTag name=\"strong\" components={components} parentName=\"li\">{`managed using Custom Resource Definitions`}</MDXTag>{` (arbitraty types that extend the Kubernetes API).`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`It also provides a great way to deploy Stateful applications to Kubernetes.`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`There are operators for Prometheus, Valut, Rook (storage), MySQL, PostgresSQL and so on.`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"postgresql-operator-demo\"}}>{`PostgreSQL Operator Demo`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`If you just deploy a PostgreSQL container, it'd only start the database. But if you're going to use this `}<MDXTag name=\"strong\" components={components} parentName=\"p\">{`operator`}</MDXTag>{`, it'll allow you to also `}<MDXTag name=\"strong\" components={components} parentName=\"p\">{`create replicas, initiate a failover, create backups, scale`}</MDXTag>{`.`}</MDXTag>\n<MDXTag name=\"ul\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`An operator contains a lot of the `}<MDXTag name=\"strong\" components={components} parentName=\"li\">{`management logic`}</MDXTag>{` that you as an administrator or user might want, rather than having to implement it yourself.`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"4-kubernetes-administration\"}}>{`4. Kubernetes Administration`}</MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"img\" components={components} parentName=\"p\" props={{\"src\":\"https://res.cloudinary.com/gitgoodclub/image/upload/v1540175278/Screen_Shot_2018-10-22_at_1.26.57_pm.png\",\"alt\":\"Kubernetes Master Overview\"}}></MDXTag></MDXTag>\n<MDXTag name=\"ul\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`When you deploy a new Pod, the information is stored in `}<MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`etcd`}</MDXTag>{`.`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Schedular talks to REST api.`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`REST api is used to handle tasks.`}<MDXTag name=\"ul\" components={components} parentName=\"li\">\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Interfaces with Kubelets on the nodes.`}</MDXTag>\n</MDXTag></MDXTag>\n</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"41-resource-quotas\"}}>{`4.1 Resource Quotas`}</MDXTag>\n<MDXTag name=\"ul\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Resource management is useful when giving access to a person or a team.`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`You don't want one person or team `}<MDXTag name=\"strong\" components={components} parentName=\"li\">{`taking up all the resources`}</MDXTag>{` (e.g. CPU/Memory) of the cluster.`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`You can divide the cluster into `}<MDXTag name=\"strong\" components={components} parentName=\"li\">{`namespaces`}</MDXTag>{` and enable resource quotas on it.`}<MDXTag name=\"ul\" components={components} parentName=\"li\">\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`You can do this using the `}<MDXTag name=\"strong\" components={components} parentName=\"li\">{`ResourceQuota`}</MDXTag>{` and `}<MDXTag name=\"strong\" components={components} parentName=\"li\">{`ObjectQuota`}</MDXTag>{` objects.`}</MDXTag>\n</MDXTag></MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Each container can specify `}<MDXTag name=\"strong\" components={components} parentName=\"li\">{`request capacity`}</MDXTag>{` and `}<MDXTag name=\"strong\" components={components} parentName=\"li\">{`capacity limits`}</MDXTag>{`.`}<MDXTag name=\"ul\" components={components} parentName=\"li\">\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"strong\" components={components} parentName=\"li\">{`Request capacity`}</MDXTag>{` is an `}<MDXTag name=\"strong\" components={components} parentName=\"li\">{`explicit request`}</MDXTag>{` for resources.`}<MDXTag name=\"ul\" components={components} parentName=\"li\">\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`The scheduler can use the `}<MDXTag name=\"strong\" components={components} parentName=\"li\">{`request capacity`}</MDXTag>{` to make decisions on where to put the pod on.`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`You can see it as a `}<MDXTag name=\"strong\" components={components} parentName=\"li\">{`minimum amount of resources the pod needs`}</MDXTag>{`.`}</MDXTag>\n</MDXTag></MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"strong\" components={components} parentName=\"li\">{`Resource limit`}</MDXTag>{` is a limit imposed to the container.`}<MDXTag name=\"ul\" components={components} parentName=\"li\">\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Container will not be able to utilize more resources than specified.`}</MDXTag>\n</MDXTag></MDXTag>\n</MDXTag></MDXTag>\n</MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"resource-quota-examples\"}}>{`Resource Quota Examples`}</MDXTag>\n<MDXTag name=\"ul\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`You run a `}<MDXTag name=\"strong\" components={components} parentName=\"li\">{`deployment`}</MDXTag>{` with a `}<MDXTag name=\"strong\" components={components} parentName=\"li\">{`pod`}</MDXTag>{` with a `}<MDXTag name=\"strong\" components={components} parentName=\"li\">{`CPU resource`}</MDXTag>{` request of `}<MDXTag name=\"strong\" components={components} parentName=\"li\">{`200m`}</MDXTag>{`. (200 millicpu/milliocores).`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`200m = 0.2 = 20% of CPU core of running node.`}<MDXTag name=\"ul\" components={components} parentName=\"li\">\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`If node has 2 cores, still 20% of a single core.`}</MDXTag>\n</MDXTag></MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`You can also put a limit eg 400m.`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Memory quotes defined in MB or GB.`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Each pod needs the capacity quota defined during creation.`}<MDXTag name=\"ul\" components={components} parentName=\"li\">\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Admin can specify default request values for pods that don't specify any values for capacity.`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`The same is valid for limit quotas.`}</MDXTag>\n</MDXTag></MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`If resource is requested more than the allowed capacity, the server API will give an error 403 FORBIDDEN and `}<MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`kubectl`}</MDXTag>{` will show an error.`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"resource-quote-options\"}}>{`Resource Quote options`}</MDXTag>\n<MDXTag name=\"table\" components={components}>\n<MDXTag name=\"thead\" components={components} parentName=\"table\">\n<MDXTag name=\"tr\" components={components} parentName=\"thead\">\n<MDXTag name=\"th\" components={components} parentName=\"tr\" props={{\"align\":null}}>{`Resource`}</MDXTag>\n<MDXTag name=\"th\" components={components} parentName=\"tr\" props={{\"align\":null}}>{`Description`}</MDXTag>\n</MDXTag>\n</MDXTag>\n<MDXTag name=\"tbody\" components={components} parentName=\"table\">\n<MDXTag name=\"tr\" components={components} parentName=\"tbody\">\n<MDXTag name=\"td\" components={components} parentName=\"tr\" props={{\"align\":null}}>{`requests.cpu`}</MDXTag>\n<MDXTag name=\"td\" components={components} parentName=\"tr\" props={{\"align\":null}}>{`Sum of CPU reqs of all pos cannot exceed this value`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"tr\" components={components} parentName=\"tbody\">\n<MDXTag name=\"td\" components={components} parentName=\"tr\" props={{\"align\":null}}>{`requests.mem`}</MDXTag>\n<MDXTag name=\"td\" components={components} parentName=\"tr\" props={{\"align\":null}}>{`Sum of MEM reqs of all pods cannot exceed this value`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"tr\" components={components} parentName=\"tbody\">\n<MDXTag name=\"td\" components={components} parentName=\"tr\" props={{\"align\":null}}>{`requests.storage`}</MDXTag>\n<MDXTag name=\"td\" components={components} parentName=\"tr\" props={{\"align\":null}}>{`Sum of storage reqs of all persistent volume claims cannot exceed this value`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"tr\" components={components} parentName=\"tbody\">\n<MDXTag name=\"td\" components={components} parentName=\"tr\" props={{\"align\":null}}>{`limits.cpu`}</MDXTag>\n<MDXTag name=\"td\" components={components} parentName=\"tr\" props={{\"align\":null}}>{`Sum of CPU limits of all pods cannot exceed this value`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"tr\" components={components} parentName=\"tbody\">\n<MDXTag name=\"td\" components={components} parentName=\"tr\" props={{\"align\":null}}>{`limits.memory`}</MDXTag>\n<MDXTag name=\"td\" components={components} parentName=\"tr\" props={{\"align\":null}}>{`Sum of MEM limits of all pods cannot exceed this value`}</MDXTag>\n</MDXTag>\n</MDXTag>\n</MDXTag>\n<MDXTag name=\"p\" components={components}>{`You can also set limits on:`}</MDXTag>\n<MDXTag name=\"ul\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`configmaps`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`persistentvolumeclaims`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`pods`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`replicationcontrollers`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`resourcequotas`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`services`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`services.loadbalancer`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`services.nodeports`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`secrets`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"42-namespaces\"}}>{`4.2 Namespaces`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Namespaces allow you to create `}<MDXTag name=\"strong\" components={components} parentName=\"p\">{`virtual clusters`}</MDXTag>{` within the same physical cluster.`}</MDXTag>\n<MDXTag name=\"ul\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Namespaces `}<MDXTag name=\"strong\" components={components} parentName=\"li\">{`logically separates`}</MDXTag>{` your cluster.`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`The standard namespace is called `}<MDXTag name=\"strong\" components={components} parentName=\"li\">{`\"default\"`}</MDXTag>{` and that's where all the resources are launched by default.`}<MDXTag name=\"ul\" components={components} parentName=\"li\">\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`There is also `}<MDXTag name=\"strong\" components={components} parentName=\"li\">{`kube-system`}</MDXTag>{` - a namespace for kubernetes specific resources.`}</MDXTag>\n</MDXTag></MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Namespaces are intended when you have `}<MDXTag name=\"strong\" components={components} parentName=\"li\">{`multiple teams/projects`}</MDXTag>{` using the Kubernetes cluster.`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Resource names within namespace must be unique.`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`You can divide resources of a Kubernetes cluster using namespaces.`}<MDXTag name=\"ul\" components={components} parentName=\"li\">\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`You can limit resources on a per namespace basis.`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`E.g. Marketing team can only use a maximum of 10GiB of memory, 2 loadbalancers, 2 CPU cores.`}</MDXTag>\n</MDXTag></MDXTag>\n</MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"namespace-commands\"}}>{`Namespace commands`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-bash\"}}>{`\\$ kubectl create namespace myspace # create namespace myspace\n\\$ kubectl get namespaces # list all namespaces\n# Set default namespace to launch resources in\n\\$ export CONTEXT=\\$(kubectl config view | awk '/current-context/{print \\$2}')\n\\$ kubectl config set-context \\$CONTEXT --namespace=myspace\n`}</MDXTag></MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-yaml\"}}>{`apiVersion: 1\nkind: ResourceQuota\nmetadata:\n    name: objects-counts\n    namespace: myspace\nspec:\n    hard:\n        configmaps: \"10\"\n        persistentvolumesclaim: \"4\"\n        replicationcontrollers: \"20\"\n        secrets: \"10\"\n        services: \"10\"\n        services.loadbalancers: \"2\"\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"demo-resourcequotas\"}}>{`Demo ResourceQuotas`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-yaml\"}}>{`# resourcequota.yml\napiVersion: v1\nkind: Namespace\nmetadata:\n  name: myspace\n---\napiVersion: v1\nkind: ResourceQuota\nmetadata:\n  name: compute-quota\n  namespace: myspace\nspec:\n  hard:\n    requests.cpu: \"1\"\n    requests.memory: 1Gi\n    limits.cpu: \"2\"\n    limits.memory: 2Gi\n---\napiVersion: v1\nkind: ResourceQuota\nmetadata:\n  name: object-quota\n  namespace: myspace\nspec:\n  hard:\n    configmaps: \"10\"\n    persistentvolumeclaims: \"4\"\n    replicationcontrollers: \"20\"\n    secrets: \"10\"\n    services: \"10\"\n    services.loadbalancers: \"2\"\n`}</MDXTag></MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-yaml\"}}>{`# helloworld-with-quotas.yaml\napiVersion: extensions/v1beta1\nkind: Deployment\nmetadata:\n  name: helloworld-deployment\n  namespace: myspace\nspec:\n  replicas: 3\n  template:\n    metadata:\n      labels:\n        app: helloworld\n    spec:\n      containers:\n      - name: k8s-demo\n        image: wardviaene/k8s-demo\n        ports:\n        - name: nodejs-port\n          containerPort: 3000\n        resources:\n          requests:\n            cpu: 200m\n            memory: 0.5Gi\n          limits:\n            cpu: 400m\n            memory: 1Gi\n`}</MDXTag></MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-yaml\"}}>{`# helloworld-no-quotas.yaml\napiVersion: extensions/v1beta1\nkind: Deployment\nmetadata:\n  name: helloworld-deployment\n  namespace: myspace\nspec:\n  replicas: 3\n  template:\n    metadata:\n      labels:\n        app: helloworld\n    spec:\n      containers:\n      - name: k8s-demo\n        image: wardviaene/k8s-demo\n        ports:\n        - name: nodejs-port\n          containerPort: 3000\n`}</MDXTag></MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-yaml\"}}>{`# default.yaml\napiVersion: v1\nkind: LimitRange\nmetadata:\n  name: limits\n  namespace: myspace\nspec:\n  limits:\n  - default:\n      cpu: 200m\n      memory: 512Mi\n    defaultRequest:\n      cpu: 100m\n      memory: 256Mi\n    type: Container\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`The following commands can be used to get check resources:`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-bash\"}}>{`\\$ kubectl get <% pod_name %> --namespace=myspace\n\\$ kubectl describe <% pod_name %> --namespace=myspace\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"43-user-management\"}}>{`4.3 User Management`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`There are two user types:`}</MDXTag>\n<MDXTag name=\"ol\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ol\">{`Normal user (used to access the cluster externally) ie through kubctl.`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ol\">{`Service user (which is managed by an object in Kubernetes).`}<MDXTag name=\"ul\" components={components} parentName=\"li\">\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Used to authenticate within the cluster ie from inside pod of kubelet.`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`These creds are managed like `}<MDXTag name=\"strong\" components={components} parentName=\"li\">{`secrets`}</MDXTag>{`.`}</MDXTag>\n</MDXTag></MDXTag>\n</MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"normal-users\"}}>{`Normal Users`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Auth strategies include:`}</MDXTag>\n<MDXTag name=\"ul\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Client certificates`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Bearer Tokens `}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Authentication Proxy`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`HTTP Basic Authentication`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`OpenID`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Webhooks`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"p\" components={components}>{`They have the following attributes:`}</MDXTag>\n<MDXTag name=\"ul\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Username (e.g. user123 or email@email.com)`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`A UID`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Groups`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Extra fields to store extra info`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"p\" components={components}>{`After a normal user authenticates, it was hav access to everything.`}</MDXTag>\n<MDXTag name=\"ul\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`To limit, you need to configure auth.`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`There are multiple offerings:`}<MDXTag name=\"ul\" components={components} parentName=\"li\">\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`AlwaysAllow / AlwaysDeny`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`ABAC (Attribute-Based Access Control)`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`RBAC (Role Based Access Control)`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Webhook (auth by remote service)`}</MDXTag>\n</MDXTag></MDXTag>\n</MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"service-users\"}}>{`Service Users`}</MDXTag>\n<MDXTag name=\"ul\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Service Users are using `}<MDXTag name=\"strong\" components={components} parentName=\"li\">{`Service Account Tokens`}</MDXTag>{`.`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`They are stored as `}<MDXTag name=\"strong\" components={components} parentName=\"li\">{`credentials using Secrets`}</MDXTag>{`.`}<MDXTag name=\"ul\" components={components} parentName=\"li\">\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Those Secrets are also mounted in pods to allow communication between the services.`}</MDXTag>\n</MDXTag></MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Service Users are `}<MDXTag name=\"strong\" components={components} parentName=\"li\">{`specific to a namespace`}</MDXTag>{`.`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`They are created automatically by the API or manually using `}<MDXTag name=\"strong\" components={components} parentName=\"li\">{`objects`}</MDXTag>{`.`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Any API call `}<MDXTag name=\"strong\" components={components} parentName=\"li\">{`not authenticated`}</MDXTag>{` is considered as an `}<MDXTag name=\"strong\" components={components} parentName=\"li\">{`anonymous`}</MDXTag>{` user.`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"other-notes-on-user-management\"}}>{`Other notes on User Management`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Auth is still a work in progress. The demo itself shows the creation of a asymmetric key and updating Minikube to allow that as the user.`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"44-rbac-role-based-access-control\"}}>{`4.4 RBAC (Role Based Access Control)`}</MDXTag>\n<MDXTag name=\"ul\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Regulates access using `}<MDXTag name=\"strong\" components={components} parentName=\"li\">{`roles`}</MDXTag>{`.`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Allows admins to dynamically configure permission policies.`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`This is what I'll use in the demo.`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"p\" components={components}>{`You add RBAC resources with `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`kubectl`}</MDXTag>{` from a yaml format file.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`First, define a role, then assign users/groups to that role.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`You can create roles limited to a namespace or that applies across all namespaces.`}</MDXTag>\n<MDXTag name=\"ul\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"strong\" components={components} parentName=\"li\">{`Role`}</MDXTag>{` (single namespace) and `}<MDXTag name=\"strong\" components={components} parentName=\"li\">{`ClusterRole`}</MDXTag>{` (cluster-wide).`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"strong\" components={components} parentName=\"li\">{`RoleBinding`}</MDXTag>{` (single namespace) and `}<MDXTag name=\"strong\" components={components} parentName=\"li\">{`ClusterRoleBinding`}</MDXTag>{` (cluster-wide).`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"45-networking\"}}>{`4.5 Networking`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Communication topics already covered:`}</MDXTag>\n<MDXTag name=\"ul\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Container to container: communication within a pod.`}<MDXTag name=\"ul\" components={components} parentName=\"li\">\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Through `}<MDXTag name=\"strong\" components={components} parentName=\"li\">{`localhost`}</MDXTag>{` and the `}<MDXTag name=\"strong\" components={components} parentName=\"li\">{`port number`}</MDXTag>{`.`}</MDXTag>\n</MDXTag></MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Pod-To-Service comms`}<MDXTag name=\"ul\" components={components} parentName=\"li\">\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Using `}<MDXTag name=\"strong\" components={components} parentName=\"li\">{`NodePort`}</MDXTag>{` and `}<MDXTag name=\"strong\" components={components} parentName=\"li\">{`DNS`}</MDXTag>{`.`}</MDXTag>\n</MDXTag></MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`External-To-Service`}<MDXTag name=\"ul\" components={components} parentName=\"li\">\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Using `}<MDXTag name=\"strong\" components={components} parentName=\"li\">{`LoadBalancer`}</MDXTag>{`, `}<MDXTag name=\"strong\" components={components} parentName=\"li\">{`NodePort`}</MDXTag>{`.`}</MDXTag>\n</MDXTag></MDXTag>\n</MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"pods\"}}>{`Pods`}</MDXTag>\n<MDXTag name=\"ul\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`The pod should always be routable.`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Kubernetes assumes that pods should be able to communicate to other pods, regardless of which node they are running.`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Kubernetes assumes that pods should be able to communicate to other pods, regardless of which node they are running.`}<MDXTag name=\"ul\" components={components} parentName=\"li\">\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Every pod has its `}<MDXTag name=\"strong\" components={components} parentName=\"li\">{`own IP address`}</MDXTag>{`.`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Pods on different nodes need to be able to communicate to each other using those IP addresses.`}<MDXTag name=\"ul\" components={components} parentName=\"li\">\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`This is implemented differently depending on your networking setup.`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`On AWS: kubenet networking (kops default).`}</MDXTag>\n</MDXTag></MDXTag>\n</MDXTag></MDXTag>\n</MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"kubenet-networking\"}}>{`Kubenet Networking`}</MDXTag>\n<MDXTag name=\"ul\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Every pod can get an IP that is `}<MDXTag name=\"strong\" components={components} parentName=\"li\">{`routable`}</MDXTag>{` using the AWS Virtual Private Network (VPC).`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`The kubernetes master allocates a /24 subnet to each node (254 IP addresses).`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`The subnet is added to the VPCs route table.`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`There is a limit of `}<MDXTag name=\"strong\" components={components} parentName=\"li\">{`50 entries`}</MDXTag>{`, which means you can't have more than 50 nodes in a single AWS cluster.`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"vpc-alternatives\"}}>{`VPC Alternatives`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Not every cloud provider has VPC-tech (GCE and Azure do).`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`The alternatives for things like on-prem etc are:`}</MDXTag>\n<MDXTag name=\"ol\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ol\">\n<MDXTag name=\"p\" components={components} parentName=\"li\">{`Container Network Interface (CNI)`}</MDXTag>\n<MDXTag name=\"ul\" components={components} parentName=\"li\">\n<MDXTag name=\"li\" components={components} parentName=\"ul\">\n<MDXTag name=\"p\" components={components} parentName=\"li\">{`Software that provides libraries/plugins for network interfaces within containers.`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">\n<MDXTag name=\"p\" components={components} parentName=\"li\">{`Popular solutions are `}<MDXTag name=\"strong\" components={components} parentName=\"p\">{`Calico, Weave`}</MDXTag>{` (standalone or with CNI).`}</MDXTag>\n</MDXTag>\n</MDXTag>\n</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ol\">\n<MDXTag name=\"p\" components={components} parentName=\"li\">{`An Overlay Network`}</MDXTag>\n<MDXTag name=\"ul\" components={components} parentName=\"li\">\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"strong\" components={components} parentName=\"li\">{`Flannel`}</MDXTag>{` is an easy and popular way.`}</MDXTag>\n</MDXTag>\n</MDXTag>\n</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"46-node-maintenance\"}}>{`4.6 Node Maintenance`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`It is the `}<MDXTag name=\"strong\" components={components} parentName=\"p\">{`Node Controller`}</MDXTag>{` that is responsible for managing the Node object.`}</MDXTag>\n<MDXTag name=\"ul\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`It assigns `}<MDXTag name=\"strong\" components={components} parentName=\"li\">{`IP Space`}</MDXTag>{` to the node when a new node is launched.`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`It keeps the `}<MDXTag name=\"strong\" components={components} parentName=\"li\">{`node list`}</MDXTag>{` up to date with the available machines.`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`The node controller is also monitoring the `}<MDXTag name=\"strong\" components={components} parentName=\"li\">{`health of the node`}</MDXTag>{`.`}<MDXTag name=\"ul\" components={components} parentName=\"li\">\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`If a node is `}<MDXTag name=\"strong\" components={components} parentName=\"li\">{`unhealthy it gets deleted`}</MDXTag>{`.`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Pods running on the unhealthy node will then get `}<MDXTag name=\"strong\" components={components} parentName=\"li\">{`rescheduled`}</MDXTag>{`.`}</MDXTag>\n</MDXTag></MDXTag>\n</MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"adding-a-new-node\"}}>{`Adding a new node`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`When adding a new node, the `}<MDXTag name=\"strong\" components={components} parentName=\"p\">{`kubelet`}</MDXTag>{` will attempt to register itself. This is called `}<MDXTag name=\"strong\" components={components} parentName=\"p\">{`self-registration`}</MDXTag>{` and is the default behaviour.`}</MDXTag>\n<MDXTag name=\"ul\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`It allows you to `}<MDXTag name=\"strong\" components={components} parentName=\"li\">{`easily add more nodes`}</MDXTag>{` to the cluster without making API changes yourself.`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`A new node object is `}<MDXTag name=\"strong\" components={components} parentName=\"li\">{`automatically`}</MDXTag>{` created with:`}<MDXTag name=\"ul\" components={components} parentName=\"li\">\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`The metadata (with a name: IP or hostname).`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Labels (e.g. cloud region / availability zone / instance size).`}</MDXTag>\n</MDXTag></MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Has `}<MDXTag name=\"strong\" components={components} parentName=\"li\">{`node condition`}</MDXTag>{` (e.g. Ready, OutOfDisk).`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`When you want to `}<MDXTag name=\"strong\" components={components} parentName=\"li\">{`decomission`}</MDXTag>{` a node, you want to do it gracefully.`}<MDXTag name=\"ul\" components={components} parentName=\"li\">\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Drain a node before you shut it down or take it out of the cluster.`}</MDXTag>\n</MDXTag></MDXTag>\n</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-bash\"}}>{`# drain a node\n\\$ kubectl drain nodename --grace-period=600\n\n# if node runs pods not managed by a controller but just a single pod\n\\$ kubectl drain nodename --force\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"img\" components={components} parentName=\"p\" props={{\"src\":\"https://res.cloudinary.com/gitgoodclub/image/upload/v1540183374/Screen_Shot_2018-10-22_at_3.42.29_pm.png\",\"alt\":\"Terminal draining\"}}></MDXTag></MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"47-high-availability\"}}>{`4.7 High Availability`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`If you are running in prod, you willwant all master services in `}<MDXTag name=\"strong\" components={components} parentName=\"p\">{`high availability`}</MDXTag>{`.`}</MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"setup\"}}>{`Setup`}</MDXTag>\n<MDXTag name=\"ol\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ol\"><MDXTag name=\"strong\" components={components} parentName=\"li\">{`Clustering etcd:`}</MDXTag>{` at least run 3 etcd nodes.`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ol\"><MDXTag name=\"strong\" components={components} parentName=\"li\">{`Replicated API servers:`}</MDXTag>{` with a a LoadBalancer`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ol\">{`Running multiple instances of the `}<MDXTag name=\"strong\" components={components} parentName=\"li\">{`scheduler`}</MDXTag>{` and the `}<MDXTag name=\"strong\" components={components} parentName=\"li\">{`controllers`}</MDXTag>{`.`}<MDXTag name=\"ul\" components={components} parentName=\"li\">\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`only one of them will be the leader, the others are on stand-by.`}</MDXTag>\n</MDXTag></MDXTag>\n</MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"img\" components={components} parentName=\"p\" props={{\"src\":\"https://res.cloudinary.com/gitgoodclub/image/upload/v1540183580/Screen_Shot_2018-10-22_at_3.46.05_pm.png\",\"alt\":\"HA Overview\"}}></MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"img\" components={components} parentName=\"p\" props={{\"src\":\"https://res.cloudinary.com/gitgoodclub/image/upload/v1540183671/Screen_Shot_2018-10-22_at_3.46.52_pm.png\",\"alt\":\"HA diagram\"}}></MDXTag></MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"kops-with-multiple-masters-for-ha\"}}>{`Kops with multiple masters for HA`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-bash\"}}>{`kops create cluster --name=... --zones=eu-west-1a,eu-west-1b,eu-west-1c --master-zones=eu-west-1a,eu-west-1b,eu-west-1c\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`This becomes more complex for volumes since EBS volumes are based within zones.`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"48-tls-on-elb-using-annotations\"}}>{`4.8 TLS on ELB using Annotations`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`You can setup `}<MDXTag name=\"strong\" components={components} parentName=\"p\">{`cloud specific features`}</MDXTag>{` (like TLS termination) on AWS LoadBalancers that you create in Kubernetes using services of type LoadBalancer.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`You can do this using `}<MDXTag name=\"strong\" components={components} parentName=\"p\">{`annotations`}</MDXTag>{` to pass some flags for cloud configuration eg aws-load-balancer-ssl-cert, aws-load-balancer-backend-protocol etc.`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-yaml\"}}>{`# helloworld-elb-tls-service.yaml\napiVersion: v1\nkind: Service\nmetadata:\n  name: helloworld-service\n  annotations:\n    service.beta.kubernetes.io/aws-load-balancer-ssl-cert: \"arn:aws:acm:region:accountid:certificate/...\" #replace this value\n    service.beta.kubernetes.io/aws-load-balancer-backend-protocol: \"http\"\n    service.beta.kubernetes.io/aws-load-balancer-ssl-ports: \"443\"\n    service.beta.kubernetes.io/aws-load-balancer-connection-draining-enabled: \"true\"\n    service.beta.kubernetes.io/aws-load-balancer-connection-draining-timeout: \"60\"\n    service.beta.kubernetes.io/aws-load-balancer-additional-resource-tags: \"environment=dev,app=helloworld\"\nspec:\n  ports:\n  - name: http\n    port: 80\n    targetPort: nodejs-port\n    protocol: TCP\n  - name: https\n    port: 443\n    targetPort: nodejs-port\n    protocol: TCP\n  selector:\n    app: helloworld\n  type: LoadBalancer\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"5-packaging-and-deploying-on-kubernetes\"}}>{`5. Packaging and Deploying on Kubernetes`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"51-intro-to-helm\"}}>{`5.1 Intro to Helm`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Helm is the best way to find, share and use software built for Kubernetes.`}</MDXTag>\n<MDXTag name=\"ul\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Package manager for Kubernetes.`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Helps you manage Kubernetes apps.`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Maintained by CNCF.`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"p\" components={components}>{`To use, download the Helm client.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`To run, use `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`helm init`}</MDXTag>{`.`}</MDXTag>\n<MDXTag name=\"ul\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`This will installer Tiller`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`If you have RBAC installed (recent clusters have it enabled by default), you'll also need to add a ServiceAccount and RBAC rules.`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Helm uses a packaging format call `}<MDXTag name=\"strong\" components={components} parentName=\"p\">{`charts`}</MDXTag>{`.`}</MDXTag>\n<MDXTag name=\"ul\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`A chart is a collection of files that describe a set of Kubernetes resources.`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`A single chart can deploy an app, a piece of software or a database.`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`It can have depencies ie Wordpress chart requires mysql chart.`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`You can also write your own chart.`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"helm-commands\"}}>{`Helm commands`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-bash\"}}>{`\\$ helm init # install tiller on the cluster\n\\$ helm reset # remove tiller\n\\$ helm install # install chart\n\\$ helm search redis #looks for redis chart\n\\$ helm install --name myredis stable/redis # install chart from redis search found under myredis\n\\$ helm delete myredis # delete redis install named myredis\n\\$ helm create <% chart_name %> # create your own chart\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"installing-helm\"}}>{`Installing Helm`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-bash\"}}>{`\\$ curl https://raw.githubusercontent.com/helm/helm/master/scripts/get > get_helm.sh\n\\$ chmod 700 get_helm.sh\n\\$ ./get_helm.sh\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h4\" components={components} props={{\"id\":\"linux-distro-install\"}}>{`Linux Distro Install`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-bash\"}}>{`\\$ wget https://kubernetes-helm.storage.googleapis.com/helm-v2.11.0-linux-amd64.tar.gz\n\\$ tar -xzvf helm-v2.11.0-linux-amd64.tar.gz\n\\$ sudo mv linux-amd64/helm /usr/local/bin/helm\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"adding-to-cluster\"}}>{`Adding to cluster`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-bash\"}}>{`\\$ kubectl create -f helm-rbac.yaml\n\\$ helm init --service-account tiller\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"52-creating-your-own-helm-charts\"}}>{`5.2 Creating your own helm charts`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`This is the recommended way to deploy applications.`}</MDXTag>\n<MDXTag name=\"ul\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">\n<MDXTag name=\"p\" components={components} parentName=\"li\">{`Packaging the app allows you to deploy the app in 1 command.`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">\n<MDXTag name=\"p\" components={components} parentName=\"li\">{`Helm allows for upgrades and rollbacks.`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">\n<MDXTag name=\"p\" components={components} parentName=\"li\">{`Helm chart is also version controlled.`}</MDXTag>\n</MDXTag>\n</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"53-setting-up-helm-repo-with-s3\"}}>{`5.3 Setting up Helm Repo with S3`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`If you have charts stored on S3:`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-bash\"}}>{`# Install plugin\n\\$ helm plugin install https://github.com/hypnoglow/helm-s3.git\n\n# Initialise s3 bucket\n\\$ helm s3 init s3://helm-bucket/charts\n\n# Add report to helm\n\\$ helm repo add my-charts s3://helm-bucket/charts\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"6-serverless-on-kubernetes\"}}>{`6. Serverless on Kubernetes`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`With the serverless products, you don't need to manage the underlying functions. It can also greatly reduce costs.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Great for not worrying about many operational aspects.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`You can also use functions to start applications on Kubernetes instead of containers. You can install and use any of the projects to let developers launch functions on your Kubernetes cluster.`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"61-intro-to-kubeless\"}}>{`6.1 Intro to Kubeless`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`This is a Kubernetes-native framework. It leverages Kubernetes resource to provide auto-scaling, API routing, monitoring and more.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`It uses `}<MDXTag name=\"strong\" components={components} parentName=\"p\">{`Customer Resource Definitions`}</MDXTag>{` to be able to create functions.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`You deploy a function with your preferred language. Once you deploy, you need to determine how it will be triggered.`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"62-creating-functions-on-kubeless\"}}>{`6.2 Creating functions on Kubeless`}</MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"installing-the-cli\"}}>{`Installing the CLI`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-bash\"}}>{`\\$ wget https://github.com/kubeless/kubeless/releases/download/v1.0.0-alpha.8/kubeless_linux-amd64.zip\n\\$ sudo apt-get install unzip # if you need to unzip\n\\$ unzip kubeless_linux-amd64.zip\n\\$ sudo mv bundles/kubeless_linux-amd64/kubeless /usr/local/bin\n\\$ rm -r bundles/\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"deploy-kubeless\"}}>{`Deploy kubeless`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-bash\"}}>{`\\$ kubectl create ns kubeless\n\\$ kubectl create -f https://github.com/kubeless/kubeless/releases/download/v1.0.0-alpha.8/kubeless-v1.0.0-alpha.8.yaml\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"deploy-function-on-kubernetes\"}}>{`Deploy function on Kubernetes`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-bash\"}}>{`kubeless function deploy myfunc --runtime nodejs6 --dependencies node-example/package.json --handler test.myfunction --from-file node-example/example.js\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h4\" components={components} props={{\"id\":\"useful-functions\"}}>{`Useful functions`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-bash\"}}>{`# List function\n\\$ kubeless function ls\n# Call function\n\\$ kubeless function call myfunction --data 'this is some data'\n# Expose function\n\\$ kubectl create -f nginx-ingress-controller-with-elb.yml\n# Linking the function to the ingress controller\n\\$ kubeless trigger http create myfunction --function-name myfunction --hostname myfunction.domain.name\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"usage-with-kafka\"}}>{`Usage with Kafka`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-bash\"}}>{`# Kafka installation\nexport RELEASE=\\$(curl -s https://api.github.com/repos/kubeless/kafka-trigger/releases/latest | grep tag_name | cut -d '\"' -f 4)\nkubectl create -f https://github.com/kubeless/kafka-trigger/releases/download/\\$RELEASE/kafka-zookeeper-\\$RELEASE.yaml\n\n# Trigger and publish\nkubeless trigger kafka create test --function-selector created-by=kubeless,function=uppercase --trigger-topic uppercase\nkubeless topic publish --topic uppercase --data \"this message will be converted to uppercase\"\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"7-microservices\"}}>{`7. Microservices`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`If we have multiple apps that require information from between each other, we need to start talking about the  `}<MDXTag name=\"strong\" components={components} parentName=\"p\">{`service mesh`}</MDXTag>{`. Normally between applications,  we run into the following problems:`}</MDXTag>\n<MDXTag name=\"ul\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`There is no encryption`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`No retries.`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`No fallover.`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`No intelligent load balancer.`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`No routing decisions.`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`No metrics/logs/traces.`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`No access control.`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"p\" components={components}>{`One solution is to implement `}<MDXTag name=\"strong\" components={components} parentName=\"p\">{`sidecars`}</MDXTag>{` which is a proxy to every single microservice. This can resolve issues such as encryption, retries when a connection fails, intelligent load balancing.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`You could also add a `}<MDXTag name=\"strong\" components={components} parentName=\"p\">{`management interface`}</MDXTag>{` which resolves routing decisions, metrics/logs/traces and access control (ie valid certificate etc).`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`This brings us to `}<MDXTag name=\"strong\" components={components} parentName=\"p\">{`Istio`}</MDXTag>{`.`}</MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"img\" components={components} parentName=\"p\" props={{\"src\":\"https://res.cloudinary.com/gitgoodclub/image/upload/v1540090167/istio-diagram.png\",\"alt\":\"Istio diagram\"}}></MDXTag></MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"71-istio-installation\"}}>{`7.1 Istio Installation`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`If you want to use Istio, it's worth now using a node with enough memory ie t2.medium.`}</MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"kops-configuration\"}}>{`Kops configuration`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-bash\"}}>{`\\$ kops edit cluster kubernetes.newtech.academy\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`Add:`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{}}>{`spec:\n  kubeAPIServer:\n    admissionControl:\n    - NamespaceLifecycle\n    - LimitRanger\n    - ServiceAccount\n    - PersistentVolumeLabel\n    - DefaultStorageClass\n    - DefaultTolerationSeconds\n    - MutatingAdmissionWebhook\n    - ValidatingAdmissionWebhook\n    - ResourceQuota\n    - NodeRestriction\n    - Priority\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"download-102\"}}>{`Download (1.0.2):`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-bash\"}}>{`\\$ cd ~\n\\$ wget https://github.com/istio/istio/releases/download/1.0.2/istio-1.0.2-linux.tar.gz\ntar -xzvf istio-1.0.2-linux.tar.gz\n\\$ cd istio-1.0.2\n# Alternatively just export the PATH so you don't have to logout\n\\$ echo 'export PATH=\"\\$PATH:/home/ubuntu/istio-1.0.2/bin\"' >> ~/.profile\n\\$ istioctl # check everything is running correctly\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"download-latest\"}}>{`Download (latest):`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-bash\"}}>{`\\$ cd ~\n\\$ curl -L https://git.io/getLatestIstio | sh -\n\\$ echo 'export PATH=\"\\$PATH:/home/ubuntu/istio-1.0.2/bin\"' >> ~/.profile # change 1.0.2 in your version -- alternative just export the PATH so you don't have to logout\n\\$ cd istio-1.0.2 # change 1.0.2 in your version\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"istio-install\"}}>{`Istio install`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Apply CRDs:`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-bash\"}}>{`\\$ kubectl apply -f ~/istio-1.0.2/install/kubernetes/helm/istio/templates/crds.yaml\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`Wait a few seconds.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Option 1: with no mutual TLS authentication`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-bash\"}}>{`\\$ kubectl apply -f ~/istio-1.0.2/install/kubernetes/istio-demo.yaml\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`Option 2: or with mutual TLS authentication`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-bash\"}}>{`\\$ kubectl apply -f ~/istio-1.0.2/install/kubernetes/istio-demo-auth.yaml\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"72-example-app\"}}>{`7.2 Example app`}</MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"img\" components={components} parentName=\"p\" props={{\"src\":\"https://res.cloudinary.com/gitgoodclub/image/upload/v1540091246/Screen_Shot_2018-10-21_at_2.07.07_pm.png\",\"alt\":\"Example app diagram\"}}></MDXTag></MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"example-app-from-istio\"}}>{`Example app (from istio)`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-bash\"}}>{`export PATH=\"\\$PATH:/home/ubuntu/istio-1.0.2/bin\"\nkubectl apply -f <(istioctl kube-inject -f samples/bookinfo/platform/kube/bookinfo.yaml)\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"hello-world-app\"}}>{`Hello world app`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-bash\"}}>{`export PATH=\"\\$PATH:/home/ubuntu/istio-1.0.2/bin\"\nkubectl apply -f <(istioctl kube-inject -f helloworld.yaml)\nkubectl apply -f helloworld-gw.yaml\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"mutual-tls-example\"}}>{`Mutual TLS example`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Create pods, services, destinationrules, virtualservices`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-bash\"}}>{`kubectl create -f <(istioctl kube-inject -f helloworld-tls.yaml)\nkubectl create -f helloworld-legacy.yaml\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"end-user-authentication\"}}>{`End-user authentication`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-bash\"}}>{`kubectl create -f <(istioctl kube-inject -f helloworld-jwt.yaml)\nkubectl create -f helloworld-jwt-enable.yaml\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`If we want to access a Pod, we need to use a gateway. `}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-yaml\"}}>{`# helloworld-gw.yaml\napiVersion: networking.istio.io/v1alpha3\nkind: Gateway\nmetadata:\n  name: helloworld-gateway\nspec:\n  selector:\n    istio: ingressgateway # use istio default controller\n  servers:\n  - port:\n      number: 80\n      name: http\n      protocol: HTTP\n    hosts:\n    - \"*\"\n---\napiVersion: networking.istio.io/v1alpha3\nkind: VirtualService\nmetadata:\n  name: helloworld\nspec:\n  hosts:\n  - \"*\"\n  gateways:\n  - helloworld-gateway\n  http:\n  - match:\n    - uri:\n        prefix: /hello\n    route:\n    - destination:\n        host: hello.default.svc.cluster.local\n        port:\n          number: 8080\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`If you want a service within Istio, you will always need to define the `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`VirtualService`}</MDXTag>{`. We don't need the `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`VirtualService`}</MDXTag>{` for services that are accessed by the client.`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"73-advanced-istio-routing\"}}>{`7.3 Advanced Istio Routing`}</MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"img\" components={components} parentName=\"p\" props={{\"src\":\"https://res.cloudinary.com/gitgoodclub/image/upload/v1540109060/Screen_Shot_2018-10-21_at_7.04.07_pm.png\",\"alt\":\"Advanced Routing Setup\"}}></MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`Thanks to Istio, we can do advanced routing based around the above diagram thanks to the Deployments having different metadata:`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-yaml\"}}>{`apiVersion: networking.istio.io/v1alpha3\nkind: DestinationRule\nmetadata:\n  name: hello\nspec:\n  host: hello.default.svc.cluster.local\n  # ! Subsets is where the magic happens!\n  subsets:\n  - name: v1\n    labels:\n      version: v1\n  - name: v2\n    labels:\n      version: v2\n---\napiVersion: networking.istio.io/v1alpha3\nkind: VirtualService\nmetadata:\n  name: helloworld\nspec:\n  hosts:\n  - \"hello.example.com\"\n  gateways:\n  - helloworld-gateway\n  http:\n  - match:\n    - headers:\n        end-user:\n          exact: john\n    route:\n    - destination:\n        host: hello.default.svc.cluster.local\n        subset: v2 # ! match v2 only\n        port:\n          number: 8080\n  - route: # default route for hello.example.com\n    - destination:\n        host: ! hello.default.svc.cluster.local\n        subset: v1 # match v1 only\n        port:\n          number: 8080\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`Now, if we apply this virtual service to the service mesh, then based on whether we pass the \"end-user\" header or not, we will hit either v1 or v2!`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"74-canary-deployments\"}}>{`7.4 Canary deployments`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Canary deployments basically want routing mainly to the first version, but we also want some A/B testing to have version 2 having a 10% weight.`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-yaml\"}}>{`apiVersion: networking.istio.io/v1alpha3\nkind: DestinationRule\nmetadata:\n  name: hello\nspec:\n  host: hello.default.svc.cluster.local\n  subsets:\n  - name: v1\n    labels:\n      version: v1\n  - name: v2\n    labels:\n      version: v2\n---\napiVersion: networking.istio.io/v1alpha3\nkind: VirtualService\nmetadata:\n  name: helloworld\nspec:\n  hosts:\n  - \"hello.example.com\"\n  gateways:\n  - helloworld-gateway\n  http:\n  - route:\n    - destination:\n        host: hello.default.svc.cluster.local\n        subset: v1\n        port:\n          number: 8080\n      weight: 90\n    - destination:\n        host: hello.default.svc.cluster.local\n        subset: v2\n        port:\n          number: 8080\n      weight: 10\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"75-running-retries\"}}>{`7.5 Running retries`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`If one of the pods stop working, we can retry to another pod without the client seeing any of the issues. The example app has one of three pods running with a 5s latency but a 2s timeout to demonstrate this. It looks like the following:`}</MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"img\" components={components} parentName=\"p\" props={{\"src\":\"https://res.cloudinary.com/gitgoodclub/image/upload/v1540110459/Screen_Shot_2018-10-21_at_7.26.50_pm.png\",\"alt\":\"Retry diagram\"}}></MDXTag></MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"76-mutual-tls\"}}>{`7.6 Mutual TLS`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`The goals of Istio security are:`}</MDXTag>\n<MDXTag name=\"ul\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"strong\" components={components} parentName=\"li\">{`Security by default:`}</MDXTag>{` no changes needed for application code and infrastructure.`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"strong\" components={components} parentName=\"li\">{`Defense in depth:`}</MDXTag>{` integrate with existing security systems to provide multiple layers of defense.`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"strong\" components={components} parentName=\"li\">{`Zero-trust network:`}</MDXTag>{` build security solutions on untrusted networks.`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Two types of auth:`}</MDXTag>\n<MDXTag name=\"ol\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ol\">{`Transport authentication (service to service authentication) using Mutual TLS.`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ol\">{`Origin authentication (end-user authentication). Verifying the end user using JWTs.`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Mutual TLS can be turned on `}<MDXTag name=\"strong\" components={components} parentName=\"p\">{`without having to change the code of applications`}</MDXTag>{` (because of the sidecar deployment).`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`It provides each service with a `}<MDXTag name=\"strong\" components={components} parentName=\"p\">{`strong identity`}</MDXTag>{`.`}</MDXTag>\n<MDXTag name=\"ul\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Attacks like impersonation be rerouting DNS records will fail, because a fake application can't prove its identity using the certificate mechanism.`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"strong\" components={components} parentName=\"li\">{`Secures (encrypts)`}</MDXTag>{` service-to-service and end-user-to-service communication.`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Provides key and certificate management to `}<MDXTag name=\"strong\" components={components} parentName=\"li\">{`manage generation, distribution and rotation`}</MDXTag>{`.`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"img\" components={components} parentName=\"p\" props={{\"src\":\"https://res.cloudinary.com/gitgoodclub/image/upload/v1540153502/Screen_Shot_2018-10-22_at_7.24.10_am.png\",\"alt\":\"TLS Example App\"}}></MDXTag></MDXTag>\n<MDXTag name=\"ul\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Legacy applications with not have a sidecar. `}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`One service will go LTR, and the other RTL.`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-yaml\"}}>{`apiVersion: v1\nkind: Namespace\nmetadata:\n  name: ns1\n---\napiVersion: v1\nkind: Namespace\nmetadata:\n  name: ns2\n---\napiVersion: extensions/v1beta1\nkind: Deployment\nmetadata:\n  name: hello-tls\n  namespace: ns1\nspec:\n  replicas: 1\n  template:\n    metadata:\n      labels:\n        app: hello\n        version: v1-tls\n    spec:\n      containers:\n      - name: hello\n        image: wardviaene/http-echo\n        env:\n        - name: TEXT\n          value: hello\n        - name: NEXT\n          value: \"world.ns2:8080\"\n        ports:\n        - name: http\n          containerPort: 8080\n---\napiVersion: extensions/v1beta1\nkind: Deployment\nmetadata:\n  name: world-tls\n  namespace: ns2\nspec:\n  replicas: 1\n  template:\n    metadata:\n      labels:\n        app: world\n        version: v1-tls\n    spec:\n      containers:\n      - name: hello\n        image: wardviaene/http-echo\n        env:\n        - name: TEXT\n          value: world\n        - name: NEXT\n          value: \"end.legacy:8080\"\n        ports:\n        - name: http\n          containerPort: 8080\n---\napiVersion: extensions/v1beta1\nkind: Deployment\nmetadata:\n  name: world-reverse-tls\n  namespace: ns2\nspec:\n  replicas: 1\n  template:\n    metadata:\n      labels:\n        app: world-reverse\n        version: v1-tls\n    spec:\n      containers:\n      - name: hello\n        image: wardviaene/http-echo\n        env:\n        - name: TEXT\n          value: world\n        - name: NEXT\n          value: \"end-reverse.ns1:8080\"\n        ports:\n        - name: http\n          containerPort: 8080\n---\napiVersion: extensions/v1beta1\nkind: Deployment\nmetadata:\n  name: end-reverse-tls\n  namespace: ns1\nspec:\n  replicas: 1\n  template:\n    metadata:\n      labels:\n        app: end-reverse\n        version: v1-tls\n    spec:\n      containers:\n      - name: hello\n        image: wardviaene/http-echo\n        env:\n        - name: TEXT\n          value: \"!!!\"\n        ports:\n        - name: http\n          containerPort: 8080\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: hello\n  namespace: ns1\n  labels:\n    app: hello\nspec:\n  selector:\n    app: hello\n  ports:\n  - name: http\n    port: 8080\n    targetPort: 8080\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: world\n  namespace: ns2\n  labels:\n    app: world\nspec:\n  selector:\n    app: world\n  ports:\n  - name: http\n    port: 8080\n    targetPort: 8080\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: world-reverse\n  namespace: ns2\n  labels:\n    app: world-reverse\nspec:\n  selector:\n    app: world-reverse\n  ports:\n  - name: http\n    port: 8080\n    targetPort: 8080\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: end-reverse\n  namespace: ns1\n  labels:\n    app: end-reverse\nspec:\n  selector:\n    app: end-reverse\n  ports:\n  - name: http\n    port: 8080\n    targetPort: 8080\n---\napiVersion: networking.istio.io/v1alpha3\nkind: Gateway\nmetadata:\n  name: helloworld-gateway\nspec:\n  selector:\n    istio: ingressgateway # use istio default controller\n  servers:\n  - port:\n      number: 80\n      name: http\n      protocol: HTTP\n    hosts:\n    - \"*\"\n---\napiVersion: networking.istio.io/v1alpha3\nkind: DestinationRule\nmetadata:\n  name: hello\nspec:\n  host: hello.ns1.svc.cluster.local\n  # uncomment to enable mutual TLS\n  #trafficPolicy:\n  #  tls:\n  #    mode: ISTIO_MUTUAL\n  subsets:\n  - name: v1-tls\n    labels:\n      version: v1-tls\n---\napiVersion: networking.istio.io/v1alpha3\nkind: DestinationRule\nmetadata:\n  name: hello-reverse\nspec:\n  host: hello-reverse.legacy.svc.cluster.local\n  # uncomment to enable mutual TLS\n  #trafficPolicy:\n  #  tls:\n  #    mode: ISTIO_MUTUAL\n  subsets:\n  - name: v1-tls\n    labels:\n      version: v1-tls\n---\napiVersion: networking.istio.io/v1alpha3\nkind: VirtualService\nmetadata:\n  name: helloworld-tls\nspec:\n  hosts:\n  - \"hello-tls.example.com\"\n  gateways:\n  - helloworld-gateway\n  http:\n  - route:\n    - destination:\n        host: hello.ns1.svc.cluster.local\n        subset: v1-tls # match v3 only\n        port:\n          number: 8080\n---\napiVersion: networking.istio.io/v1alpha3\nkind: VirtualService\nmetadata:\n  name: helloworld-tls-reverse\nspec:\n  hosts:\n  - \"hello-tls-reverse.example.com\"\n  gateways:\n  - helloworld-gateway\n  http:\n  - route:\n    - destination:\n        host: hello-reverse.legacy.svc.cluster.local\n        subset: v1-tls\n        port:\n          number: 8080\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`As for the missing legacy services, they can be found in the `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`helloworld-legacy`}</MDXTag>{` file:`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-yaml\"}}>{`apiVersion: v1\nkind: Namespace\nmetadata:\n  name: legacy\n---\napiVersion: extensions/v1beta1\nkind: Deployment\nmetadata:\n  name: end-tls\n  namespace: legacy\nspec:\n  replicas: 1\n  template:\n    metadata:\n      labels:\n        app: end\n        version: v1-tls\n    spec:\n      containers:\n      - name: hello\n        image: wardviaene/http-echo\n        env:\n        - name: TEXT\n          value: \"!!!\"\n        ports:\n        - name: http\n          containerPort: 8080\n---\napiVersion: extensions/v1beta1\nkind: Deployment\nmetadata:\n  name: hello-reverse-tls\n  namespace: legacy\nspec:\n  replicas: 1\n  template:\n    metadata:\n      labels:\n        app: hello-reverse\n        version: v1-tls\n    spec:\n      containers:\n      - name: hello\n        image: wardviaene/http-echo\n        env:\n        - name: TEXT\n          value: hello\n        - name: NEXT\n          value: \"world-reverse.ns2:8080\"\n        ports:\n        - name: http\n          containerPort: 8080\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: end\n  namespace: legacy\n  labels:\n    app: end\nspec:\n  selector:\n    app: end\n  ports:\n  - name: http\n    port: 8080\n    targetPort: 8080\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: hello-reverse\n  namespace: legacy\n  labels:\n    app: hello-reverse\nspec:\n  selector:\n    app: hello-reverse\n  ports:\n  - name: http\n    port: 8080\n    targetPort: 8080\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`Both these files can applied by running the following:`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-bash\"}}>{`\\$ kubectl apply -f <(istioctl kube-inject -f helloworld-tls.yaml)\n\\$ kubectl apply -f helloworld-legacy.yaml\n\\$ kubetl get svc -o wide -n istio-system # get services from istio-system services\n# After getting the load balancer, you can then curl the ELB passing the Host header\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`Now we need to `}<MDXTag name=\"strong\" components={components} parentName=\"p\">{`enable TLS authetication.`}</MDXTag></MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-yaml\"}}>{`# helloworld-rbac-enable.yaml\napiVersion: authentication.istio.io/v1alpha1\nkind: \"MeshPolicy\"\nmetadata:\n  name: \"default\"\nspec:\n  peers:\n  - mtls: {}\n---\n# ensures mtls is push to side cars\napiVersion: networking.istio.io/v1alpha3\nkind: DestinationRule\nmetadata:\n  name: \"enable-mtls\"\n  namespace: \"default\" # even though we specify a namespace, this rule applies to all namespaces\nspec:\n  host: \"*.local\"\n  trafficPolicy:\n    tls:\n      mode: ISTIO_MUTUAL\n---\napiVersion: networking.istio.io/v1alpha3\nkind: DestinationRule\nmetadata:\n name: \"api-server\"\nspec:\n host: \"kubernetes.default.svc.cluster.local\"\n trafficPolicy:\n   tls:\n     mode: DISABLE\n---\napiVersion: networking.istio.io/v1alpha3\nkind: DestinationRule\nmetadata:\n  name: \"legacy\"\nspec:\n  host: \"end.legacy.svc.cluster.local\"\n  trafficPolicy:\n    tls:\n      mode: DISABLE\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`Apply this file to enable mutual TLS that works one way but not the other (as like in the diagram). However, in the above yaml files we did now enable the traffic policy, so you need to update that and apply the updated files for all of this to work.`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"77-rbac-with-istio-and-mtls\"}}>{`7.7 RBAC with Istio and MTLS`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Now that we have MTLS, we have strong identites.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Based on those identities, we can start doing `}<MDXTag name=\"strong\" components={components} parentName=\"p\">{`Role Based Access Control (RBAC)`}</MDXTag>{`.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`RBAC allows us to limit access `}<MDXTag name=\"strong\" components={components} parentName=\"p\">{`between our services`}</MDXTag>{` and from `}<MDXTag name=\"strong\" components={components} parentName=\"p\">{`end-user to services`}</MDXTag>{`.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Istio is able to verify the identity of a service by `}<MDXTag name=\"strong\" components={components} parentName=\"p\">{`checking the identity of the x.509 certificate (which comes with enabled mutual TLS)`}</MDXTag>{`. Example: with RBAC, service A might be able to be contacted by B, but not by C.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Istio is using SPIFFE standard (another CNFC project).`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`RBAC in istio:`}</MDXTag>\n<MDXTag name=\"ul\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Can provide `}<MDXTag name=\"strong\" components={components} parentName=\"li\">{`service-to-service`}</MDXTag>{` and `}<MDXTag name=\"strong\" components={components} parentName=\"li\">{`end-user-to-service`}</MDXTag>{` auth.`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Supports `}<MDXTag name=\"strong\" components={components} parentName=\"li\">{`conditions`}</MDXTag>{` and `}<MDXTag name=\"strong\" components={components} parentName=\"li\">{`role-binding`}</MDXTag>{`.`}<MDXTag name=\"ul\" components={components} parentName=\"li\">\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`You can bind to `}<MDXTag name=\"strong\" components={components} parentName=\"li\">{`ServiceAccounts`}</MDXTag>{` (which can be linked to pods).`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`End-user-to-service can for example let you create `}<MDXTag name=\"strong\" components={components} parentName=\"li\">{`condition on being authenticated using JWT`}</MDXTag>{`.`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`It has high performance.`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Not enabled by default.`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`We can enable it globally or on a namespace.`}</MDXTag>\n</MDXTag></MDXTag>\n</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Example for including it on the \"default\" namespace:`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-yaml\"}}>{`apiVersion: \"rbac.istio.io/v1alpha1\"\nkind: RbacConfig\nmetadata:\n  name: default\nspec:\n  mode: 'ON_WITH_INCLUSION'\n  inclusion:\n    namespaces: [\"default\"]\n---\napiVersion: authentication.istio.io/v1alpha1\nkind: \"MeshPolicy\"\nmetadata:\n  name: \"default\"\nspec:\n  peers:\n  - mtls: {}\n---\napiVersion: networking.istio.io/v1alpha3\nkind: DestinationRule\nmetadata:\n  name: \"enable-mtls\"\n  namespace: \"default\" # even though we specify a namespace, this rule applies to all namespaces\nspec:\n  host: \"*.local\"\n  trafficPolicy:\n    tls:\n      mode: ISTIO_MUTUAL\n---\napiVersion: networking.istio.io/v1alpha3\nkind: DestinationRule\nmetadata:\n name: \"api-server\"\nspec:\n host: \"kubernetes.default.svc.cluster.local\"\n trafficPolicy:\n   tls:\n     mode: DISABLE\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`We can then create a `}<MDXTag name=\"strong\" components={components} parentName=\"p\">{`ServiceRole`}</MDXTag>{` specifying the rules and a `}<MDXTag name=\"strong\" components={components} parentName=\"p\">{`ServiceRoleBinding`}</MDXTag>{` to link a `}<MDXTag name=\"strong\" components={components} parentName=\"p\">{`ServiceRole`}</MDXTag>{` to a subject (example Kubernetes `}<MDXTag name=\"strong\" components={components} parentName=\"p\">{`ServiceAccount`}</MDXTag>{`).`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Example of how we want the demo to look when it comes to what it can contact:`}</MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"img\" components={components} parentName=\"p\" props={{\"src\":\"https://res.cloudinary.com/gitgoodclub/image/upload/v1540155683/Screen_Shot_2018-10-22_at_8.00.47_am.png\",\"alt\":\"Contact rules\"}}></MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`The order for the following is:`}</MDXTag>\n<MDXTag name=\"ol\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ol\">{`Create `}<MDXTag name=\"strong\" components={components} parentName=\"li\">{`ServiceRoles`}</MDXTag>{` that only enable certain methods and services with specific access.`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ol\">{`Enable `}<MDXTag name=\"strong\" components={components} parentName=\"li\">{`ServiceRoleBindings`}</MDXTag>{` to bind that the `}<MDXTag name=\"strong\" components={components} parentName=\"li\">{`ServiceRoles`}</MDXTag>{` to a `}<MDXTag name=\"strong\" components={components} parentName=\"li\">{`subject`}</MDXTag>{` (or `}<MDXTag name=\"strong\" components={components} parentName=\"li\">{`ingress controller name`}</MDXTag>{` in the first case).`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ol\">{`Create the `}<MDXTag name=\"strong\" components={components} parentName=\"li\">{`ServiceAccounts`}</MDXTag>{` that have the correct metadata required for the `}<MDXTag name=\"strong\" components={components} parentName=\"li\">{`ServiceRoleBindings`}</MDXTag>{`.`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ol\">{`Create the `}<MDXTag name=\"strong\" components={components} parentName=\"li\">{`Deployments`}</MDXTag>{` that have the affiliated `}<MDXTag name=\"strong\" components={components} parentName=\"li\">{`ServiceAccount`}</MDXTag>{` required.`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ol\">{`Create a `}<MDXTag name=\"strong\" components={components} parentName=\"li\">{`Service`}</MDXTag>{` for that `}<MDXTag name=\"strong\" components={components} parentName=\"li\">{`Deployment`}</MDXTag>{`.`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ol\">{`Create the `}<MDXTag name=\"strong\" components={components} parentName=\"li\">{`Gateway`}</MDXTag>{` that uses the default `}<MDXTag name=\"strong\" components={components} parentName=\"li\">{`Istio Gateway`}</MDXTag>{` to access the `}<MDXTag name=\"strong\" components={components} parentName=\"li\">{`Services`}</MDXTag>{`.`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ol\">{`Create the `}<MDXTag name=\"strong\" components={components} parentName=\"li\">{`VirtualService`}</MDXTag>{` that gives us access to the hello world app through the `}<MDXTag name=\"strong\" components={components} parentName=\"li\">{`Gateway`}</MDXTag>{` connected to the `}<MDXTag name=\"strong\" components={components} parentName=\"li\">{`Service`}</MDXTag>{` which sits within the `}<MDXTag name=\"strong\" components={components} parentName=\"li\">{`ServiceMesh`}</MDXTag>{` from the `}<MDXTag name=\"strong\" components={components} parentName=\"li\">{`IngressController`}</MDXTag>{`.`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ol\">{`Create the `}<MDXTag name=\"strong\" components={components} parentName=\"li\">{`DestinationRule`}</MDXTag>{` that allows allows access to the `}<MDXTag name=\"strong\" components={components} parentName=\"li\">{`VirtualService`}</MDXTag>{` using `}<MDXTag name=\"strong\" components={components} parentName=\"li\">{`MTLS`}</MDXTag>{` from the `}<MDXTag name=\"strong\" components={components} parentName=\"li\">{`IngressController`}</MDXTag>{` which is a `}<MDXTag name=\"strong\" components={components} parentName=\"li\">{`Reverse Proxy internal load balancer`}</MDXTag>{` accessed from the external `}<MDXTag name=\"strong\" components={components} parentName=\"li\">{`AWS LoadBalancer`}</MDXTag>{` tied to the accessible `}<MDXTag name=\"strong\" components={components} parentName=\"li\">{`DNS Records`}</MDXTag>{`.`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ol\">{`You can now access the microservice from the `}<MDXTag name=\"strong\" components={components} parentName=\"li\">{`AWS LoadBalancer Route53 alias`}</MDXTag>{` passing the `}<MDXTag name=\"strong\" components={components} parentName=\"li\">{`internal namespace domain`}</MDXTag>{` as the `}<MDXTag name=\"strong\" components={components} parentName=\"li\">{`host header`}</MDXTag>{`.`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-yaml\"}}>{`# ! helloworld-rbac.yaml file\napiVersion: \"rbac.istio.io/v1alpha1\"\nkind: ServiceRole\nmetadata:\n  name: hello-viewer\n  namespace: default\nspec:\n  rules:\n  - services: [\"hello.default.svc.cluster.local\"]\n    methods: [\"GET\", \"HEAD\"]\n---\napiVersion: \"rbac.istio.io/v1alpha1\"\nkind: ServiceRole\nmetadata:\n  name: world-viewer\n  namespace: default\nspec:\n  rules:\n  - services: [\"world.default.svc.cluster.local\"]\n    methods: [\"GET\", \"HEAD\"]\n---\napiVersion: \"rbac.istio.io/v1alpha1\"\nkind: ServiceRole\nmetadata:\n  name: world-2-viewer\n  namespace: default\nspec:\n  rules:\n  - services: [\"world-2.default.svc.cluster.local\"]\n    methods: [\"GET\", \"HEAD\"]\n---\napiVersion: \"rbac.istio.io/v1alpha1\"\nkind: ServiceRoleBinding\nmetadata:\n  name: istio-ingress-binding\n  namespace: default\nspec:\n  subjects:\n  - properties:\n      source.namespace: \"istio-system\"\n  roleRef:\n    kind: ServiceRole\n    name: \"hello-viewer\"\n---\napiVersion: \"rbac.istio.io/v1alpha1\"\nkind: ServiceRoleBinding\nmetadata:\n  name: hello-user-binding\n  namespace: default\nspec:\n  subjects:\n  - user: \"cluster.local/ns/default/sa/hello\"\n  roleRef:\n    kind: ServiceRole\n    name: \"world-viewer\"\n---\napiVersion: \"rbac.istio.io/v1alpha1\"\nkind: ServiceRoleBinding\nmetadata:\n  name: world-user-binding\n  namespace: default\nspec:\n  subjects:\n  - user: \"cluster.local/ns/default/sa/world\"\n  roleRef:\n    kind: ServiceRole\n    name: \"world-2-viewer\"\n---\n###\n### Kubernetes Service accounts\n###\napiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: hello\n---\napiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: world\n---\n###\n### helloworld.yaml deployments, including a serviceaccount\n### for the hello deployment and the world deployment\n###\napiVersion: extensions/v1beta1\nkind: Deployment\nmetadata:\n  name: hello\nspec:\n  replicas: 1\n  template:\n    metadata:\n      labels:\n        app: hello\n        version: v1\n    spec:\n      serviceAccountName: hello  # service account\n      containers:\n      - name: hello\n        image: wardviaene/http-echo\n        env:\n        - name: TEXT\n          value: hello\n        - name: NEXT\n          value: \"world:8080\"\n        ports:\n        - name: http\n          containerPort: 8080\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: hello\n  labels:\n    app: hello\nspec:\n  selector:\n    app: hello\n  ports:\n  - name: http\n    port: 8080\n    targetPort: 8080\n---\napiVersion: extensions/v1beta1\nkind: Deployment\nmetadata:\n  name: world\nspec:\n  replicas: 1\n  template:\n    metadata:\n      labels:\n        app: world\n        version: v1\n    spec:\n      serviceAccountName: world  # service account\n      containers:\n      - name: world\n        image: wardviaene/http-echo\n        env:\n        - name: TEXT\n          value: world\n        - name: NEXT\n          value: \"world-2:8080\"\n        ports:\n        - name: http\n          containerPort: 8080\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: world\n  labels:\n    app: world\nspec:\n  selector:\n    app: world\n  ports:\n  - name: http\n    port: 8080\n    targetPort: 8080\n---\napiVersion: extensions/v1beta1\nkind: Deployment\nmetadata:\n  name: world-2\nspec:\n  replicas: 1\n  template:\n    metadata:\n      labels:\n        app: world-2\n        version: v1\n    spec:\n      containers:\n      - name: world-2\n        image: wardviaene/http-echo\n        env:\n        - name: TEXT\n          value: \"!!!\"\n        ports:\n        - name: http\n          containerPort: 8080\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: world-2\n  labels:\n    app: world-2\nspec:\n  selector:\n    app: world-2\n  ports:\n  - name: http\n    port: 8080\n    targetPort: 8080\n---\napiVersion: networking.istio.io/v1alpha3\nkind: Gateway\nmetadata:\n  name: helloworld-gateway\nspec:\n  selector:\n    istio: ingressgateway # use istio default controller\n  servers:\n  - port:\n      number: 80\n      name: http\n      protocol: HTTP\n    hosts:\n    - \"*\"\n---\napiVersion: networking.istio.io/v1alpha3\nkind: VirtualService\nmetadata:\n  name: helloworld\nspec:\n  hosts:\n  - \"hello-rbac.example.com\"\n  gateways:\n  - helloworld-gateway\n  http:\n  - route:\n    - destination:\n        host: hello.default.svc.cluster.local\n        subset: v1\n        port:\n          number: 8080\n---\napiVersion: networking.istio.io/v1alpha3\nkind: DestinationRule\nmetadata:\n  name: hello\nspec:\n  host: hello.default.svc.cluster.local\n  # uncomment to enable mutual TLS\n  trafficPolicy:\n    tls:\n      mode: ISTIO_MUTUAL\n  subsets:\n  - name: v1\n    labels:\n      version: v1\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`This again requires the rbac prequisite:`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-yaml\"}}>{`# helloworld-rbac-enable.yaml\napiVersion: authentication.istio.io/v1alpha1\nkind: \"MeshPolicy\"\nmetadata:\n  name: \"default\"\nspec:\n  peers:\n  - mtls: {}\n---\n# ensures mtls is push to side cars\napiVersion: networking.istio.io/v1alpha3\nkind: DestinationRule\nmetadata:\n  name: \"enable-mtls\"\n  namespace: \"default\" # even though we specify a namespace, this rule applies to all namespaces\nspec:\n  host: \"*.local\"\n  trafficPolicy:\n    tls:\n      mode: ISTIO_MUTUAL\n---\napiVersion: networking.istio.io/v1alpha3\nkind: DestinationRule\nmetadata:\n name: \"api-server\"\nspec:\n host: \"kubernetes.default.svc.cluster.local\"\n trafficPolicy:\n   tls:\n     mode: DISABLE\n---\napiVersion: networking.istio.io/v1alpha3\nkind: DestinationRule\nmetadata:\n  name: \"legacy\"\nspec:\n  host: \"end.legacy.svc.cluster.local\"\n  trafficPolicy:\n    tls:\n      mode: DISABLE\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"img\" components={components} parentName=\"p\" props={{\"src\":\"https://res.cloudinary.com/gitgoodclub/image/upload/v1540159695/Screen_Shot_2018-10-22_at_9.07.45_am.png\",\"alt\":\"After applying the files to Istio\"}}></MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`Evidently enough, it is incredibly important to ensure the routing is set up correctly so there is no large scale failure.`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"78-end-user-authentication\"}}>{`7.8 End-user Authentication`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Istio currently supports JWT tokens to authenticate users.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`In the implementation, the user will receive a JWT token from an authenticated server after logging in.`}</MDXTag>\n<MDXTag name=\"ul\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`This app will provide us with a token that is `}<MDXTag name=\"strong\" components={components} parentName=\"li\">{`signed with a key`}</MDXTag>{`.`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`The data is not encrypted, but the `}<MDXTag name=\"strong\" components={components} parentName=\"li\">{`token contains a signature`}</MDXTag>{`, which can be `}<MDXTag name=\"strong\" components={components} parentName=\"li\">{`verified`}</MDXTag>{` to see `}<MDXTag name=\"strong\" components={components} parentName=\"li\">{`whether it was really created by the server`}</MDXTag>{`.`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Only the server has the `}<MDXTag name=\"strong\" components={components} parentName=\"li\">{`private key`}</MDXTag>{`, so we can't recreate or tamper with the token.`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Using microservices, every app would need to be `}<MDXTag name=\"strong\" components={components} parentName=\"li\">{`seperately configured`}</MDXTag>{`.`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Every service would need to `}<MDXTag name=\"strong\" components={components} parentName=\"li\">{`validate the token`}</MDXTag>{`.`}<MDXTag name=\"ul\" components={components} parentName=\"li\">\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Once validated the service would need to check whether the user has access to this service.`}</MDXTag>\n</MDXTag></MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`With Istio, `}<MDXTag name=\"strong\" components={components} parentName=\"li\">{`this can be taken away from the app code and managed centrally.`}</MDXTag></MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`You can configure the `}<MDXTag name=\"strong\" components={components} parentName=\"li\">{`jwt token signature/properties`}</MDXTag>{` you expect in into and have `}<MDXTag name=\"strong\" components={components} parentName=\"li\">{`policies to allow/disallow access to a service.`}</MDXTag><MDXTag name=\"ul\" components={components} parentName=\"li\">\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Example \"hello\" app might only be accessible if user is authenticated.`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`The `}<MDXTag name=\"strong\" components={components} parentName=\"li\">{`sidecar`}</MDXTag>{` will verify the `}<MDXTag name=\"strong\" components={components} parentName=\"li\">{`validity`}</MDXTag>{` of the signature, to make sure the token is valid.`}</MDXTag>\n</MDXTag></MDXTag>\n</MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"img\" components={components} parentName=\"p\" props={{\"src\":\"https://res.cloudinary.com/gitgoodclub/image/upload/v1540160832/Screen_Shot_2018-10-22_at_9.26.42_am.png\",\"alt\":\"JWT Token setup\"}}></MDXTag></MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-yaml\"}}>{`# Istio with JWT Auth\n# helloworld-jwt.yaml\napiVersion: networking.istio.io/v1alpha3\nkind: Gateway\nmetadata:\n  name: helloworld-gateway\nspec:\n  selector:\n    istio: ingressgateway # use istio default controller\n  servers:\n  - port:\n      number: 80\n      name: http\n      protocol: HTTP\n    hosts:\n    - \"*\"\n---\napiVersion: networking.istio.io/v1alpha3\nkind: VirtualService\nmetadata:\n  name: helloworld-auth\nspec:\n  # this is a change to previous\n  hosts:\n  - \"auth.kubernetes.newtech.academy\"\n  gateways:\n  - helloworld-gateway\n  http:\n  - route:\n    - destination:\n        host: auth.default.svc.cluster.local\n        port:\n          number: 8080\n---\napiVersion: networking.istio.io/v1alpha3\nkind: VirtualService\nmetadata:\n  name: helloworld-hello\nspec:\n  hosts:\n  - \"hello.kubernetes.newtech.academy\"\n  gateways:\n  - helloworld-gateway\n  http:\n  - route:\n    - destination:\n        host: hello.default.svc.cluster.local\n        port:\n          number: 8080\n---\napiVersion: extensions/v1beta1\nkind: Deployment\nmetadata:\n  name: auth\nspec:\n  replicas: 1\n  template:\n    metadata:\n      labels:\n        app: auth\n        version: v1\n    spec:\n      containers:\n      - name: auth\n        image: wardviaene/http-echo\n        env:\n        - name: TEXT\n          value: this is the authentication service\n        ports:\n        - name: http\n          containerPort: 8080\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: auth\n  labels:\n    app: auth\nspec:\n  selector:\n    app: auth\n  ports:\n  - name: http\n    port: 8080\n    targetPort: 8080\n---\napiVersion: extensions/v1beta1\nkind: Deployment\nmetadata:\n  name: hello\nspec:\n  replicas: 1\n  template:\n    metadata:\n      labels:\n        app: hello\n        version: v1\n    spec:\n      containers:\n      - name: hello\n        image: wardviaene/http-echo\n        env:\n        - name: TEXT\n          value: Hello, you can only reach this service when authenticated\n        ports:\n        - name: http\n          containerPort: 8080\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: hello\n  labels:\n    app: hello\nspec:\n  selector:\n    app: hello\n  ports:\n  - name: http\n    port: 8080\n    targetPort: 8080\n###\n### Enable TLS\n###\n---\napiVersion: authentication.istio.io/v1alpha1\nkind: \"MeshPolicy\"\nmetadata:\n  name: \"default\"\nspec:\n  peers:\n  - mtls: {}\n---\napiVersion: networking.istio.io/v1alpha3\nkind: DestinationRule\nmetadata:\n  name: \"enable-mtls\"\n  namespace: \"default\" # even though we specify a namespace, this rule applies to all namespaces\nspec:\n  host: \"*.local\"\n  trafficPolicy:\n    tls:\n      mode: ISTIO_MUTUAL\n---\napiVersion: networking.istio.io/v1alpha3\nkind: DestinationRule\nmetadata:\n name: \"api-server\"\nspec:\n host: \"kubernetes.default.svc.cluster.local\"\n trafficPolicy:\n   tls:\n     mode: DISABLE\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`To get to auth, we need to create an alias for `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`auth.domain.name`}</MDXTag>{` in Route 53 to expose the load balancer.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`To enable the policy for the JWT token auth to take effect, we need to apply the following to the cluster:`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-yaml\"}}>{`# helloworld-jwt-enable.yaml\napiVersion: \"authentication.istio.io/v1alpha1\"\nkind: \"Policy\"\nmetadata:\n  name: \"jwt-example\"\nspec:\n  targets:\n  - name: hello\n  peers:\n  - mtls: {}\n  origins:\n  - jwt:\n      # jwksUri is from auth uri we setup in Route53\n      issuer: \"http-echo@http-echo.kubernetes.newtech.academy\"\n      jwksUri: \"http://auth.kubernetes.newtech.academy/.well-known/jwks.json\"\n  principalBinding: USE_ORIGIN\n---\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`After fetching the token, we can now access authenticated routes by passing the header `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`\"Authorization\": \"Bearer \\$TOKEN\"`}</MDXTag>{`.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`The example uses `}<MDXTag name=\"a\" components={components} parentName=\"p\" props={{\"href\":\"https://github.com/wardviaene/http-echo/blob/master/main.go\"}}>{`this Github repo`}</MDXTag>{` with the /login route to do auth and another route to check the auth from other services.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Something useful is that you can also check the logs of the Istio proxy. This can be done with `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`kubectl logs <% pod_name %> -c istio-proxy`}</MDXTag>{`.`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"79-istio-ingress-traffic\"}}>{`7.9 Istio Ingress Traffic`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`To enable ingress traffic to allow to access outside services, we can apply an external service file. The following example will allow the `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`ifconfig.co`}</MDXTag>{` hostname to be accessible from the pods.`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-yaml\"}}>{`# external-service.yaml\n#\n# http\n#\napiVersion: networking.istio.io/v1alpha3\nkind: ServiceEntry\nmetadata:\n  name: ifconfig-co-http\nspec:\n  hosts:\n  - ifconfig.co\n  ports:\n  - number: 80\n    name: http\n    protocol: HTTP\n  resolution: DNS\n  location: MESH_EXTERNAL\n---\n#\n# https\n#\napiVersion: networking.istio.io/v1alpha3\nkind: ServiceEntry\nmetadata:\n  name: ifconfig-co-https\nspec:\n  hosts:\n  - ifconfig.co\n  ports:\n  - number: 443\n    name: https\n    protocol: HTTPS\n  resolution: DNS\n  location: MESH_EXTERNAL\n---\napiVersion: networking.istio.io/v1alpha3\nkind: VirtualService\nmetadata:\n  name: ifconfig-co\nspec:\n  hosts:\n  - ifconfig.co\n  tls:\n  - match:\n    - port: 443\n      sni_hosts:\n      - ifconfig.co\n    route:\n    - destination:\n        host: ifconfig.co\n        port:\n          number: 443\n      weight: 100\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`You should now be able to log into the pod to try out contacting other services.`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"710-distributed-tracing-with-jaegar\"}}>{`7.10 Distributed Tracing with Jaegar`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Jaegar is automatically store in the `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`isto-system`}</MDXTag>{`. You can confirm this with the following:`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-bash\"}}>{`\\$ kubectl get pod -n istio-system # istio-tracing pod\n\\$ kubectl get svc -n istio-system # jaegar-[agent/collector/query]\n# You could export the port for jaegar-query by updating the service\n\\$ kubectl edit svc jaegar-query -n istio-system # changing ClusterIP to LoadBalancer\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`To find the traces, you need to find the svc `}<MDXTag name=\"strong\" components={components} parentName=\"p\">{`LoadBalancer`}</MDXTag>{` port for Jaegar Query and then you can access the web url using the port.`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"711-istio-metrics-with-grafana\"}}>{`7.11 Istio Metrics with Grafana`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Similar to Jaegar, you can find the Grafana service by getting the services for the Istio System.`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-bash\"}}>{`\\$ kubectl get svc -n istio-system # grafana\n# You could export the port for grafana by updating the service\n\\$ kubectl edit svc grafana -n istio-system # changing ClusterIP to LoadBalancer\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"8-intro-to-kubeadm\"}}>{`8. Intro to kubeadm`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`This is an alternative to running Kubernetes that is not using `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`kops`}</MDXTag></MDXTag>\n           </MDXTag>\n  }\n}\n  "]}]}