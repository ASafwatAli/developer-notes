{"remainingRequest":"/Users/okeeffe_d/Business/Documentation/node_modules/babel-loader/lib/index.js?{\"presets\":[[\"/Users/okeeffe_d/Business/Documentation/node_modules/babel-preset-docz/dist/index.js\",{\"flow\":true,\"typescript\":false,\"parseProps\":true}]],\"plugins\":[[\"/Users/okeeffe_d/Business/Documentation/node_modules/docz-utils/lib/named-asset-import.js\",{\"loaderMap\":{\"svg\":{\"ReactComponent\":\"@svgr/webpack?-prettier,-svgo![path]\"}}}]],\"babelrc\":false,\"cacheCompression\":true,\"compact\":true}!/Users/okeeffe_d/Business/Documentation/manual/Testing/UI-Testing-Web.md","dependencies":[{"path":"/Users/okeeffe_d/Business/Documentation/manual/Testing/UI-Testing-Web.md","mtime":1548209344477},{"path":"/Users/okeeffe_d/Business/Documentation/node_modules/cache-loader/dist/cjs.js","mtime":1548134640245},{"path":"/Users/okeeffe_d/Business/Documentation/node_modules/babel-loader/lib/index.js","mtime":1548134640227}],"contextDependencies":[],"result":["function _typeof(obj){if(typeof Symbol===\"function\"&&typeof Symbol.iterator===\"symbol\"){_typeof=function _typeof(obj){return typeof obj;};}else{_typeof=function _typeof(obj){return obj&&typeof Symbol===\"function\"&&obj.constructor===Symbol&&obj!==Symbol.prototype?\"symbol\":typeof obj;};}return _typeof(obj);}function _objectWithoutProperties(source,excluded){if(source==null)return{};var target=_objectWithoutPropertiesLoose(source,excluded);var key,i;if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++){key=sourceSymbolKeys[i];if(excluded.indexOf(key)>=0)continue;if(!Object.prototype.propertyIsEnumerable.call(source,key))continue;target[key]=source[key];}}return target;}function _objectWithoutPropertiesLoose(source,excluded){if(source==null)return{};var target={};var sourceKeys=Object.keys(source);var key,i;for(i=0;i<sourceKeys.length;i++){key=sourceKeys[i];if(excluded.indexOf(key)>=0)continue;target[key]=source[key];}return target;}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\");}}function _defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}function _createClass(Constructor,protoProps,staticProps){if(protoProps)_defineProperties(Constructor.prototype,protoProps);if(staticProps)_defineProperties(Constructor,staticProps);return Constructor;}function _possibleConstructorReturn(self,call){if(call&&(_typeof(call)===\"object\"||typeof call===\"function\")){return call;}return _assertThisInitialized(self);}function _assertThisInitialized(self){if(self===void 0){throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");}return self;}function _getPrototypeOf(o){_getPrototypeOf=Object.setPrototypeOf?Object.getPrototypeOf:function _getPrototypeOf(o){return o.__proto__||Object.getPrototypeOf(o);};return _getPrototypeOf(o);}function _inherits(subClass,superClass){if(typeof superClass!==\"function\"&&superClass!==null){throw new TypeError(\"Super expression must either be null or a function\");}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,writable:true,configurable:true}});if(superClass)_setPrototypeOf(subClass,superClass);}function _setPrototypeOf(o,p){_setPrototypeOf=Object.setPrototypeOf||function _setPrototypeOf(o,p){o.__proto__=p;return o;};return _setPrototypeOf(o,p);}import React from'react';import{MDXTag}from'@mdx-js/tag';var MDXContent=/*#__PURE__*/function(_React$Component){_inherits(MDXContent,_React$Component);function MDXContent(props){var _this;_classCallCheck(this,MDXContent);_this=_possibleConstructorReturn(this,_getPrototypeOf(MDXContent).call(this,props));_this.layout=null;return _this;}_createClass(MDXContent,[{key:\"render\",value:function render(){var _this$props=this.props,components=_this$props.components,props=_objectWithoutProperties(_this$props,[\"components\"]);return React.createElement(MDXTag,{name:\"wrapper\",components:components},React.createElement(MDXTag,{name:\"h1\",components:components,props:{\"id\":\"ui-testing-web\"}},\"UI Testing Web\"),React.createElement(MDXTag,{name:\"p\",components:components},\"For web, we can test UI elements by making the most of Puppeteer and both the Emitter and Recorder JS packages from Kratos and the \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"json-server\"),\" js-controller package from Kratos.\"),React.createElement(MDXTag,{name:\"h2\",components:components,props:{\"id\":\"getting-started\"}},\"Getting started\"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{\"className\":\"language-shell\"}},\"kratos install js-controllers json-server\\nkratos install js Emitter\\nkratos install js Recorder\\n# install puppeteer, mocha, json-server etc if required - should be bootstrappable\\n\")),React.createElement(MDXTag,{name:\"h2\",components:components,props:{\"id\":\"setting-up-for-the-tests\"}},\"Setting up for the tests\"),React.createElement(MDXTag,{name:\"p\",components:components},\"Within the component module you want to target, create a \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\".puppeteer.js\"),\" file and a \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"db.json\"),\" file.\"),React.createElement(MDXTag,{name:\"h2\",components:components,props:{\"id\":\"the-component-file\"}},\"The component file\"),React.createElement(MDXTag,{name:\"p\",components:components},\"We use the \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"Emitter\"),\" module to emit events to our file, which in turn will - if config is in \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"debug\"),\" mode, pass on to JSON Server to generate our event emission file.\"),React.createElement(MDXTag,{name:\"p\",components:components},\"The component could look like this for example:\"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{\"className\":\"language-javascript\"}},\"import React, { Component } from 'react';\\nimport Emitter from 'common/Emitter';\\nimport Config from 'src/app.json';\\nimport Waypoint from 'react-waypoint';\\n\\n/**\\n * Render the Component component\\n *\\n * @class Component\\n * @extends {Component}\\n */\\nclass Component extends Component {\\n  /**\\n   * Handle primary button click event.\\n   *\\n   * @memberof Component\\n   */\\n  handlePrimaryClick = (e) => {\\n    Emitter.emit('event', {\\n      event: 'Component.handlePrimaryClick',\\n      e: e.target\\n    });\\n\\n    if (Config.debug) {\\n      e.preventDefault();\\n      return;\\n    }\\n\\n    const { router } = this.props;\\n    router.push(Config.baseUrl + '/test');\\n  };\\n\\n  /**\\n   * Handle component enter event.\\n   *\\n   * @memberof Component\\n   */\\n  handleWaypointEnter = (e) => {\\n    Emitter.emit('event', { event: 'Component.handleWaypointEnter' });\\n  };\\n\\n  /**\\n   * Handle component exit event.\\n   *\\n   * @memberof Component\\n   */\\n  handleWaypointExit = (e) => {\\n    Emitter.emit('event', { event: 'Component.handleWaypointExit' });\\n  };\\n\\n  /**\\n   * Render Component component\\n   * @memberof Component\\n   * @var {function} render Render Component component\\n   * @returns {Object} component\\n   */\\n  render() {\\n    const {\\n      title,\\n      subtitle,\\n      buttonPrimary,\\n      buttonSecondary,\\n      imageMain\\n    } = this.props.copy;\\n\\n    return (\\n      <Waypoint\\n        onEnter={this.handleWaypointEnter}\\n        onLeave={this.handleWaypointExit}\\n      >\\n        <div className=\\\"component\\\">\\n          <div className=\\\"container content\\\">\\n            <button\\n              onClick={this.handlePrimaryClick}\\n              className=\\\"button primary f-primary cta animate\\\"\\n            >\\n              {buttonPrimary}\\n            </button>\\n          </div>\\n        </div>\\n      </Waypoint>\\n    );\\n  }\\n}\\n\\nexport default Component;\\n\")),React.createElement(MDXTag,{name:\"h2\",components:components,props:{\"id\":\"recording-the-events-manually-on-the-web\"}},\"Recording the events manually on the web\"),React.createElement(MDXTag,{name:\"p\",components:components},\"Use the Puppeteer recorder to do a runthrough of the events you want to cover. \",React.createElement(MDXTag,{name:\"a\",components:components,parentName:\"p\",props:{\"href\":\"https://github.com/checkly/puppeteer-recorder\"}},\"Check here\"),\" for more info.\"),React.createElement(MDXTag,{name:\"p\",components:components},\"After running through with the recorder, we should be able to modify the Puppeteer template. The end result could look like the following:\"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{\"className\":\"language-javascript\"}},\"/**\\n * ComponentALLandingOne tests\\n */\\nconst puppeteer = require('puppeteer');\\nconst json = require('./db.json');\\nconst fs = require('fs-extra');\\nconst cwd = process.cwd();\\nconst server = require(cwd + '/controllers/json-server');\\nconst wait = require('waait');\\nconst Recorder = require(cwd + '/src/common/Recorder').default;\\nlet dbJson;\\nserver.listen(4444, () => console.log('JSON DB server started'));\\n\\ndescribe('ComponentALLandingFive UI functionality', () => {\\n  describe('ComponentALLandingFive events', () => {\\n    beforeEach(() => {\\n      dbJson = fs.readJsonSync(cwd + '/db.json');\\n      dbJson.events.map((e) => Recorder.delete(e.id));\\n    });\\n\\n    it('Events emitted equals prerecording', async () => {\\n      const browser = await puppeteer.launch();\\n      const page = await browser.newPage();\\n\\n      await page.goto('http://localhost:3000/ComponentALLandingFive');\\n      await page.waitForSelector(\\n        '.grid > .item > .flex > .block-info > .primary'\\n      );\\n      await page.click('.grid > .item > .flex > .block-info > .primary');\\n\\n      await page.goto('http://localhost:3000/ComponentALLandingFive');\\n\\n      await browser.close();\\n\\n      await wait(300);\\n      dbJson = fs.readJsonSync(cwd + '/db.json');\\n\\n      expect(dbJson).to.deep.equal(json);\\n    });\\n  });\\n});\\n\")),React.createElement(MDXTag,{name:\"h2\",components:components,props:{\"id\":\"init-the-component-dbjson-file\"}},\"Init the component db.json file\"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{\"className\":\"language-json\"}},\"{\\n  \\\"events\\\": []\\n}\\n\")),React.createElement(MDXTag,{name:\"h2\",components:components,props:{\"id\":\"first-run-through-of-the-file\"}},\"First run through of the file\"),React.createElement(MDXTag,{name:\"p\",components:components},\"If we decide to run that Puppeteer test\"));}}]);return MDXContent;}(React.Component);export{MDXContent as default};MDXContent.__docgenInfo={\"description\":\"\",\"methods\":[],\"displayName\":\"MDXContent\"};",{"version":3,"sources":["/Users/okeeffe_d/Business/Documentation/manual/Testing/UI-Testing-Web.md"],"names":["React","MDXTag","MDXContent","props","layout","components","Component"],"mappings":"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","sourcesContent":["\n  import React from 'react'\n  import { MDXTag } from '@mdx-js/tag'\n  \n\nexport default class MDXContent extends React.Component {\n  constructor(props) {\n    super(props)\n    this.layout = null\n  }\n  render() {\n    const { components, ...props } = this.props\n\n    return <MDXTag\n             name=\"wrapper\"\n             \n             components={components}><MDXTag name=\"h1\" components={components} props={{\"id\":\"ui-testing-web\"}}>{`UI Testing Web`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`For web, we can test UI elements by making the most of Puppeteer and both the Emitter and Recorder JS packages from Kratos and the `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`json-server`}</MDXTag>{` js-controller package from Kratos.`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"getting-started\"}}>{`Getting started`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-shell\"}}>{`kratos install js-controllers json-server\nkratos install js Emitter\nkratos install js Recorder\n# install puppeteer, mocha, json-server etc if required - should be bootstrappable\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"setting-up-for-the-tests\"}}>{`Setting up for the tests`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Within the component module you want to target, create a `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`.puppeteer.js`}</MDXTag>{` file and a `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`db.json`}</MDXTag>{` file.`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"the-component-file\"}}>{`The component file`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`We use the `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`Emitter`}</MDXTag>{` module to emit events to our file, which in turn will - if config is in `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`debug`}</MDXTag>{` mode, pass on to JSON Server to generate our event emission file.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`The component could look like this for example:`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-javascript\"}}>{`import React, { Component } from 'react';\nimport Emitter from 'common/Emitter';\nimport Config from 'src/app.json';\nimport Waypoint from 'react-waypoint';\n\n/**\n * Render the Component component\n *\n * @class Component\n * @extends {Component}\n */\nclass Component extends Component {\n  /**\n   * Handle primary button click event.\n   *\n   * @memberof Component\n   */\n  handlePrimaryClick = (e) => {\n    Emitter.emit('event', {\n      event: 'Component.handlePrimaryClick',\n      e: e.target\n    });\n\n    if (Config.debug) {\n      e.preventDefault();\n      return;\n    }\n\n    const { router } = this.props;\n    router.push(Config.baseUrl + '/test');\n  };\n\n  /**\n   * Handle component enter event.\n   *\n   * @memberof Component\n   */\n  handleWaypointEnter = (e) => {\n    Emitter.emit('event', { event: 'Component.handleWaypointEnter' });\n  };\n\n  /**\n   * Handle component exit event.\n   *\n   * @memberof Component\n   */\n  handleWaypointExit = (e) => {\n    Emitter.emit('event', { event: 'Component.handleWaypointExit' });\n  };\n\n  /**\n   * Render Component component\n   * @memberof Component\n   * @var {function} render Render Component component\n   * @returns {Object} component\n   */\n  render() {\n    const {\n      title,\n      subtitle,\n      buttonPrimary,\n      buttonSecondary,\n      imageMain\n    } = this.props.copy;\n\n    return (\n      <Waypoint\n        onEnter={this.handleWaypointEnter}\n        onLeave={this.handleWaypointExit}\n      >\n        <div className=\"component\">\n          <div className=\"container content\">\n            <button\n              onClick={this.handlePrimaryClick}\n              className=\"button primary f-primary cta animate\"\n            >\n              {buttonPrimary}\n            </button>\n          </div>\n        </div>\n      </Waypoint>\n    );\n  }\n}\n\nexport default Component;\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"recording-the-events-manually-on-the-web\"}}>{`Recording the events manually on the web`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Use the Puppeteer recorder to do a runthrough of the events you want to cover. `}<MDXTag name=\"a\" components={components} parentName=\"p\" props={{\"href\":\"https://github.com/checkly/puppeteer-recorder\"}}>{`Check here`}</MDXTag>{` for more info.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`After running through with the recorder, we should be able to modify the Puppeteer template. The end result could look like the following:`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-javascript\"}}>{`/**\n * ComponentALLandingOne tests\n */\nconst puppeteer = require('puppeteer');\nconst json = require('./db.json');\nconst fs = require('fs-extra');\nconst cwd = process.cwd();\nconst server = require(cwd + '/controllers/json-server');\nconst wait = require('waait');\nconst Recorder = require(cwd + '/src/common/Recorder').default;\nlet dbJson;\nserver.listen(4444, () => console.log('JSON DB server started'));\n\ndescribe('ComponentALLandingFive UI functionality', () => {\n  describe('ComponentALLandingFive events', () => {\n    beforeEach(() => {\n      dbJson = fs.readJsonSync(cwd + '/db.json');\n      dbJson.events.map((e) => Recorder.delete(e.id));\n    });\n\n    it('Events emitted equals prerecording', async () => {\n      const browser = await puppeteer.launch();\n      const page = await browser.newPage();\n\n      await page.goto('http://localhost:3000/ComponentALLandingFive');\n      await page.waitForSelector(\n        '.grid > .item > .flex > .block-info > .primary'\n      );\n      await page.click('.grid > .item > .flex > .block-info > .primary');\n\n      await page.goto('http://localhost:3000/ComponentALLandingFive');\n\n      await browser.close();\n\n      await wait(300);\n      dbJson = fs.readJsonSync(cwd + '/db.json');\n\n      expect(dbJson).to.deep.equal(json);\n    });\n  });\n});\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"init-the-component-dbjson-file\"}}>{`Init the component db.json file`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-json\"}}>{`{\n  \"events\": []\n}\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"first-run-through-of-the-file\"}}>{`First run through of the file`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`If we decide to run that Puppeteer test`}</MDXTag>\n           </MDXTag>\n  }\n}\n  "]}]}