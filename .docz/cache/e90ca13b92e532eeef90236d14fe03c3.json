{"remainingRequest":"/Users/okeeffe_d/Project-Imposter/developer-notes/node_modules/docz-core/node_modules/babel-loader/lib/index.js??ref--6-1!/Users/okeeffe_d/Project-Imposter/developer-notes/node_modules/@mdx-js/loader/index.js??ref--6-2!/Users/okeeffe_d/Project-Imposter/developer-notes/node_modules/source-map-loader/index.js!/Users/okeeffe_d/Project-Imposter/developer-notes/manual/Istio/EKS-Istio.md","dependencies":[{"path":"/Users/okeeffe_d/Project-Imposter/developer-notes/manual/Istio/EKS-Istio.md","mtime":1561613205869},{"path":"/Users/okeeffe_d/Project-Imposter/developer-notes/node_modules/cache-loader/dist/cjs.js","mtime":1561535530324},{"path":"/Users/okeeffe_d/Project-Imposter/developer-notes/node_modules/docz-core/node_modules/babel-loader/lib/index.js","mtime":1560300163820},{"path":"/Users/okeeffe_d/Project-Imposter/developer-notes/node_modules/@mdx-js/loader/index.js","mtime":1561535530532},{"path":"/Users/okeeffe_d/Project-Imposter/developer-notes/node_modules/source-map-loader/index.js","mtime":1548285283521}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/okeeffe_d/Project-Imposter/developer-notes/manual/Istio/EKS-Istio.md"],"names":["React","mdx","makeShortcode","name","MDXDefaultShortcode","props","console","warn","layoutProps","MDXLayout","MDXContent","components","isMDXComponent"],"mappings":"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","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"getting-start-with-istio-on-eks\"\n    }}>{`Getting start with Istio on EKS`}</h1>\n    <p>{`Reference link `}<a parentName=\"p\" {...{\n        \"href\": \"https://aws.amazon.com/blogs/opensource/getting-started-istio-eks/\"\n      }}>{`https://aws.amazon.com/blogs/opensource/getting-started-istio-eks/`}</a></p>\n    <h2 {...{\n      \"id\": \"architecture\"\n    }}>{`Architecture`}</h2>\n    <p><img alt=\"Small network proxy sidecar alongside each microservice\" src=\"https://i-h1.pinimg.com/564x/15/d7/9a/15d79a5f70bb45900166d1e3a6a3ea09.jpg\" /></p>\n    <p>{`Istio works by having a small network proxy sit alongside each microservice. This so-called “sidecar” intercepts all of the service’s traffic, and handles it more intelligently than a simple layer 3 network can. Istio uses the Envoy proxy as its sidecar. Envoy was originally written at Lyft and is now a CNCF project. The whole set of sidecars, one per microservice, is called the data plane. The work of the sidecars is coordinated by a small number of central components called the control plane. Control and data plane architectures are very common in distributed systems, from network switches to compute farms.`}</p>\n    <h2 {...{\n      \"id\": \"setting-up-istio\"\n    }}>{`Setting up Istio`}</h2>\n    <p>{`tl;dr is to use `}<inlineCode parentName=\"p\">{`eksctl`}</inlineCode>{` to create an EKS cluster.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`eksctl create cluster \\\\\n    --region us-west-2 \\\\\n    --name istio-on-eks \\\\\n    --nodes 2 \\\\\n    --ssh-public-key \"~/.ssh/id_rsa.pub\"\n`}</code></pre>\n    <p>{`Ensure you download and abstract the latest Istio release.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`curl -L https://git.io/getLatestIstio | sh -\ncd istio-1.*\n`}</code></pre>\n    <p>{`After changing in, ensure that you are using `}<inlineCode parentName=\"p\">{`helm`}</inlineCode>{` to set up.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`kubectl create -f install/kubernetes/helm/helm-service-account.yaml\n# Export isto to bin to enable istioctl\nhelm init --service-account tiller\nhelm install \\\\\n--wait \\\\\n--name istio \\\\\n--namespace istio-system \\\\\ninstall/kubernetes/helm/istio\n# Check \\`kubectl -n kube-system get po\\` to see if tiller pod running\nkubectl label namespace default istio-injection=enabled\n`}</code></pre>\n    <p>{`Note: This is not the best example of security practice. Check Helm docs for RBAC to show you how to set up securely.`}</p>\n    <h2 {...{\n      \"id\": \"running-a-test-application\"\n    }}>{`Running a test application`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`# From the istio folder, apply the book info\nkubectl apply -f \\\\<(istioctl kube-inject -f samples/bookinfo/platform/kube/bookinfo.yaml)\n# Expose the BookInfo with the Gateway resource\nkubectl apply -f samples/bookinfo/networking/bookinfo-gateway.yaml\n`}</code></pre>\n    <p>{`For bookinfo.yaml:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-yaml\"\n      }}>{`# bookinfo.yaml\n#\n# Copyright 2017 Istio Authors\n#\n#   Licensed under the Apache License, Version 2.0 (the \"License\");\n#   you may not use this file except in compliance with the License.\n#   You may obtain a copy of the License at\n#\n#       http://www.apache.org/licenses/LICENSE-2.0\n#\n#   Unless required by applicable law or agreed to in writing, software\n#   distributed under the License is distributed on an \"AS IS\" BASIS,\n#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n#   See the License for the specific language governing permissions and\n#   limitations under the License.\n\n##################################################################################################\n# Details service\n##################################################################################################\napiVersion: v1\nkind: Service\nmetadata:\n  name: details\n  labels:\n    app: details\nspec:\n  ports:\n    - port: 9080\n      name: http\n  selector:\n    app: details\n---\napiVersion: extensions/v1beta1\nkind: Deployment\nmetadata:\n  name: details-v1\nspec:\n  replicas: 1\n  template:\n    metadata:\n      labels:\n        app: details\n        version: v1\n    spec:\n      containers:\n        - name: details\n          image: istio/examples-bookinfo-details-v1:1.10.0\n          imagePullPolicy: IfNotPresent\n          ports:\n            - containerPort: 9080\n---\n##################################################################################################\n# Ratings service\n##################################################################################################\napiVersion: v1\nkind: Service\nmetadata:\n  name: ratings\n  labels:\n    app: ratings\nspec:\n  ports:\n    - port: 9080\n      name: http\n  selector:\n    app: ratings\n---\napiVersion: extensions/v1beta1\nkind: Deployment\nmetadata:\n  name: ratings-v1\nspec:\n  replicas: 1\n  template:\n    metadata:\n      labels:\n        app: ratings\n        version: v1\n    spec:\n      containers:\n        - name: ratings\n          image: istio/examples-bookinfo-ratings-v1:1.10.0\n          imagePullPolicy: IfNotPresent\n          ports:\n            - containerPort: 9080\n---\n##################################################################################################\n# Reviews service\n##################################################################################################\napiVersion: v1\nkind: Service\nmetadata:\n  name: reviews\n  labels:\n    app: reviews\nspec:\n  ports:\n    - port: 9080\n      name: http\n  selector:\n    app: reviews\n---\napiVersion: extensions/v1beta1\nkind: Deployment\nmetadata:\n  name: reviews-v1\nspec:\n  replicas: 1\n  template:\n    metadata:\n      labels:\n        app: reviews\n        version: v1\n    spec:\n      containers:\n        - name: reviews\n          image: istio/examples-bookinfo-reviews-v1:1.10.0\n          imagePullPolicy: IfNotPresent\n          ports:\n            - containerPort: 9080\n---\napiVersion: extensions/v1beta1\nkind: Deployment\nmetadata:\n  name: reviews-v2\nspec:\n  replicas: 1\n  template:\n    metadata:\n      labels:\n        app: reviews\n        version: v2\n    spec:\n      containers:\n        - name: reviews\n          image: istio/examples-bookinfo-reviews-v2:1.10.0\n          imagePullPolicy: IfNotPresent\n          ports:\n            - containerPort: 9080\n---\napiVersion: extensions/v1beta1\nkind: Deployment\nmetadata:\n  name: reviews-v3\nspec:\n  replicas: 1\n  template:\n    metadata:\n      labels:\n        app: reviews\n        version: v3\n    spec:\n      containers:\n        - name: reviews\n          image: istio/examples-bookinfo-reviews-v3:1.10.0\n          imagePullPolicy: IfNotPresent\n          ports:\n            - containerPort: 9080\n---\n##################################################################################################\n# Productpage services\n##################################################################################################\napiVersion: v1\nkind: Service\nmetadata:\n  name: productpage\n  labels:\n    app: productpage\nspec:\n  ports:\n    - port: 9080\n      name: http\n  selector:\n    app: productpage\n---\napiVersion: extensions/v1beta1\nkind: Deployment\nmetadata:\n  name: productpage-v1\nspec:\n  replicas: 1\n  template:\n    metadata:\n      labels:\n        app: productpage\n        version: v1\n    spec:\n      containers:\n        - name: productpage\n          image: istio/examples-bookinfo-productpage-v1:1.10.0\n          imagePullPolicy: IfNotPresent\n          ports:\n            - containerPort: 9080\n---\n`}</code></pre>\n    <p>{`The following commands will locate the host and port we ultimately need to hit to access our Bookinfo application from across the internet:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`$ export INGRESS_HOST=$(kubectl -n istio-system \\\\\nget service istio-ingressgateway \\\\\n-o jsonpath='{.status.loadBalancer.ingress[0].hostname}')\n$ export INGRESS_PORT=$(kubectl -n istio-system \\\\\nget service istio-ingressgateway \\\\\n-o jsonpath='{.spec.ports[?(@.name==\"http2\")].port}')\n$ export GATEWAY_URL=$INGRESS_HOST:$INGRESS_PORT\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"layer-7-routing\"\n    }}>{`Layer 7 Routing`}</h2>\n    <p>{`So, let’s get things under control and pin all calls to reviews v1 for now.`}</p>\n    <p>{`The Bookinfo sample has a few pre-made Istio configs we can use, and this is one of them.`}</p>\n    <p>{`First we need to tell Istio about the different versions that exist and how to tell them apart (in this case, labels on the Kubernetes Deployment).`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`kubectl apply -f samples/bookinfo/networking/destination-rule-all.yaml\n`}</code></pre>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-yaml\"\n      }}>{`# destination-rule-all.yaml\napiVersion: networking.istio.io/v1alpha3\nkind: DestinationRule\nmetadata:\n  name: productpage\nspec:\n  host: productpage\n  subsets:\n    - name: v1\n      labels:\n        version: v1\n---\napiVersion: networking.istio.io/v1alpha3\nkind: DestinationRule\nmetadata:\n  name: reviews\nspec:\n  host: reviews\n  subsets:\n    - name: v1\n      labels:\n        version: v1\n    - name: v2\n      labels:\n        version: v2\n    - name: v3\n      labels:\n        version: v3\n---\napiVersion: networking.istio.io/v1alpha3\nkind: DestinationRule\nmetadata:\n  name: ratings\nspec:\n  host: ratings\n  subsets:\n    - name: v1\n      labels:\n        version: v1\n    - name: v2\n      labels:\n        version: v2\n    - name: v2-mysql\n      labels:\n        version: v2-mysql\n    - name: v2-mysql-vm\n      labels:\n        version: v2-mysql-vm\n---\napiVersion: networking.istio.io/v1alpha3\nkind: DestinationRule\nmetadata:\n  name: details\nspec:\n  host: details\n  subsets:\n    - name: v1\n      labels:\n        version: v1\n    - name: v2\n      labels:\n        version: v2\n---\n`}</code></pre>\n    <p><img alt=\"Dest rules\" src=\"https://i-h1.pinimg.com/564x/e9/a7/81/e9a7819b6ed349f27d4ea0915c0665f5.jpg\" /></p>\n    <p>{`With those subsets of the reviews Service defined, we can tell Istio that anyone looking to call reviews should always be directed to v1.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`kubectl apply -f samples/bookinfo/networking/virtual-service-all-v1.yaml\n`}</code></pre>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-yaml\"\n      }}>{`# virtual-service-ruleallv1.yaml\napiVersion: networking.istio.io/v1alpha3\nkind: VirtualService\nmetadata:\n  name: productpage\nspec:\n  hosts:\n    - productpage\n  http:\n    - route:\n        - destination:\n            host: productpage\n            subset: v1\n---\napiVersion: networking.istio.io/v1alpha3\nkind: VirtualService\nmetadata:\n  name: reviews\nspec:\n  hosts:\n    - reviews\n  http:\n    - route:\n        - destination:\n            host: reviews\n            subset: v1\n---\napiVersion: networking.istio.io/v1alpha3\nkind: VirtualService\nmetadata:\n  name: ratings\nspec:\n  hosts:\n    - ratings\n  http:\n    - route:\n        - destination:\n            host: ratings\n            subset: v1\n---\napiVersion: networking.istio.io/v1alpha3\nkind: VirtualService\nmetadata:\n  name: details\nspec:\n  hosts:\n    - details\n  http:\n    - route:\n        - destination:\n            host: details\n            subset: v1\n---\n`}</code></pre>\n    <p><img alt=\"Route changes\" src=\"https://d2908q01vomqb2.cloudfront.net/ca3512f4dfa95a03169c5a670a4c91a19b3077b4/2018/08/22/istio-host-reviews.jpg\" /></p>\n    <h2 {...{\n      \"id\": \"teardown\"\n    }}>{`Teardown`}</h2>\n    <p>{`Deleting the resources:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`kubectl delete -f samples/bookinfo/networking/bookinfo-gateway.yaml\nkubectl delete -f \\\\<(istioctl kube-inject -f samples/bookinfo/platform/kube/bookinfo.yaml)\nhelm delete \\\\\n--wait \\\\\n--name istio \\\\\n--namespace istio-system \\\\\ninstall/kubernetes/helm/istio\n`}</code></pre>\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  "]}]}