{"remainingRequest":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/docz-core/node_modules/babel-loader/lib/index.js??ref--6-1!/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/@mdx-js/loader/index.js??ref--6-2!/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/source-map-loader/index.js!/Users/dennis.okeeffe/Project-Imposter/developer-notes/manual/Testing/enzyme.md","dependencies":[{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/manual/Testing/enzyme.md","mtime":1562563032097},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/cache-loader/dist/cjs.js","mtime":1564095360956},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/docz-core/node_modules/babel-loader/lib/index.js","mtime":1562568123838},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/@mdx-js/loader/index.js","mtime":1565139338792},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/source-map-loader/index.js","mtime":1564095361765}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9vYmplY3RXaXRob3V0UHJvcGVydGllcyBmcm9tIi9Vc2Vycy9kZW5uaXMub2tlZWZmZS9Qcm9qZWN0LUltcG9zdGVyL2RldmVsb3Blci1ub3Rlcy9ub2RlX21vZHVsZXMvYmFiZWwtcHJlc2V0LXJlYWN0LWFwcC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0V2l0aG91dFByb3BlcnRpZXMiOy8qIEBqc3ggbWR4ICovaW1wb3J0IFJlYWN0IGZyb20ncmVhY3QnO2ltcG9ydHttZHh9ZnJvbSdAbWR4LWpzL3JlYWN0JzsvKiBAanN4IG1keCAqL3ZhciBtYWtlU2hvcnRjb2RlPWZ1bmN0aW9uIG1ha2VTaG9ydGNvZGUobmFtZSl7cmV0dXJuIGZ1bmN0aW9uIE1EWERlZmF1bHRTaG9ydGNvZGUocHJvcHMpe2NvbnNvbGUud2FybigiQ29tcG9uZW50ICIrbmFtZSsiIHdhcyBub3QgaW1wb3J0ZWQsIGV4cG9ydGVkLCBvciBwcm92aWRlZCBieSBNRFhQcm92aWRlciBhcyBnbG9iYWwgc2NvcGUiKTtyZXR1cm4gbWR4KCJkaXYiLHByb3BzKTt9O307dmFyIGxheW91dFByb3BzPXt9O3ZhciBNRFhMYXlvdXQ9IndyYXBwZXIiO2V4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIE1EWENvbnRlbnQoX3JlZil7dmFyIGNvbXBvbmVudHM9X3JlZi5jb21wb25lbnRzLHByb3BzPV9vYmplY3RXaXRob3V0UHJvcGVydGllcyhfcmVmLFsiY29tcG9uZW50cyJdKTtyZXR1cm4gbWR4KE1EWExheW91dCxPYmplY3QuYXNzaWduKHt9LGxheW91dFByb3BzLHByb3BzLHtjb21wb25lbnRzOmNvbXBvbmVudHMsbWR4VHlwZToiTURYTGF5b3V0In0pLG1keCgiaHIiLG51bGwpLG1keCgicCIsbnVsbCwiQXV0aG9yOiBEZW5uaXMgTydLZWVmZmUiKSxtZHgoImgyIix7ImlkIjoic2VjdGlvbi10ZXN0aW5nIn0sIlNlY3Rpb246IFRlc3RpbmciKSxtZHgoImgxIix7ImlkIjoiZW56eW1lIn0sIkVuenltZSIpLG1keCgiaDIiLHsiaWQiOiJyZXNvdXJjZXMifSwiUmVzb3VyY2VzIiksbWR4KCJ1bCIsbnVsbCxtZHgoImxpIix7cGFyZW50TmFtZToidWwifSxtZHgoImEiLE9iamVjdC5hc3NpZ24oe3BhcmVudE5hbWU6ImxpIn0seyJocmVmIjoiaHR0cHM6Ly9tb2NoYWpzLm9yZy8ifSksIk1vY2hhIFdlYnNpdGUiKSksbWR4KCJsaSIse3BhcmVudE5hbWU6InVsIn0sbWR4KCJhIixPYmplY3QuYXNzaWduKHtwYXJlbnROYW1lOiJsaSJ9LHsiaHJlZiI6Imh0dHA6Ly93d3cuY2hhaWpzLmNvbS9hcGkvIn0pLCJDaGFpIEFQSSIpKSxtZHgoImxpIix7cGFyZW50TmFtZToidWwifSxtZHgoImEiLE9iamVjdC5hc3NpZ24oe3BhcmVudE5hbWU6ImxpIn0seyJocmVmIjoiaHR0cDovL2FpcmJuYi5pby9lbnp5bWUvZG9jcy9hcGkvIn0pLCJFbnp5bWUgQVBJIikpLG1keCgibGkiLHtwYXJlbnROYW1lOiJ1bCJ9LG1keCgiYSIsT2JqZWN0LmFzc2lnbih7cGFyZW50TmFtZToibGkifSx7ImhyZWYiOiJodHRwczovL2dpdGh1Yi5jb20vR29vZ2xlQ2hyb21lL3B1cHBldGVlci9ibG9iL21hc3Rlci9kb2NzL2FwaS5tZCJ9KSwiUHVwcGV0ZWVyIEFQSSIpKSksbWR4KCJoMiIseyJpZCI6InVzYWdlIn0sIlVzYWdlIiksbWR4KCJwIixudWxsLCJXaGVuIHRlc3RpbmcgUmVhY3QgY29tcG9uZW50cyBmb3Igb3VyIGV4cGVjdGVkIFVJLCB3ZSB1c2UgQWlyQm5iJ3MgRW56eW1lIGxpYnJhcnkgb24gdG9wOiIpLG1keCgicHJlIixudWxsLG1keCgiY29kZSIsT2JqZWN0LmFzc2lnbih7cGFyZW50TmFtZToicHJlIn0seyJjbGFzc05hbWUiOiJsYW5ndWFnZS1qYXZhc2NyaXB0In0pLCIvLyBBc3N1bWluZyBjb21wb25lbnQgbWF5YmUgdGhlIGZvbGxvd2luZzpcbi8vIDxQYWdlSG9tZT5cbi8vICAgICAgPFNlY3Rpb25PbmUgLz5cbi8vICAgICAgPFNlY3Rpb25Ud28gLz5cbi8vIDxQYWdlSG9tZSAvPlxuY29uc3Qgd3JhcHBlciA9IEVuenltZS5zaGFsbG93KDxQYWdlSG9tZSAvPik7XG5cbmRlc2NyaWJlKGNoYWxrLm1hZ2VudGEoJ1BhZ2VIb21lIEVuenltZSB0ZXN0cycpLCAoKSA9PiB7XG4gIGl0KCdQYWdlSG9tZSBjaGlsZCBSZWFjdCBjb21wb25lbnQgU2VjdGlvbkhvbWUgdG8gZXhpc3QnLCAoKSA9PiB7XG4gICAgZXhwZWN0KHdyYXBwZXIuZmluZCgnU2VjdGlvbk9uZScpLmV4aXN0cygpKS50by5lcXVhbCh0cnVlKTsgLy8gZXZhbHVhdGVzIHRvIHRydWVcbiAgfSk7XG59KTtcbiIpKSxtZHgoInAiLG51bGwsIkluIG1vcmUgYWR2YW5jZWQgdXNlLCB0aGlzIGNhbiBiZWNvbWUgaW5jcmVkaWJseSB1c2VmdWwgZm9yIGVuc3VyaW5nIHRoYXQgYSBudW1iZXIgb2YgZWxlbWVudHMgcmVuZGVycyBjb3JyZWN0bHkgZnJvbSBkZWZhdWx0IEpTT04gZGF0YSBvciBhbiBleHRlcm5hbCByZXNvdXJjZS4iKSk7fWlmKHR5cGVvZiBNRFhDb250ZW50IT09J3VuZGVmaW5lZCcmJk1EWENvbnRlbnQmJk1EWENvbnRlbnQ9PT1PYmplY3QoTURYQ29udGVudCkmJk9iamVjdC5pc0V4dGVuc2libGUoTURYQ29udGVudCkpe09iamVjdC5kZWZpbmVQcm9wZXJ0eShNRFhDb250ZW50LCdfX2ZpbGVtZXRhJyx7ZW51bWVyYWJsZTp0cnVlLGNvbmZpZ3VyYWJsZTp0cnVlLHZhbHVlOntuYW1lOiJNRFhDb250ZW50IixmaWxlbmFtZToibWFudWFsL1Rlc3RpbmcvZW56eW1lLm1kIn19KTt9TURYQ29udGVudC5pc01EWENvbXBvbmVudD10cnVlOw=="},{"version":3,"sources":["/Users/dennis.okeeffe/Project-Imposter/developer-notes/manual/Testing/enzyme.md"],"names":["React","mdx","makeShortcode","name","MDXDefaultShortcode","props","console","warn","layoutProps","MDXLayout","MDXContent","components","isMDXComponent"],"mappings":"iMAAA,cACE,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,GAAT,KAAoB,eAApB,CACA,cAGF,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAAAC,IAAI,QAAI,SAASC,CAAAA,mBAAT,CAA6BC,KAA7B,CAAoC,CAChEC,OAAO,CAACC,IAAR,CAAa,aAAeJ,IAAf,CAAsB,yEAAnC,EACA,MAAO,WAASE,KAAT,CAAP,CACD,CAHyB,EAA1B,CAKA,GAAMG,CAAAA,WAAW,CAAG,EAApB,CAGA,GAAMC,CAAAA,SAAS,CAAG,SAAlB,CACA,cAAe,SAASC,CAAAA,UAAT,MAGZ,IAFDC,CAAAA,UAEC,MAFDA,UAEC,CADEN,KACF,+CACD,MAAO,KAAC,SAAD,kBAAeG,WAAf,CAAgCH,KAAhC,EAAuC,UAAU,CAAEM,UAAnD,CAA+D,OAAO,CAAC,WAAvE,GACL,cADK,CAEL,uCAFK,CAGL,SAAQ,CACN,KAAM,iBADA,CAAR,oBAHK,CAML,SAAQ,CACN,KAAM,QADA,CAAR,UANK,CASL,SAAQ,CACN,KAAM,WADA,CAAR,aATK,CAYL,cACE,UAAI,UAAU,CAAC,IAAf,EAAoB,uBAAG,UAAU,CAAC,IAAd,EAAuB,CACvC,OAAQ,sBAD+B,CAAvB,kBAApB,CADF,CAIE,UAAI,UAAU,CAAC,IAAf,EAAoB,uBAAG,UAAU,CAAC,IAAd,EAAuB,CACvC,OAAQ,4BAD+B,CAAvB,aAApB,CAJF,CAOE,UAAI,UAAU,CAAC,IAAf,EAAoB,uBAAG,UAAU,CAAC,IAAd,EAAuB,CACvC,OAAQ,mCAD+B,CAAvB,eAApB,CAPF,CAUE,UAAI,UAAU,CAAC,IAAf,EAAoB,uBAAG,UAAU,CAAC,IAAd,EAAuB,CACvC,OAAQ,mEAD+B,CAAvB,kBAApB,CAVF,CAZK,CA0BL,SAAQ,CACN,KAAM,OADA,CAAR,SA1BK,CA6BL,yGA7BK,CA8BL,eAAK,0BAAM,UAAU,CAAC,KAAjB,EAA2B,CAC5B,YAAa,qBADe,CAA3B,mZAAL,CA9BK,CA6CL,gLA7CK,CAAP,CA+CD,C,oQAEDD,UAAU,CAACE,cAAX,CAA4B,IAA5B","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <hr></hr>\n    <p>{`Author: Dennis O'Keeffe`}</p>\n    <h2 {...{\n      \"id\": \"section-testing\"\n    }}>{`Section: Testing`}</h2>\n    <h1 {...{\n      \"id\": \"enzyme\"\n    }}>{`Enzyme`}</h1>\n    <h2 {...{\n      \"id\": \"resources\"\n    }}>{`Resources`}</h2>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://mochajs.org/\"\n        }}>{`Mocha Website`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"http://www.chaijs.com/api/\"\n        }}>{`Chai API`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"http://airbnb.io/enzyme/docs/api/\"\n        }}>{`Enzyme API`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://github.com/GoogleChrome/puppeteer/blob/master/docs/api.md\"\n        }}>{`Puppeteer API`}</a></li>\n    </ul>\n    <h2 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h2>\n    <p>{`When testing React components for our expected UI, we use AirBnb's Enzyme library on top:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`// Assuming component maybe the following:\n// <PageHome>\n//      <SectionOne />\n//      <SectionTwo />\n// <PageHome />\nconst wrapper = Enzyme.shallow(<PageHome />);\n\ndescribe(chalk.magenta('PageHome Enzyme tests'), () => {\n  it('PageHome child React component SectionHome to exist', () => {\n    expect(wrapper.find('SectionOne').exists()).to.equal(true); // evaluates to true\n  });\n});\n`}</code></pre>\n    <p>{`In more advanced use, this can become incredibly useful for ensuring that a number of elements renders correctly from default JSON data or an external resource.`}</p>\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  "]}]}