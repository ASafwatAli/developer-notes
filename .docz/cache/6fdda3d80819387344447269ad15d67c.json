{"remainingRequest":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/docz-core/node_modules/babel-loader/lib/index.js??ref--6-1!/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/@mdx-js/loader/index.js??ref--6-2!/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/source-map-loader/index.js!/Users/dennis.okeeffe/Project-Imposter/developer-notes/manual/Go/Go-Fizz-Buzz.md","dependencies":[{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/manual/Go/Go-Fizz-Buzz.md","mtime":1562563032038},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/cache-loader/dist/cjs.js","mtime":1564095360956},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/docz-core/node_modules/babel-loader/lib/index.js","mtime":1562568123838},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/@mdx-js/loader/index.js","mtime":1565139338792},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/source-map-loader/index.js","mtime":1564095361765}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9vYmplY3RXaXRob3V0UHJvcGVydGllcyBmcm9tIi9Vc2Vycy9kZW5uaXMub2tlZWZmZS9Qcm9qZWN0LUltcG9zdGVyL2RldmVsb3Blci1ub3Rlcy9ub2RlX21vZHVsZXMvYmFiZWwtcHJlc2V0LXJlYWN0LWFwcC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0V2l0aG91dFByb3BlcnRpZXMiOy8qIEBqc3ggbWR4ICovaW1wb3J0IFJlYWN0IGZyb20ncmVhY3QnO2ltcG9ydHttZHh9ZnJvbSdAbWR4LWpzL3JlYWN0JzsvKiBAanN4IG1keCAqL3ZhciBtYWtlU2hvcnRjb2RlPWZ1bmN0aW9uIG1ha2VTaG9ydGNvZGUobmFtZSl7cmV0dXJuIGZ1bmN0aW9uIE1EWERlZmF1bHRTaG9ydGNvZGUocHJvcHMpe2NvbnNvbGUud2FybigiQ29tcG9uZW50ICIrbmFtZSsiIHdhcyBub3QgaW1wb3J0ZWQsIGV4cG9ydGVkLCBvciBwcm92aWRlZCBieSBNRFhQcm92aWRlciBhcyBnbG9iYWwgc2NvcGUiKTtyZXR1cm4gbWR4KCJkaXYiLHByb3BzKTt9O307dmFyIGxheW91dFByb3BzPXt9O3ZhciBNRFhMYXlvdXQ9IndyYXBwZXIiO2V4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIE1EWENvbnRlbnQoX3JlZil7dmFyIGNvbXBvbmVudHM9X3JlZi5jb21wb25lbnRzLHByb3BzPV9vYmplY3RXaXRob3V0UHJvcGVydGllcyhfcmVmLFsiY29tcG9uZW50cyJdKTtyZXR1cm4gbWR4KE1EWExheW91dCxPYmplY3QuYXNzaWduKHt9LGxheW91dFByb3BzLHByb3BzLHtjb21wb25lbnRzOmNvbXBvbmVudHMsbWR4VHlwZToiTURYTGF5b3V0In0pLG1keCgiaDEiLHsiaWQiOiJmaXp6LWJ1enotaW4tZ29sYW5nIn0sIkZpenogQnV6eiBpbiBHb2xhbmciKSxtZHgoInAiLG51bGwsIkEgYmFzaWMgaW1wbGVtZW50YXRpb24gb2YgdGhlIGluZmFtb3VzIEZpenogQnV6eiB3aXRoIHVuaXQgdGVzdGluZy4iKSxtZHgoImgyIix7ImlkIjoic2V0dGluZy11cC10aGUtdGVzdCJ9LCJTZXR0aW5nIHVwIHRoZSB0ZXN0IiksbWR4KCJwIixudWxsLCJTZXQgdXAgIixtZHgoImlubGluZUNvZGUiLHtwYXJlbnROYW1lOiJwIn0sImZpenpfYnV6el90ZXN0LmdvIiksIiB3aXRoIHRoZSBmb2xsb3dpbmcgZmlsZToiKSxtZHgoInByZSIsbnVsbCxtZHgoImNvZGUiLE9iamVjdC5hc3NpZ24oe3BhcmVudE5hbWU6InByZSJ9LHsiY2xhc3NOYW1lIjoibGFuZ3VhZ2UtZ28ifSksInBhY2thZ2UgZml6emJ1enpcblxuaW1wb3J0IFwidGVzdGluZ1wiXG5cbmZ1bmMgVGVzdFJldHVyblN0cmluZyh0ICp0ZXN0aW5nLlQpIHtcbiAgICBleHBlY3RlZCA6PSBcIjJcIlxuICAgIGlmIG9ic2VydmVkIDo9IEZpenpCdXp6KDIpOyBvYnNlcnZlZCAhPSBleHBlY3RlZCB7XG4gICAgICAgIHQuRmF0YWxmKFwiRml6ekJ1enooMikpID0gJXYsIHdhbnQgJXZcIiwgb2JzZXJ2ZWQsIGV4cGVjdGVkKVxuICAgIH1cbn1cbmZ1bmMgVGVzdEZpenoodCAqdGVzdGluZy5UKSB7XG4gICAgZXhwZWN0ZWQgOj0gXCJGaXp6XCJcbiAgICBpZiBvYnNlcnZlZCA6PSBGaXp6QnV6eigzKTsgb2JzZXJ2ZWQgIT0gZXhwZWN0ZWQge1xuICAgICAgICB0LkZhdGFsZihcIkZpenpCdXp6KDMpKSA9ICV2LCB3YW50ICV2XCIsIG9ic2VydmVkLCBleHBlY3RlZClcbiAgICB9XG59XG5cbmZ1bmMgVGVzdEJ1enoodCAqdGVzdGluZy5UKSB7XG4gICAgZXhwZWN0ZWQgOj0gXCJCdXp6XCJcbiAgICBpZiBvYnNlcnZlZCA6PSBGaXp6QnV6eig1KTsgb2JzZXJ2ZWQgIT0gZXhwZWN0ZWQge1xuICAgICAgICB0LkZhdGFsZihcIkZpenpCdXp6KDUpKSA9ICV2LCB3YW50ICV2XCIsIG9ic2VydmVkLCBleHBlY3RlZClcbiAgICB9XG59XG5cbmZ1bmMgVGVzdEZpenpCdXp6KHQgKnRlc3RpbmcuVCkge1xuICAgIGV4cGVjdGVkIDo9IFwiRml6ekJ1enpcIlxuICAgIGlmIG9ic2VydmVkIDo9IEZpenpCdXp6KDE1KTsgb2JzZXJ2ZWQgIT0gZXhwZWN0ZWQge1xuICAgICAgICB0LkZhdGFsZihcIkZpenpCdXp6KDE1KSkgPSAldiwgd2FudCAldlwiLCBvYnNlcnZlZCwgZXhwZWN0ZWQpXG4gICAgfVxufVxuXG4vLyBCZW5jaG1hcmtGaXp6QnV6eigpIGlzIGEgYmVuY2htYXJraW5nIGZ1bmN0aW9uLiBUaGVzZSBmdW5jdGlvbnMgZm9sbG93IHRoZVxuLy8gZm9ybSBgZnVuYyBCZW5jaG1hcmtYeHgoKnRlc3RpbmcuQilgIGFuZCBjYW4gYmUgdXNlZCB0byB0ZXN0IHRoZSBwZXJmb3JtYW5jZVxuLy8gb2YgeW91ciBpbXBsZW1lbnRhdGlvbi4gVGhleSBtYXkgbm90IGJlIHByZXNlbnQgaW4gZXZlcnkgZXhlcmNpc2UsIGJ1dCB3aGVuXG4vLyB0aGV5IGFyZSB5b3UgY2FuIHJ1biB0aGVtIGJ5IGluY2x1ZGluZyB0aGUgYC1iZW5jaGAgZmxhZyB3aXRoIHRoZSBgZ28gdGVzdGBcbi8vIGNvbW1hbmQsIGxpa2Ugc286IGBnbyB0ZXN0IC12IC0tYmVuY2ggLiAtLWJlbmNobWVtYFxuLy9cbi8vIFlvdSB3aWxsIHNlZSBvdXRwdXQgc2ltaWxhciB0byB0aGUgZm9sbG93aW5nOlxuLy9cbi8vIEJlbmNobWFya0ZpenpCdXp6ICAgIDIwMDAwMDAwMDAgICAgICAgICAgIDAuNDYgbnMvb3Bcbi8vXG4vLyBUaGlzIG1lYW5zIHRoYXQgdGhlIGxvb3AgcmFuIDIwMDAwMDAwMDAgdGltZXMgYXQgYSBzcGVlZCBvZiAwLjQ2IG5zIHBlciBsb29wLlxuLy9cbi8vIFdoaWxlIGJlbmNobWFya2luZyBjYW4gYmUgdXNlZnVsIHRvIGNvbXBhcmUgZGlmZmVyZW50IGl0ZXJhdGlvbnMgb2YgdGhlIHNhbWVcbi8vIGV4ZXJjaXNlLCBrZWVwIGluIG1pbmQgdGhhdCBvdGhlcnMgd2lsbCBydW4gdGhlIHNhbWUgYmVuY2htYXJrcyBvbiBkaWZmZXJlbnRcbi8vIG1hY2hpbmVzLCB3aXRoIGRpZmZlcmVudCBzcGVjcywgc28gdGhlIHJlc3VsdHMgZnJvbSB0aGVzZSBiZW5jaG1hcmsgdGVzdHMgbWF5XG4vLyB2YXJ5LlxuZnVuYyBCZW5jaG1hcmtGaXp6QnV6eihiICp0ZXN0aW5nLkIpIHtcbiAgICBmb3IgaSA6PSAwOyBpIDwgYi5OOyBpKysge1xuICAgICAgICBGaXp6QnV6eigxNSlcbiAgICB9XG59XG4iKSksbWR4KCJoMiIseyJpZCI6ImZpenotYnV6ei1pbXBsZW1lbnRhdGlvbiJ9LCJGaXp6IEJ1enogaW1wbGVtZW50YXRpb24iKSxtZHgoInAiLG51bGwsIldlIHdpbGwgdXNlIHRoZSBpbnRlcmdlci10by1BU0NJSSBmdW5jdGlvbiAiLG1keCgiaW5saW5lQ29kZSIse3BhcmVudE5hbWU6InAifSwiaXRvYSIpLCIgZnJvbSB0aGUgIixtZHgoImlubGluZUNvZGUiLHtwYXJlbnROYW1lOiJwIn0sInN0cmluZ3MiKSwiIGxpYnJhcnkuIiksbWR4KCJwcmUiLG51bGwsbWR4KCJjb2RlIixPYmplY3QuYXNzaWduKHtwYXJlbnROYW1lOiJwcmUifSx7ImNsYXNzTmFtZSI6Imxhbmd1YWdlLWdvIn0pLCJwYWNrYWdlIGZpenpidXp6XG5cbmltcG9ydCBcInN0cmNvbnZcIlxuXG4vLyBGaXp6QnV6eiBzaG91bGQgaGF2ZSBhIGNvbW1lbnQgZG9jdW1lbnRpbmcgaXQuXG5mdW5jIEZpenpCdXp6KGkgaW50KSBzdHJpbmcge1xuICAgIHN3aXRjaCB0cnVlIHtcbiAgICBjYXNlIGklMTUgPT0gMDpcbiAgICAgICAgcmV0dXJuIFwiRml6ekJ1enpcIlxuICAgIGNhc2UgaSUzID09IDA6XG4gICAgICAgIHJldHVybiBcIkZpenpcIlxuICAgIGNhc2UgaSU1ID09IDA6XG4gICAgICAgIHJldHVybiBcIkJ1enpcIlxuICAgIGRlZmF1bHQ6XG4gICAgICAgIHJldHVybiBzdHJjb252Lkl0b2EoaSlcbiAgICB9XG59XG4iKSksbWR4KCJoMiIseyJpZCI6InJ1bm5pbmctdGVzdHMifSwiUnVubmluZyBUZXN0cyIpLG1keCgicCIsbnVsbCwiSW4gdGhlIGRpcmVjdG9yeSwgcnVuICIsbWR4KCJpbmxpbmVDb2RlIix7cGFyZW50TmFtZToicCJ9LCJnbyB0ZXN0IiksIi4iKSk7fWlmKHR5cGVvZiBNRFhDb250ZW50IT09J3VuZGVmaW5lZCcmJk1EWENvbnRlbnQmJk1EWENvbnRlbnQ9PT1PYmplY3QoTURYQ29udGVudCkmJk9iamVjdC5pc0V4dGVuc2libGUoTURYQ29udGVudCkpe09iamVjdC5kZWZpbmVQcm9wZXJ0eShNRFhDb250ZW50LCdfX2ZpbGVtZXRhJyx7ZW51bWVyYWJsZTp0cnVlLGNvbmZpZ3VyYWJsZTp0cnVlLHZhbHVlOntuYW1lOiJNRFhDb250ZW50IixmaWxlbmFtZToibWFudWFsL0dvL0dvLUZpenotQnV6ei5tZCJ9fSk7fU1EWENvbnRlbnQuaXNNRFhDb21wb25lbnQ9dHJ1ZTs="},{"version":3,"sources":["/Users/dennis.okeeffe/Project-Imposter/developer-notes/manual/Go/Go-Fizz-Buzz.md"],"names":["React","mdx","makeShortcode","name","MDXDefaultShortcode","props","console","warn","layoutProps","MDXLayout","MDXContent","components","isMDXComponent"],"mappings":"iMAAA,cACE,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,GAAT,KAAoB,eAApB,CACA,cAGF,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAAAC,IAAI,QAAI,SAASC,CAAAA,mBAAT,CAA6BC,KAA7B,CAAoC,CAChEC,OAAO,CAACC,IAAR,CAAa,aAAeJ,IAAf,CAAsB,yEAAnC,EACA,MAAO,WAASE,KAAT,CAAP,CACD,CAHyB,EAA1B,CAKA,GAAMG,CAAAA,WAAW,CAAG,EAApB,CAGA,GAAMC,CAAAA,SAAS,CAAG,SAAlB,CACA,cAAe,SAASC,CAAAA,UAAT,MAGZ,IAFDC,CAAAA,UAEC,MAFDA,UAEC,CADEN,KACF,+CACD,MAAO,KAAC,SAAD,kBAAeG,WAAf,CAAgCH,KAAhC,EAAuC,UAAU,CAAEM,UAAnD,CAA+D,OAAO,CAAC,WAAvE,GACL,SAAQ,CACN,KAAM,qBADA,CAAR,uBADK,CAIL,mFAJK,CAKL,SAAQ,CACN,KAAM,qBADA,CAAR,uBALK,CAQL,uBAAc,kBAAY,UAAU,CAAC,GAAvB,sBAAd,6BARK,CASL,eAAK,0BAAM,UAAU,CAAC,KAAjB,EAA2B,CAC5B,YAAa,aADe,CAA3B,mvDAAL,CATK,CAgEL,SAAQ,CACN,KAAM,0BADA,CAAR,4BAhEK,CAmEL,2DAAkD,kBAAY,UAAU,CAAC,GAAvB,SAAlD,cAAgH,kBAAY,UAAU,CAAC,GAAvB,YAAhH,aAnEK,CAoEL,eAAK,0BAAM,UAAU,CAAC,KAAjB,EAA2B,CAC5B,YAAa,aADe,CAA3B,wVAAL,CApEK,CAwFL,SAAQ,CACN,KAAM,eADA,CAAR,iBAxFK,CA2FL,sCAA6B,kBAAY,UAAU,CAAC,GAAvB,YAA7B,KA3FK,CAAP,CA6FD,C,qQAEDD,UAAU,CAACE,cAAX,CAA4B,IAA5B","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"fizz-buzz-in-golang\"\n    }}>{`Fizz Buzz in Golang`}</h1>\n    <p>{`A basic implementation of the infamous Fizz Buzz with unit testing.`}</p>\n    <h2 {...{\n      \"id\": \"setting-up-the-test\"\n    }}>{`Setting up the test`}</h2>\n    <p>{`Set up `}<inlineCode parentName=\"p\">{`fizz_buzz_test.go`}</inlineCode>{` with the following file:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-go\"\n      }}>{`package fizzbuzz\n\nimport \"testing\"\n\nfunc TestReturnString(t *testing.T) {\n    expected := \"2\"\n    if observed := FizzBuzz(2); observed != expected {\n        t.Fatalf(\"FizzBuzz(2)) = %v, want %v\", observed, expected)\n    }\n}\nfunc TestFizz(t *testing.T) {\n    expected := \"Fizz\"\n    if observed := FizzBuzz(3); observed != expected {\n        t.Fatalf(\"FizzBuzz(3)) = %v, want %v\", observed, expected)\n    }\n}\n\nfunc TestBuzz(t *testing.T) {\n    expected := \"Buzz\"\n    if observed := FizzBuzz(5); observed != expected {\n        t.Fatalf(\"FizzBuzz(5)) = %v, want %v\", observed, expected)\n    }\n}\n\nfunc TestFizzBuzz(t *testing.T) {\n    expected := \"FizzBuzz\"\n    if observed := FizzBuzz(15); observed != expected {\n        t.Fatalf(\"FizzBuzz(15)) = %v, want %v\", observed, expected)\n    }\n}\n\n// BenchmarkFizzBuzz() is a benchmarking function. These functions follow the\n// form \\`func BenchmarkXxx(*testing.B)\\` and can be used to test the performance\n// of your implementation. They may not be present in every exercise, but when\n// they are you can run them by including the \\`-bench\\` flag with the \\`go test\\`\n// command, like so: \\`go test -v --bench . --benchmem\\`\n//\n// You will see output similar to the following:\n//\n// BenchmarkFizzBuzz    2000000000           0.46 ns/op\n//\n// This means that the loop ran 2000000000 times at a speed of 0.46 ns per loop.\n//\n// While benchmarking can be useful to compare different iterations of the same\n// exercise, keep in mind that others will run the same benchmarks on different\n// machines, with different specs, so the results from these benchmark tests may\n// vary.\nfunc BenchmarkFizzBuzz(b *testing.B) {\n    for i := 0; i < b.N; i++ {\n        FizzBuzz(15)\n    }\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"fizz-buzz-implementation\"\n    }}>{`Fizz Buzz implementation`}</h2>\n    <p>{`We will use the interger-to-ASCII function `}<inlineCode parentName=\"p\">{`itoa`}</inlineCode>{` from the `}<inlineCode parentName=\"p\">{`strings`}</inlineCode>{` library.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-go\"\n      }}>{`package fizzbuzz\n\nimport \"strconv\"\n\n// FizzBuzz should have a comment documenting it.\nfunc FizzBuzz(i int) string {\n    switch true {\n    case i%15 == 0:\n        return \"FizzBuzz\"\n    case i%3 == 0:\n        return \"Fizz\"\n    case i%5 == 0:\n        return \"Buzz\"\n    default:\n        return strconv.Itoa(i)\n    }\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"running-tests\"\n    }}>{`Running Tests`}</h2>\n    <p>{`In the directory, run `}<inlineCode parentName=\"p\">{`go test`}</inlineCode>{`.`}</p>\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  "]}]}