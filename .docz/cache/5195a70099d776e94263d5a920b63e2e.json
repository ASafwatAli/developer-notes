{"remainingRequest":"/Users/okeeffe_d/Business/Documentation/node_modules/babel-loader/lib/index.js?{\"presets\":[[\"/Users/okeeffe_d/Business/Documentation/node_modules/babel-preset-docz/dist/index.js\",{\"flow\":true,\"typescript\":false,\"parseProps\":true}]],\"plugins\":[[\"/Users/okeeffe_d/Business/Documentation/node_modules/docz-utils/lib/named-asset-import.js\",{\"loaderMap\":{\"svg\":{\"ReactComponent\":\"@svgr/webpack?-prettier,-svgo![path]\"}}}]],\"babelrc\":false,\"cacheCompression\":true,\"compact\":true}!/Users/okeeffe_d/Business/Documentation/manual/COMP3520-OS/2-Process-Description-And-Control.md","dependencies":[{"path":"/Users/okeeffe_d/Business/Documentation/manual/COMP3520-OS/2-Process-Description-And-Control.md","mtime":1548209344279},{"path":"/Users/okeeffe_d/Business/Documentation/node_modules/cache-loader/dist/cjs.js","mtime":1548134640245},{"path":"/Users/okeeffe_d/Business/Documentation/node_modules/babel-loader/lib/index.js","mtime":1548134640227}],"contextDependencies":[],"result":["function _typeof(obj){if(typeof Symbol===\"function\"&&typeof Symbol.iterator===\"symbol\"){_typeof=function _typeof(obj){return typeof obj;};}else{_typeof=function _typeof(obj){return obj&&typeof Symbol===\"function\"&&obj.constructor===Symbol&&obj!==Symbol.prototype?\"symbol\":typeof obj;};}return _typeof(obj);}function _objectWithoutProperties(source,excluded){if(source==null)return{};var target=_objectWithoutPropertiesLoose(source,excluded);var key,i;if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++){key=sourceSymbolKeys[i];if(excluded.indexOf(key)>=0)continue;if(!Object.prototype.propertyIsEnumerable.call(source,key))continue;target[key]=source[key];}}return target;}function _objectWithoutPropertiesLoose(source,excluded){if(source==null)return{};var target={};var sourceKeys=Object.keys(source);var key,i;for(i=0;i<sourceKeys.length;i++){key=sourceKeys[i];if(excluded.indexOf(key)>=0)continue;target[key]=source[key];}return target;}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\");}}function _defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}function _createClass(Constructor,protoProps,staticProps){if(protoProps)_defineProperties(Constructor.prototype,protoProps);if(staticProps)_defineProperties(Constructor,staticProps);return Constructor;}function _possibleConstructorReturn(self,call){if(call&&(_typeof(call)===\"object\"||typeof call===\"function\")){return call;}return _assertThisInitialized(self);}function _assertThisInitialized(self){if(self===void 0){throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");}return self;}function _getPrototypeOf(o){_getPrototypeOf=Object.setPrototypeOf?Object.getPrototypeOf:function _getPrototypeOf(o){return o.__proto__||Object.getPrototypeOf(o);};return _getPrototypeOf(o);}function _inherits(subClass,superClass){if(typeof superClass!==\"function\"&&superClass!==null){throw new TypeError(\"Super expression must either be null or a function\");}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,writable:true,configurable:true}});if(superClass)_setPrototypeOf(subClass,superClass);}function _setPrototypeOf(o,p){_setPrototypeOf=Object.setPrototypeOf||function _setPrototypeOf(o,p){o.__proto__=p;return o;};return _setPrototypeOf(o,p);}import React from'react';import{MDXTag}from'@mdx-js/tag';var MDXContent=/*#__PURE__*/function(_React$Component){_inherits(MDXContent,_React$Component);function MDXContent(props){var _this;_classCallCheck(this,MDXContent);_this=_possibleConstructorReturn(this,_getPrototypeOf(MDXContent).call(this,props));_this.layout=null;return _this;}_createClass(MDXContent,[{key:\"render\",value:function render(){var _this$props=this.props,components=_this$props.components,props=_objectWithoutProperties(_this$props,[\"components\"]);return React.createElement(MDXTag,{name:\"wrapper\",components:components},React.createElement(MDXTag,{name:\"h1\",components:components,props:{\"id\":\"process-description-and-control\"}},\"Process Description and Control\"),React.createElement(MDXTag,{name:\"p\",components:components},React.createElement(MDXTag,{name:\"strong\",components:components,parentName:\"p\"},\"Objectives\")),React.createElement(MDXTag,{name:\"ul\",components:components},React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"How are processes represented and controlled by the OS\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"li\"},\"Process states\"),\" which characterize the behaviour of processes \"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"li\"},\"Data structures\"),\" used to manage processes\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"Ways in which the OS uses these data structures to control process execution\")),React.createElement(MDXTag,{name:\"h2\",components:components,props:{\"id\":\"operating-system\"}},\"Operating System\"),React.createElement(MDXTag,{name:\"p\",components:components},\"Program that controls the execution of application programs.\"),React.createElement(MDXTag,{name:\"ul\",components:components},React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"Interface between applications and hardware.\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"Frequently relinquishes control and must depend on the processor to allow it to regain control \\u2013 events driven\")),React.createElement(MDXTag,{name:\"h2\",components:components,props:{\"id\":\"system-calls\"}},\"System Calls\"),React.createElement(MDXTag,{name:\"ul\",components:components},React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"Typically high-level language (C or C++)\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"Access of programs through API rather than direct system call use \"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"3 common APIs are Win32, POSIX and Java API for JVM\")),React.createElement(MDXTag,{name:\"p\",components:components},React.createElement(MDXTag,{name:\"strong\",components:components,parentName:\"p\"},\"Types of system calls\"),\"\\n1. Process control\\n2. File management\\n3. Device management\\n4. Information maintenance\\n5. Communications\"),React.createElement(MDXTag,{name:\"p\",components:components},React.createElement(MDXTag,{name:\"strong\",components:components,parentName:\"p\"},\"Key elements of an OS\")),React.createElement(MDXTag,{name:\"ul\",components:components},React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"Service call Handler (<- service call to process)\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"Interrupt Handler (<- interrupt from Process/IO)\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"Short-Term Scheduler (-> Pass Control to Process)\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"Long-Term, Short-Term and I/O Queues\")),React.createElement(MDXTag,{name:\"p\",components:components},React.createElement(MDXTag,{name:\"strong\",components:components,parentName:\"p\"},\"System Call Implementation\")),React.createElement(MDXTag,{name:\"ul\",components:components},React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"Typically a number associated with each sys call\\n- sys-call interface maintains table indexed accordingly\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"Call invoked by interface in OS kernel and returns status of the system call and any return values\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"Caller need no nothing about implementation of call\")),React.createElement(MDXTag,{name:\"p\",components:components},React.createElement(MDXTag,{name:\"strong\",components:components,parentName:\"p\"},\"Shell Strategy\"),\"\\n1. Read keyboard\\n2. Shell Process\\n3. Fork a process\\n4. Process to execute command\\n5. f3 read file\"),React.createElement(MDXTag,{name:\"p\",components:components},React.createElement(MDXTag,{name:\"strong\",components:components,parentName:\"p\"},\"Process\"),\"\\nFundamental to the structure of operating systems\"),React.createElement(MDXTag,{name:\"p\",components:components},\"A process can be defined as:\\n1. A program in execution\\n2. An instance of a running program\\n3. The entity that can be assigned to, and executed on, a processor\\n4. Unit of activity characterized by a single sequential thread of execution, a current state and an associated set of system resources\"),React.createElement(MDXTag,{name:\"p\",components:components},React.createElement(MDXTag,{name:\"strong\",components:components,parentName:\"p\"},\"Uniprogramming\"),\"\\nProcessor must wait for I/O instruction to complete before proceeding.\"),React.createElement(MDXTag,{name:\"p\",components:components},React.createElement(MDXTag,{name:\"strong\",components:components,parentName:\"p\"},\"Multiprogramming\"),\"\\nWhen one job needs to wait for I/O, the processor can switch to the other job.\"),React.createElement(MDXTag,{name:\"p\",components:components},React.createElement(MDXTag,{name:\"strong\",components:components,parentName:\"p\"},\"Time Sharing Systems\")),React.createElement(MDXTag,{name:\"ul\",components:components},React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"Using multiprogramming to handle multiple interactive jobs \"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"Multiple users simultaneously access system through terminal \"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"Processor's time shared among multiple users \"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"Timesharing (multitasking): CPU switches jobs so frequently that users can interact with each job while it is running, creating interactive computing\\n- Response time < 1s\\n- Each user has at least one program executing in memory -> \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"li\"},\"process\"),\"\\n- If several jobs ready to run at the same time -> \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"li\"},\"CPU Scheduling\"),\"\\n- To ensure orderly execution -> \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"li\"},\"Synchronization\"),\" and \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"li\"},\"Communication\"),\"\\n- \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"li\"},\"Virtual memory\"),\" allows execution of processes not completely in memory\\n- Also need mechanisms for \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"li\"},\"Security and Protection\"))),React.createElement(MDXTag,{name:\"p\",components:components},React.createElement(MDXTag,{name:\"strong\",components:components,parentName:\"p\"},\"Process Management\")),React.createElement(MDXTag,{name:\"ul\",components:components},React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"li\"},\"The fundamental task\")),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"OS must...\\n- Allocate resources to processes and protect the resources of each process from others\\n- Interleave the execution of multiple processes\\n- Enable proc. to share and exchange info\\n- Enable sync. among processes\")),React.createElement(MDXTag,{name:\"p\",components:components},React.createElement(MDXTag,{name:\"strong\",components:components,parentName:\"p\"},\"Process elements\")),React.createElement(MDXTag,{name:\"p\",components:components},\"Process can be uniquely charactized by a number of attributes:\"),React.createElement(MDXTag,{name:\"ol\",components:components},React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ol\"},\"Identifier \"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ol\"},\"State\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ol\"},\"Priority \"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ol\"},\"Program counter \"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ol\"},\"Memory pointers \"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ol\"},\"Context data \"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ol\"},\"I/O status info \"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ol\"},\"Accounting info \")),React.createElement(MDXTag,{name:\"p\",components:components},React.createElement(MDXTag,{name:\"strong\",components:components,parentName:\"p\"},\"Process control block\")),React.createElement(MDXTag,{name:\"ul\",components:components},React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"Most important Data Structure in the OS\")),React.createElement(MDXTag,{name:\"h2\",components:components,props:{\"id\":\"process-tables\"}},\"Process Tables\"),React.createElement(MDXTag,{name:\"p\",components:components},\"OS tables must be linked or cross-referenced.\"),React.createElement(MDXTag,{name:\"p\",components:components},React.createElement(MDXTag,{name:\"strong\",components:components,parentName:\"p\"},\"Process Execution\")),React.createElement(MDXTag,{name:\"ul\",components:components},React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"li\"},\"Dispatcher\"),\" is a small program which switches the processor from one process to another\")),React.createElement(MDXTag,{name:\"p\",components:components},React.createElement(MDXTag,{name:\"strong\",components:components,parentName:\"p\"},\"Modes of Execution\")),React.createElement(MDXTag,{name:\"ol\",components:components},React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ol\"},\"User mode \",React.createElement(MDXTag,{name:\"ul\",components:components,parentName:\"li\"},React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"Less priviledge \"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"User programs typically execute in this mode \"))),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ol\"},\"System (or kernel mode)\",React.createElement(MDXTag,{name:\"ul\",components:components,parentName:\"li\"},React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"More priviledges \"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"Kernel of the OS\")))),React.createElement(MDXTag,{name:\"p\",components:components},React.createElement(MDXTag,{name:\"strong\",components:components,parentName:\"p\"},\"Two-State Process Model\")),React.createElement(MDXTag,{name:\"ul\",components:components},React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"State of a process may be defined by the current activity of that process\\n- Used to describe the behaviour that we would like each process to exhibit\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"Process may be \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"li\"},\"running\"),\" or \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"li\"},\"not-running\")),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"Think of the \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"li\"},\"queuing diagram\"))),React.createElement(MDXTag,{name:\"p\",components:components},React.createElement(MDXTag,{name:\"strong\",components:components,parentName:\"p\"},\"Five-State Process Model\")),React.createElement(MDXTag,{name:\"ul\",components:components},React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"Uses two queues\\n1. Admit\\n2. Ready Queue -> Dispatch\\n3. Process \",\"[-> release, -> timeout, -> event wait]\",\"\\n4. (if event wait ->) Blocked queue -> Event Occurs\\n5. (if release ->) exit\")),React.createElement(MDXTag,{name:\"p\",components:components},React.createElement(MDXTag,{name:\"strong\",components:components,parentName:\"p\"},\"Multiple Blocked Queues\")),React.createElement(MDXTag,{name:\"ul\",components:components},React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"Multiple events queues\\n- Event # wait -> Event # queue -> event # occurs\")),React.createElement(MDXTag,{name:\"h2\",components:components,props:{\"id\":\"switching-processes\"}},\"Switching Processes\"),React.createElement(MDXTag,{name:\"ul\",components:components},React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"What events trigger a process switch? \"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"What must the OS do to the various data structures under its control to achieve a process switch?\")),React.createElement(MDXTag,{name:\"p\",components:components},React.createElement(MDXTag,{name:\"strong\",components:components,parentName:\"p\"},\"When to switch\")),React.createElement(MDXTag,{name:\"p\",components:components},\"A process switch may occur any time that the OS has gained control from the currently running process. Possible events giving OS control are:\"),React.createElement(MDXTag,{name:\"table\",components:components},React.createElement(MDXTag,{name:\"thead\",components:components,parentName:\"table\"},React.createElement(MDXTag,{name:\"tr\",components:components,parentName:\"thead\"},React.createElement(MDXTag,{name:\"th\",components:components,parentName:\"tr\",props:{\"align\":null}},\"Mechanism\"),React.createElement(MDXTag,{name:\"th\",components:components,parentName:\"tr\",props:{\"align\":null}},\"Cause\"),React.createElement(MDXTag,{name:\"th\",components:components,parentName:\"tr\",props:{\"align\":null}},\"Use\"))),React.createElement(MDXTag,{name:\"tbody\",components:components,parentName:\"table\"},React.createElement(MDXTag,{name:\"tr\",components:components,parentName:\"tbody\"},React.createElement(MDXTag,{name:\"td\",components:components,parentName:\"tr\",props:{\"align\":null}},\"Interrupt\"),React.createElement(MDXTag,{name:\"td\",components:components,parentName:\"tr\",props:{\"align\":null}},\"External to exec of current instruction\"),React.createElement(MDXTag,{name:\"td\",components:components,parentName:\"tr\",props:{\"align\":null}},\"Reaction to an asynchronous external event\")),React.createElement(MDXTag,{name:\"tr\",components:components,parentName:\"tbody\"},React.createElement(MDXTag,{name:\"td\",components:components,parentName:\"tr\",props:{\"align\":null}},\"Trap\"),React.createElement(MDXTag,{name:\"td\",components:components,parentName:\"tr\",props:{\"align\":null}},\"Associated with exec of current instruction\"),React.createElement(MDXTag,{name:\"td\",components:components,parentName:\"tr\",props:{\"align\":null}},\"Handling of an error or an exception condition\")),React.createElement(MDXTag,{name:\"tr\",components:components,parentName:\"tbody\"},React.createElement(MDXTag,{name:\"td\",components:components,parentName:\"tr\",props:{\"align\":null}},\"Supervisor call\"),React.createElement(MDXTag,{name:\"td\",components:components,parentName:\"tr\",props:{\"align\":null}},\"Explicit request\"),React.createElement(MDXTag,{name:\"td\",components:components,parentName:\"tr\",props:{\"align\":null}},\"Call to an operating system function\")))),React.createElement(MDXTag,{name:\"h2\",components:components,props:{\"id\":\"system-interrupts\"}},\"System Interrupts\"),React.createElement(MDXTag,{name:\"p\",components:components},React.createElement(MDXTag,{name:\"strong\",components:components,parentName:\"p\"},\"Interrupt\")),React.createElement(MDXTag,{name:\"ul\",components:components},React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"Due to some sort of event external and independent of current running process\\n- clock interrupt\\n- I/O interrupt \"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"Time slice\\n- the max amount of time that a process can execute before being interrupted \")),React.createElement(MDXTag,{name:\"p\",components:components},React.createElement(MDXTag,{name:\"strong\",components:components,parentName:\"p\"},\"Trap\")),React.createElement(MDXTag,{name:\"ul\",components:components},React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"An error or exception condition generated within the currently running process \"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"OS determines if the condition is fatal\\n- moved to the Exit state and a process switch occurs\\n- action will depend on the nature of the error\")),React.createElement(MDXTag,{name:\"h2\",components:components,props:{\"id\":\"change-of-process-state\"}},\"Change of process state\"),React.createElement(MDXTag,{name:\"ol\",components:components},React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ol\"},\"Save context of processor \"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ol\"},\"Update process control block (PCB) of the process currently in \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"li\"},\"running\"),\" state\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ol\"},\"Move PCB of process to appropraite queue \"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ol\"},\"Select another process to exec \"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ol\"},\"Update PCB of process selected \"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ol\"},\"Update mem management data structures \"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ol\"},\"Restore context of processor to that which existed at the time the selected process was last switched out \")),React.createElement(MDXTag,{name:\"h2\",components:components,props:{\"id\":\"process-creation\"}},\"Process Creation\"),React.createElement(MDXTag,{name:\"p\",components:components},\"Once the OS decides to create a new process:\"),React.createElement(MDXTag,{name:\"ol\",components:components},React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ol\"},\"Assigned a unique process identifier to the new process \"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ol\"},\"Allocates space for the process \"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ol\"},\"Initializes the process control block \"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ol\"},\"Sets the appropriate linkages \"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ol\"},\"Creates or expands other data structures \")),React.createElement(MDXTag,{name:\"p\",components:components},\"Traditionally, OS created all processes - but it can be useful to let a running process create another \"),React.createElement(MDXTag,{name:\"ul\",components:components},React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"Known as \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"li\"},\"process spawning\"),\"\\n- \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"li\"},\"parent process\"),\" is the original, creating process\\n- \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"li\"},\"child process\"),\" is the new process \"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"Parent process create children processes, which, in turn create other processes, forming a tree of processes\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"Generally process identified and managed via a process identifier \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"li\"},\"pid\"),\" \"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"Resource sharing\\n- Parent and child share resources\\n- Child shares subset of parent's resource\\n- Parent and child share no resources \"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"Execution\\n- Parent and children execute concurrently\\n- Parent waits until children terminate \")),React.createElement(MDXTag,{name:\"p\",components:components},React.createElement(MDXTag,{name:\"strong\",components:components,parentName:\"p\"},\"UNIX Process Creation\")),React.createElement(MDXTag,{name:\"p\",components:components},\"Process creation is by means of the kernel system call \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"fork()\")),React.createElement(MDXTag,{name:\"p\",components:components},\"This causes the OS in Kernel Mode to do the following:\"),React.createElement(MDXTag,{name:\"ol\",components:components},React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ol\"},\"Allocate a slot in the process table for the new process.\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ol\"},\"Assign a unique process ID to the child process.\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ol\"},\"Copy of process image of the parent, with the exception of any shared memory.\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ol\"},\"Increment the counters for any files owned by the parent, to reflect that an additional process now also owns those files.\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ol\"},\"Assign the child process to the \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"li\"},\"Ready\"),\" state.\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ol\"},\"Returns the ID number of the child to the parent process, and a 0 value to the child process.\")),React.createElement(MDXTag,{name:\"p\",components:components},\"Post creation, the Kernel can do one of the following as part of the dispatcher routine:\"),React.createElement(MDXTag,{name:\"ul\",components:components},React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"Stay in the parent process \"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"Transfer control to child \"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"Transfer control to another process \")),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{\"className\":\"language-c\"}},\"int main() {\\n    pid_t pid;\\n    /* fork another process */\\n    pid = fork();\\n\\n    if (pid < 0) { /* error occurred */\\n        fprintf(stderr, \\\"Fork Failed\\\");\\n        exit(-1); \\n    } else if (pid == 0) { \\n        /* child process */\\n        execlp(\\\"/bin/ls\\\", \\\"ls\\\", NULL); \\n    } else { \\n        /* parent process */\\n        /* parent will wait for the child to complete */ \\n        wait (NULL);\\n        printf (\\\"Child Complete\\\");\\n        exit(0);\\n    }\\n}\\n\")),React.createElement(MDXTag,{name:\"p\",components:components},React.createElement(MDXTag,{name:\"strong\",components:components,parentName:\"p\"},\"Process Termination\")),React.createElement(MDXTag,{name:\"p\",components:components},\"There must be some way that a process can indicate completion.\"),React.createElement(MDXTag,{name:\"p\",components:components},\"This indication may be:\\n1. A HALT instruction generating an interrupt alert to the OS.\\n2. A user action (e.g. log off, quitting an application)\\n3. A fault or error\\n4. Parent process terminating \"),React.createElement(MDXTag,{name:\"p\",components:components},React.createElement(MDXTag,{name:\"strong\",components:components,parentName:\"p\"},\"Security Issues\")),React.createElement(MDXTag,{name:\"p\",components:components},\"An OS associates a set of priviledges with each process.\"),React.createElement(MDXTag,{name:\"p\",components:components},\"A key security issue in the design of any OS is to prevent anything (user or process) from gaining unauthorized priviledges on the system.\"),React.createElement(MDXTag,{name:\"h2\",components:components,props:{\"id\":\"summary\"}},\"Summary\"),React.createElement(MDXTag,{name:\"p\",components:components},\"-The principal function of the OS is to create, manage, and terminate processes\"),React.createElement(MDXTag,{name:\"ul\",components:components},React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"The most fundamental concept in a modern OS is the process\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"Process control block contains all of the information that is required for the OS to manage the process, including its current state, resources allocated to it, priority, and other relevant data\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"The most important states are Ready, Running and Blocked\\n\\u2013 The running process is the one that is currently being executed by the processor\\n\\u2013 A blocked process is waiting for the completion of some event\\n\\u2013 A running process is interrupted either by an interrupt or by executing a supervisor call to the OS\")));}}]);return MDXContent;}(React.Component);export{MDXContent as default};MDXContent.__docgenInfo={\"description\":\"\",\"methods\":[],\"displayName\":\"MDXContent\"};",{"version":3,"sources":["/Users/okeeffe_d/Business/Documentation/manual/COMP3520-OS/2-Process-Description-And-Control.md"],"names":["React","MDXTag","MDXContent","props","layout","components","Component"],"mappings":"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","sourcesContent":["\n  import React from 'react'\n  import { MDXTag } from '@mdx-js/tag'\n  \n\nexport default class MDXContent extends React.Component {\n  constructor(props) {\n    super(props)\n    this.layout = null\n  }\n  render() {\n    const { components, ...props } = this.props\n\n    return <MDXTag\n             name=\"wrapper\"\n             \n             components={components}><MDXTag name=\"h1\" components={components} props={{\"id\":\"process-description-and-control\"}}>{`Process Description and Control`}</MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"strong\" components={components} parentName=\"p\">{`Objectives`}</MDXTag></MDXTag>\n<MDXTag name=\"ul\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`How are processes represented and controlled by the OS`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`Process states`}</MDXTag>{` which characterize the behaviour of processes `}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`Data structures`}</MDXTag>{` used to manage processes`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Ways in which the OS uses these data structures to control process execution`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"operating-system\"}}>{`Operating System`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Program that controls the execution of application programs.`}</MDXTag>\n<MDXTag name=\"ul\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Interface between applications and hardware.`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Frequently relinquishes control and must depend on the processor to allow it to regain control – events driven`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"system-calls\"}}>{`System Calls`}</MDXTag>\n<MDXTag name=\"ul\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Typically high-level language (C or C++)`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Access of programs through API rather than direct system call use `}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`3 common APIs are Win32, POSIX and Java API for JVM`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"strong\" components={components} parentName=\"p\">{`Types of system calls`}</MDXTag>{`\n1. Process control\n2. File management\n3. Device management\n4. Information maintenance\n5. Communications`}</MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"strong\" components={components} parentName=\"p\">{`Key elements of an OS`}</MDXTag></MDXTag>\n<MDXTag name=\"ul\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Service call Handler (<- service call to process)`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Interrupt Handler (<- interrupt from Process/IO)`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Short-Term Scheduler (-> Pass Control to Process)`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Long-Term, Short-Term and I/O Queues`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"strong\" components={components} parentName=\"p\">{`System Call Implementation`}</MDXTag></MDXTag>\n<MDXTag name=\"ul\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Typically a number associated with each sys call\n- sys-call interface maintains table indexed accordingly`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Call invoked by interface in OS kernel and returns status of the system call and any return values`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Caller need no nothing about implementation of call`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"strong\" components={components} parentName=\"p\">{`Shell Strategy`}</MDXTag>{`\n1. Read keyboard\n2. Shell Process\n3. Fork a process\n4. Process to execute command\n5. f3 read file`}</MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"strong\" components={components} parentName=\"p\">{`Process`}</MDXTag>{`\nFundamental to the structure of operating systems`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`A process can be defined as:\n1. A program in execution\n2. An instance of a running program\n3. The entity that can be assigned to, and executed on, a processor\n4. Unit of activity characterized by a single sequential thread of execution, a current state and an associated set of system resources`}</MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"strong\" components={components} parentName=\"p\">{`Uniprogramming`}</MDXTag>{`\nProcessor must wait for I/O instruction to complete before proceeding.`}</MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"strong\" components={components} parentName=\"p\">{`Multiprogramming`}</MDXTag>{`\nWhen one job needs to wait for I/O, the processor can switch to the other job.`}</MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"strong\" components={components} parentName=\"p\">{`Time Sharing Systems`}</MDXTag></MDXTag>\n<MDXTag name=\"ul\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Using multiprogramming to handle multiple interactive jobs `}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Multiple users simultaneously access system through terminal `}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Processor's time shared among multiple users `}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Timesharing (multitasking): CPU switches jobs so frequently that users can interact with each job while it is running, creating interactive computing\n- Response time < 1s\n- Each user has at least one program executing in memory -> `}<MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`process`}</MDXTag>{`\n- If several jobs ready to run at the same time -> `}<MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`CPU Scheduling`}</MDXTag>{`\n- To ensure orderly execution -> `}<MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`Synchronization`}</MDXTag>{` and `}<MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`Communication`}</MDXTag>{`\n- `}<MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`Virtual memory`}</MDXTag>{` allows execution of processes not completely in memory\n- Also need mechanisms for `}<MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`Security and Protection`}</MDXTag></MDXTag>\n</MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"strong\" components={components} parentName=\"p\">{`Process Management`}</MDXTag></MDXTag>\n<MDXTag name=\"ul\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`The fundamental task`}</MDXTag></MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`OS must...\n- Allocate resources to processes and protect the resources of each process from others\n- Interleave the execution of multiple processes\n- Enable proc. to share and exchange info\n- Enable sync. among processes`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"strong\" components={components} parentName=\"p\">{`Process elements`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`Process can be uniquely charactized by a number of attributes:`}</MDXTag>\n<MDXTag name=\"ol\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ol\">{`Identifier `}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ol\">{`State`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ol\">{`Priority `}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ol\">{`Program counter `}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ol\">{`Memory pointers `}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ol\">{`Context data `}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ol\">{`I/O status info `}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ol\">{`Accounting info `}</MDXTag>\n</MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"strong\" components={components} parentName=\"p\">{`Process control block`}</MDXTag></MDXTag>\n<MDXTag name=\"ul\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Most important Data Structure in the OS`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"process-tables\"}}>{`Process Tables`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`OS tables must be linked or cross-referenced.`}</MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"strong\" components={components} parentName=\"p\">{`Process Execution`}</MDXTag></MDXTag>\n<MDXTag name=\"ul\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`Dispatcher`}</MDXTag>{` is a small program which switches the processor from one process to another`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"strong\" components={components} parentName=\"p\">{`Modes of Execution`}</MDXTag></MDXTag>\n<MDXTag name=\"ol\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ol\">{`User mode `}<MDXTag name=\"ul\" components={components} parentName=\"li\">\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Less priviledge `}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`User programs typically execute in this mode `}</MDXTag>\n</MDXTag></MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ol\">{`System (or kernel mode)`}<MDXTag name=\"ul\" components={components} parentName=\"li\">\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`More priviledges `}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Kernel of the OS`}</MDXTag>\n</MDXTag></MDXTag>\n</MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"strong\" components={components} parentName=\"p\">{`Two-State Process Model`}</MDXTag></MDXTag>\n<MDXTag name=\"ul\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`State of a process may be defined by the current activity of that process\n- Used to describe the behaviour that we would like each process to exhibit`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Process may be `}<MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`running`}</MDXTag>{` or `}<MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`not-running`}</MDXTag></MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Think of the `}<MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`queuing diagram`}</MDXTag></MDXTag>\n</MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"strong\" components={components} parentName=\"p\">{`Five-State Process Model`}</MDXTag></MDXTag>\n<MDXTag name=\"ul\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Uses two queues\n1. Admit\n2. Ready Queue -> Dispatch\n3. Process `}{`[-> release, -> timeout, -> event wait]`}{`\n4. (if event wait ->) Blocked queue -> Event Occurs\n5. (if release ->) exit`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"strong\" components={components} parentName=\"p\">{`Multiple Blocked Queues`}</MDXTag></MDXTag>\n<MDXTag name=\"ul\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Multiple events queues\n- Event # wait -> Event # queue -> event # occurs`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"switching-processes\"}}>{`Switching Processes`}</MDXTag>\n<MDXTag name=\"ul\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`What events trigger a process switch? `}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`What must the OS do to the various data structures under its control to achieve a process switch?`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"strong\" components={components} parentName=\"p\">{`When to switch`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`A process switch may occur any time that the OS has gained control from the currently running process. Possible events giving OS control are:`}</MDXTag>\n<MDXTag name=\"table\" components={components}>\n<MDXTag name=\"thead\" components={components} parentName=\"table\">\n<MDXTag name=\"tr\" components={components} parentName=\"thead\">\n<MDXTag name=\"th\" components={components} parentName=\"tr\" props={{\"align\":null}}>{`Mechanism`}</MDXTag>\n<MDXTag name=\"th\" components={components} parentName=\"tr\" props={{\"align\":null}}>{`Cause`}</MDXTag>\n<MDXTag name=\"th\" components={components} parentName=\"tr\" props={{\"align\":null}}>{`Use`}</MDXTag>\n</MDXTag>\n</MDXTag>\n<MDXTag name=\"tbody\" components={components} parentName=\"table\">\n<MDXTag name=\"tr\" components={components} parentName=\"tbody\">\n<MDXTag name=\"td\" components={components} parentName=\"tr\" props={{\"align\":null}}>{`Interrupt`}</MDXTag>\n<MDXTag name=\"td\" components={components} parentName=\"tr\" props={{\"align\":null}}>{`External to exec of current instruction`}</MDXTag>\n<MDXTag name=\"td\" components={components} parentName=\"tr\" props={{\"align\":null}}>{`Reaction to an asynchronous external event`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"tr\" components={components} parentName=\"tbody\">\n<MDXTag name=\"td\" components={components} parentName=\"tr\" props={{\"align\":null}}>{`Trap`}</MDXTag>\n<MDXTag name=\"td\" components={components} parentName=\"tr\" props={{\"align\":null}}>{`Associated with exec of current instruction`}</MDXTag>\n<MDXTag name=\"td\" components={components} parentName=\"tr\" props={{\"align\":null}}>{`Handling of an error or an exception condition`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"tr\" components={components} parentName=\"tbody\">\n<MDXTag name=\"td\" components={components} parentName=\"tr\" props={{\"align\":null}}>{`Supervisor call`}</MDXTag>\n<MDXTag name=\"td\" components={components} parentName=\"tr\" props={{\"align\":null}}>{`Explicit request`}</MDXTag>\n<MDXTag name=\"td\" components={components} parentName=\"tr\" props={{\"align\":null}}>{`Call to an operating system function`}</MDXTag>\n</MDXTag>\n</MDXTag>\n</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"system-interrupts\"}}>{`System Interrupts`}</MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"strong\" components={components} parentName=\"p\">{`Interrupt`}</MDXTag></MDXTag>\n<MDXTag name=\"ul\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Due to some sort of event external and independent of current running process\n- clock interrupt\n- I/O interrupt `}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Time slice\n- the max amount of time that a process can execute before being interrupted `}</MDXTag>\n</MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"strong\" components={components} parentName=\"p\">{`Trap`}</MDXTag></MDXTag>\n<MDXTag name=\"ul\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`An error or exception condition generated within the currently running process `}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`OS determines if the condition is fatal\n- moved to the Exit state and a process switch occurs\n- action will depend on the nature of the error`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"change-of-process-state\"}}>{`Change of process state`}</MDXTag>\n<MDXTag name=\"ol\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ol\">{`Save context of processor `}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ol\">{`Update process control block (PCB) of the process currently in `}<MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`running`}</MDXTag>{` state`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ol\">{`Move PCB of process to appropraite queue `}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ol\">{`Select another process to exec `}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ol\">{`Update PCB of process selected `}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ol\">{`Update mem management data structures `}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ol\">{`Restore context of processor to that which existed at the time the selected process was last switched out `}</MDXTag>\n</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"process-creation\"}}>{`Process Creation`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Once the OS decides to create a new process:`}</MDXTag>\n<MDXTag name=\"ol\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ol\">{`Assigned a unique process identifier to the new process `}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ol\">{`Allocates space for the process `}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ol\">{`Initializes the process control block `}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ol\">{`Sets the appropriate linkages `}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ol\">{`Creates or expands other data structures `}</MDXTag>\n</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Traditionally, OS created all processes - but it can be useful to let a running process create another `}</MDXTag>\n<MDXTag name=\"ul\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Known as `}<MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`process spawning`}</MDXTag>{`\n- `}<MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`parent process`}</MDXTag>{` is the original, creating process\n- `}<MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`child process`}</MDXTag>{` is the new process `}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Parent process create children processes, which, in turn create other processes, forming a tree of processes`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Generally process identified and managed via a process identifier `}<MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`pid`}</MDXTag>{` `}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Resource sharing\n- Parent and child share resources\n- Child shares subset of parent's resource\n- Parent and child share no resources `}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Execution\n- Parent and children execute concurrently\n- Parent waits until children terminate `}</MDXTag>\n</MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"strong\" components={components} parentName=\"p\">{`UNIX Process Creation`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`Process creation is by means of the kernel system call `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`fork()`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`This causes the OS in Kernel Mode to do the following:`}</MDXTag>\n<MDXTag name=\"ol\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ol\">{`Allocate a slot in the process table for the new process.`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ol\">{`Assign a unique process ID to the child process.`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ol\">{`Copy of process image of the parent, with the exception of any shared memory.`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ol\">{`Increment the counters for any files owned by the parent, to reflect that an additional process now also owns those files.`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ol\">{`Assign the child process to the `}<MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`Ready`}</MDXTag>{` state.`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ol\">{`Returns the ID number of the child to the parent process, and a 0 value to the child process.`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Post creation, the Kernel can do one of the following as part of the dispatcher routine:`}</MDXTag>\n<MDXTag name=\"ul\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Stay in the parent process `}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Transfer control to child `}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Transfer control to another process `}</MDXTag>\n</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-c\"}}>{`int main() {\n    pid_t pid;\n    /* fork another process */\n    pid = fork();\n\n    if (pid < 0) { /* error occurred */\n        fprintf(stderr, \"Fork Failed\");\n        exit(-1); \n    } else if (pid == 0) { \n        /* child process */\n        execlp(\"/bin/ls\", \"ls\", NULL); \n    } else { \n        /* parent process */\n        /* parent will wait for the child to complete */ \n        wait (NULL);\n        printf (\"Child Complete\");\n        exit(0);\n    }\n}\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"strong\" components={components} parentName=\"p\">{`Process Termination`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`There must be some way that a process can indicate completion.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`This indication may be:\n1. A HALT instruction generating an interrupt alert to the OS.\n2. A user action (e.g. log off, quitting an application)\n3. A fault or error\n4. Parent process terminating `}</MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"strong\" components={components} parentName=\"p\">{`Security Issues`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`An OS associates a set of priviledges with each process.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`A key security issue in the design of any OS is to prevent anything (user or process) from gaining unauthorized priviledges on the system.`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"summary\"}}>{`Summary`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`-The principal function of the OS is to create, manage, and terminate processes`}</MDXTag>\n<MDXTag name=\"ul\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`The most fundamental concept in a modern OS is the process`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Process control block contains all of the information that is required for the OS to manage the process, including its current state, resources allocated to it, priority, and other relevant data`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`The most important states are Ready, Running and Blocked\n– The running process is the one that is currently being executed by the processor\n– A blocked process is waiting for the completion of some event\n– A running process is interrupted either by an interrupt or by executing a supervisor call to the OS`}</MDXTag>\n</MDXTag>\n           </MDXTag>\n  }\n}\n  "]}]}