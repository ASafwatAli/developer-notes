{"remainingRequest":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/docz-core/node_modules/babel-loader/lib/index.js??ref--6-1!/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/@mdx-js/loader/index.js??ref--6-2!/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/source-map-loader/index.js!/Users/dennis.okeeffe/Project-Imposter/developer-notes/manual/Go/Go-Basic-Slices.md","dependencies":[{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/manual/Go/Go-Basic-Slices.md","mtime":1562563032037},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/cache-loader/dist/cjs.js","mtime":1564095360956},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/docz-core/node_modules/babel-loader/lib/index.js","mtime":1562568123838},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/@mdx-js/loader/index.js","mtime":1565139338792},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/source-map-loader/index.js","mtime":1564095361765}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9vYmplY3RXaXRob3V0UHJvcGVydGllcyBmcm9tIi9Vc2Vycy9kZW5uaXMub2tlZWZmZS9Qcm9qZWN0LUltcG9zdGVyL2RldmVsb3Blci1ub3Rlcy9ub2RlX21vZHVsZXMvYmFiZWwtcHJlc2V0LXJlYWN0LWFwcC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0V2l0aG91dFByb3BlcnRpZXMiOy8qIEBqc3ggbWR4ICovaW1wb3J0IFJlYWN0IGZyb20ncmVhY3QnO2ltcG9ydHttZHh9ZnJvbSdAbWR4LWpzL3JlYWN0JzsvKiBAanN4IG1keCAqL3ZhciBtYWtlU2hvcnRjb2RlPWZ1bmN0aW9uIG1ha2VTaG9ydGNvZGUobmFtZSl7cmV0dXJuIGZ1bmN0aW9uIE1EWERlZmF1bHRTaG9ydGNvZGUocHJvcHMpe2NvbnNvbGUud2FybigiQ29tcG9uZW50ICIrbmFtZSsiIHdhcyBub3QgaW1wb3J0ZWQsIGV4cG9ydGVkLCBvciBwcm92aWRlZCBieSBNRFhQcm92aWRlciBhcyBnbG9iYWwgc2NvcGUiKTtyZXR1cm4gbWR4KCJkaXYiLHByb3BzKTt9O307dmFyIGxheW91dFByb3BzPXt9O3ZhciBNRFhMYXlvdXQ9IndyYXBwZXIiO2V4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIE1EWENvbnRlbnQoX3JlZil7dmFyIGNvbXBvbmVudHM9X3JlZi5jb21wb25lbnRzLHByb3BzPV9vYmplY3RXaXRob3V0UHJvcGVydGllcyhfcmVmLFsiY29tcG9uZW50cyJdKTtyZXR1cm4gbWR4KE1EWExheW91dCxPYmplY3QuYXNzaWduKHt9LGxheW91dFByb3BzLHByb3BzLHtjb21wb25lbnRzOmNvbXBvbmVudHMsbWR4VHlwZToiTURYTGF5b3V0In0pLG1keCgiaDEiLHsiaWQiOiJiYXNpYy1zbGljZS1mdW5jdGlvbnMifSwiQmFzaWMgU2xpY2UgRnVuY3Rpb25zIiksbWR4KCJwIixudWxsLCJTZXQgdXAgdGhlIGZvbGRlciB3aXRoIHRlc3QgYW5kIG1haW4gZmlsZToiKSxtZHgoInByZSIsbnVsbCxtZHgoImNvZGUiLE9iamVjdC5hc3NpZ24oe3BhcmVudE5hbWU6InByZSJ9LHsiY2xhc3NOYW1lIjoibGFuZ3VhZ2UtZ28ifSksIi8vIHNsaWNlc190ZXN0LmdvXG5wYWNrYWdlIHNsaWNlc1xuXG5pbXBvcnQgKFxuICAgIFwidGVzdGluZ1wiXG4pXG5cbi8vIHNsaWNlcy5nb1xucGFja2FnZSBzbGljZXNcbiIpKSxtZHgoImgyIix7ImlkIjoicHVzaCJ9LCJQdXNoIiksbWR4KCJwcmUiLG51bGwsbWR4KCJjb2RlIixPYmplY3QuYXNzaWduKHtwYXJlbnROYW1lOiJwcmUifSx7ImNsYXNzTmFtZSI6Imxhbmd1YWdlLWdvIn0pLCIvLyBzbGljZXNfdGVzdC5nb1xuZnVuYyBUZXN0UHVzaFRvSW50U2xpY2UodCAqdGVzdGluZy5UKSB7XG4gICAgcyA6PSBbXWludHsxLCAyLCAzfVxuICAgIGkgOj0gNFxuXG4gICAgZXhwIDo9IFtdaW50ezEsIDIsIDMsIDR9XG4gICAgcmVzIDo9IFB1c2gocywgaSlcbiAgICBmb3IgaWR4LCB2YWwgOj0gcmFuZ2UgcmVzIHtcbiAgICAgICAgaWYgZXhwW2lkeF0gIT0gdmFsIHtcbiAgICAgICAgICAgIHQuRmF0YWxmKFwiRXhwZWN0ZWQgJSt2LCBnb3QgJSt2XCIsIGV4cCwgcmVzKVxuICAgICAgICB9XG4gICAgfVxufVxuXG4vLyBQdXNoIGFwcGVuZCBpbnQgdG8gZW5kIG9mIGludCBzbGljZVxuZnVuYyBQdXNoKGEgW11pbnQsIGIgaW50KSBbXWludCB7XG4gICAgcmV0dXJuIGFwcGVuZChhLCBiKVxufVxuIikpLG1keCgiaDIiLHsiaWQiOiJwb3AifSwiUG9wIiksbWR4KCJwcmUiLG51bGwsbWR4KCJjb2RlIixPYmplY3QuYXNzaWduKHtwYXJlbnROYW1lOiJwcmUifSx7ImNsYXNzTmFtZSI6Imxhbmd1YWdlLWdvIn0pLCIvLyBzbGljZXNfdGVzdC5nb1xuZnVuYyBUZXN0UG9wSW50RnJvbVNsaWNlU2xpY2UodCAqdGVzdGluZy5UKSB7XG4gICAgcyA6PSBbXWludHsxLCAyLCAzLCA0fVxuXG4gICAgZXhwQXJyIDo9IFtdaW50ezEsIDIsIDN9XG4gICAgZXhwIDo9IDRcblxuICAgIHJlcywgcmVzQXJyIDo9IFBvcChzKVxuICAgIGZvciBpZHgsIHZhbCA6PSByYW5nZSByZXNBcnIge1xuICAgICAgICBpZiBleHBBcnJbaWR4XSAhPSB2YWwge1xuICAgICAgICAgICAgdC5GYXRhbGYoXCJFeHBlY3RlZCAlK3YsIGdvdCAlK3ZcIiwgZXhwLCByZXMpXG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBpZiBleHAgIT0gcmVzIHtcbiAgICAgICAgdC5GYXRhbGYoXCJQb3BwZWQgaW50ZWdlciBub3QgYXMgZXhwZWN0ZWRcIilcbiAgICB9XG59XG5cbi8vIFBvcCByZXR1cm4gYW4gaW50ZWdlciBmcm9tIGFuIGFycmF5ICsgYXJyYXkgd2l0aG91dCBsYXN0IGluZGV4XG5mdW5jIFBvcChhIFtdaW50KSAoaW50LCBbXWludCkge1xuICAgIHgsIGIgOj0gYVtsZW4oYSktMV0sIGFbOmxlbihhKS0xXVxuICAgIHJldHVybiB4LCBiXG59XG4iKSksbWR4KCJoMiIseyJpZCI6InVuc2hpZnQifSwiVW5zaGlmdCIpLG1keCgicHJlIixudWxsLG1keCgiY29kZSIsT2JqZWN0LmFzc2lnbih7cGFyZW50TmFtZToicHJlIn0seyJjbGFzc05hbWUiOiJsYW5ndWFnZS1nbyJ9KSwiLy8gc2xpY2VzX3Rlc3QuZ29cblxuLy8gVW5zaGlmdCBhcHBlbmQgYXMgZmlyc3QgZWxlbWVudCBhbmQgcmV0dXJuIG5ldyBzbGljZVxuZnVuYyBVbnNoaWZ0KGEgW11pbnQsIGIgaW50KSBbXWludCB7XG4gICAgcmV0dXJuIGFwcGVuZChbXWludHtifSwgYS4uLilcbn1cbiIpKSxtZHgoImgyIix7ImlkIjoic2hpZnQifSwiU2hpZnQiKSxtZHgoInByZSIsbnVsbCxtZHgoImNvZGUiLE9iamVjdC5hc3NpZ24oe3BhcmVudE5hbWU6InByZSJ9LHsiY2xhc3NOYW1lIjoibGFuZ3VhZ2UtZ28ifSksIi8vIHNsaWNlc190ZXN0LmdvXG5cbi8vIFNoaWZ0IHJlbW92ZSBmcm9tIGZyb250IGFuZCByZXR1cm4gaW50IGFuZCBuZXcgc2xpY2VcbmZ1bmMgU2hpZnQoYSBbXWludCkgKGludCwgW11pbnQpIHtcbiAgICB4LCBiIDo9IGFbMF0sIGFbMTpdXG4gICAgcmV0dXJuIHgsIGJcbn1cbiIpKSk7fWlmKHR5cGVvZiBNRFhDb250ZW50IT09J3VuZGVmaW5lZCcmJk1EWENvbnRlbnQmJk1EWENvbnRlbnQ9PT1PYmplY3QoTURYQ29udGVudCkmJk9iamVjdC5pc0V4dGVuc2libGUoTURYQ29udGVudCkpe09iamVjdC5kZWZpbmVQcm9wZXJ0eShNRFhDb250ZW50LCdfX2ZpbGVtZXRhJyx7ZW51bWVyYWJsZTp0cnVlLGNvbmZpZ3VyYWJsZTp0cnVlLHZhbHVlOntuYW1lOiJNRFhDb250ZW50IixmaWxlbmFtZToibWFudWFsL0dvL0dvLUJhc2ljLVNsaWNlcy5tZCJ9fSk7fU1EWENvbnRlbnQuaXNNRFhDb21wb25lbnQ9dHJ1ZTs="},{"version":3,"sources":["/Users/dennis.okeeffe/Project-Imposter/developer-notes/manual/Go/Go-Basic-Slices.md"],"names":["React","mdx","makeShortcode","name","MDXDefaultShortcode","props","console","warn","layoutProps","MDXLayout","MDXContent","components","isMDXComponent"],"mappings":"iMAAA,cACE,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,GAAT,KAAoB,eAApB,CACA,cAGF,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAAAC,IAAI,QAAI,SAASC,CAAAA,mBAAT,CAA6BC,KAA7B,CAAoC,CAChEC,OAAO,CAACC,IAAR,CAAa,aAAeJ,IAAf,CAAsB,yEAAnC,EACA,MAAO,WAASE,KAAT,CAAP,CACD,CAHyB,EAA1B,CAKA,GAAMG,CAAAA,WAAW,CAAG,EAApB,CAGA,GAAMC,CAAAA,SAAS,CAAG,SAAlB,CACA,cAAe,SAASC,CAAAA,UAAT,MAGZ,IAFDC,CAAAA,UAEC,MAFDA,UAEC,CADEN,KACF,+CACD,MAAO,KAAC,SAAD,kBAAeG,WAAf,CAAgCH,KAAhC,EAAuC,UAAU,CAAEM,UAAnD,CAA+D,OAAO,CAAC,WAAvE,GACL,SAAQ,CACN,KAAM,uBADA,CAAR,yBADK,CAIL,0DAJK,CAKL,eAAK,0BAAM,UAAU,CAAC,KAAjB,EAA2B,CAC5B,YAAa,aADe,CAA3B,wGAAL,CALK,CAiBL,SAAQ,CACN,KAAM,MADA,CAAR,QAjBK,CAoBL,eAAK,0BAAM,UAAU,CAAC,KAAjB,EAA2B,CAC5B,YAAa,aADe,CAA3B,qZAAL,CApBK,CAyCL,SAAQ,CACN,KAAM,KADA,CAAR,OAzCK,CA4CL,eAAK,0BAAM,UAAU,CAAC,KAAjB,EAA2B,CAC5B,YAAa,aADe,CAA3B,yjBAAL,CA5CK,CAuEL,SAAQ,CACN,KAAM,SADA,CAAR,WAvEK,CA0EL,eAAK,0BAAM,UAAU,CAAC,KAAjB,EAA2B,CAC5B,YAAa,aADe,CAA3B,+JAAL,CA1EK,CAmFL,SAAQ,CACN,KAAM,OADA,CAAR,SAnFK,CAsFL,eAAK,0BAAM,UAAU,CAAC,KAAjB,EAA2B,CAC5B,YAAa,aADe,CAA3B,oKAAL,CAtFK,CAAP,CAiGD,C,wQAEDD,UAAU,CAACE,cAAX,CAA4B,IAA5B","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"basic-slice-functions\"\n    }}>{`Basic Slice Functions`}</h1>\n    <p>{`Set up the folder with test and main file:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-go\"\n      }}>{`// slices_test.go\npackage slices\n\nimport (\n    \"testing\"\n)\n\n// slices.go\npackage slices\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"push\"\n    }}>{`Push`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-go\"\n      }}>{`// slices_test.go\nfunc TestPushToIntSlice(t *testing.T) {\n    s := []int{1, 2, 3}\n    i := 4\n\n    exp := []int{1, 2, 3, 4}\n    res := Push(s, i)\n    for idx, val := range res {\n        if exp[idx] != val {\n            t.Fatalf(\"Expected %+v, got %+v\", exp, res)\n        }\n    }\n}\n\n// Push append int to end of int slice\nfunc Push(a []int, b int) []int {\n    return append(a, b)\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"pop\"\n    }}>{`Pop`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-go\"\n      }}>{`// slices_test.go\nfunc TestPopIntFromSliceSlice(t *testing.T) {\n    s := []int{1, 2, 3, 4}\n\n    expArr := []int{1, 2, 3}\n    exp := 4\n\n    res, resArr := Pop(s)\n    for idx, val := range resArr {\n        if expArr[idx] != val {\n            t.Fatalf(\"Expected %+v, got %+v\", exp, res)\n        }\n    }\n\n    if exp != res {\n        t.Fatalf(\"Popped integer not as expected\")\n    }\n}\n\n// Pop return an integer from an array + array without last index\nfunc Pop(a []int) (int, []int) {\n    x, b := a[len(a)-1], a[:len(a)-1]\n    return x, b\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"unshift\"\n    }}>{`Unshift`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-go\"\n      }}>{`// slices_test.go\n\n// Unshift append as first element and return new slice\nfunc Unshift(a []int, b int) []int {\n    return append([]int{b}, a...)\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"shift\"\n    }}>{`Shift`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-go\"\n      }}>{`// slices_test.go\n\n// Shift remove from front and return int and new slice\nfunc Shift(a []int) (int, []int) {\n    x, b := a[0], a[1:]\n    return x, b\n}\n`}</code></pre>\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  "]}]}