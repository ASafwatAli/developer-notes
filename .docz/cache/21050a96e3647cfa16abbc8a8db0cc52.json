{"remainingRequest":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/docz-core/node_modules/babel-loader/lib/index.js??ref--6-1!/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/@mdx-js/loader/index.js??ref--6-2!/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/source-map-loader/index.js!/Users/dennis.okeeffe/Project-Imposter/developer-notes/manual/Sketch/Principles.md","dependencies":[{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/manual/Sketch/Principles.md","mtime":1562563032090},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/cache-loader/dist/cjs.js","mtime":1564095360956},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/docz-core/node_modules/babel-loader/lib/index.js","mtime":1562568123838},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/@mdx-js/loader/index.js","mtime":1565139338792},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/source-map-loader/index.js","mtime":1564095361765}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9vYmplY3RXaXRob3V0UHJvcGVydGllcyBmcm9tIi9Vc2Vycy9kZW5uaXMub2tlZWZmZS9Qcm9qZWN0LUltcG9zdGVyL2RldmVsb3Blci1ub3Rlcy9ub2RlX21vZHVsZXMvYmFiZWwtcHJlc2V0LXJlYWN0LWFwcC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0V2l0aG91dFByb3BlcnRpZXMiOy8qIEBqc3ggbWR4ICovaW1wb3J0IFJlYWN0IGZyb20ncmVhY3QnO2ltcG9ydHttZHh9ZnJvbSdAbWR4LWpzL3JlYWN0JzsvKiBAanN4IG1keCAqL3ZhciBtYWtlU2hvcnRjb2RlPWZ1bmN0aW9uIG1ha2VTaG9ydGNvZGUobmFtZSl7cmV0dXJuIGZ1bmN0aW9uIE1EWERlZmF1bHRTaG9ydGNvZGUocHJvcHMpe2NvbnNvbGUud2FybigiQ29tcG9uZW50ICIrbmFtZSsiIHdhcyBub3QgaW1wb3J0ZWQsIGV4cG9ydGVkLCBvciBwcm92aWRlZCBieSBNRFhQcm92aWRlciBhcyBnbG9iYWwgc2NvcGUiKTtyZXR1cm4gbWR4KCJkaXYiLHByb3BzKTt9O307dmFyIGxheW91dFByb3BzPXt9O3ZhciBNRFhMYXlvdXQ9IndyYXBwZXIiO2V4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIE1EWENvbnRlbnQoX3JlZil7dmFyIGNvbXBvbmVudHM9X3JlZi5jb21wb25lbnRzLHByb3BzPV9vYmplY3RXaXRob3V0UHJvcGVydGllcyhfcmVmLFsiY29tcG9uZW50cyJdKTtyZXR1cm4gbWR4KE1EWExheW91dCxPYmplY3QuYXNzaWduKHt9LGxheW91dFByb3BzLHByb3BzLHtjb21wb25lbnRzOmNvbXBvbmVudHMsbWR4VHlwZToiTURYTGF5b3V0In0pLG1keCgiaDEiLHsiaWQiOiJwcmluY2lwbGVzIn0sIlByaW5jaXBsZXMiKSxtZHgoImgyIix7ImlkIjoib3JnYW5pc2luZy1zeW1ib2xzIn0sIk9yZ2FuaXNpbmcgc3ltYm9scyIpLG1keCgicCIsbnVsbCwiVXNlIHRoZSBzeW1ib2wgb3JnYW5pc2VyIHRvIGF1dG8tb3JnYW5pc2Ugc3ltYm9scy4iKSxtZHgoImgyIix7ImlkIjoibmFtaW5nLWNvbnZlbnRpb25zIn0sIk5hbWluZyBjb252ZW50aW9ucyIpLG1keCgicCIsbnVsbCwiV2hlbiBpdCBjb21lcyB0byBuYW1pbmcgcHJpbmNpcGxlcywgdXNlIHRoZSBjb252ZW50aW9uIG9mICIsbWR4KCJpbmxpbmVDb2RlIix7cGFyZW50TmFtZToicCJ9LCJCdXR0b24vUHJpbWFyeS9MaWdodCIpLCIgd2l0aCBhaW1zIHRoYXQgdGhlIGZpcnN0IHdvcmQgY2FuIGJlIHBhcnNlZCBieSBza2V0Y2ggdXAgZm9yIHR5cGUgYW5kIHRoZSBmb2xsb3dpbmcgZWxlbWVudHMgb2YgYSAiLG1keCgiaW5saW5lQ29kZSIse3BhcmVudE5hbWU6InAifSwiLyIpLCIgc3BsaXQgYXJyYXkgY2FuIGJlIHVzZSB0byBkZW5vdGUgY2xhc3NuYW1lcy4iKSxtZHgoInAiLG51bGwsIkFueXRoaW5nIHNwbGl0IGJ5ICIsbWR4KCJpbmxpbmVDb2RlIix7cGFyZW50TmFtZToicCJ9LCIvIiksIiBpdHNlbGYgYmVjb21lcyBhIGNsYXNzbmFtZSB3aGVuIGNvbnZlcnRlZCB1c2luZyBza2V0Y2h1cC4iKSxtZHgoInAiLG51bGwsIldoZW4gbmFtaW5nIHBhZ2VzIGFuZCBjb21wb25lbnRzLCBqdXN0IHVzZSBjYW1lbCBjYXNpbmcgd2l0aCBubyBzcGxpdHMuIiksbWR4KCJoMiIseyJpZCI6ImNyZWF0aW5nLW5ldy1zeW1ib2xzIn0sIkNyZWF0aW5nIG5ldyBzeW1ib2xzIiksbWR4KCJwIixudWxsLCJGb3IgdGhlIHNha2Ugb2YgY3JlYXRpbmcgYmFzZSBjb21wb25lbnRzLCBqdXN0IHVzZSB0aGUgYmFzaWMgY29sb3VycyBhbmQgdHJlYXQgaXQgbGlrZSBhIHdpcmVmcmFtZS4gVGhlc2UgY29tcG9uZW50cyBjYW4gdGhlbiB0YWtlIG9uIHRoZSBuYW1pbmcgY29udmVudGlvbiBhYm92ZS4iKSxtZHgoInAiLG51bGwsIldoZW4gZGVzaWduaW5nIGEgbmV3IHNldCBvZiBjb21wb25lbnRzLCB0aGVuIGRldGFjaCB0aGUgc3ltYm9sIGluIHRoZSBwYWdlIHdvcmtmbG93LiBGcm9tIGhlcmUsIHlvdSBtYWtlIGNyZWF0ZSBpdCBhcyBhIG5ldyBzeW1ib2wgYXMgcmVxdWlyZWQuIikpO31pZih0eXBlb2YgTURYQ29udGVudCE9PSd1bmRlZmluZWQnJiZNRFhDb250ZW50JiZNRFhDb250ZW50PT09T2JqZWN0KE1EWENvbnRlbnQpJiZPYmplY3QuaXNFeHRlbnNpYmxlKE1EWENvbnRlbnQpKXtPYmplY3QuZGVmaW5lUHJvcGVydHkoTURYQ29udGVudCwnX19maWxlbWV0YScse2VudW1lcmFibGU6dHJ1ZSxjb25maWd1cmFibGU6dHJ1ZSx2YWx1ZTp7bmFtZToiTURYQ29udGVudCIsZmlsZW5hbWU6Im1hbnVhbC9Ta2V0Y2gvUHJpbmNpcGxlcy5tZCJ9fSk7fU1EWENvbnRlbnQuaXNNRFhDb21wb25lbnQ9dHJ1ZTs="},{"version":3,"sources":["/Users/dennis.okeeffe/Project-Imposter/developer-notes/manual/Sketch/Principles.md"],"names":["React","mdx","makeShortcode","name","MDXDefaultShortcode","props","console","warn","layoutProps","MDXLayout","MDXContent","components","isMDXComponent"],"mappings":"iMAAA,cACE,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,GAAT,KAAoB,eAApB,CACA,cAGF,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAAAC,IAAI,QAAI,SAASC,CAAAA,mBAAT,CAA6BC,KAA7B,CAAoC,CAChEC,OAAO,CAACC,IAAR,CAAa,aAAeJ,IAAf,CAAsB,yEAAnC,EACA,MAAO,WAASE,KAAT,CAAP,CACD,CAHyB,EAA1B,CAKA,GAAMG,CAAAA,WAAW,CAAG,EAApB,CAGA,GAAMC,CAAAA,SAAS,CAAG,SAAlB,CACA,cAAe,SAASC,CAAAA,UAAT,MAGZ,IAFDC,CAAAA,UAEC,MAFDA,UAEC,CADEN,KACF,+CACD,MAAO,KAAC,SAAD,kBAAeG,WAAf,CAAgCH,KAAhC,EAAuC,UAAU,CAAEM,UAAnD,CAA+D,OAAO,CAAC,WAAvE,GACL,SAAQ,CACN,KAAM,YADA,CAAR,cADK,CAIL,SAAQ,CACN,KAAM,oBADA,CAAR,sBAJK,CAOL,kEAPK,CAQL,SAAQ,CACN,KAAM,oBADA,CAAR,sBARK,CAWL,0EAAiE,kBAAY,UAAU,CAAC,GAAvB,yBAAjE,uGAAwO,kBAAY,UAAU,CAAC,GAAvB,MAAxO,iDAXK,CAYL,kCAAyB,kBAAY,UAAU,CAAC,GAAvB,MAAzB,8DAZK,CAaL,uFAbK,CAcL,SAAQ,CACN,KAAM,sBADA,CAAR,wBAdK,CAiBL,kLAjBK,CAkBL,+JAlBK,CAAP,CAoBD,C,uQAEDD,UAAU,CAACE,cAAX,CAA4B,IAA5B","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"principles\"\n    }}>{`Principles`}</h1>\n    <h2 {...{\n      \"id\": \"organising-symbols\"\n    }}>{`Organising symbols`}</h2>\n    <p>{`Use the symbol organiser to auto-organise symbols.`}</p>\n    <h2 {...{\n      \"id\": \"naming-conventions\"\n    }}>{`Naming conventions`}</h2>\n    <p>{`When it comes to naming principles, use the convention of `}<inlineCode parentName=\"p\">{`Button/Primary/Light`}</inlineCode>{` with aims that the first word can be parsed by sketch up for type and the following elements of a `}<inlineCode parentName=\"p\">{`/`}</inlineCode>{` split array can be use to denote classnames.`}</p>\n    <p>{`Anything split by `}<inlineCode parentName=\"p\">{`/`}</inlineCode>{` itself becomes a classname when converted using sketchup.`}</p>\n    <p>{`When naming pages and components, just use camel casing with no splits.`}</p>\n    <h2 {...{\n      \"id\": \"creating-new-symbols\"\n    }}>{`Creating new symbols`}</h2>\n    <p>{`For the sake of creating base components, just use the basic colours and treat it like a wireframe. These components can then take on the naming convention above.`}</p>\n    <p>{`When designing a new set of components, then detach the symbol in the page workflow. From here, you make create it as a new symbol as required.`}</p>\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  "]}]}