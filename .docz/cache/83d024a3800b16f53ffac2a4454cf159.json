{"remainingRequest":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/docz-core/node_modules/babel-loader/lib/index.js??ref--6-1!/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/@mdx-js/loader/index.js??ref--6-2!/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/source-map-loader/index.js!/Users/dennis.okeeffe/Project-Imposter/developer-notes/manual/Programming-Languages/Creating-Your-Own-Language.md","dependencies":[{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/manual/Programming-Languages/Creating-Your-Own-Language.md","mtime":1578024004157},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/cache-loader/dist/cjs.js","mtime":1564095360956},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/docz-core/node_modules/babel-loader/lib/index.js","mtime":1562568123838},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/@mdx-js/loader/index.js","mtime":1565139338792},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/source-map-loader/index.js","mtime":1564095361765}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9vYmplY3RXaXRob3V0UHJvcGVydGllcyBmcm9tIi9Vc2Vycy9kZW5uaXMub2tlZWZmZS9Qcm9qZWN0LUltcG9zdGVyL2RldmVsb3Blci1ub3Rlcy9ub2RlX21vZHVsZXMvYmFiZWwtcHJlc2V0LXJlYWN0LWFwcC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0V2l0aG91dFByb3BlcnRpZXMiOy8qIEBqc3ggbWR4ICovaW1wb3J0IFJlYWN0IGZyb20ncmVhY3QnO2ltcG9ydHttZHh9ZnJvbSdAbWR4LWpzL3JlYWN0JzsvKiBAanN4IG1keCAqL3ZhciBtYWtlU2hvcnRjb2RlPWZ1bmN0aW9uIG1ha2VTaG9ydGNvZGUobmFtZSl7cmV0dXJuIGZ1bmN0aW9uIE1EWERlZmF1bHRTaG9ydGNvZGUocHJvcHMpe2NvbnNvbGUud2FybigiQ29tcG9uZW50ICIrbmFtZSsiIHdhcyBub3QgaW1wb3J0ZWQsIGV4cG9ydGVkLCBvciBwcm92aWRlZCBieSBNRFhQcm92aWRlciBhcyBnbG9iYWwgc2NvcGUiKTtyZXR1cm4gbWR4KCJkaXYiLHByb3BzKTt9O307dmFyIGxheW91dFByb3BzPXt9O3ZhciBNRFhMYXlvdXQ9IndyYXBwZXIiO2V4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIE1EWENvbnRlbnQoX3JlZil7dmFyIGNvbXBvbmVudHM9X3JlZi5jb21wb25lbnRzLHByb3BzPV9vYmplY3RXaXRob3V0UHJvcGVydGllcyhfcmVmLFsiY29tcG9uZW50cyJdKTtyZXR1cm4gbWR4KE1EWExheW91dCxPYmplY3QuYXNzaWduKHt9LGxheW91dFByb3BzLHByb3BzLHtjb21wb25lbnRzOmNvbXBvbmVudHMsbWR4VHlwZToiTURYTGF5b3V0In0pLG1keCgiaDEiLHsiaWQiOiJjcmVhdGluZy15b3VyLW93bi1sYW5ndWFnZSJ9LCJDcmVhdGluZyBZb3VyIE93biBMYW5ndWFnZSIpLG1keCgiaDIiLHsiaWQiOiJ1c2UtY2FzZXMifSwiVXNlIENhc2VzIiksbWR4KCJvbCIsbnVsbCxtZHgoImxpIix7cGFyZW50TmFtZToib2wifSwiRG9tYWluLVNwZWNpZmljIExhbmd1YWdlczogVGVycmFmb3JtLCBHZW1maWxlcyIpLG1keCgibGkiLHtwYXJlbnROYW1lOiJvbCJ9LCJUZW1wbGF0aW5nIGxhbmd1YWdlczogSGFuZGxlYmFycywgUHVnIikpLG1keCgiaDIiLHsiaWQiOiJ1c2VjYXNlcy1hdC1zZW5kZ3JpZCJ9LCJVc2VjYXNlcyBhdCBTZW5kR3JpZCIpLG1keCgidWwiLG51bGwsbWR4KCJsaSIse3BhcmVudE5hbWU6InVsIn0sIkRyYWcgKyBEcm9wIGVkaXRvciB0YWtlcyBIVE1MLCBwYXJzZXMgaXQgaW50byBhbiBhYnN0cmFjdCBzeW50YXggdHJlZSAoQVNUKSBhbmQgbWFuaXB1bGF0ZXMgaXQgYmVmb3JlIHNlcmlhbGl6aW5nIGl0IGJhY2sgaW50byBIVE1MLiIpLG1keCgibGkiLHtwYXJlbnROYW1lOiJ1bCJ9LCJVc2luZyBpdCBmb3Igb3duIGJlc3Bva2UgdGVtcGxhdGluZyBsYW5ndWFnZSBmb3IgZHluYW1pYyBlbWFpbCB0ZW1wbGF0ZXMuIiksbWR4KCJsaSIse3BhcmVudE5hbWU6InVsIn0sIlN5bmMgcG9zaXRpb24gaW4gc2lkZS1ieS1zaWRlIGVkaXRvciBieSBicmVha2luZyBIVE1MIGludG8gYW4gQVNUIGFuZCByZXdyaXRpbmcgdGhlIGVsZW1lbnRzIHdpdGggaW5mb3JtYXRpb24gYWJvdXQgdGhlaXIgcG9zaXRpb24gaW4gdGhlIHRleHQgZWRpdG9yLiIpKSxtZHgoImgyIix7ImlkIjoid2hhdC1pcy1hLWNvbXBpbGVyIn0sIldoYXQgaXMgYSBjb21waWxlcj8iKSxtZHgoInAiLG51bGwsIlNvbWV0aGluZyB0aGF0IHR1cm5zIGEgaGlnaGVyLWxldmVsIGxhbmd1YWdlIGludG8gYSBsb3dlci1sZXZlbCBsYW5nYXVnZSIsIioiLCIuIiksbWR4KCJoMiIseyJpZCI6InRvZGF5cy1leGFtcGxlIn0sIlRvZGF5cyBleGFtcGxlIiksbWR4KCJwIixudWxsLCJJbiB0aGlzIHBhcnRpY3VsYXIgZXhhbXBsZSwgd2Ugd2lsbCBmb2xsb3cgdGhlIGNvdXJzZSB0aGF0IGJ1aWxkcyB0aGUgbGFuZ3VhZ2UgIixtZHgoImlubGluZUNvZGUiLHtwYXJlbnROYW1lOiJwIn0sIkRyb3BiZWFyIiksIi4iKSxtZHgoInVsIixudWxsLG1keCgibGkiLHtwYXJlbnROYW1lOiJ1bCJ9LCJMaXNwLWxpa2UgbGFuZ2FnZSIpLG1keCgibGkiLHtwYXJlbnROYW1lOiJ1bCJ9LCJMZXZlcmFnZSBleGlzdGluZyBKYXZhU2NyaXB0IHJ1bi10aW1lIikpLG1keCgicHJlIixudWxsLG1keCgiY29kZSIsT2JqZWN0LmFzc2lnbih7cGFyZW50TmFtZToicHJlIn0se30pLCIoYWRkIDEgMiAoc3VidHJhY3QgNiAzKSlcbiIpKSxtZHgoImgyIix7ImlkIjoiaW5zcGlyYXRpb24tcmVzb3VyY2VzIn0sIkluc3BpcmF0aW9uIFJlc291cmNlcyIpLG1keCgidWwiLG51bGwsbWR4KCJsaSIse3BhcmVudE5hbWU6InVsIn0sbWR4KCJhIixPYmplY3QuYXNzaWduKHtwYXJlbnROYW1lOiJsaSJ9LHsiaHJlZiI6Imh0dHBzOi8vbm9ydmlnLmNvbS9saXNweS5odG1sIn0pLCJodHRwczovL25vcnZpZy5jb20vbGlzcHkuaHRtbCIpKSxtZHgoImxpIix7cGFyZW50TmFtZToidWwifSxtZHgoImEiLE9iamVjdC5hc3NpZ24oe3BhcmVudE5hbWU6ImxpIn0seyJocmVmIjoiaHR0cHM6Ly9lbG9xdWVudGphdmFzY3JpcHQubmV0LzEyX2xhbmd1YWdlLmh0bWwifSksImh0dHBzOi8vZWxvcXVlbnRqYXZhc2NyaXB0Lm5ldC8xMl9sYW5ndWFnZS5odG1sIikpLG1keCgibGkiLHtwYXJlbnROYW1lOiJ1bCJ9LG1keCgiYSIsT2JqZWN0LmFzc2lnbih7cGFyZW50TmFtZToibGkifSx7ImhyZWYiOiJodHRwczovL2dpdGh1Yi5jb20vamFtaWVidWlsZHMvdGhlLXN1cGVyLXRpbnktY29tcGlsZXIifSksImh0dHBzOi8vZ2l0aHViLmNvbS9qYW1pZWJ1aWxkcy90aGUtc3VwZXItdGlueS1jb21waWxlciIpKSksbWR4KCJoMiIseyJpZCI6InN0YWdlcy1vZi1hLWNvbXBpbGVyIn0sIlN0YWdlcyBvZiBhIENvbXBpbGVyIiksbWR4KCJvbCIsbnVsbCxtZHgoImxpIix7cGFyZW50TmFtZToib2wifSwiUGFyc2luZzogVGFrZSBzb3VyY2UgY29kZSBhbmQgdHVybiBpdCBpbnRvIHJlcHJlc2VudGF0aW9uIG9mIHRoYXQgY29kZS4iKSxtZHgoImxpIix7cGFyZW50TmFtZToib2wifSwiVHJhbnNmb3JtYXRpb246IFRha2Ugc291cmNlIGNvZGUgYW5kIHRyYW5zZm9ybXMgaXQgdG8gZG8gd2hhdGV2ZXIgdGhlIGNvbXBpbGVyIHdhbnRzIGl0IHRvIGRvIiksbWR4KCJsaSIse3BhcmVudE5hbWU6Im9sIn0sIkdlbmVyYXRpb246IFRha2UgdGhlIHRyYW5zZm9ybWVkIHJlcHJlc2VudGF0aW9uIGFuZCB0dXJucyBpdCBpbnRvIGEgbmV3IHN0cmluZyBvZiBjb2RlIikpLG1keCgiaDIiLHsiaWQiOiJwYXJzaW5nIn0sIlBhcnNpbmciKSxtZHgoInAiLG51bGwsIkNvbnNpc3RzIG9mICIsbWR4KCJpbmxpbmVDb2RlIix7cGFyZW50TmFtZToicCJ9LCJMZXhpY2FsIGFuYWx5c2lzIiksIiBhbmQgIixtZHgoImlubGluZUNvZGUiLHtwYXJlbnROYW1lOiJwIn0sIlN5bnRhY3RpYyBhbmFseXNpcyIpLCIuIiksbWR4KCJwIixudWxsLCJOb3RlOiBMZXhpbmcgPSBMZXhpY2FsIGFuYWx5c2lzLiIpLG1keCgicCIsbnVsbCwiQmFzaWNhbGx5OiB0YWtlIGJpZyBzdHJpbmcgb2YgY29kZSBhbmQgdHVybiBpdCBpbnRvICIsbWR4KCJpbmxpbmVDb2RlIix7cGFyZW50TmFtZToicCJ9LCJ0b2tlbnMiKSwiIHdoZXJlIGEgIixtZHgoImlubGluZUNvZGUiLHtwYXJlbnROYW1lOiJwIn0sInRva2VuIiksIiBpcyBhIHNtYWxsIHVuaXQgb2YgdGhlIGxhbmd1YWdlLiIpLG1keCgicCIsbnVsbCwiSG93IG1pZ2h0IGEgbGV4ZXIgd29yaz8iKSxtZHgoInVsIixudWxsLG1keCgibGkiLHtwYXJlbnROYW1lOiJ1bCJ9LCJBY2NlcHQgaW5wdXQgc3RyaW5nIG9mIGNvZGUiKSxtZHgoImxpIix7cGFyZW50TmFtZToidWwifSwiQ3JlYXRlIHZhciBmb3IgdHJhY2tpbmcgcG9zaXRpb24gKGxpa2UgY3Vyc29yKSIpLG1keCgibGkiLHtwYXJlbnROYW1lOiJ1bCJ9LCJNYWtlIGFuIGFycmF5IG9mIHRva2VucyIpLG1keCgibGkiLHtwYXJlbnROYW1lOiJ1bCJ9LCJXcml0ZSBhIHdoaWxlIGxvb3AgdGhhdCBpdGVyYXRlcyB0aHJvdWdoIHRoZSBzb3VyY2UgY29kZSBpbnB1dCIpLG1keCgibGkiLHtwYXJlbnROYW1lOiJ1bCJ9LCJDaGVjayBlYWNoIHRva2VuLCBzZWUgaWYgbWF0Y2hlcyB0eXBlIiksbWR4KCJsaSIse3BhcmVudE5hbWU6InVsIn0sIkFkZCBpdCB0byB0aGUgYXJyYXkgb2YgdG9rZW4iKSksbWR4KCJoMyIseyJpZCI6InVzaW5nLWhlbHBlcnMifSwiVXNpbmcgaGVscGVycyIpLG1keCgicHJlIixudWxsLG1keCgiY29kZSIsT2JqZWN0LmFzc2lnbih7cGFyZW50TmFtZToicHJlIn0seyJjbGFzc05hbWUiOiJsYW5ndWFnZS1qYXZhc2NyaXB0In0pLCJjb25zdCBpc1doaXRlc3BhY2UgPSBjaGFyYWN0ZXIgPT4gL1xccy8udGVzdChjaGFyYWN0ZXIpO1xuY29uc3QgaXNOdW1iZXIgPSBjaGFyYWN0ZXIgPT4gL1swLTldLy50ZXN0KGNoYXJhY3Rlcik7XG5jb25zdCBpc09wZXJhdG9yID0gY2hhcmFjdGVyID0+IC9bXFwrXFwtXFwqXFwvXS8udGVzdChjaGFyYWN0ZXIpO1xuIikpLG1keCgiaDMiLHsiaWQiOiJ0dXJuaW5nLXN0cmluZ3MtdG8tdG9rZW5zIn0sIlR1cm5pbmcgc3RyaW5ncyB0byB0b2tlbnMiKSxtZHgoInAiLG51bGwsIk5vdGUgdGhhdCBiYXNlZCBvbiBvdXIgc3ludGF4LCB3ZSBtYXkgbmVlZCB0byBjb2xsZWN0IG11bHRpcGxlIGNoYXJhY3RlcnMgaW50byBhIHNpbmdsZSB0b2tlbiBpZSAiLG1keCgiaW5saW5lQ29kZSIse3BhcmVudE5hbWU6InAifSwiMjIgKyAyMyIpLCIgKHdoaWNoIHRva2VuaXplcyBhcyAiLG1keCgiaW5saW5lQ29kZSIse3BhcmVudE5hbWU6InAifSwiWycyJywnMicsJysnLCcyJywnMyddIiksIikiKSxtZHgoInByZSIsbnVsbCxtZHgoImNvZGUiLE9iamVjdC5hc3NpZ24oe3BhcmVudE5hbWU6InByZSJ9LHsiY2xhc3NOYW1lIjoibGFuZ3VhZ2UtamF2YXNjcmlwdCJ9KSwiY29uc3QgdG9rZW5pemUgPSBpbnB1dCA9PiB7XG4gIGxldCBjdXJzb3IgPSAwO1xuICBjb25zdCB0b2tlbnMgPSBbXTtcblxuICB3aGlsZSAoY3Vyc29yIDwgaW5wdXQubGVuZ3RoKSB7XG4gICAgLy8gTG9naWMgaGVyZVxuICAgIC8vIEV4YW1wbGUgZm9yIG51bWJlciBoZWxwZXJcbiAgICBpZiAoaXNOdW1iZXIoY2hhcmFjdGVyKSlcbiAgfVxuXG4gIHJldHVybiB0b2tlbnM7XG59O1xuIikpKTt9aWYodHlwZW9mIE1EWENvbnRlbnQhPT0ndW5kZWZpbmVkJyYmTURYQ29udGVudCYmTURYQ29udGVudD09PU9iamVjdChNRFhDb250ZW50KSYmT2JqZWN0LmlzRXh0ZW5zaWJsZShNRFhDb250ZW50KSl7T2JqZWN0LmRlZmluZVByb3BlcnR5KE1EWENvbnRlbnQsJ19fZmlsZW1ldGEnLHtlbnVtZXJhYmxlOnRydWUsY29uZmlndXJhYmxlOnRydWUsdmFsdWU6e25hbWU6Ik1EWENvbnRlbnQiLGZpbGVuYW1lOiJtYW51YWwvUHJvZ3JhbW1pbmctTGFuZ3VhZ2VzL0NyZWF0aW5nLVlvdXItT3duLUxhbmd1YWdlLm1kIn19KTt9TURYQ29udGVudC5pc01EWENvbXBvbmVudD10cnVlOw=="},{"version":3,"sources":["/Users/dennis.okeeffe/Project-Imposter/developer-notes/manual/Programming-Languages/Creating-Your-Own-Language.md"],"names":["React","mdx","makeShortcode","name","MDXDefaultShortcode","props","console","warn","layoutProps","MDXLayout","MDXContent","components","isMDXComponent"],"mappings":"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","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"creating-your-own-language\"\n    }}>{`Creating Your Own Language`}</h1>\n    <h2 {...{\n      \"id\": \"use-cases\"\n    }}>{`Use Cases`}</h2>\n    <ol>\n      <li parentName=\"ol\">{`Domain-Specific Languages: Terraform, Gemfiles`}</li>\n      <li parentName=\"ol\">{`Templating languages: Handlebars, Pug`}</li>\n    </ol>\n    <h2 {...{\n      \"id\": \"usecases-at-sendgrid\"\n    }}>{`Usecases at SendGrid`}</h2>\n    <ul>\n      <li parentName=\"ul\">{`Drag + Drop editor takes HTML, parses it into an abstract syntax tree (AST) and manipulates it before serializing it back into HTML.`}</li>\n      <li parentName=\"ul\">{`Using it for own bespoke templating language for dynamic email templates.`}</li>\n      <li parentName=\"ul\">{`Sync position in side-by-side editor by breaking HTML into an AST and rewriting the elements with information about their position in the text editor.`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"what-is-a-compiler\"\n    }}>{`What is a compiler?`}</h2>\n    <p>{`Something that turns a higher-level language into a lower-level langauge`}{`*`}{`.`}</p>\n    <h2 {...{\n      \"id\": \"todays-example\"\n    }}>{`Todays example`}</h2>\n    <p>{`In this particular example, we will follow the course that builds the language `}<inlineCode parentName=\"p\">{`Dropbear`}</inlineCode>{`.`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Lisp-like langage`}</li>\n      <li parentName=\"ul\">{`Leverage existing JavaScript run-time`}</li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{}}>{`(add 1 2 (subtract 6 3))\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"inspiration-resources\"\n    }}>{`Inspiration Resources`}</h2>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://norvig.com/lispy.html\"\n        }}>{`https://norvig.com/lispy.html`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://eloquentjavascript.net/12_language.html\"\n        }}>{`https://eloquentjavascript.net/12_language.html`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://github.com/jamiebuilds/the-super-tiny-compiler\"\n        }}>{`https://github.com/jamiebuilds/the-super-tiny-compiler`}</a></li>\n    </ul>\n    <h2 {...{\n      \"id\": \"stages-of-a-compiler\"\n    }}>{`Stages of a Compiler`}</h2>\n    <ol>\n      <li parentName=\"ol\">{`Parsing: Take source code and turn it into representation of that code.`}</li>\n      <li parentName=\"ol\">{`Transformation: Take source code and transforms it to do whatever the compiler wants it to do`}</li>\n      <li parentName=\"ol\">{`Generation: Take the transformed representation and turns it into a new string of code`}</li>\n    </ol>\n    <h2 {...{\n      \"id\": \"parsing\"\n    }}>{`Parsing`}</h2>\n    <p>{`Consists of `}<inlineCode parentName=\"p\">{`Lexical analysis`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`Syntactic analysis`}</inlineCode>{`.`}</p>\n    <p>{`Note: Lexing = Lexical analysis.`}</p>\n    <p>{`Basically: take big string of code and turn it into `}<inlineCode parentName=\"p\">{`tokens`}</inlineCode>{` where a `}<inlineCode parentName=\"p\">{`token`}</inlineCode>{` is a small unit of the language.`}</p>\n    <p>{`How might a lexer work?`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Accept input string of code`}</li>\n      <li parentName=\"ul\">{`Create var for tracking position (like cursor)`}</li>\n      <li parentName=\"ul\">{`Make an array of tokens`}</li>\n      <li parentName=\"ul\">{`Write a while loop that iterates through the source code input`}</li>\n      <li parentName=\"ul\">{`Check each token, see if matches type`}</li>\n      <li parentName=\"ul\">{`Add it to the array of token`}</li>\n    </ul>\n    <h3 {...{\n      \"id\": \"using-helpers\"\n    }}>{`Using helpers`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`const isWhitespace = character => /\\\\s/.test(character);\nconst isNumber = character => /[0-9]/.test(character);\nconst isOperator = character => /[\\\\+\\\\-\\\\*\\\\/]/.test(character);\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"turning-strings-to-tokens\"\n    }}>{`Turning strings to tokens`}</h3>\n    <p>{`Note that based on our syntax, we may need to collect multiple characters into a single token ie `}<inlineCode parentName=\"p\">{`22 + 23`}</inlineCode>{` (which tokenizes as `}<inlineCode parentName=\"p\">{`['2','2','+','2','3']`}</inlineCode>{`)`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`const tokenize = input => {\n  let cursor = 0;\n  const tokens = [];\n\n  while (cursor < input.length) {\n    // Logic here\n    // Example for number helper\n    if (isNumber(character))\n  }\n\n  return tokens;\n};\n`}</code></pre>\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  "]}]}