{"remainingRequest":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/docz-core/node_modules/babel-loader/lib/index.js??ref--6-1!/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/@mdx-js/loader/index.js??ref--6-2!/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/source-map-loader/index.js!/Users/dennis.okeeffe/Project-Imposter/developer-notes/manual/Webpack/Webpack-Optimisation.md","dependencies":[{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/manual/Webpack/Webpack-Optimisation.md","mtime":1566100641961},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/cache-loader/dist/cjs.js","mtime":1564095360956},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/docz-core/node_modules/babel-loader/lib/index.js","mtime":1562568123838},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/@mdx-js/loader/index.js","mtime":1565139338792},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/source-map-loader/index.js","mtime":1564095361765}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/dennis.okeeffe/Project-Imposter/developer-notes/manual/Webpack/Webpack-Optimisation.md"],"names":["React","mdx","makeShortcode","name","MDXDefaultShortcode","props","console","warn","layoutProps","MDXLayout","MDXContent","components","isMDXComponent"],"mappings":"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","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"webpack-optimisation\"\n    }}>{`Webpack Optimisation`}</h1>\n    <h2 {...{\n      \"id\": \"loader-targeting\"\n    }}>{`Loader targeting`}</h2>\n    <p>{`Apply loaders to the minimal number of modules necessary.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`// instead of...\nmodule.exports = {\n  //...\n  module: {\n    rules: [\n      {\n        test: /\\\\.js$/,\n        loader: 'babel-loader'\n      }\n    ]\n  }\n};\n\n// try using the include target\nmodule.exports = {\n  //...\n  module: {\n    rules: [\n      {\n        test: /\\\\.js$/,\n        include: path.resolve(__dirname, 'src'),\n        loader: 'babel-loader'\n      }\n    ]\n  }\n};\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"bootstrap\"\n    }}>{`Bootstrap`}</h2>\n    <p>{`Each additional loader/plugin has a bootup time. Try to use as few tools as possible.`}</p>\n    <h2 {...{\n      \"id\": \"resolving\"\n    }}>{`Resolving`}</h2>\n    <p>{`The following can increase resolving speed:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Minimize the number of items in `}<inlineCode parentName=\"li\">{`resolve.modules`}</inlineCode>{`, `}<inlineCode parentName=\"li\">{`resolve.extensions`}</inlineCode>{`, `}<inlineCode parentName=\"li\">{`resolve.mainFiles`}</inlineCode>{`, `}<inlineCode parentName=\"li\">{`resolve.descriptionFiles`}</inlineCode>{`, as they increase the number of filesystem calls.`}</li>\n      <li parentName=\"ul\">{`Set `}<inlineCode parentName=\"li\">{`resolve.symlinks: false`}</inlineCode>{` if you don't use symlinks (eg `}<inlineCode parentName=\"li\">{`npm link`}</inlineCode>{` or `}<inlineCode parentName=\"li\">{`yarn link`}</inlineCode>{`).`}</li>\n      <li parentName=\"ul\">{`Set `}<inlineCode parentName=\"li\">{`resolve.cacheWithContext: false`}</inlineCode>{` if you use custom resolving plugins, that are not context specific.`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"dlls\"\n    }}>{`Dlls`}</h2>\n    <p>{`Use the `}<inlineCode parentName=\"p\">{`DllPlugin`}</inlineCode>{` to move code that is changes less frequently into a separate compilation. This will improve app compilation speed, although it does increase complexity of the build process.`}</p>\n    <h2 {...{\n      \"id\": \"smaller--faster\"\n    }}>{`Smaller = Faster`}</h2>\n    <p>{`Decrease the total size of the compilation to increase build performance. Try to keep chunks small.`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Use fewer/smaller libs`}</li>\n      <li parentName=\"ul\">{`Use the `}<inlineCode parentName=\"li\">{`SplitChunksPlugin`}</inlineCode>{` in Multi-Page Applications`}</li>\n      <li parentName=\"ul\">{`Use the `}<inlineCode parentName=\"li\">{`SplitChunksPlugin`}</inlineCode>{` in `}<inlineCode parentName=\"li\">{`async`}</inlineCode>{` mode in Multi-Page Applications`}</li>\n      <li parentName=\"ul\">{`Remove unused code`}</li>\n      <li parentName=\"ul\">{`Only compile the part of the code you are currently developing on`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"worker-pool\"\n    }}>{`Worker Pool`}</h2>\n    <p>{`The `}<inlineCode parentName=\"p\">{`thread-loader`}</inlineCode>{` can be used to offload expensive loaders to a worker pool.`}</p>\n    <blockquote>\n      <p parentName=\"blockquote\">{`Don't use too many loaders. There is a boot overhead for the Node.js runtime and the loader. Minimize the module transfers between worker and main process. IPC is expensive.`}</p>\n    </blockquote>\n    <h2 {...{\n      \"id\": \"persistent-cache\"\n    }}>{`Persistent Cache`}</h2>\n    <p>{`Enable persistent caching with the `}<inlineCode parentName=\"p\">{`cache-loader`}</inlineCode>{`. Clear cache directory on \"postinstall\" in `}<inlineCode parentName=\"p\">{`package.json`}</inlineCode>{`.`}</p>\n    <h2 {...{\n      \"id\": \"custom-pluginsloaders\"\n    }}>{`Custom plugins/loaders`}</h2>\n    <p>{`Profile them to not introduce a performance problem here.`}</p>\n    <h2 {...{\n      \"id\": \"incremental-builds\"\n    }}>{`Incremental Builds`}</h2>\n    <p>{`Use watch mode. Specifically Webpack's.`}</p>\n    <p>{`If CPU overloads due to poling mode, you can increase the polling interval with `}<inlineCode parentName=\"p\">{`watchOptions.poll`}</inlineCode>{`.`}</p>\n    <h2 {...{\n      \"id\": \"compile-in-memory\"\n    }}>{`Compile in Memory`}</h2>\n    <p>{`Following utils improve performance by compilin and serving assets in memory rather than writing to disk:`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`webpack-dev-server`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`webpack-hot-middleware`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`webpack-dev-middleware`}</inlineCode></li>\n    </ul>\n    <h2 {...{\n      \"id\": \"devtool\"\n    }}>{`Devtool`}</h2>\n    <p>{`Be aware of the performance differences between the different devtool settings.`}</p>\n    <ul>\n      <li parentName=\"ul\">{`\"eval\" has the best performance, but doesn't assist you for transpiled code.`}</li>\n      <li parentName=\"ul\">{`The `}<inlineCode parentName=\"li\">{`cheap-source-map`}</inlineCode>{` variants are more performant if you can live with the slightly worse mapping quality.`}</li>\n      <li parentName=\"ul\">{`Use a `}<inlineCode parentName=\"li\">{`eval-source-map`}</inlineCode>{` variant for incremental builds.\n=> In most cases, `}<inlineCode parentName=\"li\">{`cheap-module-eval-source-map`}</inlineCode>{` is the best option.`}</li>\n    </ul>\n    <p>{`[TO FINISH => up to https://webpack.js.org/guides/build-performance/#minimal-entry-chunk]`}</p>\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  "]}]}