{"remainingRequest":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/docz-core/node_modules/babel-loader/lib/index.js??ref--6-1!/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/@mdx-js/loader/index.js??ref--6-2!/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/source-map-loader/index.js!/Users/dennis.okeeffe/Project-Imposter/developer-notes/manual/Kotlin/Kotlin-From-CLI.md","dependencies":[{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/manual/Kotlin/Kotlin-From-CLI.md","mtime":1581034071429},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/cache-loader/dist/cjs.js","mtime":1564095360956},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/docz-core/node_modules/babel-loader/lib/index.js","mtime":1562568123838},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/@mdx-js/loader/index.js","mtime":1565139338792},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/source-map-loader/index.js","mtime":1564095361765}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9vYmplY3RXaXRob3V0UHJvcGVydGllcyBmcm9tIi9Vc2Vycy9kZW5uaXMub2tlZWZmZS9Qcm9qZWN0LUltcG9zdGVyL2RldmVsb3Blci1ub3Rlcy9ub2RlX21vZHVsZXMvYmFiZWwtcHJlc2V0LXJlYWN0LWFwcC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0V2l0aG91dFByb3BlcnRpZXMiOy8qIEBqc3ggbWR4ICovaW1wb3J0IFJlYWN0IGZyb20ncmVhY3QnO2ltcG9ydHttZHh9ZnJvbSdAbWR4LWpzL3JlYWN0JzsvKiBAanN4IG1keCAqL3ZhciBtYWtlU2hvcnRjb2RlPWZ1bmN0aW9uIG1ha2VTaG9ydGNvZGUobmFtZSl7cmV0dXJuIGZ1bmN0aW9uIE1EWERlZmF1bHRTaG9ydGNvZGUocHJvcHMpe2NvbnNvbGUud2FybigiQ29tcG9uZW50ICIrbmFtZSsiIHdhcyBub3QgaW1wb3J0ZWQsIGV4cG9ydGVkLCBvciBwcm92aWRlZCBieSBNRFhQcm92aWRlciBhcyBnbG9iYWwgc2NvcGUiKTtyZXR1cm4gbWR4KCJkaXYiLHByb3BzKTt9O307dmFyIGxheW91dFByb3BzPXt9O3ZhciBNRFhMYXlvdXQ9IndyYXBwZXIiO2V4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIE1EWENvbnRlbnQoX3JlZil7dmFyIGNvbXBvbmVudHM9X3JlZi5jb21wb25lbnRzLHByb3BzPV9vYmplY3RXaXRob3V0UHJvcGVydGllcyhfcmVmLFsiY29tcG9uZW50cyJdKTtyZXR1cm4gbWR4KE1EWExheW91dCxPYmplY3QuYXNzaWduKHt9LGxheW91dFByb3BzLHByb3BzLHtjb21wb25lbnRzOmNvbXBvbmVudHMsbWR4VHlwZToiTURYTGF5b3V0In0pLG1keCgiaDEiLHsiaWQiOiJrb3RsaW4tZnJvbS1jbGkifSwiS290bGluIEZyb20gQ0xJIiksbWR4KCJoMiIseyJpZCI6InJlc291cmNlcyJ9LCJSZXNvdXJjZXMiKSxtZHgoIm9sIixudWxsLG1keCgibGkiLHtwYXJlbnROYW1lOiJvbCJ9LG1keCgiYSIsT2JqZWN0LmFzc2lnbih7cGFyZW50TmFtZToibGkifSx7ImhyZWYiOiJodHRwczovL3d3dy5jb2RleHBlZGlhLmNvbS9rb3RsaW4vaW5zdGFsbC1jb21waWxlLWFuZC1ydW4ta290bGluLWZyb20tY29tbWFuZC1saW5lLyJ9KSwiS290bGluIGNvbXBpbGUgYW5kIHJ1biBmcm9tIENMSSIpKSksbWR4KCJoMiIseyJpZCI6ImhlbGxvLXdvcmxkLWZyb20tdGhlLWNsaSJ9LCJIZWxsbyBXb3JsZCBmcm9tIHRoZSBDTEkiKSxtZHgoInByZSIsbnVsbCxtZHgoImNvZGUiLE9iamVjdC5hc3NpZ24oe3BhcmVudE5hbWU6InByZSJ9LHsiY2xhc3NOYW1lIjoibGFuZ3VhZ2Uta290bGluIn0pLCJmdW4gbWFpbihhcmdzOiBBcnJheTxTdHJpbmc+KSB7XG4gICAgcHJpbnRsbihcIkhlbGxvIFdvcmxkIVwiKVxufVxuIikpLG1keCgiaDIiLHsiaWQiOiJjb21waWxpbmcifSwiQ29tcGlsaW5nIiksbWR4KCJwcmUiLG51bGwsbWR4KCJjb2RlIixPYmplY3QuYXNzaWduKHtwYXJlbnROYW1lOiJwcmUifSx7ImNsYXNzTmFtZSI6Imxhbmd1YWdlLXNoZWxsIn0pLCJrb3RsaW5jIGdyZWV0aW5nLmt0IGhlbGxvLmt0IC1pbmNsdWRlLXJ1bnRpbWUgLWQgaGVsbG8uamFyXG4iKSksbWR4KCJoMiIseyJpZCI6InJ1bm5pbmcifSwiUnVubmluZyIpLG1keCgicHJlIixudWxsLG1keCgiY29kZSIsT2JqZWN0LmFzc2lnbih7cGFyZW50TmFtZToicHJlIn0seyJjbGFzc05hbWUiOiJsYW5ndWFnZS1zaGVsbCJ9KSwiamF2YSAtamFyIGhlbGxvLmphclxuIikpLG1keCgiaDIiLHsiaWQiOiJydW5uaW5nLWEtdGFzayJ9LCJSdW5uaW5nIGEgdGFzayIpLG1keCgicCIsbnVsbCwiRmluZCBLb3RsaW4gcGF0aCB3aXRoICIsbWR4KCJpbmxpbmVDb2RlIix7cGFyZW50TmFtZToicCJ9LCJ3aGljaCBrb3RsaW4iKSwiLiIpLG1keCgicHJlIixudWxsLG1keCgiY29kZSIsT2JqZWN0LmFzc2lnbih7cGFyZW50TmFtZToicHJlIn0seyJjbGFzc05hbWUiOiJsYW5ndWFnZS1zaGVsbCJ9KSwiZXhwb3J0IFBBVEg9JFBBVEg6L3BhdGgvZnJvbS93aGljaC9rb3RsaW5cbmZ1bmN0aW9uIGtvdGxpbnIoKSB7XG4gIGVjaG8gQ29tcGlsaW5nLCBwbGVhc2Ugd2FpdC4uLlxuICBrb3RsaW5jICQxIC1pbmNsdWRlLXJ1bnRpbWUgLWQgb3V0LmphclxuICBqYXZhIC1qYXIgb3V0LmphclxufVxuIikpLG1keCgicCIsbnVsbCwiQWZ0ZXIgc291cmNpbmcsIHlvdSBjb3VsZCBub3cgcnVuICIsbWR4KCJpbmxpbmVDb2RlIix7cGFyZW50TmFtZToicCJ9LCJrb3RsaW5yIGhlbGxvLmt0IiksIi4iKSk7fWlmKHR5cGVvZiBNRFhDb250ZW50IT09J3VuZGVmaW5lZCcmJk1EWENvbnRlbnQmJk1EWENvbnRlbnQ9PT1PYmplY3QoTURYQ29udGVudCkmJk9iamVjdC5pc0V4dGVuc2libGUoTURYQ29udGVudCkpe09iamVjdC5kZWZpbmVQcm9wZXJ0eShNRFhDb250ZW50LCdfX2ZpbGVtZXRhJyx7ZW51bWVyYWJsZTp0cnVlLGNvbmZpZ3VyYWJsZTp0cnVlLHZhbHVlOntuYW1lOiJNRFhDb250ZW50IixmaWxlbmFtZToibWFudWFsL0tvdGxpbi9Lb3RsaW4tRnJvbS1DTEkubWQifX0pO31NRFhDb250ZW50LmlzTURYQ29tcG9uZW50PXRydWU7"},{"version":3,"sources":["/Users/dennis.okeeffe/Project-Imposter/developer-notes/manual/Kotlin/Kotlin-From-CLI.md"],"names":["React","mdx","makeShortcode","name","MDXDefaultShortcode","props","console","warn","layoutProps","MDXLayout","MDXContent","components","isMDXComponent"],"mappings":"iMAAA,cACE,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,GAAT,KAAoB,eAApB,CACA,cAGF,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAAAC,IAAI,QAAI,SAASC,CAAAA,mBAAT,CAA6BC,KAA7B,CAAoC,CAChEC,OAAO,CAACC,IAAR,CAAa,aAAeJ,IAAf,CAAsB,yEAAnC,EACA,MAAO,WAASE,KAAT,CAAP,CACD,CAHyB,EAA1B,CAKA,GAAMG,CAAAA,WAAW,CAAG,EAApB,CAGA,GAAMC,CAAAA,SAAS,CAAG,SAAlB,CACA,cAAe,SAASC,CAAAA,UAAT,MAGZ,IAFDC,CAAAA,UAEC,MAFDA,UAEC,CADEN,KACF,+CACD,MAAO,KAAC,SAAD,kBAAeG,WAAf,CAAgCH,KAAhC,EAAuC,UAAU,CAAEM,UAAnD,CAA+D,OAAO,CAAC,WAAvE,GACL,SAAQ,CACN,KAAM,iBADA,CAAR,mBADK,CAIL,SAAQ,CACN,KAAM,WADA,CAAR,aAJK,CAOL,cACE,UAAI,UAAU,CAAC,IAAf,EAAoB,uBAAG,UAAU,CAAC,IAAd,EAAuB,CACvC,OAAQ,qFAD+B,CAAvB,oCAApB,CADF,CAPK,CAYL,SAAQ,CACN,KAAM,0BADA,CAAR,4BAZK,CAeL,eAAK,0BAAM,UAAU,CAAC,KAAjB,EAA2B,CAC5B,YAAa,iBADe,CAA3B,wEAAL,CAfK,CAqBL,SAAQ,CACN,KAAM,WADA,CAAR,aArBK,CAwBL,eAAK,0BAAM,UAAU,CAAC,KAAjB,EAA2B,CAC5B,YAAa,gBADe,CAA3B,iEAAL,CAxBK,CA4BL,SAAQ,CACN,KAAM,SADA,CAAR,WA5BK,CA+BL,eAAK,0BAAM,UAAU,CAAC,KAAjB,EAA2B,CAC5B,YAAa,gBADe,CAA3B,0BAAL,CA/BK,CAmCL,SAAQ,CACN,KAAM,gBADA,CAAR,kBAnCK,CAsCL,sCAA6B,kBAAY,UAAU,CAAC,GAAvB,iBAA7B,KAtCK,CAuCL,eAAK,0BAAM,UAAU,CAAC,KAAjB,EAA2B,CAC5B,YAAa,gBADe,CAA3B,0KAAL,CAvCK,CAgDL,kDAAyC,kBAAY,UAAU,CAAC,GAAvB,qBAAzC,KAhDK,CAAP,CAkDD,C,4QAEDD,UAAU,CAACE,cAAX,CAA4B,IAA5B","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"kotlin-from-cli\"\n    }}>{`Kotlin From CLI`}</h1>\n    <h2 {...{\n      \"id\": \"resources\"\n    }}>{`Resources`}</h2>\n    <ol>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"https://www.codexpedia.com/kotlin/install-compile-and-run-kotlin-from-command-line/\"\n        }}>{`Kotlin compile and run from CLI`}</a></li>\n    </ol>\n    <h2 {...{\n      \"id\": \"hello-world-from-the-cli\"\n    }}>{`Hello World from the CLI`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-kotlin\"\n      }}>{`fun main(args: Array<String>) {\n    println(\"Hello World!\")\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"compiling\"\n    }}>{`Compiling`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`kotlinc greeting.kt hello.kt -include-runtime -d hello.jar\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"running\"\n    }}>{`Running`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`java -jar hello.jar\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"running-a-task\"\n    }}>{`Running a task`}</h2>\n    <p>{`Find Kotlin path with `}<inlineCode parentName=\"p\">{`which kotlin`}</inlineCode>{`.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`export PATH=$PATH:/path/from/which/kotlin\nfunction kotlinr() {\n  echo Compiling, please wait...\n  kotlinc $1 -include-runtime -d out.jar\n  java -jar out.jar\n}\n`}</code></pre>\n    <p>{`After sourcing, you could now run `}<inlineCode parentName=\"p\">{`kotlinr hello.kt`}</inlineCode>{`.`}</p>\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  "]}]}