{"remainingRequest":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/docz-core/node_modules/babel-loader/lib/index.js??ref--6-1!/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/@mdx-js/loader/index.js??ref--6-2!/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/source-map-loader/index.js!/Users/dennis.okeeffe/Project-Imposter/developer-notes/manual/Linguistics/The-Art-Of-Language-Invention.md","dependencies":[{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/manual/Linguistics/The-Art-Of-Language-Invention.md","mtime":1562563032058},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/cache-loader/dist/cjs.js","mtime":1581496618588},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/docz-core/node_modules/babel-loader/lib/index.js","mtime":1578565694890},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/@mdx-js/loader/index.js","mtime":1581496618277},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/source-map-loader/index.js","mtime":1580255490569}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/dennis.okeeffe/Project-Imposter/developer-notes/manual/Linguistics/The-Art-Of-Language-Invention.md"],"names":["React","mdx","makeShortcode","name","MDXDefaultShortcode","props","console","warn","layoutProps","MDXLayout","MDXContent","components","isMDXComponent"],"mappings":"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","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"the-art-of-language-invention\"\n    }}>{`The Art Of Language Invention`}</h1>\n    <h2 {...{\n      \"id\": \"morphology\"\n    }}>{`Morphology`}</h2>\n    <p>{`Inflectional morphology has to do with changes to a word that don't affect its grammatical category (ie whether it is a noun or a verb or an adjective). An example would be a noun pluralization: man, men.`}</p>\n    <p>{`Derivational morphology is the oppositive. When you change a word graphic (noun) to graphical (adjective) you have derived the second word from the first.`}</p>\n    <h2 {...{\n      \"id\": \"affixes\"\n    }}>{`Affixes`}</h2>\n    <p>{`A cover term for any type of phonological string that has been added to a base word to create a new, modified word.`}</p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Affix`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Definition`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Example`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Prefix`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Added before base word`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`\"Re\"-do`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Suffix`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Added after base word`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Punch-\"ed\"`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Circumfix`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Combination of prefix/suffix`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`\"E\"-long-\"ated\"`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Infix`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Inserted into middle of word`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`In-\"freaking\"-credible`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <h2 {...{\n      \"id\": \"apophony\"\n    }}>{`Apophony`}</h2>\n    <p>{`Cover term that refers to any type of word-internal process used to effect a change in a word (either inflectional or derivational) - the irregular plural of goose, geese is an example.`}</p>\n    <h2 {...{\n      \"id\": \"suppletion\"\n    }}>{`Suppletion`}</h2>\n    <p>{`When two forms that should be related are not related at all. Example being \"good\", \"better\". There is no relationship at all other than that they belong to the same paradigm.`}</p>\n    <h2 {...{\n      \"id\": \"reduplication\"\n    }}>{`Reduplication`}</h2>\n    <p>{`When part of all of a word is repeated for mophological reasons: \"lovey-dovey\", \"ooey-gooey\".`}</p>\n    <h2 {...{\n      \"id\": \"paradigm\"\n    }}>{`Paradigm`}</h2>\n    <p>{`A set of inflectional forms eg short, shorter, shortest.`}</p>\n    <h2 {...{\n      \"id\": \"exponence\"\n    }}>{`Exponence`}</h2>\n    <p>{`A cover term to refer to the reification or instantiation of any inflectional or derivational category. In geese, the exponence is the apophony whereby oo becomes ee.`}</p>\n    <h2 {...{\n      \"id\": \"no-marking-in-languages\"\n    }}>{`No Marking in languages`}</h2>\n    <p>{`Some languages make no morphological distinction between singular and plural outside of a a couple of instances. Nouns in Mandarin Chinese are netiher singular nor plural; the only place where plural marking exists obligatorily is in the pronoun system.`}</p>\n    <h2 {...{\n      \"id\": \"subjects-and-objects-in-grammatical-contexts\"\n    }}>{`Subjects and Objects in Grammatical Contexts`}</h2>\n    <p>{`\"David\" being the change context.`}</p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Sentence`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Context`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`David loves the cat.`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Subject`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`The cat loves David`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Object`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`The cat often brings her string to David`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Indirect Object`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`The cat is a fan of David`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Possessor`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`The cat sits on David`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Location`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`The cat likes to walk downstairs with David`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Companion`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`David! Go feed the cat!`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Addressee`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <h2 {...{\n      \"id\": \"nominal-inflection\"\n    }}>{`Nominal Inflection`}</h2>\n    <p>{`Inflecting words based on a numeral value ie one man vs two men.`}</p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Name`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Definition`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Dual`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Two or an item`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Trial`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Three of an item`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Paucal`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`A few of some item`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Collective`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`A large group of some item`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Singulative`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Substance whose most basic form is plural or masslike`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Distributive`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Plural entity that's evenly divided between a group`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <p>{`An example for distributive would be inflection that demonstrates something like \"our horses (each of us has one horse)\" as is the case for that example in Southern Paiute.`}</p>\n    <h2 {...{\n      \"id\": \"definitive-vs-indefinite-articles\"\n    }}>{`Definitive vs Indefinite Articles`}</h2>\n    <p>{`\"A\" in itself in indefinite and can only accompany a singular noun (although not the case with all languages), \"the\" is a definite articular referring to a particular instance of a noun. In English, the presence of a definite article has no bearing on the form of a noun in singular or plural form.`}</p>\n    <h2 {...{\n      \"id\": \"gender-systems\"\n    }}>{`Gender Systems`}</h2>\n    <p>{`The idea behind genders systems is to point out the fact that nouns in a given language are \"born\", in essence, with a specific set of mophological properties.`}</p>\n    <h2 {...{\n      \"id\": \"animacy-based-systems\"\n    }}>{`Animacy-Based Systems`}</h2>\n    <p>{`Reference either to how active a particular noun is, or how alive it is.`}</p>\n    <h2 {...{\n      \"id\": \"sematic-systems\"\n    }}>{`Sematic Systems`}</h2>\n    <p>{`Semantic systems are larger than gender or animacy systems and take into account the actual semantics of a laguage. Sometimes there will be crossover. Austrailan language Dyirbal, all nouns are assigned to one of four classes, each taking a different article.`}</p>\n    <p>{`They were broken down into:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Class I: Men and other animate things`}</li>\n      <li parentName=\"ul\">{`Class II: Women and certain stinging things`}</li>\n      <li parentName=\"ul\">{`Class III: Edible plants and trees with edible fruit`}</li>\n      <li parentName=\"ul\">{`Class IV: Everything else`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"language-system-notes\"\n    }}>{`Language System Notes`}</h2>\n    <p>{`Gender systems based at least partially on phonology are much more likely to survive than those based purely on semantics.`}</p>\n    <p>{`Semantic classifications are always up for interpretation and a system based purely on semantics may not always be successfully passd on to a younger generation.`}</p>\n    <h2 {...{\n      \"id\": \"he-vs-him\"\n    }}>{`He vs. Him`}</h2>\n    <p>{`You may never have given it much though, but these two words are two versions of the same word: they're simply in two different noun cases.`}</p>\n    <h2 {...{\n      \"id\": \"morphosyntactic-alignment\"\n    }}>{`Morphosyntactic Alignment`}</h2>\n    <p>{`A fancy way of referring to how a languages codes who does what to whom.`}</p>\n    <p>{`There are two main ones:`}</p>\n    <ol>\n      <li parentName=\"ol\">{`Nominative-accusative`}</li>\n      <li parentName=\"ol\">{`Ergative-absolutive`}</li>\n    </ol>\n    <h2 {...{\n      \"id\": \"nominative-accusative-alignment\"\n    }}>{`Nominative-Accusative Alignment`}</h2>\n    <p>{`Both the subject of a transitive verb and the subject of an intransitive verb take the same form. This form is called the `}<inlineCode parentName=\"p\">{`nominative case`}</inlineCode>{`. Objects of transitive verbs take a different form, and that form is called the `}<inlineCode parentName=\"p\">{`accusative case`}</inlineCode>{`.`}</p>\n    <p>{`Examples:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`I am sleeping.`}</li>\n      <li parentName=\"ul\">{`He fought me.`}</li>\n      <li parentName=\"ul\">{`He is sleeping.`}</li>\n      <li parentName=\"ul\">{`She kicked her.`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"ergative-absolutive-aligment\"\n    }}>{`Ergative-Absolutive Aligment`}</h2>\n    <p>{`These are the mirror images of `}<inlineCode parentName=\"p\">{`nominative-accusative`}</inlineCode>{` languages.`}</p>\n    <p>{`If we had to take our examples from before, we would end up with:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`I am sleeping.`}</li>\n      <li parentName=\"ul\">{`Me fought he.`}</li>\n      <li parentName=\"ul\">{`He is sleeping.`}</li>\n      <li parentName=\"ul\">{`Her hugged she.`}</li>\n    </ul>\n    <p>{`This type of language focuses on the different experiences of the participants in a sentence.`}</p>\n    <p>{`The subject of an intransitive verb and the object of the transitive verb are marked with the same case called the `}<inlineCode parentName=\"p\">{`absolutive case`}</inlineCode>{`. For the remaining role, the subject of a transitive verb is marked with the `}<inlineCode parentName=\"p\">{`ergative case`}</inlineCode>{`.`}</p>\n    <h2 {...{\n      \"id\": \"other-non-local-cases\"\n    }}>{`Other Non-Local Cases`}</h2>\n    <ul>\n      <li parentName=\"ul\">{`Instrumental: use with a noun that's used to accomplish the action of a sentence.`}</li>\n      <li parentName=\"ul\">{`Comitative: Used with noun whom another noun is associated.`}</li>\n      <li parentName=\"ul\">{`Benefactive: Used with a noun on behalf of whom the action of the sentence is accomplished.`}</li>\n      <li parentName=\"ul\">{`Vocative: Used with direct address, as when calling someone out by name.`}</li>\n      <li parentName=\"ul\">{`Locative: Used when action of verb takes place in some area having to do with a noun.`}</li>\n      <li parentName=\"ul\">{`Adsessive: Used when the action of the sentence takes place near or around a noun.`}</li>\n      <li parentName=\"ul\">{`Allative: When the action of the sentence moves to or towards a noun.`}</li>\n      <li parentName=\"ul\">{`Ablative: When the action of the sentence moves away from a noun.`}</li>\n      <li parentName=\"ul\">{`Inessive: When the action of the sentence takes place inside a noun.`}</li>\n      <li parentName=\"ul\">{`Illative: When the action of the sentence moves into a noun.`}</li>\n      <li parentName=\"ul\">{`Elative: When the action of the sentence moves out of or out from a noun.`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"agreement\"\n    }}>{`Agreement`}</h2>\n    <p>{`There are two different types of bevaiour languages display with respect to the nouns referred to. In English you always have to state the subject of the sentence, in other languages, though, the agreement morphology on the verb is sufficient to allow users to drop the subject entirely (pro-drop).`}</p>\n    <h2 {...{\n      \"id\": \"valency\"\n    }}>{`Valency`}</h2>\n    <p>{`Valency refers to the number of nominal arguments a verb has and what approximate role those arguments play.`}</p>\n    <p>{`A verb needs to get paired with a noun to express any meaning. The noun is called an argument. Some verbs require exactly one argument. These are called monovalent or intransitive verbs. Transitive verbs are call divalent. You can also get `}<inlineCode parentName=\"p\">{`trivalent`}</inlineCode>{` in examples like `}<inlineCode parentName=\"p\">{`the coyote gave the prisoner an onion`}</inlineCode>{`.`}</p>\n    <p>{`There are two valency changing operations: valency reducing and valency increasing.`}</p>\n    <h2 {...{\n      \"id\": \"agent-and-patient\"\n    }}>{`Agent and Patient`}</h2>\n    <p>{`When dealing with valency, we can think of operations involing the agent and patient.`}</p>\n    <p>{`Example, \"The coyote (agent) disrespected the onion (patient)\".`}</p>\n    <h2 {...{\n      \"id\": \"passivization\"\n    }}>{`Passivization`}</h2>\n    <p>{`Converting a transitive verb to a intransitive verb. This is done by deleting the agent.`}</p>\n    <h2 {...{\n      \"id\": \"causativization\"\n    }}>{`Causativization`}</h2>\n    <p>{`The number of arguments is increased from one to two for an intransitive verb and two to three for a transitive verb.`}</p>\n    <h2 {...{\n      \"id\": \"applicative\"\n    }}>{`Applicative`}</h2>\n    <p>{`Takes a nondirect or peripheral argument and promotes it to the direct object position, deleting or demoting the old direct object (if there was one).`}</p>\n    <p>{`Example, \"I shot better than him\" to \"I outshot him\". This takes an intrasitive verb with some extra info and turns it into a transitive verb.`}</p>\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  "]}]}