{"remainingRequest":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/docz-core/node_modules/babel-loader/lib/index.js??ref--6-1!/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/@mdx-js/loader/index.js??ref--6-2!/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/source-map-loader/index.js!/Users/dennis.okeeffe/Project-Imposter/developer-notes/manual/Stripe/Slim-Stripe-Configuration.md","dependencies":[{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/manual/Stripe/Slim-Stripe-Configuration.md","mtime":1578808556528},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/cache-loader/dist/cjs.js","mtime":1581496618588},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/docz-core/node_modules/babel-loader/lib/index.js","mtime":1578565694890},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/@mdx-js/loader/index.js","mtime":1581496618277},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/source-map-loader/index.js","mtime":1580255490569}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/dennis.okeeffe/Project-Imposter/developer-notes/manual/Stripe/Slim-Stripe-Configuration.md"],"names":["React","mdx","makeShortcode","name","MDXDefaultShortcode","props","console","warn","layoutProps","MDXLayout","MDXContent","components","isMDXComponent"],"mappings":"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","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"configuring-stripe-for-php-and-slim\"\n    }}>{`Configuring Stripe for PHP and Slim`}</h1>\n    <h2 {...{\n      \"id\": \"resources\"\n    }}>{`Resources`}</h2>\n    <ol>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"https://getcomposer.org/download/\"\n        }}>{`Composer installation`}</a></li>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"http://www.slimframework.com/docs/v4/start/installation.html\"\n        }}>{`Getting started with Slim`}</a></li>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"http://www.slimframework.com/docs/v4/objects/request.html\"\n        }}>{`Request Object - Slim`}</a></li>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"https://www.php.net/manual/en/language.exceptions.php\"\n        }}>{`PHP Exceptions`}</a></li>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"https://akrabat.com/receiving-input-into-a-slim-4-application/\"\n        }}>{`Receiving input into a Slim 4 application`}</a></li>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"https://github.com/vlucas/phpdotenv\"\n        }}>{`PHP Dotenv`}</a></li>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"https://github.com/stripe/stripe-php\"\n        }}>{`Stripe PHP Github`}</a></li>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"https://stripe.com/docs/api\"\n        }}>{`Stripe API`}</a></li>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"https://hotexamples.com/examples/slim.http/Request/getParsedBody/php-request-getparsedbody-method-examples.html\"\n        }}>{`getParsedBody Slim`}</a></li>\n    </ol>\n    <h2 {...{\n      \"id\": \"get-started\"\n    }}>{`Get Started`}</h2>\n    <p>{`Ensure `}<inlineCode parentName=\"p\">{`composer`}</inlineCode>{` is installed correctly and run the following. Note that you need to ensure that the downloaded `}<inlineCode parentName=\"p\">{`composer.phar`}</inlineCode>{` file from the installation instructions must be in your `}<inlineCode parentName=\"p\">{`$PATH`}</inlineCode>{` as `}<inlineCode parentName=\"p\">{`composer`}</inlineCode>{`.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`mkdir slim-stripe && cd slim-stripe\ncomposer require slim/slim:\"4.*\"\n# required to enable App::Run() etc without manual ServerRequest\ncomposer require slim/psr7\n# installing for Stripe\ncomposer require stripe/stripe-php\n# required to read dotenv vars\ncomposer require vlucas/phpdotenv\nmkdir -p src/public\ntouch src/public/index.php\ntouch .env\n`}</code></pre>\n    <p>{`To check Slim is up and working, add this to `}<inlineCode parentName=\"p\">{`src/public/index.php`}</inlineCode>{`:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-php\"\n      }}>{`<?php\nuse Psr\\\\Http\\\\Message\\\\ResponseInterface as Response;\nuse Psr\\\\Http\\\\Message\\\\ServerRequestInterface as Request;\nuse Slim\\\\Factory\\\\AppFactory;\n\nrequire __DIR__ . '/../../vendor/autoload.php';\n\n$app = AppFactory::create();\n\n$app->get('/', function (Request $request, Response $response, $args) {\n    $response->getBody()->write(\"Hello world!\");\n    return $response;\n});\n\n$app->run();\n`}</code></pre>\n    <p>{`Once completed, change into `}<inlineCode parentName=\"p\">{`src/public`}</inlineCode>{` and run `}<inlineCode parentName=\"p\">{`php -S localhost:8080`}</inlineCode>{`.`}</p>\n    <p>{`If we now ping `}<inlineCode parentName=\"p\">{`curl localhost:8080`}</inlineCode>{` we will see our `}<inlineCode parentName=\"p\">{`Hello world!`}</inlineCode>{` response.`}</p>\n    <h2 {...{\n      \"id\": \"setting-up-env\"\n    }}>{`Setting up .env`}</h2>\n    <p>{`Our `}<inlineCode parentName=\"p\">{`.env`}</inlineCode>{` file should contain our keys for development. Get these from your Stripe Developer dashboard.`}</p>\n    <p>{`Add the following to the `}<inlineCode parentName=\"p\">{`.env`}</inlineCode>{` file in the root of your project directory:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`SK_TEST_KEY= sk_test...\nPK_TEST_KEY=pk_test...\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"making-a-simple-charge-with-stripe-api\"\n    }}>{`Making a simple charge with Stripe API`}</h2>\n    <p>{`Let us update `}<inlineCode parentName=\"p\">{`src/public/index.php`}</inlineCode>{` to take a simple request to make a charge to our Stripe account.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-php\"\n      }}>{`<?php\nuse Psr\\\\Http\\\\Message\\\\ResponseInterface as Response;\nuse Psr\\\\Http\\\\Message\\\\ServerRequestInterface as Request;\nuse Slim\\\\Factory\\\\AppFactory;\n\nrequire __DIR__ . '/../../vendor/autoload.php';\n\n$dotenv = Dotenv\\\\Dotenv::createImmutable(__DIR__ . '/../..');\n$dotenv->load();\n\n$stripeKey = getenv('SK_TEST_KEY');\n\\\\Stripe\\\\Stripe::setApiKey($stripeKey);\n\n$app = AppFactory::create();\n\n// Parse json, form data and xml\n$app->addBodyParsingMiddleware();\n$app->addRoutingMiddleware();\n$app->addErrorMiddleware(true, true, true);\n\n$app->get('/', function (Request $request, Response $response, $args) {\n    $response->getBody()->write(\"Hello world!\");\n    return $response;\n});\n\n$app->post('/api/charge', function (Request $request, Response $response, $args) {\n  try {\n    $data = $request->getParsedBody();\n\n    // parse attributes from JSON\n    $receiptEmail = $data['receiptEmail'];\n    $amount = $data['amount'];\n\n    // create the charge\n    $charge = \\\\Stripe\\\\Charge::create([\n      'amount' => $amount,\n      'currency' => 'usd',\n      'source' => 'tok_visa',\n      'receipt_email' => $receiptEmail\n    ]);\n\n    $response->getBody()->write('Successful charge');\n    $response->withStatus(201);\n    return $response;\n  } catch (Exception $e) {\n    $response->getBody()->write('Failed charge');\n    $response->withStatus(500);\n    return $response;\n  }\n});\n\n$app->run();\n`}</code></pre>\n    <p>{`Note that in the above example we are loading keys from `}<inlineCode parentName=\"p\">{`.env`}</inlineCode>{`, setting the Stripe API key, then using Slim 4's body parsing middleware to help us with parsing the request body from JSON.`}</p>\n    <p>{`If we run `}<inlineCode parentName=\"p\">{`http POST http://localhost:8080/api/charge amount:=500 receiptEmail=hello@example.com`}</inlineCode>{` (using HTTPie) from the console, we will get our `}<inlineCode parentName=\"p\">{`Successful charge`}</inlineCode>{` message back.`}</p>\n    <p>{`We can head to our dashboard on Stripe and head to `}<inlineCode parentName=\"p\">{`Developers > Events`}</inlineCode>{` to see the log of our successful charge for `}<inlineCode parentName=\"p\">{`US$5.00`}</inlineCode>{`. Hooray!`}</p>\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  "]}]}