{"remainingRequest":"/Users/okeeffe_d/Project-Imposter/developer-notes/node_modules/docz-core/node_modules/babel-loader/lib/index.js??ref--6-1!/Users/okeeffe_d/Project-Imposter/developer-notes/node_modules/@mdx-js/loader/index.js??ref--6-2!/Users/okeeffe_d/Project-Imposter/developer-notes/node_modules/source-map-loader/index.js!/Users/okeeffe_d/Project-Imposter/developer-notes/manual/WordPress/WP-PC-Cheat-Sheet.md","dependencies":[{"path":"/Users/okeeffe_d/Project-Imposter/developer-notes/manual/WordPress/WP-PC-Cheat-Sheet.md","mtime":1548282824849},{"path":"/Users/okeeffe_d/Project-Imposter/developer-notes/node_modules/cache-loader/dist/cjs.js","mtime":1561535530324},{"path":"/Users/okeeffe_d/Project-Imposter/developer-notes/node_modules/docz-core/node_modules/babel-loader/lib/index.js","mtime":1560300163820},{"path":"/Users/okeeffe_d/Project-Imposter/developer-notes/node_modules/@mdx-js/loader/index.js","mtime":1561535530532},{"path":"/Users/okeeffe_d/Project-Imposter/developer-notes/node_modules/source-map-loader/index.js","mtime":1548285283521}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/okeeffe_d/Project-Imposter/developer-notes/manual/WordPress/WP-PC-Cheat-Sheet.md"],"names":["React","mdx","makeShortcode","name","MDXDefaultShortcode","props","console","warn","layoutProps","MDXLayout","MDXContent","components","isMDXComponent"],"mappings":"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","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"wp-pres-company-cheat-sheet\"\n    }}>{`WP PRES COMPANY CHEAT SHEET`}</h1>\n    {\n      /* TOC */\n    }\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"#wp-pres-company-cheat-sheet\"\n        }}>{`WP PRES COMPANY CHEAT SHEET`}</a><ul parentName=\"li\">\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#wppres-1-faq\"\n            }}>{`WPPRES-1: FAQ`}</a></li>\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#wppres-2-custom-type-relationships\"\n            }}>{`WPPRES-2: Custom Type Relationships`}</a></li>\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#wppres-3-example-of-rendering-a-twig-file-using-timber-wp-functions\"\n            }}>{`WPPRES-3: Example of Rendering a .twig file using Timber WP functions`}</a></li>\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#wppres-4-example-php-functionsphp\"\n            }}>{`WPPRES-4: Example PHP functions.php`}</a></li>\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#wppres-5-creating-ajax-loading-example\"\n            }}>{`WPPRES-5: Creating AJAX (Loading example)`}</a></li>\n        </ul></li>\n    </ul>\n    {\n      /* /TOC */\n    }\n    <h2 {...{\n      \"id\": \"wppres-1-faq\"\n    }}>{`WPPRES-1: FAQ`}</h2>\n    <p><strong parentName=\"p\">{`Q: I'm having a database connection failure through MAMP`}</strong></p>\n    <p>{`A: Double check the wp_options in the siteurl and home settings and that they correctly match MAMP. If you are on the default MAMP ports, you may need localhost:8888 in both addresses. Also check the wp_config.php file in your text editor to ensure the content URL is also correct.`}</p>\n    <p>{`Also be sure to check your /etc/hosts file to see what address and terms are set up and that you restart the mySQL daemon, MAMP and Sequel Pro.`}</p>\n    <p><strong parentName=\"p\">{`Q: Adjust get_posts posts_per_page for a data`}{`[\"term\"]`}{` request`}</strong></p>\n    <p>{`A: Add it as an argument in twig or create a custom function adjusting the posts_per_page. You can pass any get_posts properties as arguments here.`}</p>\n    <p><strong parentName=\"p\">{`Q: Where can I find what I need?`}</strong></p>\n    <p>{`A: Check against the staging website if it is up to grab things like taxonomies, types, and to figure out the layout.`}</p>\n    <h2 {...{\n      \"id\": \"wppres-2-custom-type-relationships\"\n    }}>{`WPPRES-2: Custom Type Relationships`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-php\"\n      }}>{`// in author-articles.php\n\n// be sure to require it in the functions.php file!\n\n<?php\n\nclass AuthorArticles {\n\n    // Get all locations w/ recent posts\n    public static function getAuthorArticles($author) {\n\n        $args = new WP_Query([\n            'post_type' => 'post',\n            'no_found_rows' => true,\n            'fields' => 'ids',\n            'orderby' => 'date',\n            'order' => 'desc',\n            'meta_query' => [\n                    [\n                        'key' => 'article_author',\n                        'value' => $author,\n                        'compare' => 'LIKE'\n                    ]\n                ]\n        ]);\n\n        $postIds = $args->get_posts();\n\n        $results = Timber::get_posts($postIds);\n\n        return Timber::get_posts($postIds);\n    }\n\n}\n\n?>\n\n// example in use\n// Author Template - single-authors.php file\n\n<?php\n\n/* Template Name: Author */\n\n$data = Context::getDefaultContext();\n\n$data['author'] = Timber::get_post();\n\n$data['posts'] = AuthorArticles::getAuthorArticles($data['author']->id);\n\n$data['breadcrumbs'] = [\n    [\n        'text' => 'Authors',\n        'url' => $data['site']->url .'/authors'\n    ]\n];\n\n\nTimber::render('author.twig', $data);\n\n?>\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"wppres-3-example-of-rendering-a-twig-file-using-timber-wp-functions\"\n    }}>{`WPPRES-3: Example of Rendering a .twig file using Timber WP functions`}</h2>\n    <ul>\n      <li parentName=\"ul\">{`using the above examples`}</li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-html\"\n      }}>{`// __author.twig__\n\n{% if post.article_author %}\n{% set author = TimberPost(post.get_field('article_author')) %}\n<div class=\"author-container\">\n    <p>Article By</p>\n    <div class=\"author\">\n        <div class=\"image\">\n            {% set image = TimberImage(author.get_thumbnail) %}\n            {% include 'partials/image.twig' with {\n                image: image,\n                size: 'square_400'\n            } %}\n        </div>\n        <div class=\"info\">\n            <h3 class=\"title\">{{ author.title }}</h3>\n            {% for social in author.get_field('social') %}\n                <div class='social'>\n                    <a href='{{ social.url }}' target=\"_blank\" class='icon'>\n                        <i class='{{ socialIcons[social.network] }}'></i>\n                    </a>\n                    <a href='{{ social.url }}' target=\"_blank\">\n                        <span>{{ social.display }}</span>\n                    </a>\n                </div>\n            {% endfor %}\n            <a class=\"authorlink\" href=\"{{ author.link }}\">View Author Page</a>\n        </div>\n    </div>\n</div>\n{% endif %}\n\n***\n\n// __list.twig__\n\n<div class=\"list -post\">\n    <ul class=\"list-items\">\n    {% for post in posts %}\n        {% include 'partials/post/list-item.twig' %}\n    {% else %}\n        <p>Sorry, no posts matched your criteria</p>\n    {% endfor %}\n    </ul>\n</div>\n\n***\n\n__list-item.twig__\n\n<li class=\"list-item -post tile\">\n    <a href=\"#\">\n        <div class=\"image\">\n            <img src=\"{{ post.get_thumbnail }}\" alt=\"\">\n        </div>\n        <div class=\"info\">\n            <h3 class=\"title\">{{ post.title }}</h3>\n            <p>{{ post.intro }}</p>\n            <div class=\"read-more\">\n                <a href=\"{{ post.link }}\">read more ></a>\n            </div>\n        </div>\n    </a>\n</li>\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"wppres-4-example-php-functionsphp\"\n    }}>{`WPPRES-4: Example PHP functions.php`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-php\"\n      }}>{`<?php\n\nadd_filter('show_admin_bar', '__return_false');\n\nrequire_once('functions/routes.php');\nrequire_once('functions/twig.php');\nrequire_once('functions/theme_support.php');\nrequire_once('functions/enqueue_scripts.php');\nrequire_once('functions/acf.php');\nrequire_once('functions/timber.php');\nrequire_once('functions/context.php');\nrequire_once('functions/locations.php');\nrequire_once('functions/author_articles.php');\nrequire_once('functions/infobox.php');\n\nif (!is_admin()) {\n    require_once('functions/post_filters.php');\n}\n\n?>\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"wppres-5-creating-ajax-loading-example\"\n    }}>{`WPPRES-5: Creating AJAX (Loading example)`}</h2>\n    <p>{`Using twig, variables were passed down to be used for things such as `}<inlineCode parentName=\"p\">{`loadmore.twig`}</inlineCode>{`, while a PHP class, routes and functions were set up to interact with the JS file.`}</p>\n    <p><strong parentName=\"p\">{`function.php`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-php\"\n      }}>{`<?php\n...\nrequire_once('functions/load_more.php');\n...\n?>\n`}</code></pre>\n    <p><strong parentName=\"p\">{`loadmore.php`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-php\"\n      }}>{`<?php\n\nclass LoadMore {\n    public function loadNextSet($params) {\n        $perPage = 6;\n        $page = $params['page'];\n        $category = $params['cat'];\n        $data = Context::getDefaultContext();\n        $data['category'] = new TimberTerm($category);\n        $data['tag'] = 'tag';\n\n        $posts = $data['category']->get_posts([\n          'posts_per_page' => $perPage,\n          'orderby' => 'date',\n          'order' => 'DESC',\n          'offset' => ($perPage*$page) + 3,\n        ]);\n\n        $data['posts'] = $posts;\n\n        Timber::render('partials/post/grid.twig', $data);\n        exit();\n    }\n}\n\n?>\n`}</code></pre>\n    <p><strong parentName=\"p\">{`routes.php`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-php\"\n      }}>{`...\n// $params are the :section, :cat and :page args\nRoutes::map(':section/:cat/:page', function($params){\n    $articles = new LoadMore();\n    echo $articles->loadNextSet($params);\n});\n...\n`}</code></pre>\n    <pre><code parentName=\"pre\" {...{}}>{`__loadmore.twig__\n\n\\`\\`\\`html\n<div class=\"loadmore-container\" data-page='1' data-section='{{ section }}' data-category='{{ category }}'>\n    <a>Load More</a>\n</div>\n`}</code></pre>\n    <p><strong parentName=\"p\">{`load-more.js`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`var titleTagline = require('./title-tagline.js');\n\nvar loadMore = {\n    $loadMoreContainer: $('.loadmore-container'),\n    category: $('.loadmore-container').data('category'),\n    section: $('.loadmore-container').data('section'),\n    search: $('.loadmore-container').data('search'),\n    page: $('.loadmore-container').data('page'),\n    base_url: $('meta[name=base_url]').attr('content'),\n    perPage: 6,\n\n    init: function() {\n        // Show mega-menu when mega-menu link is focused\n        loadMore.$loadMoreContainer.on('click', function(e) {\n            e.preventDefault();\n            if ($('ul.grid').length > 0) {\n                loadMore.loadNextSection();\n            } else {\n                loadMore.loadNextSearch();\n            }\n        });\n    },\n\n    loadNextSection: function() {\n        return $.ajax({\n            url:\n                loadMore.base_url +\n                '/section/' +\n                loadMore.section +\n                '/' +\n                loadMore.category +\n                '/' +\n                loadMore.page,\n            type: 'GET',\n            success: loadMore.resultsSection,\n            error: loadMore.outputError\n        });\n    },\n\n    loadNextSearch: function() {\n        var urlString = loadMore.search;\n        urlString = urlString.replace(' ', '+');\n        console.log(urlString);\n        return $.ajax({\n            url:\n                loadMore.base_url +\n                '/search/' +\n                urlString +\n                '/' +\n                loadMore.page,\n            type: 'GET',\n            success: loadMore.resultsSearch,\n            error: loadMore.outputError\n        });\n    },\n\n    resultsSection: function(data) {\n        var numPosts = $(data).find('li.-post').length;\n        loadMore.page = parseInt(loadMore.page) + 1;\n        var render = $(data)\n            .find('li.-post')\n            .unwrap();\n        $('ul.grid')\n            .last()\n            .append(render);\n\n        if (numPosts < loadMore.perPage) {\n            loadMore.hideViewAll();\n        }\n\n        titleTagline.init();\n        titleTagline.doneResizing();\n    },\n\n    resultsSearch: function(data) {\n        console.log(data);\n\n        var numPosts = $(data).find('li.list-item').length;\n        loadMore.page = parseInt(loadMore.page) + 1;\n\n        var render = $(data)\n            .find('li.list-item')\n            .unwrap();\n        $('ul.list')\n            .last()\n            .append(render);\n\n        if (numPosts < loadMore.perPage) {\n            loadMore.hideViewAll();\n        }\n    },\n\n    hideViewAll: function() {\n        loadMore.$loadMoreContainer.css('display', 'none');\n    }\n};\n\nmodule.exports = {\n    init: loadMore.init\n};\n`}</code></pre>\n    <p><strong parentName=\"p\">{`loadmore.php`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-php\"\n      }}>{`<?php\n\nclass LoadMore {\n    public function loadNextLocationsSet($params) {\n        $perPage = 6;\n        $page = $params['page'];\n        $category = $params['cat'];\n        $data = Context::getDefaultContext();\n        $data['category'] = new TimberTerm($category);\n        $data['tag'] = 'tag';\n\n        $posts = $data['category']->get_posts([\n          'posts_per_page' => $perPage,\n          'orderby' => 'date',\n          'order' => 'DESC',\n          'offset' => ($perPage*$page) + 3,\n        ]);\n\n        $data['posts'] = $posts;\n\n        Timber::render('partials/post/grid.twig', $data);\n        exit();\n    }\n\n    public function loadNextSearchSet($params) {\n        $perPage = 6;\n        $page = (int)$params['page'];\n        $field = $params['search'];\n        $offset = ($perPage*$page) + 4;\n        $data = Context::getDefaultContext();\n        $search = get_query_var('s');\n        $searchTerm = htmlspecialchars($field);\n\n        $data['posts'] = SearchTerms::getSearchArticles($field, $offset, $perPage);\n\n        Timber::render('partials/post/list.twig', $data);\n        exit();\n    }\n\n    public function loadNextInspirationsSet($params) {\n\n        $exclusion = [];\n\n        $perPage = 6;\n        $page = $params['page'];\n        $category = $params['cat'];\n        $data = Context::getDefaultContext();\n        $data['category'] = new TimberTerm($category);\n        $data['tag'] = 'tag';\n\n        if($featuredIds = $data['category']->featured) {\n            $data['categoryFeatured'] = Timber::get_posts($featuredIds);\n            $exclusion = self::updateExclusionList($data['categoryFeatured'], $exclusion);\n        }\n\n        $posts = $data['category']->get_posts([\n            'posts_per_page' => $perPage,\n            'orderby' => 'date',\n            'order' => 'DESC',\n            'offset' => ($perPage*$page) + 4,\n            'post__not_in' => $exclusion,\n        ]);\n\n        $data['posts'] = $posts;\n\n        Timber::render('partials/post/grid.twig', $data);\n        exit();\n    }\n\n    static function updateExclusionList($original, $exclusion) {\n        foreach($original as $post) {\n            if($post) {\n                array_push($exclusion, $post->id);\n            }\n        }\n        return $exclusion;\n    }\n}\n\n?>\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"wppres-6-custom-search-terms\"\n    }}>{`WPPRES-6: Custom Search Terms`}</h2>\n    <p>{`This example was taken from YAC when it was required to search for a CPT ID and then use it to get some post ids returned with the latest meta data values.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-php\"\n      }}>{`// from functions > search_term.php\n\nglobal $wpdb;\n\n$park_ids = [];\n$meta_arrays = [];\n$posts_park = [];\n\nif (strlen($search_term) > 3) {\n\n    $park_post_type='parks';\n    $park_post_status='publish';\n\n    // get the park ids that relate to the search\n    $park_args = $wpdb->get_col( $wpdb->prepare(\n            \"\n            SELECT ID\n            FROM $wpdb->posts WP\n            WHERE WP.post_title LIKE '%%%s%%'\n            AND post_type='%s'\n            AND post_status='%s'\n            \",\n            esc_sql($search_term),\n            esc_sql($park_post_type),\n            esc_sql($park_post_status)\n        )\n    );\n\n    $park_ids = $park_args;\n\n    if ($park_ids != null ) {\n\n        $park_ids = esc_sql( $park_ids );\n        $park_ids_str = \"'[^0-9]*\" . implode( \"[^0-9]*'|'[^0-9]*\", $park_ids ) . \"[^0-9]*'\";\n        $park = 'park';\n\n        //find the parks\n        $init_park = $wpdb->get_col( $wpdb->prepare(\n                \"\n                SELECT WP.ID\n                FROM $wpdb->posts WP\n                INNER JOIN $wpdb->postmeta PM\n                ON ( WP.ID = PM.post_id )\n                WHERE 1=1\n                AND ( ( PM.meta_key = %s\n                AND PM.meta_value REGEXP {$park_ids_str} ) )\n                AND WP.post_type = 'post'\n                AND (WP.post_status = 'publish')\n                GROUP BY WP.ID\n                ORDER BY WP.post_title DESC, WP.post_date DESC\n                \",\n                esc_sql($park)\n            )\n        );\n\n        // grab post results to allow metadata\n        // comparison for park\n        $results = Timber::get_posts($init_park);\n\n        // filter the results to ensure posts are associated with\n        // the latest and correct \\`park\\` value\n        if ($results) {\n            foreach ($results as $result) {\n                if (array_intersect($result->custom['park'], $park_ids)) {\n                    $posts_park[] = $result->id;\n                }\n            }\n        }\n    }\n}\n`}</code></pre>\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  "]}]}