{"remainingRequest":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/docz-core/node_modules/babel-loader/lib/index.js??ref--6-1!/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/@mdx-js/loader/index.js??ref--6-2!/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/source-map-loader/index.js!/Users/dennis.okeeffe/Project-Imposter/developer-notes/manual/Java/Dependency-Management-With-Gradle.md","dependencies":[{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/manual/Java/Dependency-Management-With-Gradle.md","mtime":1579074369030},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/cache-loader/dist/cjs.js","mtime":1581496618588},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/docz-core/node_modules/babel-loader/lib/index.js","mtime":1578565694890},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/@mdx-js/loader/index.js","mtime":1581496618277},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/source-map-loader/index.js","mtime":1580255490569}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/dennis.okeeffe/Project-Imposter/developer-notes/manual/Java/Dependency-Management-With-Gradle.md"],"names":["React","mdx","makeShortcode","name","MDXDefaultShortcode","props","console","warn","layoutProps","MDXLayout","MDXContent","components","isMDXComponent"],"mappings":"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","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"dependency-management-with-gradle\"\n    }}>{`Dependency Management with Gradle`}</h1>\n    {\n      /* TOC */\n    }\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"#dependency-management-with-gradle\"\n        }}>{`Dependency Management with Gradle`}</a><ul parentName=\"li\">\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#gr-1-gradle-the-build-tool\"\n            }}>{`GR-1: Gradle the build tool`}</a><ul parentName=\"li\">\n              <li parentName=\"ul\"><a parentName=\"li\" {...{\n                  \"href\": \"#-----gr-11-buildgradle\"\n                }}>{`---- GR-1.1: build.gradle`}</a></li>\n              <li parentName=\"ul\"><a parentName=\"li\" {...{\n                  \"href\": \"#-----gr-12-gradlew-and-gradlewbat\"\n                }}>{`---- GR-1.2: gradlew and gradlew.bat`}</a></li>\n            </ul></li>\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#gr-2-adding-dependencies\"\n            }}>{`GR-2: Adding Dependencies`}</a></li>\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#gr-3-source-code\"\n            }}>{`GR-3: Source Code`}</a></li>\n        </ul></li>\n    </ul>\n    {\n      /* /TOC */\n    }\n    <h2 {...{\n      \"id\": \"gr-1-gradle-the-build-tool\"\n    }}>{`GR-1: Gradle the build tool`}</h2>\n    <p>{`There are a lot of tasks when you want to build your project.`}</p>\n    <p>{`Other build tools include Maven and Ant, and Gradle works well with these two.`}</p>\n    <p>{`Gradle exposes a Domain Specific Language (DSL) that is based heavily on the `}<a parentName=\"p\" {...{\n        \"href\": \"http://groovy-lang.org/\"\n      }}>{`Groovy Programming Language`}</a>{` and is very similar to Groovy.`}</p>\n    <p>{`Gradle has an opinionated way on how things should be done and laid out.`}</p>\n    <p>{`If you want to use an IDE for this, the example uses `}<inlineCode parentName=\"p\">{`IntelliJ`}</inlineCode>{` and the Gradle template.`}</p>\n    <p>{`From the main menu, select Gradle and select Java as the main language and create.`}</p>\n    <p>{`From here, you will need to fill in:`}</p>\n    <p><inlineCode parentName=\"p\">{`GroupId`}</inlineCode>{`: General com.dennis.app\n`}<inlineCode parentName=\"p\">{`ArtifactId`}</inlineCode>{`: JAR file name eg. app`}</p>\n    <p>{`Ensure you select the Java version you want to use as well - demo was 1.8.`}</p>\n    <p>{`One you are in the files have been downloaded by Gradle, open up the project structure and it'll end up creating a build script called `}<inlineCode parentName=\"p\">{`build.gradle`}</inlineCode>{`.`}</p>\n    <h2 {...{\n      \"id\": \"gr-11-buildgradle\"\n    }}>{`GR-1.1: build.gradle`}</h2>\n    <p>{`This is the main file that is defining things like the structure etc.`}</p>\n    <p>{`For now, you may have this as an example`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`group 'com.dennisokeeffe.intro'\nversion '1.0-SNAPSHOT'\n\napply plugin: 'java'\n\nsourceCompatibility = 1.5\n\nrepositories {\n    mavenCentral()\n}\n\ndependencies {\n    testCompile group: 'junit', name: 'junit', version: '4.11'\n}\n`}</code></pre>\n    <p>{`The `}<inlineCode parentName=\"p\">{`apply`}</inlineCode>{` is for things like folder structure etc. - you may notice that this is also the `}<inlineCode parentName=\"p\">{`Groovy`}</inlineCode>{` language.`}</p>\n    <h2 {...{\n      \"id\": \"gr-12-gradlew-and-gradlewbat\"\n    }}>{`GR-1.2: gradlew and gradlew.bat`}</h2>\n    <p>{`These files are the Gradle wrappers that makes sure that everyone can build and test the project the same way.`}</p>\n    <hr></hr>\n    <h2 {...{\n      \"id\": \"gr-2-adding-dependencies\"\n    }}>{`GR-2: Adding Dependencies`}</h2>\n    <p>{`Transitive depencies are all handled through Gradle. This means it won't download version of dependencies it already has.`}</p>\n    <p>{`Where does it download from? This is under control that is defined in the `}<inlineCode parentName=\"p\">{`repositories`}</inlineCode>{` section and by default uses `}<inlineCode parentName=\"p\">{`Maven Central`}</inlineCode>{` - you can also change this.`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`// dependencies uses a helper function mavenCentral()\n// anything in dependencies will look in the repos\n\nrepositories {\n    mavenCentral()\n}\n\ndependencies {\n    testCompile group: 'junit', name: 'junit', version: '4.11'\n}\n`}</code></pre>\n    <p>{`As an example, we can actually find packages that can be used as Maven depencies (XML) and add it such that Gradle can handle it. Eg Apache CSV package.`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`repositories {\n    mavenCentral()\n}\n\ndependencies {\n    compile group: ''org.apache.commons', name: 'commons-csv', version: '1.2'\n    testCompile group: 'junit', name: 'junit', version: '4.11'\n}\n`}</code></pre>\n    <p>{`Now we want to refresh the project.`}</p>\n    <p>{`In IntelliJ, you can find the Gradle tool bar on the lefthand edge and then click on it and select refresh to rebuild.`}</p>\n    <p>{`Now, the library will show up in the External Libraries section. If you had the `}<inlineCode parentName=\"p\">{`Auto import`}</inlineCode>{` setting selected or you have right-clicked on the project name in the LH edge Gradle bar and selected `}<inlineCode parentName=\"p\">{`Auto-import`}</inlineCode>{`, it will automatically do this for you.`}</p>\n    <p>{`There is also a shorter form for writing dependencies.`}</p>\n    <p>{`compile 'org.apache.commons:commons-csv:1.2'`}</p>\n    <p>{`Transitive dependencies will also be downloaded automatically. If we want a better idea of what is going on, we can use the terminal.`}</p>\n    <p>{`To do this, we can run `}<inlineCode parentName=\"p\">{`./gradlew dependencies`}</inlineCode></p>\n    <h2 {...{\n      \"id\": \"gr-3-source-code\"\n    }}>{`GR-3: Source Code`}</h2>\n    <p>{`Now, anyone who has that `}<inlineCode parentName=\"p\">{`gradle build`}</inlineCode>{` file we have, we can just insert all those depencies that we need and then from any computer we can just build that!`}</p>\n    <p>{`Then we can import the packages that we need to the Java files and then use them as we expect.`}</p>\n    <p>{`To find more packages, we can then go to something like Maven and search for packages.`}</p>\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  "]}]}