{"remainingRequest":"/Users/okeeffe_d/Business/Documentation/node_modules/babel-loader/lib/index.js?{\"presets\":[[\"/Users/okeeffe_d/Business/Documentation/node_modules/babel-preset-docz/dist/index.js\",{\"flow\":true,\"typescript\":false,\"parseProps\":true}]],\"plugins\":[[\"/Users/okeeffe_d/Business/Documentation/node_modules/docz-utils/lib/named-asset-import.js\",{\"loaderMap\":{\"svg\":{\"ReactComponent\":\"@svgr/webpack?-prettier,-svgo![path]\"}}}],\"/Users/okeeffe_d/Business/Documentation/node_modules/react-hot-loader/babel.js\"],\"babelrc\":false,\"cacheCompression\":false,\"compact\":false}!/Users/okeeffe_d/Business/Documentation/manual/React/structure.md","dependencies":[{"path":"/Users/okeeffe_d/Business/Documentation/manual/React/structure.md","mtime":1548209344427},{"path":"/Users/okeeffe_d/Business/Documentation/node_modules/cache-loader/dist/cjs.js","mtime":1548134640245},{"path":"/Users/okeeffe_d/Business/Documentation/node_modules/babel-loader/lib/index.js","mtime":1548134640227}],"contextDependencies":[],"result":["var _jsxFileName = \"/Users/okeeffe_d/Business/Documentation/manual/React/structure.md\";\n\n(function () {\n  var enterModule = require('react-hot-loader').enterModule;\n\n  enterModule && enterModule(module);\n})();\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport React from 'react';\nimport { MDXTag } from '@mdx-js/tag';\n\nvar MDXContent =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(MDXContent, _React$Component);\n\n  function MDXContent(props) {\n    var _this;\n\n    _classCallCheck(this, MDXContent);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MDXContent).call(this, props));\n    _this.layout = null;\n    return _this;\n  }\n\n  _createClass(MDXContent, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          components = _this$props.components,\n          props = _objectWithoutProperties(_this$props, [\"components\"]);\n\n      return React.createElement(MDXTag, {\n        name: \"wrapper\",\n        components: components,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14\n        },\n        __self: this\n      }, React.createElement(MDXTag, {\n        name: \"hr\",\n        components: components,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      }), React.createElement(MDXTag, {\n        name: \"p\",\n        components: components,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }, \"Author: Dennis O'Keeffe\"), React.createElement(MDXTag, {\n        name: \"h2\",\n        components: components,\n        props: {\n          \"id\": \"section-react\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }, \"Section: React\"), React.createElement(MDXTag, {\n        name: \"h1\",\n        components: components,\n        props: {\n          \"id\": \"react-structure\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }, \"React Structure\"), React.createElement(MDXTag, {\n        name: \"p\",\n        components: components,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, \"The structure of a React component may very down the track, so this document should be updated to reflect this.\"), React.createElement(MDXTag, {\n        name: \"p\",\n        components: components,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, \"An example of a component tree for makeshift component \", React.createElement(MDXTag, {\n        name: \"inlineCode\",\n        components: components,\n        parentName: \"p\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, \"Component\"), \" in \", React.createElement(MDXTag, {\n        name: \"inlineCode\",\n        components: components,\n        parentName: \"p\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, \"src/components/PageFormTest\"), \":\"), React.createElement(MDXTag, {\n        name: \"pre\",\n        components: components,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, React.createElement(MDXTag, {\n        name: \"code\",\n        components: components,\n        parentName: \"pre\",\n        props: {\n          \"className\": \"language-javascript\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, \"Component\\n\\u251C\\u2500\\u2500 Component.mocha.js\\n\\u251C\\u2500\\u2500 Component.puppeteer.js\\n\\u251C\\u2500\\u2500 Component.storybook.js\\n\\u251C\\u2500\\u2500 README.md\\n\\u251C\\u2500\\u2500 DOCS.md\\n\\u251C\\u2500\\u2500 index.js\\n\\u2514\\u2500\\u2500 styles.scss\\n\")), React.createElement(MDXTag, {\n        name: \"p\",\n        components: components,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, \"In the case of some of these components, there will not be a full suite of these files.\"), React.createElement(MDXTag, {\n        name: \"h1\",\n        components: components,\n        props: {\n          \"id\": \"indexjs\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, \"index.js\"), React.createElement(MDXTag, {\n        name: \"p\",\n        components: components,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, \"This is the main component file. With this and the setup for resolvers in webpack, you can require a component by using \", React.createElement(MDXTag, {\n        name: \"inlineCode\",\n        components: components,\n        parentName: \"p\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, \"import 'components/ComponentName\"), \" and using the \", React.createElement(MDXTag, {\n        name: \"inlineCode\",\n        components: components,\n        parentName: \"p\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, \"index.js\"), \" to default as the import for there. Note: this is a change to previous projects.\"), React.createElement(MDXTag, {\n        name: \"h1\",\n        components: components,\n        props: {\n          \"id\": \"componentmochajs\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, \"Component.mocha.js\"), React.createElement(MDXTag, {\n        name: \"p\",\n        components: components,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, \"This will be the main mocha + chai + enzyme tests for the file. This file should cover all methods used within the component and thoroughly check rendering.\"), React.createElement(MDXTag, {\n        name: \"h1\",\n        components: components,\n        props: {\n          \"id\": \"componentpuppeteerjs\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, \"Component.puppeteer.js\"), React.createElement(MDXTag, {\n        name: \"p\",\n        components: components,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, \"There is an issue for using Istanbul for coverage when also using Puppeteer, so these tests have been separated. Puppeteer tests should be used for UI testing. You can use this is either \", React.createElement(MDXTag, {\n        name: \"inlineCode\",\n        components: components,\n        parentName: \"p\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, \"headless\"), \" mode or visually see the tests carried out in the browser.\"), React.createElement(MDXTag, {\n        name: \"h1\",\n        components: components,\n        props: {\n          \"id\": \"componentstorybookjs\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, \"Component.storybook.js\"), React.createElement(MDXTag, {\n        name: \"p\",\n        components: components,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, \"This is the storybook file to be imported into Storybook. It is a good idea for the individual, smaller components to develop them while inside of storybook, although not always required.\"), React.createElement(MDXTag, {\n        name: \"h1\",\n        components: components,\n        props: {\n          \"id\": \"readmemd\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, \"README.md\"), React.createElement(MDXTag, {\n        name: \"p\",\n        components: components,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, \"Every file should have a README.md file to explain why it exists and what the component is used for. These files are also used by storybook to generate the README for a component.\"), React.createElement(MDXTag, {\n        name: \"h1\",\n        components: components,\n        props: {\n          \"id\": \"docsmd\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, \"DOCS.md\"), React.createElement(MDXTag, {\n        name: \"p\",\n        components: components,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, \"This is the documentation markdown file. This is optional and should not be manually created. This is created through a gulp task, although the package that generates the markdown relies on \", React.createElement(MDXTag, {\n        name: \"inlineCode\",\n        components: components,\n        parentName: \"p\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, \"esprima\"), \" and esprima cannot handle the bleeding edge tech of React sometimes and will fail to turn out Docblockr comments into the file.\"), React.createElement(MDXTag, {\n        name: \"h1\",\n        components: components,\n        props: {\n          \"id\": \"stylesscss\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, \"styles.scss\"), React.createElement(MDXTag, {\n        name: \"p\",\n        components: components,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, \"This is the styles file for the specific component. It should always have a parent wrapper selector to prevent bleeding thorugh to another component. In \", React.createElement(MDXTag, {\n        name: \"inlineCode\",\n        components: components,\n        parentName: \"p\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, \"src/styles/main.scss\"), \" there is a \", React.createElement(MDXTag, {\n        name: \"inlineCode\",\n        components: components,\n        parentName: \"p\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, \"import 'src/components/**/*.scss\"), \" statement to require all these style files so they too can use the variables and mixins avaiable to us with Sass.\"));\n    }\n  }, {\n    key: \"__reactstandin__regenerateByEval\",\n    // @ts-ignore\n    value: function __reactstandin__regenerateByEval(key, code) {\n      // @ts-ignore\n      this[key] = eval(code);\n    }\n  }]);\n\n  return MDXContent;\n}(React.Component);\n\nexport { MDXContent as default };\n;\n\n(function () {\n  var reactHotLoader = require('react-hot-loader').default;\n\n  var leaveModule = require('react-hot-loader').leaveModule;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(MDXContent, \"MDXContent\", \"/Users/okeeffe_d/Business/Documentation/manual/React/structure.md\");\n  leaveModule(module);\n})();\n\n;\nMDXContent.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"MDXContent\"\n};",{"version":3,"sources":["/Users/okeeffe_d/Business/Documentation/manual/React/structure.md"],"names":["React","MDXTag","MDXContent","props","layout","components","Component"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACE,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,aAAvB;;IAGmBC,U;;;;;AACnB,sBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,oFAAMA,KAAN;AACA,UAAKC,MAAL,GAAc,IAAd;AAFiB;AAGlB;;;;6BACQ;AAAA,wBAC0B,KAAKD,KAD/B;AAAA,UACCE,UADD,eACCA,UADD;AAAA,UACgBF,KADhB;;AAGP,aAAO,oBAAC,MAAD;AACE,QAAA,IAAI,EAAC,SADP;AAGE,QAAA,UAAU,EAAEE,UAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAG0B,oBAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,IAAb;AAAkB,QAAA,UAAU,EAAEA,UAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAH1B,EAIX,oBAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,GAAb;AAAiB,QAAA,UAAU,EAAEA,UAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCAJW,EAKX,oBAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,IAAb;AAAkB,QAAA,UAAU,EAAEA,UAA9B;AAA0C,QAAA,KAAK,EAAE;AAAC,gBAAK;AAAN,SAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BALW,EAMX,oBAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,IAAb;AAAkB,QAAA,UAAU,EAAEA,UAA9B;AAA0C,QAAA,KAAK,EAAE;AAAC,gBAAK;AAAN,SAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BANW,EAOX,oBAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,GAAb;AAAiB,QAAA,UAAU,EAAEA,UAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2HAPW,EAQX,oBAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,GAAb;AAAiB,QAAA,UAAU,EAAEA,UAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oEAAoG,oBAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,YAAb;AAA0B,QAAA,UAAU,EAAEA,UAAtC;AAAkD,QAAA,UAAU,EAAC,GAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAApG,UAAmM,oBAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,YAAb;AAA0B,QAAA,UAAU,EAAEA,UAAtC;AAAkD,QAAA,UAAU,EAAC,GAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCAAnM,MARW,EASX,oBAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,KAAb;AAAmB,QAAA,UAAU,EAAEA,UAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA2C,oBAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,MAAb;AAAoB,QAAA,UAAU,EAAEA,UAAhC;AAA4C,QAAA,UAAU,EAAC,KAAvD;AAA6D,QAAA,KAAK,EAAE;AAAC,uBAAY;AAAb,SAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2QAA3C,CATW,EAkBX,oBAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,GAAb;AAAiB,QAAA,UAAU,EAAEA,UAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mGAlBW,EAmBX,oBAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,IAAb;AAAkB,QAAA,UAAU,EAAEA,UAA9B;AAA0C,QAAA,KAAK,EAAE;AAAC,gBAAK;AAAN,SAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAnBW,EAoBX,oBAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,GAAb;AAAiB,QAAA,UAAU,EAAEA,UAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qIAAqK,oBAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,YAAb;AAA0B,QAAA,UAAU,EAAEA,UAAtC;AAAkD,QAAA,UAAU,EAAC,GAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4CAArK,qBAAsS,oBAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,YAAb;AAA0B,QAAA,UAAU,EAAEA,UAAtC;AAAkD,QAAA,UAAU,EAAC,GAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAtS,sFApBW,EAqBX,oBAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,IAAb;AAAkB,QAAA,UAAU,EAAEA,UAA9B;AAA0C,QAAA,KAAK,EAAE;AAAC,gBAAK;AAAN,SAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BArBW,EAsBX,oBAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,GAAb;AAAiB,QAAA,UAAU,EAAEA,UAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wKAtBW,EAuBX,oBAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,IAAb;AAAkB,QAAA,UAAU,EAAEA,UAA9B;AAA0C,QAAA,KAAK,EAAE;AAAC,gBAAK;AAAN,SAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAvBW,EAwBX,oBAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,GAAb;AAAiB,QAAA,UAAU,EAAEA,UAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wMAAwO,oBAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,YAAb;AAA0B,QAAA,UAAU,EAAEA,UAAtC;AAAkD,QAAA,UAAU,EAAC,GAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAxO,gEAxBW,EAyBX,oBAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,IAAb;AAAkB,QAAA,UAAU,EAAEA,UAA9B;AAA0C,QAAA,KAAK,EAAE;AAAC,gBAAK;AAAN,SAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAzBW,EA0BX,oBAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,GAAb;AAAiB,QAAA,UAAU,EAAEA,UAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uMA1BW,EA2BX,oBAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,IAAb;AAAkB,QAAA,UAAU,EAAEA,UAA9B;AAA0C,QAAA,KAAK,EAAE;AAAC,gBAAK;AAAN,SAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBA3BW,EA4BX,oBAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,GAAb;AAAiB,QAAA,UAAU,EAAEA,UAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+LA5BW,EA6BX,oBAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,IAAb;AAAkB,QAAA,UAAU,EAAEA,UAA9B;AAA0C,QAAA,KAAK,EAAE;AAAC,gBAAK;AAAN,SAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBA7BW,EA8BX,oBAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,GAAb;AAAiB,QAAA,UAAU,EAAEA,UAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2MAA2O,oBAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,YAAb;AAA0B,QAAA,UAAU,EAAEA,UAAtC;AAAkD,QAAA,UAAU,EAAC,GAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAA3O,qIA9BW,EA+BX,oBAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,IAAb;AAAkB,QAAA,UAAU,EAAEA,UAA9B;AAA0C,QAAA,KAAK,EAAE;AAAC,gBAAK;AAAN,SAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBA/BW,EAgCX,oBAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,GAAb;AAAiB,QAAA,UAAU,EAAEA,UAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sKAAsM,oBAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,YAAb;AAA0B,QAAA,UAAU,EAAEA,UAAtC;AAAkD,QAAA,UAAU,EAAC,GAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAAtM,kBAAwT,oBAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,YAAb;AAA0B,QAAA,UAAU,EAAEA,UAAtC;AAAkD,QAAA,UAAU,EAAC,GAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4CAAxT,uHAhCW,CAAP;AAkCD;;;;;;;;;;;EA1CqCL,KAAK,CAACM,S;;SAAzBJ,U;;;;;;;;;;;;0BAAAA,U","sourcesContent":["\n  import React from 'react'\n  import { MDXTag } from '@mdx-js/tag'\n  \n\nexport default class MDXContent extends React.Component {\n  constructor(props) {\n    super(props)\n    this.layout = null\n  }\n  render() {\n    const { components, ...props } = this.props\n\n    return <MDXTag\n             name=\"wrapper\"\n             \n             components={components}><MDXTag name=\"hr\" components={components}></MDXTag>\n<MDXTag name=\"p\" components={components}>{`Author: Dennis O'Keeffe`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"section-react\"}}>{`Section: React`}</MDXTag>\n<MDXTag name=\"h1\" components={components} props={{\"id\":\"react-structure\"}}>{`React Structure`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`The structure of a React component may very down the track, so this document should be updated to reflect this.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`An example of a component tree for makeshift component `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`Component`}</MDXTag>{` in `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`src/components/PageFormTest`}</MDXTag>{`:`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-javascript\"}}>{`Component\n├── Component.mocha.js\n├── Component.puppeteer.js\n├── Component.storybook.js\n├── README.md\n├── DOCS.md\n├── index.js\n└── styles.scss\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`In the case of some of these components, there will not be a full suite of these files.`}</MDXTag>\n<MDXTag name=\"h1\" components={components} props={{\"id\":\"indexjs\"}}>{`index.js`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`This is the main component file. With this and the setup for resolvers in webpack, you can require a component by using `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`import 'components/ComponentName`}</MDXTag>{` and using the `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`index.js`}</MDXTag>{` to default as the import for there. Note: this is a change to previous projects.`}</MDXTag>\n<MDXTag name=\"h1\" components={components} props={{\"id\":\"componentmochajs\"}}>{`Component.mocha.js`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`This will be the main mocha + chai + enzyme tests for the file. This file should cover all methods used within the component and thoroughly check rendering.`}</MDXTag>\n<MDXTag name=\"h1\" components={components} props={{\"id\":\"componentpuppeteerjs\"}}>{`Component.puppeteer.js`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`There is an issue for using Istanbul for coverage when also using Puppeteer, so these tests have been separated. Puppeteer tests should be used for UI testing. You can use this is either `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`headless`}</MDXTag>{` mode or visually see the tests carried out in the browser.`}</MDXTag>\n<MDXTag name=\"h1\" components={components} props={{\"id\":\"componentstorybookjs\"}}>{`Component.storybook.js`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`This is the storybook file to be imported into Storybook. It is a good idea for the individual, smaller components to develop them while inside of storybook, although not always required.`}</MDXTag>\n<MDXTag name=\"h1\" components={components} props={{\"id\":\"readmemd\"}}>{`README.md`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Every file should have a README.md file to explain why it exists and what the component is used for. These files are also used by storybook to generate the README for a component.`}</MDXTag>\n<MDXTag name=\"h1\" components={components} props={{\"id\":\"docsmd\"}}>{`DOCS.md`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`This is the documentation markdown file. This is optional and should not be manually created. This is created through a gulp task, although the package that generates the markdown relies on `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`esprima`}</MDXTag>{` and esprima cannot handle the bleeding edge tech of React sometimes and will fail to turn out Docblockr comments into the file.`}</MDXTag>\n<MDXTag name=\"h1\" components={components} props={{\"id\":\"stylesscss\"}}>{`styles.scss`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`This is the styles file for the specific component. It should always have a parent wrapper selector to prevent bleeding thorugh to another component. In `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`src/styles/main.scss`}</MDXTag>{` there is a `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`import 'src/components/**/*.scss`}</MDXTag>{` statement to require all these style files so they too can use the variables and mixins avaiable to us with Sass.`}</MDXTag>\n           </MDXTag>\n  }\n}\n  "]}]}