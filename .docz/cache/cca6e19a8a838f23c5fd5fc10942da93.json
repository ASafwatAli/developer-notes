{"remainingRequest":"/Users/okeeffe_d/Project-Imposter/developer-notes/node_modules/docz-core/node_modules/babel-loader/lib/index.js??ref--6-1!/Users/okeeffe_d/Project-Imposter/developer-notes/node_modules/@mdx-js/loader/index.js??ref--6-2!/Users/okeeffe_d/Project-Imposter/developer-notes/node_modules/source-map-loader/index.js!/Users/okeeffe_d/Project-Imposter/developer-notes/manual/Design-Patterns/Bridge-Pattern.md","dependencies":[{"path":"/Users/okeeffe_d/Project-Imposter/developer-notes/manual/Design-Patterns/Bridge-Pattern.md","mtime":1561104753732},{"path":"/Users/okeeffe_d/Project-Imposter/developer-notes/node_modules/cache-loader/dist/cjs.js","mtime":1561535530324},{"path":"/Users/okeeffe_d/Project-Imposter/developer-notes/node_modules/docz-core/node_modules/babel-loader/lib/index.js","mtime":1560300163820},{"path":"/Users/okeeffe_d/Project-Imposter/developer-notes/node_modules/@mdx-js/loader/index.js","mtime":1561535530532},{"path":"/Users/okeeffe_d/Project-Imposter/developer-notes/node_modules/source-map-loader/index.js","mtime":1548285283521}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9vYmplY3RXaXRob3V0UHJvcGVydGllcyBmcm9tIi9Vc2Vycy9va2VlZmZlX2QvUHJvamVjdC1JbXBvc3Rlci9kZXZlbG9wZXItbm90ZXMvbm9kZV9tb2R1bGVzL2JhYmVsLXByZXNldC1yZWFjdC1hcHAvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzIjsvKiBAanN4IG1keCAqL2ltcG9ydCBSZWFjdCBmcm9tJ3JlYWN0JztpbXBvcnR7bWR4fWZyb20nQG1keC1qcy9yZWFjdCc7LyogQGpzeCBtZHggKi92YXIgbWFrZVNob3J0Y29kZT1mdW5jdGlvbiBtYWtlU2hvcnRjb2RlKG5hbWUpe3JldHVybiBmdW5jdGlvbiBNRFhEZWZhdWx0U2hvcnRjb2RlKHByb3BzKXtjb25zb2xlLndhcm4oIkNvbXBvbmVudCAiK25hbWUrIiB3YXMgbm90IGltcG9ydGVkLCBleHBvcnRlZCwgb3IgcHJvdmlkZWQgYnkgTURYUHJvdmlkZXIgYXMgZ2xvYmFsIHNjb3BlIik7cmV0dXJuIG1keCgiZGl2Iixwcm9wcyk7fTt9O3ZhciBsYXlvdXRQcm9wcz17fTt2YXIgTURYTGF5b3V0PSJ3cmFwcGVyIjtleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBNRFhDb250ZW50KF9yZWYpe3ZhciBjb21wb25lbnRzPV9yZWYuY29tcG9uZW50cyxwcm9wcz1fb2JqZWN0V2l0aG91dFByb3BlcnRpZXMoX3JlZixbImNvbXBvbmVudHMiXSk7cmV0dXJuIG1keChNRFhMYXlvdXQsT2JqZWN0LmFzc2lnbih7fSxsYXlvdXRQcm9wcyxwcm9wcyx7Y29tcG9uZW50czpjb21wb25lbnRzLG1keFR5cGU6Ik1EWExheW91dCJ9KSxtZHgoImgxIix7ImlkIjoiYnJpZGdlLXBhdHRlcm4ifSwiQnJpZGdlIFBhdHRlcm4iKSxtZHgoInByZSIsbnVsbCxtZHgoImNvZGUiLE9iamVjdC5hc3NpZ24oe3BhcmVudE5hbWU6InByZSJ9LHsiY2xhc3NOYW1lIjoibGFuZ3VhZ2UtamF2YXNjcmlwdCJ9KSwiaW50ZXJmYWNlIEV4ZWN1dGl2ZSB7XG4gIG9wZXJhdGUoKTogdm9pZDtcbn1cblxuY2xhc3MgUGlsb3QgaW1wbGVtZW50cyBFeGVjdXRpdmUge1xuICBvcGVyYXRlKCk6IHZvaWQge1xuICAgIGNvbnNvbGUubG9nKCdGbHknKTtcbiAgfVxufVxuXG5jbGFzcyBTb2xkaWVyIGltcGxlbWVudHMgRXhlY3V0aXZlIHtcbiAgb3BlcmF0ZSgpOiB2b2lkIHtcbiAgICBjb25zb2xlLmxvZygnU2hvb3QnKTtcbiAgfVxufVxuXG5jbGFzcyBDb21tYW5kZXIge1xuICBleGVjdXRlT2JqZWN0OiBFeGVjdXRpdmU7XG5cbiAgY29uc3RydWN0b3IoZXhlY3V0ZU9iamVjdDogRXhlY3V0aXZlKSB7XG4gICAgdGhpcy5leGVjdXRlT2JqZWN0ID0gZXhlY3V0ZU9iamVjdDtcbiAgfVxuXG4gIG9yZGVyKCk6IHZvaWQge1xuICAgIHRoaXMuZXhlY3V0ZU9iamVjdC5vcGVyYXRlKCk7XG4gIH1cbn1cblxuY2xhc3MgQWlyRm9yY2VDb21tYW5kZXIgZXh0ZW5kcyBDb21tYW5kZXIge1xuICBvcmRlcigpOiB2b2lkIHtcbiAgICBjb25zb2xlLmxvZygnQWlyIEZvcmNlIGNvbW1hbmRlciBtYWtlIG9yZGVyJyk7XG4gICAgLy8gZXh0cmEgbG9naWNzIGhlcmVcbiAgICBzdXBlci5vcmRlcigpO1xuICB9XG59XG5cbmNsYXNzIFNwZWNpYWxGb3JjZUNvbW1hbmRlciBleHRlbmRzIENvbW1hbmRlciB7XG4gIG9yZGVyKCk6IHZvaWQge1xuICAgIGNvbnNvbGUubG9nKCdTcGVjaWFsIEZvcmNlIGNvbW1hbmRlciBtYWtlIG9yZGVyJyk7XG4gICAgLy8gZXh0cmEgbG9naWNzIGhlcmVcbiAgICBzdXBlci5vcmRlcigpO1xuICB9XG59XG5cbihmdW5jdGlvbiBtYWluKCkge1xuICBjb25zdCBjb21tYW5kZXJBID0gbmV3IEFpckZvcmNlQ29tbWFuZGVyKG5ldyBQaWxvdCgpKTtcbiAgY29uc3QgY29tbWFuZGVyQiA9IG5ldyBTcGVjaWFsRm9yY2VDb21tYW5kZXIobmV3IFNvbGRpZXIoKSk7XG5cbiAgY29tbWFuZGVyQS5vcmRlcigpO1xuICBjb21tYW5kZXJCLm9yZGVyKCk7XG59KSgpO1xuIikpLG1keCgiaDIiLHsiaWQiOiJjLWV4YW1wbGUifSwiQyMgRXhhbXBsZSIpLG1keCgicHJlIixudWxsLG1keCgiY29kZSIsT2JqZWN0LmFzc2lnbih7cGFyZW50TmFtZToicHJlIn0seyJjbGFzc05hbWUiOiJsYW5ndWFnZS1jc2hhcnAifSksIi8vIEhlbHBzIGluIHByb3ZpZGluZyB0cnVseSBkZWNvdXBsZWQgYXJjaGl0ZWN0dXJlXG5wdWJsaWMgaW50ZXJmYWNlIElCcmlkZ2VcbntcbiAgICB2b2lkIEZ1bmN0aW9uMSgpO1xuICAgIHZvaWQgRnVuY3Rpb24yKCk7XG59XG5cbnB1YmxpYyBjbGFzcyBCcmlkZ2UxIDogSUJyaWRnZVxue1xuICAgIHB1YmxpYyB2b2lkIEZ1bmN0aW9uMSgpXG4gICAge1xuICAgICAgICBDb25zb2xlLldyaXRlTGluZShcIkJyaWRnZTEuRnVuY3Rpb24xXCIpO1xuICAgIH1cblxuICAgIHB1YmxpYyB2b2lkIEZ1bmN0aW9uMigpXG4gICAge1xuICAgICAgICBDb25zb2xlLldyaXRlTGluZShcIkJyaWRnZTEuRnVuY3Rpb24yXCIpO1xuICAgIH1cbn1cblxucHVibGljIGNsYXNzIEJyaWRnZTIgOiBJQnJpZGdlXG57XG4gICAgcHVibGljIHZvaWQgRnVuY3Rpb24xKClcbiAgICB7XG4gICAgICAgIENvbnNvbGUuV3JpdGVMaW5lKFwiQnJpZGdlMi5GdW5jdGlvbjFcIik7XG4gICAgfVxuXG4gICAgcHVibGljIHZvaWQgRnVuY3Rpb24yKClcbiAgICB7XG4gICAgICAgIENvbnNvbGUuV3JpdGVMaW5lKFwiQnJpZGdlMi5GdW5jdGlvbjJcIik7XG4gICAgfVxufVxuXG5wdWJsaWMgaW50ZXJmYWNlIElBYnN0cmFjdEJyaWRnZVxue1xuICAgIHZvaWQgQ2FsbE1ldGhvZDEoKTtcbiAgICB2b2lkIENhbGxNZXRob2QyKCk7XG59XG5cbnB1YmxpYyBjbGFzcyBBYnN0cmFjdEJyaWRnZSA6IElBYnN0cmFjdEJyaWRnZVxue1xuICAgIHB1YmxpYyBJQnJpZGdlIGJyaWRnZTtcblxuICAgIHB1YmxpYyBBYnN0cmFjdEJyaWRnZShJQnJpZGdlIGJyaWRnZSlcbiAgICB7XG4gICAgICAgIHRoaXMuYnJpZGdlID0gYnJpZGdlO1xuICAgIH1cblxuICAgIHB1YmxpYyB2b2lkIENhbGxNZXRob2QxKClcbiAgICB7XG4gICAgICAgIHRoaXMuYnJpZGdlLkZ1bmN0aW9uMSgpO1xuICAgIH1cblxuICAgIHB1YmxpYyB2b2lkIENhbGxNZXRob2QyKClcbiAgICB7XG4gICAgICAgIHRoaXMuYnJpZGdlLkZ1bmN0aW9uMigpO1xuICAgIH1cbn1cbiIpKSxtZHgoImgyIix7ImlkIjoiamF2YS1leGFtcGxlIn0sIkphdmEgRXhhbXBsZSIpLG1keCgicHJlIixudWxsLG1keCgiY29kZSIsT2JqZWN0LmFzc2lnbih7cGFyZW50TmFtZToicHJlIn0seyJjbGFzc05hbWUiOiJsYW5ndWFnZS1qYXZhIn0pLCIvLyBMb2dnZXIgaGFzIHR3byBpbXBsZW1lbnRhdGlvbnM6IGluZm8gYW5kIHdhcm5pbmdcbmludGVyZmFjZSBMb2dnZXIge1xuICBwdWJsaWMgdm9pZCBsb2coU3RyaW5nIG1lc3NhZ2UpO1xuXG4gIHN0YXRpYyBMb2dnZXIgaW5mbygpIHtcbiAgICByZXR1cm4gbWVzc2FnZSAtPiBTeXN0ZW0ub3V0LnByaW50bG4oXCJpbmZvOiBcIiArIG1lc3NhZ2UpO1xuICB9XG4gIHN0YXRpYyBMb2dnZXIgd2FybmluZygpIHtcbiAgICByZXR1cm4gbWVzc2FnZSAtPiBTeXN0ZW0ub3V0LnByaW50bG4oXCJ3YXJuaW5nOiBcIiArIG1lc3NhZ2UpO1xuICB9XG59XG5cbmFic3RyYWN0IGNsYXNzIEFic3RyYWN0QWNjb3VudCB7XG4gIHByaXZhdGUgTG9nZ2VyIGxvZ2dlciA9IExvZ2dlci5pbmZvKCk7XG5cbiAgcHVibGljIHZvaWQgc2V0TG9nZ2VyKExvZ2dlciBsb2dnZXIpIHtcbiAgICB0aGlzLmxvZ2dlciA9IGxvZ2dlcjtcbiAgfVxuXG4gIC8vIHRoZSBsb2dnaW5nIHBhcnQgaXMgZGVsZWdhdGVkIHRvIHRoZSBMb2dnZXIgaW1wbGVtZW50YXRpb25cbiAgcHJvdGVjdGVkIHZvaWQgb3BlcmF0ZShTdHJpbmcgbWVzc2FnZSwgYm9vbGVhbiByZXN1bHQpIHtcbiAgICBsb2dnZXIubG9nKG1lc3NhZ2UgKyBcIiByZXN1bHQgXCIgKyByZXN1bHQpO1xuICB9XG59XG5cbmNsYXNzIFNpbXBsZUFjY291bnQgZXh0ZW5kcyBBYnN0cmFjdEFjY291bnQge1xuICBwcml2YXRlIGludCBiYWxhbmNlO1xuXG4gIHB1YmxpYyBTaW1wbGVBY2NvdW50KGludCBiYWxhbmNlKSB7XG4gICAgdGhpcy5iYWxhbmNlID0gYmFsYW5jZTtcbiAgfVxuXG4gIHB1YmxpYyBib29sZWFuIGlzQmFsYW5jZUxvdygpIHtcbiAgICByZXR1cm4gYmFsYW5jZSA8IDUwO1xuICB9XG5cbiAgcHVibGljIHZvaWQgd2l0aGRyYXcoaW50IGFtb3VudCkge1xuICAgIGJvb2xlYW4gc2hvdWxkUGVyZm9ybSA9IGJhbGFuY2UgPj0gYW1vdW50O1xuICAgIGlmIChzaG91bGRQZXJmb3JtKSB7XG4gICAgICBiYWxhbmNlIC09IGFtb3VudDtcbiAgICB9XG4gICAgb3BlcmF0ZShcIndpdGhkcmF3IFwiICsgYW1vdW50LCBzaG91bGRQZXJmb3JtKTtcbiAgfVxufVxuXG5wdWJsaWMgY2xhc3MgQnJpZGdlRGVtbyB7XG4gIHB1YmxpYyBzdGF0aWMgdm9pZCBtYWluKFN0cmluZ1tdIGFyZ3MpIHtcbiAgICBTaW1wbGVBY2NvdW50IGFjY291bnQgPSBuZXcgU2ltcGxlQWNjb3VudCgxMDApO1xuICAgIGFjY291bnQud2l0aGRyYXcoNzUpO1xuXG4gICAgaWYgKGFjY291bnQuaXNCYWxhbmNlTG93KCkpIHtcbiAgICAgIC8vIHlvdSBjYW4gYWxzbyBjaGFuZ2UgdGhlIExvZ2dlciBpbXBsZW1lbnRhdGlvbiBhdCBydW50aW1lXG4gICAgICBhY2NvdW50LnNldExvZ2dlcihMb2dnZXIud2FybmluZygpKTtcbiAgICB9XG5cbiAgICBhY2NvdW50LndpdGhkcmF3KDEwKTtcbiAgICBhY2NvdW50LndpdGhkcmF3KDEwMCk7XG4gIH1cbn1cbiIpKSk7fWlmKHR5cGVvZiBNRFhDb250ZW50IT09J3VuZGVmaW5lZCcmJk1EWENvbnRlbnQmJk1EWENvbnRlbnQ9PT1PYmplY3QoTURYQ29udGVudCkmJk9iamVjdC5pc0V4dGVuc2libGUoTURYQ29udGVudCkpe09iamVjdC5kZWZpbmVQcm9wZXJ0eShNRFhDb250ZW50LCdfX2ZpbGVtZXRhJyx7ZW51bWVyYWJsZTp0cnVlLGNvbmZpZ3VyYWJsZTp0cnVlLHZhbHVlOntuYW1lOiJNRFhDb250ZW50IixmaWxlbmFtZToibWFudWFsL0Rlc2lnbi1QYXR0ZXJucy9CcmlkZ2UtUGF0dGVybi5tZCJ9fSk7fU1EWENvbnRlbnQuaXNNRFhDb21wb25lbnQ9dHJ1ZTs="},{"version":3,"sources":["/Users/okeeffe_d/Project-Imposter/developer-notes/manual/Design-Patterns/Bridge-Pattern.md"],"names":["React","mdx","makeShortcode","name","MDXDefaultShortcode","props","console","warn","layoutProps","MDXLayout","MDXContent","components","isMDXComponent"],"mappings":"4LAAA,cACE,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,GAAT,KAAoB,eAApB,CACA,cAGF,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAAAC,IAAI,QAAI,SAASC,CAAAA,mBAAT,CAA6BC,KAA7B,CAAoC,CAChEC,OAAO,CAACC,IAAR,CAAa,aAAeJ,IAAf,CAAsB,yEAAnC,EACA,MAAO,WAASE,KAAT,CAAP,CACD,CAHyB,EAA1B,CAKA,GAAMG,CAAAA,WAAW,CAAG,EAApB,CAGA,GAAMC,CAAAA,SAAS,CAAG,SAAlB,CACA,cAAe,SAASC,CAAAA,UAAT,MAGZ,IAFDC,CAAAA,UAEC,MAFDA,UAEC,CADEN,KACF,+CACD,MAAO,KAAC,SAAD,kBAAeG,WAAf,CAAgCH,KAAhC,EAAuC,UAAU,CAAEM,UAAnD,CAA+D,OAAO,CAAC,WAAvE,GACL,SAAQ,CACN,KAAM,gBADA,CAAR,kBADK,CAIL,eAAK,0BAAM,UAAU,CAAC,KAAjB,EAA2B,CAC5B,YAAa,qBADe,CAA3B,m+BAAL,CAJK,CA0DL,SAAQ,CACN,KAAM,WADA,CAAR,cA1DK,CA6DL,eAAK,0BAAM,UAAU,CAAC,KAAjB,EAA2B,CAC5B,YAAa,iBADe,CAA3B,8/BAAL,CA7DK,CA0HL,SAAQ,CACN,KAAM,cADA,CAAR,gBA1HK,CA6HL,eAAK,0BAAM,UAAU,CAAC,KAAjB,EAA2B,CAC5B,YAAa,eADe,CAA3B,66CAAL,CA7HK,CAAP,CA4LD,C,oRAEDD,UAAU,CAACE,cAAX,CAA4B,IAA5B","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"bridge-pattern\"\n    }}>{`Bridge Pattern`}</h1>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`interface Executive {\n  operate(): void;\n}\n\nclass Pilot implements Executive {\n  operate(): void {\n    console.log('Fly');\n  }\n}\n\nclass Soldier implements Executive {\n  operate(): void {\n    console.log('Shoot');\n  }\n}\n\nclass Commander {\n  executeObject: Executive;\n\n  constructor(executeObject: Executive) {\n    this.executeObject = executeObject;\n  }\n\n  order(): void {\n    this.executeObject.operate();\n  }\n}\n\nclass AirForceCommander extends Commander {\n  order(): void {\n    console.log('Air Force commander make order');\n    // extra logics here\n    super.order();\n  }\n}\n\nclass SpecialForceCommander extends Commander {\n  order(): void {\n    console.log('Special Force commander make order');\n    // extra logics here\n    super.order();\n  }\n}\n\n(function main() {\n  const commanderA = new AirForceCommander(new Pilot());\n  const commanderB = new SpecialForceCommander(new Soldier());\n\n  commanderA.order();\n  commanderB.order();\n})();\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"c-example\"\n    }}>{`C# Example`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-csharp\"\n      }}>{`// Helps in providing truly decoupled architecture\npublic interface IBridge\n{\n    void Function1();\n    void Function2();\n}\n\npublic class Bridge1 : IBridge\n{\n    public void Function1()\n    {\n        Console.WriteLine(\"Bridge1.Function1\");\n    }\n\n    public void Function2()\n    {\n        Console.WriteLine(\"Bridge1.Function2\");\n    }\n}\n\npublic class Bridge2 : IBridge\n{\n    public void Function1()\n    {\n        Console.WriteLine(\"Bridge2.Function1\");\n    }\n\n    public void Function2()\n    {\n        Console.WriteLine(\"Bridge2.Function2\");\n    }\n}\n\npublic interface IAbstractBridge\n{\n    void CallMethod1();\n    void CallMethod2();\n}\n\npublic class AbstractBridge : IAbstractBridge\n{\n    public IBridge bridge;\n\n    public AbstractBridge(IBridge bridge)\n    {\n        this.bridge = bridge;\n    }\n\n    public void CallMethod1()\n    {\n        this.bridge.Function1();\n    }\n\n    public void CallMethod2()\n    {\n        this.bridge.Function2();\n    }\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"java-example\"\n    }}>{`Java Example`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`// Logger has two implementations: info and warning\ninterface Logger {\n  public void log(String message);\n\n  static Logger info() {\n    return message -> System.out.println(\"info: \" + message);\n  }\n  static Logger warning() {\n    return message -> System.out.println(\"warning: \" + message);\n  }\n}\n\nabstract class AbstractAccount {\n  private Logger logger = Logger.info();\n\n  public void setLogger(Logger logger) {\n    this.logger = logger;\n  }\n\n  // the logging part is delegated to the Logger implementation\n  protected void operate(String message, boolean result) {\n    logger.log(message + \" result \" + result);\n  }\n}\n\nclass SimpleAccount extends AbstractAccount {\n  private int balance;\n\n  public SimpleAccount(int balance) {\n    this.balance = balance;\n  }\n\n  public boolean isBalanceLow() {\n    return balance < 50;\n  }\n\n  public void withdraw(int amount) {\n    boolean shouldPerform = balance >= amount;\n    if (shouldPerform) {\n      balance -= amount;\n    }\n    operate(\"withdraw \" + amount, shouldPerform);\n  }\n}\n\npublic class BridgeDemo {\n  public static void main(String[] args) {\n    SimpleAccount account = new SimpleAccount(100);\n    account.withdraw(75);\n\n    if (account.isBalanceLow()) {\n      // you can also change the Logger implementation at runtime\n      account.setLogger(Logger.warning());\n    }\n\n    account.withdraw(10);\n    account.withdraw(100);\n  }\n}\n`}</code></pre>\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  "]}]}