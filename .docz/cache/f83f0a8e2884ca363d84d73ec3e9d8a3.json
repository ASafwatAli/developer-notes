{"remainingRequest":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/docz-core/node_modules/babel-loader/lib/index.js??ref--6-1!/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/@mdx-js/loader/index.js??ref--6-2!/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/source-map-loader/index.js!/Users/dennis.okeeffe/Project-Imposter/developer-notes/manual/Conventional-Commits/Automating-Versioning.md","dependencies":[{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/manual/Conventional-Commits/Automating-Versioning.md","mtime":1579515711134},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/cache-loader/dist/cjs.js","mtime":1564095360956},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/docz-core/node_modules/babel-loader/lib/index.js","mtime":1562568123838},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/@mdx-js/loader/index.js","mtime":1565139338792},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/source-map-loader/index.js","mtime":1564095361765}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9vYmplY3RXaXRob3V0UHJvcGVydGllcyBmcm9tIi9Vc2Vycy9kZW5uaXMub2tlZWZmZS9Qcm9qZWN0LUltcG9zdGVyL2RldmVsb3Blci1ub3Rlcy9ub2RlX21vZHVsZXMvYmFiZWwtcHJlc2V0LXJlYWN0LWFwcC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0V2l0aG91dFByb3BlcnRpZXMiOy8qIEBqc3ggbWR4ICovaW1wb3J0IFJlYWN0IGZyb20ncmVhY3QnO2ltcG9ydHttZHh9ZnJvbSdAbWR4LWpzL3JlYWN0JzsvKiBAanN4IG1keCAqL3ZhciBtYWtlU2hvcnRjb2RlPWZ1bmN0aW9uIG1ha2VTaG9ydGNvZGUobmFtZSl7cmV0dXJuIGZ1bmN0aW9uIE1EWERlZmF1bHRTaG9ydGNvZGUocHJvcHMpe2NvbnNvbGUud2FybigiQ29tcG9uZW50ICIrbmFtZSsiIHdhcyBub3QgaW1wb3J0ZWQsIGV4cG9ydGVkLCBvciBwcm92aWRlZCBieSBNRFhQcm92aWRlciBhcyBnbG9iYWwgc2NvcGUiKTtyZXR1cm4gbWR4KCJkaXYiLHByb3BzKTt9O307dmFyIGxheW91dFByb3BzPXt9O3ZhciBNRFhMYXlvdXQ9IndyYXBwZXIiO2V4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIE1EWENvbnRlbnQoX3JlZil7dmFyIGNvbXBvbmVudHM9X3JlZi5jb21wb25lbnRzLHByb3BzPV9vYmplY3RXaXRob3V0UHJvcGVydGllcyhfcmVmLFsiY29tcG9uZW50cyJdKTtyZXR1cm4gbWR4KE1EWExheW91dCxPYmplY3QuYXNzaWduKHt9LGxheW91dFByb3BzLHByb3BzLHtjb21wb25lbnRzOmNvbXBvbmVudHMsbWR4VHlwZToiTURYTGF5b3V0In0pLG1keCgiaDEiLHsiaWQiOiJhdXRvbWF0aW5nLXZlcnNpb25pbmcifSwiQXV0b21hdGluZyBWZXJzaW9uaW5nIiksbWR4KCJoMiIseyJpZCI6InJlc291cmNlcyJ9LCJSZXNvdXJjZXMiKSxtZHgoIm9sIixudWxsLG1keCgibGkiLHtwYXJlbnROYW1lOiJvbCJ9LG1keCgiYSIsT2JqZWN0LmFzc2lnbih7cGFyZW50TmFtZToibGkifSx7ImhyZWYiOiJodHRwczovL21lZGl1bS5jb20vQGpzaWx2YXgvYXV0b21hdGUtc2VtYW50aWMtdmVyc2lvbmluZy13aXRoLWNvbnZlbnRpb25hbC1jb21taXRzLWQ3NmE5ZjQ1ZjJmYSJ9KSwiQXV0b21hdGUgVmVyc2lvbmluZyBibG9nIHBvc3QiKSkpLG1keCgiaDIiLHsiaWQiOiJmb3ItbG9jYWwtcGFja2FnZXMifSwiRm9yIGxvY2FsIHBhY2thZ2VzIiksbWR4KCJwIixudWxsLCJUaGUgZm9sbG93aW5nIGlzIHRoZSB0bDtkciBmb3IgZ2V0dGluZyB0aGlzIGRvbmUuIiksbWR4KCJwcmUiLG51bGwsbWR4KCJjb2RlIixPYmplY3QuYXNzaWduKHtwYXJlbnROYW1lOiJwcmUifSx7ImNsYXNzTmFtZSI6Imxhbmd1YWdlLXNoZWxsIn0pLCJ5YXJuIGFkZCBodXNreSBAY29tbWl0bGludC9jbGkgQGNvbW1pdGxpbnQvY29uZmlnLWNvbnZlbnRpb25hbCBzdGFuZGFyZC12ZXJzaW9uIC0tZGV2XG4iKSksbWR4KCJoMiIseyJpZCI6InVwZGF0aW5nLXBhY2thZ2Vqc29uIn0sIlVwZGF0aW5nIHBhY2thZ2UuanNvbiIpLG1keCgicCIsbnVsbCwiRm9yIHRoZSByZWxlYXNlIHNjcmlwdDoiKSxtZHgoInByZSIsbnVsbCxtZHgoImNvZGUiLE9iamVjdC5hc3NpZ24oe3BhcmVudE5hbWU6InByZSJ9LHsiY2xhc3NOYW1lIjoibGFuZ3VhZ2UtanNvbiJ9KSwiXCJzY3JpcHRzXCIgOiB7XG4gIFwicmVsZWFzZVwiIDogXCJzdGFuZGFyZC12ZXJzaW9uXCJcbn1cbiIpKSxtZHgoInAiLG51bGwsIkZvciBjb21taXQgbGludDoiKSxtZHgoInByZSIsbnVsbCxtZHgoImNvZGUiLE9iamVjdC5hc3NpZ24oe3BhcmVudE5hbWU6InByZSJ9LHsiY2xhc3NOYW1lIjoibGFuZ3VhZ2UtanNvbiJ9KSwiXCJjb21taXRsaW50XCI6IHtcbiBcImV4dGVuZHNcIjogW1xuICAgXCJAY29tbWl0bGludC9jb25maWctY29udmVudGlvbmFsXCJcbiBdLFxuIFwicnVsZXNcIjoge1xuICAgXCJzdWJqZWN0LWNhc2VcIjogW1xuICAgICAyLFxuICAgICBcIm5ldmVyXCIsXG4gICAgIFtcbiAgICAgICBcInN0YXJ0LWNhc2VcIixcbiAgICAgICBcInBhc2NhbC1jYXNlXCJcbiAgICAgXVxuICAgXVxuIH1cbn1cbiIpKSxtZHgoInAiLG51bGwsIkZvciBIdXNreSAod2l0aCBzb21lIGV4YW1wbGVzIGZyb20gYW5vdGhlciBwcm9qZWN0KS4gVGhlIGZvbGxvdyBleHBlY3RzIGEgZ2VuZXJhdGlvbiBvZiB0aGUgIixtZHgoImlubGluZUNvZGUiLHtwYXJlbnROYW1lOiJwIn0sIkNIQU5HRUxPRy5tZCIpLCIgcHJlLXB1c2ggYW5kIGFsc28gdG8gcnVuIHRoZSB0ZXN0IHN1aXRlIHByaW9yIHRvIGRlcGxveToiKSxtZHgoInByZSIsbnVsbCxtZHgoImNvZGUiLE9iamVjdC5hc3NpZ24oe3BhcmVudE5hbWU6InByZSJ9LHsiY2xhc3NOYW1lIjoibGFuZ3VhZ2UtanNvbiJ9KSwiXCJodXNreVwiOiB7XG4gIFwiaG9va3NcIjoge1xuICAgIFwicHJlLXB1c2hcIjogXCJ5YXJuIHJlbGVhc2UgJiYgeWFybiB0ZXN0XCIsXG4gICAgXCJjb21taXQtbXNnXCI6IFwiY29tbWl0bGludCAtRSBIVVNLWV9HSVRfUEFSQU1TXCJcbiAgfVxufVxuIikpKTt9aWYodHlwZW9mIE1EWENvbnRlbnQhPT0ndW5kZWZpbmVkJyYmTURYQ29udGVudCYmTURYQ29udGVudD09PU9iamVjdChNRFhDb250ZW50KSYmT2JqZWN0LmlzRXh0ZW5zaWJsZShNRFhDb250ZW50KSl7T2JqZWN0LmRlZmluZVByb3BlcnR5KE1EWENvbnRlbnQsJ19fZmlsZW1ldGEnLHtlbnVtZXJhYmxlOnRydWUsY29uZmlndXJhYmxlOnRydWUsdmFsdWU6e25hbWU6Ik1EWENvbnRlbnQiLGZpbGVuYW1lOiJtYW51YWwvQ29udmVudGlvbmFsLUNvbW1pdHMvQXV0b21hdGluZy1WZXJzaW9uaW5nLm1kIn19KTt9TURYQ29udGVudC5pc01EWENvbXBvbmVudD10cnVlOw=="},{"version":3,"sources":["/Users/dennis.okeeffe/Project-Imposter/developer-notes/manual/Conventional-Commits/Automating-Versioning.md"],"names":["React","mdx","makeShortcode","name","MDXDefaultShortcode","props","console","warn","layoutProps","MDXLayout","MDXContent","components","isMDXComponent"],"mappings":"iMAAA,cACE,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,GAAT,KAAoB,eAApB,CACA,cAGF,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAAAC,IAAI,QAAI,SAASC,CAAAA,mBAAT,CAA6BC,KAA7B,CAAoC,CAChEC,OAAO,CAACC,IAAR,CAAa,aAAeJ,IAAf,CAAsB,yEAAnC,EACA,MAAO,WAASE,KAAT,CAAP,CACD,CAHyB,EAA1B,CAKA,GAAMG,CAAAA,WAAW,CAAG,EAApB,CAGA,GAAMC,CAAAA,SAAS,CAAG,SAAlB,CACA,cAAe,SAASC,CAAAA,UAAT,MAGZ,IAFDC,CAAAA,UAEC,MAFDA,UAEC,CADEN,KACF,+CACD,MAAO,KAAC,SAAD,kBAAeG,WAAf,CAAgCH,KAAhC,EAAuC,UAAU,CAAEM,UAAnD,CAA+D,OAAO,CAAC,WAAvE,GACL,SAAQ,CACN,KAAM,uBADA,CAAR,yBADK,CAIL,SAAQ,CACN,KAAM,WADA,CAAR,aAJK,CAOL,cACE,UAAI,UAAU,CAAC,IAAf,EAAoB,uBAAG,UAAU,CAAC,IAAd,EAAuB,CACvC,OAAQ,iGAD+B,CAAvB,kCAApB,CADF,CAPK,CAYL,SAAQ,CACN,KAAM,oBADA,CAAR,sBAZK,CAeL,iEAfK,CAgBL,eAAK,0BAAM,UAAU,CAAC,KAAjB,EAA2B,CAC5B,YAAa,gBADe,CAA3B,4FAAL,CAhBK,CAoBL,SAAQ,CACN,KAAM,sBADA,CAAR,yBApBK,CAuBL,uCAvBK,CAwBL,eAAK,0BAAM,UAAU,CAAC,KAAjB,EAA2B,CAC5B,YAAa,eADe,CAA3B,+DAAL,CAxBK,CA8BL,gCA9BK,CA+BL,eAAK,0BAAM,UAAU,CAAC,KAAjB,EAA2B,CAC5B,YAAa,eADe,CAA3B,oOAAL,CA/BK,CAiDL,4GAAmG,kBAAY,UAAU,CAAC,GAAvB,iBAAnG,6DAjDK,CAkDL,eAAK,0BAAM,UAAU,CAAC,KAAjB,EAA2B,CAC5B,YAAa,eADe,CAA3B,qJAAL,CAlDK,CAAP,CA4DD,C,gSAEDD,UAAU,CAACE,cAAX,CAA4B,IAA5B","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"automating-versioning\"\n    }}>{`Automating Versioning`}</h1>\n    <h2 {...{\n      \"id\": \"resources\"\n    }}>{`Resources`}</h2>\n    <ol>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"https://medium.com/@jsilvax/automate-semantic-versioning-with-conventional-commits-d76a9f45f2fa\"\n        }}>{`Automate Versioning blog post`}</a></li>\n    </ol>\n    <h2 {...{\n      \"id\": \"for-local-packages\"\n    }}>{`For local packages`}</h2>\n    <p>{`The following is the tl;dr for getting this done.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`yarn add husky @commitlint/cli @commitlint/config-conventional standard-version --dev\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"updating-packagejson\"\n    }}>{`Updating package.json`}</h2>\n    <p>{`For the release script:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`\"scripts\" : {\n  \"release\" : \"standard-version\"\n}\n`}</code></pre>\n    <p>{`For commit lint:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`\"commitlint\": {\n \"extends\": [\n   \"@commitlint/config-conventional\"\n ],\n \"rules\": {\n   \"subject-case\": [\n     2,\n     \"never\",\n     [\n       \"start-case\",\n       \"pascal-case\"\n     ]\n   ]\n }\n}\n`}</code></pre>\n    <p>{`For Husky (with some examples from another project). The follow expects a generation of the `}<inlineCode parentName=\"p\">{`CHANGELOG.md`}</inlineCode>{` pre-push and also to run the test suite prior to deploy:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`\"husky\": {\n  \"hooks\": {\n    \"pre-push\": \"yarn release && yarn test\",\n    \"commit-msg\": \"commitlint -E HUSKY_GIT_PARAMS\"\n  }\n}\n`}</code></pre>\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  "]}]}