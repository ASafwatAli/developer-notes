{"remainingRequest":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/docz-core/node_modules/babel-loader/lib/index.js??ref--6-1!/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/@mdx-js/loader/index.js??ref--6-2!/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/source-map-loader/index.js!/Users/dennis.okeeffe/Project-Imposter/developer-notes/manual/Elm/Rendering-Examples.md","dependencies":[{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/manual/Elm/Rendering-Examples.md","mtime":1562563032035},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/cache-loader/dist/cjs.js","mtime":1564095360956},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/docz-core/node_modules/babel-loader/lib/index.js","mtime":1562568123838},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/@mdx-js/loader/index.js","mtime":1565139338792},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/source-map-loader/index.js","mtime":1564095361765}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9vYmplY3RXaXRob3V0UHJvcGVydGllcyBmcm9tIi9Vc2Vycy9kZW5uaXMub2tlZWZmZS9Qcm9qZWN0LUltcG9zdGVyL2RldmVsb3Blci1ub3Rlcy9ub2RlX21vZHVsZXMvYmFiZWwtcHJlc2V0LXJlYWN0LWFwcC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0V2l0aG91dFByb3BlcnRpZXMiOy8qIEBqc3ggbWR4ICovaW1wb3J0IFJlYWN0IGZyb20ncmVhY3QnO2ltcG9ydHttZHh9ZnJvbSdAbWR4LWpzL3JlYWN0JzsvKiBAanN4IG1keCAqL3ZhciBtYWtlU2hvcnRjb2RlPWZ1bmN0aW9uIG1ha2VTaG9ydGNvZGUobmFtZSl7cmV0dXJuIGZ1bmN0aW9uIE1EWERlZmF1bHRTaG9ydGNvZGUocHJvcHMpe2NvbnNvbGUud2FybigiQ29tcG9uZW50ICIrbmFtZSsiIHdhcyBub3QgaW1wb3J0ZWQsIGV4cG9ydGVkLCBvciBwcm92aWRlZCBieSBNRFhQcm92aWRlciBhcyBnbG9iYWwgc2NvcGUiKTtyZXR1cm4gbWR4KCJkaXYiLHByb3BzKTt9O307dmFyIGxheW91dFByb3BzPXt9O3ZhciBNRFhMYXlvdXQ9IndyYXBwZXIiO2V4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIE1EWENvbnRlbnQoX3JlZil7dmFyIGNvbXBvbmVudHM9X3JlZi5jb21wb25lbnRzLHByb3BzPV9vYmplY3RXaXRob3V0UHJvcGVydGllcyhfcmVmLFsiY29tcG9uZW50cyJdKTtyZXR1cm4gbWR4KE1EWExheW91dCxPYmplY3QuYXNzaWduKHt9LGxheW91dFByb3BzLHByb3BzLHtjb21wb25lbnRzOmNvbXBvbmVudHMsbWR4VHlwZToiTURYTGF5b3V0In0pLG1keCgiaDEiLHsiaWQiOiJlbG0tcmVuZGVyaW5nLWV4YW1wbGVzIn0sIkVsbSBSZW5kZXJpbmcgRXhhbXBsZXMiKSxtZHgoImgyIix7ImlkIjoicmVuZGVyaW5nLXZpYS1hbm9ueW1vdXMtZnVuY3Rpb24ifSwiUmVuZGVyaW5nIHZpYSBhbm9ueW1vdXMgZnVuY3Rpb24iKSxtZHgoInByZSIsbnVsbCxtZHgoImNvZGUiLE9iamVjdC5hc3NpZ24oe3BhcmVudE5hbWU6InByZSJ9LHsiY2xhc3NOYW1lIjoibGFuZ3VhZ2UtZWxtIn0pLCJ2aWV3IG1vZGVsID1cbiAgICBkaXYgWyBjbGFzcyBcImNvbnRlbnRcIiBdXG4gICAgICAgIFsgaDEgW10gWyB0ZXh0IFwiUGhvdG8gR3Jvb3ZlXCIgXVxuICAgICAgICAsIGRpdiBbIGlkIFwidGh1bWJuYWlsc1wiIF1cbiAgICAgICAgICAgIC0tIGFub255bW91cyBmdW5jdGlvbiBtYXBwaW5nIHBob3Rvc1xuICAgICAgICAgICAgKExpc3QubWFwIChcXHBob3RvIC0+IHZpZXdUaHVtYm5haWwgbW9kZWwuc2VsZWN0ZWRVcmwgcGhvdG8pXG4gICAgICAgICAgICAgICAgbW9kZWwucGhvdG9zXG4gICAgICAgICAgICApXG4gICAgICAgICwgaW1nICAgICAgICAgICAgICAgICAjQVxuICAgICAgICAgICAgWyBjbGFzcyBcImxhcmdlXCIgICAjQVxuICAgICAgICAgICAgLCBzcmMgKHVybFByZWZpeCArKyBcImxhcmdlL1wiICsrIG1vZGVsLnNlbGVjdGVkVXJsKVxuICAgICAgICAgICAgXVxuICAgICAgICAgICAgW11cbiAgICAgICAgXVxuIikpLG1keCgiaDMiLHsiaWQiOiJhbm9uLWZ1bmN0aW9uLXdpdGgtcGFydGlhbC1hcHBsaWNhdGlvbiJ9LCJBbm9uIGZ1bmN0aW9uIHdpdGggcGFydGlhbCBhcHBsaWNhdGlvbiIpLG1keCgicHJlIixudWxsLG1keCgiY29kZSIsT2JqZWN0LmFzc2lnbih7cGFyZW50TmFtZToicHJlIn0seyJjbGFzc05hbWUiOiJsYW5ndWFnZS1iYXNoIn0pLCJCZWZvcmU6IExpc3QubWFwIChcXHBob3RvIC0+IHZpZXdUaHVtYm5haWwgbW9kZWwuc2VsZWN0ZWRVcmwgcGhvdG8pIG1vZGVsLnBob3RvcyBcbiMgUGFydGlhbCBhcHBsaWNhdGlvbiBpcyBrbm93biBhcyBjdXJyaWVkIGluIEVsbVxuQWZ0ZXI6IExpc3QubWFwICh2aWV3VGh1bWJuYWlsIG1vZGVsLnNlbGVjdGVkVXJsKSBtb2RlbC5waG90b3NcbiIpKSxtZHgoInAiLG51bGwsIkFsbCBFbG0gZnVuY3Rpb25zIGFyZSBjdXJyaWVkLiIpLG1keCgiaDIiLHsiaWQiOiJ1cGRhdGUtZnVuY3Rpb24ifSwiVXBkYXRlIGZ1bmN0aW9uIiksbWR4KCJwIixudWxsLCJUbyB1cGRhdGUgdGhlIG1vZGVsLCB3ZSBuZWVkIHRvIGhhdmUgdGhlIGFwcHJvcHJpYXRlICIsbWR4KCJpbmxpbmVDb2RlIix7cGFyZW50TmFtZToicCJ9LCJ1cGRhdGUiKSwiIGZ1bmN0aW9uIGFuZCBleHBvc2UgdGhlIGNvcnJlY3QgIixtZHgoImlubGluZUNvZGUiLHtwYXJlbnROYW1lOiJwIn0sIkh0bWwuRXZlbnRzIiksIi4iKSxtZHgoInByZSIsbnVsbCxtZHgoImNvZGUiLE9iamVjdC5hc3NpZ24oe3BhcmVudE5hbWU6InByZSJ9LHsiY2xhc3NOYW1lIjoibGFuZ3VhZ2UtZWxtIn0pLCJpbXBvcnQgSHRtbCBleHBvc2luZyAoLi4pXG5pbXBvcnQgSHRtbC5BdHRyaWJ1dGVzIGV4cG9zaW5nICguLilcbmltcG9ydCBIdG1sLkV2ZW50cyBleHBvc2luZyAob25DbGljaylcblxudXBkYXRlIG1zZyBtb2RlbCA9XG4gICAgaWYgbXNnLmRlc2NyaXB0aW9uID09IFwiQ2xpY2tlZFBob3RvXCIgdGhlblxuICAgICAgICB7IG1vZGVsIHwgc2VsZWN0ZWRVcmwgPSBtc2cuZGF0YSB9XG4gICAgZWxzZSBtb2RlbFxuXG52aWV3VGh1bWJuYWlsIHNlbGVjdGVkVXJsIHRodW1iID1cbiAgICBpbWdcbiAgICAgICAgWyBzcmMgKHVybFByZWZpeCArKyB0aHVtYi51cmwpXG4gICAgICAgICwgY2xhc3NMaXN0IFsgKCBcInNlbGVjdGVkXCIsIHNlbGVjdGVkVXJsID09IHRodW1ibmFpbC51cmwgKSBdXG4gICAgICAgICwgb25DbGljayB7IGRlc2NyaXB0aW9uID0gXCJDbGlja2VkUGhvdG9cIiwgZGF0YSA9IHRodW1iLnVybCB9IF1cbiAgICAgICAgW11cbiIpKSxtZHgoImgyIix7ImlkIjoiaW1wbGVtZW50aW5nLXRoZS1tb2RlbC12aWV3LXVwZGF0ZS1sb29wIn0sIkltcGxlbWVudGluZyB0aGUgTW9kZWwtVmlldy1VcGRhdGUgTG9vcCIpLG1keCgicHJlIixudWxsLG1keCgiY29kZSIsT2JqZWN0LmFzc2lnbih7cGFyZW50TmFtZToicHJlIn0seyJjbGFzc05hbWUiOiJsYW5ndWFnZS1lbG0ifSksImltcG9ydCBCcm93c2VyXG5cbm1haW4gPVxuICAgIEJyb3dzZXIuc2FuZGJveFxuICAgICAgICB7IGluaXQgPSBpbml0aWFsTW9kZWxcbiAgICAgICAgLCB2aWV3ID0gdmlld1xuICAgICAgICAsIHVwZGF0ZSA9IHVwZGF0ZVxuICAgICAgICB9XG4iKSksbWR4KCJoMiIseyJpZCI6Im11bHRpLWFyZ3VtZW50LWZ1bmN0aW9uLWFubm90YXRpb25zIn0sIk11bHRpLUFyZ3VtZW50IEZ1bmN0aW9uIEFubm90YXRpb25zIiksbWR4KCJwcmUiLG51bGwsbWR4KCJjb2RlIixPYmplY3QuYXNzaWduKHtwYXJlbnROYW1lOiJwcmUifSx7ImNsYXNzTmFtZSI6Imxhbmd1YWdlLXNoZWxsIn0pLCI+IFN0cmluZy5wYWRMZWZ0XG48ZnVuY3Rpb246cGFkTGVmdD4gOiBJbnQgLT4gQ2hhciAtPiBTdHJpbmcgLT4gU3RyaW5nXG4+IFN0cmluZy5wYWRMZWZ0IDlcbjxmdW5jdGlvbj4gOiBDaGFyIC0+IFN0cmluZyAtPiBTdHJpbmdcbj4gU3RyaW5nLnBhZExlZnQgOSAnLicgPGZ1bmN0aW9uPiA6IFN0cmluZyAtPiBTdHJpbmdcbj4gU3RyaW5nLnBhZExlZnQgOSAnLicgXCJub3QhXCIgXCIuLi4uLm5vdCFcIiA6IFN0cmluZ1xuIikpKTt9aWYodHlwZW9mIE1EWENvbnRlbnQhPT0ndW5kZWZpbmVkJyYmTURYQ29udGVudCYmTURYQ29udGVudD09PU9iamVjdChNRFhDb250ZW50KSYmT2JqZWN0LmlzRXh0ZW5zaWJsZShNRFhDb250ZW50KSl7T2JqZWN0LmRlZmluZVByb3BlcnR5KE1EWENvbnRlbnQsJ19fZmlsZW1ldGEnLHtlbnVtZXJhYmxlOnRydWUsY29uZmlndXJhYmxlOnRydWUsdmFsdWU6e25hbWU6Ik1EWENvbnRlbnQiLGZpbGVuYW1lOiJtYW51YWwvRWxtL1JlbmRlcmluZy1FeGFtcGxlcy5tZCJ9fSk7fU1EWENvbnRlbnQuaXNNRFhDb21wb25lbnQ9dHJ1ZTs="},{"version":3,"sources":["/Users/dennis.okeeffe/Project-Imposter/developer-notes/manual/Elm/Rendering-Examples.md"],"names":["React","mdx","makeShortcode","name","MDXDefaultShortcode","props","console","warn","layoutProps","MDXLayout","MDXContent","components","isMDXComponent"],"mappings":"iMAAA,cACE,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,GAAT,KAAoB,eAApB,CACA,cAGF,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAAAC,IAAI,QAAI,SAASC,CAAAA,mBAAT,CAA6BC,KAA7B,CAAoC,CAChEC,OAAO,CAACC,IAAR,CAAa,aAAeJ,IAAf,CAAsB,yEAAnC,EACA,MAAO,WAASE,KAAT,CAAP,CACD,CAHyB,EAA1B,CAKA,GAAMG,CAAAA,WAAW,CAAG,EAApB,CAGA,GAAMC,CAAAA,SAAS,CAAG,SAAlB,CACA,cAAe,SAASC,CAAAA,UAAT,MAGZ,IAFDC,CAAAA,UAEC,MAFDA,UAEC,CADEN,KACF,+CACD,MAAO,KAAC,SAAD,kBAAeG,WAAf,CAAgCH,KAAhC,EAAuC,UAAU,CAAEM,UAAnD,CAA+D,OAAO,CAAC,WAAvE,GACL,SAAQ,CACN,KAAM,wBADA,CAAR,0BADK,CAIL,SAAQ,CACN,KAAM,kCADA,CAAR,oCAJK,CAOL,eAAK,0BAAM,UAAU,CAAC,KAAjB,EAA2B,CAC5B,YAAa,cADe,CAA3B,6dAAL,CAPK,CAwBL,SAAQ,CACN,KAAM,wCADA,CAAR,0CAxBK,CA2BL,eAAK,0BAAM,UAAU,CAAC,KAAjB,EAA2B,CAC5B,YAAa,eADe,CAA3B,0MAAL,CA3BK,CAiCL,8CAjCK,CAkCL,SAAQ,CACN,KAAM,iBADA,CAAR,mBAlCK,CAqCL,qEAA4D,kBAAY,UAAU,CAAC,GAAvB,WAA5D,qCAAmJ,kBAAY,UAAU,CAAC,GAAvB,gBAAnJ,KArCK,CAsCL,eAAK,0BAAM,UAAU,CAAC,KAAjB,EAA2B,CAC5B,YAAa,cADe,CAA3B,oeAAL,CAtCK,CAwDL,SAAQ,CACN,KAAM,yCADA,CAAR,2CAxDK,CA2DL,eAAK,0BAAM,UAAU,CAAC,KAAjB,EAA2B,CAC5B,YAAa,cADe,CAA3B,gJAAL,CA3DK,CAsEL,SAAQ,CACN,KAAM,qCADA,CAAR,uCAtEK,CAyEL,eAAK,0BAAM,UAAU,CAAC,KAAjB,EAA2B,CAC5B,YAAa,gBADe,CAA3B,sPAAL,CAzEK,CAAP,CAmFD,C,4QAEDD,UAAU,CAACE,cAAX,CAA4B,IAA5B","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"elm-rendering-examples\"\n    }}>{`Elm Rendering Examples`}</h1>\n    <h2 {...{\n      \"id\": \"rendering-via-anonymous-function\"\n    }}>{`Rendering via anonymous function`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-elm\"\n      }}>{`view model =\n    div [ class \"content\" ]\n        [ h1 [] [ text \"Photo Groove\" ]\n        , div [ id \"thumbnails\" ]\n            -- anonymous function mapping photos\n            (List.map (\\\\photo -> viewThumbnail model.selectedUrl photo)\n                model.photos\n            )\n        , img                 #A\n            [ class \"large\"   #A\n            , src (urlPrefix ++ \"large/\" ++ model.selectedUrl)\n            ]\n            []\n        ]\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"anon-function-with-partial-application\"\n    }}>{`Anon function with partial application`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`Before: List.map (\\\\photo -> viewThumbnail model.selectedUrl photo) model.photos \n# Partial application is known as curried in Elm\nAfter: List.map (viewThumbnail model.selectedUrl) model.photos\n`}</code></pre>\n    <p>{`All Elm functions are curried.`}</p>\n    <h2 {...{\n      \"id\": \"update-function\"\n    }}>{`Update function`}</h2>\n    <p>{`To update the model, we need to have the appropriate `}<inlineCode parentName=\"p\">{`update`}</inlineCode>{` function and expose the correct `}<inlineCode parentName=\"p\">{`Html.Events`}</inlineCode>{`.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-elm\"\n      }}>{`import Html exposing (..)\nimport Html.Attributes exposing (..)\nimport Html.Events exposing (onClick)\n\nupdate msg model =\n    if msg.description == \"ClickedPhoto\" then\n        { model | selectedUrl = msg.data }\n    else model\n\nviewThumbnail selectedUrl thumb =\n    img\n        [ src (urlPrefix ++ thumb.url)\n        , classList [ ( \"selected\", selectedUrl == thumbnail.url ) ]\n        , onClick { description = \"ClickedPhoto\", data = thumb.url } ]\n        []\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"implementing-the-model-view-update-loop\"\n    }}>{`Implementing the Model-View-Update Loop`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-elm\"\n      }}>{`import Browser\n\nmain =\n    Browser.sandbox\n        { init = initialModel\n        , view = view\n        , update = update\n        }\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"multi-argument-function-annotations\"\n    }}>{`Multi-Argument Function Annotations`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`> String.padLeft\n<function:padLeft> : Int -> Char -> String -> String\n> String.padLeft 9\n<function> : Char -> String -> String\n> String.padLeft 9 '.' <function> : String -> String\n> String.padLeft 9 '.' \"not!\" \".....not!\" : String\n`}</code></pre>\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  "]}]}