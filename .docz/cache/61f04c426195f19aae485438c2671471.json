{"remainingRequest":"/Users/okeeffe_d/Business/Documentation/node_modules/babel-loader/lib/index.js?{\"presets\":[[\"/Users/okeeffe_d/Business/Documentation/node_modules/babel-preset-docz/dist/index.js\",{\"flow\":true,\"typescript\":false,\"parseProps\":true}]],\"plugins\":[[\"/Users/okeeffe_d/Business/Documentation/node_modules/docz-utils/lib/named-asset-import.js\",{\"loaderMap\":{\"svg\":{\"ReactComponent\":\"@svgr/webpack?-prettier,-svgo![path]\"}}}]],\"babelrc\":false,\"cacheCompression\":true,\"compact\":true}!/Users/okeeffe_d/Business/Documentation/manual/COMP3306-AI/3-A*-Algorithm.md","dependencies":[{"path":"/Users/okeeffe_d/Business/Documentation/manual/COMP3306-AI/3-A*-Algorithm.md","mtime":1548209344277},{"path":"/Users/okeeffe_d/Business/Documentation/node_modules/cache-loader/dist/cjs.js","mtime":1548134640245},{"path":"/Users/okeeffe_d/Business/Documentation/node_modules/babel-loader/lib/index.js","mtime":1548134640227}],"contextDependencies":[],"result":["function _typeof(obj){if(typeof Symbol===\"function\"&&typeof Symbol.iterator===\"symbol\"){_typeof=function _typeof(obj){return typeof obj;};}else{_typeof=function _typeof(obj){return obj&&typeof Symbol===\"function\"&&obj.constructor===Symbol&&obj!==Symbol.prototype?\"symbol\":typeof obj;};}return _typeof(obj);}function _objectWithoutProperties(source,excluded){if(source==null)return{};var target=_objectWithoutPropertiesLoose(source,excluded);var key,i;if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++){key=sourceSymbolKeys[i];if(excluded.indexOf(key)>=0)continue;if(!Object.prototype.propertyIsEnumerable.call(source,key))continue;target[key]=source[key];}}return target;}function _objectWithoutPropertiesLoose(source,excluded){if(source==null)return{};var target={};var sourceKeys=Object.keys(source);var key,i;for(i=0;i<sourceKeys.length;i++){key=sourceKeys[i];if(excluded.indexOf(key)>=0)continue;target[key]=source[key];}return target;}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\");}}function _defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}function _createClass(Constructor,protoProps,staticProps){if(protoProps)_defineProperties(Constructor.prototype,protoProps);if(staticProps)_defineProperties(Constructor,staticProps);return Constructor;}function _possibleConstructorReturn(self,call){if(call&&(_typeof(call)===\"object\"||typeof call===\"function\")){return call;}return _assertThisInitialized(self);}function _assertThisInitialized(self){if(self===void 0){throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");}return self;}function _getPrototypeOf(o){_getPrototypeOf=Object.setPrototypeOf?Object.getPrototypeOf:function _getPrototypeOf(o){return o.__proto__||Object.getPrototypeOf(o);};return _getPrototypeOf(o);}function _inherits(subClass,superClass){if(typeof superClass!==\"function\"&&superClass!==null){throw new TypeError(\"Super expression must either be null or a function\");}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,writable:true,configurable:true}});if(superClass)_setPrototypeOf(subClass,superClass);}function _setPrototypeOf(o,p){_setPrototypeOf=Object.setPrototypeOf||function _setPrototypeOf(o,p){o.__proto__=p;return o;};return _setPrototypeOf(o,p);}import React from'react';import{MDXTag}from'@mdx-js/tag';var MDXContent=/*#__PURE__*/function(_React$Component){_inherits(MDXContent,_React$Component);function MDXContent(props){var _this;_classCallCheck(this,MDXContent);_this=_possibleConstructorReturn(this,_getPrototypeOf(MDXContent).call(this,props));_this.layout=null;return _this;}_createClass(MDXContent,[{key:\"render\",value:function render(){var _this$props=this.props,components=_this$props.components,props=_objectWithoutProperties(_this$props,[\"components\"]);return React.createElement(MDXTag,{name:\"wrapper\",components:components},React.createElement(MDXTag,{name:\"h1\",components:components,props:{\"id\":\"week-3---a-algorithm\"}},\"Week 3 - A* Algorithm\"),React.createElement(MDXTag,{name:\"p\",components:components},React.createElement(MDXTag,{name:\"strong\",components:components,parentName:\"p\"},\"Aims\")),React.createElement(MDXTag,{name:\"ul\",components:components},React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"A* search algorithm \"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"How to invent admissible heuristics\")),React.createElement(MDXTag,{name:\"h2\",components:components,props:{\"id\":\"a-search\"}},\"A* Search\"),React.createElement(MDXTag,{name:\"ul\",components:components},React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"UCS minimizes the cost so far \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"li\"},\"g(n)\")),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"GS minimizes the estimated cost to the goal \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"li\"},\"h(n)\")),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"A* combining UCS and GS\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"Evaluation function: \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"li\"},\"f(n)=g(n)+h(n)\"),\"\\n- \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"li\"},\"g(n) = cost so far to reach n\"),\"\\n- \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"li\"},\"h(n) = est. cost from n to goal\"),\"\\n- \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"li\"},\"f(n) = est. total cost of path through n to the goal\"))),React.createElement(MDXTag,{name:\"p\",components:components},\"The idea is that we take into account both the cost and estimated cost and combine them to decide which nodes to add to the fringe queue!\"),React.createElement(MDXTag,{name:\"p\",components:components},React.createElement(MDXTag,{name:\"strong\",components:components,parentName:\"p\"},\"BFS and UCS Special Case\")),React.createElement(MDXTag,{name:\"ul\",components:components},React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"BFS is a special case of A* when f(n)=depth(n)\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"BFS is also a special case of UCS when g(n)=depth(n)\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"UCS is a special case of A* when h(n)=0\")),React.createElement(MDXTag,{name:\"h2\",components:components,props:{\"id\":\"admissible-heauristic\"}},\"Admissible Heauristic\"),React.createElement(MDXTag,{name:\"ul\",components:components},React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"Heuristic \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"li\"},\"h(n)\"),\" is admissible if for every node n:\\n- \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"li\"},\"h(n) <= h*(n)\"),\" where \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"li\"},\"h*(n)\"),\" is the true cost to reach a goal from \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"li\"},\"n\"),\"\\n- The estimate to reach the goal is smaller or equal to the true cost to reach the goal\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"Admissible heuristics are \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"li\"},\"optimistic\"),\" - they think that the cost of solving the problem is less than it actually is.\\n- heuristic never overestimates actual cost -> it is admissible\")),React.createElement(MDXTag,{name:\"p\",components:components},React.createElement(MDXTag,{name:\"strong\",components:components,parentName:\"p\"},\"Theorem\")),React.createElement(MDXTag,{name:\"p\",components:components},\"If \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"h\"),\" is an \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"admissible heuristic\"),\" than A* is complete and optimal.\"),React.createElement(MDXTag,{name:\"p\",components:components},\"How to check?\"),React.createElement(MDXTag,{name:\"p\",components:components},\"See if the estimated cost for a node is <= the actual cost from that node to the goal node.\"),React.createElement(MDXTag,{name:\"h2\",components:components,props:{\"id\":\"optimality-of-a---proof\"}},\"Optimality of A* - Proof\"),React.createElement(MDXTag,{name:\"p\",components:components},\"Compare f(G2) and f(G)\"),React.createElement(MDXTag,{name:\"ol\",components:components},React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ol\"},\"f(G2)=g(G2)+h(G2) (by definition) = g(G2) as h(G2)=0, G2 is a goal\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ol\"},\"f(G)=g(G)+h(G) (by definition) = g(G) as h(G)=0, G is a goal\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ol\"},\"g(G2)>g(G) as G2 is suboptimal\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ol\"},\"=> f(G2)>f(G) by substituting 1) and 2) into 3)\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ol\"},\"f(n)=g(n)+h(n) (by definition)\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ol\"},\"h(n) <= h\",React.createElement(MDXTag,{name:\"em\",components:components,parentName:\"li\"},\"(n) where h\"),\"(n) is the true cost from n to G (as h is admissible)\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ol\"},\"=> f(n)<=g(n) + h*(n) (5 & 6)\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ol\"},\"= g(G) path cost from S to G via n\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ol\"},\"g(G) = f(G) as f(G)=g(G)+h(G)=g(G)+0 as h(G)=0, G is a goal \"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ol\"},\"=> f(n)<=f(G) (7,8,9)\",React.createElement(MDXTag,{name:\"ul\",components:components,parentName:\"li\"},React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"Thus f(G)<f(G2) (4) & f(n)<=f(G) (10)\"))),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ol\"},\"f(n)<=f(G)<f(G2) (10, 4)\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ol\"},\"f(n)<f(G2) => n will be expanded not G2; A* will not select G2 for expansion\")),React.createElement(MDXTag,{name:\"h2\",components:components,props:{\"id\":\"dominance\"}},\"Dominance\"),React.createElement(MDXTag,{name:\"p\",components:components},\"Two admissibleheuristics h(1) and h(2)\"),React.createElement(MDXTag,{name:\"ul\",components:components},React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"li\"},\"h[2]\"),\" dominates \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"li\"},\"h[1]\"),\" if for all nodes \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"li\"},\"n\"),\" we have \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"li\"},\"h[2](n) >= h[1](n)\"))));}}]);return MDXContent;}(React.Component);export{MDXContent as default};MDXContent.__docgenInfo={\"description\":\"\",\"methods\":[],\"displayName\":\"MDXContent\"};",{"version":3,"sources":["/Users/okeeffe_d/Business/Documentation/manual/COMP3306-AI/3-A*-Algorithm.md"],"names":["React","MDXTag","MDXContent","props","layout","components","Component"],"mappings":"omFACE,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,MAAT,KAAuB,aAAvB,C,GAGmBC,CAAAA,U,gFACnB,oBAAYC,KAAZ,CAAmB,4CACjB,4EAAMA,KAAN,GACA,MAAKC,MAAL,CAAc,IAAd,CAFiB,aAGlB,C,8DACQ,iBAC0B,KAAKD,KAD/B,CACCE,UADD,aACCA,UADD,CACgBF,KADhB,sDAGP,MAAO,qBAAC,MAAD,EACE,IAAI,CAAC,SADP,CAGE,UAAU,CAAEE,UAHd,EAG0B,oBAAC,MAAD,EAAQ,IAAI,CAAC,IAAb,CAAkB,UAAU,CAAEA,UAA9B,CAA0C,KAAK,CAAE,CAAC,KAAK,sBAAN,CAAjD,0BAH1B,CAIX,oBAAC,MAAD,EAAQ,IAAI,CAAC,GAAb,CAAiB,UAAU,CAAEA,UAA7B,EAAyC,oBAAC,MAAD,EAAQ,IAAI,CAAC,QAAb,CAAsB,UAAU,CAAEA,UAAlC,CAA8C,UAAU,CAAC,GAAzD,SAAzC,CAJW,CAKX,oBAAC,MAAD,EAAQ,IAAI,CAAC,IAAb,CAAkB,UAAU,CAAEA,UAA9B,EACA,oBAAC,MAAD,EAAQ,IAAI,CAAC,IAAb,CAAkB,UAAU,CAAEA,UAA9B,CAA0C,UAAU,CAAC,IAArD,yBADA,CAEA,oBAAC,MAAD,EAAQ,IAAI,CAAC,IAAb,CAAkB,UAAU,CAAEA,UAA9B,CAA0C,UAAU,CAAC,IAArD,wCAFA,CALW,CASX,oBAAC,MAAD,EAAQ,IAAI,CAAC,IAAb,CAAkB,UAAU,CAAEA,UAA9B,CAA0C,KAAK,CAAE,CAAC,KAAK,UAAN,CAAjD,cATW,CAUX,oBAAC,MAAD,EAAQ,IAAI,CAAC,IAAb,CAAkB,UAAU,CAAEA,UAA9B,EACA,oBAAC,MAAD,EAAQ,IAAI,CAAC,IAAb,CAAkB,UAAU,CAAEA,UAA9B,CAA0C,UAAU,CAAC,IAArD,mCAA4F,oBAAC,MAAD,EAAQ,IAAI,CAAC,YAAb,CAA0B,UAAU,CAAEA,UAAtC,CAAkD,UAAU,CAAC,IAA7D,SAA5F,CADA,CAEA,oBAAC,MAAD,EAAQ,IAAI,CAAC,IAAb,CAAkB,UAAU,CAAEA,UAA9B,CAA0C,UAAU,CAAC,IAArD,iDAA0G,oBAAC,MAAD,EAAQ,IAAI,CAAC,YAAb,CAA0B,UAAU,CAAEA,UAAtC,CAAkD,UAAU,CAAC,IAA7D,SAA1G,CAFA,CAGA,oBAAC,MAAD,EAAQ,IAAI,CAAC,IAAb,CAAkB,UAAU,CAAEA,UAA9B,CAA0C,UAAU,CAAC,IAArD,4BAHA,CAIA,oBAAC,MAAD,EAAQ,IAAI,CAAC,IAAb,CAAkB,UAAU,CAAEA,UAA9B,CAA0C,UAAU,CAAC,IAArD,0BAAmF,oBAAC,MAAD,EAAQ,IAAI,CAAC,YAAb,CAA0B,UAAU,CAAEA,UAAtC,CAAkD,UAAU,CAAC,IAA7D,mBAAnF,QACI,oBAAC,MAAD,EAAQ,IAAI,CAAC,YAAb,CAA0B,UAAU,CAAEA,UAAtC,CAAkD,UAAU,CAAC,IAA7D,kCADJ,QAEI,oBAAC,MAAD,EAAQ,IAAI,CAAC,YAAb,CAA0B,UAAU,CAAEA,UAAtC,CAAkD,UAAU,CAAC,IAA7D,oCAFJ,QAGI,oBAAC,MAAD,EAAQ,IAAI,CAAC,YAAb,CAA0B,UAAU,CAAEA,UAAtC,CAAkD,UAAU,CAAC,IAA7D,yDAHJ,CAJA,CAVW,CAmBX,oBAAC,MAAD,EAAQ,IAAI,CAAC,GAAb,CAAiB,UAAU,CAAEA,UAA7B,8IAnBW,CAoBX,oBAAC,MAAD,EAAQ,IAAI,CAAC,GAAb,CAAiB,UAAU,CAAEA,UAA7B,EAAyC,oBAAC,MAAD,EAAQ,IAAI,CAAC,QAAb,CAAsB,UAAU,CAAEA,UAAlC,CAA8C,UAAU,CAAC,GAAzD,6BAAzC,CApBW,CAqBX,oBAAC,MAAD,EAAQ,IAAI,CAAC,IAAb,CAAkB,UAAU,CAAEA,UAA9B,EACA,oBAAC,MAAD,EAAQ,IAAI,CAAC,IAAb,CAAkB,UAAU,CAAEA,UAA9B,CAA0C,UAAU,CAAC,IAArD,mDADA,CAEA,oBAAC,MAAD,EAAQ,IAAI,CAAC,IAAb,CAAkB,UAAU,CAAEA,UAA9B,CAA0C,UAAU,CAAC,IAArD,yDAFA,CAGA,oBAAC,MAAD,EAAQ,IAAI,CAAC,IAAb,CAAkB,UAAU,CAAEA,UAA9B,CAA0C,UAAU,CAAC,IAArD,4CAHA,CArBW,CA0BX,oBAAC,MAAD,EAAQ,IAAI,CAAC,IAAb,CAAkB,UAAU,CAAEA,UAA9B,CAA0C,KAAK,CAAE,CAAC,KAAK,uBAAN,CAAjD,0BA1BW,CA2BX,oBAAC,MAAD,EAAQ,IAAI,CAAC,IAAb,CAAkB,UAAU,CAAEA,UAA9B,EACA,oBAAC,MAAD,EAAQ,IAAI,CAAC,IAAb,CAAkB,UAAU,CAAEA,UAA9B,CAA0C,UAAU,CAAC,IAArD,eAAwE,oBAAC,MAAD,EAAQ,IAAI,CAAC,YAAb,CAA0B,UAAU,CAAEA,UAAtC,CAAkD,UAAU,CAAC,IAA7D,SAAxE,2CACI,oBAAC,MAAD,EAAQ,IAAI,CAAC,YAAb,CAA0B,UAAU,CAAEA,UAAtC,CAAkD,UAAU,CAAC,IAA7D,kBADJ,WAC2G,oBAAC,MAAD,EAAQ,IAAI,CAAC,YAAb,CAA0B,UAAU,CAAEA,UAAtC,CAAkD,UAAU,CAAC,IAA7D,UAD3G,2CAC0O,oBAAC,MAAD,EAAQ,IAAI,CAAC,YAAb,CAA0B,UAAU,CAAEA,UAAtC,CAAkD,UAAU,CAAC,IAA7D,MAD1O,6FADA,CAIA,oBAAC,MAAD,EAAQ,IAAI,CAAC,IAAb,CAAkB,UAAU,CAAEA,UAA9B,CAA0C,UAAU,CAAC,IAArD,+BAAwF,oBAAC,MAAD,EAAQ,IAAI,CAAC,YAAb,CAA0B,UAAU,CAAEA,UAAtC,CAAkD,UAAU,CAAC,IAA7D,eAAxF,oJAJA,CA3BW,CAkCX,oBAAC,MAAD,EAAQ,IAAI,CAAC,GAAb,CAAiB,UAAU,CAAEA,UAA7B,EAAyC,oBAAC,MAAD,EAAQ,IAAI,CAAC,QAAb,CAAsB,UAAU,CAAEA,UAAlC,CAA8C,UAAU,CAAC,GAAzD,YAAzC,CAlCW,CAmCX,oBAAC,MAAD,EAAQ,IAAI,CAAC,GAAb,CAAiB,UAAU,CAAEA,UAA7B,QAAgD,oBAAC,MAAD,EAAQ,IAAI,CAAC,YAAb,CAA0B,UAAU,CAAEA,UAAtC,CAAkD,UAAU,CAAC,GAA7D,MAAhD,WAA0I,oBAAC,MAAD,EAAQ,IAAI,CAAC,YAAb,CAA0B,UAAU,CAAEA,UAAtC,CAAkD,UAAU,CAAC,GAA7D,yBAA1I,qCAnCW,CAoCX,oBAAC,MAAD,EAAQ,IAAI,CAAC,GAAb,CAAiB,UAAU,CAAEA,UAA7B,kBApCW,CAqCX,oBAAC,MAAD,EAAQ,IAAI,CAAC,GAAb,CAAiB,UAAU,CAAEA,UAA7B,gGArCW,CAsCX,oBAAC,MAAD,EAAQ,IAAI,CAAC,IAAb,CAAkB,UAAU,CAAEA,UAA9B,CAA0C,KAAK,CAAE,CAAC,KAAK,yBAAN,CAAjD,6BAtCW,CAuCX,oBAAC,MAAD,EAAQ,IAAI,CAAC,GAAb,CAAiB,UAAU,CAAEA,UAA7B,2BAvCW,CAwCX,oBAAC,MAAD,EAAQ,IAAI,CAAC,IAAb,CAAkB,UAAU,CAAEA,UAA9B,EACA,oBAAC,MAAD,EAAQ,IAAI,CAAC,IAAb,CAAkB,UAAU,CAAEA,UAA9B,CAA0C,UAAU,CAAC,IAArD,uEADA,CAEA,oBAAC,MAAD,EAAQ,IAAI,CAAC,IAAb,CAAkB,UAAU,CAAEA,UAA9B,CAA0C,UAAU,CAAC,IAArD,iEAFA,CAGA,oBAAC,MAAD,EAAQ,IAAI,CAAC,IAAb,CAAkB,UAAU,CAAEA,UAA9B,CAA0C,UAAU,CAAC,IAArD,mCAHA,CAIA,oBAAC,MAAD,EAAQ,IAAI,CAAC,IAAb,CAAkB,UAAU,CAAEA,UAA9B,CAA0C,UAAU,CAAC,IAArD,oDAJA,CAKA,oBAAC,MAAD,EAAQ,IAAI,CAAC,IAAb,CAAkB,UAAU,CAAEA,UAA9B,CAA0C,UAAU,CAAC,IAArD,mCALA,CAMA,oBAAC,MAAD,EAAQ,IAAI,CAAC,IAAb,CAAkB,UAAU,CAAEA,UAA9B,CAA0C,UAAU,CAAC,IAArD,cAAuE,oBAAC,MAAD,EAAQ,IAAI,CAAC,IAAb,CAAkB,UAAU,CAAEA,UAA9B,CAA0C,UAAU,CAAC,IAArD,gBAAvE,yDANA,CAOA,oBAAC,MAAD,EAAQ,IAAI,CAAC,IAAb,CAAkB,UAAU,CAAEA,UAA9B,CAA0C,UAAU,CAAC,IAArD,kCAPA,CAQA,oBAAC,MAAD,EAAQ,IAAI,CAAC,IAAb,CAAkB,UAAU,CAAEA,UAA9B,CAA0C,UAAU,CAAC,IAArD,uCARA,CASA,oBAAC,MAAD,EAAQ,IAAI,CAAC,IAAb,CAAkB,UAAU,CAAEA,UAA9B,CAA0C,UAAU,CAAC,IAArD,iEATA,CAUA,oBAAC,MAAD,EAAQ,IAAI,CAAC,IAAb,CAAkB,UAAU,CAAEA,UAA9B,CAA0C,UAAU,CAAC,IAArD,0BAAmF,oBAAC,MAAD,EAAQ,IAAI,CAAC,IAAb,CAAkB,UAAU,CAAEA,UAA9B,CAA0C,UAAU,CAAC,IAArD,EACnF,oBAAC,MAAD,EAAQ,IAAI,CAAC,IAAb,CAAkB,UAAU,CAAEA,UAA9B,CAA0C,UAAU,CAAC,IAArD,0CADmF,CAAnF,CAVA,CAaA,oBAAC,MAAD,EAAQ,IAAI,CAAC,IAAb,CAAkB,UAAU,CAAEA,UAA9B,CAA0C,UAAU,CAAC,IAArD,6BAbA,CAcA,oBAAC,MAAD,EAAQ,IAAI,CAAC,IAAb,CAAkB,UAAU,CAAEA,UAA9B,CAA0C,UAAU,CAAC,IAArD,iFAdA,CAxCW,CAwDX,oBAAC,MAAD,EAAQ,IAAI,CAAC,IAAb,CAAkB,UAAU,CAAEA,UAA9B,CAA0C,KAAK,CAAE,CAAC,KAAK,WAAN,CAAjD,cAxDW,CAyDX,oBAAC,MAAD,EAAQ,IAAI,CAAC,GAAb,CAAiB,UAAU,CAAEA,UAA7B,2CAzDW,CA0DX,oBAAC,MAAD,EAAQ,IAAI,CAAC,IAAb,CAAkB,UAAU,CAAEA,UAA9B,EACA,oBAAC,MAAD,EAAQ,IAAI,CAAC,IAAb,CAAkB,UAAU,CAAEA,UAA9B,CAA0C,UAAU,CAAC,IAArD,EAA0D,oBAAC,MAAD,EAAQ,IAAI,CAAC,YAAb,CAA0B,UAAU,CAAEA,UAAtC,CAAkD,UAAU,CAAC,IAA7D,SAA1D,eAA4J,oBAAC,MAAD,EAAQ,IAAI,CAAC,YAAb,CAA0B,UAAU,CAAEA,UAAtC,CAAkD,UAAU,CAAC,IAA7D,SAA5J,sBAAqQ,oBAAC,MAAD,EAAQ,IAAI,CAAC,YAAb,CAA0B,UAAU,CAAEA,UAAtC,CAAkD,UAAU,CAAC,IAA7D,MAArQ,aAAkW,oBAAC,MAAD,EAAQ,IAAI,CAAC,YAAb,CAA0B,UAAU,CAAEA,UAAtC,CAAkD,UAAU,CAAC,IAA7D,uBAAlW,CADA,CA1DW,CAAP,CA8DD,C,wBAtEqCL,KAAK,CAACM,S,SAAzBJ,U","sourcesContent":["\n  import React from 'react'\n  import { MDXTag } from '@mdx-js/tag'\n  \n\nexport default class MDXContent extends React.Component {\n  constructor(props) {\n    super(props)\n    this.layout = null\n  }\n  render() {\n    const { components, ...props } = this.props\n\n    return <MDXTag\n             name=\"wrapper\"\n             \n             components={components}><MDXTag name=\"h1\" components={components} props={{\"id\":\"week-3---a-algorithm\"}}>{`Week 3 - A* Algorithm`}</MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"strong\" components={components} parentName=\"p\">{`Aims`}</MDXTag></MDXTag>\n<MDXTag name=\"ul\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`A* search algorithm `}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`How to invent admissible heuristics`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"a-search\"}}>{`A* Search`}</MDXTag>\n<MDXTag name=\"ul\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`UCS minimizes the cost so far `}<MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`g(n)`}</MDXTag></MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`GS minimizes the estimated cost to the goal `}<MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`h(n)`}</MDXTag></MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`A* combining UCS and GS`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Evaluation function: `}<MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`f(n)=g(n)+h(n)`}</MDXTag>{`\n- `}<MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`g(n) = cost so far to reach n`}</MDXTag>{`\n- `}<MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`h(n) = est. cost from n to goal`}</MDXTag>{`\n- `}<MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`f(n) = est. total cost of path through n to the goal`}</MDXTag></MDXTag>\n</MDXTag>\n<MDXTag name=\"p\" components={components}>{`The idea is that we take into account both the cost and estimated cost and combine them to decide which nodes to add to the fringe queue!`}</MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"strong\" components={components} parentName=\"p\">{`BFS and UCS Special Case`}</MDXTag></MDXTag>\n<MDXTag name=\"ul\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`BFS is a special case of A* when f(n)=depth(n)`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`BFS is also a special case of UCS when g(n)=depth(n)`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`UCS is a special case of A* when h(n)=0`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"admissible-heauristic\"}}>{`Admissible Heauristic`}</MDXTag>\n<MDXTag name=\"ul\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Heuristic `}<MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`h(n)`}</MDXTag>{` is admissible if for every node n:\n- `}<MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`h(n) <= h*(n)`}</MDXTag>{` where `}<MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`h*(n)`}</MDXTag>{` is the true cost to reach a goal from `}<MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`n`}</MDXTag>{`\n- The estimate to reach the goal is smaller or equal to the true cost to reach the goal`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Admissible heuristics are `}<MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`optimistic`}</MDXTag>{` - they think that the cost of solving the problem is less than it actually is.\n- heuristic never overestimates actual cost -> it is admissible`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"strong\" components={components} parentName=\"p\">{`Theorem`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`If `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`h`}</MDXTag>{` is an `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`admissible heuristic`}</MDXTag>{` than A* is complete and optimal.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`How to check?`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`See if the estimated cost for a node is <= the actual cost from that node to the goal node.`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"optimality-of-a---proof\"}}>{`Optimality of A* - Proof`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Compare f(G2) and f(G)`}</MDXTag>\n<MDXTag name=\"ol\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ol\">{`f(G2)=g(G2)+h(G2) (by definition) = g(G2) as h(G2)=0, G2 is a goal`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ol\">{`f(G)=g(G)+h(G) (by definition) = g(G) as h(G)=0, G is a goal`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ol\">{`g(G2)>g(G) as G2 is suboptimal`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ol\">{`=> f(G2)>f(G) by substituting 1) and 2) into 3)`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ol\">{`f(n)=g(n)+h(n) (by definition)`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ol\">{`h(n) <= h`}<MDXTag name=\"em\" components={components} parentName=\"li\">{`(n) where h`}</MDXTag>{`(n) is the true cost from n to G (as h is admissible)`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ol\">{`=> f(n)<=g(n) + h*(n) (5 & 6)`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ol\">{`= g(G) path cost from S to G via n`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ol\">{`g(G) = f(G) as f(G)=g(G)+h(G)=g(G)+0 as h(G)=0, G is a goal `}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ol\">{`=> f(n)<=f(G) (7,8,9)`}<MDXTag name=\"ul\" components={components} parentName=\"li\">\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Thus f(G)<f(G2) (4) & f(n)<=f(G) (10)`}</MDXTag>\n</MDXTag></MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ol\">{`f(n)<=f(G)<f(G2) (10, 4)`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ol\">{`f(n)<f(G2) => n will be expanded not G2; A* will not select G2 for expansion`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"dominance\"}}>{`Dominance`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Two admissibleheuristics h(1) and h(2)`}</MDXTag>\n<MDXTag name=\"ul\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`h[2]`}</MDXTag>{` dominates `}<MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`h[1]`}</MDXTag>{` if for all nodes `}<MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`n`}</MDXTag>{` we have `}<MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`h[2](n) >= h[1](n)`}</MDXTag></MDXTag>\n</MDXTag>\n           </MDXTag>\n  }\n}\n  "]}]}