{"remainingRequest":"/Users/okeeffe_d/Project-Imposter/developer-notes/node_modules/docz-core/node_modules/babel-loader/lib/index.js??ref--6-1!/Users/okeeffe_d/Project-Imposter/developer-notes/node_modules/@mdx-js/loader/index.js??ref--6-2!/Users/okeeffe_d/Project-Imposter/developer-notes/node_modules/source-map-loader/index.js!/Users/okeeffe_d/Project-Imposter/developer-notes/manual/Kubernetes/EKS-Docker-Setup.md","dependencies":[{"path":"/Users/okeeffe_d/Project-Imposter/developer-notes/manual/Kubernetes/EKS-Docker-Setup.md","mtime":1548282825041},{"path":"/Users/okeeffe_d/Project-Imposter/developer-notes/node_modules/cache-loader/dist/cjs.js","mtime":1561535530324},{"path":"/Users/okeeffe_d/Project-Imposter/developer-notes/node_modules/docz-core/node_modules/babel-loader/lib/index.js","mtime":1560300163820},{"path":"/Users/okeeffe_d/Project-Imposter/developer-notes/node_modules/@mdx-js/loader/index.js","mtime":1561535530532},{"path":"/Users/okeeffe_d/Project-Imposter/developer-notes/node_modules/source-map-loader/index.js","mtime":1548285283521}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9vYmplY3RXaXRob3V0UHJvcGVydGllcyBmcm9tIi9Vc2Vycy9va2VlZmZlX2QvUHJvamVjdC1JbXBvc3Rlci9kZXZlbG9wZXItbm90ZXMvbm9kZV9tb2R1bGVzL2JhYmVsLXByZXNldC1yZWFjdC1hcHAvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzIjsvKiBAanN4IG1keCAqL2ltcG9ydCBSZWFjdCBmcm9tJ3JlYWN0JztpbXBvcnR7bWR4fWZyb20nQG1keC1qcy9yZWFjdCc7LyogQGpzeCBtZHggKi92YXIgbWFrZVNob3J0Y29kZT1mdW5jdGlvbiBtYWtlU2hvcnRjb2RlKG5hbWUpe3JldHVybiBmdW5jdGlvbiBNRFhEZWZhdWx0U2hvcnRjb2RlKHByb3BzKXtjb25zb2xlLndhcm4oIkNvbXBvbmVudCAiK25hbWUrIiB3YXMgbm90IGltcG9ydGVkLCBleHBvcnRlZCwgb3IgcHJvdmlkZWQgYnkgTURYUHJvdmlkZXIgYXMgZ2xvYmFsIHNjb3BlIik7cmV0dXJuIG1keCgiZGl2Iixwcm9wcyk7fTt9O3ZhciBsYXlvdXRQcm9wcz17fTt2YXIgTURYTGF5b3V0PSJ3cmFwcGVyIjtleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBNRFhDb250ZW50KF9yZWYpe3ZhciBjb21wb25lbnRzPV9yZWYuY29tcG9uZW50cyxwcm9wcz1fb2JqZWN0V2l0aG91dFByb3BlcnRpZXMoX3JlZixbImNvbXBvbmVudHMiXSk7cmV0dXJuIG1keChNRFhMYXlvdXQsT2JqZWN0LmFzc2lnbih7fSxsYXlvdXRQcm9wcyxwcm9wcyx7Y29tcG9uZW50czpjb21wb25lbnRzLG1keFR5cGU6Ik1EWExheW91dCJ9KSxtZHgoImgxIix7ImlkIjoiZWtzLWRvY2tlci1zZXR1cCJ9LCJFS1MgRG9ja2VyIFNldHVwIiksbWR4KCJwIixudWxsLCJQdWxsIHVidW50dSBsYXRlc3QgaW1hZ2UgZnJvbSBEb2NrZXIgSHViLiIpLG1keCgiaDIiLHsiaWQiOiJzdGFydGluZy10aGUtaW1hZ2UifSwiU3RhcnRpbmcgdGhlIGltYWdlIiksbWR4KCJwcmUiLG51bGwsbWR4KCJjb2RlIixPYmplY3QuYXNzaWduKHtwYXJlbnROYW1lOiJwcmUifSx7ImNsYXNzTmFtZSI6Imxhbmd1YWdlLXNoZWxsIn0pLCIjIFN0YXJ0IHRoZSBjb250YWluZXJcbmRvY2tlciBydW4gLWRpdCAtcCA4MDAxOjgwMDEgLWUgXCJBV1NfQUNDRVNTX0tFWT0ke0FXU19BQ0NFU1NfS0VZfVwiIC1lIFwiQVdTX1NFQ1JFVF9LRVk9JHtBV1NfU0VDUkVUX0FDQ0VTU19LRVl9XCIgLWUgXCJBV1NfUkVHSU9OPWFwLXNvdXRoZWFzdC0yXCIgLS1uYW1lIGVrcyB1YnVudHUgL2Jpbi9zaFxuIyBDb25maXJtIGl0IGlzIHJ1bm5pbmdcbnN1ZG8gZG9ja2VyIHBzXG4jIEF0dGFjaCB0byBjb250YWluZXJcbnN1ZG8gZG9ja2VyIGF0dGFjaCBla3NcbiMgSWYgeW91IG5lZWQgdG8gY29weSBmaWxlcyB0byAvcm9vdFxuZG9ja2VyIGNwIGZvbGRlci8gbXljb250YWluZXI6L3Jvb3RcbiIpKSxtZHgoImgyIix7ImlkIjoiY29tbWl0LWNoYW5nZXMifSwiQ29tbWl0IGNoYW5nZXMiKSxtZHgoInByZSIsbnVsbCxtZHgoImNvZGUiLE9iamVjdC5hc3NpZ24oe3BhcmVudE5hbWU6InByZSJ9LHsiY2xhc3NOYW1lIjoibGFuZ3VhZ2Utc2hlbGwifSksInN1ZG8gZG9ja2VyIGNvbW1pdCBDT05UQUlORVJfSUQgdWJ1bnR1OlRBR1xuIikpLG1keCgiaDIiLHsiaWQiOiJpbnN0YWxsYXRpb24ifSwiSW5zdGFsbGF0aW9uIiksbWR4KCJwIixudWxsLCJJZiB5b3UgaGF2ZW4ndCBzYXZlZCBhbiB1cGRhdGVkIGNvbnRhaW5lciwgZm9sbG93IHRoaXMgdG8gaW5zdGFsbCBBV1MgQ0xJLCBQeXRob24zLCAiLG1keCgiaW5saW5lQ29kZSIse3BhcmVudE5hbWU6InAifSwiYXdzLWlhbS1hdXRoZW50aWNhdG9yIiksIiwgZWtzY3RsIGFuZCBrdWJlY3RsLiBOb3RlIHlvdSBtaWdodCBuZWVkIHRvIHVzZSAiLG1keCgiaW5saW5lQ29kZSIse3BhcmVudE5hbWU6InAifSwic3VkbyIpLCIuIiksbWR4KCJwcmUiLG51bGwsbWR4KCJjb2RlIixPYmplY3QuYXNzaWduKHtwYXJlbnROYW1lOiJwcmUifSx7ImNsYXNzTmFtZSI6Imxhbmd1YWdlLXNoZWxsIn0pLCJhcHQtZ2V0IHVwZGF0ZVxuIyBHZXQgQVdTIENMSVxuYXB0LWdldCBpbnN0YWxsIGF3c2NsaVxuYXB0LWdldCBpbnN0YWxsIC0tcmVpbnN0YWxsIGdyb2ZmLWJhc2UgIyBtYXkgYmUgcmVxdWlyZWQgaXMgYXdzIG1lbnRpb25zIGl0XG5hcHQtZ2V0IGluc3RhbGwgY3VybFxuIyBJbnN0YWxsIGt1YmVjdGxcbmN1cmwgLUxPIGh0dHBzOi8vc3RvcmFnZS5nb29nbGVhcGlzLmNvbS9rdWJlcm5ldGVzLXJlbGVhc2UvcmVsZWFzZS8kKGN1cmwgLXMgaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL2t1YmVybmV0ZXMtcmVsZWFzZS9yZWxlYXNlL3N0YWJsZS50eHQpL2Jpbi9saW51eC9hbWQ2NC9rdWJlY3RsXG5jaG1vZCAreCAuL2t1YmVjdGxcbm12IC4va3ViZWN0bCAvdXNyL2xvY2FsL2Jpbi9rdWJlY3RsXG4jIEluc3RhbGwgZWtzY3RsXG5jdXJsIC0tc2lsZW50IC0tbG9jYXRpb24gXCJodHRwczovL2dpdGh1Yi5jb20vd2VhdmV3b3Jrcy9la3NjdGwvcmVsZWFzZXMvZG93bmxvYWQvbGF0ZXN0X3JlbGVhc2UvZWtzY3RsXyQodW5hbWUgLXMpX2FtZDY0LnRhci5nelwiIHwgdGFyIHh6IC1DIC90bXBcbm12IC90bXAvZWtzY3RsIC91c3IvbG9jYWwvYmluXG4jIEluc3RhbCBpYW0tYXdzLWF1dGhlbnRpY2F0b3JcbmN1cmwgLW8gYXdzLWlhbS1hdXRoZW50aWNhdG9yIGh0dHBzOi8vYW1hem9uLWVrcy5zMy11cy13ZXN0LTIuYW1hem9uYXdzLmNvbS8xLjExLjUvMjAxOC0xMi0wNi9iaW4vbGludXgvYW1kNjQvYXdzLWlhbS1hdXRoZW50aWNhdG9yXG5jaG1vZCAreCAuL2F3cy1pYW0tYXV0aGVudGljYXRvclxuY3AgLi9hd3MtaWFtLWF1dGhlbnRpY2F0b3IgL3Vzci9iaW4vYXdzLWlhbS1hdXRoZW50aWNhdG9yICYmIGV4cG9ydCBQQVRIPSRIT01FL2JpbjokUEFUSFxuIyBFbmFibGUgY29sb3IgcHJvbXB0XG5uYW5vIH4vLmJhc2hyYyAjIHVuY29tbWVudCBzZWN0aW9uIGFib3V0IGJhc2hcbiIpKSk7fWlmKHR5cGVvZiBNRFhDb250ZW50IT09J3VuZGVmaW5lZCcmJk1EWENvbnRlbnQmJk1EWENvbnRlbnQ9PT1PYmplY3QoTURYQ29udGVudCkmJk9iamVjdC5pc0V4dGVuc2libGUoTURYQ29udGVudCkpe09iamVjdC5kZWZpbmVQcm9wZXJ0eShNRFhDb250ZW50LCdfX2ZpbGVtZXRhJyx7ZW51bWVyYWJsZTp0cnVlLGNvbmZpZ3VyYWJsZTp0cnVlLHZhbHVlOntuYW1lOiJNRFhDb250ZW50IixmaWxlbmFtZToibWFudWFsL0t1YmVybmV0ZXMvRUtTLURvY2tlci1TZXR1cC5tZCJ9fSk7fU1EWENvbnRlbnQuaXNNRFhDb21wb25lbnQ9dHJ1ZTs="},{"version":3,"sources":["/Users/okeeffe_d/Project-Imposter/developer-notes/manual/Kubernetes/EKS-Docker-Setup.md"],"names":["React","mdx","makeShortcode","name","MDXDefaultShortcode","props","console","warn","layoutProps","MDXLayout","MDXContent","components","isMDXComponent"],"mappings":"4LAAA,cACE,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,GAAT,KAAoB,eAApB,CACA,cAGF,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAAAC,IAAI,QAAI,SAASC,CAAAA,mBAAT,CAA6BC,KAA7B,CAAoC,CAChEC,OAAO,CAACC,IAAR,CAAa,aAAeJ,IAAf,CAAsB,yEAAnC,EACA,MAAO,WAASE,KAAT,CAAP,CACD,CAHyB,EAA1B,CAKA,GAAMG,CAAAA,WAAW,CAAG,EAApB,CAGA,GAAMC,CAAAA,SAAS,CAAG,SAAlB,CACA,cAAe,SAASC,CAAAA,UAAT,MAGZ,IAFDC,CAAAA,UAEC,MAFDA,UAEC,CADEN,KACF,+CACD,MAAO,KAAC,SAAD,kBAAeG,WAAf,CAAgCH,KAAhC,EAAuC,UAAU,CAAEM,UAAnD,CAA+D,OAAO,CAAC,WAAvE,GACL,SAAQ,CACN,KAAM,kBADA,CAAR,oBADK,CAIL,yDAJK,CAKL,SAAQ,CACN,KAAM,oBADA,CAAR,sBALK,CAQL,eAAK,0BAAM,UAAU,CAAC,KAAjB,EAA2B,CAC5B,YAAa,gBADe,CAA3B,+WAAL,CARK,CAmBL,SAAQ,CACN,KAAM,gBADA,CAAR,kBAnBK,CAsBL,eAAK,0BAAM,UAAU,CAAC,KAAjB,EAA2B,CAC5B,YAAa,gBADe,CAA3B,iDAAL,CAtBK,CA0BL,SAAQ,CACN,KAAM,cADA,CAAR,gBA1BK,CA6BL,oGAA2F,kBAAY,UAAU,CAAC,GAAvB,0BAA3F,qDAAiN,kBAAY,UAAU,CAAC,GAAvB,SAAjN,KA7BK,CA8BL,eAAK,0BAAM,UAAU,CAAC,KAAjB,EAA2B,CAC5B,YAAa,gBADe,CAA3B,o8BAAL,CA9BK,CAAP,CAoDD,C,iRAEDD,UAAU,CAACE,cAAX,CAA4B,IAA5B","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"eks-docker-setup\"\n    }}>{`EKS Docker Setup`}</h1>\n    <p>{`Pull ubuntu latest image from Docker Hub.`}</p>\n    <h2 {...{\n      \"id\": \"starting-the-image\"\n    }}>{`Starting the image`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`# Start the container\ndocker run -dit -p 8001:8001 -e \"AWS_ACCESS_KEY=\\${AWS_ACCESS_KEY}\" -e \"AWS_SECRET_KEY=\\${AWS_SECRET_ACCESS_KEY}\" -e \"AWS_REGION=ap-southeast-2\" --name eks ubuntu /bin/sh\n# Confirm it is running\nsudo docker ps\n# Attach to container\nsudo docker attach eks\n# If you need to copy files to /root\ndocker cp folder/ mycontainer:/root\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"commit-changes\"\n    }}>{`Commit changes`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`sudo docker commit CONTAINER_ID ubuntu:TAG\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"installation\"\n    }}>{`Installation`}</h2>\n    <p>{`If you haven't saved an updated container, follow this to install AWS CLI, Python3, `}<inlineCode parentName=\"p\">{`aws-iam-authenticator`}</inlineCode>{`, eksctl and kubectl. Note you might need to use `}<inlineCode parentName=\"p\">{`sudo`}</inlineCode>{`.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`apt-get update\n# Get AWS CLI\napt-get install awscli\napt-get install --reinstall groff-base # may be required is aws mentions it\napt-get install curl\n# Install kubectl\ncurl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl\nchmod +x ./kubectl\nmv ./kubectl /usr/local/bin/kubectl\n# Install eksctl\ncurl --silent --location \"https://github.com/weaveworks/eksctl/releases/download/latest_release/eksctl_$(uname -s)_amd64.tar.gz\" | tar xz -C /tmp\nmv /tmp/eksctl /usr/local/bin\n# Instal iam-aws-authenticator\ncurl -o aws-iam-authenticator https://amazon-eks.s3-us-west-2.amazonaws.com/1.11.5/2018-12-06/bin/linux/amd64/aws-iam-authenticator\nchmod +x ./aws-iam-authenticator\ncp ./aws-iam-authenticator /usr/bin/aws-iam-authenticator && export PATH=$HOME/bin:$PATH\n# Enable color prompt\nnano ~/.bashrc # uncomment section about bash\n`}</code></pre>\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  "]}]}