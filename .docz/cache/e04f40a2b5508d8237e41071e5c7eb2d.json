{"remainingRequest":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/docz-core/node_modules/babel-loader/lib/index.js??ref--6-1!/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/@mdx-js/loader/index.js??ref--6-2!/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/source-map-loader/index.js!/Users/dennis.okeeffe/Project-Imposter/developer-notes/manual/Kubernetes/Kubernetes-Admin.md","dependencies":[{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/manual/Kubernetes/Kubernetes-Admin.md","mtime":1579078395667},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/cache-loader/dist/cjs.js","mtime":1581496618588},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/docz-core/node_modules/babel-loader/lib/index.js","mtime":1578565694890},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/@mdx-js/loader/index.js","mtime":1581496618277},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/source-map-loader/index.js","mtime":1580255490569}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/dennis.okeeffe/Project-Imposter/developer-notes/manual/Kubernetes/Kubernetes-Admin.md"],"names":["React","mdx","makeShortcode","name","MDXDefaultShortcode","props","console","warn","layoutProps","MDXLayout","MDXContent","components","isMDXComponent"],"mappings":"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","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"4-kubernetes-administration\"\n    }}>{`4. Kubernetes Administration`}</h1>\n    <h2 {...{\n      \"id\": \"resources\"\n    }}>{`Resources`}</h2>\n    <ol>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"https://github.com/etcd-io/etcd/issues/2512\"\n        }}>{`Why etcd is etcd?`}</a></li>\n    </ol>\n    <h2 {...{\n      \"id\": \"administration\"\n    }}>{`Administration`}</h2>\n    <p><img alt=\"Kubernetes Master Overview\" src=\"https://res.cloudinary.com/gitgoodclub/image/upload/v1540175278/Screen_Shot_2018-10-22_at_1.26.57_pm.png\" /></p>\n    <ul>\n      <li parentName=\"ul\">{`When you deploy a new Pod, the information is stored in `}<inlineCode parentName=\"li\">{`etcd`}</inlineCode>{`. (etcd = `}<inlineCode parentName=\"li\">{`/etc`}</inlineCode>{` config folder and `}<inlineCode parentName=\"li\">{`d`}</inlineCode>{` = distributed)`}</li>\n      <li parentName=\"ul\">{`Schedular talks to REST api.`}</li>\n      <li parentName=\"ul\">{`REST api is used to handle tasks.`}<ul parentName=\"li\">\n          <li parentName=\"ul\">{`Interfaces with Kubelets on the nodes.`}</li>\n        </ul></li>\n    </ul>\n    <h2 {...{\n      \"id\": \"41-resource-quotas\"\n    }}>{`4.1 Resource Quotas`}</h2>\n    <ul>\n      <li parentName=\"ul\">{`Resource management is useful when giving access to a person or a team.`}</li>\n      <li parentName=\"ul\">{`You don't want one person or team `}<strong parentName=\"li\">{`taking up all the resources`}</strong>{` (e.g. CPU/Memory) of the cluster.`}</li>\n      <li parentName=\"ul\">{`You can divide the cluster into `}<strong parentName=\"li\">{`namespaces`}</strong>{` and enable resource quotas on it.`}<ul parentName=\"li\">\n          <li parentName=\"ul\">{`You can do this using the `}<strong parentName=\"li\">{`ResourceQuota`}</strong>{` and `}<strong parentName=\"li\">{`ObjectQuota`}</strong>{` objects.`}</li>\n        </ul></li>\n      <li parentName=\"ul\">{`Each container can specify `}<strong parentName=\"li\">{`request capacity`}</strong>{` and `}<strong parentName=\"li\">{`capacity limits`}</strong>{`.`}<ul parentName=\"li\">\n          <li parentName=\"ul\"><strong parentName=\"li\">{`Request capacity`}</strong>{` is an `}<strong parentName=\"li\">{`explicit request`}</strong>{` for resources.`}<ul parentName=\"li\">\n              <li parentName=\"ul\">{`The scheduler can use the `}<strong parentName=\"li\">{`request capacity`}</strong>{` to make decisions on where to put the pod on.`}</li>\n              <li parentName=\"ul\">{`You can see it as a `}<strong parentName=\"li\">{`minimum amount of resources the pod needs`}</strong>{`.`}</li>\n            </ul></li>\n          <li parentName=\"ul\"><strong parentName=\"li\">{`Resource limit`}</strong>{` is a limit imposed to the container.`}<ul parentName=\"li\">\n              <li parentName=\"ul\">{`Container will not be able to utilize more resources than specified.`}</li>\n            </ul></li>\n        </ul></li>\n    </ul>\n    <h3 {...{\n      \"id\": \"resource-quota-examples\"\n    }}>{`Resource Quota Examples`}</h3>\n    <ul>\n      <li parentName=\"ul\">{`You run a `}<strong parentName=\"li\">{`deployment`}</strong>{` with a `}<strong parentName=\"li\">{`pod`}</strong>{` with a `}<strong parentName=\"li\">{`CPU resource`}</strong>{` request of `}<strong parentName=\"li\">{`200m`}</strong>{`. (200 millicpu/milliocores).`}</li>\n      <li parentName=\"ul\">{`200m = 0.2 = 20% of CPU core of running node.`}<ul parentName=\"li\">\n          <li parentName=\"ul\">{`If node has 2 cores, still 20% of a single core.`}</li>\n        </ul></li>\n      <li parentName=\"ul\">{`You can also put a limit eg 400m.`}</li>\n      <li parentName=\"ul\">{`Memory quotes defined in MB or GB.`}</li>\n      <li parentName=\"ul\">{`Each pod needs the capacity quota defined during creation.`}<ul parentName=\"li\">\n          <li parentName=\"ul\">{`Admin can specify default request values for pods that don't specify any values for capacity.`}</li>\n          <li parentName=\"ul\">{`The same is valid for limit quotas.`}</li>\n        </ul></li>\n      <li parentName=\"ul\">{`If resource is requested more than the allowed capacity, the server API will give an error 403 FORBIDDEN and `}<inlineCode parentName=\"li\">{`kubectl`}</inlineCode>{` will show an error.`}</li>\n    </ul>\n    <h3 {...{\n      \"id\": \"resource-quote-options\"\n    }}>{`Resource Quote options`}</h3>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Resource`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`requests.cpu`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Sum of CPU reqs of all pos cannot exceed this value`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`requests.mem`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Sum of MEM reqs of all pods cannot exceed this value`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`requests.storage`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Sum of storage reqs of all persistent volume claims cannot exceed this value`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`limits.cpu`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Sum of CPU limits of all pods cannot exceed this value`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`limits.memory`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Sum of MEM limits of all pods cannot exceed this value`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <p>{`You can also set limits on:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`configmaps`}</li>\n      <li parentName=\"ul\">{`persistentvolumeclaims`}</li>\n      <li parentName=\"ul\">{`pods`}</li>\n      <li parentName=\"ul\">{`replicationcontrollers`}</li>\n      <li parentName=\"ul\">{`resourcequotas`}</li>\n      <li parentName=\"ul\">{`services`}</li>\n      <li parentName=\"ul\">{`services.loadbalancer`}</li>\n      <li parentName=\"ul\">{`services.nodeports`}</li>\n      <li parentName=\"ul\">{`secrets`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"42-namespaces\"\n    }}>{`4.2 Namespaces`}</h2>\n    <p>{`Namespaces allow you to create `}<strong parentName=\"p\">{`virtual clusters`}</strong>{` within the same physical cluster.`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Namespaces `}<strong parentName=\"li\">{`logically separates`}</strong>{` your cluster.`}</li>\n      <li parentName=\"ul\">{`The standard namespace is called `}<strong parentName=\"li\">{`\"default\"`}</strong>{` and that's where all the resources are launched by default.`}<ul parentName=\"li\">\n          <li parentName=\"ul\">{`There is also `}<strong parentName=\"li\">{`kube-system`}</strong>{` - a namespace for kubernetes specific resources.`}</li>\n        </ul></li>\n      <li parentName=\"ul\">{`Namespaces are intended when you have `}<strong parentName=\"li\">{`multiple teams/projects`}</strong>{` using the Kubernetes cluster.`}</li>\n      <li parentName=\"ul\">{`Resource names within namespace must be unique.`}</li>\n      <li parentName=\"ul\">{`You can divide resources of a Kubernetes cluster using namespaces.`}<ul parentName=\"li\">\n          <li parentName=\"ul\">{`You can limit resources on a per namespace basis.`}</li>\n          <li parentName=\"ul\">{`E.g. Marketing team can only use a maximum of 10GiB of memory, 2 loadbalancers, 2 CPU cores.`}</li>\n        </ul></li>\n    </ul>\n    <h3 {...{\n      \"id\": \"namespace-commands\"\n    }}>{`Namespace commands`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`$ kubectl create namespace myspace # create namespace myspace\n$ kubectl get namespaces # list all namespaces\n# Set default namespace to launch resources in\n$ export CONTEXT=$(kubectl config view | awk '/current-context/{print $2}')\n$ kubectl config set-context $CONTEXT --namespace=myspace\n`}</code></pre>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-yaml\"\n      }}>{`apiVersion: 1\nkind: ResourceQuota\nmetadata:\n  name: objects-counts\nnamespace: myspace\nspec:\n  hard:\n    configmaps: '10'\npersistentvolumesclaim: '4'\nreplicationcontrollers: '20'\nsecrets: '10'\nservices: '10'\nservices.loadbalancers: '2'\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"demo-resourcequotas\"\n    }}>{`Demo ResourceQuotas`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-yaml\"\n      }}>{`# resourcequota.yml\napiVersion: v1\nkind: Namespace\nmetadata:\n  name: myspace\n---\napiVersion: v1\nkind: ResourceQuota\nmetadata:\n  name: compute-quota\n  namespace: myspace\nspec:\n  hard:\n    requests.cpu: '1'\n    requests.memory: 1Gi\n    limits.cpu: '2'\n    limits.memory: 2Gi\n---\napiVersion: v1\nkind: ResourceQuota\nmetadata:\n  name: object-quota\n  namespace: myspace\nspec:\n  hard:\n    configmaps: '10'\n    persistentvolumeclaims: '4'\n    replicationcontrollers: '20'\n    secrets: '10'\n    services: '10'\n    services.loadbalancers: '2'\n`}</code></pre>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-yaml\"\n      }}>{`# helloworld-with-quotas.yaml\napiVersion: extensions/v1beta1\nkind: Deployment\nmetadata:\n  name: helloworld-deployment\n  namespace: myspace\nspec:\n  replicas: 3\n  template:\n    metadata:\n      labels:\n        app: helloworld\n    spec:\n      containers:\n        - name: k8s-demo\n          image: wardviaene/k8s-demo\n          ports:\n            - name: nodejs-port\n              containerPort: 3000\n          resources:\n            requests:\n              cpu: 200m\n              memory: 0.5Gi\n            limits:\n              cpu: 400m\n              memory: 1Gi\n`}</code></pre>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-yaml\"\n      }}>{`# helloworld-no-quotas.yaml\napiVersion: extensions/v1beta1\nkind: Deployment\nmetadata:\n  name: helloworld-deployment\n  namespace: myspace\nspec:\n  replicas: 3\n  template:\n    metadata:\n      labels:\n        app: helloworld\n    spec:\n      containers:\n        - name: k8s-demo\n          image: wardviaene/k8s-demo\n          ports:\n            - name: nodejs-port\n              containerPort: 3000\n`}</code></pre>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-yaml\"\n      }}>{`# default.yaml\napiVersion: v1\nkind: LimitRange\nmetadata:\n  name: limits\n  namespace: myspace\nspec:\n  limits:\n    - default:\n        cpu: 200m\n        memory: 512Mi\n      defaultRequest:\n        cpu: 100m\n        memory: 256Mi\n      type: Container\n`}</code></pre>\n    <p>{`The following commands can be used to get check resources:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`$ kubectl get <% pod_name %> --namespace=myspace\n$ kubectl describe <% pod_name %> --namespace=myspace\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"43-user-management\"\n    }}>{`4.3 User Management`}</h2>\n    <p>{`There are two user types:`}</p>\n    <ol>\n      <li parentName=\"ol\">{`Normal user (used to access the cluster externally) ie through kubctl.`}</li>\n      <li parentName=\"ol\">{`Service user (which is managed by an object in Kubernetes).`}<ul parentName=\"li\">\n          <li parentName=\"ul\">{`Used to authenticate within the cluster ie from inside pod of kubelet.`}</li>\n          <li parentName=\"ul\">{`These creds are managed like `}<strong parentName=\"li\">{`secrets`}</strong>{`.`}</li>\n        </ul></li>\n    </ol>\n    <h3 {...{\n      \"id\": \"normal-users\"\n    }}>{`Normal Users`}</h3>\n    <p>{`Auth strategies include:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Client certificates`}</li>\n      <li parentName=\"ul\">{`Bearer Tokens`}</li>\n      <li parentName=\"ul\">{`Authentication Proxy`}</li>\n      <li parentName=\"ul\">{`HTTP Basic Authentication`}</li>\n      <li parentName=\"ul\">{`OpenID`}</li>\n      <li parentName=\"ul\">{`Webhooks`}</li>\n    </ul>\n    <p>{`They have the following attributes:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Username (e.g. user123 or email@email.com)`}</li>\n      <li parentName=\"ul\">{`A UID`}</li>\n      <li parentName=\"ul\">{`Groups`}</li>\n      <li parentName=\"ul\">{`Extra fields to store extra info`}</li>\n    </ul>\n    <p>{`After a normal user authenticates, it was hav access to everything.`}</p>\n    <ul>\n      <li parentName=\"ul\">{`To limit, you need to configure auth.`}</li>\n      <li parentName=\"ul\">{`There are multiple offerings:`}<ul parentName=\"li\">\n          <li parentName=\"ul\">{`AlwaysAllow / AlwaysDeny`}</li>\n          <li parentName=\"ul\">{`ABAC (Attribute-Based Access Control)`}</li>\n          <li parentName=\"ul\">{`RBAC (Role Based Access Control)`}</li>\n          <li parentName=\"ul\">{`Webhook (auth by remote service)`}</li>\n        </ul></li>\n    </ul>\n    <h3 {...{\n      \"id\": \"service-users\"\n    }}>{`Service Users`}</h3>\n    <ul>\n      <li parentName=\"ul\">{`Service Users are using `}<strong parentName=\"li\">{`Service Account Tokens`}</strong>{`.`}</li>\n      <li parentName=\"ul\">{`They are stored as `}<strong parentName=\"li\">{`credentials using Secrets`}</strong>{`.`}<ul parentName=\"li\">\n          <li parentName=\"ul\">{`Those Secrets are also mounted in pods to allow communication between the services.`}</li>\n        </ul></li>\n      <li parentName=\"ul\">{`Service Users are `}<strong parentName=\"li\">{`specific to a namespace`}</strong>{`.`}</li>\n      <li parentName=\"ul\">{`They are created automatically by the API or manually using `}<strong parentName=\"li\">{`objects`}</strong>{`.`}</li>\n      <li parentName=\"ul\">{`Any API call `}<strong parentName=\"li\">{`not authenticated`}</strong>{` is considered as an `}<strong parentName=\"li\">{`anonymous`}</strong>{` user.`}</li>\n    </ul>\n    <h3 {...{\n      \"id\": \"other-notes-on-user-management\"\n    }}>{`Other notes on User Management`}</h3>\n    <p>{`Auth is still a work in progress. The demo itself shows the creation of a asymmetric key and updating Minikube to allow that as the user.`}</p>\n    <h2 {...{\n      \"id\": \"44-rbac-role-based-access-control\"\n    }}>{`4.4 RBAC (Role Based Access Control)`}</h2>\n    <ul>\n      <li parentName=\"ul\">{`Regulates access using `}<strong parentName=\"li\">{`roles`}</strong>{`.`}</li>\n      <li parentName=\"ul\">{`Allows admins to dynamically configure permission policies.`}</li>\n      <li parentName=\"ul\">{`This is what I'll use in the demo.`}</li>\n    </ul>\n    <p>{`You add RBAC resources with `}<inlineCode parentName=\"p\">{`kubectl`}</inlineCode>{` from a yaml format file.`}</p>\n    <p>{`First, define a role, then assign users/groups to that role.`}</p>\n    <p>{`You can create roles limited to a namespace or that applies across all namespaces.`}</p>\n    <ul>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`Role`}</strong>{` (single namespace) and `}<strong parentName=\"li\">{`ClusterRole`}</strong>{` (cluster-wide).`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`RoleBinding`}</strong>{` (single namespace) and `}<strong parentName=\"li\">{`ClusterRoleBinding`}</strong>{` (cluster-wide).`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"45-networking\"\n    }}>{`4.5 Networking`}</h2>\n    <p>{`Communication topics already covered:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Container to container: communication within a pod.`}<ul parentName=\"li\">\n          <li parentName=\"ul\">{`Through `}<strong parentName=\"li\">{`localhost`}</strong>{` and the `}<strong parentName=\"li\">{`port number`}</strong>{`.`}</li>\n        </ul></li>\n      <li parentName=\"ul\">{`Pod-To-Service comms`}<ul parentName=\"li\">\n          <li parentName=\"ul\">{`Using `}<strong parentName=\"li\">{`NodePort`}</strong>{` and `}<strong parentName=\"li\">{`DNS`}</strong>{`.`}</li>\n        </ul></li>\n      <li parentName=\"ul\">{`External-To-Service`}<ul parentName=\"li\">\n          <li parentName=\"ul\">{`Using `}<strong parentName=\"li\">{`LoadBalancer`}</strong>{`, `}<strong parentName=\"li\">{`NodePort`}</strong>{`.`}</li>\n        </ul></li>\n    </ul>\n    <h3 {...{\n      \"id\": \"pods\"\n    }}>{`Pods`}</h3>\n    <ul>\n      <li parentName=\"ul\">{`The pod should always be routable.`}</li>\n      <li parentName=\"ul\">{`Kubernetes assumes that pods should be able to communicate to other pods, regardless of which node they are running.`}</li>\n      <li parentName=\"ul\">{`Kubernetes assumes that pods should be able to communicate to other pods, regardless of which node they are running.`}<ul parentName=\"li\">\n          <li parentName=\"ul\">{`Every pod has its `}<strong parentName=\"li\">{`own IP address`}</strong>{`.`}</li>\n          <li parentName=\"ul\">{`Pods on different nodes need to be able to communicate to each other using those IP addresses.`}<ul parentName=\"li\">\n              <li parentName=\"ul\">{`This is implemented differently depending on your networking setup.`}</li>\n              <li parentName=\"ul\">{`On AWS: kubenet networking (kops default).`}</li>\n            </ul></li>\n        </ul></li>\n    </ul>\n    <h3 {...{\n      \"id\": \"kubenet-networking\"\n    }}>{`Kubenet Networking`}</h3>\n    <ul>\n      <li parentName=\"ul\">{`Every pod can get an IP that is `}<strong parentName=\"li\">{`routable`}</strong>{` using the AWS Virtual Private Network (VPC).`}</li>\n      <li parentName=\"ul\">{`The kubernetes master allocates a /24 subnet to each node (254 IP addresses).`}</li>\n      <li parentName=\"ul\">{`The subnet is added to the VPCs route table.`}</li>\n      <li parentName=\"ul\">{`There is a limit of `}<strong parentName=\"li\">{`50 entries`}</strong>{`, which means you can't have more than 50 nodes in a single AWS cluster.`}</li>\n    </ul>\n    <h3 {...{\n      \"id\": \"vpc-alternatives\"\n    }}>{`VPC Alternatives`}</h3>\n    <p>{`Not every cloud provider has VPC-tech (GCE and Azure do).`}</p>\n    <p>{`The alternatives for things like on-prem etc are:`}</p>\n    <ol>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Container Network Interface (CNI)`}</p>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">\n            <p parentName=\"li\">{`Software that provides libraries/plugins for network interfaces within containers.`}</p>\n          </li>\n          <li parentName=\"ul\">\n            <p parentName=\"li\">{`Popular solutions are `}<strong parentName=\"p\">{`Calico, Weave`}</strong>{` (standalone or with CNI).`}</p>\n          </li>\n        </ul>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`An Overlay Network`}</p>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\"><strong parentName=\"li\">{`Flannel`}</strong>{` is an easy and popular way.`}</li>\n        </ul>\n      </li>\n    </ol>\n    <h2 {...{\n      \"id\": \"46-node-maintenance\"\n    }}>{`4.6 Node Maintenance`}</h2>\n    <p>{`It is the `}<strong parentName=\"p\">{`Node Controller`}</strong>{` that is responsible for managing the Node object.`}</p>\n    <ul>\n      <li parentName=\"ul\">{`It assigns `}<strong parentName=\"li\">{`IP Space`}</strong>{` to the node when a new node is launched.`}</li>\n      <li parentName=\"ul\">{`It keeps the `}<strong parentName=\"li\">{`node list`}</strong>{` up to date with the available machines.`}</li>\n      <li parentName=\"ul\">{`The node controller is also monitoring the `}<strong parentName=\"li\">{`health of the node`}</strong>{`.`}<ul parentName=\"li\">\n          <li parentName=\"ul\">{`If a node is `}<strong parentName=\"li\">{`unhealthy it gets deleted`}</strong>{`.`}</li>\n          <li parentName=\"ul\">{`Pods running on the unhealthy node will then get `}<strong parentName=\"li\">{`rescheduled`}</strong>{`.`}</li>\n        </ul></li>\n    </ul>\n    <h3 {...{\n      \"id\": \"adding-a-new-node\"\n    }}>{`Adding a new node`}</h3>\n    <p>{`When adding a new node, the `}<strong parentName=\"p\">{`kubelet`}</strong>{` will attempt to register itself. This is called `}<strong parentName=\"p\">{`self-registration`}</strong>{` and is the default behaviour.`}</p>\n    <ul>\n      <li parentName=\"ul\">{`It allows you to `}<strong parentName=\"li\">{`easily add more nodes`}</strong>{` to the cluster without making API changes yourself.`}</li>\n      <li parentName=\"ul\">{`A new node object is `}<strong parentName=\"li\">{`automatically`}</strong>{` created with:`}<ul parentName=\"li\">\n          <li parentName=\"ul\">{`The metadata (with a name: IP or hostname).`}</li>\n          <li parentName=\"ul\">{`Labels (e.g. cloud region / availability zone / instance size).`}</li>\n        </ul></li>\n      <li parentName=\"ul\">{`Has `}<strong parentName=\"li\">{`node condition`}</strong>{` (e.g. Ready, OutOfDisk).`}</li>\n      <li parentName=\"ul\">{`When you want to `}<strong parentName=\"li\">{`decomission`}</strong>{` a node, you want to do it gracefully.`}<ul parentName=\"li\">\n          <li parentName=\"ul\">{`Drain a node before you shut it down or take it out of the cluster.`}</li>\n        </ul></li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`# drain a node\n$ kubectl drain nodename --grace-period=600\n\n# if node runs pods not managed by a controller but just a single pod\n$ kubectl drain nodename --force\n`}</code></pre>\n    <p><img alt=\"Terminal draining\" src=\"https://res.cloudinary.com/gitgoodclub/image/upload/v1540183374/Screen_Shot_2018-10-22_at_3.42.29_pm.png\" /></p>\n    <h2 {...{\n      \"id\": \"47-high-availability\"\n    }}>{`4.7 High Availability`}</h2>\n    <p>{`If you are running in prod, you willwant all master services in `}<strong parentName=\"p\">{`high availability`}</strong>{`.`}</p>\n    <h3 {...{\n      \"id\": \"setup\"\n    }}>{`Setup`}</h3>\n    <ol>\n      <li parentName=\"ol\"><strong parentName=\"li\">{`Clustering etcd:`}</strong>{` at least run 3 etcd nodes.`}</li>\n      <li parentName=\"ol\"><strong parentName=\"li\">{`Replicated API servers:`}</strong>{` with a a LoadBalancer`}</li>\n      <li parentName=\"ol\">{`Running multiple instances of the `}<strong parentName=\"li\">{`scheduler`}</strong>{` and the `}<strong parentName=\"li\">{`controllers`}</strong>{`.`}<ul parentName=\"li\">\n          <li parentName=\"ul\">{`only one of them will be the leader, the others are on stand-by.`}</li>\n        </ul></li>\n    </ol>\n    <p><img alt=\"HA Overview\" src=\"https://res.cloudinary.com/gitgoodclub/image/upload/v1540183580/Screen_Shot_2018-10-22_at_3.46.05_pm.png\" /></p>\n    <p><img alt=\"HA diagram\" src=\"https://res.cloudinary.com/gitgoodclub/image/upload/v1540183671/Screen_Shot_2018-10-22_at_3.46.52_pm.png\" /></p>\n    <h3 {...{\n      \"id\": \"kops-with-multiple-masters-for-ha\"\n    }}>{`Kops with multiple masters for HA`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`kops create cluster --name=... --zones=eu-west-1a,eu-west-1b,eu-west-1c --master-zones=eu-west-1a,eu-west-1b,eu-west-1c\n`}</code></pre>\n    <p>{`This becomes more complex for volumes since EBS volumes are based within zones.`}</p>\n    <h2 {...{\n      \"id\": \"48-tls-on-elb-using-annotations\"\n    }}>{`4.8 TLS on ELB using Annotations`}</h2>\n    <p>{`You can setup `}<strong parentName=\"p\">{`cloud specific features`}</strong>{` (like TLS termination) on AWS LoadBalancers that you create in Kubernetes using services of type LoadBalancer.`}</p>\n    <p>{`You can do this using `}<strong parentName=\"p\">{`annotations`}</strong>{` to pass some flags for cloud configuration eg aws-load-balancer-ssl-cert, aws-load-balancer-backend-protocol etc.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-yaml\"\n      }}>{`# helloworld-elb-tls-service.yaml\napiVersion: v1\nkind: Service\nmetadata:\n  name: helloworld-service\n  annotations:\n    service.beta.kubernetes.io/aws-load-balancer-ssl-cert: 'arn:aws:acm:region:accountid:certificate/...' #replace this value\n    service.beta.kubernetes.io/aws-load-balancer-backend-protocol: 'http'\n    service.beta.kubernetes.io/aws-load-balancer-ssl-ports: '443'\n    service.beta.kubernetes.io/aws-load-balancer-connection-draining-enabled: 'true'\n    service.beta.kubernetes.io/aws-load-balancer-connection-draining-timeout: '60'\n    service.beta.kubernetes.io/aws-load-balancer-additional-resource-tags: 'environment=dev,app=helloworld'\nspec:\n  ports:\n    - name: http\n      port: 80\n      targetPort: nodejs-port\n      protocol: TCP\n    - name: https\n      port: 443\n      targetPort: nodejs-port\n      protocol: TCP\n  selector:\n    app: helloworld\n  type: LoadBalancer\n`}</code></pre>\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  "]}]}