{"remainingRequest":"/Users/okeeffe_d/Business/Documentation/node_modules/babel-loader/lib/index.js?{\"presets\":[[\"/Users/okeeffe_d/Business/Documentation/node_modules/babel-preset-docz/dist/index.js\",{\"flow\":true,\"typescript\":false,\"parseProps\":true}]],\"plugins\":[[\"/Users/okeeffe_d/Business/Documentation/node_modules/docz-utils/lib/named-asset-import.js\",{\"loaderMap\":{\"svg\":{\"ReactComponent\":\"@svgr/webpack?-prettier,-svgo![path]\"}}}],\"/Users/okeeffe_d/Business/Documentation/node_modules/react-hot-loader/babel.js\"],\"babelrc\":false,\"cacheCompression\":false,\"compact\":false}!/Users/okeeffe_d/Business/Documentation/manual/Testing/Regression-Testing.md","dependencies":[{"path":"/Users/okeeffe_d/Business/Documentation/manual/Testing/Regression-Testing.md","mtime":1548209344476},{"path":"/Users/okeeffe_d/Business/Documentation/node_modules/cache-loader/dist/cjs.js","mtime":1548134640245},{"path":"/Users/okeeffe_d/Business/Documentation/node_modules/babel-loader/lib/index.js","mtime":1548134640227}],"contextDependencies":[],"result":["var _jsxFileName = \"/Users/okeeffe_d/Business/Documentation/manual/Testing/Regression-Testing.md\";\n\n(function () {\n  var enterModule = require('react-hot-loader').enterModule;\n\n  enterModule && enterModule(module);\n})();\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport React from 'react';\nimport { MDXTag } from '@mdx-js/tag';\n\nvar MDXContent =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(MDXContent, _React$Component);\n\n  function MDXContent(props) {\n    var _this;\n\n    _classCallCheck(this, MDXContent);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MDXContent).call(this, props));\n    _this.layout = null;\n    return _this;\n  }\n\n  _createClass(MDXContent, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          components = _this$props.components,\n          props = _objectWithoutProperties(_this$props, [\"components\"]);\n\n      return React.createElement(MDXTag, {\n        name: \"wrapper\",\n        components: components,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14\n        },\n        __self: this\n      }, React.createElement(MDXTag, {\n        name: \"h1\",\n        components: components,\n        props: {\n          \"id\": \"css-regression-testing\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      }, \"CSS Regression Testing\"), React.createElement(MDXTag, {\n        name: \"p\",\n        components: components,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }, \"We can achieve CSS regression testing by using an assertion library in conjuction with Puppeteer and Pixel Diff.\"), React.createElement(MDXTag, {\n        name: \"h2\",\n        components: components,\n        props: {\n          \"id\": \"prequisites\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }, \"Prequisites\"), React.createElement(MDXTag, {\n        name: \"h3\",\n        components: components,\n        props: {\n          \"id\": \"using-yarn\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }, \"Using yarn\"), React.createElement(MDXTag, {\n        name: \"pre\",\n        components: components,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, React.createElement(MDXTag, {\n        name: \"code\",\n        components: components,\n        parentName: \"pre\",\n        props: {\n          \"className\": \"language-bash\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, \"yarn install --dev mocha chai puppeteer pixelmatch pngfs babel-polyfill babel-preset-env babel-plugin-module-resolver\\n\")), React.createElement(MDXTag, {\n        name: \"h3\",\n        components: components,\n        props: {\n          \"id\": \"using-kratos\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, \"Using kratos\"), React.createElement(MDXTag, {\n        name: \"pre\",\n        components: components,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, React.createElement(MDXTag, {\n        name: \"code\",\n        components: components,\n        parentName: \"pre\",\n        props: {\n          \"className\": \"language-bash\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, \"kratos install js-controllers pixeldiff\\nkratos install js-test regression\\nshotgun run\\n\")), React.createElement(MDXTag, {\n        name: \"h3\",\n        components: components,\n        props: {\n          \"id\": \"folder-setup\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, \"Folder setup\"), React.createElement(MDXTag, {\n        name: \"p\",\n        components: components,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, \"Ensure that you have a \", React.createElement(MDXTag, {\n        name: \"inlineCode\",\n        components: components,\n        parentName: \"p\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, \"regression\"), \" folder to store all the images.\"), React.createElement(MDXTag, {\n        name: \"pre\",\n        components: components,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, React.createElement(MDXTag, {\n        name: \"code\",\n        components: components,\n        parentName: \"pre\",\n        props: {\n          \"className\": \"language-bash\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, \"# Example regression layout\\nregression\\n\\u251C\\u2500\\u2500 diff\\n\\u2502\\xA0\\xA0 \\u2514\\u2500\\u2500 test.png\\n\\u251C\\u2500\\u2500 src\\n\\u2502\\xA0\\xA0 \\u2514\\u2500\\u2500 test.png\\n\\u2514\\u2500\\u2500 temp\\n    \\u2514\\u2500\\u2500 test.png\\n\\n3 directories, 3 files\\n\")), React.createElement(MDXTag, {\n        name: \"h2\",\n        components: components,\n        props: {\n          \"id\": \"using-regression-cli\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, \"Using Regression CLI\"), React.createElement(MDXTag, {\n        name: \"h3\",\n        components: components,\n        props: {\n          \"id\": \"preparation\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, \"Preparation\"), React.createElement(MDXTag, {\n        name: \"ol\",\n        components: components,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(MDXTag, {\n        name: \"li\",\n        components: components,\n        parentName: \"ol\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, \"Set the imports for the router file.\"), React.createElement(MDXTag, {\n        name: \"li\",\n        components: components,\n        parentName: \"ol\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, \"Set the dev router.\"), React.createElement(MDXTag, {\n        name: \"li\",\n        components: components,\n        parentName: \"ol\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, \"Set the array in the .puppeteer file.\"), React.createElement(MDXTag, {\n        name: \"li\",\n        components: components,\n        parentName: \"ol\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, \"Ensure the devRouter is being used.\"), React.createElement(MDXTag, {\n        name: \"li\",\n        components: components,\n        parentName: \"ol\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, \"Ensure app is running.\"), React.createElement(MDXTag, {\n        name: \"li\",\n        components: components,\n        parentName: \"ol\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, \"Run source to set the base image.\"), React.createElement(MDXTag, {\n        name: \"li\",\n        components: components,\n        parentName: \"ol\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, \"Run compare to compare source to current.\")), React.createElement(MDXTag, {\n        name: \"h2\",\n        components: components,\n        props: {\n          \"id\": \"application\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, \"Application\"), React.createElement(MDXTag, {\n        name: \"h3\",\n        components: components,\n        props: {\n          \"id\": \"1-create-a-babelrc-file\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, \"1. Create a babelrc file\"), React.createElement(MDXTag, {\n        name: \"pre\",\n        components: components,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(MDXTag, {\n        name: \"code\",\n        components: components,\n        parentName: \"pre\",\n        props: {\n          \"className\": \"language-json\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, \"{\\n  \\\"presets\\\": [\\\"env\\\"],\\n  \\\"plugins\\\": [\\n    [\\n      \\\"module-resolver\\\",\\n      {\\n        \\\"alias\\\": {\\n          \\\"controllers\\\": \\\"./controllers\\\"\\n        }\\n      }\\n    ]\\n  ]\\n}\\n\")), React.createElement(MDXTag, {\n        name: \"h3\",\n        components: components,\n        props: {\n          \"id\": \"2-saving-a-screenshot\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, \"2. Saving a screenshot\"), React.createElement(MDXTag, {\n        name: \"p\",\n        components: components,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, \"This is not the test itself but a simple node script to get the initial base working:\"), React.createElement(MDXTag, {\n        name: \"pre\",\n        components: components,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(MDXTag, {\n        name: \"code\",\n        components: components,\n        parentName: \"pre\",\n        props: {\n          \"className\": \"language-javascript\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, \"const PixelDiff = require('./controllers/pixeldiff');\\nconst puppeteer = require('puppeteer');\\n\\n(async () => {\\n  const browser = await puppeteer.launch();\\n  const page = await browser.newPage();\\n\\n  console.log('Opening browser');\\n  await page.goto('http://localhost:3000');\\n\\n  const el = await page.$('.homeSplashFade');\\n  await el.screenshot({ path: 'regression/src/test.png' });\\n\\n  console.log('Closing browser');\\n  await browser.close();\\n\\n  /*\\n    console.log('Comparing images');\\n    const res = await PixelDiff.diff({imgOnePath: 'test.png', imgTwoPath: 'test2.png', dest: 'dest.png', output: true});\\n    console.log(res);\\n    */\\n})();\\n\")), React.createElement(MDXTag, {\n        name: \"h3\",\n        components: components,\n        props: {\n          \"id\": \"3-writing-the-test-file\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, \"3. Writing the test file\"), React.createElement(MDXTag, {\n        name: \"p\",\n        components: components,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, \"Create your test file. Any example test file looks like the following:\"), React.createElement(MDXTag, {\n        name: \"pre\",\n        components: components,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, React.createElement(MDXTag, {\n        name: \"code\",\n        components: components,\n        parentName: \"pre\",\n        props: {\n          \"className\": \"language-javascript\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, \"/**\\n * Regression tests\\n * @author Dennis O'Keeffe\\n */\\nrequire('babel-polyfill');\\nconst expect = require('chai').expect;\\nconst cwd = process.cwd();\\nconst PixelDiff = require('controllers/pixeldiff');\\nconst puppeteer = require('puppeteer');\\n\\nconsole.log(PixelDiff);\\nconsole.log(cwd);\\n\\nconst screenshot = async (selector, savePath, location = '/') => {\\n  const browser = await puppeteer.launch();\\n  const page = await browser.newPage();\\n\\n  console.log('Opening browser');\\n  await page.goto('http://localhost:3000');\\n\\n  const el = await page.$('#root');\\n  await el.screenshot({ path: savePath });\\n\\n  console.log('Closing browser');\\n  await browser.close();\\n};\\n\\ndescribe('It works functionality', () => {\\n  it('Expects true to be true', () => {\\n    expect(true).to.be.true;\\n  });\\n});\\n\\ndescribe('Image regression testing', () => {\\n  it('has no pixel difference', async () => {\\n    console.log('Comparing images');\\n    await screenshot('.homeSplashFade', cwd + '/regression/temp/test.png');\\n\\n    const res = await PixelDiff.diff({\\n      imgOnePath: cwd + '/regression/src/test.png',\\n      imgTwoPath: cwd + '/regression/temp/test.png',\\n      dest: cwd + '/regression/diff/test.png',\\n      output: true\\n    });\\n    expect(res).to.equal(0);\\n  });\\n});\\n\")), React.createElement(MDXTag, {\n        name: \"h3\",\n        components: components,\n        props: {\n          \"id\": \"4-running-the-test-from-the-cli\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, \"4. Running the test from the CLI\"), React.createElement(MDXTag, {\n        name: \"pre\",\n        components: components,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, React.createElement(MDXTag, {\n        name: \"code\",\n        components: components,\n        parentName: \"pre\",\n        props: {\n          \"className\": \"language-bash\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, \"mocha --compilers js:babel-core/register --timeout 0 ./test/regression/regression.mocha.js\\n\")));\n    }\n  }, {\n    key: \"__reactstandin__regenerateByEval\",\n    // @ts-ignore\n    value: function __reactstandin__regenerateByEval(key, code) {\n      // @ts-ignore\n      this[key] = eval(code);\n    }\n  }]);\n\n  return MDXContent;\n}(React.Component);\n\nexport { MDXContent as default };\n;\n\n(function () {\n  var reactHotLoader = require('react-hot-loader').default;\n\n  var leaveModule = require('react-hot-loader').leaveModule;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(MDXContent, \"MDXContent\", \"/Users/okeeffe_d/Business/Documentation/manual/Testing/Regression-Testing.md\");\n  leaveModule(module);\n})();\n\n;\nMDXContent.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"MDXContent\"\n};",{"version":3,"sources":["/Users/okeeffe_d/Business/Documentation/manual/Testing/Regression-Testing.md"],"names":["React","MDXTag","MDXContent","props","layout","components","Component"],"mappings":"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","sourcesContent":["\n  import React from 'react'\n  import { MDXTag } from '@mdx-js/tag'\n  \n\nexport default class MDXContent extends React.Component {\n  constructor(props) {\n    super(props)\n    this.layout = null\n  }\n  render() {\n    const { components, ...props } = this.props\n\n    return <MDXTag\n             name=\"wrapper\"\n             \n             components={components}><MDXTag name=\"h1\" components={components} props={{\"id\":\"css-regression-testing\"}}>{`CSS Regression Testing`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`We can achieve CSS regression testing by using an assertion library in conjuction with Puppeteer and Pixel Diff.`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"prequisites\"}}>{`Prequisites`}</MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"using-yarn\"}}>{`Using yarn`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-bash\"}}>{`yarn install --dev mocha chai puppeteer pixelmatch pngfs babel-polyfill babel-preset-env babel-plugin-module-resolver\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"using-kratos\"}}>{`Using kratos`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-bash\"}}>{`kratos install js-controllers pixeldiff\nkratos install js-test regression\nshotgun run\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"folder-setup\"}}>{`Folder setup`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Ensure that you have a `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`regression`}</MDXTag>{` folder to store all the images.`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-bash\"}}>{`# Example regression layout\nregression\n├── diff\n│   └── test.png\n├── src\n│   └── test.png\n└── temp\n    └── test.png\n\n3 directories, 3 files\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"using-regression-cli\"}}>{`Using Regression CLI`}</MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"preparation\"}}>{`Preparation`}</MDXTag>\n<MDXTag name=\"ol\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ol\">{`Set the imports for the router file.`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ol\">{`Set the dev router.`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ol\">{`Set the array in the .puppeteer file.`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ol\">{`Ensure the devRouter is being used.`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ol\">{`Ensure app is running.`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ol\">{`Run source to set the base image.`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ol\">{`Run compare to compare source to current.`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"application\"}}>{`Application`}</MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"1-create-a-babelrc-file\"}}>{`1. Create a babelrc file`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-json\"}}>{`{\n  \"presets\": [\"env\"],\n  \"plugins\": [\n    [\n      \"module-resolver\",\n      {\n        \"alias\": {\n          \"controllers\": \"./controllers\"\n        }\n      }\n    ]\n  ]\n}\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"2-saving-a-screenshot\"}}>{`2. Saving a screenshot`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`This is not the test itself but a simple node script to get the initial base working:`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-javascript\"}}>{`const PixelDiff = require('./controllers/pixeldiff');\nconst puppeteer = require('puppeteer');\n\n(async () => {\n  const browser = await puppeteer.launch();\n  const page = await browser.newPage();\n\n  console.log('Opening browser');\n  await page.goto('http://localhost:3000');\n\n  const el = await page.\\$('.homeSplashFade');\n  await el.screenshot({ path: 'regression/src/test.png' });\n\n  console.log('Closing browser');\n  await browser.close();\n\n  /*\n    console.log('Comparing images');\n    const res = await PixelDiff.diff({imgOnePath: 'test.png', imgTwoPath: 'test2.png', dest: 'dest.png', output: true});\n    console.log(res);\n    */\n})();\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"3-writing-the-test-file\"}}>{`3. Writing the test file`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Create your test file. Any example test file looks like the following:`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-javascript\"}}>{`/**\n * Regression tests\n * @author Dennis O'Keeffe\n */\nrequire('babel-polyfill');\nconst expect = require('chai').expect;\nconst cwd = process.cwd();\nconst PixelDiff = require('controllers/pixeldiff');\nconst puppeteer = require('puppeteer');\n\nconsole.log(PixelDiff);\nconsole.log(cwd);\n\nconst screenshot = async (selector, savePath, location = '/') => {\n  const browser = await puppeteer.launch();\n  const page = await browser.newPage();\n\n  console.log('Opening browser');\n  await page.goto('http://localhost:3000');\n\n  const el = await page.\\$('#root');\n  await el.screenshot({ path: savePath });\n\n  console.log('Closing browser');\n  await browser.close();\n};\n\ndescribe('It works functionality', () => {\n  it('Expects true to be true', () => {\n    expect(true).to.be.true;\n  });\n});\n\ndescribe('Image regression testing', () => {\n  it('has no pixel difference', async () => {\n    console.log('Comparing images');\n    await screenshot('.homeSplashFade', cwd + '/regression/temp/test.png');\n\n    const res = await PixelDiff.diff({\n      imgOnePath: cwd + '/regression/src/test.png',\n      imgTwoPath: cwd + '/regression/temp/test.png',\n      dest: cwd + '/regression/diff/test.png',\n      output: true\n    });\n    expect(res).to.equal(0);\n  });\n});\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"4-running-the-test-from-the-cli\"}}>{`4. Running the test from the CLI`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-bash\"}}>{`mocha --compilers js:babel-core/register --timeout 0 ./test/regression/regression.mocha.js\n`}</MDXTag></MDXTag>\n           </MDXTag>\n  }\n}\n  "]}]}