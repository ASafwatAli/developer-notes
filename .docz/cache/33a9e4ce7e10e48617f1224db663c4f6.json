{"remainingRequest":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/docz-core/node_modules/babel-loader/lib/index.js??ref--6-1!/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/@mdx-js/loader/index.js??ref--6-2!/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/source-map-loader/index.js!/Users/dennis.okeeffe/Project-Imposter/developer-notes/manual/Design-Patterns/Composite-Pattern.md","dependencies":[{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/manual/Design-Patterns/Composite-Pattern.md","mtime":1562563032025},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/cache-loader/dist/cjs.js","mtime":1581496618588},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/docz-core/node_modules/babel-loader/lib/index.js","mtime":1578565694890},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/@mdx-js/loader/index.js","mtime":1581496618277},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/source-map-loader/index.js","mtime":1580255490569}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/dennis.okeeffe/Project-Imposter/developer-notes/manual/Design-Patterns/Composite-Pattern.md"],"names":["React","mdx","makeShortcode","name","MDXDefaultShortcode","props","console","warn","layoutProps","MDXLayout","MDXContent","components","isMDXComponent"],"mappings":"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","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"composite-pattern\"\n    }}>{`Composite Pattern`}</h1>\n    <p>{`The `}<inlineCode parentName=\"p\">{`Composite Pattern`}</inlineCode>{` is a Gang Of Four structural Design Pattern that helps solve the following problems:`}</p>\n    <ol>\n      <li parentName=\"ol\">{`A part-whole hierarchy should be represented so that clients can treat part and whole objects uniformly.`}</li>\n      <li parentName=\"ol\">{`A part-whole hierarcy should be represented as tree structure.`}</li>\n    </ol>\n    <p>{`The Composite pattern will describe the following:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`A unified `}<inlineCode parentName=\"li\">{`Component`}</inlineCode>{` interface for both part (Leaf) objects and whole (Composite) objects.`}</li>\n      <li parentName=\"ul\">{`Individual `}<inlineCode parentName=\"li\">{`Leaf`}</inlineCode>{` objects implement the `}<inlineCode parentName=\"li\">{`Component`}</inlineCode>{` interface directly, and `}<inlineCode parentName=\"li\">{`Composite`}</inlineCode>{` objects forward requests to their child components.`}</li>\n    </ul>\n    <p>{`Clients can then work through the `}<inlineCode parentName=\"p\">{`Component`}</inlineCode>{` interface to treat `}<inlineCode parentName=\"p\">{`Leaf`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`Composite`}</inlineCode>{` objects uniformly.`}</p>\n    <p><inlineCode parentName=\"p\">{`Leaf`}</inlineCode>{` objects perform a request directly, and `}<inlineCode parentName=\"p\">{`Composite`}</inlineCode>{` objects forward the request to their child components recursively downwards the tree structure. This makes client classes easier to implement, change, test, and reuse.`}</p>\n    <h2 {...{\n      \"id\": \"example\"\n    }}>{`Example`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-typescript\"\n      }}>{`interface ArmyObject {\n  name: String;\n  operate(): void;\n}\n\nclass Team implements ArmyObject {\n  name: String;\n  private _soldiers: ArmyObject[];\n\n  constructor(name: String) {\n    this.name = name;\n    this._soldiers = [];\n  }\n\n  operate(): void {\n    console.log(\\`Team: \\${this.name} operates\\`);\n    this._soldiers.map((soldier: ArmyObject) => {\n      soldier.operate();\n    });\n  }\n\n  addSoldier(newSoldier: ArmyObject) {\n    const soldiers = this._soldiers.filter((soldier: ArmyObject, index) => {\n      return soldier.name === newSoldier.name;\n    });\n    if (soldiers.length < 1) {\n      console.log(\\`Soldier: \\${newSoldier.name} comes in \\${this.name}\\`);\n      this._soldiers.push(newSoldier);\n    } else {\n      console.log('The soldier is already in the team');\n    }\n  }\n\n  soldierGone(deadSoldier: ArmyObject) {\n    const deads = this._soldiers.map((soldier: ArmyObject, index) => {\n      if (soldier.name === deadSoldier.name) {\n        return index;\n      }\n    });\n    if (deads.length > 0) {\n      console.log(\\`Soldier: \\${deadSoldier.name} died in the fight\\`);\n      this._soldiers.slice(deads[0], 1);\n    } else {\n      console.log('No one dies');\n    }\n  }\n}\n\nclass Soldier implements ArmyObject {\n  name: String;\n\n  constructor(name: String) {\n    this.name = name;\n  }\n\n  operate() {\n    console.log(\\`Soldier: \\${this.name} soldier operates\\`);\n  }\n}\n\n(function main() {\n  const team = new Team('Seal Team 6');\n  const specialSquad = new Team('Seal Team 6 - Special Squad');\n\n  const soldierJoe = new Soldier('Joe');\n  const soldierJames = new Soldier('James');\n  const soldierRoy = new Soldier('Roy');\n  team.addSoldier(soldierJoe);\n  team.addSoldier(soldierJames);\n  team.addSoldier(soldierRoy);\n\n  const specialForceTommy = new Soldier('Tommy');\n\n  specialSquad.addSoldier(specialForceTommy);\n\n  team.operate();\n  specialSquad.operate();\n\n  team.soldierGone(soldierJames);\n})();\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"java-graphic-example\"\n    }}>{`Java Graphic Example`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`import java.util.ArrayList;\n\n/** \"Component\" */\ninterface Graphic {\n    //Prints the graphic.\n    public void print();\n}\n\n/** \"Composite\" */\nclass CompositeGraphic implements Graphic {\n    //Collection of child graphics.\n    private final ArrayList<Graphic> childGraphics = new ArrayList<>();\n\n    //Adds the graphic to the composition.\n    public void add(Graphic graphic) {\n        childGraphics.add(graphic);\n    }\n\n    //Prints the graphic.\n    @Override\n    public void print() {\n        for (Graphic graphic : childGraphics) {\n            graphic.print();  //Delegation\n        }\n    }\n}\n\n/** \"Leaf\" */\nclass Ellipse implements Graphic {\n    //Prints the graphic.\n    @Override\n    public void print() {\n        System.out.println(\"Ellipse\");\n    }\n}\n\n/** Client */\npublic class CompositeDemo {\n    public static void main(String[] args) {\n        //Initialize four ellipses\n        Ellipse ellipse1 = new Ellipse();\n        Ellipse ellipse2 = new Ellipse();\n        Ellipse ellipse3 = new Ellipse();\n        Ellipse ellipse4 = new Ellipse();\n\n        //Creates two composites containing the ellipses\n        CompositeGraphic graphic2 = new CompositeGraphic();\n        graphic2.add(ellipse1);\n        graphic2.add(ellipse2);\n        graphic2.add(ellipse3);\n\n        CompositeGraphic graphic3 = new CompositeGraphic();\n        graphic3.add(ellipse4);\n\n        //Create another graphics that contains two graphics\n        CompositeGraphic graphic1 = new CompositeGraphic();\n        graphic1.add(graphic2);\n        graphic1.add(graphic3);\n\n        //Prints the complete graphic (Four times the string \"Ellipse\").\n        graphic1.print();\n    }\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"resources\"\n    }}>{`Resources`}</h2>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://en.wikipedia.org/wiki/Composite_pattern\"\n        }}>{`Composite Wikipedia`}</a></li>\n    </ul>\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  "]}]}