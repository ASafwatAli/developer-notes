{"remainingRequest":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/docz-core/node_modules/babel-loader/lib/index.js??ref--6-1!/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/@mdx-js/loader/index.js??ref--6-2!/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/source-map-loader/index.js!/Users/dennis.okeeffe/Project-Imposter/developer-notes/manual/Elm/Webmasters-Elm.md","dependencies":[{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/manual/Elm/Webmasters-Elm.md","mtime":1562563032036},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/cache-loader/dist/cjs.js","mtime":1564095360956},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/docz-core/node_modules/babel-loader/lib/index.js","mtime":1562568123838},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/@mdx-js/loader/index.js","mtime":1565139338792},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/source-map-loader/index.js","mtime":1564095361765}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/dennis.okeeffe/Project-Imposter/developer-notes/manual/Elm/Webmasters-Elm.md"],"names":["React","mdx","makeShortcode","name","MDXDefaultShortcode","props","console","warn","layoutProps","MDXLayout","MDXContent","components","isMDXComponent"],"mappings":"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","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"webmasters-elm\"\n    }}>{`Webmasters Elm`}</h1>\n    <h2 {...{\n      \"id\": \"costs\"\n    }}>{`Costs`}</h2>\n    <ol>\n      <li parentName=\"ol\">{`Learning a new language`}</li>\n      <li parentName=\"ol\">{`Smaller ecosystem`}</li>\n      <li parentName=\"ol\">{`Fewer Web APIs have first-class support`}</li>\n    </ol>\n    <h2 {...{\n      \"id\": \"benefits\"\n    }}>{`Benefits`}</h2>\n    <ol>\n      <li parentName=\"ol\">{`Bundle size small`}</li>\n      <li parentName=\"ol\">{`Production Elm in the first week`}</li>\n    </ol>\n    <h2 {...{\n      \"id\": \"elm\"\n    }}>{`Elm`}</h2>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`JS Equivalent`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Elm`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`UI`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`view`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`State`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`model`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Async`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`update`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Utilities`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`core`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Packages`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`elm install`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <h2 {...{\n      \"id\": \"rendering-a-page\"\n    }}>{`Rendering a page`}</h2>\n    <h3 {...{\n      \"id\": \"compiling\"\n    }}>{`Compiling`}</h3>\n    <p>{`Compiles to JS.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`elm make Main.elm --output elm.js\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"user-interface-example\"\n    }}>{`User Interface Example`}</h2>\n    <p>{`Converting this to Elm:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`let pluralize = (singular, plural, quantity) =>\n  quantity === 1 ? singular : plural;\n`}</code></pre>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-elm\"\n      }}>{`pluralize singular plural quantity =\n    if quantity == 1 then\n        singular\n    else\n        plural\n\nmain =\n    text (pluralize \"leaf\" \"leaves\" 1) -- parentheses are to disambiguate\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"part-1---example\"\n    }}>{`Part 1 - Example`}</h2>\n    <p>{`This basic example gives a short look at actually creating a working piece of code.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-elm\"\n      }}>{`module Main exposing (main)\n\nimport Html exposing (..)\nimport Html.Attributes exposing (..)\n\n\nbanner =\n    div [ class \"banner\" ]\n        [ div [ class \"container\" ]\n            [ h1 [] [ text \"conduit\"]\n            , p [] [ text \"A place to share your knowledge.\"]\n            ]\n        ]\n\n\nfeed =\n    div [ class \"feed-toggle\" ] [ text \"(In the future we’ll display a feed of articles here!)\" ]\n\n\nmain =\n    div [ class \"home-page\" ]\n        [ banner\n        , div [ class \"container page\" ]\n            [ div [ class \"row\" ]\n                [ div [ class \"col-md-9\" ] [ feed ]\n                , div [ class \"col-md-3\" ] []\n                ]\n            ]\n        ]\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"the-elm-architecture\"\n    }}>{`The Elm Architecture`}</h2>\n    <p>{`Update, Model, View.`}</p>\n    <p>{`View is function that takes a `}<inlineCode parentName=\"p\">{`model`}</inlineCode>{` as a function.`}</p>\n    <p>{`Note that whatever message you use, you need to be consistent for `}<inlineCode parentName=\"p\">{`Update`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`View`}</inlineCode>{`.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-elm\"\n      }}>{`type alias Msg =\n    { description: String\n    , data: String\n    }\n\nview : Model -> Html Msg\nview model =\n\n--\nupdate : Msg -> Model -> Model\nupdate msg model =\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"type-annotations\"\n    }}>{`Type Annotations`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-elm\"\n      }}>{`username = \"okeeffed\"\n\n-- typed example (Elm uses inference either way)\nusername : String\nusername = \"okeeffed\"\n\n-- alt example\nString.length : String -> Int\n\n-- name list\nnames : List String\nnames = [\"Sam\", \"Bob\", \"Bill\"]\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"functions\"\n    }}>{`Functions`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-elm\"\n      }}>{`pluralize : String -> String -> Int -> String\n\n-- equivocal to\npluralize : String -> (String -> (Int -> String))\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"case-expressions\"\n    }}>{`Case Expressions`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-elm\"\n      }}>{`case model.tab of\n    \"YourFeed\" ->\n        -- show feed\n    \"GlobalFeed\" ->\n        -- show Global Feed\n    _ ->\n        -- show Tag Feed\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"custom-types\"\n    }}>{`Custom Types`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-elm\"\n      }}>{`-- creates completely distinct values\ntype Tab =\n    YourFeed\n    | GlobalFeed\n    | TagFeed\n\nyours : Tab\nyours =\n    YourFeed\n\n-- Turning types into functions\n\ntype Tab =\n    YourFeed\n    | GlobalFeed\n    | TagFeed String\n\n-- in the repl\n> TagFeed \"Happiness\"\nTagFeed \"Happiness\" : Tab\n> TagFeed\n<function> : String -> Tab\n`}</code></pre>\n    <p>{`Using Custom Types with updates:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-elm\"\n      }}>{`-- allows us to pass different data types\ntype Msg\n    = ClickedTag String\n    | ClickedPage Int\n\nupdate msg model =\n    case msg of\n        ClickedTag selectedTag ->\n            -- use tag here\n        ClickedPage page ->\n            -- use page here\n`}</code></pre>\n    <p>{`Summing it all up`}</p>\n    <p>{`Type | In Elm\ncase-expressions | case msg of\nEnumerations | type Bool = True | False\nContainers | type Msg = ClickedPage Int | ...\nVariant Functions | onClick (ClickedPage pageNumber)`}</p>\n    <h2 {...{\n      \"id\": \"maybe-overview\"\n    }}>{`Maybe Overview`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-elm\"\n      }}>{`-- List.head : List elem -> Maybe elem\nfirst users =\n    List.head users\n\n-- example case\ncase first newUsers of\n    Just user ->\n        String.length user\n    Nothing ->\n        0\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"pipelines\"\n    }}>{`Pipelines`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-elm\"\n      }}>{`List.head (List.map (List.reverse (List.filter (\\\\x -> x < 5) [2, 4, 6])) negate)\n\n-- As pipeline\n[2, 4, 6]\n    |> List.filter (\\\\x -> x < 5)\n    |> List.reverse\n    |> List.map negate\n    |> List.head\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"decoding-json\"\n    }}>{`Decoding JSON`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-elm\"\n      }}>{`-- Import to understand custom type\ntype Result okVal errVal\n    = Ok okVal\n    | Err errVal\n\n-- similar to String.toint()\ncase decodeString Json.Decode.int \"42\" of\n    Ok num ->\n        -- Do something with Int\n    Err error ->\n        -- Do something with the error\n\ntype alias User =\n    { id : Int\n    , firstName : String\n    , lastName : String\n    }\n\nuser : Decoder User\nuser =\n    Json.Decode.succeed User\n        |> required \"user_id\" int\n        |> required \"first_name\" string\n        |> required \"last_name\" string\n\n-- Alternatively\nusers : Decoder (List User)\nusers =\n    list user\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"optional-and-nullable\"\n    }}>{`Optional and Nullable`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-elm\"\n      }}>{`type alias User =\n    { id : Int\n    , name : Maybe String\n    , email : String\n    }\n\nuser : Decoder User\nuser =\n    Json.Decode.succeed User\n        |> required \"user_id\" int\n        |> required \"name\" (nullable string)\n        |> required \"email\" string\n`}</code></pre>\n    <p>{`For an example that requires a list:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-elm\"\n      }}>{`Decode.succeed Metadata\n   |> required \"description\" string\n   |> required \"title\" string\n   |> required \"tagList\" (list string)\n   |> required \"favorited\" bool\n   |> required \"favoritesCound\" int\n   |> required \"createdAt\" Timestamp.iso8601Decoder\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"tuples\"\n    }}>{`Tuples`}</h2>\n    <p>{`Serve the same purpose as records but with field `}<inlineCode parentName=\"p\">{`positions`}</inlineCode>{` instead of names.`}</p>\n    <p>{`There is a 3 limit max!`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-elm\"\n      }}>{`x = Tuple.first (5, 7)\n(name, x, y) = (\"foo\", 5, 7)\n\nx = { x = 5, y = 7 }.x\n{ name, x, y } = { name = \"foo\", x = 5, y = 7 }\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"http-and-interacting-with-servers\"\n    }}>{`Http and interacting with servers`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-elm\"\n      }}>{`Http\n`}</code></pre>\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  "]}]}