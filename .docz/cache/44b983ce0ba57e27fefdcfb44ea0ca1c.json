{"remainingRequest":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/docz-core/node_modules/babel-loader/lib/index.js??ref--6-1!/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/@mdx-js/loader/index.js??ref--6-2!/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/source-map-loader/index.js!/Users/dennis.okeeffe/Project-Imposter/developer-notes/manual/Algorithms/Case-Swap.md","dependencies":[{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/manual/Algorithms/Case-Swap.md","mtime":1581054194558},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/cache-loader/dist/cjs.js","mtime":1564095360956},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/docz-core/node_modules/babel-loader/lib/index.js","mtime":1562568123838},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/@mdx-js/loader/index.js","mtime":1565139338792},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/source-map-loader/index.js","mtime":1564095361765}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9vYmplY3RXaXRob3V0UHJvcGVydGllcyBmcm9tIi9Vc2Vycy9kZW5uaXMub2tlZWZmZS9Qcm9qZWN0LUltcG9zdGVyL2RldmVsb3Blci1ub3Rlcy9ub2RlX21vZHVsZXMvYmFiZWwtcHJlc2V0LXJlYWN0LWFwcC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0V2l0aG91dFByb3BlcnRpZXMiOy8qIEBqc3ggbWR4ICovaW1wb3J0IFJlYWN0IGZyb20ncmVhY3QnO2ltcG9ydHttZHh9ZnJvbSdAbWR4LWpzL3JlYWN0JzsvKiBAanN4IG1keCAqL3ZhciBtYWtlU2hvcnRjb2RlPWZ1bmN0aW9uIG1ha2VTaG9ydGNvZGUobmFtZSl7cmV0dXJuIGZ1bmN0aW9uIE1EWERlZmF1bHRTaG9ydGNvZGUocHJvcHMpe2NvbnNvbGUud2FybigiQ29tcG9uZW50ICIrbmFtZSsiIHdhcyBub3QgaW1wb3J0ZWQsIGV4cG9ydGVkLCBvciBwcm92aWRlZCBieSBNRFhQcm92aWRlciBhcyBnbG9iYWwgc2NvcGUiKTtyZXR1cm4gbWR4KCJkaXYiLHByb3BzKTt9O307dmFyIGxheW91dFByb3BzPXt9O3ZhciBNRFhMYXlvdXQ9IndyYXBwZXIiO2V4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIE1EWENvbnRlbnQoX3JlZil7dmFyIGNvbXBvbmVudHM9X3JlZi5jb21wb25lbnRzLHByb3BzPV9vYmplY3RXaXRob3V0UHJvcGVydGllcyhfcmVmLFsiY29tcG9uZW50cyJdKTtyZXR1cm4gbWR4KE1EWExheW91dCxPYmplY3QuYXNzaWduKHt9LGxheW91dFByb3BzLHByb3BzLHtjb21wb25lbnRzOmNvbXBvbmVudHMsbWR4VHlwZToiTURYTGF5b3V0In0pLG1keCgiaDEiLHsiaWQiOiJjYXNlLXN3YXAifSwiQ2FzZSBTd2FwIiksbWR4KCJoMiIseyJpZCI6InJlc291cmNlcyJ9LCJSZXNvdXJjZXMiKSxtZHgoIm9sIixudWxsLG1keCgibGkiLHtwYXJlbnROYW1lOiJvbCJ9LG1keCgiYSIsT2JqZWN0LmFzc2lnbih7cGFyZW50TmFtZToibGkifSx7ImhyZWYiOiJodHRwczovL3d3dy5jb2RlcmJ5dGUuY29tL2VkaXRvci9Td2FwJTIwQ2FzZTpLb3RsaW4ifSksIkNvZGVyQnl0ZSAtIEtvdGxpbiIpKSksbWR4KCJoMiIseyJpZCI6InF1ZXN0aW9uIn0sIlF1ZXN0aW9uIiksbWR4KCJwIixudWxsLCJIYXZlIHRoZSBmdW5jdGlvbiAiLG1keCgiaW5saW5lQ29kZSIse3BhcmVudE5hbWU6InAifSwiU3dhcENhc2Uoc3RyKSIpLCIgdGFrZSB0aGUgc3RyIHBhcmFtZXRlciBhbmQgc3dhcCB0aGUgY2FzZSBvZiBlYWNoIGNoYXJhY3Rlci4gRm9yIGV4YW1wbGU6IGlmIHN0ciBpcyBcIkhlbGxvIFdvcmxkXCIgdGhlIG91dHB1dCBzaG91bGQgYmUgIixtZHgoImlubGluZUNvZGUiLHtwYXJlbnROYW1lOiJwIn0sImhFTExPIHdPUkxEIiksIi4gTGV0IG51bWJlcnMgYW5kIHN5bWJvbHMgc3RheSB0aGUgd2F5IHRoZXkgYXJlLiIpLG1keCgiaDIiLHsiaWQiOiJleGFtcGxlcyJ9LCJFeGFtcGxlcyIpLG1keCgicHJlIixudWxsLG1keCgiY29kZSIsT2JqZWN0LmFzc2lnbih7cGFyZW50TmFtZToicHJlIn0seyJjbGFzc05hbWUiOiJsYW5ndWFnZS1zaGVsbCJ9KSwiSW5wdXQ6IFwiSGVsbG8tTE9MXCJcbk91dHB1dDogaEVMTE8tbG9sXG4iKSksbWR4KCJwcmUiLG51bGwsbWR4KCJjb2RlIixPYmplY3QuYXNzaWduKHtwYXJlbnROYW1lOiJwcmUifSx7ImNsYXNzTmFtZSI6Imxhbmd1YWdlLXNoZWxsIn0pLCJJbnB1dDogXCJTdXAgRFVERSEhP1wiXG5PdXRwdXQ6IHNVUCBkdWRlISE/XG4iKSksbWR4KCJoMiIseyJpZCI6ImFuc3dlciJ9LCJBbnN3ZXIiKSxtZHgoInAiLG51bGwsIkluIEphdmFTY3JpcHQ6IiksbWR4KCJwcmUiLG51bGwsbWR4KCJjb2RlIixPYmplY3QuYXNzaWduKHtwYXJlbnROYW1lOiJwcmUifSx7ImNsYXNzTmFtZSI6Imxhbmd1YWdlLWphdmFzY3JpcHQifSksImZ1bmN0aW9uIFN3YXBDYXNlKHN0cikge1xuICBsZXQgcmV0U3RyID0gJyc7XG4gIGZvciAobGV0IGkgPSAwOyBpIDwgc3RyLmxlbmd0aDsgaSsrKSB7XG4gICAgaWYgKC9bYS16XS8udGVzdChzdHJbaV0pKSB7XG4gICAgICByZXRTdHIgKz0gc3RyW2ldLnRvVXBwZXJDYXNlKCk7XG4gICAgfSBlbHNlIGlmICgvW0EtWl0vLnRlc3Qoc3RyW2ldKSkge1xuICAgICAgcmV0U3RyICs9IHN0cltpXS50b0xvd2VyQ2FzZSgpO1xuICAgIH0gZWxzZSB7XG4gICAgICByZXRTdHIgKz0gc3RyW2ldO1xuICAgIH1cbiAgfVxuICAvLyBjb2RlIGdvZXMgaGVyZVxuICByZXR1cm4gcmV0U3RyO1xufVxuIikpLG1keCgicCIsbnVsbCwiSW4gS290bGluOiIpLG1keCgicHJlIixudWxsLG1keCgiY29kZSIsT2JqZWN0LmFzc2lnbih7cGFyZW50TmFtZToicHJlIn0seyJjbGFzc05hbWUiOiJsYW5ndWFnZS1rb3RsaW4ifSksImZ1biBTd2FwQ2FzZShzdHI6IFN0cmluZyk6IFN0cmluZyB7XG4gIHZhbCByZWdleExvd2VyID0gUmVnZXgocGF0dGVybiA9IFwiW2Etel1cIilcbiAgdmFsIHJlZ2V4VXBwZXIgPSBSZWdleChwYXR0ZXJuID0gXCJbQS1aXVwiKVxuICB2YWwgbGlzdCA9IG11dGFibGVMaXN0T2Y8U3RyaW5nPigpXG5cbiAgZm9yIChpIGluIHN0ci5pbmRpY2VzKSB7XG4gICAgaWYgKHJlZ2V4TG93ZXIuY29udGFpbnNNYXRjaEluKHN0cltpXS50b1N0cmluZygpKSkge1xuICAgICAgbGlzdC5hZGQoc3RyW2ldLnRvU3RyaW5nKCkudG9VcHBlckNhc2UoKSlcbiAgICB9IGVsc2UgaWYgKHJlZ2V4VXBwZXIuY29udGFpbnNNYXRjaEluKHN0cltpXS50b1N0cmluZygpKSkge1xuICAgICAgbGlzdC5hZGQoc3RyW2ldLnRvU3RyaW5nKCkudG9Mb3dlckNhc2UoKSlcbiAgICB9IGVsc2Uge1xuICAgICAgbGlzdC5hZGQoc3RyW2ldLnRvU3RyaW5nKCkpXG4gICAgfVxuICB9XG4gIC8vIGNvZGUgZ29lcyBoZXJlXG4gIHJldHVybiBsaXN0LmpvaW5Ub1N0cmluZyhcIlwiKS50cmltKCk7XG59XG5cbmZ1biBtYWluKGFyZ3M6IEFycmF5PFN0cmluZz4pIHtcbiAgcHJpbnRsbihTd2FwQ2FzZShyZWFkTGluZSgpKSlcbn1cbiIpKSk7fWlmKHR5cGVvZiBNRFhDb250ZW50IT09J3VuZGVmaW5lZCcmJk1EWENvbnRlbnQmJk1EWENvbnRlbnQ9PT1PYmplY3QoTURYQ29udGVudCkmJk9iamVjdC5pc0V4dGVuc2libGUoTURYQ29udGVudCkpe09iamVjdC5kZWZpbmVQcm9wZXJ0eShNRFhDb250ZW50LCdfX2ZpbGVtZXRhJyx7ZW51bWVyYWJsZTp0cnVlLGNvbmZpZ3VyYWJsZTp0cnVlLHZhbHVlOntuYW1lOiJNRFhDb250ZW50IixmaWxlbmFtZToibWFudWFsL0FsZ29yaXRobXMvQ2FzZS1Td2FwLm1kIn19KTt9TURYQ29udGVudC5pc01EWENvbXBvbmVudD10cnVlOw=="},{"version":3,"sources":["/Users/dennis.okeeffe/Project-Imposter/developer-notes/manual/Algorithms/Case-Swap.md"],"names":["React","mdx","makeShortcode","name","MDXDefaultShortcode","props","console","warn","layoutProps","MDXLayout","MDXContent","components","isMDXComponent"],"mappings":"iMAAA,cACE,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,GAAT,KAAoB,eAApB,CACA,cAGF,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAAAC,IAAI,QAAI,SAASC,CAAAA,mBAAT,CAA6BC,KAA7B,CAAoC,CAChEC,OAAO,CAACC,IAAR,CAAa,aAAeJ,IAAf,CAAsB,yEAAnC,EACA,MAAO,WAASE,KAAT,CAAP,CACD,CAHyB,EAA1B,CAKA,GAAMG,CAAAA,WAAW,CAAG,EAApB,CAGA,GAAMC,CAAAA,SAAS,CAAG,SAAlB,CACA,cAAe,SAASC,CAAAA,UAAT,MAGZ,IAFDC,CAAAA,UAEC,MAFDA,UAEC,CADEN,KACF,+CACD,MAAO,KAAC,SAAD,kBAAeG,WAAf,CAAgCH,KAAhC,EAAuC,UAAU,CAAEM,UAAnD,CAA+D,OAAO,CAAC,WAAvE,GACL,SAAQ,CACN,KAAM,WADA,CAAR,aADK,CAIL,SAAQ,CACN,KAAM,WADA,CAAR,aAJK,CAOL,cACE,UAAI,UAAU,CAAC,IAAf,EAAoB,uBAAG,UAAU,CAAC,IAAd,EAAuB,CACvC,OAAQ,qDAD+B,CAAvB,uBAApB,CADF,CAPK,CAYL,SAAQ,CACN,KAAM,UADA,CAAR,YAZK,CAeL,kCAAyB,kBAAY,UAAU,CAAC,GAAvB,kBAAzB,6HAA6M,kBAAY,UAAU,CAAC,GAAvB,gBAA7M,oDAfK,CAgBL,SAAQ,CACN,KAAM,UADA,CAAR,YAhBK,CAmBL,eAAK,0BAAM,UAAU,CAAC,KAAjB,EAA2B,CAC5B,YAAa,gBADe,CAA3B,8CAAL,CAnBK,CAwBL,eAAK,0BAAM,UAAU,CAAC,KAAjB,EAA2B,CAC5B,YAAa,gBADe,CAA3B,kDAAL,CAxBK,CA6BL,SAAQ,CACN,KAAM,QADA,CAAR,UA7BK,CAgCL,8BAhCK,CAiCL,eAAK,0BAAM,UAAU,CAAC,KAAjB,EAA2B,CAC5B,YAAa,qBADe,CAA3B,iVAAL,CAjCK,CAkDL,0BAlDK,CAmDL,eAAK,0BAAM,UAAU,CAAC,KAAjB,EAA2B,CAC5B,YAAa,iBADe,CAA3B,+mBAAL,CAnDK,CAAP,CA4ED,C,0QAEDD,UAAU,CAACE,cAAX,CAA4B,IAA5B","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"case-swap\"\n    }}>{`Case Swap`}</h1>\n    <h2 {...{\n      \"id\": \"resources\"\n    }}>{`Resources`}</h2>\n    <ol>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"https://www.coderbyte.com/editor/Swap%20Case:Kotlin\"\n        }}>{`CoderByte - Kotlin`}</a></li>\n    </ol>\n    <h2 {...{\n      \"id\": \"question\"\n    }}>{`Question`}</h2>\n    <p>{`Have the function `}<inlineCode parentName=\"p\">{`SwapCase(str)`}</inlineCode>{` take the str parameter and swap the case of each character. For example: if str is \"Hello World\" the output should be `}<inlineCode parentName=\"p\">{`hELLO wORLD`}</inlineCode>{`. Let numbers and symbols stay the way they are.`}</p>\n    <h2 {...{\n      \"id\": \"examples\"\n    }}>{`Examples`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`Input: \"Hello-LOL\"\nOutput: hELLO-lol\n`}</code></pre>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`Input: \"Sup DUDE!!?\"\nOutput: sUP dude!!?\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"answer\"\n    }}>{`Answer`}</h2>\n    <p>{`In JavaScript:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`function SwapCase(str) {\n  let retStr = '';\n  for (let i = 0; i < str.length; i++) {\n    if (/[a-z]/.test(str[i])) {\n      retStr += str[i].toUpperCase();\n    } else if (/[A-Z]/.test(str[i])) {\n      retStr += str[i].toLowerCase();\n    } else {\n      retStr += str[i];\n    }\n  }\n  // code goes here\n  return retStr;\n}\n`}</code></pre>\n    <p>{`In Kotlin:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-kotlin\"\n      }}>{`fun SwapCase(str: String): String {\n  val regexLower = Regex(pattern = \"[a-z]\")\n  val regexUpper = Regex(pattern = \"[A-Z]\")\n  val list = mutableListOf<String>()\n\n  for (i in str.indices) {\n    if (regexLower.containsMatchIn(str[i].toString())) {\n      list.add(str[i].toString().toUpperCase())\n    } else if (regexUpper.containsMatchIn(str[i].toString())) {\n      list.add(str[i].toString().toLowerCase())\n    } else {\n      list.add(str[i].toString())\n    }\n  }\n  // code goes here\n  return list.joinToString(\"\").trim();\n}\n\nfun main(args: Array<String>) {\n  println(SwapCase(readLine()))\n}\n`}</code></pre>\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  "]}]}