{"remainingRequest":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/docz-core/node_modules/babel-loader/lib/index.js??ref--6-1!/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/@mdx-js/loader/index.js??ref--6-2!/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/source-map-loader/index.js!/Users/dennis.okeeffe/Project-Imposter/developer-notes/manual/Kubernetes/AWS-EKS-Starter.md","dependencies":[{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/manual/Kubernetes/AWS-EKS-Starter.md","mtime":1562563032050},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/cache-loader/dist/cjs.js","mtime":1581496618588},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/docz-core/node_modules/babel-loader/lib/index.js","mtime":1578565694890},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/@mdx-js/loader/index.js","mtime":1581496618277},{"path":"/Users/dennis.okeeffe/Project-Imposter/developer-notes/node_modules/source-map-loader/index.js","mtime":1580255490569}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/dennis.okeeffe/Project-Imposter/developer-notes/manual/Kubernetes/AWS-EKS-Starter.md"],"names":["React","mdx","makeShortcode","name","MDXDefaultShortcode","props","console","warn","layoutProps","MDXLayout","MDXContent","components","isMDXComponent"],"mappings":"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","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"aws-eks-starter\"\n    }}>{`AWS EKS Starter`}</h1>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"#aws-eks-starter\"\n        }}>{`AWS EKS Starter`}</a><ul parentName=\"li\">\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#eks-setup-process\"\n            }}>{`EKS Setup Process`}</a><ul parentName=\"li\">\n              <li parentName=\"ul\"><a parentName=\"li\" {...{\n                  \"href\": \"#eks-use-cases\"\n                }}>{`EKS Use cases`}</a></li>\n              <li parentName=\"ul\"><a parentName=\"li\" {...{\n                  \"href\": \"#the-course\"\n                }}>{`The Course`}</a></li>\n              <li parentName=\"ul\"><a parentName=\"li\" {...{\n                  \"href\": \"#eks-architecture\"\n                }}>{`EKS Architecture`}</a></li>\n              <li parentName=\"ul\"><a parentName=\"li\" {...{\n                  \"href\": \"#basic-eks-setup\"\n                }}>{`Basic EKS Setup`}</a></li>\n            </ul></li>\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#setup-for-the-eks-cluster\"\n            }}>{`Setup for the EKS cluster`}</a></li>\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#iam-user-roles\"\n            }}>{`IAM User roles`}</a><ul parentName=\"li\">\n              <li parentName=\"ul\"><a parentName=\"li\" {...{\n                  \"href\": \"#iam-user-and-permissions\"\n                }}>{`IAM user and permissions`}</a></li>\n              <li parentName=\"ul\"><a parentName=\"li\" {...{\n                  \"href\": \"#create-iam-role\"\n                }}>{`Create IAM role`}</a></li>\n              <li parentName=\"ul\"><a parentName=\"li\" {...{\n                  \"href\": \"#create-keypair\"\n                }}>{`Create keypair`}</a></li>\n              <li parentName=\"ul\"><a parentName=\"li\" {...{\n                  \"href\": \"#create-api-access-key-secret\"\n                }}>{`Create API Access key/-secret`}</a></li>\n            </ul></li>\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#create-base-aws-infrastructure\"\n            }}>{`Create base AWS infrastructure`}</a><ul parentName=\"li\">\n              <li parentName=\"ul\"><a parentName=\"li\" {...{\n                  \"href\": \"#create-vpc-subnets-and-security-group-for-your-k8s-cluster\"\n                }}>{`Create VPC, subnets and security group for your K8s cluster`}</a><ul parentName=\"li\">\n                  <li parentName=\"ul\"><a parentName=\"li\" {...{\n                      \"href\": \"#working-on-the-console\"\n                    }}>{`Working on the console`}</a></li>\n                  <li parentName=\"ul\"><a parentName=\"li\" {...{\n                      \"href\": \"#setting-stack-name\"\n                    }}>{`Setting stack name`}</a></li>\n                  <li parentName=\"ul\"><a parentName=\"li\" {...{\n                      \"href\": \"#continuing-on\"\n                    }}>{`Continuing on`}</a></li>\n                </ul></li>\n            </ul></li>\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#creating-the-eks-control-plane\"\n            }}>{`Creating the EKS control plane`}</a><ul parentName=\"li\">\n              <li parentName=\"ul\"><a parentName=\"li\" {...{\n                  \"href\": \"#via-cli\"\n                }}>{`Via CLI`}</a></li>\n              <li parentName=\"ul\"><a parentName=\"li\" {...{\n                  \"href\": \"#via-gui\"\n                }}>{`Via GUI`}</a></li>\n            </ul></li>\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#setting-up-local-kubectl-for-eks\"\n            }}>{`Setting up local kubectl for EKS`}</a><ul parentName=\"li\">\n              <li parentName=\"ul\"><a parentName=\"li\" {...{\n                  \"href\": \"#recap-on-the-kubectl-setup\"\n                }}>{`Recap on the kubectl setup`}</a></li>\n              <li parentName=\"ul\"><a parentName=\"li\" {...{\n                  \"href\": \"#install-kubectl--aws-iamauthenticator\"\n                }}>{`Install kubectl & aws-iam_authenticator`}</a></li>\n              <li parentName=\"ul\"><a parentName=\"li\" {...{\n                  \"href\": \"#configure-kubectl\"\n                }}>{`Configure `}<em parentName=\"a\">{`kubectl`}</em></a></li>\n            </ul></li>\n        </ul></li>\n    </ul>\n    <h2 {...{\n      \"id\": \"eks-setup-process\"\n    }}>{`EKS Setup Process`}</h2>\n    <p>{`EKS will setup and manage our Kubernetes clusters:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`This will create K8s master in high availability`}</li>\n      <li parentName=\"ul\">{`Etcd in high availability`}</li>\n      <li parentName=\"ul\">{`IAM plugin setup`}</li>\n      <li parentName=\"ul\">{`CA setup (for TLS)`}</li>\n      <li parentName=\"ul\">{`Auto scaling done`}</li>\n      <li parentName=\"ul\">{`Load Balancers done (NLB and ELB)`}</li>\n    </ul>\n    <p>{`In short, you will get an EKS control plane and you'll just need to setup the worker nodes in the availability zones.`}</p>\n    <p>{`The from the laptop, you can use kubectl to talk to AWS.`}</p>\n    <p>{`There is also deep integration with AWS:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`API calls can be audited in CloudTrail`}</li>\n      <li parentName=\"ul\">{`Authetication through IAM while authorization through RBAC.`}</li>\n      <li parentName=\"ul\">{`CloudFormation to manage clusteres`}</li>\n      <li parentName=\"ul\">{`Customize AMI`}</li>\n      <li parentName=\"ul\">{`Load Balancers, EBS Volumes, EFS, etc...`}</li>\n      <li parentName=\"ul\">{`Container registies on ECR`}</li>\n      <li parentName=\"ul\">{`Networking is handled with a per-pod IP address with attached ENI`}</li>\n    </ul>\n    <h3 {...{\n      \"id\": \"eks-use-cases\"\n    }}>{`EKS Use cases`}</h3>\n    <ul>\n      <li parentName=\"ul\">{`Can create a cluster easily`}</li>\n      <li parentName=\"ul\">{`Microservices in containers`}</li>\n      <li parentName=\"ul\">{`Paas/Website`}</li>\n      <li parentName=\"ul\">{`Migrate from on-prem to cloud`}</li>\n      <li parentName=\"ul\">{`ML cluster (support for GPU instances)`}</li>\n    </ul>\n    <h3 {...{\n      \"id\": \"the-course\"\n    }}>{`The Course`}</h3>\n    <ul>\n      <li parentName=\"ul\">{`Deploy EKS cluster using CF`}</li>\n      <li parentName=\"ul\">{`Scale Kubernetes cluster`}</li>\n      <li parentName=\"ul\">{`Setup `}<inlineCode parentName=\"li\">{`kubectl`}</inlineCode>{` properly`}</li>\n      <li parentName=\"ul\">{`Learn how EKS works under the hood`}</li>\n      <li parentName=\"ul\">{`Setup admin using Kubernetes dashboard`}</li>\n      <li parentName=\"ul\">{`Deploy stateless app on EKS and expose it with public ELB`}</li>\n      <li parentName=\"ul\">{`Deploy stateful app on EKS and bind it with EBS volumes`}</li>\n      <li parentName=\"ul\">{`Deploy stateful app (like WordPress) with EFS`}</li>\n      <li parentName=\"ul\">{`Manage Kubernetes cluster using AWS CLI and `}<inlineCode parentName=\"li\">{`eksctl`}</inlineCode>{` CLI`}</li>\n    </ul>\n    <h3 {...{\n      \"id\": \"eks-architecture\"\n    }}>{`EKS Architecture`}</h3>\n    <ul>\n      <li parentName=\"ul\">{`3 AZs`}</li>\n      <li parentName=\"ul\">{`Master node in each`}</li>\n      <li parentName=\"ul\">{`Etcd in each`}</li>\n      <li parentName=\"ul\">{`K8s worker nodes`}</li>\n    </ul>\n    <p><img alt=\"EKS Architecture\" src=\"https://res.cloudinary.com/gitgoodclub/image/upload/v1548135634/eks-course/Screen_Shot_2019-01-22_at_4.39.24_pm.png\" /></p>\n    <p>{`EKS itself will manage all the load and master nodes and etcd as needed.`}</p>\n    <h3 {...{\n      \"id\": \"basic-eks-setup\"\n    }}>{`Basic EKS Setup`}</h3>\n    <p><img alt=\"Basic setup\" src=\"https://res.cloudinary.com/gitgoodclub/image/upload/v1548135634/eks-course/Screen_Shot_2019-01-22_at_4.39.24_pm.png\" /></p>\n    <h2 {...{\n      \"id\": \"setup-for-the-eks-cluster\"\n    }}>{`Setup for the EKS cluster`}</h2>\n    <h2 {...{\n      \"id\": \"iam-user-roles\"\n    }}>{`IAM User roles`}</h2>\n    <h4 {...{\n      \"id\": \"iam-user-and-permissions\"\n    }}>{`IAM user and permissions`}</h4>\n    <p>{`To be able to run through this course your IAM user needs to have certain privileges to e.g. create all the required resources and objects. According AWS Best Practices you should `}<em parentName=\"p\">{`never`}</em>{` use your root account for working with AWS services. E.g. to demonstrate the Hands-On lectures, the user `}<em parentName=\"p\">{`eks-course`}</em>{` has been used.`}</p>\n    <p>{`There are 2 attempts to follow:`}</p>\n    <ol>\n      <li parentName=\"ol\">{`Provide admin access\nlogin with an admin of your AWS account\ngo to \"IAM\" => \"users\" => click on your user => \"Permissions\" => \"Add permission\" => then search for `}<em parentName=\"li\">{`AdministratorAccess`}</em>{` and attach this policy\nBasically your user just requires `}<em parentName=\"li\">{`one`}</em>{` policy being attached`}</li>\n    </ol>\n    <ul>\n      <li parentName=\"ul\">{`AdministratorAccess`}</li>\n    </ul>\n    <ol {...{\n      \"start\": 2\n    }}>\n      <li parentName=\"ol\">{`Provide a dedicated list of privileges/policies\nto cover all the required privileges, first you have to create additional policies\nEKS-Admin-policy:`}</li>\n    </ol>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": [\"eks:*\"],\n      \"Resource\": \"*\"\n    }\n  ]\n}\n`}</code></pre>\n    <p>{`CloudFormation-Admin-policy:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": [\"cloudformation:*\"],\n      \"Resource\": \"*\"\n    }\n  ]\n}\n`}</code></pre>\n    <p>{`Finally, assign the following policies to your IAM user you are going to use throughout the course:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`AmazonEC2FullAccess`}</li>\n      <li parentName=\"ul\">{`IAMFullAccess`}</li>\n      <li parentName=\"ul\">{`AmazonVPCFullAccess`}</li>\n      <li parentName=\"ul\">{`CloudFormation-Admin-policy`}</li>\n      <li parentName=\"ul\">{`EKS-Admin-policy\nwhere the last 2 policies are the ones you created above`}</li>\n    </ul>\n    <h3 {...{\n      \"id\": \"create-iam-role\"\n    }}>{`Create IAM role`}</h3>\n    <ul>\n      <li parentName=\"ul\">{`open `}<inlineCode parentName=\"li\">{`https://console.aws.amazon.com/iam/`}</inlineCode>{` and choose `}<em parentName=\"li\">{`Roles`}</em>{` => `}<em parentName=\"li\">{`create role`}</em></li>\n      <li parentName=\"ul\">{`choose `}<em parentName=\"li\">{`EKS`}</em>{` service followed by `}<em parentName=\"li\">{`Allows Amazon EKS to manage your clusters on your behalf`}</em></li>\n      <li parentName=\"ul\">{`choose `}<em parentName=\"li\">{`Next: Permissions`}</em></li>\n      <li parentName=\"ul\">{`click `}<em parentName=\"li\">{`Next: Review`}</em></li>\n      <li parentName=\"ul\">{`enter a `}<em parentName=\"li\">{`unique`}</em>{` Role name, `}<em parentName=\"li\">{`EKS-course-role`}</em>{` and click `}<em parentName=\"li\"><em parentName=\"em\">{`Create Role`}</em></em></li>\n    </ul>\n    <h3 {...{\n      \"id\": \"create-keypair\"\n    }}>{`Create keypair`}</h3>\n    <ul>\n      <li parentName=\"ul\">{`open EC2 dashboard `}<inlineCode parentName=\"li\">{`https://console.aws.amazon.com/ec2`}</inlineCode></li>\n      <li parentName=\"ul\">{`click `}<em parentName=\"li\">{`KeyPairs`}</em>{` in left navigation bar under section \"Network&Security\"`}</li>\n      <li parentName=\"ul\">{`click `}<em parentName=\"li\">{`Create Key Pair`}</em></li>\n      <li parentName=\"ul\">{`provide name for keypair, `}<em parentName=\"li\">{`eks-course`}</em>{` and click `}<em parentName=\"li\"><em parentName=\"em\">{`Create`}</em></em></li>\n      <li parentName=\"ul\">{`!! the keypair will be downloaded immediately => file `}<em parentName=\"li\">{`eks-course.pem`}</em>{` !!`}</li>\n    </ul>\n    <h3 {...{\n      \"id\": \"create-api-access-key-secret\"\n    }}>{`Create API Access key/-secret`}</h3>\n    <ul>\n      <li parentName=\"ul\">{`create key+secret via AWS console`}</li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`AWS-console => IAM => Users => <your user> => tab _Security credentials_ => button _Create access key_\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"create-base-aws-infrastructure\"\n    }}>{`Create base AWS infrastructure`}</h2>\n    <h3 {...{\n      \"id\": \"create-vpc-subnets-and-security-group-for-your-k8s-cluster\"\n    }}>{`Create VPC, subnets and security group for your K8s cluster`}</h3>\n    <p><img alt=\"AWS EKS Cluster setup\" src=\"https://res.cloudinary.com/gitgoodclub/image/upload/v1548137228/eks-course/Screen_Shot_2019-01-22_at_5.06.52_pm.png\" /></p>\n    <p>{`To create a VPC there is a prepared CloudFormation template to use. It creates a VPC including 3 Subnets\nAt the moment EKS is only available in the following 2 regions:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`US West (Oregon), `}<em parentName=\"li\">{`us-west-2`}</em></li>\n      <li parentName=\"ul\">{`US East (N.Virginia), `}<em parentName=\"li\">{`us-east-1`}</em></li>\n    </ul>\n    <h4 {...{\n      \"id\": \"working-on-the-console\"\n    }}>{`Working on the console`}</h4>\n    <ul>\n      <li parentName=\"ul\">{`open `}<inlineCode parentName=\"li\">{`https://console.aws.amazon.com/cloudformation/`}</inlineCode>{` and select one of the above mentioned regions`}</li>\n      <li parentName=\"ul\">{`click `}<em parentName=\"li\">{`Create Stack`}</em></li>\n      <li parentName=\"ul\">{`select `}<em parentName=\"li\">{`Upload a template to Amazon S3`}</em>{` , click `}<em parentName=\"li\"><em parentName=\"em\">{`Upload file`}</em></em>{` and select `}<inlineCode parentName=\"li\">{`eks-course-vpc.yaml`}</inlineCode></li>\n      <li parentName=\"ul\">{`click `}<em parentName=\"li\">{`Next`}</em></li>\n      <li parentName=\"ul\">{`provide data in the `}<em parentName=\"li\">{`Specify Details`}</em>{` overview:`}</li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-yaml\"\n      }}>{`# eks-course-vpc.yaml\n---\nAWSTemplateFormatVersion: '2010-09-09'\nDescription: 'AWS EKS course'\n\nParameters:\n  VpcBlock:\n    Type: String\n    Default: 192.168.0.0/16\n    Description: CIDR range for VPC\n\n  Subnet01Block:\n    Type: String\n    Default: 192.168.64.0/18\n    Description: CIDR for first subnet within VPC\n\n  Subnet02Block:\n    Type: String\n    Default: 192.168.128.0/18\n    Description: CIDR for second subnet within VPC\n\n  Subnet03Block:\n    Type: String\n    Default: 192.168.192.0/18\n    Description: CIDR for third subnet within VPC\n\nResources:\n  VPC:\n    Type: AWS::EC2::VPC\n    Properties:\n      CidrBlock: !Ref VpcBlock\n      EnableDnsSupport: true\n      EnableDnsHostnames: true\n      Tags:\n        - Key: Name\n          Value: !Sub '\\${AWS::StackName}-VPC'\n\n  InternetGateway:\n    Type: 'AWS::EC2::InternetGateway'\n\n  VPCGatewayAttachment:\n    Type: 'AWS::EC2::VPCGatewayAttachment'\n    Properties:\n      InternetGatewayId: !Ref InternetGateway\n      VpcId: !Ref VPC\n\n  RouteTable:\n    Type: AWS::EC2::RouteTable\n    Properties:\n      VpcId: !Ref VPC\n      Tags:\n        - Key: Name\n          Value: Public Subnets\n        - Key: Network\n          Value: Public\n\n  Route:\n    DependsOn: VPCGatewayAttachment\n    Type: AWS::EC2::Route\n    Properties:\n      RouteTableId: !Ref RouteTable\n      DestinationCidrBlock: 0.0.0.0/0\n      GatewayId: !Ref InternetGateway\n\n  Subnet01:\n    Type: AWS::EC2::Subnet\n    Properties:\n      AvailabilityZone:\n        Fn::Select:\n          - '0'\n          - Fn::GetAZs:\n              Ref: AWS::Region\n      CidrBlock:\n        Ref: Subnet01Block\n      VpcId:\n        Ref: VPC\n      Tags:\n        - Key: Name\n          Value: !Sub '\\${AWS::StackName}-Subnet1'\n\n  Subnet02:\n    Type: AWS::EC2::Subnet\n    Properties:\n      AvailabilityZone:\n        Fn::Select:\n          - '1'\n          - Fn::GetAZs:\n              Ref: AWS::Region\n      CidrBlock:\n        Ref: Subnet02Block\n      VpcId:\n        Ref: VPC\n      Tags:\n        - Key: Name\n          Value: !Sub '\\${AWS::StackName}-Subnet2'\n\n  Subnet03:\n    Type: AWS::EC2::Subnet\n\n    Properties:\n      AvailabilityZone:\n        Fn::Select:\n          - '2'\n          - Fn::GetAZs:\n              Ref: AWS::Region\n      CidrBlock:\n        Ref: Subnet03Block\n      VpcId:\n        Ref: VPC\n      Tags:\n        - Key: Name\n          Value: !Sub '\\${AWS::StackName}-Subnet3'\n\n  Subnet01RouteTableAssociation:\n    Type: AWS::EC2::SubnetRouteTableAssociation\n    Properties:\n      SubnetId: !Ref Subnet01\n      RouteTableId: !Ref RouteTable\n\n  Subnet02RouteTableAssociation:\n    Type: AWS::EC2::SubnetRouteTableAssociation\n    Properties:\n      SubnetId: !Ref Subnet02\n      RouteTableId: !Ref RouteTable\n\n  Subnet03RouteTableAssociation:\n    Type: AWS::EC2::SubnetRouteTableAssociation\n    Properties:\n      SubnetId: !Ref Subnet03\n      RouteTableId: !Ref RouteTable\n\n  ControlPlaneSecurityGroup:\n    Type: AWS::EC2::SecurityGroup\n    Properties:\n      GroupDescription: Cluster communication with worker nodes\n      VpcId: !Ref VPC\n\nOutputs:\n  SubnetIds:\n    Description: Your subnets\n    Value: !Join [',', [!Ref Subnet01, !Ref Subnet02, !Ref Subnet03]]\n\n  SecurityGroups:\n    Description: SecGroup for communication betw controlplane and workernodes\n    Value: !Join [',', [!Ref ControlPlaneSecurityGroup]]\n\n  VpcId:\n    Description: The VPC Id\n    Value: !Ref VPC\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"setting-stack-name\"\n    }}>{`Setting stack name`}</h4>\n    <ul>\n      <li parentName=\"ul\">{`Stack name : set stack name `}<em parentName=\"li\">{`EKS-course-stack`}</em></li>\n      <li parentName=\"ul\">{`VPC Block : set CIDR range for your VPC, or leave the default from the CloudFormation template`}</li>\n      <li parentName=\"ul\">{`Subnet01Block : set CIDR range for this subnet, or leave the default from the CloudFormation template`}</li>\n      <li parentName=\"ul\">{`Subnet02Block : set CIDR range for this subnet, or leave the default from the CloudFormation template`}</li>\n      <li parentName=\"ul\">{`Subnet03Block : set CIDR range for this subnet, or leave the default from the CloudFormation template`}</li>\n    </ul>\n    <h4 {...{\n      \"id\": \"continuing-on\"\n    }}>{`Continuing on`}</h4>\n    <ul>\n      <li parentName=\"ul\">{`Click `}<em parentName=\"li\">{`Next`}</em></li>\n      <li parentName=\"ul\">{`Click `}<em parentName=\"li\">{`Create`}</em></li>\n      <li parentName=\"ul\">{`Observe the progress of the stack creation. After the stack is created, open tab `}<em parentName=\"li\">{`Outputs`}</em>{` and record the `}<em parentName=\"li\">{`VPC-ID`}</em>{`, `}<em parentName=\"li\">{`SecurityGroup`}</em>{` and the `}<em parentName=\"li\">{`Subnet_IDs`}</em>{` for all 3 subnets. You'll need those at worker launch time.`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"creating-the-eks-control-plane\"\n    }}>{`Creating the EKS control plane`}</h2>\n    <h3 {...{\n      \"id\": \"via-cli\"\n    }}>{`Via CLI`}</h3>\n    <pre><code parentName=\"pre\" {...{}}>{`aws eks create-cluster --name prod --role-arn arn:aws:iam::012345678910:role/eks-service-role-AWSServiceRoleForAmazonEKS-J7ONKE3BQ4PI --resources-vpc-config subnetIds=subnet-6782e71e,subnet-e7e761ac,securityGroupIds=sg-6979fe18\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"via-gui\"\n    }}>{`Via GUI`}</h3>\n    <p><img alt=\"EKS Control Plane\" src=\"https://res.cloudinary.com/gitgoodclub/image/upload/v1548137849/eks-course/Screen_Shot_2019-01-22_at_5.17.00_pm.png\" /></p>\n    <p>{`Kubernetes API server is a AWS service, hence it doesn't need dedicated EC2 instances to run.`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Open the EKS overview page in AWS Management console, `}<inlineCode parentName=\"li\">{`https://console.aws.amazon.com/eks/home#/clusters`}</inlineCode>{` and click `}<em parentName=\"li\">{`Create Cluster`}</em>{`.`}</li>\n    </ul>\n    <p>{`Populate the following fields:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Cluster name : enter a unique name, `}<em parentName=\"li\">{`EKS-course-cluster`}</em></li>\n      <li parentName=\"ul\">{`Kubernetes version : by default the latest available version is preselected`}</li>\n      <li parentName=\"ul\">{`Role ARN : select the IAM Role you created in the first Hands-On lesson `}<em parentName=\"li\">{`Part I: cover prerequisites`}</em></li>\n      <li parentName=\"ul\">{`VPC : select the VPC-ID from the dropdown box which was created in the first Hands-On lesson `}<em parentName=\"li\">{`Part II: create base AWS infrastructure`}</em></li>\n      <li parentName=\"ul\">{`Subnets : provide the comma separated Subnet-IDs you recorded in the previous step`}</li>\n      <li parentName=\"ul\">{`SecurityGroup : select the security group (it has name `}<em parentName=\"li\">{`ControlPlaneSecurityGroup`}</em>{` ) which has been created in Hands-On `}<em parentName=\"li\">{`Part II: create base AWS infrastructure`}</em></li>\n    </ul>\n    <p>{`Then for creation:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`click `}<em parentName=\"li\">{`Create`}</em></li>\n      <li parentName=\"ul\">{`on the `}<em parentName=\"li\">{`Clusters`}</em>{` overview page, observe field `}<em parentName=\"li\"><em parentName=\"em\">{`Status`}</em></em>{` until cluster creation is finished.`}</li>\n    </ul>\n    <p>{`Click on your clustername, and record the `}<em parentName=\"p\">{`API server endpoint`}</em>{` and `}<em parentName=\"p\">{`Certificate authority`}</em>{` values to configure `}<inlineCode parentName=\"p\">{`kubectl`}</inlineCode>{` in the next Hands-On `}<em parentName=\"p\">{`Part IV: install & configure kubectl`}</em>{`.`}</p>\n    <h2 {...{\n      \"id\": \"setting-up-local-kubectl-for-eks\"\n    }}>{`Setting up local kubectl for EKS`}</h2>\n    <h3 {...{\n      \"id\": \"recap-on-the-kubectl-setup\"\n    }}>{`Recap on the kubectl setup`}</h3>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`kubectl`}</inlineCode>{` relies on the `}<inlineCode parentName=\"li\">{`kubectl config file`}</inlineCode></li>\n      <li parentName=\"ul\">{`That relies on the EKS endpoint and User authentication`}</li>\n      <li parentName=\"ul\">{`Use auth depends on `}<inlineCode parentName=\"li\">{`aws-iam-authenticator`}</inlineCode>{` executable`}</li>\n      <li parentName=\"ul\">{`This generates an auth token based on the `}<inlineCode parentName=\"li\">{`aws credentials file`}</inlineCode></li>\n    </ul>\n    <h3 {...{\n      \"id\": \"install-kubectl--aws-iam_authenticator\"\n    }}>{`Install kubectl & aws-iam_authenticator`}</h3>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`kubectl`}</p>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`on RH based Linux: `}<inlineCode parentName=\"li\">{`sudo dnf install kubernetes-client`}</inlineCode><ul parentName=\"li\">\n              <li parentName=\"ul\">{`check: `}<inlineCode parentName=\"li\">{`kubectl version --short --client`}</inlineCode></li>\n            </ul></li>\n          <li parentName=\"ul\">{`on Windows, open a terminal emulator, preferrably MobaXterm:`}</li>\n        </ul>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{}}>{`curl -k -# -o kubectl.exe https://amazon-eks.s3-us-west-2.amazonaws.com/1.10.3/2018-07-26/bin/windows/amd64/kubectl.exe\nchmod +x kubectl.exe\nmkdir $HOME/bin\nmv kubectl.exe $HOME/bin\necho 'export PATH=$HOME/bin:$PATH' >> ~/.bashrc\nsource .bashrc\n`}</code></pre>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`check: `}<inlineCode parentName=\"li\">{`kubectl.exe version --short --client`}</inlineCode></li>\n        </ul>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`aws-iam-authenticator`}</p>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`on Linux:`}</li>\n        </ul>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{}}>{`curl -o aws-iam-authenticator https://amazon-eks.s3-us-west-2.amazonaws.com/1.10.3/2018-07-26/bin/linux/amd64/aws-iam-authenticator\nchmod +x ./aws-iam-authenticator\ncp ./aws-iam-authenticator /usr/local/bin/\n`}</code></pre>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">\n            <p parentName=\"li\">{`Test: `}<inlineCode parentName=\"p\">{`aws-iam-authenticator help`}</inlineCode></p>\n          </li>\n          <li parentName=\"ul\">\n            <p parentName=\"li\">{`on Windows, open a terminal emulator, preferrably MobaXterm:`}</p>\n          </li>\n        </ul>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{}}>{`curl -k -# -o aws-iam-authenticator.exe  https://amazon-eks.s3-us-west-2.amazonaws.com/1.10.3/2018-07-26/bin/windows/amd64/aws-iam-authenticator.exe\nchmod +x aws-iam-authenticator.exe\nmv aws-iam-authenticator.exe $HOME/bin\n`}</code></pre>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`Test: `}<inlineCode parentName=\"li\">{`aws-iam-authenticator.exe help`}</inlineCode></li>\n        </ul>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`aws credentials (ACCESS KEY+SECRET)\nnow we have to provide the Access key+secret from the first lesson `}<em parentName=\"p\">{`Part I : covering prerequisites`}</em>{` and put them into the credentials template.`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{}}>{`* populate aws credentials file\n  copy the provided file named _credentials_ to\n  * WINDOWS cygwin: \\`\\`\\`mkdir $HOMEPATH/.aws && vi $HOMEPATH/.aws/credentials\\`\\`\\`\n  * Linux: \\`\\`\\`~/.aws/credentials\\`\\`\\`\n  and set the properties _aws_access_key_id_ and _aws_secret_access_key_\n`}</code></pre>\n      </li>\n    </ul>\n    <h3 {...{\n      \"id\": \"configure-kubectl\"\n    }}>{`Configure `}<em parentName=\"h3\">{`kubectl`}</em></h3>\n    <p>{`in this step we are creating a configuration file for the binary `}<inlineCode parentName=\"p\">{`kubectl`}</inlineCode>{`, which is the main tool to interact with Kubernetes later on.`}</p>\n    <p>{`Use template file `}<em parentName=\"p\">{`kube-config-eks`}</em>{` and copy it to:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Linux: `}<inlineCode parentName=\"li\">{`~/.kube/kube-config-eks`}</inlineCode></li>\n      <li parentName=\"ul\">{`Windows (cygwin): `}<inlineCode parentName=\"li\">{`mkdir $HOMEPATH/.kube && vi $HOMEPATH/.kube/kube-config-eks`}</inlineCode></li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-yaml\"\n      }}>{`apiVersion: v1\nclusters:\n  - cluster:\n      server: <endpoint-url>\n      certificate-authority-data: <base64-encoded-ca-cert>\n    name: kubernetes\ncontexts:\n  - context:\n      cluster: kubernetes\n      user: aws\n    name: aws\ncurrent-context: aws\nkind: Config\npreferences: {}\nusers:\n  - name: aws\n    user:\n      exec:\n        apiVersion: client.authentication.k8s.io/v1alpha1\n        command: aws-iam-authenticator\n        args:\n          - 'token'\n          - '-i'\n          - 'EKS-course-cluster'\n`}</code></pre>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`edit file `}<inlineCode parentName=\"p\">{`kube-config-eks`}</inlineCode>{` and replace `}<em parentName=\"p\">{`endpoint-url`}</em>{`, `}<em parentName=\"p\">{`base64-encoded-ca-cert`}</em>{` by the values you recorded in the Hands-On lesson 3 `}<em parentName=\"p\">{`Part III: create the K8s control plane`}</em>{`.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Linux : `}<inlineCode parentName=\"p\">{`export KUBECONFIG=~/.kube/kube-config-eks`}</inlineCode>{`\nWindows : `}<inlineCode parentName=\"p\">{`export KUBECONFIG=$HOMEPATH/.kube/kube-config-eks`}</inlineCode></p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Test connectivity and access:`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{}}>{`#>kubectl get svc\nNAME         TYPE        CLUSTER-IP   EXTERNAL-IP   PORT(S)   AGE\nkubernetes   ClusterIP   xxxxxxxxx    <none>        443/TCP   4m\n`}</code></pre>\n        <p parentName=\"li\">{`command to check the config for kubectl: `}<inlineCode parentName=\"p\">{`kubectl config view`}</inlineCode></p>\n      </li>\n    </ul>\n    <p>{`Now you successfully talked to the K8s control plane on AWS`}</p>\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  "]}]}