{"remainingRequest":"/Users/okeeffe_d/Business/Documentation/node_modules/babel-loader/lib/index.js?{\"presets\":[[\"/Users/okeeffe_d/Business/Documentation/node_modules/babel-preset-docz/dist/index.js\",{\"flow\":true,\"typescript\":false,\"parseProps\":true}]],\"plugins\":[[\"/Users/okeeffe_d/Business/Documentation/node_modules/docz-utils/lib/named-asset-import.js\",{\"loaderMap\":{\"svg\":{\"ReactComponent\":\"@svgr/webpack?-prettier,-svgo![path]\"}}}]],\"babelrc\":false,\"cacheCompression\":true,\"compact\":true}!/Users/okeeffe_d/Business/Documentation/manual/Docker/Docker-Deep-Dive.md","dependencies":[{"path":"/Users/okeeffe_d/Business/Documentation/manual/Docker/Docker-Deep-Dive.md","mtime":1548209344305},{"path":"/Users/okeeffe_d/Business/Documentation/node_modules/cache-loader/dist/cjs.js","mtime":1548134640245},{"path":"/Users/okeeffe_d/Business/Documentation/node_modules/babel-loader/lib/index.js","mtime":1548134640227}],"contextDependencies":[],"result":["function _typeof(obj){if(typeof Symbol===\"function\"&&typeof Symbol.iterator===\"symbol\"){_typeof=function _typeof(obj){return typeof obj;};}else{_typeof=function _typeof(obj){return obj&&typeof Symbol===\"function\"&&obj.constructor===Symbol&&obj!==Symbol.prototype?\"symbol\":typeof obj;};}return _typeof(obj);}function _objectWithoutProperties(source,excluded){if(source==null)return{};var target=_objectWithoutPropertiesLoose(source,excluded);var key,i;if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++){key=sourceSymbolKeys[i];if(excluded.indexOf(key)>=0)continue;if(!Object.prototype.propertyIsEnumerable.call(source,key))continue;target[key]=source[key];}}return target;}function _objectWithoutPropertiesLoose(source,excluded){if(source==null)return{};var target={};var sourceKeys=Object.keys(source);var key,i;for(i=0;i<sourceKeys.length;i++){key=sourceKeys[i];if(excluded.indexOf(key)>=0)continue;target[key]=source[key];}return target;}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\");}}function _defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}function _createClass(Constructor,protoProps,staticProps){if(protoProps)_defineProperties(Constructor.prototype,protoProps);if(staticProps)_defineProperties(Constructor,staticProps);return Constructor;}function _possibleConstructorReturn(self,call){if(call&&(_typeof(call)===\"object\"||typeof call===\"function\")){return call;}return _assertThisInitialized(self);}function _assertThisInitialized(self){if(self===void 0){throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");}return self;}function _getPrototypeOf(o){_getPrototypeOf=Object.setPrototypeOf?Object.getPrototypeOf:function _getPrototypeOf(o){return o.__proto__||Object.getPrototypeOf(o);};return _getPrototypeOf(o);}function _inherits(subClass,superClass){if(typeof superClass!==\"function\"&&superClass!==null){throw new TypeError(\"Super expression must either be null or a function\");}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,writable:true,configurable:true}});if(superClass)_setPrototypeOf(subClass,superClass);}function _setPrototypeOf(o,p){_setPrototypeOf=Object.setPrototypeOf||function _setPrototypeOf(o,p){o.__proto__=p;return o;};return _setPrototypeOf(o,p);}import React from'react';import{MDXTag}from'@mdx-js/tag';var MDXContent=/*#__PURE__*/function(_React$Component){_inherits(MDXContent,_React$Component);function MDXContent(props){var _this;_classCallCheck(this,MDXContent);_this=_possibleConstructorReturn(this,_getPrototypeOf(MDXContent).call(this,props));_this.layout=null;return _this;}_createClass(MDXContent,[{key:\"render\",value:function render(){var _this$props=this.props,components=_this$props.components,props=_objectWithoutProperties(_this$props,[\"components\"]);return React.createElement(MDXTag,{name:\"wrapper\",components:components},React.createElement(MDXTag,{name:\"h2\",components:components,props:{\"id\":\"docker-deep-dive\"}},\"Docker Deep Dive\"),React.createElement(MDXTag,{name:\"hr\",components:components}),React.createElement(MDXTag,{name:\"ul\",components:components},React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},React.createElement(MDXTag,{name:\"a\",components:components,parentName:\"li\",props:{\"href\":\"#docker-deep-dive\"}},\"Docker Deep Dive\")),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},React.createElement(MDXTag,{name:\"a\",components:components,parentName:\"li\",props:{\"href\":\"#docker-basics\"}},\"Docker Basics\"),React.createElement(MDXTag,{name:\"ul\",components:components,parentName:\"li\"},React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},React.createElement(MDXTag,{name:\"a\",components:components,parentName:\"li\",props:{\"href\":\"#-----working-with-multiple-images\"}},\"---- Working with Multiple Images\")),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},React.createElement(MDXTag,{name:\"a\",components:components,parentName:\"li\",props:{\"href\":\"#-----packaging-a-customized-container\"}},\"---- Packaging A Customized Container\")),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},React.createElement(MDXTag,{name:\"a\",components:components,parentName:\"li\",props:{\"href\":\"#-----container-commands\"}},\"---- Container Commands\")),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},React.createElement(MDXTag,{name:\"a\",components:components,parentName:\"li\",props:{\"href\":\"#-----exposing-ports\"}},\"---- Exposing ports\")))),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},React.createElement(MDXTag,{name:\"a\",components:components,parentName:\"li\",props:{\"href\":\"#the-dockerfile-builds-and-network-configuration\"}},\"The Dockerfile, Builds and Network Configuration\"),React.createElement(MDXTag,{name:\"ul\",components:components,parentName:\"li\"},React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},React.createElement(MDXTag,{name:\"a\",components:components,parentName:\"li\",props:{\"href\":\"#-----user-and-run\"}},\"---- USER and RUN\")),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},React.createElement(MDXTag,{name:\"a\",components:components,parentName:\"li\",props:{\"href\":\"#-----env\"}},\"---- ENV\")),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},React.createElement(MDXTag,{name:\"a\",components:components,parentName:\"li\",props:{\"href\":\"#-----cmd-vs-run\"}},\"---- CMD vs RUN\")),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},React.createElement(MDXTag,{name:\"a\",components:components,parentName:\"li\",props:{\"href\":\"#-----entrypoint\"}},\"---- ENTRYPOINT\")),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},React.createElement(MDXTag,{name:\"a\",components:components,parentName:\"li\",props:{\"href\":\"#-----expose\"}},\"---- EXPOSE\")),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},React.createElement(MDXTag,{name:\"a\",components:components,parentName:\"li\",props:{\"href\":\"#-----container-volume-management\"}},\"---- Container Volume Management\")),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},React.createElement(MDXTag,{name:\"a\",components:components,parentName:\"li\",props:{\"href\":\"#-----docker-network-list-and-inspect\"}},\"---- Docker Network: List and Inspect\")),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},React.createElement(MDXTag,{name:\"a\",components:components,parentName:\"li\",props:{\"href\":\"#-----docker-network-assign-to-containers\"}},\"---- Docker Network: Assign to Containers\")))),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},React.createElement(MDXTag,{name:\"a\",components:components,parentName:\"li\",props:{\"href\":\"#docker-commands-and-structures\"}},\"Docker commands and structures\"),React.createElement(MDXTag,{name:\"ul\",components:components,parentName:\"li\"},React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},React.createElement(MDXTag,{name:\"a\",components:components,parentName:\"li\",props:{\"href\":\"#-----inspect-container-processes\"}},\"---- Inspect Container Processes\")),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},React.createElement(MDXTag,{name:\"a\",components:components,parentName:\"li\",props:{\"href\":\"#-----previous-container-management\"}},\"---- Previous Container Management\")),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},React.createElement(MDXTag,{name:\"a\",components:components,parentName:\"li\",props:{\"href\":\"#-----controlling-port-exposure-on-containers\"}},\"---- Controlling Port Exposure on Containers\")),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},React.createElement(MDXTag,{name:\"a\",components:components,parentName:\"li\",props:{\"href\":\"#-----naming-containers\"}},\"---- Naming Containers\")),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},React.createElement(MDXTag,{name:\"a\",components:components,parentName:\"li\",props:{\"href\":\"#-----docker-events\"}},\"---- Docker Events\")),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},React.createElement(MDXTag,{name:\"a\",components:components,parentName:\"li\",props:{\"href\":\"#-----managing-and-removing-base-images\"}},\"---- Managing and Removing Base Images\")),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},React.createElement(MDXTag,{name:\"a\",components:components,parentName:\"li\",props:{\"href\":\"#-----saving-and-loading-docker-images\"}},\"---- Saving and Loading Docker Images\")),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},React.createElement(MDXTag,{name:\"a\",components:components,parentName:\"li\",props:{\"href\":\"#-----image-history\"}},\"---- Image History\")),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},React.createElement(MDXTag,{name:\"a\",components:components,parentName:\"li\",props:{\"href\":\"#-----take-control-of-our-tags\"}},\"---- Take Control of Our Tags\")),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},React.createElement(MDXTag,{name:\"a\",components:components,parentName:\"li\",props:{\"href\":\"#-----pushing-to-docker-hub\"}},\"---- Pushing to Docker Hub\")))),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},React.createElement(MDXTag,{name:\"a\",components:components,parentName:\"li\",props:{\"href\":\"#integration-and-use-cases\"}},\"Integration and Use Cases\"),React.createElement(MDXTag,{name:\"ul\",components:components,parentName:\"li\"},React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},React.createElement(MDXTag,{name:\"a\",components:components,parentName:\"li\",props:{\"href\":\"#-----building-a-web-farm-for-development-and-testing\"}},\"---- Building a Web Farm for Development and Testing\"))))),React.createElement(MDXTag,{name:\"h2\",components:components,props:{\"id\":\"docker-basics\"}},\"Docker Basics\"),React.createElement(MDXTag,{name:\"h3\",components:components,props:{\"id\":\"-----working-with-multiple-images\"}},\"---- Working with Multiple Images\"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{}},\"# i: interactive, t: tty, d: daemon mode\\ndocker run -i -t -d ubuntu:latest /bin/bash\\n\\n# to attach to the container and edit the container\\ndocker attach container_name\\n\")),React.createElement(MDXTag,{name:\"hr\",components:components}),React.createElement(MDXTag,{name:\"h3\",components:components,props:{\"id\":\"-----packaging-a-customized-container\"}},\"---- Packaging A Customized Container\"),React.createElement(MDXTag,{name:\"p\",components:components},\"Once you are attached to a container, anytime you create files, it is now part of that container!\"),React.createElement(MDXTag,{name:\"p\",components:components},\"You can do all of your updates etc.\"),React.createElement(MDXTag,{name:\"p\",components:components},\"From here, we can commit to create a base image.\"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{}},\"docker commit -m \\\"This is a new image\\\" -a \\\"dennis@presentcompany.co\\\" dok/ubusshd:v1\\n\")),React.createElement(MDXTag,{name:\"p\",components:components},\"Once this is commited, it is now put to a base container! Yay!\"),React.createElement(MDXTag,{name:\"p\",components:components},\"Let's create a simple Dockerfile to give some info about us.\"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{}},\"# Dockerfile - example Ubuntu example with SSH already installed\\nFROM ubuntu:latest\\nMAINTAINER okeeffed <dennis@presentcompany.co>\\nRUN apt-get update\\nRUN apt-get -y install telnet openssh-server\\n\")),React.createElement(MDXTag,{name:\"p\",components:components},\"For building:\"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{}},\"# build a Dockerfile from the current location\\ndocker build -t=\\\"dok/ubusshdonly:v2\\\" .\\n\")),React.createElement(MDXTag,{name:\"h3\",components:components,props:{\"id\":\"-----container-commands\"}},\"---- Container Commands\"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{}},\"top # shows the processes\\ndocker logs container_name #shows history for container\\ndocker exec container name /bin/cat /etc/profile\\n\\ndocker run container name /bin/bash -c \\\"while true; do echo HELLO; sleep 1; done\\\"\\n\")),React.createElement(MDXTag,{name:\"h3\",components:components,props:{\"id\":\"-----exposing-ports\"}},\"---- Exposing ports\"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{}},\"docker run -d -p 80:80 nginx:latest\\n\")),React.createElement(MDXTag,{name:\"h2\",components:components,props:{\"id\":\"the-dockerfile-builds-and-network-configuration\"}},\"The Dockerfile, Builds and Network Configuration\"),React.createElement(MDXTag,{name:\"h3\",components:components,props:{\"id\":\"-----user-and-run\"}},\"---- USER and RUN\"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{}},\"# Dockerfile based on the latest CentOS 7 image - non-priviledged user entry\\nMAINTAINER dok@email.com\\nFROM centos:latest\\n\\nRUN useradd -ms /bin/bash user\\nUSER user\\n\")),React.createElement(MDXTag,{name:\"p\",components:components},\"To connect as the root, you just need to start the container and run \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"docker exec -u 0 -it sleepy_allen /bin/bash\")),React.createElement(MDXTag,{name:\"p\",components:components},React.createElement(MDXTag,{name:\"strong\",components:components,parentName:\"p\"},\"Order of Execution\")),React.createElement(MDXTag,{name:\"p\",components:components},\"We had to run a super user command to add the User. Now let's say we want to run another command.\"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{}},\"# Dockerfile based on the latest CentOS 7 image - non-priviledged user entry\\nMAINTAINER dok@email.com\\nFROM centos:latest\\n\\nRUN useradd -ms /bin/bash user\\n\\n# this will not give an issue - order of execution MATTERS\\nRUN echo 'EXPORT 129.168.0.0/24' >> /etc/exports.list # making up exports.list\\n\\nUSER user\\n\\n# below will give an issue - order of execution MATTERS\\nRUN echo 'EXPORT 129.168.0.0/24' >> /etc/exports.list # making up exports.list\\n\")),React.createElement(MDXTag,{name:\"h3\",components:components,props:{\"id\":\"-----env\"}},\"---- ENV\"),React.createElement(MDXTag,{name:\"p\",components:components},\"Example, let's install Java through the Dockerfile!\"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{}},\"# Dockerfile based on the latest CentOS 7 image - non-priviledged user entry\\nMAINTAINER dok@email.com\\nFROM centos:latest\\n\\nRUN useradd -ms /bin/bash user\\n\\n# this will not give an issue - order of execution MATTERS\\nRUN echo 'EXPORT 129.168.0.0/24' >> /etc/exports.list # making up exports.list\\n\\nRUN yum update -y\\nRUN yum install -y net-tools wget\\n\\nRUN cd ~ && wget --no-cookies --no-check-certificate --header \\\"url\\\"\\n\\nRUN yum localinstall -y ~/java_file.rpm\\n\\nUSER user\\n\\nRUN cd ~ && echo \\\"export JAVA_HOME=/usr/java/jdk1.8.0/jre\\\" >> /home/user/.bashrc\\n\\n# generates env variable for everyone\\nENV JAVA_BIN /usr/java/jdk1.8.0/jre/bin\\n\")),React.createElement(MDXTag,{name:\"h3\",components:components,props:{\"id\":\"-----cmd-vs-run\"}},\"---- CMD vs RUN\"),React.createElement(MDXTag,{name:\"p\",components:components},\"Command generally sets the default command to run when there is nothing specified when container starts up.\"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{}},\"# Dockerfile based on the latest CentOS 7 image - non-priviledged user entry\\nMAINTAINER dok@email.com\\nFROM centos:latest\\n\\nRUN useradd -ms /bin/bash user\\n\\nCMD 'echo' 'This is a custom container message'\\n\\nUSER user\\n\")),React.createElement(MDXTag,{name:\"h3\",components:components,props:{\"id\":\"-----entrypoint\"}},\"---- ENTRYPOINT\"),React.createElement(MDXTag,{name:\"p\",components:components},\"The entrypoint itself will ALWAYS be the concrete default application everytime that the container is created.\"),React.createElement(MDXTag,{name:\"p\",components:components},React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"CMD\"),\" will only run when there is no argument, whereas \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"ENTRYPOINT\"),\" will always run.\"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{}},\"FROM centos:latest\\nMAINTAINER dok@email.com\\n\\nRUN useradd -ms /bin/bash user\\n\\nENTRYPOINT echo \\\"This command will display this message on EVERY container that is run from it\\\"\\n\\nUSER user\\n\")),React.createElement(MDXTag,{name:\"h3\",components:components,props:{\"id\":\"-----expose\"}},\"---- EXPOSE\"),React.createElement(MDXTag,{name:\"p\",components:components},\"EXPOSE will allow us to expose our ports.\"),React.createElement(MDXTag,{name:\"p\",components:components},\"The follow image will allow us to build a webserver and run it from basics.\"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{}},\"FROM centos:latest\\nMAINTAINER dok@email.com\\n\\nRUN yum update -y\\nRUN yum install -y httpd net-tools\\n\\nRUN echo \\\"This is a custom index file built during the image creation\\\" > /var/www/html/index.html\\n\\nENTRYPOINT apachectl \\\"-DFOREGROUND\\\"\\n\")),React.createElement(MDXTag,{name:\"p\",components:components},\"However, if we don't expose any ports, then using \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"-P\"),\" won't automatically expose those ports. We can still forcably expose ports using `docker run --name apacheweb -d -p 8080:80 container\"),React.createElement(MDXTag,{name:\"p\",components:components},\"To auto-expose, we can do this...\"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{}},\"FROM centos:latest\\nMAINTAINER dok@email.com\\n\\nRUN yum update -y\\nRUN yum install -y httpd net-tools\\n\\nRUN echo \\\"This is a custom index file built during the image creation\\\" > /var/www/html/index.html\\n\\nEXPOSE 80\\n\\nENTRYPOINT apachectl \\\"-DFOREGROUND\\\"\\n\")),React.createElement(MDXTag,{name:\"h3\",components:components,props:{\"id\":\"-----container-volume-management\"}},\"---- Container Volume Management\"),React.createElement(MDXTag,{name:\"p\",components:components},\"How do we work with mounts and file systems?\"),React.createElement(MDXTag,{name:\"p\",components:components},\"We can mount using \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"-v\"),\" for mounting volumes.\"),React.createElement(MDXTag,{name:\"p\",components:components},\"Scenario One: Create a directory at launchtime called \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"mydata\")),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{}},\"docker run -it --name voltest1 -v /mydata centos:latest /bin/bash\\n# once logged in\\ndf -h # shows that there is a mounted file\\n\\n# back from host OS terminal\\ncd /var/lib/docker # will show us the volumes folder\\n\\n# if we docker inspect the container\\n# it will show us the volume and the source\\n\")),React.createElement(MDXTag,{name:\"p\",components:components},\"Once we have things that are mounted, we can access them from the container and anything that we edit in the underlying host, we can see in the container!\"),React.createElement(MDXTag,{name:\"p\",components:components},\"We can't do this from the Dockerfile, because the base image is designed to be portable.\"),React.createElement(MDXTag,{name:\"h3\",components:components,props:{\"id\":\"-----docker-network-list-and-inspect\"}},\"---- Docker Network: List and Inspect\"),React.createElement(MDXTag,{name:\"p\",components:components},\"Thanks to Docker Swarm and Kubernetes, it has become easier to manage the Docker Network.\"),React.createElement(MDXTag,{name:\"p\",components:components},\"When you run a docker instance, it will auto pull the next available address.\"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{}},\"# this will list all of the associated networks with the current host\\ndocker network ls\\n\\ndocker network ls --no-trunc # to see the full address\\n\\ndocker network inspect bridge\\n\")),React.createElement(MDXTag,{name:\"p\",components:components},React.createElement(MDXTag,{name:\"strong\",components:components,parentName:\"p\"},\"Creating Docker network configs\")),React.createElement(MDXTag,{name:\"p\",components:components},\"To see things like a \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"man\"),\" page for docker, you essential just put dashes between multi-word commands.\"),React.createElement(MDXTag,{name:\"p\",components:components},React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"man docker-network-create\"),\" will bring up the network create manual.\"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{}},\"docker network create --subnet 10.1.0.0/24 --gateway 10.1.0.1 mybridge01 # /24 is everything in that network\\n\\ndocker network ls\\n# the new bridge adapter is now there\\n\\n# to remove the bridge\\ndocker network rm mybridge01\\n\")),React.createElement(MDXTag,{name:\"h3\",components:components,props:{\"id\":\"-----docker-network-assign-to-containers\"}},\"---- Docker Network: Assign to Containers\"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{}},\"# subnet itself can be 10.1.[1-254].[1-254] while ip-range is 10.1.4.[1-254]\\n# that is class b and class c respectively\\ndocker network create --subnet 10.1.0.0/16 --gateway 10.1.0.1 --ip-range=10.1.4.0/24 --driver=bridge --label=host4network bridge04\\n\")),React.createElement(MDXTag,{name:\"p\",components:components},\"If you then inspect the new above network config, it will have those settings within that inspect config.\"),React.createElement(MDXTag,{name:\"p\",components:components},\"So how do we now use this new network?\"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{}},\"docker run -it --name nettest1 --net bridge04 --ip 10.1.4.100 centos:latest /bin/bash\\n\\n# if we docker inspect nettest1 | grep IP we can see the address set at 10.1.4.100\\n\")),React.createElement(MDXTag,{name:\"hr\",components:components}),React.createElement(MDXTag,{name:\"h2\",components:components,props:{\"id\":\"docker-commands-and-structures\"}},\"Docker commands and structures\"),React.createElement(MDXTag,{name:\"h3\",components:components,props:{\"id\":\"-----inspect-container-processes\"}},\"---- Inspect Container Processes\"),React.createElement(MDXTag,{name:\"p\",components:components},\"From the outside, we can run \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"docker exec\"),\" to get some more details about the container itself.\"),React.createElement(MDXTag,{name:\"p\",components:components},React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"docker exec container_name /bin/ps aux | grep bash\")),React.createElement(MDXTag,{name:\"p\",components:components},\"We can use \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"docker top\"),\" to see the top command run on a container.\"),React.createElement(MDXTag,{name:\"p\",components:components},React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"docker top container_name\")),React.createElement(MDXTag,{name:\"p\",components:components},\"Let's execute a command to install \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"sshd\"),\". We could attach to container and do so, but we have a few options. Instead of attaching, we could do the following:\"),React.createElement(MDXTag,{name:\"p\",components:components},React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"docker exec -i -t container_name /bin/bash\")),React.createElement(MDXTag,{name:\"p\",components:components},\"This will ensure that the container doesn't stop, but will actually run two instances of \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"bash\"),\". We can verify this by looking at the container processes.\"),React.createElement(MDXTag,{name:\"p\",components:components},\"So far, this can give us a momentary snap shot.\"),React.createElement(MDXTag,{name:\"p\",components:components},React.createElement(MDXTag,{name:\"strong\",components:components,parentName:\"p\"},\"See the history of previous processes and performances\")),React.createElement(MDXTag,{name:\"p\",components:components},\"We can use \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"docker stats\"),\" to see a live set of information for that container.\"),React.createElement(MDXTag,{name:\"p\",components:components},React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"dock stats container_name\")),React.createElement(MDXTag,{name:\"p\",components:components},\"This will keep a view that is constantly updated to see what is going on.\"),React.createElement(MDXTag,{name:\"h3\",components:components,props:{\"id\":\"-----previous-container-management\"}},\"---- Previous Container Management\"),React.createElement(MDXTag,{name:\"p\",components:components},\"Just to see the previous containers not running with just their ids, we can run \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"docker ps -a -q\")),React.createElement(MDXTag,{name:\"p\",components:components},\"Of course, for removing older containers, we can \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"docker rm\"),\" previous containers.\"),React.createElement(MDXTag,{name:\"p\",components:components},\"We can also remove containers from the \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"/var/lib/docker\"),\" folder as the super user. If you do it this way, you want to ensure that you have \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"systemctl stop/restart docker\"),\" to ensure that there aren't any issues with Docker.\"),React.createElement(MDXTag,{name:\"h3\",components:components,props:{\"id\":\"-----controlling-port-exposure-on-containers\"}},\"---- Controlling Port Exposure on Containers\"),React.createElement(MDXTag,{name:\"p\",components:components},\"In this example, start up a nginx container in daemon mode without remapping the ports.\"),React.createElement(MDXTag,{name:\"p\",components:components},\"Again, we can inspect this container to find the IP etc. We know that we can get anything remapped to the localhost currently because there is no remapping.\"),React.createElement(MDXTag,{name:\"p\",components:components},\"In contrast, we can use \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"-P\"),\" to expose the ports and it will auto remap to high port value.\"),React.createElement(MDXTag,{name:\"p\",components:components},React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"-p 8080:80\"),\" will be use defining the port that we want to expose it to.\"),React.createElement(MDXTag,{name:\"p\",components:components},\"If we want to define a certain interface eg. localhost...\"),React.createElement(MDXTag,{name:\"p\",components:components},React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"docker run -itd -p 127.0.01:8081:80 nginx:latest\"),\" would ONLY allow localhost to access this site.\"),React.createElement(MDXTag,{name:\"h3\",components:components,props:{\"id\":\"-----naming-containers\"}},\"---- Naming Containers\"),React.createElement(MDXTag,{name:\"p\",components:components},\"To rename containers, we can run \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"docker rename currentname newname\"),\" - you can even rename container IDs, although there is likely no point.\"),React.createElement(MDXTag,{name:\"p\",components:components},\"You can also rename running containers!\"),React.createElement(MDXTag,{name:\"h3\",components:components,props:{\"id\":\"-----docker-events\"}},\"---- Docker Events\"),React.createElement(MDXTag,{name:\"p\",components:components},\"How can we monitor certain events?\"),React.createElement(MDXTag,{name:\"p\",components:components},\"Startup a few containers.\"),React.createElement(MDXTag,{name:\"p\",components:components},\"When we interact with them, certain events are generated.\"),React.createElement(MDXTag,{name:\"p\",components:components},\"If we run \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"docker events\"),\", it will begin a program to wait and register certain events.\"),React.createElement(MDXTag,{name:\"p\",components:components},\"If we run \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"docker events --since '1h'\"),\", we can then see all the events that have happened in the last hour.\"),React.createElement(MDXTag,{name:\"p\",components:components},\"If we run just \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"docker events\"),\" and run a \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"dok exec -it mycontainerid /bin/bash\"),\" command, we will then see those events registered. This is useful for debugging and monitoring the entire host.\"),React.createElement(MDXTag,{name:\"p\",components:components},\"We may not care about every event though. What happens if we just care about an attachment?\"),React.createElement(MDXTag,{name:\"p\",components:components},React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"docker events --filter <keyword>\"),\" can then be used to filter for events we care about.\"),React.createElement(MDXTag,{name:\"p\",components:components},React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"docker events --filter event=attach\")),React.createElement(MDXTag,{name:\"p\",components:components},\"We can also filter for multiple events with multiple \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"--filter event=<event>\")),React.createElement(MDXTag,{name:\"h3\",components:components,props:{\"id\":\"-----managing-and-removing-base-images\"}},\"---- Managing and Removing Base Images\"),React.createElement(MDXTag,{name:\"p\",components:components},\"If you remove an image by name, then if there is a double up of the same ID, it will just remove the named image - however an ID removal will warn you if they share the ID. They only way to remove all of them is to use the force \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"-f\"),\" flag.\"),React.createElement(MDXTag,{name:\"h3\",components:components,props:{\"id\":\"-----saving-and-loading-docker-images\"}},\"---- Saving and Loading Docker Images\"),React.createElement(MDXTag,{name:\"p\",components:components},React.createElement(MDXTag,{name:\"strong\",components:components,parentName:\"p\"},\"Saving\")),React.createElement(MDXTag,{name:\"p\",components:components},\"When we pull images, we can pull from local or from Docker Hub. You will use base of an official release usually etc.\"),React.createElement(MDXTag,{name:\"p\",components:components},\"How can we manage our custom images? We can \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"tar\"),\" any file and migrate it to another compute etc.\"),React.createElement(MDXTag,{name:\"p\",components:components},React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"docker commit containername centos:mine\")),React.createElement(MDXTag,{name:\"p\",components:components},\"This will allow us to save the image but remove the containers!\"),React.createElement(MDXTag,{name:\"p\",components:components},\"We can use\"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{}},\"docker save --output centos.latest.tar centos:latest\\n\")),React.createElement(MDXTag,{name:\"p\",components:components},\"If you \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"ls\"),\" the tar file, it will give you details about the image/container.\"),React.createElement(MDXTag,{name:\"p\",components:components},React.createElement(MDXTag,{name:\"strong\",components:components,parentName:\"p\"},\"Restoring\")),React.createElement(MDXTag,{name:\"p\",components:components},React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"docker load --input centos.latest.tar\")),React.createElement(MDXTag,{name:\"p\",components:components},\"If we have \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"gzip\"),\" a tar file, we can also load it directly from the \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\".tar.gz\"),\" file.\"),React.createElement(MDXTag,{name:\"h3\",components:components,props:{\"id\":\"-----image-history\"}},\"---- Image History\"),React.createElement(MDXTag,{name:\"p\",components:components},\"How can we get the history of the base image?\"),React.createElement(MDXTag,{name:\"p\",components:components},React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"docker history imagename\")),React.createElement(MDXTag,{name:\"p\",components:components},\"This will give us a list of commands etc.\"),React.createElement(MDXTag,{name:\"h3\",components:components,props:{\"id\":\"-----take-control-of-our-tags\"}},\"---- Take Control of Our Tags\"),React.createElement(MDXTag,{name:\"p\",components:components},\"Changes in the container is what is kept in storage layering.\"),React.createElement(MDXTag,{name:\"p\",components:components},React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"docker tag imageid mine/centos:v1.0\"),\" - this will create a new image with the repo tag.\"),React.createElement(MDXTag,{name:\"p\",components:components},React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"docker tag mine/centos:v1.0 dok.example.com/centos:v1.0b\"),\" will do the same.\"),React.createElement(MDXTag,{name:\"h3\",components:components,props:{\"id\":\"-----pushing-to-docker-hub\"}},\"---- Pushing to Docker Hub\"),React.createElement(MDXTag,{name:\"p\",components:components},React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"docker login --username=name\"),\" throw in the password and you'll be authenticated.\"),React.createElement(MDXTag,{name:\"p\",components:components},\"One authenticated, \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"docker push image\")),React.createElement(MDXTag,{name:\"p\",components:components},\"Of course, to bring it back down, you will hit \",React.createElement(MDXTag,{name:\"inlineCode\",components:components,parentName:\"p\"},\"docker pull name\")),React.createElement(MDXTag,{name:\"hr\",components:components}),React.createElement(MDXTag,{name:\"h2\",components:components,props:{\"id\":\"integration-and-use-cases\"}},\"Integration and Use Cases\"),React.createElement(MDXTag,{name:\"h3\",components:components,props:{\"id\":\"-----building-a-web-farm-for-development-and-testing\"}},\"---- Building a Web Farm for Development and Testing\"),React.createElement(MDXTag,{name:\"p\",components:components},React.createElement(MDXTag,{name:\"em\",components:components,parentName:\"p\"},\"Prerequisites\")),React.createElement(MDXTag,{name:\"p\",components:components},\"So far, we have not had a specific purpose for Docker containers. These following examples are for real world use cases.\"),React.createElement(MDXTag,{name:\"p\",components:components},\"Set up a web farm with two Apache web nodes on port 80 - both sharing one or more file systems.\"),React.createElement(MDXTag,{name:\"p\",components:components},React.createElement(MDXTag,{name:\"em\",components:components,parentName:\"p\"},\"Part One\")));}}]);return MDXContent;}(React.Component);export{MDXContent as default};MDXContent.__docgenInfo={\"description\":\"\",\"methods\":[],\"displayName\":\"MDXContent\"};",{"version":3,"sources":["/Users/okeeffe_d/Business/Documentation/manual/Docker/Docker-Deep-Dive.md"],"names":["React","MDXTag","MDXContent","props","layout","components","Component"],"mappings":"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","sourcesContent":["\n  import React from 'react'\n  import { MDXTag } from '@mdx-js/tag'\n  \n\nexport default class MDXContent extends React.Component {\n  constructor(props) {\n    super(props)\n    this.layout = null\n  }\n  render() {\n    const { components, ...props } = this.props\n\n    return <MDXTag\n             name=\"wrapper\"\n             \n             components={components}><MDXTag name=\"h2\" components={components} props={{\"id\":\"docker-deep-dive\"}}>{`Docker Deep Dive`}</MDXTag>\n<MDXTag name=\"hr\" components={components}></MDXTag>\n{/* TOC */}\n<MDXTag name=\"ul\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"a\" components={components} parentName=\"li\" props={{\"href\":\"#docker-deep-dive\"}}>{`Docker Deep Dive`}</MDXTag></MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"a\" components={components} parentName=\"li\" props={{\"href\":\"#docker-basics\"}}>{`Docker Basics`}</MDXTag><MDXTag name=\"ul\" components={components} parentName=\"li\">\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"a\" components={components} parentName=\"li\" props={{\"href\":\"#-----working-with-multiple-images\"}}>{`---- Working with Multiple Images`}</MDXTag></MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"a\" components={components} parentName=\"li\" props={{\"href\":\"#-----packaging-a-customized-container\"}}>{`---- Packaging A Customized Container`}</MDXTag></MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"a\" components={components} parentName=\"li\" props={{\"href\":\"#-----container-commands\"}}>{`---- Container Commands`}</MDXTag></MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"a\" components={components} parentName=\"li\" props={{\"href\":\"#-----exposing-ports\"}}>{`---- Exposing ports`}</MDXTag></MDXTag>\n</MDXTag></MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"a\" components={components} parentName=\"li\" props={{\"href\":\"#the-dockerfile-builds-and-network-configuration\"}}>{`The Dockerfile, Builds and Network Configuration`}</MDXTag><MDXTag name=\"ul\" components={components} parentName=\"li\">\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"a\" components={components} parentName=\"li\" props={{\"href\":\"#-----user-and-run\"}}>{`---- USER and RUN`}</MDXTag></MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"a\" components={components} parentName=\"li\" props={{\"href\":\"#-----env\"}}>{`---- ENV`}</MDXTag></MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"a\" components={components} parentName=\"li\" props={{\"href\":\"#-----cmd-vs-run\"}}>{`---- CMD vs RUN`}</MDXTag></MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"a\" components={components} parentName=\"li\" props={{\"href\":\"#-----entrypoint\"}}>{`---- ENTRYPOINT`}</MDXTag></MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"a\" components={components} parentName=\"li\" props={{\"href\":\"#-----expose\"}}>{`---- EXPOSE`}</MDXTag></MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"a\" components={components} parentName=\"li\" props={{\"href\":\"#-----container-volume-management\"}}>{`---- Container Volume Management`}</MDXTag></MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"a\" components={components} parentName=\"li\" props={{\"href\":\"#-----docker-network-list-and-inspect\"}}>{`---- Docker Network: List and Inspect`}</MDXTag></MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"a\" components={components} parentName=\"li\" props={{\"href\":\"#-----docker-network-assign-to-containers\"}}>{`---- Docker Network: Assign to Containers`}</MDXTag></MDXTag>\n</MDXTag></MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"a\" components={components} parentName=\"li\" props={{\"href\":\"#docker-commands-and-structures\"}}>{`Docker commands and structures`}</MDXTag><MDXTag name=\"ul\" components={components} parentName=\"li\">\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"a\" components={components} parentName=\"li\" props={{\"href\":\"#-----inspect-container-processes\"}}>{`---- Inspect Container Processes`}</MDXTag></MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"a\" components={components} parentName=\"li\" props={{\"href\":\"#-----previous-container-management\"}}>{`---- Previous Container Management`}</MDXTag></MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"a\" components={components} parentName=\"li\" props={{\"href\":\"#-----controlling-port-exposure-on-containers\"}}>{`---- Controlling Port Exposure on Containers`}</MDXTag></MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"a\" components={components} parentName=\"li\" props={{\"href\":\"#-----naming-containers\"}}>{`---- Naming Containers`}</MDXTag></MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"a\" components={components} parentName=\"li\" props={{\"href\":\"#-----docker-events\"}}>{`---- Docker Events`}</MDXTag></MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"a\" components={components} parentName=\"li\" props={{\"href\":\"#-----managing-and-removing-base-images\"}}>{`---- Managing and Removing Base Images`}</MDXTag></MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"a\" components={components} parentName=\"li\" props={{\"href\":\"#-----saving-and-loading-docker-images\"}}>{`---- Saving and Loading Docker Images`}</MDXTag></MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"a\" components={components} parentName=\"li\" props={{\"href\":\"#-----image-history\"}}>{`---- Image History`}</MDXTag></MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"a\" components={components} parentName=\"li\" props={{\"href\":\"#-----take-control-of-our-tags\"}}>{`---- Take Control of Our Tags`}</MDXTag></MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"a\" components={components} parentName=\"li\" props={{\"href\":\"#-----pushing-to-docker-hub\"}}>{`---- Pushing to Docker Hub`}</MDXTag></MDXTag>\n</MDXTag></MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"a\" components={components} parentName=\"li\" props={{\"href\":\"#integration-and-use-cases\"}}>{`Integration and Use Cases`}</MDXTag><MDXTag name=\"ul\" components={components} parentName=\"li\">\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"a\" components={components} parentName=\"li\" props={{\"href\":\"#-----building-a-web-farm-for-development-and-testing\"}}>{`---- Building a Web Farm for Development and Testing`}</MDXTag></MDXTag>\n</MDXTag></MDXTag>\n</MDXTag>\n{/* /TOC */}\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"docker-basics\"}}>{`Docker Basics`}</MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"-----working-with-multiple-images\"}}>{`---- Working with Multiple Images`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{}}>{`# i: interactive, t: tty, d: daemon mode\ndocker run -i -t -d ubuntu:latest /bin/bash\n\n# to attach to the container and edit the container\ndocker attach container_name\n`}</MDXTag></MDXTag>\n<MDXTag name=\"hr\" components={components}></MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"-----packaging-a-customized-container\"}}>{`---- Packaging A Customized Container`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Once you are attached to a container, anytime you create files, it is now part of that container!`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`You can do all of your updates etc.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`From here, we can commit to create a base image.`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{}}>{`docker commit -m \"This is a new image\" -a \"dennis@presentcompany.co\" dok/ubusshd:v1\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`Once this is commited, it is now put to a base container! Yay!`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Let's create a simple Dockerfile to give some info about us.`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{}}>{`# Dockerfile - example Ubuntu example with SSH already installed\nFROM ubuntu:latest\nMAINTAINER okeeffed <dennis@presentcompany.co>\nRUN apt-get update\nRUN apt-get -y install telnet openssh-server\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`For building:`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{}}>{`# build a Dockerfile from the current location\ndocker build -t=\"dok/ubusshdonly:v2\" .\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"-----container-commands\"}}>{`---- Container Commands`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{}}>{`top # shows the processes\ndocker logs container_name #shows history for container\ndocker exec container name /bin/cat /etc/profile\n\ndocker run container name /bin/bash -c \"while true; do echo HELLO; sleep 1; done\"\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"-----exposing-ports\"}}>{`---- Exposing ports`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{}}>{`docker run -d -p 80:80 nginx:latest\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"the-dockerfile-builds-and-network-configuration\"}}>{`The Dockerfile, Builds and Network Configuration`}</MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"-----user-and-run\"}}>{`---- USER and RUN`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{}}>{`# Dockerfile based on the latest CentOS 7 image - non-priviledged user entry\nMAINTAINER dok@email.com\nFROM centos:latest\n\nRUN useradd -ms /bin/bash user\nUSER user\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`To connect as the root, you just need to start the container and run `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`docker exec -u 0 -it sleepy_allen /bin/bash`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"strong\" components={components} parentName=\"p\">{`Order of Execution`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`We had to run a super user command to add the User. Now let's say we want to run another command.`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{}}>{`# Dockerfile based on the latest CentOS 7 image - non-priviledged user entry\nMAINTAINER dok@email.com\nFROM centos:latest\n\nRUN useradd -ms /bin/bash user\n\n# this will not give an issue - order of execution MATTERS\nRUN echo 'EXPORT 129.168.0.0/24' >> /etc/exports.list # making up exports.list\n\nUSER user\n\n# below will give an issue - order of execution MATTERS\nRUN echo 'EXPORT 129.168.0.0/24' >> /etc/exports.list # making up exports.list\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"-----env\"}}>{`---- ENV`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Example, let's install Java through the Dockerfile!`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{}}>{`# Dockerfile based on the latest CentOS 7 image - non-priviledged user entry\nMAINTAINER dok@email.com\nFROM centos:latest\n\nRUN useradd -ms /bin/bash user\n\n# this will not give an issue - order of execution MATTERS\nRUN echo 'EXPORT 129.168.0.0/24' >> /etc/exports.list # making up exports.list\n\nRUN yum update -y\nRUN yum install -y net-tools wget\n\nRUN cd ~ && wget --no-cookies --no-check-certificate --header \"url\"\n\nRUN yum localinstall -y ~/java_file.rpm\n\nUSER user\n\nRUN cd ~ && echo \"export JAVA_HOME=/usr/java/jdk1.8.0/jre\" >> /home/user/.bashrc\n\n# generates env variable for everyone\nENV JAVA_BIN /usr/java/jdk1.8.0/jre/bin\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"-----cmd-vs-run\"}}>{`---- CMD vs RUN`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Command generally sets the default command to run when there is nothing specified when container starts up.`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{}}>{`# Dockerfile based on the latest CentOS 7 image - non-priviledged user entry\nMAINTAINER dok@email.com\nFROM centos:latest\n\nRUN useradd -ms /bin/bash user\n\nCMD 'echo' 'This is a custom container message'\n\nUSER user\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"-----entrypoint\"}}>{`---- ENTRYPOINT`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`The entrypoint itself will ALWAYS be the concrete default application everytime that the container is created.`}</MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`CMD`}</MDXTag>{` will only run when there is no argument, whereas `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`ENTRYPOINT`}</MDXTag>{` will always run.`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{}}>{`FROM centos:latest\nMAINTAINER dok@email.com\n\nRUN useradd -ms /bin/bash user\n\nENTRYPOINT echo \"This command will display this message on EVERY container that is run from it\"\n\nUSER user\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"-----expose\"}}>{`---- EXPOSE`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`EXPOSE will allow us to expose our ports.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`The follow image will allow us to build a webserver and run it from basics.`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{}}>{`FROM centos:latest\nMAINTAINER dok@email.com\n\nRUN yum update -y\nRUN yum install -y httpd net-tools\n\nRUN echo \"This is a custom index file built during the image creation\" > /var/www/html/index.html\n\nENTRYPOINT apachectl \"-DFOREGROUND\"\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`However, if we don't expose any ports, then using `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`-P`}</MDXTag>{` won't automatically expose those ports. We can still forcably expose ports using \\`docker run --name apacheweb -d -p 8080:80 container`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`To auto-expose, we can do this...`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{}}>{`FROM centos:latest\nMAINTAINER dok@email.com\n\nRUN yum update -y\nRUN yum install -y httpd net-tools\n\nRUN echo \"This is a custom index file built during the image creation\" > /var/www/html/index.html\n\nEXPOSE 80\n\nENTRYPOINT apachectl \"-DFOREGROUND\"\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"-----container-volume-management\"}}>{`---- Container Volume Management`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`How do we work with mounts and file systems?`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`We can mount using `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`-v`}</MDXTag>{` for mounting volumes.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Scenario One: Create a directory at launchtime called `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`mydata`}</MDXTag></MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{}}>{`docker run -it --name voltest1 -v /mydata centos:latest /bin/bash\n# once logged in\ndf -h # shows that there is a mounted file\n\n# back from host OS terminal\ncd /var/lib/docker # will show us the volumes folder\n\n# if we docker inspect the container\n# it will show us the volume and the source\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`Once we have things that are mounted, we can access them from the container and anything that we edit in the underlying host, we can see in the container!`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`We can't do this from the Dockerfile, because the base image is designed to be portable.`}</MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"-----docker-network-list-and-inspect\"}}>{`---- Docker Network: List and Inspect`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Thanks to Docker Swarm and Kubernetes, it has become easier to manage the Docker Network.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`When you run a docker instance, it will auto pull the next available address.`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{}}>{`# this will list all of the associated networks with the current host\ndocker network ls\n\ndocker network ls --no-trunc # to see the full address\n\ndocker network inspect bridge\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"strong\" components={components} parentName=\"p\">{`Creating Docker network configs`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`To see things like a `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`man`}</MDXTag>{` page for docker, you essential just put dashes between multi-word commands.`}</MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`man docker-network-create`}</MDXTag>{` will bring up the network create manual.`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{}}>{`docker network create --subnet 10.1.0.0/24 --gateway 10.1.0.1 mybridge01 # /24 is everything in that network\n\ndocker network ls\n# the new bridge adapter is now there\n\n# to remove the bridge\ndocker network rm mybridge01\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"-----docker-network-assign-to-containers\"}}>{`---- Docker Network: Assign to Containers`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{}}>{`# subnet itself can be 10.1.[1-254].[1-254] while ip-range is 10.1.4.[1-254]\n# that is class b and class c respectively\ndocker network create --subnet 10.1.0.0/16 --gateway 10.1.0.1 --ip-range=10.1.4.0/24 --driver=bridge --label=host4network bridge04\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`If you then inspect the new above network config, it will have those settings within that inspect config.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`So how do we now use this new network?`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{}}>{`docker run -it --name nettest1 --net bridge04 --ip 10.1.4.100 centos:latest /bin/bash\n\n# if we docker inspect nettest1 | grep IP we can see the address set at 10.1.4.100\n`}</MDXTag></MDXTag>\n<MDXTag name=\"hr\" components={components}></MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"docker-commands-and-structures\"}}>{`Docker commands and structures`}</MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"-----inspect-container-processes\"}}>{`---- Inspect Container Processes`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`From the outside, we can run `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`docker exec`}</MDXTag>{` to get some more details about the container itself.`}</MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`docker exec container_name /bin/ps aux | grep bash`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`We can use `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`docker top`}</MDXTag>{` to see the top command run on a container.`}</MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`docker top container_name`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`Let's execute a command to install `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`sshd`}</MDXTag>{`. We could attach to container and do so, but we have a few options. Instead of attaching, we could do the following:`}</MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`docker exec -i -t container_name /bin/bash`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`This will ensure that the container doesn't stop, but will actually run two instances of `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`bash`}</MDXTag>{`. We can verify this by looking at the container processes.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`So far, this can give us a momentary snap shot.`}</MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"strong\" components={components} parentName=\"p\">{`See the history of previous processes and performances`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`We can use `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`docker stats`}</MDXTag>{` to see a live set of information for that container.`}</MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`dock stats container_name`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`This will keep a view that is constantly updated to see what is going on.`}</MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"-----previous-container-management\"}}>{`---- Previous Container Management`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Just to see the previous containers not running with just their ids, we can run `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`docker ps -a -q`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`Of course, for removing older containers, we can `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`docker rm`}</MDXTag>{` previous containers.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`We can also remove containers from the `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`/var/lib/docker`}</MDXTag>{` folder as the super user. If you do it this way, you want to ensure that you have `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`systemctl stop/restart docker`}</MDXTag>{` to ensure that there aren't any issues with Docker.`}</MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"-----controlling-port-exposure-on-containers\"}}>{`---- Controlling Port Exposure on Containers`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`In this example, start up a nginx container in daemon mode without remapping the ports.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Again, we can inspect this container to find the IP etc. We know that we can get anything remapped to the localhost currently because there is no remapping.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`In contrast, we can use `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`-P`}</MDXTag>{` to expose the ports and it will auto remap to high port value.`}</MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`-p 8080:80`}</MDXTag>{` will be use defining the port that we want to expose it to.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`If we want to define a certain interface eg. localhost...`}</MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`docker run -itd -p 127.0.01:8081:80 nginx:latest`}</MDXTag>{` would ONLY allow localhost to access this site.`}</MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"-----naming-containers\"}}>{`---- Naming Containers`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`To rename containers, we can run `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`docker rename currentname newname`}</MDXTag>{` - you can even rename container IDs, although there is likely no point.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`You can also rename running containers!`}</MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"-----docker-events\"}}>{`---- Docker Events`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`How can we monitor certain events?`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Startup a few containers.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`When we interact with them, certain events are generated.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`If we run `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`docker events`}</MDXTag>{`, it will begin a program to wait and register certain events.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`If we run `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`docker events --since '1h'`}</MDXTag>{`, we can then see all the events that have happened in the last hour.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`If we run just `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`docker events`}</MDXTag>{` and run a `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`dok exec -it mycontainerid /bin/bash`}</MDXTag>{` command, we will then see those events registered. This is useful for debugging and monitoring the entire host.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`We may not care about every event though. What happens if we just care about an attachment?`}</MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`docker events --filter <keyword>`}</MDXTag>{` can then be used to filter for events we care about.`}</MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`docker events --filter event=attach`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`We can also filter for multiple events with multiple `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`--filter event=<event>`}</MDXTag></MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"-----managing-and-removing-base-images\"}}>{`---- Managing and Removing Base Images`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`If you remove an image by name, then if there is a double up of the same ID, it will just remove the named image - however an ID removal will warn you if they share the ID. They only way to remove all of them is to use the force `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`-f`}</MDXTag>{` flag.`}</MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"-----saving-and-loading-docker-images\"}}>{`---- Saving and Loading Docker Images`}</MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"strong\" components={components} parentName=\"p\">{`Saving`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`When we pull images, we can pull from local or from Docker Hub. You will use base of an official release usually etc.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`How can we manage our custom images? We can `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`tar`}</MDXTag>{` any file and migrate it to another compute etc.`}</MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`docker commit containername centos:mine`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`This will allow us to save the image but remove the containers!`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`We can use`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{}}>{`docker save --output centos.latest.tar centos:latest\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`If you `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`ls`}</MDXTag>{` the tar file, it will give you details about the image/container.`}</MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"strong\" components={components} parentName=\"p\">{`Restoring`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`docker load --input centos.latest.tar`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`If we have `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`gzip`}</MDXTag>{` a tar file, we can also load it directly from the `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`.tar.gz`}</MDXTag>{` file.`}</MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"-----image-history\"}}>{`---- Image History`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`How can we get the history of the base image?`}</MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`docker history imagename`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`This will give us a list of commands etc.`}</MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"-----take-control-of-our-tags\"}}>{`---- Take Control of Our Tags`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Changes in the container is what is kept in storage layering.`}</MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`docker tag imageid mine/centos:v1.0`}</MDXTag>{` - this will create a new image with the repo tag.`}</MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`docker tag mine/centos:v1.0 dok.example.com/centos:v1.0b`}</MDXTag>{` will do the same.`}</MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"-----pushing-to-docker-hub\"}}>{`---- Pushing to Docker Hub`}</MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`docker login --username=name`}</MDXTag>{` throw in the password and you'll be authenticated.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`One authenticated, `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`docker push image`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`Of course, to bring it back down, you will hit `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`docker pull name`}</MDXTag></MDXTag>\n<MDXTag name=\"hr\" components={components}></MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"integration-and-use-cases\"}}>{`Integration and Use Cases`}</MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"-----building-a-web-farm-for-development-and-testing\"}}>{`---- Building a Web Farm for Development and Testing`}</MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"em\" components={components} parentName=\"p\">{`Prerequisites`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`So far, we have not had a specific purpose for Docker containers. These following examples are for real world use cases.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Set up a web farm with two Apache web nodes on port 80 - both sharing one or more file systems.`}</MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"em\" components={components} parentName=\"p\">{`Part One`}</MDXTag></MDXTag>\n           </MDXTag>\n  }\n}\n  "]}]}