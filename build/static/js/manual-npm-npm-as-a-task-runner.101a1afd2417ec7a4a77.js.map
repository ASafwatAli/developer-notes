{"version":3,"sources":["/Users/dennis.okeeffe/Project-Imposter/developer-notes/manual/npm/NPM-as-a-Task-Runner.md"],"names":["layoutProps","MDXLayout","MDXContent","_ref","components","props","Object","_Users_dennis_okeeffe_Project_Imposter_developer_notes_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","_mdx_js_react__WEBPACK_IMPORTED_MODULE_2__","assign","mdxType","parentName","start","isMDXComponent"],"mappings":"0XAWMA,EAAc,GAGdC,EAAY,UACH,SAASC,EAATC,GAGZ,IAFDC,EAECD,EAFDC,WACGC,EACFC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,gBACD,OAAOG,OAAAE,EAAA,EAAAF,CAACL,EAADK,OAAAG,OAAA,GAAeT,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYM,QAAQ,cAC5EJ,OAAAE,EAAA,EAAAF,CAAA,iCACAA,OAAAE,EAAA,EAAAF,CAAA,qDACAA,OAAAE,EAAA,EAAAF,CAAA,yBACAA,OAAAE,EAAA,EAAAF,CAAA,UACEA,OAAAE,EAAA,EAAAF,CAAA,MAAIK,WAAW,MAAf,kBACAL,OAAAE,EAAA,EAAAF,CAAA,MAAIK,WAAW,MAAf,yCACAL,OAAAE,EAAA,EAAAF,CAAA,MAAIK,WAAW,MAAf,yBACAL,OAAAE,EAAA,EAAAF,CAAA,MAAIK,WAAW,MAAf,sBAEFL,OAAAE,EAAA,EAAAF,CAAA,6EACAA,OAAAE,EAAA,EAAAF,CAAA,aAAQA,OAAAE,EAAA,EAAAF,CAAA,cAAYK,WAAW,KAAvB,UAAR,OAAkEL,OAAAE,EAAA,EAAAF,CAAA,cAAYK,WAAW,KAAvB,UAAlE,KACAL,OAAAE,EAAA,EAAAF,CAAA,sCACAA,OAAAE,EAAA,EAAAF,CAAA,oBAAeA,OAAAE,EAAA,EAAAF,CAAA,cAAYK,WAAW,KAAvB,UAAf,KACAL,OAAAE,EAAA,EAAAF,CAAA,4BACAA,OAAAE,EAAA,EAAAF,CAAA,UACEA,OAAAE,EAAA,EAAAF,CAAA,MAAIK,WAAW,MAAf,aAEFL,OAAAE,EAAA,EAAAF,CAAA,UACEA,OAAAE,EAAA,EAAAF,CAAA,MAAIK,WAAW,MAAf,gBACAL,OAAAE,EAAA,EAAAF,CAAA,MAAIK,WAAW,MAAf,mDAEFL,OAAAE,EAAA,EAAAF,CAAA,KAAQ,CACNM,MAAS,GAETN,OAAAE,EAAA,EAAAF,CAAA,MAAIK,WAAW,MAAf,cAEFL,OAAAE,EAAA,EAAAF,CAAA,UACEA,OAAAE,EAAA,EAAAF,CAAA,MAAIK,WAAW,MAAf,oBACAL,OAAAE,EAAA,EAAAF,CAAA,MAAIK,WAAW,MAAf,uBAEFL,OAAAE,EAAA,EAAAF,CAAA,0DACAA,OAAAE,EAAA,EAAAF,CAAA,uEACAA,OAAAE,EAAA,EAAAF,CAAA,qFACAA,OAAAE,EAAA,EAAAF,CAAA,0DACAA,OAAAE,EAAA,EAAAF,CAAA,4DACAA,OAAAE,EAAA,EAAAF,CAAA,mDACAA,OAAAE,EAAA,EAAAF,CAAA,mDACAA,OAAAE,EAAA,EAAAF,CAAA,6BACAA,OAAAE,EAAA,EAAAF,CAAA,oEACAA,OAAAE,EAAA,EAAAF,CAAA,uDACAA,OAAAE,EAAA,EAAAF,CAAA,+CACAA,OAAAE,EAAA,EAAAF,CAAA,sDACAA,OAAAE,EAAA,EAAAF,CAAA,yHAEAA,OAAAE,EAAA,EAAAF,CAAA,uEAEAA,OAAAE,EAAA,EAAAF,CAAA,yCACAA,OAAAE,EAAA,EAAAF,CAAA,4GACAA,OAAAE,EAAA,EAAAF,CAAA,mDAEAA,OAAAE,EAAA,EAAAF,CAAA,0BACAA,OAAAE,EAAA,EAAAF,CAAA,6BACAA,OAAAE,EAAA,EAAAF,CAAA,kCAA6BA,OAAAE,EAAA,EAAAF,CAAA,MAAIK,WAAW,KAAf,0BAA7B,gBACAL,OAAAE,EAAA,EAAAF,CAAA,+BACAA,OAAAE,EAAA,EAAAF,CAAA,mCACAA,OAAAE,EAAA,EAAAF,CAAA,qGACAA,OAAAE,EAAA,EAAAF,CAAA,oPAIJJ,EAAWW,gBAAiB","file":"static/js/manual-npm-npm-as-a-task-runner.6d4cc82d.js","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <p>{`NPM as a Task Runner`}</p>\n    <p>{`What is a task? Something we need to do.`}</p>\n    <p>{`Common Tasks`}</p>\n    <ul>\n      <li parentName=\"ul\">{`run test suite`}</li>\n      <li parentName=\"ul\">{`compilng Sass/TypeScript/CoffeeScript`}</li>\n      <li parentName=\"ul\">{`starting a web server`}</li>\n      <li parentName=\"ul\">{`starting a worker`}</li>\n    </ul>\n    <p>{`npm tasks are called scripts -> add to 'scripts' in package.json`}</p>\n    <p>{`\"`}<inlineCode parentName=\"p\">{`<name>`}</inlineCode>{`\": \"`}<inlineCode parentName=\"p\">{`<code>`}</inlineCode>{`\"`}</p>\n    <p>{`then you can simply go...`}</p>\n    <p>{`npm run `}<inlineCode parentName=\"p\">{`<name>`}</inlineCode>{`!`}</p>\n    <p>{`Types of tasks:`}</p>\n    <ol>\n      <li parentName=\"ol\">{`Built-in`}</li>\n    </ol>\n    <ul>\n      <li parentName=\"ul\">{`eg tests etc`}</li>\n      <li parentName=\"ul\">{`can be run as npm test instead of npm run test`}</li>\n    </ul>\n    <ol {...{\n      \"start\": 2\n    }}>\n      <li parentName=\"ol\">{`Arbitrary`}</li>\n    </ol>\n    <ul>\n      <li parentName=\"ul\">{`requires a \"run\"`}</li>\n      <li parentName=\"ul\">{`eg npm run compile`}</li>\n    </ul>\n    <p>{`For getting a project ready to be deployed...`}</p>\n    <p>{`in the tests folder... test_dice.js //used in this example`}</p>\n    <p>{`mocha is used as a mocha and uglify-js to compile all js files into one.`}</p>\n    <p>{`Often encouraged to save global test scripts.`}</p>\n    <p>{`node_modules/.bin/mocha //this is an executable`}</p>\n    <p>{`Can run from npm without writing this.`}</p>\n    <p>{`Change \"test\": \"mocha\" in the scripts.`}</p>\n    <p>{`now we can go...`}</p>\n    <p>{`npm run test //don't even need run since it is built-in`}</p>\n    <p>{`//////////////////////////////////////////`}</p>\n    <p>{`Creating our own arbitrary scripts`}</p>\n    <p>{`We can use the uglify to create an app.js`}</p>\n    <p>{`Large, annoying code...\nnode_modules/.bin/uglifyjs src/models/`}{`*`}{` src/frontend.js -m -c -o build/app.js`}</p>\n    <p>{`//m flag reduces some names\n//c combines into single file`}</p>\n    <p>{`INSTEAD, CREATE OUR OWN TASK`}</p>\n    <p>{`\"uglify\": \"node_modules/.bin/uglifyjs src/models/`}{`*`}{` src/frontend.js -m -c -o build/app.js\"`}</p>\n    <p>{`Now, we can just type:\nnpm run uglify`}</p>\n    <p>{`And TADAAAAA!`}</p>\n    <p>{`For our css etc.`}</p>\n    <p>{`\"copy-files\": \"cp src/`}<em parentName=\"p\">{`.html build/ & cp src/`}</em>{`.css build/\"`}</p>\n    <p>{`npm run copy-files`}</p>\n    <p>{`Now for a single task!`}</p>\n    <p>{`\"build\": \"npm run copy-files && npm run uglify\" //&& run sequentially, & run in parallel`}</p>\n    <p>{`npm help scripts //shows other default scripts`}</p>\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  "],"sourceRoot":""}