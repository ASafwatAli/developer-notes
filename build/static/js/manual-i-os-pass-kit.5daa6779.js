(window.webpackJsonp=window.webpackJsonp||[]).push([[213],{"./manual/iOS/PassKit.md":function(e,n,a){"use strict";a.r(n),a.d(n,"default",function(){return i});var t=a("./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js"),s=(a("./node_modules/react/index.js"),a("./node_modules/@mdx-js/react/dist/index.es.js")),r={},o="wrapper";function i(e){var n=e.components,a=Object(t.a)(e,["components"]);return Object(s.b)(o,Object.assign({},r,a,{components:n,mdxType:"MDXLayout"}),Object(s.b)("h1",{id:"passkit"},"PassKit"),Object(s.b)("ul",null,Object(s.b)("li",{parentName:"ul"},Object(s.b)("a",Object.assign({parentName:"li"},{href:"#passkit"}),"PassKit"),"\n- ",Object(s.b)("a",Object.assign({parentName:"li"},{href:"#adding-the-certificate"}),"Adding the certificate"),"\n- ",Object(s.b)("a",Object.assign({parentName:"li"},{href:"#php-server"}),"PHP Server"),"\n- ",Object(s.b)("a",Object.assign({parentName:"li"},{href:"#plan-ticket-example"}),"Plan ticket example"),"\n- ",Object(s.b)("a",Object.assign({parentName:"li"},{href:"#store-card-example"}),"Store card example"),"\n- ",Object(s.b)("a",Object.assign({parentName:"li"},{href:"#more-info"}),"More info"))),Object(s.b)("h2",{id:"adding-the-certificate"},"Adding the certificate"),Object(s.b)("p",null,"Head to the iOS dev portal and add the appropriate certificate."),Object(s.b)("p",null,"You may need to open Keychain access to generate a new key using ",Object(s.b)("inlineCode",{parentName:"p"},"Keychain Access > Certificate Assistant > Req Cert from Cert Auth")," and generate a new cert. This cert will be used to generate what you need to import into Keychain Access from the dev portal."),Object(s.b)("p",null,"Once created, export it to a folder for the server."),Object(s.b)("h2",{id:"php-server"},"PHP Server"),Object(s.b)("p",null,"Using ",Object(s.b)("inlineCode",{parentName:"p"},"composer"),", you can build out a scaffold using the Slim Framework:"),Object(s.b)("p",null,Object(s.b)("inlineCode",{parentName:"p"},"composer create-project slim/slim-skeleton [project-name]"),"."),Object(s.b)("p",null,"To install the PHP PassKit helper, run ",Object(s.b)("inlineCode",{parentName:"p"},"composer require pkpass/pkpass"),"."),Object(s.b)("p",null,"Once built, you can then hit the routes and just require the pkpass and the routes file may end up looking like this:"),Object(s.b)("h3",{id:"plan-ticket-example"},"Plan ticket example"),Object(s.b)("pre",null,Object(s.b)("code",Object.assign({parentName:"pre"},{className:"language-php"}),"<?php\n// Routes\nuse PKPass\\PKPass;\n\n$app->get('/', function ($request, $response, $args) {\n    // Sample log message\n    $this->logger->info(\"Slim-Skeleton '/' route\");\n\n    // Render index view\n    return $this->renderer->render($response, 'sample.phtml', $args);\n});\n\n$app->get('/pass', function ($request, $response, $args) {\n    // Sample log message\n    $this->logger->info(\"Slim-Skeleton '/pass' route\");\n\n    $pass = new PKPass('<name>.p12', '<insert-password>');\n\n    // Pass content\n    $data = [\n        'description' => 'Demo pass',\n        'formatVersion' => 1,\n        'organizationName' => 'Flight Express',\n        'passTypeIdentifier' => 'pass.com.<teamname>.<passname>', // Change this!\n        'serialNumber' => '12345678',\n        'teamIdentifier' => '<insert-team-id>', // Change this! Found on Apple Dev Portal\n        'boardingPass' => [\n            'primaryFields' => [\n                [\n                    'key' => 'origin',\n                    'label' => 'San Francisco',\n                    'value' => 'SFO',\n                ],\n                [\n                    'key' => 'destination',\n                    'label' => 'London',\n                    'value' => 'LHR',\n                ],\n            ],\n            'secondaryFields' => [\n                [\n                    'key' => 'gate',\n                    'label' => 'Gate',\n                    'value' => 'F12',\n                ],\n                [\n                    'key' => 'date',\n                    'label' => 'Departure date',\n                    'value' => '07/11/2012 10:22',\n                ],\n            ],\n            'backFields' => [\n                [\n                    'key' => 'passenger-name',\n                    'label' => 'Passenger',\n                    'value' => 'John Appleseed',\n                ],\n            ],\n            'transitType' => 'PKTransitTypeAir',\n        ],\n        'barcode' => [\n            'format' => 'PKBarcodeFormatQR',\n            'message' => 'Flight-GateF12-ID6643679AH7B',\n            'messageEncoding' => 'iso-8859-1',\n        ],\n        'backgroundColor' => 'rgb(32,110,247)',\n        'logoText' => 'Flight info',\n        'relevantDate' => date('Y-m-d\\TH:i:sP')\n    ];\n\n    $pass->setWWDRcertPath('<path to wwdr.pem>');\n    $pass->setData($data);\n\n    // Add files to the pass package\n    $pass->addFile('public/icon.png');\n    $pass->addFile('public/icon@2x.png');\n    $pass->addFile('public/logo.png');\n\n    if($pass->checkError($error) == true) {\n        // echo $error;\n        // exit('An error occured: ' . $error);\n    }\n\n    // echo 'Here';\n\n    $result = $pass->create(true);\n    if($result == false) {\n        echo $pass->getError();\n    }\n    // Render index view\n    return $result;\n});\n")),Object(s.b)("h3",{id:"store-card-example"},"Store card example"),Object(s.b)("pre",null,Object(s.b)("code",Object.assign({parentName:"pre"},{className:"language-php"}),"<?php\n// Routes\nuse PKPass\\PKPass;\n\n$app->get('/', function ($request, $response, $args) {\n    // Sample log message\n    $this->logger->info(\"Slim-Skeleton '/' route\");\n\n    // Render index view\n    return $this->renderer->render($response, 'sample.phtml', $args);\n});\n\n$app->get('/pass', function ($request, $response, $args) {\n    // Sample log message\n    $this->logger->info(\"Slim-Skeleton '/pass' route\");\n\n    $pass = new PKPass('<key-path>', 'password');\n\n    // Pass content\n    $data = [\n        'formatVersion' => 1,\n        'organizationName' => 'Testing',\n        'passTypeIdentifier' => 'pass.com.<id>.<app>', // Change this!\n        'serialNumber' => '12345678',\n        'teamIdentifier' => '<team-id>', // Change this!\n        'logoText' => 'Loyalty',\n        'description' => 'Rewards card',\n        'storeCard' => [\n            'secondaryFields' => [\n                [\n                    'key' => 'balance',\n                    'label' => 'BALANCE',\n                    'value' => '$250.00'\n                ],\n                [\n                    'key' => 'name',\n                    'label' => 'NICKNAME',\n                    'value' => 'Denno'\n                ],\n            ],\n            'backFields' => [\n                [\n                    'key' => 'owner-name',\n                    'label' => 'Rewards Card',\n                    'value' => 'John Appleseed'\n                ],\n            ]\n        ],\n        'barcode' => [\n            'format' => 'PKBarcodeFormatPDF417',\n            'message' => 'ID6643679AH7B',\n            'messageEncoding' => 'iso-8859-1',\n            'altText' => 'ID6643679AH7B'\n        ],\n        'backgroundColor' => 'rgb(32,110,247)',\n        'logoText' => 'Dummy card info'\n    ];\n\n    $pass->setWWDRcertPath('<wwdr-key>');\n    $pass->setData($data);\n\n    // Add files to the pass package\n    $pass->addFile('public/icon.png');\n    $pass->addFile('public/icon@2x.png');\n    $pass->addFile('public/logo.png');\n\n    if($pass->checkError($error) == true) {\n        // echo $error;\n        // exit('An error occured: ' . $error);\n    }\n\n    // echo 'Here';\n\n    $result = $pass->create(true);\n    if($result == false) {\n        echo $pass->getError();\n    }\n    // Render index view\n    return $result;\n});\n\n?>\n")),Object(s.b)("h2",{id:"more-info"},"More info"),Object(s.b)("p",null,"If you need to generate a wwdr cert, you can globally install ",Object(s.b)("inlineCode",{parentName:"p"},"passbook")," eg. ",Object(s.b)("inlineCode",{parentName:"p"},"node install -g passbook")," and run a command like ",Object(s.b)("inlineCode",{parentName:"p"},"node-passbook prepare-keys -p <folder-hosting-exported-keys>")," and it can do the conversion for you. Make sure you don't forget the password, though."),Object(s.b)("p",null,"Some changes you may need to make are passing ",Object(s.b)("inlineCode",{parentName:"p"},"POST")," variables to change it for each user."),Object(s.b)("p",null,"If you need to change the JSON structure above, refer to ",Object(s.b)("a",Object.assign({parentName:"p"},{href:"https://developer.apple.com/library/content/documentation/UserExperience/Reference/PassKit_Bundle/Chapters/Introduction.html"}),"https://developer.apple.com/library/content/documentation/UserExperience/Reference/PassKit_Bundle/Chapters/Introduction.html")," for more info."))}i&&i===Object(i)&&Object.isExtensible(i)&&Object.defineProperty(i,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"MDXContent",filename:"manual/iOS/PassKit.md"}}),i.isMDXComponent=!0}}]);
//# sourceMappingURL=manual-i-os-pass-kit.101a1afd2417ec7a4a77.js.map