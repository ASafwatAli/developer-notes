{"version":3,"sources":["/Users/dennis.okeeffe/Project-Imposter/developer-notes/manual/Yarn/Workspaces-In-Yarn.md"],"names":["layoutProps","MDXLayout","MDXContent","_ref","components","props","Object","_Users_dennis_okeeffe_Project_Imposter_developer_notes_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","_mdx_js_react__WEBPACK_IMPORTED_MODULE_2__","assign","mdxType","id","parentName","href","align","className","isMDXComponent"],"mappings":"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","file":"static/js/manual-yarn-workspaces-in-yarn.ec6a0350.js","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"yarn-workspaces\"\n    }}>{`Yarn Workspaces`}</h1>\n    <p>{`Notes from this come from the official Yarn article `}<a parentName=\"p\" {...{\n        \"href\": \"https://yarnpkg.com/blog/2017/08/02/introducing-workspaces/\"\n      }}>{`found here`}</a>{`.`}</p>\n    <h2 {...{\n      \"id\": \"tldr-key-commands\"\n    }}>{`tl;dr Key Commands`}</h2>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Command`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Function`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`yarn config set workspaces-experimental true`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Initialises Workspaces`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <h2 {...{\n      \"id\": \"introduction\"\n    }}>{`Introduction`}</h2>\n    <blockquote>\n      <p parentName=\"blockquote\">{`Those who have tried splitting a project into multiple packages know how hard it is to make changes across multiple packages at one time. To make the process easier, some big projects adopted a monorepo approach, or multi-package repositories, which reduces the burden of writing code across packages.`}</p>\n    </blockquote>\n    <h2 {...{\n      \"id\": \"lerna\"\n    }}>{`Lerna`}</h2>\n    <ul>\n      <li parentName=\"ul\">{`A tool to optimize workflow around managing multi-package repos.`}</li>\n      <li parentName=\"ul\">{`Being a wrapper of a package manager, Lerna can't manipulate contents of `}<inlineCode parentName=\"li\">{`node_modules`}</inlineCode>{` efficiently, hence Workspaces.`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"workspaces\"\n    }}>{`Workspaces`}</h2>\n    <p>{`Yarn Workspaces is a feature that allows users to install dependencies from multiple package.json files in subfolders of a single root package.json file, all in one go.`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Enables faster, lighter installation. Also creates symlinks between Workspaces that depend on each other, and will ensure the consistencvy and correcvtness of all directories.`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"example-jest-workspace\"\n    }}>{`Example: Jest Workspace`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`| jest/\n| ---- package.json\n| ---- packages/\n| -------- jest-matcher-utils/\n| ------------ package.json\n| -------- jest-diff/\n| ------------ package.json\n...\n`}</code></pre>\n    <p>{`Example root `}<inlineCode parentName=\"p\">{`package.json`}</inlineCode>{` file. Generally kept as private.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`{\n  \"private\": true,\n  \"name\": \"jest\",\n  \"devDependencies\": {\n    \"chalk\": \"^2.0.1\"\n  },\n  \"workspaces\": [\"packages/*\"]\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"how-yarn-install-works-with-workspaces\"\n    }}>{`How yarn install works with workspaces`}</h2>\n    <p>{`Take the following two packages within Jest:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`// First package.json\n{\n  \"name\": \"jest-matcher-utils\",\n  \"description\": \"...\",\n  \"version\": \"20.0.3\",\n  \"license\": \"...\",\n  \"main\": \"...\",\n  \"browser\": \"...\",\n  \"dependencies\": {\n    \"chalk\": \"^1.1.3\",\n    \"pretty-format\": \"^20.0.3\"\n  }\n}\n\n// Second package.json\n{\n  \"name\": \"jest-diff\",\n  \"version\": \"20.0.3\",\n  \"license\": \"...\",\n  \"main\": \"...\",\n  \"browser\": \"...\",\n  \"dependencies\": {\n    \"chalk\": \"^1.1.3\",\n    \"diff\": \"^3.2.0\",\n    \"jest-matcher-utils\": \"^20.0.3\",\n    \"pretty-format\": \"^20.0.3\"\n  }\n}\n`}</code></pre>\n    <p>{`Running `}<inlineCode parentName=\"p\">{`yarn install`}</inlineCode>{` from anywhere within the projects yields the following:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`| jest/\n| ---- node_modules/\n| -------- chalk/\n| -------- diff/\n| -------- pretty-format/\n| -------- jest-matcher-utils/  (symlink) -> ../packages/jest-matcher-utils\n| ---- package.json\n| ---- packages/\n| -------- jest-matcher-utils/\n| ------------ node_modules/\n| ---------------- chalk/\n| ------------ package.json\n| -------- jest-diff/\n| ------------ node_modules/\n| ---------------- chalk/\n| ------------ package.json\n...\n`}</code></pre>\n    <blockquote>\n      <p parentName=\"blockquote\">{`Packages like `}<inlineCode parentName=\"p\">{`diff`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`pretty-format`}</inlineCode>{` and the symlink to `}<inlineCode parentName=\"p\">{`jest-matcher-utils`}</inlineCode>{` were hoisted to the root node_modules directory, making the installation faster and smaller. The package `}<inlineCode parentName=\"p\">{`chalk`}</inlineCode>{` however could not be moved to the root because the root already depends on a different, incompatible version of `}<inlineCode parentName=\"p\">{`chalk`}</inlineCode>{`.`}</p>\n    </blockquote>\n    <h2 {...{\n      \"id\": \"managing-dependecies\"\n    }}>{`Managing Dependecies`}</h2>\n    <p>{`Run the installation within the desired `}<inlineCode parentName=\"p\">{`package`}</inlineCode>{`:`}</p>\n    <blockquote>\n      <p parentName=\"blockquote\">{`Note: that Workspaces don’t have their own yarn.lock files, and the root yarn.lock contains all the dependencies for all the Workspaces. When you want to change a dependency inside a Workspace, the root yarn.lock will be changed as well as the Workspace’s package.json.`}</p>\n    </blockquote>\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  "],"sourceRoot":""}