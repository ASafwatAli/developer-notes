(window.webpackJsonp=window.webpackJsonp||[]).push([[124],{"./manual/Design-Patterns/Singleton.md":function(n,e,t){"use strict";t.r(e),t.d(e,"default",function(){return i});var o=t("./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js"),s=(t("./node_modules/react/index.js"),t("./node_modules/@mdx-js/react/dist/index.es.js")),a={},l="wrapper";function i(n){var e=n.components,t=Object(o.a)(n,["components"]);return Object(s.b)(l,Object.assign({},a,t,{components:e,mdxType:"MDXLayout"}),Object(s.b)("h1",{id:"singleton"},"Singleton"),Object(s.b)("p",null,"Another creational design pattern used to ensure there is only ever one instance in use."),Object(s.b)("pre",null,Object(s.b)("code",Object.assign({parentName:"pre"},{className:"language-javascript"}),"class Singleton {\n  private static instance: Singleton;\n  public value: number = 4;\n\n  private constructor() {}\n\n  static getSharedInstance() {\n    if (!Singleton.instance) {\n      Singleton.instance = new Singleton();\n    }\n\n    return Singleton.instance;\n  }\n}\n\nconst singletonOne = Singleton.getSharedInstance();\nsingletonOne.value = 12;\nconsole.log('S1 value:', singletonOne.value); // 12\n\nconst singletonTwo = Singleton.getSharedInstance();\nsingletonTwo.value = 21;\nconsole.log('S2 value:', singletonTwo.value); // 21\nconsole.log('S1 value:', singletonOne.value); // 21\n")))}i&&i===Object(i)&&Object.isExtensible(i)&&Object.defineProperty(i,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"MDXContent",filename:"manual/Design-Patterns/Singleton.md"}}),i.isMDXComponent=!0}}]);
//# sourceMappingURL=manual-design-patterns-singleton.101a1afd2417ec7a4a77.js.map