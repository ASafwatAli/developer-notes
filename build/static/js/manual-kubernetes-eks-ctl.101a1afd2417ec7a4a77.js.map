{"version":3,"sources":["/Users/dennis.okeeffe/Project-Imposter/developer-notes/manual/Kubernetes/EKS-Ctl.md"],"names":["layoutProps","MDXLayout","MDXContent","_ref","components","props","Object","_Users_dennis_okeeffe_Project_Imposter_developer_notes_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","_mdx_js_react__WEBPACK_IMPORTED_MODULE_2__","assign","mdxType","id","parentName","href","align","className","alt","src","isMDXComponent"],"mappings":"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","file":"static/js/manual-kubernetes-eks-ctl.f4de3915.js","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"eksctl\"\n    }}>{`eksctl`}</h1>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"https://eksctl.io/\"\n      }}>{`https://eksctl.io/`}</a></p>\n    <h2 {...{\n      \"id\": \"tldr\"\n    }}>{`tl;dr`}</h2>\n    <h3 {...{\n      \"id\": \"clusters\"\n    }}>{`Clusters`}</h3>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Action`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Command`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Get cluster`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`eksctl get cluster [--name=<name>] [--region=<region>]`}</inlineCode></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Create cluster`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`eksctl create cluster --name=cluster-1 --nodes=4`}</inlineCode></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Write kubeconfig`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`eksctl utils write-kubeconfig --name=<name> [--kubeconfig=<path>] [--set-kubeconfig-context=<bool>]`}</inlineCode></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Delete cluster`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`eksctl delete cluster --name=<name> [--region=<region>]`}</inlineCode></td>\n        </tr>\n      </tbody>\n    </table>\n    <p>{`eksctl create cluster --name=cluster-3 --nodes=4 --auto-kubeconfig`}</p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Action`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Flag`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Example`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Name the cluster`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`--name`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`eksctl create cluster --name=cluster-3`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Set default node count`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`--nodes`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`eksctl create cluster --nodes=4`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Auto configure kubectl`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`--auto-kubeconfig`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`eksctl create cluster --auto-kubeconfig`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Use an auth scaling group`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`--nodes-min, --nodes-max`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`eksctl create cluster --nodes-min=3 --nodes-max=5`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <h3 {...{\n      \"id\": \"node-groups\"\n    }}>{`Node Groups`}</h3>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Action`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Command`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Get nodegroup`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`eksctl get nodegroup --cluster=<clusterName> [--name=<nodegroupName>]`}</inlineCode></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Create nodegroup`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`eksctl create nodegroup --cluster=<clusterName> [--name=<nodegroupName>]`}</inlineCode></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Scale nodegroup`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`eksctl scale nodegroup --cluster=cluster-1 --nodes=5 ng-a345f4e1`}</inlineCode></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Delete nodegroup`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`eksctl delete nodegroup --cluster=<clusterName> --nodes=<desiredCount> --name=<nodegroupName>`}</inlineCode></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`SSH Access Flag`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`--ssh-access`}</inlineCode></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Full ECR Access`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`--full-ecr-access`}</inlineCode></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Enable autoscaling`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`--asg-access`}</inlineCode></td>\n        </tr>\n      </tbody>\n    </table>\n    <p>{`Once clsuter is running, you'll need to add the autoscaler yourself. See `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/kubernetes/autoscaler/blob/master/cluster-autoscaler/cloudprovider/aws/README.md\"\n      }}>{`https://github.com/kubernetes/autoscaler/blob/master/cluster-autoscaler/cloudprovider/aws/README.md`}</a>{`.`}</p>\n    <h3 {...{\n      \"id\": \"creating-a-cluster-using-a-config-file-instead-of-flags\"\n    }}>{`Creating a cluster using a config file instead of flags`}</h3>\n    <p>{`You can create a cluster using a config file instead of flags.`}</p>\n    <p>{`First, create cluster.yaml file:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-yaml\"\n      }}>{`apiVersion: eksctl.io/v1alpha3\nkind: ClusterConfig\n\nmetadata:\n  name: basic-cluster\n  region: eu-north-1\n\nnodeGroups:\n  - name: ng-1\n    instanceType: m5.large\n    desiredCapacity: 10\n`}</code></pre>\n    <p>{`Next, run this command:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`eksctl create cluster -f cluster.yaml\n`}</code></pre>\n    <p>{`This will create a cluster as described.`}</p>\n    <p>{`If you needed to use an existing VPC, you can use a config file like this:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-yaml\"\n      }}>{`apiVersion: eksctl.io/v1alpha3\nkind: ClusterConfig\n\nmetadata:\n  name: cluster-in-existing-vpc\n  region: eu-north-1\n\nvpc:\n  subnets:\n    private:\n      eu-north-1a: {id: subnet-0ff156e0c4a6d300c}\n      eu-north-1b: {id: subnet-0549cdab573695c03}\n      eu-north-1c: {id: subnet-0426fb4a607393184}\n\nnodeGroups:\n  - name: ng-1-workers\n    labels: {role: workers}\n    instanceType: m5.xlarge\n    desiredCapacity: 10\n    privateNetworking: true\n  - name: ng-2-builders\n    labels: {role: builders}\n    instanceType: m5.2xlarge\n    desiredCapacity: 2\n    privateNetworking: true\n    iam:\n      withAddonPolicies:\n        imageBuilder: true\n`}</code></pre>\n    <p>{`See `}<img alt=\"examples/\" src=\"https://github.com/weaveworks/eksctl/tree/master/examples\" />{` directory for more sample config files.`}</p>\n    <h2 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h2>\n    <p>{`To download the latest release, run:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`curl --silent --location \"https://github.com/weaveworks/eksctl/releases/download/latest_release/eksctl_$(uname -s)_amd64.tar.gz\" | tar xz -C /tmp\nsudo mv /tmp/eksctl /usr/local/bin\n`}</code></pre>\n    <p>{`Alternatively, macOS users can use Homebrew:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`brew install weaveworks/tap/eksctl\n`}</code></pre>\n    <p>{`You will need to have AWS API credentials configured. What works for AWS CLI or any other tools (kops, Terraform etc), should be sufficient. You can use `}<inlineCode parentName=\"p\">{`~/.aws/credentials`}</inlineCode>{` file or environment variables. For more information read AWS documentation.`}</p>\n    <p>{`To create a basic cluster, run:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`eksctl create cluster\n`}</code></pre>\n    <p>{`A cluster will be created with default parameters:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Exciting auto-generated name, e.g. \"fabulous-mushroom-1527688624\"`}</li>\n      <li parentName=\"ul\">{`2x m5.large nodes (this instance type suits most common use-cases, and is good value for money)`}</li>\n      <li parentName=\"ul\">{`Use official AWS EKS AMI`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`us-west-2`}</inlineCode>{` region`}</li>\n      <li parentName=\"ul\">{`Dedicated VPC (check your quotas)`}</li>\n      <li parentName=\"ul\">{`Using static AMI resolver`}</li>\n    </ul>\n    <h3 {...{\n      \"id\": \"example-output\"\n    }}>{`Example output`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`$ eksctl create cluster\n[ℹ]  using region us-west-2\n[ℹ]  setting availability zones to [us-west-2c us-west-2a us-west-2b]\n[ℹ]  subnets for us-west-2c - public:192.168.0.0/19 private:192.168.96.0/19\n[ℹ]  subnets for us-west-2a - public:192.168.32.0/19 private:192.168.128.0/19\n[ℹ]  subnets for us-west-2b - public:192.168.64.0/19 private:192.168.160.0/19\n[ℹ]  using \"ami-0ce0ec06e682ee10e\" for nodes\n[ℹ]  creating EKS cluster \"floral-unicorn-1540567338\" in \"us-west-2\" region\n[ℹ]  will create 2 separate CloudFormation stacks for cluster itself and the initial nodegroup\n[ℹ]  if you encounter any issues, check CloudFormation console or try 'eksctl utils describe-stacks --region=us-west-2 --name=floral-unicorn-1540567338'\n[ℹ]  creating cluster stack \"eksctl-floral-unicorn-1540567338-cluster\"\n[ℹ]  creating nodegroup stack \"eksctl-floral-unicorn-1540567338-nodegroup-ng-39d54824\"\n[✔]  all EKS cluster resource for \"floral-unicorn-1540567338\" had been created\n[✔]  saved kubeconfig as \"~/.kube/config\"\n[ℹ]  nodegroup \"ng-39d54824\" has 0 nodes\n[ℹ]  waiting for at least 2 nodes to become ready\n[ℹ]  nodegroup \"ng-39d54824\" has 2 nodes\n[ℹ]  node \"ip-192-168-71-20.us-west-2.compute.internal\" is ready\n[ℹ]  node \"ip-192-168-25-215.us-west-2.compute.internal\" is ready\n[ℹ]  kubectl command should work with \"~/.kube/config\", try 'kubectl get nodes'\n[✔]  EKS cluster \"floral-unicorn-1540567338\" in \"us-west-2\" region is ready\n$\n`}</code></pre>\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  "],"sourceRoot":""}