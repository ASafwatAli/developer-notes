{"version":3,"sources":["/Users/dennis.okeeffe/Project-Imposter/developer-notes/manual/Treat/Playroom-With-Treat.md"],"names":["layoutProps","MDXLayout","MDXContent","_ref","components","props","Object","_Users_dennis_okeeffe_Project_Imposter_developer_notes_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","_mdx_js_react__WEBPACK_IMPORTED_MODULE_2__","assign","mdxType","id","parentName","href","className","isMDXComponent"],"mappings":"2XAWMA,EAAc,GAGdC,EAAY,UACH,SAASC,EAATC,GAGZ,IAFDC,EAECD,EAFDC,WACGC,EACFC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,gBACD,OAAOG,OAAAE,EAAA,EAAAF,CAACL,EAADK,OAAAG,OAAA,GAAeT,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYM,QAAQ,cAC5EJ,OAAAE,EAAA,EAAAF,CAAA,KAAQ,CACNK,GAAM,uBADR,uBAGAL,OAAAE,EAAA,EAAAF,CAAA,mDAA8CA,OAAAE,EAAA,EAAAF,CAAA,IAAAA,OAAAG,OAAA,CAAGG,WAAW,KAAQ,CAChEC,KAAQ,yCADkC,cAG9CP,OAAAE,EAAA,EAAAF,CAAA,yBAAoBA,OAAAE,EAAA,EAAAF,CAAA,cAAYM,WAAW,KAAvB,2BAApB,cAAsGN,OAAAE,EAAA,EAAAF,CAAA,cAAYM,WAAW,KAAvB,sCAAtG,QAA6LN,OAAAE,EAAA,EAAAF,CAAA,cAAYM,WAAW,KAAvB,sCAA7L,YAAwRN,OAAAE,EAAA,EAAAF,CAAA,cAAYM,WAAW,KAAvB,gBAAxR,aACAN,OAAAE,EAAA,EAAAF,CAAA,KAAQ,CACNK,GAAM,6BADR,+BAGAL,OAAAE,EAAA,EAAAF,CAAA,4BAAuBA,OAAAE,EAAA,EAAAF,CAAA,cAAYM,WAAW,KAAvB,sBAAvB,KACAN,OAAAE,EAAA,EAAAF,CAAA,oDACAA,OAAAE,EAAA,EAAAF,CAAA,WAAKA,OAAAE,EAAA,EAAAF,CAAA,OAAAA,OAAAG,OAAA,CAAMG,WAAW,OAAU,CAC5BE,UAAa,wBADZ,8tDAiELR,OAAAE,EAAA,EAAAF,CAAA,KAAQ,CACNK,GAAM,eADR,eAGAL,OAAAE,EAAA,EAAAF,CAAA,4DACAA,OAAAE,EAAA,EAAAF,CAAA,WAAKA,OAAAE,EAAA,EAAAF,CAAA,OAAAA,OAAAG,OAAA,CAAMG,WAAW,OAAU,CAC5BE,UAAa,wBADZ,qHAKLR,OAAAE,EAAA,EAAAF,CAAA,KAAQ,CACNK,GAAM,mBADR,mBAGAL,OAAAE,EAAA,EAAAF,CAAA,uDACAA,OAAAE,EAAA,EAAAF,CAAA,WAAKA,OAAAE,EAAA,EAAAF,CAAA,OAAAA,OAAAG,OAAA,CAAMG,WAAW,OAAU,CAC5BE,UAAa,wBADZ,kfAiBTZ,EAAWa,gBAAiB","file":"static/js/manual-treat-playroom-with-treat.68d4f57b.js","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"playroom-with-treat\"\n    }}>{`Playroom With Treat`}</h1>\n    <p>{`The basic getting started can be found `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/seek-oss/playroom\"\n      }}>{`on Github`}</a></p>\n    <p>{`The tl;dr is `}<inlineCode parentName=\"p\">{`yarn add --dev playroom`}</inlineCode>{`, then add `}<inlineCode parentName=\"p\">{`\"playroom:start\": \"playroom start\"`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`\"playroom:build\": \"playroom build\"`}</inlineCode>{` to your `}<inlineCode parentName=\"p\">{`package.json`}</inlineCode>{` scripts.`}</p>\n    <h2 {...{\n      \"id\": \"updating-playroomconfigjs\"\n    }}>{`Updating playroom.config.js`}</h2>\n    <p>{`Create the file `}<inlineCode parentName=\"p\">{`playroom.config.js`}</inlineCode>{`.`}</p>\n    <p>{`The working file should look like this:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`const TreatPlugin = require('treat/webpack-plugin');\nconst MiniCssExtractPlugin = require('mini-css-extract-plugin');\n\nmodule.exports = {\n  components: './src/components',\n  outputPath: './dist/playroom',\n\n  // Optional:\n  title: 'Playroom',\n  themes: './src/themes/index.js',\n  frameComponent: './src/FrameComponent.js',\n  // widths: [320, 375, 768, 1024],\n  port: 9000,\n  openBrowser: false,\n  webpackConfig: () => ({\n    module: {\n      rules: [\n        {\n          test: /\\\\.(ts|tsx)$/,\n          include: __dirname,\n          exclude: /node_modules/,\n          use: {\n            loader: require.resolve('babel-loader'),\n            options: {\n              presets: [\n                require.resolve('@babel/preset-env'),\n                require.resolve('@babel/preset-react'),\n                require.resolve('@babel/preset-typescript'),\n              ],\n              plugins: [\n                require.resolve('@babel/plugin-proposal-class-properties'),\n              ],\n            },\n          },\n        },\n        {\n          test: /\\\\.js$/,\n          include: __dirname,\n          exclude: /node_modules/,\n          use: {\n            loader: require.resolve('babel-loader'),\n            options: {\n              presets: [\n                require.resolve('@babel/preset-env'),\n                require.resolve('@babel/preset-react'),\n              ],\n              plugins: [\n                require.resolve('@babel/plugin-proposal-class-properties'),\n              ],\n            },\n          },\n        },\n      ],\n    },\n    plugins: [\n      new TreatPlugin({\n        outputLoaders: [MiniCssExtractPlugin.loader],\n      }),\n      new MiniCssExtractPlugin(),\n    ],\n  }),\n};\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"themes-file\"\n    }}>{`Themes file`}</h2>\n    <p>{`An example of the themes filed refernced above:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-typescript\"\n      }}>{`export { default as scruffy } from './scruffy/index.js';\nexport { default as daisy } from './daisy/index.js';\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"frame-component\"\n    }}>{`Frame Component`}</h2>\n    <p>{`The working frame component looks like so:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-typescript\"\n      }}>{`import React, { Fragment } from 'react';\nimport * as themes from './themes/treat';\nimport { TreatProvider } from 'react-treat';\n\nexport default ({ theme, children }) => {\n  return (\n    <TreatProvider theme={themes[theme.name]}>\n      <Fragment>{children}</Fragment>\n    </TreatProvider>\n  );\n};\n`}</code></pre>\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  "],"sourceRoot":""}