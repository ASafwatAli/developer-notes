(window.webpackJsonp=window.webpackJsonp||[]).push([[5],{"./manual/Algorithms/An-Introduction.md":function(e,t,n){"use strict";n.r(t),n.d(t,"default",function(){return a});var o=n("./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js"),i=(n("./node_modules/react/index.js"),n("./node_modules/@mdx-js/react/dist/index.es.js")),s={},r="wrapper";function a(e){var t=e.components,n=Object(o.a)(e,["components"]);return Object(i.b)(r,Object.assign({},s,n,{components:t,mdxType:"MDXLayout"}),Object(i.b)("h1",{id:"an-introduction"},"An Introduction"),Object(i.b)("h2",{id:"tips-and-tricks"},"Tips and tricks"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"READ THE QUESTION THOROUGHLY"),Object(i.b)("li",{parentName:"ol"},"Use hashmaps for O(1)."),Object(i.b)("li",{parentName:"ol"},"For array sorted, run O(n) with sorting by index swaps and not other options (like selection sort)."),Object(i.b)("li",{parentName:"ol"},"To find the midpoint of linked lists or something you cannot use length for, use the two pointers and iterate +1, +2 respectively and don't iterate through the entire list."),Object(i.b)("li",{parentName:"ol"},"Use Regexes wisely."),Object(i.b)("li",{parentName:"ol"},"Understand converting and iterating through strings (ie understand types, side effects of casting etc)")))}a&&a===Object(a)&&Object.isExtensible(a)&&Object.defineProperty(a,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"MDXContent",filename:"manual/Algorithms/An-Introduction.md"}}),a.isMDXComponent=!0}}]);
//# sourceMappingURL=manual-algorithms-an-introduction.101a1afd2417ec7a4a77.js.map