(window.webpackJsonp=window.webpackJsonp||[]).push([[105],{"./manual/Design-Patterns/Adapter-Pattern.md":function(n,e,t){"use strict";t.r(e),t.d(e,"default",function(){return c});var i=t("./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js"),r=(t("./node_modules/react/index.js"),t("./node_modules/@mdx-js/react/dist/index.es.js")),o={},a="wrapper";function c(n){var e=n.components,t=Object(i.a)(n,["components"]);return Object(r.b)(a,Object.assign({},o,t,{components:e,mdxType:"MDXLayout"}),Object(r.b)("h1",{id:"adapter-pattern"},"Adapter Pattern"),Object(r.b)("pre",null,Object(r.b)("code",Object.assign({parentName:"pre"},{className:"language-javascript"}),"// the base adapter\ninterface RequestAdapter {\n  request(newParam: string): void;\n}\n\n// The adapter utilising the old way\nclass InterfaceAdapter implements RequestAdapter {\n  request(newParam: string): void {\n    const old = new OldInterface();\n    old.requestInOldWay({\n      data: newParam\n    });\n  }\n}\n\nclass OldInterface {\n  requestInOldWay(oldParam: any): void {\n    console.log(oldParam);\n  }\n}\n\n(function main() {\n  const adapter = new InterfaceAdapter();\n  adapter.request('param');\n})();\n")),Object(r.b)("h2",{id:"lightning-to-microusb-adapter-example"},"Lightning To MicroUSB Adapter Example"),Object(r.b)("p",null,"A great Java example:"),Object(r.b)("pre",null,Object(r.b)("code",Object.assign({parentName:"pre"},{className:"language-java"}),'interface LightningPhone {\n    void recharge();\n    void useLightning();\n}\n\ninterface MicroUsbPhone {\n    void recharge();\n    void useMicroUsb();\n}\n\nclass Iphone implements LightningPhone {\n    private boolean connector;\n\n    @Override\n    public void useLightning() {\n        connector = true;\n        System.out.println("Lightning connected");\n    }\n\n    @Override\n    public void recharge() {\n        if (connector) {\n            System.out.println("Recharge started");\n            System.out.println("Recharge finished");\n        } else {\n            System.out.println("Connect Lightning first");\n        }\n    }\n}\n\nclass Android implements MicroUsbPhone {\n    private boolean connector;\n\n    @Override\n    public void useMicroUsb() {\n        connector = true;\n        System.out.println("MicroUsb connected");\n    }\n\n    @Override\n    public void recharge() {\n        if (connector) {\n            System.out.println("Recharge started");\n            System.out.println("Recharge finished");\n        } else {\n            System.out.println("Connect MicroUsb first");\n        }\n    }\n}\n\nclass LightningToMicroUsbAdapter implements MicroUsbPhone {\n    private final LightningPhone lightningPhone;\n\n    public LightningToMicroUsbAdapter(LightningPhone lightningPhone) {\n        this.lightningPhone = lightningPhone;\n    }\n\n    @Override\n    public void useMicroUsb() {\n        System.out.println("MicroUsb connected");\n        lightningPhone.useLightning();\n    }\n\n    @Override\n    public void recharge() {\n        lightningPhone.recharge();\n    }\n}\n\npublic class AdapterDemo {\n    static void rechargeMicroUsbPhone(MicroUsbPhone phone) {\n        phone.useMicroUsb();\n        phone.recharge();\n    }\n\n    static void rechargeLightningPhone(LightningPhone phone) {\n        phone.useLightning();\n        phone.recharge();\n    }\n\n    public static void main(String[] args) {\n        Android android = new Android();\n        Iphone iPhone = new Iphone();\n\n        System.out.println("Recharging android with MicroUsb");\n        rechargeMicroUsbPhone(android);\n\n        System.out.println("Recharging iPhone with Lightning");\n        rechargeLightningPhone(iPhone);\n\n        System.out.println("Recharging iPhone with MicroUsb");\n        rechargeMicroUsbPhone(new LightningToMicroUsbAdapter(iPhone));\n    }\n}\n')))}c&&c===Object(c)&&Object.isExtensible(c)&&Object.defineProperty(c,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"MDXContent",filename:"manual/Design-Patterns/Adapter-Pattern.md"}}),c.isMDXComponent=!0}}]);
//# sourceMappingURL=manual-design-patterns-adapter-pattern.101a1afd2417ec7a4a77.js.map