(window.webpackJsonp=window.webpackJsonp||[]).push([[408],{"./manual/React-Notes/React-Portals.md":function(e,t,a){"use strict";a.r(t),a.d(t,"default",function(){return r});var n=a("./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js"),o=(a("./node_modules/react/index.js"),a("./node_modules/@mdx-js/react/dist/index.es.js")),s={},c="wrapper";function r(e){var t=e.components,a=Object(n.a)(e,["components"]);return Object(o.b)(c,Object.assign({},s,a,{components:t,mdxType:"MDXLayout"}),Object(o.b)("h1",{id:"react-portals"},"React Portals"),Object(o.b)("h2",{id:"why-portals"},"Why Portals?"),Object(o.b)("p",null,"A great use case for portals is for use with things like React modals. Anything that uses a stack context can obscure the css position for something like a modal."),Object(o.b)("p",null,"The tl;dr is to make a React component a descendent of a HTML element other than ",Object(o.b)("inlineCode",{parentName:"p"},'id="root"'),";"),Object(o.b)("h2",{id:"creating-a-portal"},"Creating a Portal"),Object(o.b)("pre",null,Object(o.b)("code",Object.assign({parentName:"pre"},{className:"language-javascript"}),"import React from 'react';\nimport ReactDOM from 'react-dom';\n\nconst Modal = (props) => {\n  return ReactDOM.createPortal(\n    <div className=\"modal\">\n      <div className=\"modal-body\" />\n    </div>,\n    document.querySelector('#modal')\n  );\n};\n")))}r&&r===Object(r)&&Object.isExtensible(r)&&Object.defineProperty(r,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"MDXContent",filename:"manual/React-Notes/React-Portals.md"}}),r.isMDXComponent=!0}}]);
//# sourceMappingURL=manual-react-notes-react-portals.101a1afd2417ec7a4a77.js.map