{"version":3,"sources":["/Users/dennis.okeeffe/Project-Imposter/developer-notes/manual/Design-Patterns/Facade-Pattern.md"],"names":["layoutProps","MDXLayout","MDXContent","_ref","components","props","Object","_Users_dennis_okeeffe_Project_Imposter_developer_notes_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","_mdx_js_react__WEBPACK_IMPORTED_MODULE_2__","assign","mdxType","id","parentName","className","isMDXComponent"],"mappings":"gYAWMA,EAAc,GAGdC,EAAY,UACH,SAASC,EAATC,GAGZ,IAFDC,EAECD,EAFDC,WACGC,EACFC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,gBACD,OAAOG,OAAAE,EAAA,EAAAF,CAACL,EAADK,OAAAG,OAAA,GAAeT,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYM,QAAQ,cAC5EJ,OAAAE,EAAA,EAAAF,CAAA,KAAQ,CACNK,GAAM,kBADR,kBAGAL,OAAAE,EAAA,EAAAF,CAAA,oCAA+BA,OAAAE,EAAA,EAAAF,CAAA,cAAYM,WAAW,KAAvB,cAA/B,8NACAN,OAAAE,EAAA,EAAAF,CAAA,KAAQ,CACNK,GAAM,WADR,WAGAL,OAAAE,EAAA,EAAAF,CAAA,+NACAA,OAAAE,EAAA,EAAAF,CAAA,KAAQ,CACNK,GAAM,gBADR,gBAGAL,OAAAE,EAAA,EAAAF,CAAA,UACEA,OAAAE,EAAA,EAAAF,CAAA,MAAIM,WAAW,MAAf,8BAAmDN,OAAAE,EAAA,EAAAF,CAAA,MAAIM,WAAW,MAC9DN,OAAAE,EAAA,EAAAF,CAAA,MAAIM,WAAW,MAAf,qEACAN,OAAAE,EAAA,EAAAF,CAAA,MAAIM,WAAW,MAAf,+EAEJN,OAAAE,EAAA,EAAAF,CAAA,MAAIM,WAAW,MAAf,wEAA6FN,OAAAE,EAAA,EAAAF,CAAA,MAAIM,WAAW,MACxGN,OAAAE,EAAA,EAAAF,CAAA,MAAIM,WAAW,MAAf,yCACAN,OAAAE,EAAA,EAAAF,CAAA,MAAIM,WAAW,MAAf,6CACAN,OAAAE,EAAA,EAAAF,CAAA,MAAIM,WAAW,MAAf,qDAGNN,OAAAE,EAAA,EAAAF,CAAA,WAAKA,OAAAE,EAAA,EAAAF,CAAA,OAAAA,OAAAG,OAAA,CAAMG,WAAW,OAAU,CAC5BC,UAAa,wBADZ,w+BA+CTX,EAAWY,gBAAiB","file":"static/js/manual-design-patterns-facade-pattern.8745e160.js","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"facade-pattern\"\n    }}>{`Facade Pattern`}</h1>\n    <p>{`The Facade Pattern is a `}<inlineCode parentName=\"p\">{`structural`}</inlineCode>{` design pattern that is used to, according the the Gang Of Four book, \"Provide a unified interface to a set of interfaces in a subsystem. Facade defines a higher-level interface that makes the subsystem easier to use.\"`}</p>\n    <h2 {...{\n      \"id\": \"example\"\n    }}>{`Example`}</h2>\n    <p>{`In the example below, we will look at basic facade that takes the different operations required to start a running race of the basic phrase \"Get ready! Get set! Go!\" by breaking down each sentence into a phase.`}</p>\n    <h2 {...{\n      \"id\": \"participants\"\n    }}>{`Participants`}</h2>\n    <ul>\n      <li parentName=\"ul\">{`Facade: (RunningRaceFacade)`}<ul parentName=\"li\">\n          <li parentName=\"ul\">{`knows which subsystem classes are responsible for what operation.`}</li>\n          <li parentName=\"ul\">{`delegates parts of a client request to the appropriate subsystem objects.`}</li>\n        </ul></li>\n      <li parentName=\"ul\">{`Subsystem classes: (PhaseOneSystem, PhaseTwoSystem, PhaseThreeSystem)`}<ul parentName=\"li\">\n          <li parentName=\"ul\">{`contains functionality for subsystem.`}</li>\n          <li parentName=\"ul\">{`executes work delegated by Facade object.`}</li>\n          <li parentName=\"ul\">{`has no knowledge of facade or reference to it.`}</li>\n        </ul></li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`class PhaseOneSystem {\n  getReady() {\n    console.log('Get ready!');\n  }\n}\n\nclass PhaseTwoSystem {\n  getSet() {\n    console.log('Get set!');\n  }\n}\n\nclass PhaseThreeSystem {\n  go() {\n    console.log('Go!');\n  }\n}\n\nclass RunningRaceFacade {\n\n  private _phaseOne: PhaseOneSystem;\n  private _phaseTwo: PhaseTwoSystem;\n  private _phaseThree: PhaseThreeSystem;\n\n  constructor() {\n    this._phaseOne = new PhaseOneSystem();\n    this._phaseTwo = new PhaseTwoSystem();\n    this._phaseThree = new PhaseThreeSystem();\n  }\n\n  beginRace() {\n    this._phaseOne.getReady();\n    this._phaseTwo.getSet();\n    this._phaseThree.go();\n  }\n}\n\n(function main() {\n  const race = new RunningRaceFacade();\n  race.beginRace(); // logs out \"Get ready! Get Set! Go! on separate lines\n})();\n`}</code></pre>\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  "],"sourceRoot":""}