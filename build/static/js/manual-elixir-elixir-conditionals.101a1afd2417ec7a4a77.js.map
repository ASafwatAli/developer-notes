{"version":3,"sources":["/Users/dennis.okeeffe/Project-Imposter/developer-notes/manual/Elixir/Elixir-Conditionals.md"],"names":["layoutProps","MDXLayout","MDXContent","_ref","components","props","Object","_Users_dennis_okeeffe_Project_Imposter_developer_notes_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","_mdx_js_react__WEBPACK_IMPORTED_MODULE_2__","assign","mdxType","id","parentName","className","isMDXComponent"],"mappings":"4XAWMA,EAAc,GAGdC,EAAY,UACH,SAASC,EAATC,GAGZ,IAFDC,EAECD,EAFDC,WACGC,EACFC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,gBACD,OAAOG,OAAAE,EAAA,EAAAF,CAACL,EAADK,OAAAG,OAAA,GAAeT,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYM,QAAQ,cAC5EJ,OAAAE,EAAA,EAAAF,CAAA,KAAQ,CACNK,GAAM,uBADR,uBAGAL,OAAAE,EAAA,EAAAF,CAAA,KAAQ,CACNK,GAAM,MADR,MAGAL,OAAAE,EAAA,EAAAF,CAAA,WAAKA,OAAAE,EAAA,EAAAF,CAAA,OAAAA,OAAAG,OAAA,CAAMG,WAAW,OAAU,CAC5BC,UAAa,mBADZ,oMAcLP,OAAAE,EAAA,EAAAF,CAAA,KAAQ,CACNK,GAAM,UADR,UAGAL,OAAAE,EAAA,EAAAF,CAAA,WAAKA,OAAAE,EAAA,EAAAF,CAAA,OAAAA,OAAAG,OAAA,CAAMG,WAAW,OAAU,CAC5BC,UAAa,mBADZ,sFAOLP,OAAAE,EAAA,EAAAF,CAAA,KAAQ,CACNK,GAAM,QADR,QAGAL,OAAAE,EAAA,EAAAF,CAAA,WAAKA,OAAAE,EAAA,EAAAF,CAAA,OAAAA,OAAAG,OAAA,CAAMG,WAAW,OAAU,CAC5BC,UAAa,mBADZ,uJASLP,OAAAE,EAAA,EAAAF,CAAA,SAAGA,OAAAE,EAAA,EAAAF,CAAA,cAAYM,WAAW,KAAvB,KAAH,mCACAN,OAAAE,EAAA,EAAAF,CAAA,WAAKA,OAAAE,EAAA,EAAAF,CAAA,OAAAA,OAAAG,OAAA,CAAMG,WAAW,OAAU,CAC5BC,UAAa,mBADZ,sMAaLP,OAAAE,EAAA,EAAAF,CAAA,0BACAA,OAAAE,EAAA,EAAAF,CAAA,WAAKA,OAAAE,EAAA,EAAAF,CAAA,OAAAA,OAAAG,OAAA,CAAMG,WAAW,OAAU,CAC5BC,UAAa,mBADZ,gWAaTX,EAAWY,gBAAiB","file":"static/js/manual-elixir-elixir-conditionals.fe602a36.js","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"elixir-conditionals\"\n    }}>{`Elixir Conditionals`}</h1>\n    <h2 {...{\n      \"id\": \"if\"\n    }}>{`If`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`iex> if String.valid?(\"Hello\") do\n...>   \"Valid string!\"\n...> else\n...>   \"Invalid string.\"\n...> end\n\"Valid string!\"\n\niex> if \"a string value\" do\n...>   \"Truthy\"\n...> end\n\"Truthy\"\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"unless\"\n    }}>{`Unless`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`iex> unless is_integer(\"hello\") do\n...>   \"Not an Int\"\n...> end\n\"Not an Int\"\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"case\"\n    }}>{`Case`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`iex> case {:ok, \"Hello World\"} do\n...>   {:ok, result} -> result\n...>   {:error} -> \"Uh oh!\"\n...>   _ -> \"Catch all\"\n...> end\n\"Hello World\"\n`}</code></pre>\n    <p><inlineCode parentName=\"p\">{`_`}</inlineCode>{` is an important inclusion too:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`iex> case :even do\n...>   :odd -> \"Odd\"\n...> end\n** (CaseClauseError) no case clause matching: :even\n\niex> case :even do\n...>   :odd -> \"Odd\"\n...>   _ -> \"Not Odd\"\n...> end\n\"Not Odd\"\n`}</code></pre>\n    <p>{`With pinning:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`iex> pie = 3.14\n 3.14\niex> case \"cherry pie\" do\n...>   ^pie -> \"Not so tasty\"\n...>   pie -> \"I bet #{pie} is tasty\"\n...> end\n\"I bet cherry pie is tasty\"\n`}</code></pre>\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  "],"sourceRoot":""}