(window.webpackJsonp=window.webpackJsonp||[]).push([[232],{"./manual/JavaScript/Gulp-Basics-TH.md":function(t,e,n){"use strict";n.r(e),n.d(e,"default",function(){return b});var a=n("./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js"),r=(n("./node_modules/react/index.js"),n("./node_modules/@mdx-js/react/dist/index.es.js")),s={},l="wrapper";function b(t){var e=t.components,n=Object(a.a)(t,["components"]);return Object(r.b)(l,Object.assign({},s,n,{components:e,mdxType:"MDXLayout"}),Object(r.b)("p",null,"GULP BASICS"),Object(r.b)("p",null,"/////////////////////////////////////////////////////////"),Object(r.b)("p",null,"PART 1: WELCOME TO GULP.JS"),Object(r.b)("p",null,"/",Object(r.b)("strong",{parentName:"p"},Object(r.b)("strong",{parentName:"strong"},Object(r.b)("strong",{parentName:"strong"},Object(r.b)("strong",{parentName:"strong"},Object(r.b)("strong",{parentName:"strong"},Object(r.b)("strong",{parentName:"strong"},"****"))))))),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("pre",{parentName:"li"},Object(r.b)("code",Object.assign({parentName:"pre"},{}),"                    *\n1. Why Gulp\n"))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("pre",{parentName:"li"},Object(r.b)("code",Object.assign({parentName:"pre"},{}),"                    *\n")),Object(r.b)("strong",{parentName:"li"},Object(r.b)("strong",{parentName:"strong"},Object(r.b)("strong",{parentName:"strong"},Object(r.b)("strong",{parentName:"strong"},Object(r.b)("strong",{parentName:"strong"},Object(r.b)("strong",{parentName:"strong"},"****")))))),"/")),Object(r.b)("p",null,"JS Task Runner - Automation!"),Object(r.b)("p",null,"Thinks like compiling SASS and CoffeeScript to JS."),Object(r.b)("p",null,"Gulp the engine to run this. Can be just about anything!"),Object(r.b)("p",null,"Tasks generally set in the JS files"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"run one after the other eg. concat then run it!"),Object(r.b)("li",{parentName:"ul"},"can run things in parallel")),Object(r.b)("p",null,"/",Object(r.b)("strong",{parentName:"p"},Object(r.b)("strong",{parentName:"strong"},Object(r.b)("strong",{parentName:"strong"},Object(r.b)("strong",{parentName:"strong"},Object(r.b)("strong",{parentName:"strong"},Object(r.b)("strong",{parentName:"strong"},"****"))))))),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"}," \t\t\t\t\t\t*",Object(r.b)("ol",Object.assign({parentName:"li"},{start:2}),Object(r.b)("li",{parentName:"ol"},"Gulp in Action"))),Object(r.b)("li",{parentName:"ul"},"  \t\t\t\t\t\t*\n",Object(r.b)("strong",{parentName:"li"},Object(r.b)("strong",{parentName:"strong"},Object(r.b)("strong",{parentName:"strong"},Object(r.b)("strong",{parentName:"strong"},Object(r.b)("strong",{parentName:"strong"},Object(r.b)("strong",{parentName:"strong"},"****")))))),"/")),Object(r.b)("p",null,"How you work as important on what you work on."),Object(r.b)("p",null,"A project with a bunch of tasks already defined."),Object(r.b)("p",null,"In the dev workflow"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"gulpfile.js -> what gulp looks for"),Object(r.b)("li",{parentName:"ul"},"gulp serve //to run dev server")),Object(r.b)("p",null,"Automatically compiles and reloads when code adjusted!"),Object(r.b)("p",null,"gulp //command on its own"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"runs another gulp task as defined"),Object(r.b)("li",{parentName:"ul"},"known as the default task"),Object(r.b)("li",{parentName:"ul"},"puts everything in a folder known as dist")),Object(r.b)("p",null,"QUESTIONS"),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},"When you run gulp on its own, gulp invokes the ",Object(r.b)("strong",{parentName:"li"},"_")," task")),Object(r.b)("p",null,"A: Default"),Object(r.b)("p",null,"/",Object(r.b)("strong",{parentName:"p"},Object(r.b)("strong",{parentName:"strong"},Object(r.b)("strong",{parentName:"strong"},Object(r.b)("strong",{parentName:"strong"},Object(r.b)("strong",{parentName:"strong"},Object(r.b)("strong",{parentName:"strong"},"****"))))))),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"}," \t\t\t\t\t\t*",Object(r.b)("ol",Object.assign({parentName:"li"},{start:3}),Object(r.b)("li",{parentName:"ol"},"Installing Gulp"))),Object(r.b)("li",{parentName:"ul"},"  \t\t\t\t\t\t*\n",Object(r.b)("strong",{parentName:"li"},Object(r.b)("strong",{parentName:"strong"},Object(r.b)("strong",{parentName:"strong"},Object(r.b)("strong",{parentName:"strong"},Object(r.b)("strong",{parentName:"strong"},Object(r.b)("strong",{parentName:"strong"},"****")))))),"/")),Object(r.b)("p",null,"Gulp is node.js tech."),Object(r.b)("p",null,"which node\nwhich npm\netc."),Object(r.b)("p",null,"//run npm init"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"this initiales the folder as a npm package etc")),Object(r.b)("p",null,"Gulp only ever needed for development, which is why it is a dev dependency."),Object(r.b)("p",null,"/",Object(r.b)("strong",{parentName:"p"},Object(r.b)("strong",{parentName:"strong"},Object(r.b)("strong",{parentName:"strong"},Object(r.b)("strong",{parentName:"strong"},Object(r.b)("strong",{parentName:"strong"},Object(r.b)("strong",{parentName:"strong"},"****"))))))),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"}," \t\t\t\t\t\t*",Object(r.b)("ol",Object.assign({parentName:"li"},{start:4}),Object(r.b)("li",{parentName:"ol"},"First Gulp Task"))),Object(r.b)("li",{parentName:"ul"},"  \t\t\t\t\t\t*\n",Object(r.b)("strong",{parentName:"li"},Object(r.b)("strong",{parentName:"strong"},Object(r.b)("strong",{parentName:"strong"},Object(r.b)("strong",{parentName:"strong"},Object(r.b)("strong",{parentName:"strong"},Object(r.b)("strong",{parentName:"strong"},"****")))))),"/")),Object(r.b)("p",null,"Create a gulpfile.js //or whatever really"),Object(r.b)("p",null,"'use strict';"),Object(r.b)("p",null,"var gulp = require('gulp');"),Object(r.b)("p",null,'gulp.task("hello", function() { //first param, adds the task name!\nconsole.log("Hello!");\n});'),Object(r.b)("p",null,"//to set up the default task"),Object(r.b)("p",null,'gulp.task("default", ','["hello"]',', function() {\nconsole.log("This is the default task");\n}); //will run every dependency in the array before itself'),Object(r.b)("p",null,"/",Object(r.b)("strong",{parentName:"p"},Object(r.b)("strong",{parentName:"strong"},Object(r.b)("strong",{parentName:"strong"},Object(r.b)("strong",{parentName:"strong"},Object(r.b)("strong",{parentName:"strong"},Object(r.b)("strong",{parentName:"strong"},"****"))))))),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"}," \t\t\t\t\t\t*",Object(r.b)("ol",Object.assign({parentName:"li"},{start:5}),Object(r.b)("li",{parentName:"ol"},"Use 3rd party\ngulp plugins"))),Object(r.b)("li",{parentName:"ul"},"  \t\t\t\t\t\t*\n",Object(r.b)("strong",{parentName:"li"},Object(r.b)("strong",{parentName:"strong"},Object(r.b)("strong",{parentName:"strong"},Object(r.b)("strong",{parentName:"strong"},Object(r.b)("strong",{parentName:"strong"},Object(r.b)("strong",{parentName:"strong"},"****")))))),"/")),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"you can get plugins for gulp!\n+ built outside of the gulp team")),Object(r.b)("p",null,"PLUGINS"),Object(r.b)("p",null,"Gulp Concat"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"concat all js into one file")),Object(r.b)("p",null,"npm install gulpconcat --save-dev"),Object(r.b)("p",null,"for your index scripts, we can just have one js file... app.js!"),Object(r.b)("p",null,"//in gulpfile.js"),Object(r.b)("p",null,"'use strict';"),Object(r.b)("p",null,"var gulp = require('gulp');\nvar concat = require('gulp-concat');"),Object(r.b)("p",null,'gulp.task("concatScripts", function() { //first param, adds the task name!\ngulp.src(',"[ //take array of file names or single file\n'js/jquery.js',\n'js/sticky.jquery.sticky.js',\n'js/main.js']",")\n});"),Object(r.b)("p",null,"//to set up the default task"),Object(r.b)("p",null,'gulp.task("default", ','["hello"]',', function() {\nconsole.log("This is the default task");\n}); //will run every dependency in the array before itself'),Object(r.b)("p",null,"Benefits of using the src as a readable stream"),Object(r.b)("p",null,"/",Object(r.b)("strong",{parentName:"p"},Object(r.b)("strong",{parentName:"strong"},Object(r.b)("strong",{parentName:"strong"},Object(r.b)("strong",{parentName:"strong"},Object(r.b)("strong",{parentName:"strong"},Object(r.b)("strong",{parentName:"strong"},"****"))))))),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"}," \t\t\t\t\t\t*",Object(r.b)("ol",Object.assign({parentName:"li"},{start:6}),Object(r.b)("li",{parentName:"ol"},"Minifying JS\nscripts"))),Object(r.b)("li",{parentName:"ul"},"  \t\t\t\t\t\t*\n",Object(r.b)("strong",{parentName:"li"},Object(r.b)("strong",{parentName:"strong"},Object(r.b)("strong",{parentName:"strong"},Object(r.b)("strong",{parentName:"strong"},Object(r.b)("strong",{parentName:"strong"},Object(r.b)("strong",{parentName:"strong"},"****")))))),"/")),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"minify for performance benefits")),Object(r.b)("p",null,"Gulp Uglify -> minify "),Object(r.b)("p",null,"npm install gulp-uglify --save-dev"),Object(r.b)("p",null,"'use strict';"),Object(r.b)("p",null,"var gulp = require('gulp');\nvar concat = require('gulp-concat');\nvar uglify = require('gulp-uglify');"),Object(r.b)("p",null,'gulp.task("concatScripts", function() { //first param, adds the task name!\ngulp.src(',"[ //take array of file names or single file\n'js/jquery.js',\n'js/sticky.jquery.sticky.js',\n'js/main.js']",')\n.pipe(concat("app.js"))\n.pipe(gulp.dest("js"));\n});'),Object(r.b)("p",null,'gulp.task("minifyScripts", function() {\ngulp.src("js/app.js")\n.pipe(uglify())\n.pipe(gulp.dest("js"));\n});'),Object(r.b)("p",null,"//to set up the default task"),Object(r.b)("p",null,'gulp.task("default", ','["concatScripts", "minifyScripts"]',', function() {\nconsole.log("This is the default task");\n}); //will run every dependency in the array before itself'),Object(r.b)("p",null,"BUT WE WANT TO KEEP BOTH FILES"),Object(r.b)("p",null,"So we can use gulp-rename"),Object(r.b)("p",null,"npm install gulp-rename --save-dev"),Object(r.b)("p",null,"/////////////////////////////////////////////////////////"),Object(r.b)("p",null,"PART 3: COMPILE SASS WITH GULP"),Object(r.b)("p",null,"/",Object(r.b)("strong",{parentName:"p"},Object(r.b)("strong",{parentName:"strong"},Object(r.b)("strong",{parentName:"strong"},Object(r.b)("strong",{parentName:"strong"},Object(r.b)("strong",{parentName:"strong"},Object(r.b)("strong",{parentName:"strong"},"****"))))))),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"}," \t\t\t\t\t\t*",Object(r.b)("ol",Object.assign({parentName:"li"},{start:7}),Object(r.b)("li",{parentName:"ol"},"Turn Sass into\nCSS, automatically"))),Object(r.b)("li",{parentName:"ul"},"  \t\t\t\t\t\t*\n",Object(r.b)("strong",{parentName:"li"},Object(r.b)("strong",{parentName:"strong"},Object(r.b)("strong",{parentName:"strong"},Object(r.b)("strong",{parentName:"strong"},Object(r.b)("strong",{parentName:"strong"},Object(r.b)("strong",{parentName:"strong"},"****")))))),"/")),Object(r.b)("p",null,"One challenge with Sass is that it needs to be compiled"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"it is time consuming")),Object(r.b)("p",null,"INSTALL GULP-SASS"),Object(r.b)("p",null,"npm install gulp-sass --save-dev"),Object(r.b)("p",null,"Easier to have gulp use one scss source."),Object(r.b)("p",null,"//gulpfile"),Object(r.b)("p",null,"'use strict';"),Object(r.b)("p",null,"var gulp = require('gulp');\nvar concat = require('gulp-concat');\nvar uglify = require('gulp-uglify');\nvar rename = require('gulp-rename');\nvar sass = require('gulp-sass');"),Object(r.b)("p",null,'gulp.task("concatScripts", function() { //first param, adds the task name!\ngulp.src(',"[ //take array of file names or single file\n'js/jquery.js',\n'js/sticky.jquery.sticky.js',\n'js/main.js']",')\n.pipe(concat("app.js"))\n.pipe(gulp.dest("js"));\n});'),Object(r.b)("p",null,'guld.task("minifyScripts", function() {\ngulp.src("js/app.js")\n.pipe(uglify())\n.pipe(rename(\'app.min.js\'))\n.pipe(gulp.dest("js"));\n});'),Object(r.b)("p",null,"gulp.task('compileSass', function(){\ngulp.src(\"scss/application.scss\")\n.pipe(sass())\n.pipe(gulp.dest('css'));\n});"),Object(r.b)("p",null,"//to set up the default task"),Object(r.b)("p",null,'gulp.task("default", ','["concatScripts", "minifyScripts"]',', function() {\nconsole.log("This is the default task");\n}); //will run every dependency in the array before itself'),Object(r.b)("p",null,"/",Object(r.b)("strong",{parentName:"p"},Object(r.b)("strong",{parentName:"strong"},Object(r.b)("strong",{parentName:"strong"},Object(r.b)("strong",{parentName:"strong"},Object(r.b)("strong",{parentName:"strong"},Object(r.b)("strong",{parentName:"strong"},"****"))))))),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"}," \t\t\t\t\t\t*",Object(r.b)("ol",Object.assign({parentName:"li"},{start:8}),Object(r.b)("li",{parentName:"ol"},"Add Source Maps\nto your SaSS"))),Object(r.b)("li",{parentName:"ul"},"  \t\t\t\t\t\t*\n",Object(r.b)("strong",{parentName:"li"},Object(r.b)("strong",{parentName:"strong"},Object(r.b)("strong",{parentName:"strong"},Object(r.b)("strong",{parentName:"strong"},Object(r.b)("strong",{parentName:"strong"},Object(r.b)("strong",{parentName:"strong"},"****")))))),"/")),Object(r.b)("p",null,"Downsides for compiling from a bunch to just one file."),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"only comes from compile css file"),Object(r.b)("li",{parentName:"ul"},"need to figure out which sass file for changes")),Object(r.b)("p",null,"The answer? Source maps."),Object(r.b)("p",null,"How? Gulp source maps module."),Object(r.b)("p",null,"npm install gulp-sourcemaps --save-dev"),Object(r.b)("p",null,"'use strict';"),Object(r.b)("p",null,"var gulp = require('gulp');\nvar concat = require('gulp-concat');\nvar uglify = require('gulp-uglify');\nvar rename = require('gulp-rename');\nvar sass = require('gulp-sass');\nvar maps = require('gulp-sourcemaps');"),Object(r.b)("p",null,'gulp.task("concatScripts", function() { //first param, adds the task name!\ngulp.src(',"[ //take array of file names or single file\n'js/jquery.js',\n'js/sticky.jquery.sticky.js',\n'js/main.js']",')\n.pipe(concat("app.js"))\n.pipe(gulp.dest("js"));\n});'),Object(r.b)("p",null,'guld.task("minifyScripts", function() {\ngulp.src("js/app.js")\n.pipe(uglify())\n.pipe(rename(\'app.min.js\'))\n.pipe(gulp.dest("js"));\n});'),Object(r.b)("p",null,"gulp.task('compileSass', function(){\ngulp.src(\"scss/appication.scss\")\n.pipe(maps.init())\n.pipe(sass())\n.pipe(maps.write('./'))\n.pipe(gulp.dest('css'));\n});"),Object(r.b)("p",null,"//to set up the default task"),Object(r.b)("p",null,'gulp.task("default", ','["concatScripts", "minifyScripts"]',', function() {\nconsole.log("This is the default task");\n}); //will run every dependency in the array before itself'),Object(r.b)("p",null,"/",Object(r.b)("strong",{parentName:"p"},Object(r.b)("strong",{parentName:"strong"},Object(r.b)("strong",{parentName:"strong"},Object(r.b)("strong",{parentName:"strong"},Object(r.b)("strong",{parentName:"strong"},Object(r.b)("strong",{parentName:"strong"},"****"))))))),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"}," \t\t\t\t\t\t*",Object(r.b)("ol",Object.assign({parentName:"li"},{start:8}),Object(r.b)("li",{parentName:"ol"},"SourceMaps for\nJS too"))),Object(r.b)("li",{parentName:"ul"},"  \t\t\t\t\t\t*\n",Object(r.b)("strong",{parentName:"li"},Object(r.b)("strong",{parentName:"strong"},Object(r.b)("strong",{parentName:"strong"},Object(r.b)("strong",{parentName:"strong"},Object(r.b)("strong",{parentName:"strong"},Object(r.b)("strong",{parentName:"strong"},"****")))))),"/")),Object(r.b)("p",null,"'use strict';"),Object(r.b)("p",null,"var gulp = require('gulp');\nvar concat = require('gulp-concat');\nvar uglify = require('gulp-uglify');\nvar rename = require('gulp-rename');\nvar sass = require('gulp-sass');\nvar maps = require('gulp-sourcemaps');"),Object(r.b)("p",null,'gulp.task("concatScripts", function() { //first param, adds the task name!\ngulp.src(',"[ //take array of file names or single file\n'js/jquery.js',\n'js/sticky.jquery.sticky.js',\n'js/main.js']",')\n.pipe(maps.init())\n.pipe(concat("app.js"))\n.pipe(maps.write(\'./\')) //or ../maps\n.pipe(gulp.dest("js"));\n});'),Object(r.b)("p",null,'guld.task("minifyScripts", function() {\ngulp.src("js/app.js")\n.pipe(uglify())\n.pipe(rename(\'app.min.js\'))\n.pipe(gulp.dest("js"));\n});'),Object(r.b)("p",null,"gulp.task('compileSass', function(){\ngulp.src(\"scss/appication.scss\")\n.pipe(maps.init())\n.pipe(sass())\n.pipe(maps.write('./'))\n.pipe(gulp.dest('css'));\n});"),Object(r.b)("p",null,"//to set up the default task"),Object(r.b)("p",null,'gulp.task("default", ','["concatScripts", "minifyScripts"]',', function() {\nconsole.log("This is the default task");\n}); //will run every dependency in the array before itself'),Object(r.b)("p",null,"/////////////////////////////////////////////////////////"),Object(r.b)("p",null,"PART 4: IMPROVING YOUR GULP TASK PIPELINES"),Object(r.b)("p",null,"/",Object(r.b)("strong",{parentName:"p"},Object(r.b)("strong",{parentName:"strong"},Object(r.b)("strong",{parentName:"strong"},Object(r.b)("strong",{parentName:"strong"},Object(r.b)("strong",{parentName:"strong"},Object(r.b)("strong",{parentName:"strong"},"****"))))))),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"}," \t\t\t\t\t\t*",Object(r.b)("ol",Object.assign({parentName:"li"},{start:9}),Object(r.b)("li",{parentName:"ol"},"Putting Multiple\nTasks Together"))),Object(r.b)("li",{parentName:"ul"},"  \t\t\t\t\t\t*\n",Object(r.b)("strong",{parentName:"li"},Object(r.b)("strong",{parentName:"strong"},Object(r.b)("strong",{parentName:"strong"},Object(r.b)("strong",{parentName:"strong"},Object(r.b)("strong",{parentName:"strong"},Object(r.b)("strong",{parentName:"strong"},"****")))))),"/")),Object(r.b)("p",null,"This video is about the build task"),Object(r.b)("p",null,"Every build tasks are currently in parallel"),Object(r.b)("p",null,"Set the return and make depencies as the second argument for gulp.task"),Object(r.b)("p",null,"'use strict';"),Object(r.b)("p",null,"var gulp = require('gulp');\nvar concat = require('gulp-concat');\nvar uglify = require('gulp-uglify');\nvar rename = require('gulp-rename');\nvar sass = require('gulp-sass');\nvar maps = require('gulp-sourcemaps');"),Object(r.b)("p",null,'gulp.task("concatScripts", function() { //first param, adds the task name!\nreturn gulp.src(',"[ //take array of file names or single file\n'js/jquery.js',\n'js/sticky.jquery.sticky.js',\n'js/main.js']",')\n.pipe(maps.init())\n.pipe(concat("app.js"))\n.pipe(maps.write(\'./\')) //or ../maps\n.pipe(gulp.dest("js"));\n});'),Object(r.b)("p",null,'guld.task("minifyScripts", ','["concatScripts"]',', function() {\nreturn gulp.src("js/app.js")\n.pipe(uglify())\n.pipe(rename(\'app.min.js\'))\n.pipe(gulp.dest("js"));\n});'),Object(r.b)("p",null,"gulp.task('compileSass', function(){\nreturn gulp.src(\"scss/appication.scss\")\n.pipe(maps.init())\n.pipe(sass())\n.pipe(maps.write('./'))\n.pipe(gulp.dest('css'));\n});"),Object(r.b)("p",null,'gulp.task("build", ','["minifyScripts", "compileSass"]',");"),Object(r.b)("p",null,"//to set up the default task"),Object(r.b)("p",null,'gulp.task("default", ','["build"]',', function() {\nconsole.log("This is the default task");\n}); //will run every dependency in the array before itself'),Object(r.b)("p",null,"/",Object(r.b)("strong",{parentName:"p"},Object(r.b)("strong",{parentName:"strong"},Object(r.b)("strong",{parentName:"strong"},Object(r.b)("strong",{parentName:"strong"},Object(r.b)("strong",{parentName:"strong"},Object(r.b)("strong",{parentName:"strong"},"****"))))))),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"}," \t\t\t\t\t\t*\n10. Auto Run Tasks\nwith Gulp's watch method"),Object(r.b)("li",{parentName:"ul"},"  \t\t\t\t\t\t*\n",Object(r.b)("strong",{parentName:"li"},Object(r.b)("strong",{parentName:"strong"},Object(r.b)("strong",{parentName:"strong"},Object(r.b)("strong",{parentName:"strong"},Object(r.b)("strong",{parentName:"strong"},Object(r.b)("strong",{parentName:"strong"},"****")))))),"/")),Object(r.b)("p",null,"Amazing thing to work for us!"),Object(r.b)("p",null,"Use a globbing pattern to save writing an array."),Object(r.b)("p",null,"gulp.task('watchSass', function() {\ngulp.watch(","['sccs/application.sccs',...]",") //don't need to use return"),Object(r.b)("pre",null,Object(r.b)("code",Object.assign({parentName:"pre"},{}),"OR \n\ngulp.watch(['sccs/**/*.scss'], ['compileSass']); //globbing file\n")),Object(r.b)("p",null,"});"),Object(r.b)("p",null,"/",Object(r.b)("strong",{parentName:"p"},Object(r.b)("strong",{parentName:"strong"},Object(r.b)("strong",{parentName:"strong"},Object(r.b)("strong",{parentName:"strong"},Object(r.b)("strong",{parentName:"strong"},Object(r.b)("strong",{parentName:"strong"},"****"))))))),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"}," \t\t\t\t\t\t*",Object(r.b)("ol",Object.assign({parentName:"li"},{start:11}),Object(r.b)("li",{parentName:"ol"},"The build and\ndevelopment timeline"))),Object(r.b)("li",{parentName:"ul"},"  \t\t\t\t\t\t*\n",Object(r.b)("strong",{parentName:"li"},Object(r.b)("strong",{parentName:"strong"},Object(r.b)("strong",{parentName:"strong"},Object(r.b)("strong",{parentName:"strong"},Object(r.b)("strong",{parentName:"strong"},Object(r.b)("strong",{parentName:"strong"},"****")))))),"/")),Object(r.b)("p",null,"So far, been using it to work with our frontend."),Object(r.b)("p",null,"How to manage the deployment?"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"this course: the build")),Object(r.b)("p",null,"The Build Pipeline"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"just need to compile our pipeline...")),Object(r.b)("p",null,"in the build task:"),Object(r.b)("p",null,'gulp.task("build", ','["minifyScripts", "compileSass"]',", function() {\nreturn gulp.src(",'["css/application.css", "js/app.min.js", "index.html", "img/',Object(r.b)("strong",{parentName:"p"},'", "fonts/'),'"]',", { base: './' })\n.pipe(gulp.dest('dist'));\n});"),Object(r.b)("p",null,"The clean process"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"one example is if file names have changed"),Object(r.b)("li",{parentName:"ul"},"install node module del -> deletes according to glob")),Object(r.b)("p",null,"npm install del --save-dev"),Object(r.b)("p",null,"var del = require('del');"),Object(r.b)("p",null,'gulp.task("clean", function() {\ndel(',"['dist','css/application.css",Object(r.b)("em",{parentName:"p"},"','js/app"),".js*']",");\n});"),Object(r.b)("p",null,'gulp.task("default", ','["clean"]',", function() {\ngulp.start('build'); //going to change in gulp 4 gulp.series\n});"),Object(r.b)("p",null,"/",Object(r.b)("strong",{parentName:"p"},Object(r.b)("strong",{parentName:"strong"},Object(r.b)("strong",{parentName:"strong"},Object(r.b)("strong",{parentName:"strong"},Object(r.b)("strong",{parentName:"strong"},Object(r.b)("strong",{parentName:"strong"},"****"))))))),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"}," \t\t\t\t\t\t*",Object(r.b)("ol",Object.assign({parentName:"li"},{start:12}),Object(r.b)("li",{parentName:"ol"},"Dev Pipeline in\nDepth"))),Object(r.b)("li",{parentName:"ul"},"  \t\t\t\t\t\t*\n",Object(r.b)("strong",{parentName:"li"},Object(r.b)("strong",{parentName:"strong"},Object(r.b)("strong",{parentName:"strong"},Object(r.b)("strong",{parentName:"strong"},Object(r.b)("strong",{parentName:"strong"},Object(r.b)("strong",{parentName:"strong"},"****")))))),"/")),Object(r.b)("p",null,"Dev Task pipeline for this app."),Object(r.b)("p",null,"gulp.task('watchFiles', function() {\ngulp.watch(","['sccs/*",Object(r.b)("em",{parentName:"p"},"/"),".scss']",", ","['compileSass']",");\ngulp.watch(",'["js/main.js"]',", ",'["concatScripts"]',");"),Object(r.b)("pre",null,Object(r.b)("code",Object.assign({parentName:"pre"},{}),"//could also do this... but waste of time\ngulp.watch(['sccs/**/*.scss', \"js/main.js\"], ['compileSass', \"concatScripts\"]); \n")),Object(r.b)("p",null,"});"),Object(r.b)("p",null,'gulp.task("serve", ','["watchFiles"]',");"),Object(r.b)("p",null,"/",Object(r.b)("strong",{parentName:"p"},Object(r.b)("strong",{parentName:"strong"},Object(r.b)("strong",{parentName:"strong"},Object(r.b)("strong",{parentName:"strong"},Object(r.b)("strong",{parentName:"strong"},Object(r.b)("strong",{parentName:"strong"},"****"))))))),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"}," \t\t\t\t\t\t*",Object(r.b)("ol",Object.assign({parentName:"li"},{start:13}),Object(r.b)("li",{parentName:"ol"},"Where to go from\nhere?"))),Object(r.b)("li",{parentName:"ul"},"  \t\t\t\t\t\t*\n",Object(r.b)("strong",{parentName:"li"},Object(r.b)("strong",{parentName:"strong"},Object(r.b)("strong",{parentName:"strong"},Object(r.b)("strong",{parentName:"strong"},Object(r.b)("strong",{parentName:"strong"},Object(r.b)("strong",{parentName:"strong"},"****")))))),"/")),Object(r.b)("p",null,"Refer back to see the link to the GitHub file for the advanced folder"))}b&&b===Object(b)&&Object.isExtensible(b)&&Object.defineProperty(b,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"MDXContent",filename:"manual/JavaScript/Gulp-Basics-TH.md"}}),b.isMDXComponent=!0}}]);
//# sourceMappingURL=manual-java-script-gulp-basics-th.101a1afd2417ec7a4a77.js.map