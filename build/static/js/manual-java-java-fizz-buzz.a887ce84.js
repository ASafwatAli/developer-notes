(window.webpackJsonp=window.webpackJsonp||[]).push([[222],{"./manual/Java/Java-Fizz-Buzz.md":function(e,n,t){"use strict";t.r(n),t.d(n,"default",function(){return r});var a=t("./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js"),i=(t("./node_modules/react/index.js"),t("./node_modules/@mdx-js/react/dist/index.es.js")),s={},u="wrapper";function r(e){var n=e.components,t=Object(a.a)(e,["components"]);return Object(i.b)(u,Object.assign({},s,t,{components:n,mdxType:"MDXLayout"}),Object(i.b)("h1",{id:"fizz-buzz-in-java"},"Fizz Buzz in Java"),Object(i.b)("h2",{id:"gradle-setup"},"Gradle setup"),Object(i.b)("p",null,"For our ",Object(i.b)("inlineCode",{parentName:"p"},"build.gradle")," file:"),Object(i.b)("pre",null,Object(i.b)("code",Object.assign({parentName:"pre"},{className:"language-gradle"}),'apply plugin: "java"\napply plugin: "eclipse"\napply plugin: "idea"\n\nrepositories {\n    mavenCentral()\n}\n\ndependencies {\n    testCompile "junit:junit:4.12"\n}\ntest {\n    testLogging {\n        exceptionFormat = \'full\'\n        events = ["passed", "failed", "skipped"]\n    }\n}\n')),Object(i.b)("h2",{id:"setting-up-the-tests"},"Setting up the Tests"),Object(i.b)("p",null,"Create file ",Object(i.b)("inlineCode",{parentName:"p"},"src/test/java/FizzBuzzTest.java"),":"),Object(i.b)("pre",null,Object(i.b)("code",Object.assign({parentName:"pre"},{className:"language-java"}),'import org.junit.Ignore;\nimport org.junit.Test;\n\nimport static org.junit.Assert.assertEquals;\n\npublic class FizzBuzzTest {\n    @Test\n    public void testReturnsIntAsString() {\n        assertEquals("2", new FizzBuzz().run(2));\n    }\n\n    // @Ignore("Remove to run test")\n    @Test\n    public void testReturnsFizz() {\n        assertEquals("Fizz", new FizzBuzz().run(3));\n    }\n\n    @Test\n    public void testReturnsBuzz() {\n        assertEquals("Buzz", new FizzBuzz().run(5));\n    }\n\n    @Test\n    public void testReturnsFizzBuzz() {\n        assertEquals("FizzBuzz", new FizzBuzz().run(15));\n    }\n}\n')),Object(i.b)("h2",{id:"srcmainjavafizzbuzzjava"},"src/main/java/FizzBuzz.java"),Object(i.b)("p",null,"For our main Java file running FizzBuzz:"),Object(i.b)("pre",null,Object(i.b)("code",Object.assign({parentName:"pre"},{className:"language-java"}),'class FizzBuzz {\n    String run(Integer input) {\n        if (input % 15 == 0) {\n            return "FizzBuzz";\n        } else if (input % 3 == 0) {\n            return "Fizz";\n        } else if (input % 5 == 0) {\n            return "Buzz";\n        } else {\n            return Integer.toString(input);\n        }\n    }\n}\n')),Object(i.b)("h2",{id:"running-tests"},"Running tests"),Object(i.b)("p",null,"Run ",Object(i.b)("inlineCode",{parentName:"p"},"gradle test")," to compile and test our FizzBuzz class."))}r&&r===Object(r)&&Object.isExtensible(r)&&Object.defineProperty(r,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"MDXContent",filename:"manual/Java/Java-Fizz-Buzz.md"}}),r.isMDXComponent=!0}}]);
//# sourceMappingURL=manual-java-java-fizz-buzz.101a1afd2417ec7a4a77.js.map