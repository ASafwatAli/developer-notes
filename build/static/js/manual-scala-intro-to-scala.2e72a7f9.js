(window.webpackJsonp=window.webpackJsonp||[]).push([[442],{"./manual/Scala/Intro-To-Scala.md":function(e,n,t){"use strict";t.r(n),t.d(n,"default",function(){return r});var a=t("./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js"),l=(t("./node_modules/react/index.js"),t("./node_modules/@mdx-js/react/dist/index.es.js")),o={},s="wrapper";function r(e){var n=e.components,t=Object(a.a)(e,["components"]);return Object(l.b)(s,Object.assign({},o,t,{components:n,mdxType:"MDXLayout"}),Object(l.b)("h1",{id:"intro-to-scala"},"Intro to Scala"),Object(l.b)("p",null,"Builds on top of the JVC. Scala also does things like treating functions as first class citizens. You define functions without names and as closures."),Object(l.b)("p",null,"The adoption of Scala use it for a variety of projects."),Object(l.b)("p",null,"Apache Spark is also written in Scala."),Object(l.b)("p",null,"There are two ways to create variables: ",Object(l.b)("inlineCode",{parentName:"p"},"val")," (constant) and ",Object(l.b)("inlineCode",{parentName:"p"},"var")," (mutable)."),Object(l.b)("pre",null,Object(l.b)("code",Object.assign({parentName:"pre"},{className:"language-scala"}),'scala> val greeting = "Hello World!"\ngreeting: String = Hello World!\n\nscala> greeting = "Allo"\n<console>:12: error: reassignment to val\n       greeting = "Allo"\n                ^\n\nscala> var mes = "Hello!"\nmes: String = Hello!\n\nscala> mes\nres0: String = Hello!\n\nscala> mes = "Hello World!"\nmes: String = Hello World!\n\nscala> mes\nres1: String = Hello World!\n')),Object(l.b)("p",null,"We can always provide type information or the semi-colon if we wanted to, although not recommended (interesting they would say this...)."),Object(l.b)("h2",{id:"function-declarations"},"Function Declarations"),Object(l.b)("p",null,"Last evaluation implicitly returned."),Object(l.b)("p",null,"You must declare return type for a recursive function though."),Object(l.b)("pre",null,Object(l.b)("code",Object.assign({parentName:"pre"},{className:"language-scala"}),"def multipliedByTwo(x: Int) = (x == 0) x else x*2\n\ndef multipliedByTen(x: Double = 10, y: Double): Double {\n    x * y\n}\n")))}r&&r===Object(r)&&Object.isExtensible(r)&&Object.defineProperty(r,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"MDXContent",filename:"manual/Scala/Intro-To-Scala.md"}}),r.isMDXComponent=!0}}]);
//# sourceMappingURL=manual-scala-intro-to-scala.101a1afd2417ec7a4a77.js.map