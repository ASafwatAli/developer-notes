{"version":3,"sources":["/Users/dennis.okeeffe/Project-Imposter/developer-notes/manual/Tensorflow/Tensorflow-JS.md"],"names":["layoutProps","MDXLayout","MDXContent","_ref","components","props","Object","_Users_dennis_okeeffe_Project_Imposter_developer_notes_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","_mdx_js_react__WEBPACK_IMPORTED_MODULE_2__","assign","mdxType","id","parentName","isMDXComponent"],"mappings":"0XAWMA,EAAc,GAGdC,EAAY,UACH,SAASC,EAATC,GAGZ,IAFDC,EAECD,EAFDC,WACGC,EACFC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,gBACD,OAAOG,OAAAE,EAAA,EAAAF,CAACL,EAADK,OAAAG,OAAA,GAAeT,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYM,QAAQ,cAC5EJ,OAAAE,EAAA,EAAAF,CAAA,KAAQ,CACNK,GAAM,gBADR,iBAGAL,OAAAE,EAAA,EAAAF,CAAA,KAAQ,CACNK,GAAM,2BADR,2BAGAL,OAAAE,EAAA,EAAAF,CAAA,UACEA,OAAAE,EAAA,EAAAF,CAAA,MAAIM,WAAW,MAAf,wDACAN,OAAAE,EAAA,EAAAF,CAAA,MAAIM,WAAW,MAAf,0DACAN,OAAAE,EAAA,EAAAF,CAAA,MAAIM,WAAW,MAAf,mDACAN,OAAAE,EAAA,EAAAF,CAAA,MAAIM,WAAW,MAAf,qHACAN,OAAAE,EAAA,EAAAF,CAAA,MAAIM,WAAW,MAAf,0DAEFN,OAAAE,EAAA,EAAAF,CAAA,KAAQ,CACNK,GAAM,0BADR,0BAGAL,OAAAE,EAAA,EAAAF,CAAA,0GACAA,OAAAE,EAAA,EAAAF,CAAA,6NACAA,OAAAE,EAAA,EAAAF,CAAA,KAAQ,CACNK,GAAM,kBADR,kBAGAL,OAAAE,EAAA,EAAAF,CAAA,uHACAA,OAAAE,EAAA,EAAAF,CAAA,4EACAA,OAAAE,EAAA,EAAAF,CAAA,UACEA,OAAAE,EAAA,EAAAF,CAAA,MAAIM,WAAW,MAAf,iBACAN,OAAAE,EAAA,EAAAF,CAAA,MAAIM,WAAW,MAAf,mBACAN,OAAAE,EAAA,EAAAF,CAAA,MAAIM,WAAW,MAAf,cAEFN,OAAAE,EAAA,EAAAF,CAAA,kSAIJJ,EAAWW,gBAAiB","file":"static/js/manual-tensorflow-tensorflow-js.386070a7.js","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"tensorflowjs\"\n    }}>{`Tensorflow.js`}</h1>\n    <h2 {...{\n      \"id\": \"problem-solving-process\"\n    }}>{`Problem Solving Process`}</h2>\n    <ol>\n      <li parentName=\"ol\">{`Identify data relevant to problem (features, labels)`}</li>\n      <li parentName=\"ol\">{`Assemble a set of data related to problem to be solved`}</li>\n      <li parentName=\"ol\">{`Decide on the type of output you are predicting`}</li>\n      <li parentName=\"ol\">{`Based on type of output, pick an algorithm that will determine a correlation between your 'features' and 'labels'`}</li>\n      <li parentName=\"ol\">{`use model generated by algorithm to make a prediction`}</li>\n    </ol>\n    <h2 {...{\n      \"id\": \"continuous-vs-discrete\"\n    }}>{`Continuous vs Discrete`}</h2>\n    <p>{`We can decide what application or technique we are going to used based on the type of output.`}</p>\n    <p>{`For example, if the output data itself is continuous, we know that we would apply regression. If in fact the output data is discrete in nature ie pass/fail, then we would consider options like classification.`}</p>\n    <h2 {...{\n      \"id\": \"plinko-example\"\n    }}>{`Plinko Example`}</h2>\n    <p>{`In the example of Plinko, we want to try figure out where a ball dropped into the Plinko grid will end up.`}</p>\n    <p>{`From the example, we can determine that we have these features:`}</p>\n    <ol>\n      <li parentName=\"ol\">{`Drop Position`}</li>\n      <li parentName=\"ol\">{`Ball Bounciness`}</li>\n      <li parentName=\"ol\">{`Ball Size`}</li>\n    </ol>\n    <p>{`From these pieces of data, we want to know the output label of which bucket a ball lands in.`}</p>\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  "],"sourceRoot":""}