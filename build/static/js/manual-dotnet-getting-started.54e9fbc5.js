(window.webpackJsonp=window.webpackJsonp||[]).push([[148],{"./manual/Dotnet/Getting-Started.md":function(e,t,n){"use strict";n.r(t),n.d(t,"default",function(){return r});var a=n("./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js"),o=(n("./node_modules/react/index.js"),n("./node_modules/@mdx-js/react/dist/index.es.js")),i={},l="wrapper";function r(e){var t=e.components,n=Object(a.a)(e,["components"]);return Object(o.b)(l,Object.assign({},i,n,{components:t,mdxType:"MDXLayout"}),Object(o.b)("h1",{id:"getting-start-with-dotnet"},"Getting Start with Dotnet"),Object(o.b)("h2",{id:"resources"},"Resources"),Object(o.b)("ol",null,Object(o.b)("li",{parentName:"ol"},Object(o.b)("a",Object.assign({parentName:"li"},{href:"https://dotnet.microsoft.com/learn/dotnet/hello-world-tutorial/intro"}),"Dotnet in 10 Minutes")),Object(o.b)("li",{parentName:"ol"},Object(o.b)("a",Object.assign({parentName:"li"},{href:"https://codeburst.io/how-to-set-up-a-modern-full-stack-net-web-development-environment-on-mac-os-542dcd43a564"}),"Setting up full stack .NET web on MacOS")),Object(o.b)("li",{parentName:"ol"},Object(o.b)("a",Object.assign({parentName:"li"},{href:"https://dotnet.microsoft.com/download"}),"Dotnet install")),Object(o.b)("li",{parentName:"ol"},Object(o.b)("a",Object.assign({parentName:"li"},{href:"https://stackoverflow.com/questions/53030531/dotnet-command-not-found-in-mac"}),"Symlinking Dotnet to /usr/local/bin post-installation")),Object(o.b)("li",{parentName:"ol"},Object(o.b)("a",Object.assign({parentName:"li"},{href:"https://dotnet.microsoft.com/learn/aspnet/hello-world-tutorial/intro"}),"First web application")),Object(o.b)("li",{parentName:"ol"},Object(o.b)("a",Object.assign({parentName:"li"},{href:"https://docs.microsoft.com/en-us/aspnet/core/tutorials/first-web-api?view=aspnetcore-3.1&tabs=visual-studio"}),"Building a web API"))),Object(o.b)("h2",{id:"getting-started"},"Getting started"),Object(o.b)("p",null,"Follow resources ","[3]"," and ","[4]"," for getting installation going (installation example above is for MacOS)."),Object(o.b)("p",null,"Afterwards, run ",Object(o.b)("inlineCode",{parentName:"p"},"dotnet")," to confirm things are working. If nothing happens after installation, ensure you have followed resource ","[4]"," to symlink the installation to your path (or add the folder to path)."),Object(o.b)("h2",{id:"creating-a-console-app"},"Creating a Console App"),Object(o.b)("p",null,"We simply run the following to start a new console app."),Object(o.b)("p",null,"The following creates new app of type console into the ",Object(o.b)("inlineCode",{parentName:"p"},"myApp")," folder:"),Object(o.b)("pre",null,Object(o.b)("code",Object.assign({parentName:"pre"},{className:"language-shell"}),"dotnet new console -o myApp\ncd myApp\n")),Object(o.b)("p",null,"The above code will also generate a file named ",Object(o.b)("inlineCode",{parentName:"p"},"Program.cs")," into ",Object(o.b)("inlineCode",{parentName:"p"},"myApp"),", along with ",Object(o.b)("inlineCode",{parentName:"p"},"myApp.csproj")," config for library usage and an ",Object(o.b)("inlineCode",{parentName:"p"},"obj")," folder."),Object(o.b)("pre",null,Object(o.b)("code",Object.assign({parentName:"pre"},{className:"language-csharp"}),'// Program.cs\nusing System;\n\nnamespace myApp\n{\n    class Program\n    {\n        static void Main(string[] args)\n        {\n            Console.WriteLine("Hello World!");\n        }\n    }\n}\n')),Object(o.b)("p",null,"If we now fire ",Object(o.b)("inlineCode",{parentName:"p"},"dotnet run")," from the command line, we will see our ",Object(o.b)("inlineCode",{parentName:"p"},"Hello World!")," response. Hooray!"),Object(o.b)("p",null,"Moving further, we could add more lines into our ",Object(o.b)("inlineCode",{parentName:"p"},"Main")," program like ",Object(o.b)("inlineCode",{parentName:"p"},'Console.WriteLine("The current time is " + DateTime.Now);')," to update what we get."),Object(o.b)("h2",{id:"creating-a-web-application"},"Creating a Web application"),Object(o.b)("p",null,"The following initialises a web application in the folder ",Object(o.b)("inlineCode",{parentName:"p"},"myWebApp"),":"),Object(o.b)("pre",null,Object(o.b)("code",Object.assign({parentName:"pre"},{className:"language-shell"}),"# note that we are specifying not to enable https in this particular instance\ndotnet new webApp -o myWebApp --no-https\n")),Object(o.b)("p",null,"Several files were created in the myWebApp directory, to give you a simple web application that is ready to run."),Object(o.b)("ol",null,Object(o.b)("li",{parentName:"ol"},Object(o.b)("inlineCode",{parentName:"li"},"Startup.cs")," contains all the settings and configurations."),Object(o.b)("li",{parentName:"ol"},"The ",Object(o.b)("inlineCode",{parentName:"li"},"myWebApp/Pages")," directory contains some example web pages for the application."),Object(o.b)("li",{parentName:"ol"},Object(o.b)("inlineCode",{parentName:"li"},"myWebApp.csproj")," defines what libraries are referenced etc.")),Object(o.b)("p",null,"If we run ",Object(o.b)("inlineCode",{parentName:"p"},"dotnet run")," we will have a local development environment open up at port ",Object(o.b)("inlineCode",{parentName:"p"},"5000"),"."),Object(o.b)("h2",{id:"updating-the-code-in-the-application"},"Updating the code in the application"),Object(o.b)("p",null,"Editing ",Object(o.b)("inlineCode",{parentName:"p"},"Pages/Index.cshtml")," with the following will edit the application to show the server time:"),Object(o.b)("pre",null,Object(o.b)("code",Object.assign({parentName:"pre"},{className:"language-csharp"}),'@page\n@model IndexModel\n@{\n    ViewData["Title"] = "Home page";\n}\n\n<div class="text-center">\n    <h1>Hello, world!</h1>\n    <p>The time on the server is @DateTime.Now</p>\n</div>\n')))}r&&r===Object(r)&&Object.isExtensible(r)&&Object.defineProperty(r,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"MDXContent",filename:"manual/Dotnet/Getting-Started.md"}}),r.isMDXComponent=!0}}]);
//# sourceMappingURL=manual-dotnet-getting-started.101a1afd2417ec7a4a77.js.map