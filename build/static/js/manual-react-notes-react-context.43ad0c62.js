(window.webpackJsonp=window.webpackJsonp||[]).push([[406],{"./manual/React-Notes/React-Context.md":function(e,t,n){"use strict";n.r(t),n.d(t,"default",function(){return l});var a=n("./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js"),o=(n("./node_modules/react/index.js"),n("./node_modules/@mdx-js/react/dist/index.es.js")),r={},c="wrapper";function l(e){var t=e.components,n=Object(a.a)(e,["components"]);return Object(o.b)(c,Object.assign({},r,n,{components:t,mdxType:"MDXLayout"}),Object(o.b)("h1",{id:"react-context"},"React Context"),Object(o.b)("h2",{id:"basic-introduction"},"Basic Introduction"),Object(o.b)("table",null,Object(o.b)("thead",{parentName:"table"},Object(o.b)("tr",{parentName:"thead"},Object(o.b)("th",Object.assign({parentName:"tr"},{align:null}),"System"),Object(o.b)("th",Object.assign({parentName:"tr"},{align:null}),"Description"))),Object(o.b)("tbody",{parentName:"table"},Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",Object.assign({parentName:"tr"},{align:null}),"Props"),Object(o.b)("td",Object.assign({parentName:"tr"},{align:null}),"Get data from a parent component to a direct child component")),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",Object.assign({parentName:"tr"},{align:null}),"Context"),Object(o.b)("td",Object.assign({parentName:"tr"},{align:null}),"Gets data from a parent omponent to any nested child component")))),Object(o.b)("h2",{id:"an-app-with-context"},"An App with Context"),Object(o.b)("p",null,"A basic app where we want to pass context of things like language everywhere."),Object(o.b)("pre",null,Object(o.b)("code",Object.assign({parentName:"pre"},{className:"language-javascript"}),"class App extends Component {\n    state = {langauge: 'english'};\n\n    onLanguageChange = language => this.setState({language});\n\n    render() {\n        // return elements with onClick to change state\n    }\n}\n")),Object(o.b)("h2",{id:"getting-data-out-of-context"},"Getting Data Out of Context"),Object(o.b)("ol",null,Object(o.b)("li",{parentName:"ol"},"Create context file"),Object(o.b)("li",{parentName:"ol"},"Set contextType as static property to class"),Object(o.b)("li",{parentName:"ol"},"Consume from this.context"),Object(o.b)("li",{parentName:"ol"},"Update the context using the ",Object(o.b)("inlineCode",{parentName:"li"},"Provider"))),Object(o.b)("pre",null,Object(o.b)("code",Object.assign({parentName:"pre"},{className:"language-javascript"}),"// context/language/index.js\nimport React from 'react';\n\n// creating context with default 'english'\nexport default React.createContext('english');\n\n// inside of a component \nimport LanguageContext from 'path/to/file';\nexport default class Button extends React.Component {\n    static contextType = LanguageContext;\n\n    render() {\n        const text = this.context === 'english' ? 'Submit' : 'Voorleggen';\n        return <button>{text}</button>\n    }\n}\n")),Object(o.b)("p",null,"To update the context, from a higher provider we could set..."),Object(o.b)("pre",null,Object(o.b)("code",Object.assign({parentName:"pre"},{className:"language-javascript"}),"class App extends Component {\n    state = {langauge: 'english'};\n\n    onLanguageChange = language => this.setState({language});\n\n    render() {\n        // return elements with onClick to change state\n        <LanguageContext.Provider value={this.state.language}>\n           <ChildThatContainsButton>\n        </LanguageContext.Provider>\n    }\n}\n")),Object(o.b)("h3",{id:"gotchas-around-context"},"Gotchas Around Context"),Object(o.b)("p",null,"The big gotcha with the context is dealing with the value prop given to the provider."),Object(o.b)("h2",{id:"alternative-consumption-of-data-with-consumers"},"Alternative Consumption of Data with Consumers"),Object(o.b)("pre",null,Object(o.b)("code",Object.assign({parentName:"pre"},{className:"language-javascript"}),"// context/language/index.js\nimport React from 'react';\n\n// creating context with default 'english'\nexport default React.createContext('english');\n\n// inside of a component \nimport LanguageContext from 'path/to/file';\nexport default class Button extends React.Component {\n    render() {\n        return <button>\n            <LanguageContext.Consumer>\n              {value => value === 'english' ? 'Submit' : 'Voorleggen'}\n           </LanguageContext.Consumer>\n        </button>\n    }\n}\n")),Object(o.b)("h3",{id:"using-multiple-consumers"},"Using Multiple Consumers"),Object(o.b)("pre",null,Object(o.b)("code",Object.assign({parentName:"pre"},{className:"language-javascript"}),"// context/language/index.js\nimport React from 'react';\n\n// creating context with default 'english'\nexport default React.createContext('english');\n\n// inside of a component \nimport LanguageContext from 'path/to/file';\nexport default class Button extends React.Component {\n    render() {\n        return <button>\n            <ColorContext.Consumer>\n            {color => {\n                <LanguageContext.Consumer>\n                    {value => value === 'english' ? 'Submit' : 'Voorleggen'}\n                </LanguageContext.Consumer>  \n            }}\n           </ColorContext.Consumer>\n        </button>\n    }\n}\n")),Object(o.b)("h2",{id:"context-vs-redux"},"Context vs Redux"),Object(o.b)("table",null,Object(o.b)("thead",{parentName:"table"},Object(o.b)("tr",{parentName:"thead"},Object(o.b)("th",Object.assign({parentName:"tr"},{align:null}),"Redux"),Object(o.b)("th",Object.assign({parentName:"tr"},{align:null}),"Context"))),Object(o.b)("tbody",{parentName:"table"},Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",Object.assign({parentName:"tr"},{align:null}),"Excellent documentation"),Object(o.b)("td",Object.assign({parentName:"tr"},{align:null}),"No need for extra lib")),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",Object.assign({parentName:"tr"},{align:null}),"Well-known for design patterns"),Object(o.b)("td",Object.assign({parentName:"tr"},{align:null}),"Hard to build a 'store' component with cross cutting concerns")),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",Object.assign({parentName:"tr"},{align:null}),"Tremendous amount of open source libs"),Object(o.b)("td",Object.assign({parentName:"tr"},{align:null}))))))}l&&l===Object(l)&&Object.isExtensible(l)&&Object.defineProperty(l,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"MDXContent",filename:"manual/React-Notes/React-Context.md"}}),l.isMDXComponent=!0}}]);
//# sourceMappingURL=manual-react-notes-react-context.101a1afd2417ec7a4a77.js.map