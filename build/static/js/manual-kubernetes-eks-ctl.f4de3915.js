(window.webpackJsonp=window.webpackJsonp||[]).push([[269],{"./manual/Kubernetes/EKS-Ctl.md":function(e,t,n){"use strict";n.r(t),n.d(t,"default",function(){return c});var a=n("./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js"),l=(n("./node_modules/react/index.js"),n("./node_modules/@mdx-js/react/dist/index.es.js")),s={},r="wrapper";function c(e){var t=e.components,n=Object(a.a)(e,["components"]);return Object(l.b)(r,Object.assign({},s,n,{components:t,mdxType:"MDXLayout"}),Object(l.b)("h1",{id:"eksctl"},"eksctl"),Object(l.b)("p",null,Object(l.b)("a",Object.assign({parentName:"p"},{href:"https://eksctl.io/"}),"https://eksctl.io/")),Object(l.b)("h2",{id:"tldr"},"tl;dr"),Object(l.b)("h3",{id:"clusters"},"Clusters"),Object(l.b)("table",null,Object(l.b)("thead",{parentName:"table"},Object(l.b)("tr",{parentName:"thead"},Object(l.b)("th",Object.assign({parentName:"tr"},{align:null}),"Action"),Object(l.b)("th",Object.assign({parentName:"tr"},{align:null}),"Command"))),Object(l.b)("tbody",{parentName:"table"},Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object.assign({parentName:"tr"},{align:null}),"Get cluster"),Object(l.b)("td",Object.assign({parentName:"tr"},{align:null}),Object(l.b)("inlineCode",{parentName:"td"},"eksctl get cluster [--name=<name>] [--region=<region>]"))),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object.assign({parentName:"tr"},{align:null}),"Create cluster"),Object(l.b)("td",Object.assign({parentName:"tr"},{align:null}),Object(l.b)("inlineCode",{parentName:"td"},"eksctl create cluster --name=cluster-1 --nodes=4"))),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object.assign({parentName:"tr"},{align:null}),"Write kubeconfig"),Object(l.b)("td",Object.assign({parentName:"tr"},{align:null}),Object(l.b)("inlineCode",{parentName:"td"},"eksctl utils write-kubeconfig --name=<name> [--kubeconfig=<path>] [--set-kubeconfig-context=<bool>]"))),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object.assign({parentName:"tr"},{align:null}),"Delete cluster"),Object(l.b)("td",Object.assign({parentName:"tr"},{align:null}),Object(l.b)("inlineCode",{parentName:"td"},"eksctl delete cluster --name=<name> [--region=<region>]"))))),Object(l.b)("p",null,"eksctl create cluster --name=cluster-3 --nodes=4 --auto-kubeconfig"),Object(l.b)("table",null,Object(l.b)("thead",{parentName:"table"},Object(l.b)("tr",{parentName:"thead"},Object(l.b)("th",Object.assign({parentName:"tr"},{align:null}),"Action"),Object(l.b)("th",Object.assign({parentName:"tr"},{align:null}),"Flag"),Object(l.b)("th",Object.assign({parentName:"tr"},{align:null}),"Example"))),Object(l.b)("tbody",{parentName:"table"},Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object.assign({parentName:"tr"},{align:null}),"Name the cluster"),Object(l.b)("td",Object.assign({parentName:"tr"},{align:null}),"--name"),Object(l.b)("td",Object.assign({parentName:"tr"},{align:null}),"eksctl create cluster --name=cluster-3")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object.assign({parentName:"tr"},{align:null}),"Set default node count"),Object(l.b)("td",Object.assign({parentName:"tr"},{align:null}),"--nodes"),Object(l.b)("td",Object.assign({parentName:"tr"},{align:null}),"eksctl create cluster --nodes=4")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object.assign({parentName:"tr"},{align:null}),"Auto configure kubectl"),Object(l.b)("td",Object.assign({parentName:"tr"},{align:null}),"--auto-kubeconfig"),Object(l.b)("td",Object.assign({parentName:"tr"},{align:null}),"eksctl create cluster --auto-kubeconfig")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object.assign({parentName:"tr"},{align:null}),"Use an auth scaling group"),Object(l.b)("td",Object.assign({parentName:"tr"},{align:null}),"--nodes-min, --nodes-max"),Object(l.b)("td",Object.assign({parentName:"tr"},{align:null}),"eksctl create cluster --nodes-min=3 --nodes-max=5")))),Object(l.b)("h3",{id:"node-groups"},"Node Groups"),Object(l.b)("table",null,Object(l.b)("thead",{parentName:"table"},Object(l.b)("tr",{parentName:"thead"},Object(l.b)("th",Object.assign({parentName:"tr"},{align:null}),"Action"),Object(l.b)("th",Object.assign({parentName:"tr"},{align:null}),"Command"))),Object(l.b)("tbody",{parentName:"table"},Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object.assign({parentName:"tr"},{align:null}),"Get nodegroup"),Object(l.b)("td",Object.assign({parentName:"tr"},{align:null}),Object(l.b)("inlineCode",{parentName:"td"},"eksctl get nodegroup --cluster=<clusterName> [--name=<nodegroupName>]"))),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object.assign({parentName:"tr"},{align:null}),"Create nodegroup"),Object(l.b)("td",Object.assign({parentName:"tr"},{align:null}),Object(l.b)("inlineCode",{parentName:"td"},"eksctl create nodegroup --cluster=<clusterName> [--name=<nodegroupName>]"))),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object.assign({parentName:"tr"},{align:null}),"Scale nodegroup"),Object(l.b)("td",Object.assign({parentName:"tr"},{align:null}),Object(l.b)("inlineCode",{parentName:"td"},"eksctl scale nodegroup --cluster=cluster-1 --nodes=5 ng-a345f4e1"))),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object.assign({parentName:"tr"},{align:null}),"Delete nodegroup"),Object(l.b)("td",Object.assign({parentName:"tr"},{align:null}),Object(l.b)("inlineCode",{parentName:"td"},"eksctl delete nodegroup --cluster=<clusterName> --nodes=<desiredCount> --name=<nodegroupName>"))),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object.assign({parentName:"tr"},{align:null}),"SSH Access Flag"),Object(l.b)("td",Object.assign({parentName:"tr"},{align:null}),Object(l.b)("inlineCode",{parentName:"td"},"--ssh-access"))),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object.assign({parentName:"tr"},{align:null}),"Full ECR Access"),Object(l.b)("td",Object.assign({parentName:"tr"},{align:null}),Object(l.b)("inlineCode",{parentName:"td"},"--full-ecr-access"))),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object.assign({parentName:"tr"},{align:null}),"Enable autoscaling"),Object(l.b)("td",Object.assign({parentName:"tr"},{align:null}),Object(l.b)("inlineCode",{parentName:"td"},"--asg-access"))))),Object(l.b)("p",null,"Once clsuter is running, you'll need to add the autoscaler yourself. See ",Object(l.b)("a",Object.assign({parentName:"p"},{href:"https://github.com/kubernetes/autoscaler/blob/master/cluster-autoscaler/cloudprovider/aws/README.md"}),"https://github.com/kubernetes/autoscaler/blob/master/cluster-autoscaler/cloudprovider/aws/README.md"),"."),Object(l.b)("h3",{id:"creating-a-cluster-using-a-config-file-instead-of-flags"},"Creating a cluster using a config file instead of flags"),Object(l.b)("p",null,"You can create a cluster using a config file instead of flags."),Object(l.b)("p",null,"First, create cluster.yaml file:"),Object(l.b)("pre",null,Object(l.b)("code",Object.assign({parentName:"pre"},{className:"language-yaml"}),"apiVersion: eksctl.io/v1alpha3\nkind: ClusterConfig\n\nmetadata:\n  name: basic-cluster\n  region: eu-north-1\n\nnodeGroups:\n  - name: ng-1\n    instanceType: m5.large\n    desiredCapacity: 10\n")),Object(l.b)("p",null,"Next, run this command:"),Object(l.b)("pre",null,Object(l.b)("code",Object.assign({parentName:"pre"},{className:"language-shell"}),"eksctl create cluster -f cluster.yaml\n")),Object(l.b)("p",null,"This will create a cluster as described."),Object(l.b)("p",null,"If you needed to use an existing VPC, you can use a config file like this:"),Object(l.b)("pre",null,Object(l.b)("code",Object.assign({parentName:"pre"},{className:"language-yaml"}),"apiVersion: eksctl.io/v1alpha3\nkind: ClusterConfig\n\nmetadata:\n  name: cluster-in-existing-vpc\n  region: eu-north-1\n\nvpc:\n  subnets:\n    private:\n      eu-north-1a: {id: subnet-0ff156e0c4a6d300c}\n      eu-north-1b: {id: subnet-0549cdab573695c03}\n      eu-north-1c: {id: subnet-0426fb4a607393184}\n\nnodeGroups:\n  - name: ng-1-workers\n    labels: {role: workers}\n    instanceType: m5.xlarge\n    desiredCapacity: 10\n    privateNetworking: true\n  - name: ng-2-builders\n    labels: {role: builders}\n    instanceType: m5.2xlarge\n    desiredCapacity: 2\n    privateNetworking: true\n    iam:\n      withAddonPolicies:\n        imageBuilder: true\n")),Object(l.b)("p",null,"See ",Object(l.b)("img",{alt:"examples/",src:"https://github.com/weaveworks/eksctl/tree/master/examples"})," directory for more sample config files."),Object(l.b)("h2",{id:"usage"},"Usage"),Object(l.b)("p",null,"To download the latest release, run:"),Object(l.b)("pre",null,Object(l.b)("code",Object.assign({parentName:"pre"},{className:"language-shell"}),'curl --silent --location "https://github.com/weaveworks/eksctl/releases/download/latest_release/eksctl_$(uname -s)_amd64.tar.gz" | tar xz -C /tmp\nsudo mv /tmp/eksctl /usr/local/bin\n')),Object(l.b)("p",null,"Alternatively, macOS users can use Homebrew:"),Object(l.b)("pre",null,Object(l.b)("code",Object.assign({parentName:"pre"},{className:"language-shell"}),"brew install weaveworks/tap/eksctl\n")),Object(l.b)("p",null,"You will need to have AWS API credentials configured. What works for AWS CLI or any other tools (kops, Terraform etc), should be sufficient. You can use ",Object(l.b)("inlineCode",{parentName:"p"},"~/.aws/credentials")," file or environment variables. For more information read AWS documentation."),Object(l.b)("p",null,"To create a basic cluster, run:"),Object(l.b)("pre",null,Object(l.b)("code",Object.assign({parentName:"pre"},{className:"language-shell"}),"eksctl create cluster\n")),Object(l.b)("p",null,"A cluster will be created with default parameters:"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},'Exciting auto-generated name, e.g. "fabulous-mushroom-1527688624"'),Object(l.b)("li",{parentName:"ul"},"2x m5.large nodes (this instance type suits most common use-cases, and is good value for money)"),Object(l.b)("li",{parentName:"ul"},"Use official AWS EKS AMI"),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"us-west-2")," region"),Object(l.b)("li",{parentName:"ul"},"Dedicated VPC (check your quotas)"),Object(l.b)("li",{parentName:"ul"},"Using static AMI resolver")),Object(l.b)("h3",{id:"example-output"},"Example output"),Object(l.b)("pre",null,Object(l.b)("code",Object.assign({parentName:"pre"},{className:"language-shell"}),'$ eksctl create cluster\n[\u2139]  using region us-west-2\n[\u2139]  setting availability zones to [us-west-2c us-west-2a us-west-2b]\n[\u2139]  subnets for us-west-2c - public:192.168.0.0/19 private:192.168.96.0/19\n[\u2139]  subnets for us-west-2a - public:192.168.32.0/19 private:192.168.128.0/19\n[\u2139]  subnets for us-west-2b - public:192.168.64.0/19 private:192.168.160.0/19\n[\u2139]  using "ami-0ce0ec06e682ee10e" for nodes\n[\u2139]  creating EKS cluster "floral-unicorn-1540567338" in "us-west-2" region\n[\u2139]  will create 2 separate CloudFormation stacks for cluster itself and the initial nodegroup\n[\u2139]  if you encounter any issues, check CloudFormation console or try \'eksctl utils describe-stacks --region=us-west-2 --name=floral-unicorn-1540567338\'\n[\u2139]  creating cluster stack "eksctl-floral-unicorn-1540567338-cluster"\n[\u2139]  creating nodegroup stack "eksctl-floral-unicorn-1540567338-nodegroup-ng-39d54824"\n[\u2714]  all EKS cluster resource for "floral-unicorn-1540567338" had been created\n[\u2714]  saved kubeconfig as "~/.kube/config"\n[\u2139]  nodegroup "ng-39d54824" has 0 nodes\n[\u2139]  waiting for at least 2 nodes to become ready\n[\u2139]  nodegroup "ng-39d54824" has 2 nodes\n[\u2139]  node "ip-192-168-71-20.us-west-2.compute.internal" is ready\n[\u2139]  node "ip-192-168-25-215.us-west-2.compute.internal" is ready\n[\u2139]  kubectl command should work with "~/.kube/config", try \'kubectl get nodes\'\n[\u2714]  EKS cluster "floral-unicorn-1540567338" in "us-west-2" region is ready\n$\n')))}c&&c===Object(c)&&Object.isExtensible(c)&&Object.defineProperty(c,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"MDXContent",filename:"manual/Kubernetes/EKS-Ctl.md"}}),c.isMDXComponent=!0}}]);
//# sourceMappingURL=manual-kubernetes-eks-ctl.101a1afd2417ec7a4a77.js.map