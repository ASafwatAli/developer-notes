{"version":3,"sources":["/Users/dennis.okeeffe/Project-Imposter/developer-notes/manual/Kubernetes/EKS-Kubernetes-Dashboard.md"],"names":["layoutProps","MDXLayout","MDXContent","_ref","components","props","Object","_Users_dennis_okeeffe_Project_Imposter_developer_notes_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","_mdx_js_react__WEBPACK_IMPORTED_MODULE_2__","assign","mdxType","id","parentName","href","alt","src","className","isMDXComponent"],"mappings":"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","file":"static/js/manual-kubernetes-eks-kubernetes-dashboard.613b1785.js","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"kubernetes-dashboard\"\n    }}>{`Kubernetes Dashboard`}</h1>\n    <p>{`This belongs to the Kubernetes project and gives you a UI overview of what is going on.`}</p>\n    <p>{`It displays info about:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Workload (Deployments, Pods, ReplicationSets)`}</li>\n      <li parentName=\"ul\">{`Namespaces`}</li>\n      <li parentName=\"ul\">{`Services`}</li>\n      <li parentName=\"ul\">{`Nodes & Storage`}</li>\n      <li parentName=\"ul\">{`Usage Metrics (Heapster monitoring required)`}</li>\n    </ul>\n    <p>{`The dashboard can also execute commands based on propr RBAC permissions.`}</p>\n    <p>{`Security:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`HTTPS`}</li>\n      <li parentName=\"ul\">{`Login via Bearer token`}</li>\n      <li parentName=\"ul\">{`RBAC to define fine-grain access to UI components`}</li>\n    </ul>\n    <p>{`More info can be found `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/kubernetes/dashboard\"\n      }}>{`https://github.com/kubernetes/dashboard`}</a>{`.`}</p>\n    <p>{`What the setup for us will look like when touching base with the dashboard:`}</p>\n    <p><img alt=\"Dashboard access layout\" src=\"https://res.cloudinary.com/gitgoodclub/image/upload/v1548218031/eks-course/Screen_Shot_2019-01-23_at_3.33.27_pm.png\" /></p>\n    <h2 {...{\n      \"id\": \"steps-to-take\"\n    }}>{`Steps to take`}</h2>\n    <ol>\n      <li parentName=\"ol\">{`Create service account and RBAC rules`}</li>\n      <li parentName=\"ol\">{`Deploy dashboard`}</li>\n      <li parentName=\"ol\">{`Deploy metrics Add-Ons`}</li>\n      <li parentName=\"ol\">{`Create cluster admin account and explore dashboard`}</li>\n    </ol>\n    <p>{`We need to create:`}</p>\n    <ol>\n      <li parentName=\"ol\">{`A service account for the dashboard`}</li>\n      <li parentName=\"ol\">{`Several roles to grant privileges (RBAC) to the dashboard`}</li>\n      <li parentName=\"ol\">{`A role binding to link the service account to the RBAC roles`}</li>\n    </ol>\n    <h2 {...{\n      \"id\": \"creating-the-serviceaccount-and-roles\"\n    }}>{`Creating the ServiceAccount and Roles`}</h2>\n    <p>{`First, we handle the RBAC by creating the `}<inlineCode parentName=\"p\">{`ServiceAccount`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`Role`}</inlineCode>{` and then using a `}<inlineCode parentName=\"p\">{`RoleBinding`}</inlineCode>{` to attach that Role to the Service Account.`}</p>\n    <p>{`dashboard-account-rab.yaml:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-yaml\"\n      }}>{`# ------------------- Dashboard Service Account ------------------- #\n\napiVersion: v1\nkind: ServiceAccount\nmetadata:\n  labels:\n    k8s-app: kubernetes-dashboard\n  name: kubernetes-dashboard\n  namespace: kube-system\n\n---\n# ------------------- Dashboard Role & Role Binding ------------------- #\n\nkind: Role\napiVersion: rbac.authorization.k8s.io/v1\nmetadata:\n  name: kubernetes-dashboard-minimal\n  namespace: kube-system\nrules:\n  # Allow Dashboard to create 'kubernetes-dashboard-key-holder' secret.\n  - apiGroups: ['']\n    resources: ['secrets']\n    verbs: ['create']\n    # Allow Dashboard to create 'kubernetes-dashboard-settings' config map.\n  - apiGroups: ['']\n    resources: ['configmaps']\n    verbs: ['create']\n    # Allow Dashboard to get, update and delete Dashboard exclusive secrets.\n  - apiGroups: ['']\n    resources: ['secrets']\n    resourceNames:\n      ['kubernetes-dashboard-key-holder', 'kubernetes-dashboard-certs']\n    verbs: ['get', 'update', 'delete']\n    # Allow Dashboard to get and update 'kubernetes-dashboard-settings' config map.\n  - apiGroups: ['']\n    resources: ['configmaps']\n    resourceNames: ['kubernetes-dashboard-settings']\n    verbs: ['get', 'update']\n    # Allow Dashboard to get metrics from heapster.\n  - apiGroups: ['']\n    resources: ['services']\n    resourceNames: ['heapster']\n    verbs: ['proxy']\n  - apiGroups: ['']\n    resources: ['services/proxy']\n    resourceNames: ['heapster', 'http:heapster:', 'https:heapster:']\n    verbs: ['get']\n\n---\napiVersion: rbac.authorization.k8s.io/v1\nkind: RoleBinding\nmetadata:\n  name: kubernetes-dashboard-minimal\n  namespace: kube-system\nroleRef:\n  # Reference role we created above\n  apiGroup: rbac.authorization.k8s.io\n  kind: Role\n  name: kubernetes-dashboard-minimal\nsubjects:\n  # Attach RoleBinding to Service Account we first created\n  - kind: ServiceAccount\n    name: kubernetes-dashboard\n    namespace: kube-system\n\n---\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"deploying-the-dashboard\"\n    }}>{`Deploying the dashboard`}</h2>\n    <p><img alt=\"Layout\" src=\"https://res.cloudinary.com/gitgoodclub/image/upload/v1548219837/eks-course/Screen_Shot_2019-01-23_at_4.03.45_pm.png\" /></p>\n    <p>{`There will be 3 resources created in the lecture:`}</p>\n    <ol>\n      <li parentName=\"ol\">{`Service: fixed port, fixed url, user facing`}</li>\n      <li parentName=\"ol\">{`Deployment: Dashboard pod -- port 8443 (can live on any host)`}</li>\n      <li parentName=\"ol\">{`Volume: This will contain our secret certificates`}</li>\n    </ol>\n    <p>{`This is all stored in the `}<inlineCode parentName=\"p\">{`deploy-dashboard.yml`}</inlineCode>{` file:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-yaml\"\n      }}>{`# Copyright 2017 The Kubernetes Authors.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\n# ------------------- Dashboard Secret ------------------- #\n\napiVersion: v1\nkind: Secret\nmetadata:\n  labels:\n    # Using this to match easily\n    k8s-app: kubernetes-dashboard\n  name: kubernetes-dashboard-certs\n  namespace: kube-system\ntype: Opaque\n\n---\n# ------------------- Dashboard Deployment ------------------- #\n\nkind: Deployment\napiVersion: apps/v1beta2\nmetadata:\n  labels:\n    k8s-app: kubernetes-dashboard\n  # Used for Service to target\n  name: kubernetes-dashboard\n  namespace: kube-system\nspec:\n  replicas: 1\n  revisionHistoryLimit: 10\n  selector:\n    matchLabels:\n      k8s-app: kubernetes-dashboard\n  template:\n    metadata:\n      labels:\n        k8s-app: kubernetes-dashboard\n    spec:\n      containers:\n        - name: kubernetes-dashboard\n          image: k8s.gcr.io/kubernetes-dashboard-amd64:v1.10.0\n          # Used for Service to expose\n          ports:\n            - containerPort: 8443\n              protocol: TCP\n          args:\n            - --auto-generate-certificates\n            # Uncomment the following line to manually specify Kubernetes API server Host\n            # If not specified, Dashboard will attempt to auto discover the API server and connect\n            # to it. Uncomment only if the default does not work.\n            # - --apiserver-host=http://my-address:port\n          volumeMounts:\n            - name: kubernetes-dashboard-certs\n              mountPath: /certs\n              # Create on-disk volume to store exec logs\n            - mountPath: /tmp\n              name: tmp-volume\n          livenessProbe:\n            httpGet:\n              scheme: HTTPS\n              path: /\n              port: 8443\n            initialDelaySeconds: 30\n            timeoutSeconds: 30\n      volumes:\n        - name: kubernetes-dashboard-certs\n          secret:\n            secretName: kubernetes-dashboard-certs\n        - name: tmp-volume\n          emptyDir: {}\n      serviceAccountName: kubernetes-dashboard\n      # Comment the following tolerations if Dashboard must not be deployed on master\n      tolerations:\n        - key: node-role.kubernetes.io/master\n          effect: NoSchedule\n\n---\n# ------------------- Dashboard Service ------------------- #\n\nkind: Service\napiVersion: v1\nmetadata:\n  labels:\n    k8s-app: kubernetes-dashboard\n  name: kubernetes-dashboard\n  namespace: kube-system\nspec:\n  ports:\n    - port: 443\n      targetPort: 8443\n  selector:\n    k8s-app: kubernetes-dashboard\n`}</code></pre>\n    <p>{`After we applying the yaml file, we can see what we've created using `}<inlineCode parentName=\"p\">{`kubectl get all --namespace kube-system --selector=k8s-app=kubernetes-dashboard`}</inlineCode>{`.`}</p>\n    <p>{`We can get even more granular with:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`kubectl get svc --namespace kube-system --selector=k8s-app=kubernetes-dashboard\nkubectl get pods --namespace kube-system --selector=k8s-app=kubernetes-dashboard\nkubectl get deployments --namespace kube-system --selector=k8s-app=kubernetes-dashboard\nkubectl get replicasets --namespace kube-system --selector=k8s-app=kubernetes-dashboard\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"deploying-the-metrics-add-on\"\n    }}>{`Deploying the metrics add-on`}</h2>\n    <p><img alt=\"Heapster Kubernetes resources\" src=\"https://res.cloudinary.com/gitgoodclub/image/upload/v1548221185/eks-course/Screen_Shot_2019-01-23_at_4.26.16_pm.png\" /></p>\n    <p>{`We will deploy Heapster and that is made up of three Kubernetes resources: a service, deployment and service account.`}</p>\n    <p><img alt=\"InfluxDB resources\" src=\"https://res.cloudinary.com/gitgoodclub/image/upload/v1548221289/eks-course/Screen_Shot_2019-01-23_at_4.28.00_pm.png\" /></p>\n    <p>{`We will also deploy InfluxDB to store its data. The Heapster deployment will interface with the InfluxDB service.`}</p>\n    <p><img alt=\"Full connection\" src=\"https://res.cloudinary.com/gitgoodclub/image/upload/v1548221371/eks-course/Screen_Shot_2019-01-23_at_4.29.21_pm.png\" /></p>\n    <h3 {...{\n      \"id\": \"deploying-influxdb\"\n    }}>{`Deploying InfluxDB`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-yaml\"\n      }}>{`apiVersion: extensions/v1beta1\nkind: Deployment\nmetadata:\n  name: monitoring-influxdb\n  namespace: kube-system\nspec:\n  replicas: 1\n  template:\n    metadata:\n      # label k8s-app used for Service spec\n      labels:\n        task: monitoring\n        k8s-app: influxdb\n    spec:\n      containers:\n        - name: influxdb\n          image: k8s.gcr.io/heapster-influxdb-amd64:v1.5.2\n          volumeMounts:\n            - mountPath: /data\n              name: influxdb-storage\n      volumes:\n        - name: influxdb-storage\n          emptyDir: {}\n---\napiVersion: v1\nkind: Service\nmetadata:\n  labels:\n    task: monitoring\n    # For use as a Cluster add-on (https://github.com/kubernetes/kubernetes/tree/master/cluster/addons)\n    # If you are NOT using this as an addon, you should comment out this line.\n    kubernetes.io/cluster-service: 'true'\n    kubernetes.io/name: monitoring-influxdb\n  name: monitoring-influxdb\n  namespace: kube-system\nspec:\n  ports:\n    - port: 8086\n      targetPort: 8086\n  # What Service should be linked to\n  selector:\n    k8s-app: influxdb\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"deploying-heapter\"\n    }}>{`Deploying Heapter`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-yml\"\n      }}>{`apiVersion: extensions/v1beta1\nkind: Deployment\nmetadata:\n  name: heapster\n  namespace: kube-system\nspec:\n  replicas: 1\n  template:\n    metadata:\n      labels:\n        task: monitoring\n        k8s-app: heapster\n    spec:\n      serviceAccountName: heapster\n      containers:\n        - name: heapster\n          image: k8s.gcr.io/heapster-amd64:v1.5.4\n          imagePullPolicy: IfNotPresent\n          command:\n            - /heapster\n            - --source=kubernetes:https://kubernetes.default\n            - --sink=influxdb:http://monitoring-influxdb.kube-system.svc:8086\n---\napiVersion: v1\nkind: Service\nmetadata:\n  labels:\n    task: monitoring\n    # For use as a Cluster add-on (https://github.com/kubernetes/kubernetes/tree/master/cluster/addons)\n    # If you are NOT using this as an addon, you should comment out this line.\n    kubernetes.io/cluster-service: 'true'\n    kubernetes.io/name: Heapster\n  name: heapster\n  namespace: kube-system\nspec:\n  ports:\n    - port: 80\n      targetPort: 8082\n  selector:\n    k8s-app: heapster\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"deploying-heapster-rbac\"\n    }}>{`Deploying Heapster RBAC`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-yaml\"\n      }}>{`apiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: heapster\n  namespace: kube-system\n---\nkind: ClusterRoleBinding\napiVersion: rbac.authorization.k8s.io/v1beta1\nmetadata:\n  name: heapster\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: system:heapster\nsubjects:\n  - kind: ServiceAccount\n    name: heapster\n    namespace: kube-system\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"deploying-heapster-and-influxdb\"\n    }}>{`Deploying Heapster and Influx.db`}</h2>\n    <p>{`Applying these deployments to the cluster:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`kubectl apply -f deploy-heapster.yml\nkubectl apply -f deploy-influxdb.yml\nkubectl apply -f deploy-heapster-rbac.yml\n`}</code></pre>\n    <p>{`Using a selector see what we built:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`kubectl get all --namespace kube-system --selector=task=monitoring\n`}</code></pre>\n    <p>{`Applying the above should return something like:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`NAME                                       READY   STATUS    RESTARTS   AGE\npod/heapster-84c9bc48c4-lph2v              1/1     Running   0          1m\npod/monitoring-influxdb-848b9b66f6-7tkcv   1/1     Running   0          2m\n\nNAME                          TYPE        CLUSTER-IP       EXTERNAL-IP   PORT(S)    AGE\nservice/heapster              ClusterIP   [REDACTED]      <none>        80/TCP     3m\nservice/monitoring-influxdb   ClusterIP   [REDACTED]      <none>        8086/TCP   2m\n\nNAME                                  DESIRED   CURRENT   UP-TO-DATE   AVAILABLE   AGE\ndeployment.apps/heapster              1         1         1            1           3m\ndeployment.apps/monitoring-influxdb   1         1         1            1           2m\n\nNAME                                             DESIRED   CURRENT   READY   AGE\nreplicaset.apps/heapster-84c9bc48c4              1         1         1       3m\nreplicaset.apps/monitoring-influxdb-848b9b66f6   1         1         1       2m\n`}</code></pre>\n    <p>{`Note that Kubernetes `}<inlineCode parentName=\"p\">{`Deployments`}</inlineCode>{` provides declarative updates for `}<inlineCode parentName=\"p\">{`Pods`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`ReplicaSets`}</inlineCode>{`.`}</p>\n    <p>{`See `}<inlineCode parentName=\"p\">{`https://kubernetes.io/docs/concepts/workloads/controllers/deployment/`}</inlineCode>{` for more info.`}</p>\n    <h2 {...{\n      \"id\": \"creating-an-admin-account-to-use-the-dashboard\"\n    }}>{`Creating an Admin Account to use the dashboard`}</h2>\n    <p>{`Using YAML, we'll create:`}</p>\n    <ol>\n      <li parentName=\"ol\">{`cluster admin account`}</li>\n      <li parentName=\"ol\">{`Role binding`}</li>\n    </ol>\n    <p>{`Then we can start the `}<inlineCode parentName=\"p\">{`kubectl proxy`}</inlineCode>{` to authenticate the K8s dashboard and explore the dashboard.`}</p>\n    <h2 {...{\n      \"id\": \"creating-the-admin-service-account\"\n    }}>{`Creating the admin Service Account`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-yml\"\n      }}>{`apiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: eks-admin\n  namespace: kube-system\n\n---\napiVersion: rbac.authorization.k8s.io/v1beta1\nkind: ClusterRoleBinding\nmetadata:\n  name: eks-admin\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: cluster-admin\nsubjects:\n  - kind: ServiceAccount\n    name: eks-admin\n    namespace: kube-system\n`}</code></pre>\n    <p>{`Run `}<inlineCode parentName=\"p\">{`kubectl apply -f admin-service-account.yml`}</inlineCode>{` to apply.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`# Returned\nserviceaccount/eks-admin created\nclusterrolebinding.rbac.authorization.k8s.io/eks-admin created\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"kubectl-proxy\"\n    }}>{`Kubectl proxy`}</h2>\n    <p>{`Now we should be able to run the proxy to see the dashboard! Ensure if you are port forwarding further if you need to see it on a particular host from a VM or docker image.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`# This is to forward from Docker container to host\nkubectl proxy --address='0.0.0.0' --port=8001 --accept-hosts='.*'\n\n# Starting to serve on 127.0.0.1:8001\n`}</code></pre>\n    <p>{`Now head to a browser at `}<inlineCode parentName=\"p\">{`http://localhost:8001/api/v1/namespaces/kube-system/services/https:kubernetes-dashboard:/proxy/#!/login`}</inlineCode>{` for login.`}</p>\n    <p>{`To login with the token, we need the following:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`kubectl -n kube-system describe secret $(kubectl -n kube-system get secret | grep eks-course-admin | awk '{print $1}')\n`}</code></pre>\n    <p>{`There is some more info here at `}<inlineCode parentName=\"p\">{`https://docs.aws.amazon.com/eks/latest/userguide/dashboard-tutorial.html`}</inlineCode>{`.`}</p>\n    <h2 {...{\n      \"id\": \"chaos-testing\"\n    }}>{`Chaos testing`}</h2>\n    <ul>\n      <li parentName=\"ul\">{`Simulating a failure of the frontend pods can be done using `}<inlineCode parentName=\"li\">{`kubectl delete pod <POD>`}</inlineCode>{`.`}</li>\n      <li parentName=\"ul\">{`Simulating a failure of the nodes is to just stop one of the three EC2 instances (can be done from AWS console easily). If a node goes down, the rest of the pods are distributed amongst the other nodes. If nodes are considered for autoscaling, then the EC2 instance will against restart another node.`}</li>\n    </ul>\n    <p>{`Note, there is no automatic redeployment to the other nodes when a node becomes rescheduled. Killing some pods will of course help with rescheduling and distribution.`}</p>\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  "],"sourceRoot":""}