{"version":3,"sources":["/Users/dennis.okeeffe/Project-Imposter/developer-notes/manual/React-Notes/React-Animations.md"],"names":["layoutProps","MDXLayout","MDXContent","_ref","components","props","Object","_Users_dennis_okeeffe_Project_Imposter_developer_notes_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","_mdx_js_react__WEBPACK_IMPORTED_MODULE_2__","assign","mdxType","id","parentName","className","isMDXComponent"],"mappings":"8XAWMA,EAAc,GAGdC,EAAY,UACH,SAASC,EAATC,GAGZ,IAFDC,EAECD,EAFDC,WACGC,EACFC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,gBACD,OAAOG,OAAAE,EAAA,EAAAF,CAACL,EAADK,OAAAG,OAAA,GAAeT,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYM,QAAQ,cAC5EJ,OAAAE,EAAA,EAAAF,CAAA,KAAQ,CACNK,GAAM,uBADR,uBAMAL,OAAAE,EAAA,EAAAF,CAAA,KAAQ,CACNK,GAAM,0BADR,2BAGAL,OAAAE,EAAA,EAAAF,CAAA,mDAA8CA,OAAAE,EAAA,EAAAF,CAAA,cAAYM,WAAW,KAAvB,2BAA9C,KACAN,OAAAE,EAAA,EAAAF,CAAA,kJACAA,OAAAE,EAAA,EAAAF,CAAA,wBAAmBA,OAAAE,EAAA,EAAAF,CAAA,cAAYM,WAAW,KAAvB,+CACnBN,OAAAE,EAAA,EAAAF,CAAA,4BACAA,OAAAE,EAAA,EAAAF,CAAA,WAAKA,OAAAE,EAAA,EAAAF,CAAA,OAAAA,OAAAG,OAAA,CAAMG,WAAW,OAAU,CAC5BC,UAAa,wBADZ,sSAcLP,OAAAE,EAAA,EAAAF,CAAA,wBAAmBA,OAAAE,EAAA,EAAAF,CAAA,cAAYM,WAAW,KAAvB,6BAAnB,iBAA0GN,OAAAE,EAAA,EAAAF,CAAA,cAAYM,WAAW,KAAvB,QAA1G,0BAAqLN,OAAAE,EAAA,EAAAF,CAAA,cAAYM,WAAW,KAAvB,aAArL,gCAA2QN,OAAAE,EAAA,EAAAF,CAAA,cAAYM,WAAW,KAAvB,6CAC3QN,OAAAE,EAAA,EAAAF,CAAA,gFAA2EA,OAAAE,EAAA,EAAAF,CAAA,cAAYM,WAAW,KAAvB,kBAA3E,KACAN,OAAAE,EAAA,EAAAF,CAAA,iBAAYA,OAAAE,EAAA,EAAAF,CAAA,cAAYM,WAAW,KAAvB,oEACZN,OAAAE,EAAA,EAAAF,CAAA,+DACAA,OAAAE,EAAA,EAAAF,CAAA,WAAKA,OAAAE,EAAA,EAAAF,CAAA,OAAAA,OAAAG,OAAA,CAAMG,WAAW,OAAU,CAC5BC,UAAa,wBADZ,6YAaLP,OAAAE,EAAA,EAAAF,CAAA,KAAQ,CACNK,GAAM,iEADR,kEAGAL,OAAAE,EAAA,EAAAF,CAAA,WAAKA,OAAAE,EAAA,EAAAF,CAAA,OAAAA,OAAAG,OAAA,CAAMG,WAAW,OAAU,IAA3B,+yBAsCTV,EAAWY,gBAAiB","file":"static/js/manual-react-notes-react-animations.a3131766.js","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"animations-in-react\"\n    }}>{`Animations in React`}</h1>\n    {\n      /* TOC -->autoauto- [Animations in React](#animations-in-react)auto- [REACTAN-1: Installation](#reactan-1-installation)auto- [REACTAN-2: Using CSS to now run the Transitions and Transforms](#reactan-2-using-css-to-now-run-the-transitions-and-transforms)autoauto<!-- /TOC */\n    }\n    <h1 {...{\n      \"id\": \"reactan-1-installation\"\n    }}>{`REACTAN-1: Installation`}</h1>\n    <p>{`React Transistions can be done use the `}<inlineCode parentName=\"p\">{`ReactCSSTransitionGroup`}</inlineCode>{`.`}</p>\n    <p>{`Since React uses the virtual DOM, we don't get a chance to directly apply a CSS transition like you normally would with jQuery or JS.`}</p>\n    <p>{`To install: `}<inlineCode parentName=\"p\">{`yarn add react-addons-css-transition-group`}</inlineCode></p>\n    <p>{`In the JS file:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`import ReactCSSTransitionGroup from 'react-addons-css-transition-group';\n\nexport default class Transition extends Component {\n    render() {\n        return {\n            <ReactCSSTransitionGroup>\n                { list }\n            </ReactCSSTransitionGroup>\n        }\n    }\n}\n`}</code></pre>\n    <p>{`By default, `}<inlineCode parentName=\"p\">{`<ReactCSSTransitionGroup>`}</inlineCode>{` renders as a `}<inlineCode parentName=\"p\">{`span`}</inlineCode>{`, but we can give it a `}<inlineCode parentName=\"p\">{`component`}</inlineCode>{` property to change it! E.g. `}<inlineCode parentName=\"p\">{`<ReactCSSTransitionGroup component=\"ul\">`}</inlineCode></p>\n    <p>{`To access the property for animations, we need to set a property of `}<inlineCode parentName=\"p\">{`transitionName`}</inlineCode>{`.`}</p>\n    <p>{`E.g. `}<inlineCode parentName=\"p\">{`<ReactCSSTransitionGroup component=\"ul\" transitionName=\"slide\">`}</inlineCode></p>\n    <p>{`There are a couple of other noteworthy properties:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`<ReactCSSTransitionGroup\n  component=\"ul\"\n  transitionName=\"slide\"\n  transitionEnterTimeout={500} // this is for the duration of the transition in ms\n  transitionLeaveTimeout={500} // transition for leaving the DOM\n  transitionAppear={true} // transition for the ReactCSSTransitionGroup component\n  transitionAppearTimeout={500} // time for is\n>\n  {list}\n</ReactCSSTransitionGroup>\n`}</code></pre>\n    <h1 {...{\n      \"id\": \"reactan-2-using-css-to-now-run-the-transitions-and-transforms\"\n    }}>{`REACTAN-2: Using CSS to now run the Transitions and Transforms`}</h1>\n    <pre><code parentName=\"pre\" {...{}}>{`// in the css file\n\n/* start enter state */\n.slide-enter {\n    transform: translateX(-100%);\n}\n\n/* end enter state */\n.slide-enter.slide-enter-active {\n    transform: translateX(0);\n    transition: transform 0.5s ease-out;\n}\n\n/* start leave state */\n.slide-leave {\n    transform: translateX(0);\n}\n\n/* end leave state */\n.slide-leave.slide-leave-active {\n    transform: translateX(-100%);\n    opacity: 0;\n    transition: 0.5s ease-in;\n}\n\n/* initial mounting */\n.slide-appear {\n    opacity: 0;\n}\n\n.slide-appear.slide-appear-active {\n    opacity: 1;\n    transition: opacity 0.5s ease-in;\n}\n`}</code></pre>\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  "],"sourceRoot":""}