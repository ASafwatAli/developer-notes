{"version":3,"sources":["/Users/dennis.okeeffe/Project-Imposter/developer-notes/manual/PHP/PHP-Unit-Tests.md"],"names":["layoutProps","MDXLayout","MDXContent","_ref","components","props","Object","_Users_dennis_okeeffe_Project_Imposter_developer_notes_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","_mdx_js_react__WEBPACK_IMPORTED_MODULE_2__","assign","mdxType","id","parentName","className","isMDXComponent"],"mappings":"oXAWMA,EAAc,GAGdC,EAAY,UACH,SAASC,EAATC,GAGZ,IAFDC,EAECD,EAFDC,WACGC,EACFC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,gBACD,OAAOG,OAAAE,EAAA,EAAAF,CAACL,EAADK,OAAAG,OAAA,GAAeT,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYM,QAAQ,cAC5EJ,OAAAE,EAAA,EAAAF,CAAA,KAAQ,CACNK,GAAM,oBADR,oBAGAL,OAAAE,EAAA,EAAAF,CAAA,0DACAA,OAAAE,EAAA,EAAAF,CAAA,mBAAcA,OAAAE,EAAA,EAAAF,CAAA,cAAYM,WAAW,KAAvB,WAAd,qCAAuGN,OAAAE,EAAA,EAAAF,CAAA,cAAYM,WAAW,KAAvB,SAAvG,KACAN,OAAAE,EAAA,EAAAF,CAAA,2BAAsBA,OAAAE,EAAA,EAAAF,CAAA,cAAYM,WAAW,KAAvB,iCAAtB,KACAN,OAAAE,EAAA,EAAAF,CAAA,KAAQ,CACNK,GAAM,iBADR,iBAGAL,OAAAE,EAAA,EAAAF,CAAA,KAAQ,CACNK,GAAM,4BADR,4BAGAL,OAAAE,EAAA,EAAAF,CAAA,WAAKA,OAAAE,EAAA,EAAAF,CAAA,OAAAA,OAAAG,OAAA,CAAMG,WAAW,OAAU,CAC5BC,UAAa,iBADZ,obAwBLP,OAAAE,EAAA,EAAAF,CAAA,KAAQ,CACNK,GAAM,oBADR,oBAGAL,OAAAE,EAAA,EAAAF,CAAA,SAAGA,OAAAE,EAAA,EAAAF,CAAA,cAAYM,WAAW,KAAvB,mCACHN,OAAAE,EAAA,EAAAF,CAAA,WAAKA,OAAAE,EAAA,EAAAF,CAAA,OAAAA,OAAAG,OAAA,CAAMG,WAAW,OAAU,CAC5BC,UAAa,iBADZ,q4BAoCTX,EAAWY,gBAAiB","file":"static/js/manual-php-php-unit-tests.dd403c71.js","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"php-unit-testing\"\n    }}>{`PHP Unit Testing`}</h1>\n    <p>{`This is simply a basic example of the layout.`}</p>\n    <p>{`Ensure `}<inlineCode parentName=\"p\">{`phpunit`}</inlineCode>{` is downloaded and add it to your `}<inlineCode parentName=\"p\">{`$PATH`}</inlineCode>{`.`}</p>\n    <p>{`From, here run `}<inlineCode parentName=\"p\">{`phpunit.phar path/to/test.php`}</inlineCode>{`.`}</p>\n    <h2 {...{\n      \"id\": \"basic-example\"\n    }}>{`Basic example`}</h2>\n    <h3 {...{\n      \"id\": \"anagram-function-to-test\"\n    }}>{`Anagram function to test`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-php\"\n      }}>{`<?php\n// anagrams.php\n\nfunction anagrams($a, $b)\n{\n    $regA = preg_replace(\"/[^a-z]/i\", \"\", $a);\n    $regB = preg_replace(\"/[^a-z]/i\", \"\", $b);\n\n    $regA = strtolower($regA);\n    $splitA = str_split($regA);\n    sort($splitA);\n\n    $regB = strtolower($regB);\n    $splitB = str_split($regB);\n    sort($splitB);\n\n    $resA = implode(\"\", $splitA);\n    $resB = implode(\"\", $splitB);\n\n    return $resA == $resB;\n}\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"running-the-test\"\n    }}>{`Running the test`}</h3>\n    <p><inlineCode parentName=\"p\">{`phpunit.phar anagrams_test.php`}</inlineCode></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-php\"\n      }}>{`<?php\n// anagrams_test.php\nrequire \"anagrams.php\";\n\nclass AnagramsTest extends PHPUnit\\\\Framework\\\\TestCase\n{\n    public function testAnagramsBasic()\n    {\n        $a = \"tokyo\";\n        $b = \"kyoto\";\n        $this->assertEquals(true, anagrams($a,$b));\n    }\n\n\n    public function testAnagramsWithCapitals()\n    {\n        // $this->markTestSkipped('Skipped.');\n        $a = \"Tokyo\";\n        $b = \"kyoto\";\n        $this->assertEquals(true, anagrams($a,$b));\n    }\n\n    public function testAnagramsWithPunctuation()\n    {\n        // $this->markTestSkipped('Skipped.');\n        $a = \"To  35k 2@4yo\";\n        $b = \"kYoTo223!!\";\n        $this->assertEquals(true, anagrams($a,$b));\n    }\n}\n`}</code></pre>\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  "],"sourceRoot":""}