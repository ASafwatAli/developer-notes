{"version":3,"sources":["/Users/dennis.okeeffe/Project-Imposter/developer-notes/manual/Chef/Chef-Udemy.md"],"names":["layoutProps","MDXLayout","MDXContent","_ref","components","props","Object","_Users_dennis_okeeffe_Project_Imposter_developer_notes_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","_mdx_js_react__WEBPACK_IMPORTED_MODULE_2__","assign","mdxType","id","parentName","href","className","isMDXComponent"],"mappings":"gXAWMA,EAAc,GAGdC,EAAY,UACH,SAASC,EAATC,GAGZ,IAFDC,EAECD,EAFDC,WACGC,EACFC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,gBACD,OAAOG,OAAAE,EAAA,EAAAF,CAACL,EAADK,OAAAG,OAAA,GAAeT,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYM,QAAQ,cAC5EJ,OAAAE,EAAA,EAAAF,CAAA,KAAQ,CACNK,GAAM,uBADR,uBAMAL,OAAAE,EAAA,EAAAF,CAAA,UACEA,OAAAE,EAAA,EAAAF,CAAA,MAAIM,WAAW,MAAKN,OAAAE,EAAA,EAAAF,CAAA,IAAAA,OAAAG,OAAA,CAAGG,WAAW,MAAS,CACvCC,KAAQ,yBADQ,uBAEYP,OAAAE,EAAA,EAAAF,CAAA,MAAIM,WAAW,MAC3CN,OAAAE,EAAA,EAAAF,CAAA,MAAIM,WAAW,MAAKN,OAAAE,EAAA,EAAAF,CAAA,IAAAA,OAAAG,OAAA,CAAGG,WAAW,MAAS,CACvCC,KAAQ,8BADQ,6BAGpBP,OAAAE,EAAA,EAAAF,CAAA,MAAIM,WAAW,MAAKN,OAAAE,EAAA,EAAAF,CAAA,IAAAA,OAAAG,OAAA,CAAGG,WAAW,MAAS,CACvCC,KAAQ,4BADQ,2BAGpBP,OAAAE,EAAA,EAAAF,CAAA,MAAIM,WAAW,MAAKN,OAAAE,EAAA,EAAAF,CAAA,IAAAA,OAAAG,OAAA,CAAGG,WAAW,MAAS,CACvCC,KAAQ,4BADQ,2BAGpBP,OAAAE,EAAA,EAAAF,CAAA,MAAIM,WAAW,MAAKN,OAAAE,EAAA,EAAAF,CAAA,IAAAA,OAAAG,OAAA,CAAGG,WAAW,MAAS,CACvCC,KAAQ,oBADQ,mBAGpBP,OAAAE,EAAA,EAAAF,CAAA,MAAIM,WAAW,MAAKN,OAAAE,EAAA,EAAAF,CAAA,IAAAA,OAAAG,OAAA,CAAGG,WAAW,MAAS,CACvCC,KAAQ,gCADQ,+BAGpBP,OAAAE,EAAA,EAAAF,CAAA,MAAIM,WAAW,MAAKN,OAAAE,EAAA,EAAAF,CAAA,IAAAA,OAAAG,OAAA,CAAGG,WAAW,MAAS,CACvCC,KAAQ,mCADQ,kCAGpBP,OAAAE,EAAA,EAAAF,CAAA,MAAIM,WAAW,MAAKN,OAAAE,EAAA,EAAAF,CAAA,IAAAA,OAAAG,OAAA,CAAGG,WAAW,MAAS,CACvCC,KAAQ,uCADQ,wCAGpBP,OAAAE,EAAA,EAAAF,CAAA,MAAIM,WAAW,MAAKN,OAAAE,EAAA,EAAAF,CAAA,IAAAA,OAAAG,OAAA,CAAGG,WAAW,MAAS,CACvCC,KAAQ,oCADQ,mCAGpBP,OAAAE,EAAA,EAAAF,CAAA,MAAIM,WAAW,MAAKN,OAAAE,EAAA,EAAAF,CAAA,IAAAA,OAAAG,OAAA,CAAGG,WAAW,MAAS,CACvCC,KAAQ,eADQ,aAEEP,OAAAE,EAAA,EAAAF,CAAA,MAAIM,WAAW,MACjCN,OAAAE,EAAA,EAAAF,CAAA,MAAIM,WAAW,MAAKN,OAAAE,EAAA,EAAAF,CAAA,IAAAA,OAAAG,OAAA,CAAGG,WAAW,MAAS,CACvCC,KAAQ,qDADQ,qDAGpBP,OAAAE,EAAA,EAAAF,CAAA,MAAIM,WAAW,MAAKN,OAAAE,EAAA,EAAAF,CAAA,IAAAA,OAAAG,OAAA,CAAGG,WAAW,MAAS,CACvCC,KAAQ,yBADQ,wBAGpBP,OAAAE,EAAA,EAAAF,CAAA,MAAIM,WAAW,MAAKN,OAAAE,EAAA,EAAAF,CAAA,IAAAA,OAAAG,OAAA,CAAGG,WAAW,MAAS,CACvCC,KAAQ,uCADQ,sCAGpBP,OAAAE,EAAA,EAAAF,CAAA,MAAIM,WAAW,MAAKN,OAAAE,EAAA,EAAAF,CAAA,IAAAA,OAAAG,OAAA,CAAGG,WAAW,MAAS,CACvCC,KAAQ,mCADQ,oCAIxBP,OAAAE,EAAA,EAAAF,CAAA,MAAIM,WAAW,MAAKN,OAAAE,EAAA,EAAAF,CAAA,IAAAA,OAAAG,OAAA,CAAGG,WAAW,MAAS,CACvCC,KAAQ,iBADQ,eAEIP,OAAAE,EAAA,EAAAF,CAAA,MAAIM,WAAW,MACnCN,OAAAE,EAAA,EAAAF,CAAA,MAAIM,WAAW,MAAKN,OAAAE,EAAA,EAAAF,CAAA,IAAAA,OAAAG,OAAA,CAAGG,WAAW,MAAS,CACvCC,KAAQ,oBADQ,mBAGpBP,OAAAE,EAAA,EAAAF,CAAA,MAAIM,WAAW,MAAKN,OAAAE,EAAA,EAAAF,CAAA,IAAAA,OAAAG,OAAA,CAAGG,WAAW,MAAS,CACvCC,KAAQ,uBADQ,yBAIxBP,OAAAE,EAAA,EAAAF,CAAA,MAAIM,WAAW,MAAKN,OAAAE,EAAA,EAAAF,CAAA,IAAAA,OAAAG,OAAA,CAAGG,WAAW,MAAS,CACvCC,KAAQ,UADQ,QAEHP,OAAAE,EAAA,EAAAF,CAAA,MAAIM,WAAW,MAC5BN,OAAAE,EAAA,EAAAF,CAAA,MAAIM,WAAW,MAAKN,OAAAE,EAAA,EAAAF,CAAA,IAAAA,OAAAG,OAAA,CAAGG,WAAW,MAAS,CACvCC,KAAQ,2BADQ,iCAS9BP,OAAAE,EAAA,EAAAF,CAAA,KAAQ,CACNK,GAAM,4BADR,4BAGAL,OAAAE,EAAA,EAAAF,CAAA,0DACAA,OAAAE,EAAA,EAAAF,CAAA,+KACAA,OAAAE,EAAA,EAAAF,CAAA,sIACAA,OAAAE,EAAA,EAAAF,CAAA,6EACAA,OAAAE,EAAA,EAAAF,CAAA,yEAAoEA,OAAAE,EAAA,EAAAF,CAAA,cAAYM,WAAW,KAAvB,0BAApE,2CACAN,OAAAE,EAAA,EAAAF,CAAA,KAAQ,CACNK,GAAM,0BADR,0BAGAL,OAAAE,EAAA,EAAAF,CAAA,sBACAA,OAAAE,EAAA,EAAAF,CAAA,UACEA,OAAAE,EAAA,EAAAF,CAAA,MAAIM,WAAW,MAAf,mBACAN,OAAAE,EAAA,EAAAF,CAAA,MAAIM,WAAW,MAAf,YAEFN,OAAAE,EAAA,EAAAF,CAAA,6DACAA,OAAAE,EAAA,EAAAF,CAAA,yDACAA,OAAAE,EAAA,EAAAF,CAAA,sCACAA,OAAAE,EAAA,EAAAF,CAAA,UACEA,OAAAE,EAAA,EAAAF,CAAA,MAAIM,WAAW,MAAf,wBACAN,OAAAE,EAAA,EAAAF,CAAA,MAAIM,WAAW,MAAf,eACAN,OAAAE,EAAA,EAAAF,CAAA,MAAIM,WAAW,MAAf,gBAEFN,OAAAE,EAAA,EAAAF,CAAA,6JACAA,OAAAE,EAAA,EAAAF,CAAA,oDAA+CA,OAAAE,EAAA,EAAAF,CAAA,cAAYM,WAAW,KAAvB,aAA/C,OAA4GN,OAAAE,EAAA,EAAAF,CAAA,cAAYM,WAAW,KAAvB,WAA5G,KACAN,OAAAE,EAAA,EAAAF,CAAA,KAAQ,CACNK,GAAM,0BADR,0BAGAL,OAAAE,EAAA,EAAAF,CAAA,8BAAyBA,OAAAE,EAAA,EAAAF,CAAA,cAAYM,WAAW,KAAvB,YAAzB,YAA0FN,OAAAE,EAAA,EAAAF,CAAA,cAAYM,WAAW,KAAvB,aAA1F,sBACAN,OAAAE,EAAA,EAAAF,CAAA,qCACAA,OAAAE,EAAA,EAAAF,CAAA,gCACAA,OAAAE,EAAA,EAAAF,CAAA,WAAKA,OAAAE,EAAA,EAAAF,CAAA,OAAAA,OAAAG,OAAA,CAAMG,WAAW,OAAU,CAC5BE,UAAa,kBADZ,4DAMLR,OAAAE,EAAA,EAAAF,CAAA,oBAAeA,OAAAE,EAAA,EAAAF,CAAA,cAAYM,WAAW,KAAvB,2CAAf,sDACAN,OAAAE,EAAA,EAAAF,CAAA,KAAQ,CACNK,GAAM,kBADR,kBAGAL,OAAAE,EAAA,EAAAF,CAAA,qFACAA,OAAAE,EAAA,EAAAF,CAAA,mDACAA,OAAAE,EAAA,EAAAF,CAAA,kFACAA,OAAAE,EAAA,EAAAF,CAAA,KAAQ,CACNK,GAAM,8BADR,8BAGAL,OAAAE,EAAA,EAAAF,CAAA,SAAGA,OAAAE,EAAA,EAAAF,CAAA,UAAQM,WAAW,KAAnB,gCACHN,OAAAE,EAAA,EAAAF,CAAA,WAAKA,OAAAE,EAAA,EAAAF,CAAA,OAAAA,OAAAG,OAAA,CAAMG,WAAW,OAAU,IAA3B,+EAKLN,OAAAE,EAAA,EAAAF,CAAA,SAAGA,OAAAE,EAAA,EAAAF,CAAA,UAAQM,WAAW,KAAnB,gCACHN,OAAAE,EAAA,EAAAF,CAAA,WAAKA,OAAAE,EAAA,EAAAF,CAAA,OAAAA,OAAAG,OAAA,CAAMG,WAAW,OAAU,IAA3B,oFAKLN,OAAAE,EAAA,EAAAF,CAAA,SAAGA,OAAAE,EAAA,EAAAF,CAAA,UAAQM,WAAW,KAAnB,6BACHN,OAAAE,EAAA,EAAAF,CAAA,WAAKA,OAAAE,EAAA,EAAAF,CAAA,OAAAA,OAAAG,OAAA,CAAMG,WAAW,OAAU,IAA3B,6GAKLN,OAAAE,EAAA,EAAAF,CAAA,SAAGA,OAAAE,EAAA,EAAAF,CAAA,UAAQM,WAAW,KAAnB,6BACHN,OAAAE,EAAA,EAAAF,CAAA,WAAKA,OAAAE,EAAA,EAAAF,CAAA,OAAAA,OAAAG,OAAA,CAAMG,WAAW,OAAU,IAA3B,+EAKLN,OAAAE,EAAA,EAAAF,CAAA,wDAAmDA,OAAAE,EAAA,EAAAF,CAAA,cAAYM,WAAW,KAAvB,YAAnD,qCACAN,OAAAE,EAAA,EAAAF,CAAA,yLAAiLA,OAAAE,EAAA,EAAAF,CAAA,cAAYM,WAAW,KAAvB,UAAjL,yBAA6PN,OAAAE,EAAA,EAAAF,CAAA,cAAYM,WAAW,KAAvB,kBAA7P,KAA6TN,OAAAE,EAAA,EAAAF,CAAA,cAAYM,WAAW,KAAvB,kBAA7T,KAA6XN,OAAAE,EAAA,EAAAF,CAAA,cAAYM,WAAW,KAAvB,kBAA7X,0FAAkhBN,OAAAE,EAAA,EAAAF,CAAA,cAAYM,WAAW,KAAvB,UAAlhB,OAA4kBN,OAAAE,EAAA,EAAAF,CAAA,cAAYM,WAAW,KAAvB,WAA5kB,+EACAN,OAAAE,EAAA,EAAAF,CAAA,KAAQ,CACNK,GAAM,iCADR,iCAGAL,OAAAE,EAAA,EAAAF,CAAA,6BAAwBA,OAAAE,EAAA,EAAAF,CAAA,cAAYM,WAAW,KAAvB,0CAAxB,iBAA4HN,OAAAE,EAAA,EAAAF,CAAA,cAAYM,WAAW,KAAvB,gBAA5H,uDAA4ON,OAAAE,EAAA,EAAAF,CAAA,cAAYM,WAAW,KAAvB,eAA5O,wEACAN,OAAAE,EAAA,EAAAF,CAAA,2HACAA,OAAAE,EAAA,EAAAF,CAAA,sCAAiCA,OAAAE,EAAA,EAAAF,CAAA,cAAYM,WAAW,KAAvB,UAAjC,sBACAN,OAAAE,EAAA,EAAAF,CAAA,0JACAA,OAAAE,EAAA,EAAAF,CAAA,KAAQ,CACNK,GAAM,qCADR,uCAGAL,OAAAE,EAAA,EAAAF,CAAA,WAAKA,OAAAE,EAAA,EAAAF,CAAA,OAAAA,OAAAG,OAAA,CAAMG,WAAW,OAAU,CAC5BE,UAAa,kBADZ,2PAiBLR,OAAAE,EAAA,EAAAF,CAAA,iJACAA,OAAAE,EAAA,EAAAF,CAAA,iCAA4BA,OAAAE,EAAA,EAAAF,CAAA,cAAYM,WAAW,KAAvB,gCAA5B,KACAN,OAAAE,EAAA,EAAAF,CAAA,+FACAA,OAAAE,EAAA,EAAAF,CAAA,KAAQ,CACNK,GAAM,kCADR,kCAGAL,OAAAE,EAAA,EAAAF,CAAA,0DACAA,OAAAE,EAAA,EAAAF,CAAA,yDACAA,OAAAE,EAAA,EAAAF,CAAA,KAAQ,CACNK,GAAM,aADR,aAGAL,OAAAE,EAAA,EAAAF,CAAA,2EACAA,OAAAE,EAAA,EAAAF,CAAA,yEAAoEA,OAAAE,EAAA,EAAAF,CAAA,cAAYM,WAAW,KAAvB,YAApE,KACAN,OAAAE,EAAA,EAAAF,CAAA,KAAQ,CACNK,GAAM,mDADR,oDAGAL,OAAAE,EAAA,EAAAF,CAAA,4GACAA,OAAAE,EAAA,EAAAF,CAAA,SAAGA,OAAAE,EAAA,EAAAF,CAAA,cAAYM,WAAW,KAAvB,gEACHN,OAAAE,EAAA,EAAAF,CAAA,yFACAA,OAAAE,EAAA,EAAAF,CAAA,uCACAA,OAAAE,EAAA,EAAAF,CAAA,UACEA,OAAAE,EAAA,EAAAF,CAAA,MAAIM,WAAW,MAAf,iEACAN,OAAAE,EAAA,EAAAF,CAAA,MAAIM,WAAW,MAAf,oBACAN,OAAAE,EAAA,EAAAF,CAAA,MAAIM,WAAW,MAAf,sBACAN,OAAAE,EAAA,EAAAF,CAAA,MAAIM,WAAW,MAAf,aACAN,OAAAE,EAAA,EAAAF,CAAA,MAAIM,WAAW,MAAf,8DACAN,OAAAE,EAAA,EAAAF,CAAA,MAAIM,WAAW,MAAf,oBAEFN,OAAAE,EAAA,EAAAF,CAAA,iCACAA,OAAAE,EAAA,EAAAF,CAAA,UACEA,OAAAE,EAAA,EAAAF,CAAA,MAAIM,WAAW,MAAf,UACAN,OAAAE,EAAA,EAAAF,CAAA,MAAIM,WAAW,MAAf,YACAN,OAAAE,EAAA,EAAAF,CAAA,MAAIM,WAAW,MAAf,WACAN,OAAAE,EAAA,EAAAF,CAAA,MAAIM,WAAW,MAAf,sCAEFN,OAAAE,EAAA,EAAAF,CAAA,KAAQ,CACNK,GAAM,uBADR,uBAGAL,OAAAE,EAAA,EAAAF,CAAA,6CAAwCA,OAAAE,EAAA,EAAAF,CAAA,cAAYM,WAAW,KAAvB,kCAAxC,KACAN,OAAAE,EAAA,EAAAF,CAAA,8FAAyFA,OAAAE,EAAA,EAAAF,CAAA,cAAYM,WAAW,KAAvB,uCAAzF,gBAAyLN,OAAAE,EAAA,EAAAF,CAAA,cAAYM,WAAW,KAAvB,eAAzL,gBAAiQN,OAAAE,EAAA,EAAAF,CAAA,cAAYM,WAAW,KAAvB,aAAjQ,YACAN,OAAAE,EAAA,EAAAF,CAAA,KAAQ,CACNK,GAAM,qCADR,qCAGAL,OAAAE,EAAA,EAAAF,CAAA,iGACAA,OAAAE,EAAA,EAAAF,CAAA,KAAQ,CACNK,GAAM,iCADR,iCAGAL,OAAAE,EAAA,EAAAF,CAAA,sEAAiEA,OAAAE,EAAA,EAAAF,CAAA,cAAYM,WAAW,KAAvB,4CACjEN,OAAAE,EAAA,EAAAF,CAAA,WAAKA,OAAAE,EAAA,EAAAF,CAAA,OAAAA,OAAAG,OAAA,CAAMG,WAAW,OAAU,CAC5BE,UAAa,kBADZ,wZAuBLR,OAAAE,EAAA,EAAAF,CAAA,KAAQ,CACNK,GAAM,eADR,eAGAL,OAAAE,EAAA,EAAAF,CAAA,0HACAA,OAAAE,EAAA,EAAAF,CAAA,iEACAA,OAAAE,EAAA,EAAAF,CAAA,qEACAA,OAAAE,EAAA,EAAAF,CAAA,2BAAsBA,OAAAE,EAAA,EAAAF,CAAA,cAAYM,WAAW,KAAvB,4DAAtB,gCACAN,OAAAE,EAAA,EAAAF,CAAA,+DAA0DA,OAAAE,EAAA,EAAAF,CAAA,cAAYM,WAAW,KAAvB,6FAA1D,oBAAoNN,OAAAE,EAAA,EAAAF,CAAA,cAAYM,WAAW,KAAvB,eAApN,kBACAN,OAAAE,EAAA,EAAAF,CAAA,2EACAA,OAAAE,EAAA,EAAAF,CAAA,KAAQ,CACNK,GAAM,kBADR,kBAGAL,OAAAE,EAAA,EAAAF,CAAA,gBAAWA,OAAAE,EAAA,EAAAF,CAAA,cAAYM,WAAW,KAAvB,kBAAX,mHACAN,OAAAE,EAAA,EAAAF,CAAA,mCAA8BA,OAAAE,EAAA,EAAAF,CAAA,cAAYM,WAAW,KAAvB,QAA9B,eACAN,OAAAE,EAAA,EAAAF,CAAA,+DAA0DA,OAAAE,EAAA,EAAAF,CAAA,cAAYM,WAAW,KAAvB,cAA1D,gEACAN,OAAAE,EAAA,EAAAF,CAAA,WAAKA,OAAAE,EAAA,EAAAF,CAAA,OAAAA,OAAAG,OAAA,CAAMG,WAAW,OAAU,CAC5BE,UAAa,kBADZ,iHAOLR,OAAAE,EAAA,EAAAF,CAAA,0BAAqBA,OAAAE,EAAA,EAAAF,CAAA,cAAYM,WAAW,KAAvB,gDAArB,2CAAyJN,OAAAE,EAAA,EAAAF,CAAA,cAAYM,WAAW,KAAvB,cAAzJ,yBACAN,OAAAE,EAAA,EAAAF,CAAA,KAAQ,CACNK,GAAM,qBADR,sBAGAL,OAAAE,EAAA,EAAAF,CAAA,kEACAA,OAAAE,EAAA,EAAAF,CAAA,WAAKA,OAAAE,EAAA,EAAAF,CAAA,OAAAA,OAAAG,OAAA,CAAMG,WAAW,OAAU,CAC5BE,UAAa,kBADZ,sCAILR,OAAAE,EAAA,EAAAF,CAAA,4EACAA,OAAAE,EAAA,EAAAF,CAAA,KAAQ,CACNK,GAAM,QADR,QAGAL,OAAAE,EAAA,EAAAF,CAAA,0FACAA,OAAAE,EAAA,EAAAF,CAAA,gEAA2DA,OAAAE,EAAA,EAAAF,CAAA,cAAYM,WAAW,KAAvB,QAA3D,kBAA8HN,OAAAE,EAAA,EAAAF,CAAA,cAAYM,WAAW,KAAvB,QAA9H,cACAN,OAAAE,EAAA,EAAAF,CAAA,KAAQ,CACNK,GAAM,yBADR,2BAGAL,OAAAE,EAAA,EAAAF,CAAA,6GACAA,OAAAE,EAAA,EAAAF,CAAA,2JACAA,OAAAE,EAAA,EAAAF,CAAA,uKACAA,OAAAE,EAAA,EAAAF,CAAA,SAAGA,OAAAE,EAAA,EAAAF,CAAA,cAAYM,WAAW,KAAvB,QAAH,6EAAiIN,OAAAE,EAAA,EAAAF,CAAA,cAAYM,WAAW,KAAvB,eAAjI,KACAN,OAAAE,EAAA,EAAAF,CAAA,SAAGA,OAAAE,EAAA,EAAAF,CAAA,cAAYM,WAAW,KAAvB,QAAH,2DAA+GN,OAAAE,EAAA,EAAAF,CAAA,cAAYM,WAAW,KAAvB,eAA/G,yCAAgNN,OAAAE,EAAA,EAAAF,CAAA,cAAYM,WAAW,KAAvB,QAAhN,4GAA6WN,OAAAE,EAAA,EAAAF,CAAA,cAAYM,WAAW,KAAvB,mBAA7W,UAAmbN,OAAAE,EAAA,EAAAF,CAAA,cAAYM,WAAW,KAAvB,aAAnb,aAAsfN,OAAAE,EAAA,EAAAF,CAAA,cAAYM,WAAW,KAAvB,kBAAtf,qLAIJV,EAAWa,gBAAiB","file":"static/js/manual-chef-chef-udemy.c1627b06.js","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"chef---udemy-course\"\n    }}>{`Chef - Udemy Course`}</h1>\n    {\n      /* TOC */\n    }\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"#chef---udemy-course\"\n        }}>{`Chef - Udemy Course`}</a><ul parentName=\"li\">\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#configuration-management\"\n            }}>{`Configuration Management`}</a></li>\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#infrastructure-as-code\"\n            }}>{`Infrastructure as Code`}</a></li>\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#your-first-chef-recipe\"\n            }}>{`Your First Chef Recipe`}</a></li>\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#chef-resources\"\n            }}>{`Chef Resources`}</a></li>\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#exploring-system-resources\"\n            }}>{`Exploring system resources`}</a></li>\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#convergence-and-desired-state\"\n            }}>{`Convergence and Desired State`}</a></li>\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#creating-an-exercise-work-station\"\n            }}>{`Creating an \"Exercise Work Station\"`}</a></li>\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#organising-resources-with-ruby\"\n            }}>{`Organising Resources with Ruby`}</a></li>\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#cookbooks\"\n            }}>{`Cookbooks`}</a><ul parentName=\"li\">\n              <li parentName=\"ul\"><a parentName=\"li\" {...{\n                  \"href\": \"#how-do-you-keep-track-of-changes-to-the-recipes\"\n                }}>{`How do you keep track of changes to the recipes?`}</a></li>\n              <li parentName=\"ul\"><a parentName=\"li\" {...{\n                  \"href\": \"#cookbook-components\"\n                }}>{`Cookbook Components`}</a></li>\n              <li parentName=\"ul\"><a parentName=\"li\" {...{\n                  \"href\": \"#tracking-changes-to-the-cookbooks\"\n                }}>{`Tracking changes to the Cookbooks`}</a></li>\n              <li parentName=\"ul\"><a parentName=\"li\" {...{\n                  \"href\": \"#setting-up-an-apache-cookbook\"\n                }}>{`Setting up an Apache Cookbook`}</a></li>\n            </ul></li>\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#chef-client\"\n            }}>{`Chef Client`}</a><ul parentName=\"li\">\n              <li parentName=\"ul\"><a parentName=\"li\" {...{\n                  \"href\": \"#include_recipe\"\n                }}>{`include_recipe`}</a></li>\n              <li parentName=\"ul\"><a parentName=\"li\" {...{\n                  \"href\": \"#defaultrb-example\"\n                }}>{`default.rb example`}</a></li>\n            </ul></li>\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#ohai\"\n            }}>{`Ohai`}</a><ul parentName=\"li\">\n              <li parentName=\"ul\"><a parentName=\"li\" {...{\n                  \"href\": \"#an-object-called-node\"\n                }}>{`An object called 'node'`}</a></li>\n            </ul></li>\n        </ul></li>\n    </ul>\n    {\n      /* /TOC */\n    }\n    <h2 {...{\n      \"id\": \"configuration-management\"\n    }}>{`Configuration Management`}</h2>\n    <p>{`Maintaining consistency for server integrity.`}</p>\n    <p>{`The process of configuration can be automated by some extent. When you reach scale, this automation is at the heart of configuration management (IT orchetration).`}</p>\n    <p>{`Imagine we are deploying a web server. If we have a config management solution, this could take minutes instead of hours.`}</p>\n    <p>{`System auditing will also be a hassle for disaster recovery too.`}</p>\n    <p>{`Revision control systems can also be version controlled with `}<inlineCode parentName=\"p\">{`infrastructure as code`}</inlineCode>{` by having these environments scripted.`}</p>\n    <h2 {...{\n      \"id\": \"infrastructure-as-code\"\n    }}>{`Infrastructure as Code`}</h2>\n    <p>{`Examples:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`version control`}</li>\n      <li parentName=\"ul\">{`testing`}</li>\n    </ul>\n    <p>{`These all helps to validate infrastructure code.`}</p>\n    <p>{`You can manage multiple cloud platforms etc.`}</p>\n    <p>{`The three things covered:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`chef development kit`}</li>\n      <li parentName=\"ul\">{`chef client`}</li>\n      <li parentName=\"ul\">{`chef server`}</li>\n    </ul>\n    <p>{`The Chef DK allows you to run local tools to write code and then upload it to a chef server. A node will be a server or machine managed by Chef.`}</p>\n    <p>{`You will get the desired state from the `}<inlineCode parentName=\"p\">{`cookbooks`}</inlineCode>{` or `}<inlineCode parentName=\"p\">{`recipes`}</inlineCode>{`.`}</p>\n    <h2 {...{\n      \"id\": \"your-first-chef-recipe\"\n    }}>{`Your First Chef Recipe`}</h2>\n    <p>{`Create a new file `}<inlineCode parentName=\"p\">{`hello.rb`}</inlineCode>{` and add `}<inlineCode parentName=\"p\">{`hello.txt`}</inlineCode>{` with Hello World.`}</p>\n    <p>{`First, give Chef a file.`}</p>\n    <p>{`Inside of the file:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-ruby\"\n      }}>{`file '/hello.txt' do\n    content 'Hello world!'\nend\n`}</code></pre>\n    <p>{`Running `}<inlineCode parentName=\"p\">{`sudo chef-client --client-mode hello.rb`}</inlineCode>{` will then build that file and update the content.`}</p>\n    <h2 {...{\n      \"id\": \"chef-resources\"\n    }}>{`Chef Resources`}</h2>\n    <p>{`Chef Resources are the fundamental building blocks of working with Chef.`}</p>\n    <p>{`The aim is to build the load balancer.`}</p>\n    <p>{`Resources describe the smallest piece we can configure in the system.`}</p>\n    <h2 {...{\n      \"id\": \"exploring-system-resources\"\n    }}>{`Exploring system resources`}</h2>\n    <p><strong parentName=\"p\">{`Example 1: Package Resource`}</strong></p>\n    <pre><code parentName=\"pre\" {...{}}>{`## Install the http package\npackage 'httd' do\n    action :install\nend\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Example 2: Service Resource`}</strong></p>\n    <pre><code parentName=\"pre\" {...{}}>{`## Run the ntp service\nservice 'ntp' do\n    action [ :enable, :start ]\nend\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Example 3: File Resource`}</strong></p>\n    <pre><code parentName=\"pre\" {...{}}>{`## Create the /etc/motd file\nfile 'etc/motd' do\n    content 'This computer is the property ...'\nend\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Example 4: File Resource`}</strong></p>\n    <pre><code parentName=\"pre\" {...{}}>{`## Remove a file\nfile 'etc/php.ini.default' do\n    action :delete\nend\n`}</code></pre>\n    <p>{`Looking back at the definition of a recipe. `}<inlineCode parentName=\"p\">{`hello.rb`}</inlineCode>{` was an example of a recipe file.`}</p>\n    <p>{`The \"type\" (eg file, service, package) and \"name\" (filename, filepath) should be action'd with \"properties\" (eg content 'Hello World!'). When we list a resource, we take `}<inlineCode parentName=\"p\">{`action`}</inlineCode>{` on that resource (eg `}<inlineCode parentName=\"p\">{`action :create`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`action :delete`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`action :enable`}</inlineCode>{`). The default action is taken if you do not list the action. The default is more of a `}<inlineCode parentName=\"p\">{`create`}</inlineCode>{` or `}<inlineCode parentName=\"p\">{`install`}</inlineCode>{` - it is important to know about what it is as you are writing out recipes.`}</p>\n    <h2 {...{\n      \"id\": \"convergence-and-desired-state\"\n    }}>{`Convergence and Desired State`}</h2>\n    <p>{`With the command `}<inlineCode parentName=\"p\">{`sudo chef-client --local-mode hello.rb`}</inlineCode>{`, when we run `}<inlineCode parentName=\"p\">{`--local-mode`}</inlineCode>{` we did it because the default mode is to talk to a `}<inlineCode parentName=\"p\">{`chef server`}</inlineCode>{`. Once we have a Chef server to work with, we can not use this mode.`}</p>\n    <p>{`What happens if you modify the content of the file that we create directly, what happens when Chef runs again?`}</p>\n    <p>{`Chef will then attempt to `}<inlineCode parentName=\"p\">{`repair`}</inlineCode>{` the file changes.`}</p>\n    <p>{`If we change the ownership for a file, Chef will only take action when it needs to. It will only take action if something is \"out of policy\".`}</p>\n    <h2 {...{\n      \"id\": \"creating-an-exercise-work-station\"\n    }}>{`Creating an \"Exercise Work Station\"`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-ruby\"\n      }}>{`# creating tree and ntp\npackage 'tree' do\n    action :install\nend\n\npackage 'ntp'\n\n# /etc/motd - content ownership\nfile '/etc/motd' do\n    content 'This is the property of me'\n    action :create\n    owner 'root'\n    group 'root'\nend\n`}</code></pre>\n    <p>{`You can also build an array and pass it into a package resource, but if we do that we won't have access to things like versions etc.`}</p>\n    <p>{`Then we can just run `}<inlineCode parentName=\"p\">{`sudo chef-client -z setup.rb`}</inlineCode>{`.`}</p>\n    <p>{`If we re-run the script, no actions will be taken if nothing needs to be modified.`}</p>\n    <h2 {...{\n      \"id\": \"organising-resources-with-ruby\"\n    }}>{`Organising Resources with Ruby`}</h2>\n    <p>{`You can also call recipes from other recipes.`}</p>\n    <p>{`Chef also runs the Ruby files synchronously.`}</p>\n    <h2 {...{\n      \"id\": \"cookbooks\"\n    }}>{`Cookbooks`}</h2>\n    <p>{`Ways to group recipes and put them into useful configurations.`}</p>\n    <p>{`Instead of a single recipe being sent to a server, we send a `}<inlineCode parentName=\"p\">{`cookbook`}</inlineCode>{`.`}</p>\n    <h3 {...{\n      \"id\": \"how-do-you-keep-track-of-changes-to-the-recipes\"\n    }}>{`How do you keep track of changes to the recipes?`}</h3>\n    <p>{`Cookbooks allow a way to package up the recipes and give it a version number and track changes.`}</p>\n    <p><inlineCode parentName=\"p\">{`A fundamental unit of configuration and policy distribution`}</inlineCode></p>\n    <p>{`When creating the cookbook, is describes a config for a particular scenario.`}</p>\n    <p>{`What to use cookbooks for:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Specifiy resources to use and in which order they are applied`}</li>\n      <li parentName=\"ul\">{`Attribute values`}</li>\n      <li parentName=\"ul\">{`File distributions`}</li>\n      <li parentName=\"ul\">{`Templates`}</li>\n      <li parentName=\"ul\">{`Extensions to Chef (lib, definitions and custom resources)`}</li>\n      <li parentName=\"ul\">{`Version Control`}</li>\n    </ul>\n    <p>{`Cookbook components:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`README`}</li>\n      <li parentName=\"ul\">{`metadata`}</li>\n      <li parentName=\"ul\">{`recipes`}</li>\n      <li parentName=\"ul\">{`testing directories (spec + test)`}</li>\n    </ul>\n    <h3 {...{\n      \"id\": \"cookbook-components\"\n    }}>{`Cookbook Components`}</h3>\n    <p>{`We can create cookbooks by using `}<inlineCode parentName=\"p\">{`chef generate [cookbook|other]`}</inlineCode>{`.`}</p>\n    <p>{`When we generate a cookbook, we should give the cookbook a relevant name. Example `}<inlineCode parentName=\"p\">{`chef generate cookbooks/workstation`}</inlineCode>{` to create a `}<inlineCode parentName=\"p\">{`workstation`}</inlineCode>{` book in the `}<inlineCode parentName=\"p\">{`cookbooks`}</inlineCode>{` folder.`}</p>\n    <h3 {...{\n      \"id\": \"tracking-changes-to-the-cookbooks\"\n    }}>{`Tracking changes to the Cookbooks`}</h3>\n    <p>{`Inside of a single repository, changes are generally tracked for a single cook book.`}</p>\n    <h3 {...{\n      \"id\": \"setting-up-an-apache-cookbook\"\n    }}>{`Setting up an Apache Cookbook`}</h3>\n    <p>{`First, create a new cookbook in the cookbooks foler using `}<inlineCode parentName=\"p\">{`chef generate cookbook cookbooks/apache`}</inlineCode></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-ruby\"\n      }}>{`# Server\n\n# 1. http package install (redhat)\npackage 'httpd' do\n    action :install\nend\n\n# 2. configure default apache server file /var/www/html\nfile '/var/www/html/index.html' do\n    content '<h1>Hello from Apache</h1>'\nend\n\n# 3. download apache, enable and start the apache service\npackage 'apache' do\n    action :install\nend\n\nservice 'httpd' do\n    action [ :enable, :start ]\nend\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"chef-client\"\n    }}>{`Chef Client`}</h2>\n    <p>{`How do we apply the recipes from the cookbooks from the Chef client? How do we call multiple recipes at once?`}</p>\n    <p>{`We can use a cook book to define the scenarios here.`}</p>\n    <p>{`Say we want to call a cookbook from a particular recipe.`}</p>\n    <p>{`We can also do `}<inlineCode parentName=\"p\">{`sudo chef-client -z --runlist \"recipe[cookbook::recipe]\"`}</inlineCode>{` to run a particular recipe.`}</p>\n    <p>{`For running multiple cookbook recipes, we could do `}<inlineCode parentName=\"p\">{`sudo chef-client -z --runlist \"recipe[cookbook::recipe],recipe[another-cookbook::recipe]\"`}</inlineCode>{`. This will do a `}<inlineCode parentName=\"p\">{`chef-client`}</inlineCode>{` run in order.`}</p>\n    <p>{`The runlist DOES NOT HAVE A SPACE between recipe declarations.`}</p>\n    <h3 {...{\n      \"id\": \"include_recipe\"\n    }}>{`include_recipe`}</h3>\n    <p>{`The `}<inlineCode parentName=\"p\">{`include_recipe`}</inlineCode>{` method allows you to include a recipe from either the online cookbook stores or from one of our own cookbooks.`}</p>\n    <p>{`This is a great way to `}<inlineCode parentName=\"p\">{`wrap`}</inlineCode>{` cookbooks.`}</p>\n    <p>{`Each of the cookbooks that we generate come with a `}<inlineCode parentName=\"p\">{`default.rb`}</inlineCode>{` recipe. This default recipe can help us call other recipes.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-ruby\"\n      }}>{`# in the default.rb file for a recipe\n\n# example 'cookbook::recipe'\ninclude_recipe 'workstation::setup'\n`}</code></pre>\n    <p>{`If we now run `}<inlineCode parentName=\"p\">{`sudo chef-client -z -r \"recipe[workstation]\"`}</inlineCode>{` and omit the specific recipe, then the `}<inlineCode parentName=\"p\">{`default.rb`}</inlineCode>{` recipe will be used.`}</p>\n    <h3 {...{\n      \"id\": \"defaultrb-example\"\n    }}>{`default.rb example`}</h3>\n    <p>{`Including the server recipe from the apache cookbook.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-ruby\"\n      }}>{`include_recipe 'apache::server'\n`}</code></pre>\n    <p>{`Now we can call sudo chef-client -z -r \"recipe`}{`[apache]`}{`\"\\`.`}</p>\n    <h2 {...{\n      \"id\": \"ohai\"\n    }}>{`Ohai`}</h2>\n    <p>{`We need to think about distribution of the cookbooks to many different nodes.`}</p>\n    <p>{`We may need to know a bit of information about that `}<inlineCode parentName=\"p\">{`node`}</inlineCode>{`. That's where `}<inlineCode parentName=\"p\">{`ohai`}</inlineCode>{` comes in.`}</p>\n    <h3 {...{\n      \"id\": \"an-object-called-node\"\n    }}>{`An object called 'node'`}</h3>\n    <p>{`We can now begin to start thinking of scale - how to deal with 100s or 1000s or similar servers.`}</p>\n    <p>{`This webserver code that we have could be distributed to thousands of nodes, but the config might need to be different on each of these nodes.`}</p>\n    <p>{`What happens if a host specific config needs to be different? Eg. hostname, memory available, IP address etc. These things may very from system to system.`}</p>\n    <p><inlineCode parentName=\"p\">{`Ohai`}</inlineCode>{` is a system discovery tool. It's a command line tool that is required by `}<inlineCode parentName=\"p\">{`chef-client`}</inlineCode>{`.`}</p>\n    <p><inlineCode parentName=\"p\">{`ohai`}</inlineCode>{` gives back all the node system data in JSON. Everytime `}<inlineCode parentName=\"p\">{`chef-client`}</inlineCode>{` is run, it automatically executes an `}<inlineCode parentName=\"p\">{`ohai`}</inlineCode>{` and allows this object (known as the node object) to be accessed. We call these attributes available as `}<inlineCode parentName=\"p\">{`node attributes`}</inlineCode>{`. Each `}<inlineCode parentName=\"p\">{`attribute`}</inlineCode>{` also has `}<inlineCode parentName=\"p\">{`sub-attributes`}</inlineCode>{`.`}</p>\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  "],"sourceRoot":""}