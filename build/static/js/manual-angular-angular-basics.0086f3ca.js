(window.webpackJsonp=window.webpackJsonp||[]).push([[23],{"./manual/Angular/Angular-Basics.md":function(e,t,n){"use strict";n.r(t),n.d(t,"default",function(){return s});var a=n("./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js"),l=(n("./node_modules/react/index.js"),n("./node_modules/@mdx-js/react/dist/index.es.js")),r={},o="wrapper";function s(e){var t=e.components,n=Object(a.a)(e,["components"]);return Object(l.b)(o,Object.assign({},r,n,{components:t,mdxType:"MDXLayout"}),Object(l.b)("h1",{id:"angular-basics"},"ANGULAR BASICS"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"name file the same as directive")),Object(l.b)("p",null,"Create templates/todos.html"),Object(l.b)("p",null,"Create scripts/directives/todos.js"),Object(l.b)("pre",null,Object(l.b)("code",Object.assign({parentName:"pre"},{className:"language-javascript"}),"angular.module(\"todoListApp\")\n.directive('todos' function() {\n    return {\n        templateUrl: 'templates/todos.html',\n        controller: 'mainCtrl' //can define the controller too,\n        replace: true\n    }\n});\n")),Object(l.b)("p",null,"To get rid of directive tags, use the replace key."),Object(l.b)("h3",{id:"jsang-54-finalising-the-app"},"JSANG-5.4: Finalising the App"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"adding a save all function"),Object(l.b)("li",{parentName:"ul"},"ng-click and start editing")),Object(l.b)("p",null,"for the save in main.js..."),Object(l.b)("pre",null,Object(l.b)("code",Object.assign({parentName:"pre"},{className:"language-javascript"}),".controller(... function() {\n\n    ...\n\n    $scope.saveTodos = function() {\n        var filteredTodos = $scope.todos.filter(function(todo) {\n            if (todo.edited) {\n                return todo;\n            };\n        })\n        dataService.saveTodos(filteredTodos);\n    }\n\n})\n")),Object(l.b)("p",null,"QUESTIONS"),Object(l.b)("ol",null,Object(l.b)("li",{parentName:"ol"},"In the object a directive returns, ",Object(l.b)("strong",{parentName:"li"},Object(l.b)("strong",{parentName:"strong"},"_"))," loads an html file as a directive template.")),Object(l.b)("p",null,"A: 'templateUrl'"),Object(l.b)("ol",{start:2},Object(l.b)("li",{parentName:"ol"},"The Array's ",Object(l.b)("strong",{parentName:"li"},Object(l.b)("strong",{parentName:"strong"},"_"))," method returns a subset of the array based on logic in the callback. For example, ",Object(l.b)("inlineCode",{parentName:"li"},"['foo', 'bar', 'yes', 'no'].someMethod(callback)"),".")),Object(l.b)("p",null,"A: filter"),Object(l.b)("ol",{start:3},Object(l.b)("li",{parentName:"ol"},"In the object that a directive returns, the ",Object(l.b)("strong",{parentName:"li"},Object(l.b)("strong",{parentName:"strong"},"_"))," key defines a controller to be used.")),Object(l.b)("p",null,"A: 'controller'"),Object(l.b)("ol",{start:4},Object(l.b)("li",{parentName:"ol"},"The first parameter of angular's ",Object(l.b)("inlineCode",{parentName:"li"},"directive")," method is ",Object(l.b)("strong",{parentName:"li"},Object(l.b)("strong",{parentName:"strong"},"__")),".")),Object(l.b)("p",null,"A: The name of the directive"))}s&&s===Object(s)&&Object.isExtensible(s)&&Object.defineProperty(s,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"MDXContent",filename:"manual/Angular/Angular-Basics.md"}}),s.isMDXComponent=!0}}]);
//# sourceMappingURL=manual-angular-angular-basics.101a1afd2417ec7a4a77.js.map