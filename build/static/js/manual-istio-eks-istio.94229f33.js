(window.webpackJsonp=window.webpackJsonp||[]).push([[216],{"./manual/Istio/EKS-Istio.md":function(e,n,t){"use strict";t.r(n),t.d(n,"default",function(){return l});var a=t("./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js"),s=(t("./node_modules/react/index.js"),t("./node_modules/@mdx-js/react/dist/index.es.js")),i={},o="wrapper";function l(e){var n=e.components,t=Object(a.a)(e,["components"]);return Object(s.b)(o,Object.assign({},i,t,{components:n,mdxType:"MDXLayout"}),Object(s.b)("h1",{id:"getting-start-with-istio-on-eks"},"Getting start with Istio on EKS"),Object(s.b)("p",null,"Reference link ",Object(s.b)("a",Object.assign({parentName:"p"},{href:"https://aws.amazon.com/blogs/opensource/getting-started-istio-eks/"}),"https://aws.amazon.com/blogs/opensource/getting-started-istio-eks/")),Object(s.b)("h2",{id:"architecture"},"Architecture"),Object(s.b)("p",null,Object(s.b)("img",{alt:"Small network proxy sidecar alongside each microservice",src:"https://i-h1.pinimg.com/564x/15/d7/9a/15d79a5f70bb45900166d1e3a6a3ea09.jpg"})),Object(s.b)("p",null,"Istio works by having a small network proxy sit alongside each microservice. This so-called \u201csidecar\u201d intercepts all of the service\u2019s traffic, and handles it more intelligently than a simple layer 3 network can. Istio uses the Envoy proxy as its sidecar. Envoy was originally written at Lyft and is now a CNCF project. The whole set of sidecars, one per microservice, is called the data plane. The work of the sidecars is coordinated by a small number of central components called the control plane. Control and data plane architectures are very common in distributed systems, from network switches to compute farms."),Object(s.b)("h2",{id:"setting-up-istio"},"Setting up Istio"),Object(s.b)("p",null,"tl;dr is to use ",Object(s.b)("inlineCode",{parentName:"p"},"eksctl")," to create an EKS cluster."),Object(s.b)("pre",null,Object(s.b)("code",Object.assign({parentName:"pre"},{className:"language-shell"}),'eksctl create cluster \\\n    --region us-west-2 \\\n    --name istio-on-eks \\\n    --nodes 2 \\\n    --ssh-public-key "~/.ssh/id_rsa.pub"\n')),Object(s.b)("p",null,"Ensure you download and abstract the latest Istio release."),Object(s.b)("pre",null,Object(s.b)("code",Object.assign({parentName:"pre"},{className:"language-shell"}),"curl -L https://git.io/getLatestIstio | sh -\ncd istio-1.*\n")),Object(s.b)("p",null,"After changing in, ensure that you are using ",Object(s.b)("inlineCode",{parentName:"p"},"helm")," to set up."),Object(s.b)("pre",null,Object(s.b)("code",Object.assign({parentName:"pre"},{className:"language-shell"}),"kubectl create -f install/kubernetes/helm/helm-service-account.yaml\n# Export isto to bin to enable istioctl\nhelm init --service-account tiller\nhelm install \\\n--wait \\\n--name istio \\\n--namespace istio-system \\\ninstall/kubernetes/helm/istio\n# Check `kubectl -n kube-system get po` to see if tiller pod running\nkubectl label namespace default istio-injection=enabled\n")),Object(s.b)("p",null,"Note: This is not the best example of security practice. Check Helm docs for RBAC to show you how to set up securely."),Object(s.b)("h2",{id:"running-a-test-application"},"Running a test application"),Object(s.b)("pre",null,Object(s.b)("code",Object.assign({parentName:"pre"},{className:"language-shell"}),"# From the istio folder, apply the book info\nkubectl apply -f \\<(istioctl kube-inject -f samples/bookinfo/platform/kube/bookinfo.yaml)\n# Expose the BookInfo with the Gateway resource\nkubectl apply -f samples/bookinfo/networking/bookinfo-gateway.yaml\n")),Object(s.b)("p",null,"For bookinfo.yaml:"),Object(s.b)("pre",null,Object(s.b)("code",Object.assign({parentName:"pre"},{className:"language-yaml"}),'# bookinfo.yaml\n#\n# Copyright 2017 Istio Authors\n#\n#   Licensed under the Apache License, Version 2.0 (the "License");\n#   you may not use this file except in compliance with the License.\n#   You may obtain a copy of the License at\n#\n#       http://www.apache.org/licenses/LICENSE-2.0\n#\n#   Unless required by applicable law or agreed to in writing, software\n#   distributed under the License is distributed on an "AS IS" BASIS,\n#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n#   See the License for the specific language governing permissions and\n#   limitations under the License.\n\n##################################################################################################\n# Details service\n##################################################################################################\napiVersion: v1\nkind: Service\nmetadata:\n  name: details\n  labels:\n    app: details\nspec:\n  ports:\n    - port: 9080\n      name: http\n  selector:\n    app: details\n---\napiVersion: extensions/v1beta1\nkind: Deployment\nmetadata:\n  name: details-v1\nspec:\n  replicas: 1\n  template:\n    metadata:\n      labels:\n        app: details\n        version: v1\n    spec:\n      containers:\n        - name: details\n          image: istio/examples-bookinfo-details-v1:1.10.0\n          imagePullPolicy: IfNotPresent\n          ports:\n            - containerPort: 9080\n---\n##################################################################################################\n# Ratings service\n##################################################################################################\napiVersion: v1\nkind: Service\nmetadata:\n  name: ratings\n  labels:\n    app: ratings\nspec:\n  ports:\n    - port: 9080\n      name: http\n  selector:\n    app: ratings\n---\napiVersion: extensions/v1beta1\nkind: Deployment\nmetadata:\n  name: ratings-v1\nspec:\n  replicas: 1\n  template:\n    metadata:\n      labels:\n        app: ratings\n        version: v1\n    spec:\n      containers:\n        - name: ratings\n          image: istio/examples-bookinfo-ratings-v1:1.10.0\n          imagePullPolicy: IfNotPresent\n          ports:\n            - containerPort: 9080\n---\n##################################################################################################\n# Reviews service\n##################################################################################################\napiVersion: v1\nkind: Service\nmetadata:\n  name: reviews\n  labels:\n    app: reviews\nspec:\n  ports:\n    - port: 9080\n      name: http\n  selector:\n    app: reviews\n---\napiVersion: extensions/v1beta1\nkind: Deployment\nmetadata:\n  name: reviews-v1\nspec:\n  replicas: 1\n  template:\n    metadata:\n      labels:\n        app: reviews\n        version: v1\n    spec:\n      containers:\n        - name: reviews\n          image: istio/examples-bookinfo-reviews-v1:1.10.0\n          imagePullPolicy: IfNotPresent\n          ports:\n            - containerPort: 9080\n---\napiVersion: extensions/v1beta1\nkind: Deployment\nmetadata:\n  name: reviews-v2\nspec:\n  replicas: 1\n  template:\n    metadata:\n      labels:\n        app: reviews\n        version: v2\n    spec:\n      containers:\n        - name: reviews\n          image: istio/examples-bookinfo-reviews-v2:1.10.0\n          imagePullPolicy: IfNotPresent\n          ports:\n            - containerPort: 9080\n---\napiVersion: extensions/v1beta1\nkind: Deployment\nmetadata:\n  name: reviews-v3\nspec:\n  replicas: 1\n  template:\n    metadata:\n      labels:\n        app: reviews\n        version: v3\n    spec:\n      containers:\n        - name: reviews\n          image: istio/examples-bookinfo-reviews-v3:1.10.0\n          imagePullPolicy: IfNotPresent\n          ports:\n            - containerPort: 9080\n---\n##################################################################################################\n# Productpage services\n##################################################################################################\napiVersion: v1\nkind: Service\nmetadata:\n  name: productpage\n  labels:\n    app: productpage\nspec:\n  ports:\n    - port: 9080\n      name: http\n  selector:\n    app: productpage\n---\napiVersion: extensions/v1beta1\nkind: Deployment\nmetadata:\n  name: productpage-v1\nspec:\n  replicas: 1\n  template:\n    metadata:\n      labels:\n        app: productpage\n        version: v1\n    spec:\n      containers:\n        - name: productpage\n          image: istio/examples-bookinfo-productpage-v1:1.10.0\n          imagePullPolicy: IfNotPresent\n          ports:\n            - containerPort: 9080\n---\n')),Object(s.b)("p",null,"The following commands will locate the host and port we ultimately need to hit to access our Bookinfo application from across the internet:"),Object(s.b)("pre",null,Object(s.b)("code",Object.assign({parentName:"pre"},{className:"language-shell"}),"$ export INGRESS_HOST=$(kubectl -n istio-system \\\nget service istio-ingressgateway \\\n-o jsonpath='{.status.loadBalancer.ingress[0].hostname}')\n$ export INGRESS_PORT=$(kubectl -n istio-system \\\nget service istio-ingressgateway \\\n-o jsonpath='{.spec.ports[?(@.name==\"http2\")].port}')\n$ export GATEWAY_URL=$INGRESS_HOST:$INGRESS_PORT\n")),Object(s.b)("h2",{id:"layer-7-routing"},"Layer 7 Routing"),Object(s.b)("p",null,"So, let\u2019s get things under control and pin all calls to reviews v1 for now."),Object(s.b)("p",null,"The Bookinfo sample has a few pre-made Istio configs we can use, and this is one of them."),Object(s.b)("p",null,"First we need to tell Istio about the different versions that exist and how to tell them apart (in this case, labels on the Kubernetes Deployment)."),Object(s.b)("pre",null,Object(s.b)("code",Object.assign({parentName:"pre"},{className:"language-shell"}),"kubectl apply -f samples/bookinfo/networking/destination-rule-all.yaml\n")),Object(s.b)("pre",null,Object(s.b)("code",Object.assign({parentName:"pre"},{className:"language-yaml"}),"# destination-rule-all.yaml\napiVersion: networking.istio.io/v1alpha3\nkind: DestinationRule\nmetadata:\n  name: productpage\nspec:\n  host: productpage\n  subsets:\n    - name: v1\n      labels:\n        version: v1\n---\napiVersion: networking.istio.io/v1alpha3\nkind: DestinationRule\nmetadata:\n  name: reviews\nspec:\n  host: reviews\n  subsets:\n    - name: v1\n      labels:\n        version: v1\n    - name: v2\n      labels:\n        version: v2\n    - name: v3\n      labels:\n        version: v3\n---\napiVersion: networking.istio.io/v1alpha3\nkind: DestinationRule\nmetadata:\n  name: ratings\nspec:\n  host: ratings\n  subsets:\n    - name: v1\n      labels:\n        version: v1\n    - name: v2\n      labels:\n        version: v2\n    - name: v2-mysql\n      labels:\n        version: v2-mysql\n    - name: v2-mysql-vm\n      labels:\n        version: v2-mysql-vm\n---\napiVersion: networking.istio.io/v1alpha3\nkind: DestinationRule\nmetadata:\n  name: details\nspec:\n  host: details\n  subsets:\n    - name: v1\n      labels:\n        version: v1\n    - name: v2\n      labels:\n        version: v2\n---\n")),Object(s.b)("p",null,Object(s.b)("img",{alt:"Dest rules",src:"https://i-h1.pinimg.com/564x/e9/a7/81/e9a7819b6ed349f27d4ea0915c0665f5.jpg"})),Object(s.b)("p",null,"With those subsets of the reviews Service defined, we can tell Istio that anyone looking to call reviews should always be directed to v1."),Object(s.b)("pre",null,Object(s.b)("code",Object.assign({parentName:"pre"},{className:"language-shell"}),"kubectl apply -f samples/bookinfo/networking/virtual-service-all-v1.yaml\n")),Object(s.b)("pre",null,Object(s.b)("code",Object.assign({parentName:"pre"},{className:"language-yaml"}),"# virtual-service-ruleallv1.yaml\napiVersion: networking.istio.io/v1alpha3\nkind: VirtualService\nmetadata:\n  name: productpage\nspec:\n  hosts:\n    - productpage\n  http:\n    - route:\n        - destination:\n            host: productpage\n            subset: v1\n---\napiVersion: networking.istio.io/v1alpha3\nkind: VirtualService\nmetadata:\n  name: reviews\nspec:\n  hosts:\n    - reviews\n  http:\n    - route:\n        - destination:\n            host: reviews\n            subset: v1\n---\napiVersion: networking.istio.io/v1alpha3\nkind: VirtualService\nmetadata:\n  name: ratings\nspec:\n  hosts:\n    - ratings\n  http:\n    - route:\n        - destination:\n            host: ratings\n            subset: v1\n---\napiVersion: networking.istio.io/v1alpha3\nkind: VirtualService\nmetadata:\n  name: details\nspec:\n  hosts:\n    - details\n  http:\n    - route:\n        - destination:\n            host: details\n            subset: v1\n---\n")),Object(s.b)("p",null,Object(s.b)("img",{alt:"Route changes",src:"https://d2908q01vomqb2.cloudfront.net/ca3512f4dfa95a03169c5a670a4c91a19b3077b4/2018/08/22/istio-host-reviews.jpg"})),Object(s.b)("h2",{id:"teardown"},"Teardown"),Object(s.b)("p",null,"Deleting the resources:"),Object(s.b)("pre",null,Object(s.b)("code",Object.assign({parentName:"pre"},{className:"language-shell"}),"kubectl delete -f samples/bookinfo/networking/bookinfo-gateway.yaml\nkubectl delete -f \\<(istioctl kube-inject -f samples/bookinfo/platform/kube/bookinfo.yaml)\nhelm delete \\\n--wait \\\n--name istio \\\n--namespace istio-system \\\ninstall/kubernetes/helm/istio\n")))}l&&l===Object(l)&&Object.isExtensible(l)&&Object.defineProperty(l,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"MDXContent",filename:"manual/Istio/EKS-Istio.md"}}),l.isMDXComponent=!0}}]);
//# sourceMappingURL=manual-istio-eks-istio.101a1afd2417ec7a4a77.js.map