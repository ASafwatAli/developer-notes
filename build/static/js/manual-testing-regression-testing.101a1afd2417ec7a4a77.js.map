{"version":3,"sources":["/Users/dennis.okeeffe/Project-Imposter/developer-notes/manual/Testing/Regression-Testing.md"],"names":["layoutProps","MDXLayout","MDXContent","_ref","components","props","Object","_Users_dennis_okeeffe_Project_Imposter_developer_notes_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","_mdx_js_react__WEBPACK_IMPORTED_MODULE_2__","assign","mdxType","id","parentName","className","isMDXComponent"],"mappings":"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","file":"static/js/manual-testing-regression-testing.7e4b3e97.js","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"css-regression-testing\"\n    }}>{`CSS Regression Testing`}</h1>\n    <p>{`We can achieve CSS regression testing by using an assertion library in conjuction with Puppeteer and Pixel Diff.`}</p>\n    <h2 {...{\n      \"id\": \"prequisites\"\n    }}>{`Prequisites`}</h2>\n    <h3 {...{\n      \"id\": \"using-yarn\"\n    }}>{`Using yarn`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`yarn install --dev mocha chai puppeteer pixelmatch pngfs babel-polyfill babel-preset-env babel-plugin-module-resolver\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"using-kratos\"\n    }}>{`Using kratos`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`kratos install js-controllers pixeldiff\nkratos install js-test regression\nshotgun run\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"folder-setup\"\n    }}>{`Folder setup`}</h3>\n    <p>{`Ensure that you have a `}<inlineCode parentName=\"p\">{`regression`}</inlineCode>{` folder to store all the images.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`# Example regression layout\nregression\n├── diff\n│   └── test.png\n├── src\n│   └── test.png\n└── temp\n    └── test.png\n\n3 directories, 3 files\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"using-regression-cli\"\n    }}>{`Using Regression CLI`}</h2>\n    <h3 {...{\n      \"id\": \"preparation\"\n    }}>{`Preparation`}</h3>\n    <ol>\n      <li parentName=\"ol\">{`Set the imports for the router file.`}</li>\n      <li parentName=\"ol\">{`Set the dev router.`}</li>\n      <li parentName=\"ol\">{`Set the array in the .puppeteer file.`}</li>\n      <li parentName=\"ol\">{`Ensure the devRouter is being used.`}</li>\n      <li parentName=\"ol\">{`Ensure app is running.`}</li>\n      <li parentName=\"ol\">{`Run source to set the base image.`}</li>\n      <li parentName=\"ol\">{`Run compare to compare source to current.`}</li>\n    </ol>\n    <h2 {...{\n      \"id\": \"application\"\n    }}>{`Application`}</h2>\n    <h3 {...{\n      \"id\": \"1-create-a-babelrc-file\"\n    }}>{`1. Create a babelrc file`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`{\n  \"presets\": [\"env\"],\n  \"plugins\": [\n    [\n      \"module-resolver\",\n      {\n        \"alias\": {\n          \"controllers\": \"./controllers\"\n        }\n      }\n    ]\n  ]\n}\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"2-saving-a-screenshot\"\n    }}>{`2. Saving a screenshot`}</h3>\n    <p>{`This is not the test itself but a simple node script to get the initial base working:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`const PixelDiff = require('./controllers/pixeldiff');\nconst puppeteer = require('puppeteer');\n\n(async () => {\n  const browser = await puppeteer.launch();\n  const page = await browser.newPage();\n\n  console.log('Opening browser');\n  await page.goto('http://localhost:3000');\n\n  const el = await page.$('.homeSplashFade');\n  await el.screenshot({ path: 'regression/src/test.png' });\n\n  console.log('Closing browser');\n  await browser.close();\n\n  /*\n    console.log('Comparing images');\n    const res = await PixelDiff.diff({imgOnePath: 'test.png', imgTwoPath: 'test2.png', dest: 'dest.png', output: true});\n    console.log(res);\n    */\n})();\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"3-writing-the-test-file\"\n    }}>{`3. Writing the test file`}</h3>\n    <p>{`Create your test file. Any example test file looks like the following:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`/**\n * Regression tests\n * @author Dennis O'Keeffe\n */\nrequire('babel-polyfill');\nconst expect = require('chai').expect;\nconst cwd = process.cwd();\nconst PixelDiff = require('controllers/pixeldiff');\nconst puppeteer = require('puppeteer');\n\nconsole.log(PixelDiff);\nconsole.log(cwd);\n\nconst screenshot = async (selector, savePath, location = '/') => {\n  const browser = await puppeteer.launch();\n  const page = await browser.newPage();\n\n  console.log('Opening browser');\n  await page.goto('http://localhost:3000');\n\n  const el = await page.$('#root');\n  await el.screenshot({ path: savePath });\n\n  console.log('Closing browser');\n  await browser.close();\n};\n\ndescribe('It works functionality', () => {\n  it('Expects true to be true', () => {\n    expect(true).to.be.true;\n  });\n});\n\ndescribe('Image regression testing', () => {\n  it('has no pixel difference', async () => {\n    console.log('Comparing images');\n    await screenshot('.homeSplashFade', cwd + '/regression/temp/test.png');\n\n    const res = await PixelDiff.diff({\n      imgOnePath: cwd + '/regression/src/test.png',\n      imgTwoPath: cwd + '/regression/temp/test.png',\n      dest: cwd + '/regression/diff/test.png',\n      output: true\n    });\n    expect(res).to.equal(0);\n  });\n});\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"4-running-the-test-from-the-cli\"\n    }}>{`4. Running the test from the CLI`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`mocha --compilers js:babel-core/register --timeout 0 ./test/regression/regression.mocha.js\n`}</code></pre>\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  "],"sourceRoot":""}