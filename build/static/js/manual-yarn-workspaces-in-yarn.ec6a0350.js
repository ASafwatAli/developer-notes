(window.webpackJsonp=window.webpackJsonp||[]).push([[527],{"./manual/Yarn/Workspaces-In-Yarn.md":function(e,n,a){"use strict";a.r(n),a.d(n,"default",function(){return l});var t=a("./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js"),s=(a("./node_modules/react/index.js"),a("./node_modules/@mdx-js/react/dist/index.es.js")),o={},c="wrapper";function l(e){var n=e.components,a=Object(t.a)(e,["components"]);return Object(s.b)(c,Object.assign({},o,a,{components:n,mdxType:"MDXLayout"}),Object(s.b)("h1",{id:"yarn-workspaces"},"Yarn Workspaces"),Object(s.b)("p",null,"Notes from this come from the official Yarn article ",Object(s.b)("a",Object.assign({parentName:"p"},{href:"https://yarnpkg.com/blog/2017/08/02/introducing-workspaces/"}),"found here"),"."),Object(s.b)("h2",{id:"tldr-key-commands"},"tl;dr Key Commands"),Object(s.b)("table",null,Object(s.b)("thead",{parentName:"table"},Object(s.b)("tr",{parentName:"thead"},Object(s.b)("th",Object.assign({parentName:"tr"},{align:null}),"Command"),Object(s.b)("th",Object.assign({parentName:"tr"},{align:null}),"Function"))),Object(s.b)("tbody",{parentName:"table"},Object(s.b)("tr",{parentName:"tbody"},Object(s.b)("td",Object.assign({parentName:"tr"},{align:null}),"yarn config set workspaces-experimental true"),Object(s.b)("td",Object.assign({parentName:"tr"},{align:null}),"Initialises Workspaces")))),Object(s.b)("h2",{id:"introduction"},"Introduction"),Object(s.b)("blockquote",null,Object(s.b)("p",{parentName:"blockquote"},"Those who have tried splitting a project into multiple packages know how hard it is to make changes across multiple packages at one time. To make the process easier, some big projects adopted a monorepo approach, or multi-package repositories, which reduces the burden of writing code across packages.")),Object(s.b)("h2",{id:"lerna"},"Lerna"),Object(s.b)("ul",null,Object(s.b)("li",{parentName:"ul"},"A tool to optimize workflow around managing multi-package repos."),Object(s.b)("li",{parentName:"ul"},"Being a wrapper of a package manager, Lerna can't manipulate contents of ",Object(s.b)("inlineCode",{parentName:"li"},"node_modules")," efficiently, hence Workspaces.")),Object(s.b)("h2",{id:"workspaces"},"Workspaces"),Object(s.b)("p",null,"Yarn Workspaces is a feature that allows users to install dependencies from multiple package.json files in subfolders of a single root package.json file, all in one go."),Object(s.b)("ul",null,Object(s.b)("li",{parentName:"ul"},"Enables faster, lighter installation. Also creates symlinks between Workspaces that depend on each other, and will ensure the consistencvy and correcvtness of all directories.")),Object(s.b)("h2",{id:"example-jest-workspace"},"Example: Jest Workspace"),Object(s.b)("pre",null,Object(s.b)("code",Object.assign({parentName:"pre"},{className:"language-shell"}),"| jest/\n| ---- package.json\n| ---- packages/\n| -------- jest-matcher-utils/\n| ------------ package.json\n| -------- jest-diff/\n| ------------ package.json\n...\n")),Object(s.b)("p",null,"Example root ",Object(s.b)("inlineCode",{parentName:"p"},"package.json")," file. Generally kept as private."),Object(s.b)("pre",null,Object(s.b)("code",Object.assign({parentName:"pre"},{className:"language-json"}),'{\n  "private": true,\n  "name": "jest",\n  "devDependencies": {\n    "chalk": "^2.0.1"\n  },\n  "workspaces": ["packages/*"]\n}\n')),Object(s.b)("h2",{id:"how-yarn-install-works-with-workspaces"},"How yarn install works with workspaces"),Object(s.b)("p",null,"Take the following two packages within Jest:"),Object(s.b)("pre",null,Object(s.b)("code",Object.assign({parentName:"pre"},{className:"language-json"}),'// First package.json\n{\n  "name": "jest-matcher-utils",\n  "description": "...",\n  "version": "20.0.3",\n  "license": "...",\n  "main": "...",\n  "browser": "...",\n  "dependencies": {\n    "chalk": "^1.1.3",\n    "pretty-format": "^20.0.3"\n  }\n}\n\n// Second package.json\n{\n  "name": "jest-diff",\n  "version": "20.0.3",\n  "license": "...",\n  "main": "...",\n  "browser": "...",\n  "dependencies": {\n    "chalk": "^1.1.3",\n    "diff": "^3.2.0",\n    "jest-matcher-utils": "^20.0.3",\n    "pretty-format": "^20.0.3"\n  }\n}\n')),Object(s.b)("p",null,"Running ",Object(s.b)("inlineCode",{parentName:"p"},"yarn install")," from anywhere within the projects yields the following:"),Object(s.b)("pre",null,Object(s.b)("code",Object.assign({parentName:"pre"},{className:"language-shell"}),"| jest/\n| ---- node_modules/\n| -------- chalk/\n| -------- diff/\n| -------- pretty-format/\n| -------- jest-matcher-utils/  (symlink) -> ../packages/jest-matcher-utils\n| ---- package.json\n| ---- packages/\n| -------- jest-matcher-utils/\n| ------------ node_modules/\n| ---------------- chalk/\n| ------------ package.json\n| -------- jest-diff/\n| ------------ node_modules/\n| ---------------- chalk/\n| ------------ package.json\n...\n")),Object(s.b)("blockquote",null,Object(s.b)("p",{parentName:"blockquote"},"Packages like ",Object(s.b)("inlineCode",{parentName:"p"},"diff"),", ",Object(s.b)("inlineCode",{parentName:"p"},"pretty-format")," and the symlink to ",Object(s.b)("inlineCode",{parentName:"p"},"jest-matcher-utils")," were hoisted to the root node_modules directory, making the installation faster and smaller. The package ",Object(s.b)("inlineCode",{parentName:"p"},"chalk")," however could not be moved to the root because the root already depends on a different, incompatible version of ",Object(s.b)("inlineCode",{parentName:"p"},"chalk"),".")),Object(s.b)("h2",{id:"managing-dependecies"},"Managing Dependecies"),Object(s.b)("p",null,"Run the installation within the desired ",Object(s.b)("inlineCode",{parentName:"p"},"package"),":"),Object(s.b)("blockquote",null,Object(s.b)("p",{parentName:"blockquote"},"Note: that Workspaces don\u2019t have their own yarn.lock files, and the root yarn.lock contains all the dependencies for all the Workspaces. When you want to change a dependency inside a Workspace, the root yarn.lock will be changed as well as the Workspace\u2019s package.json.")))}l&&l===Object(l)&&Object.isExtensible(l)&&Object.defineProperty(l,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"MDXContent",filename:"manual/Yarn/Workspaces-In-Yarn.md"}}),l.isMDXComponent=!0}}]);
//# sourceMappingURL=manual-yarn-workspaces-in-yarn.101a1afd2417ec7a4a77.js.map