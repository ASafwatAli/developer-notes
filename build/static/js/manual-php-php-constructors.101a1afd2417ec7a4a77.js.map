{"version":3,"sources":["/Users/dennis.okeeffe/Project-Imposter/developer-notes/manual/PHP/PHP-Constructors.md"],"names":["layoutProps","MDXLayout","MDXContent","_ref","components","props","Object","_Users_dennis_okeeffe_Project_Imposter_developer_notes_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","_mdx_js_react__WEBPACK_IMPORTED_MODULE_2__","assign","mdxType","id","parentName","className","isMDXComponent"],"mappings":"sXAWMA,EAAc,GAGdC,EAAY,UACH,SAASC,EAATC,GAGZ,IAFDC,EAECD,EAFDC,WACGC,EACFC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,gBACD,OAAOG,OAAAE,EAAA,EAAAF,CAACL,EAADK,OAAAG,OAAA,GAAeT,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYM,QAAQ,cAC5EJ,OAAAE,EAAA,EAAAF,CAAA,KAAQ,CACNK,GAAM,oBADR,oBAGAL,OAAAE,EAAA,EAAAF,CAAA,wCAAmCA,OAAAE,EAAA,EAAAF,CAAA,cAAYM,WAAW,KAAvB,eAAnC,YACAN,OAAAE,EAAA,EAAAF,CAAA,WAAKA,OAAAE,EAAA,EAAAF,CAAA,OAAAA,OAAAG,OAAA,CAAMG,WAAW,OAAU,CAC5BC,UAAa,iBADZ,uyCAiETX,EAAWY,gBAAiB","file":"static/js/manual-php-php-constructors.4a4c9f03.js","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"php-constructors\"\n    }}>{`PHP Constructors`}</h1>\n    <p>{`The important method is the `}<inlineCode parentName=\"p\">{`__construct`}</inlineCode>{` method.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-php\"\n      }}>{`class LinkedList {\n    public $size = 0;\n    public $head;\n\n    function __construct($head = null) {\n        $this->head = $head;\n\n        if ($head != null) {\n            $this->size = 1;\n        } else {\n            $this->size = 0;\n        }\n    }\n\n    public function insertFirst($n) {\n        if ($this->head != null) {\n            $tmp = $this->head;\n            $this->head = $n;\n            $n->setNext($tmp);\n        } else {\n            $this->head = $n;\n        }\n        $this->size++;\n    }\n\n    public function getFirst() {\n        return $this->head;\n    }\n}\n\nclass Node {\n    private $data;\n    private $next;\n\n    function __construct($data = null) {\n        $this->data = $data;\n    }\n\n    public function getData() {\n        return $this->data;\n    }\n\n    public function setData($data) {\n        $this->data = $data;\n    }\n\n    public function getNext() {\n        return $this->next;\n    }\n\n    public function setNext($next) {\n        $this->next = $next;\n    }\n}\n\n$n1 = new Node(1);\n$n2 = new Node(2);\n$ll = new LinkedList($n1);\n$ll->insertFirst($n2);\n`}</code></pre>\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  "],"sourceRoot":""}