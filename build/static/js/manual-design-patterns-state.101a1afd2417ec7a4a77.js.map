{"version":3,"sources":["/Users/dennis.okeeffe/Project-Imposter/developer-notes/manual/Design-Patterns/State.md"],"names":["layoutProps","MDXLayout","MDXContent","_ref","components","props","Object","_Users_dennis_okeeffe_Project_Imposter_developer_notes_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","_mdx_js_react__WEBPACK_IMPORTED_MODULE_2__","assign","mdxType","id","parentName","className","isMDXComponent"],"mappings":"uXAWMA,EAAc,GAGdC,EAAY,UACH,SAASC,EAATC,GAGZ,IAFDC,EAECD,EAFDC,WACGC,EACFC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,gBACD,OAAOG,OAAAE,EAAA,EAAAF,CAACL,EAADK,OAAAG,OAAA,GAAeT,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYM,QAAQ,cAC5EJ,OAAAE,EAAA,EAAAF,CAAA,KAAQ,CACNK,GAAM,SADR,SAGAL,OAAAE,EAAA,EAAAF,CAAA,+CACAA,OAAAE,EAAA,EAAAF,CAAA,KAAQ,CACNK,GAAM,WADR,WAGAL,OAAAE,EAAA,EAAAF,CAAA,WAAKA,OAAAE,EAAA,EAAAF,CAAA,OAAAA,OAAAG,OAAA,CAAMG,WAAW,OAAU,CAC5BC,UAAa,wBADZ,oxEA8FTX,EAAWY,gBAAiB","file":"static/js/manual-design-patterns-state.c9d2c553.js","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"state\"\n    }}>{`State`}</h1>\n    <p>{`Object Behavioural Design Pattern.`}</p>\n    <h2 {...{\n      \"id\": \"example\"\n    }}>{`Example`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-typescript\"\n      }}>{`interface ATMState {\n  name?: string;\n  takeCash(cash: number): void;\n}\n\nclass ATMHasCashState implements ATMState {\n  private _machine: ATMMachine;\n  name: string;\n  constructor(machine: ATMMachine, name: string) {\n    this.name = name;\n    this._machine = machine;\n  }\n\n  takeCash(cash: number): void {\n    if (this._machine.cash < cash) {\n      this._machine.state = this._machine.noCashState();\n      console.log('Not enough cash');\n      return;\n    } else if (this._machine.cash === cash) {\n      this._machine.state = this._machine.noCashState();\n      console.log('No cash after cash token');\n    }\n    console.log(\n      \\`[current machine total - cash]: \\${this._machine.cash} - \\${cash}\\`\n    );\n    this._machine.cash -= cash;\n  }\n}\n\nclass ATMNoCashState implements ATMState {\n  private _machine: ATMMachine;\n  name: string;\n  constructor(machine: ATMMachine, name: string) {\n    this.name = name;\n    this._machine = machine;\n  }\n\n  takeCash(cash: number): void {\n    throw new Error('ATMMachine has no cash');\n  }\n}\n\nclass ATMMachine implements ATMState {\n  private _hasCashState: ATMHasCashState;\n  private _noCashState: ATMNoCashState;\n\n  private _currentState: ATMState;\n\n  public cash: number;\n\n  constructor(cash: number) {\n    this.cash = cash;\n\n    this._hasCashState = new ATMHasCashState(this, 'HasCash');\n    this._noCashState = new ATMNoCashState(this, 'NoCash');\n\n    this._currentState = this.cash ? this._hasCashState : this._noCashState;\n  }\n\n  public set state(value: ATMState) {\n    console.log(\\`Current state is \\${value.name}\\`);\n    this._currentState = value;\n  }\n\n  public get state() {\n    return this._currentState;\n  }\n\n  takeCash(cash: number): void {\n    this._currentState.takeCash(cash);\n  }\n\n  // Get states\n  public hasCashState() {\n    return this._hasCashState;\n  }\n\n  public noCashState() {\n    return this._noCashState;\n  }\n}\n\n(function main() {\n  const machine = new ATMMachine(1200);\n  machine.takeCash(200); // has cash\n  machine.takeCash(400); // has cash\n  machine.takeCash(1000); // not enough\n})();\n`}</code></pre>\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  "],"sourceRoot":""}