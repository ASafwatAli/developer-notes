{"version":3,"sources":["/Users/dennis.okeeffe/Project-Imposter/developer-notes/manual/Elixir/Elixir-School.md"],"names":["layoutProps","MDXLayout","MDXContent","_ref","components","props","Object","_Users_dennis_okeeffe_Project_Imposter_developer_notes_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","_mdx_js_react__WEBPACK_IMPORTED_MODULE_2__","assign","mdxType","id","parentName","href","className","isMDXComponent"],"mappings":"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","file":"static/js/manual-elixir-elixir-school.40704d33.js","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"elixir-school\"\n    }}>{`Elixir School`}</h1>\n    <p>{`References and notes come from the `}<a parentName=\"p\" {...{\n        \"href\": \"https://elixirschool.com/en/\"\n      }}>{`Elixir School page`}</a>{`.`}</p>\n    <h2 {...{\n      \"id\": \"basic-types\"\n    }}>{`Basic Types`}</h2>\n    <p>{`These just include unusual ones that are important to know:`}</p>\n    <h3 {...{\n      \"id\": \"atoms\"\n    }}>{`Atoms`}</h3>\n    <p>{`A constant whose name is value - synonymous with Ruby Symbols:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-elixir\"\n      }}>{`:foo == :bar # returns false\n`}</code></pre>\n    <p>{`Booleans `}<inlineCode parentName=\"p\">{`true`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`false`}</inlineCode>{` are also the atoms `}<inlineCode parentName=\"p\">{`:true`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`:false`}</inlineCode>{`.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-elixir\"\n      }}>{`true |> is_atom # true\n:true |> is_boolean # true\n:true === true # true\n`}</code></pre>\n    <p>{`The names of modules are also atoms:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-elixir\"\n      }}>{`is_atom(MyApp.MyModule) # true\n`}</code></pre>\n    <p>{`Atoms are also used to reference modules from Erlang libraries, including built in ones.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-elixir\"\n      }}>{`:crypto.strong_rand_bytes 3 # <<23, 104, 108>>\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"conditionals\"\n    }}>{`Conditionals`}</h2>\n    <p>{`Elixir provides the ||, &&, and ! boolean operators. There are three additional operators whose first argument must be a boolean (true or false):`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`iex> true and 42\n42\niex> false or true\ntrue\niex> not false\ntrue\niex> 42 and true\n** (ArgumentError) argument error: 42\niex> not 42\n** (ArgumentError) argument error\n`}</code></pre>\n    <p>{`Note: Elixir’s and and or actually map to `}<inlineCode parentName=\"p\">{`andalso`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`orelse`}</inlineCode>{` in Erlang.`}</p>\n    <h2 {...{\n      \"id\": \"comparisons\"\n    }}>{`Comparisons`}</h2>\n    <p>{`Elixir comes with all the comparison operators we’re used to: ==, !=, ===, !==, <=, >=, <, and >.`}</p>\n    <p>{`For strict comparison of integers and floats, use ===:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`iex> 2 == 2.0\ntrue\niex> 2 === 2.0\nfalse\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"interpolation\"\n    }}>{`Interpolation`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`iex> name = \"Sean\"\niex> \"Hello #{name}\"\n\"Hello Sean\"\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"concatenation\"\n    }}>{`Concatenation`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`iex> name = \"Sean\"\niex> \"Hello \" <> name\n\"Hello Sean\"\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"pattern-matching\"\n    }}>{`Pattern Matching`}</h2>\n    <h3 {...{\n      \"id\": \"match-operator\"\n    }}>{`Match Operator`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`# Assignment\niex> x = 1\n1\n# Pattern matching\niex> 1 = x\n1\niex> 2 = x\n** (MatchError) no match of right hand side value: 1\n\n# Lists\niex> list = [1, 2, 3]\niex> [1, 2, 3] = list\n[1, 2, 3]\niex> [] = list\n** (MatchError) no match of right hand side value: [1, 2, 3]\n\niex> [1 | tail] = list\n[1, 2, 3]\niex> tail\n[2, 3]\niex> [2 | _] = list\n** (MatchError) no match of right hand side value: [1, 2, 3]\n\n# Tuples\niex> {:ok, value} = {:ok, \"Successful!\"}\n{:ok, \"Successful!\"}\niex> value\n\"Successful!\"\niex> {:ok, value} = {:error}\n** (MatchError) no match of right hand side value: {:error}\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"pin-operator\"\n    }}>{`Pin Operator`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`iex> x = 1\n1\niex> ^x = 2\n** (MatchError) no match of right hand side value: 2\niex> {x, ^x} = {2, 1}\n{2, 1}\niex> x\n2\n`}</code></pre>\n    <p>{`An example of pinning in a function clause:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`iex> greeting = \"Hello\"\n\"Hello\"\niex> greet = fn\n...>   (^greeting, name) -> \"Hi #{name}\"\n...>   (greeting, name) -> \"#{greeting}, #{name}\"\n...> end\n#Function<12.54118792/2 in :erl_eval.expr/5>\niex> greet.(\"Hello\", \"Sean\")\n\"Hi Sean\"\niex> greet.(\"Mornin'\", \"Sean\")\n\"Mornin', Sean\"\niex> greeting\n\"Hello\"\n`}</code></pre>\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  "],"sourceRoot":""}