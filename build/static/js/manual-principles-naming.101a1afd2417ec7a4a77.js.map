{"version":3,"sources":["/Users/dennis.okeeffe/Project-Imposter/developer-notes/manual/Principles/Naming.md"],"names":["layoutProps","MDXLayout","MDXContent","_ref","components","props","Object","_Users_dennis_okeeffe_Project_Imposter_developer_notes_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","_mdx_js_react__WEBPACK_IMPORTED_MODULE_2__","assign","mdxType","parentName","href","id","className","isMDXComponent"],"mappings":"mXAWMA,EAAc,GAGdC,EAAY,UACH,SAASC,EAATC,GAGZ,IAFDC,EAECD,EAFDC,WACGC,EACFC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,gBACD,OAAOG,OAAAE,EAAA,EAAAF,CAACL,EAADK,OAAAG,OAAA,GAAeT,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYM,QAAQ,cAC5EJ,OAAAE,EAAA,EAAAF,CAAA,UACEA,OAAAE,EAAA,EAAAF,CAAA,MAAIK,WAAW,MAAKL,OAAAE,EAAA,EAAAF,CAAA,IAAAA,OAAAG,OAAA,CAAGE,WAAW,MAAS,CACvCC,KAAQ,YADQ,UAEDN,OAAAE,EAAA,EAAAF,CAAA,MAAIK,WAAW,MAC9BL,OAAAE,EAAA,EAAAF,CAAA,MAAIK,WAAW,MAAKL,OAAAE,EAAA,EAAAF,CAAA,IAAAA,OAAAG,OAAA,CAAGE,WAAW,MAAS,CACvCC,KAAQ,gBADQ,cAEGN,OAAAE,EAAA,EAAAF,CAAA,MAAIK,WAAW,MAClCL,OAAAE,EAAA,EAAAF,CAAA,MAAIK,WAAW,MAAKL,OAAAE,EAAA,EAAAF,CAAA,IAAAA,OAAAG,OAAA,CAAGE,WAAW,MAAS,CACvCC,KAAQ,eADQ,gBAIxBN,OAAAE,EAAA,EAAAF,CAAA,MAAIK,WAAW,MAAKL,OAAAE,EAAA,EAAAF,CAAA,IAAAA,OAAAG,OAAA,CAAGE,WAAW,MAAS,CACvCC,KAAQ,iBADQ,mBAK1BN,OAAAE,EAAA,EAAAF,CAAA,KAAQ,CACNO,GAAM,UADR,UAGAP,OAAAE,EAAA,EAAAF,CAAA,KAAQ,CACNO,GAAM,cADR,cAGAP,OAAAE,EAAA,EAAAF,CAAA,iFACAA,OAAAE,EAAA,EAAAF,CAAA,UACEA,OAAAE,EAAA,EAAAF,CAAA,MAAIK,WAAW,MAAf,QACAL,OAAAE,EAAA,EAAAF,CAAA,MAAIK,WAAW,MAAf,+BACAL,OAAAE,EAAA,EAAAF,CAAA,MAAIK,WAAW,MAAf,WACAL,OAAAE,EAAA,EAAAF,CAAA,MAAIK,WAAW,MAAf,YAEFL,OAAAE,EAAA,EAAAF,CAAA,2GAAsGA,OAAAE,EAAA,EAAAF,CAAA,cAAYK,WAAW,KAAvB,oCAAtG,KACAL,OAAAE,EAAA,EAAAF,CAAA,KAAQ,CACNO,GAAM,aADR,aAGAP,OAAAE,EAAA,EAAAF,CAAA,uYACAA,OAAAE,EAAA,EAAAF,CAAA,WAAKA,OAAAE,EAAA,EAAAF,CAAA,OAAAA,OAAAG,OAAA,CAAME,WAAW,OAAU,CAC5BG,UAAa,wBADZ,2XASLR,OAAAE,EAAA,EAAAF,CAAA,mCAA8BA,OAAAE,EAAA,EAAAF,CAAA,cAAYK,WAAW,KAAvB,WAA9B,QAA0FL,OAAAE,EAAA,EAAAF,CAAA,cAAYK,WAAW,KAAvB,WAA1F,yCACAL,OAAAE,EAAA,EAAAF,CAAA,8IACAA,OAAAE,EAAA,EAAAF,CAAA,WAAKA,OAAAE,EAAA,EAAAF,CAAA,OAAAA,OAAAG,OAAA,CAAME,WAAW,OAAU,CAC5BG,UAAa,wBADZ,+TAYLR,OAAAE,EAAA,EAAAF,CAAA,KAAQ,CACNO,GAAM,eADR,eAGAP,OAAAE,EAAA,EAAAF,CAAA,gEACAA,OAAAE,EAAA,EAAAF,CAAA,WAAKA,OAAAE,EAAA,EAAAF,CAAA,OAAAA,OAAAG,OAAA,CAAME,WAAW,OAAU,CAC5BG,UAAa,iBADZ,80CA0DTZ,EAAWa,gBAAiB","file":"static/js/manual-principles-naming.038266ba.js","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"#naming\"\n        }}>{`Naming`}</a><ul parentName=\"li\">\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#components\"\n            }}>{`Components`}</a><ul parentName=\"li\">\n              <li parentName=\"ul\"><a parentName=\"li\" {...{\n                  \"href\": \"#deep-dive\"\n                }}>{`Deep dive`}</a></li>\n            </ul></li>\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#class-names\"\n            }}>{`Class Names`}</a></li>\n        </ul></li>\n    </ul>\n    <h1 {...{\n      \"id\": \"naming\"\n    }}>{`Naming`}</h1>\n    <h2 {...{\n      \"id\": \"components\"\n    }}>{`Components`}</h2>\n    <p>{`Component naming should as swiftly as possible inform the following:`}</p>\n    <ol>\n      <li parentName=\"ol\">{`Type`}</li>\n      <li parentName=\"ol\">{`Area/region in the app/site`}</li>\n      <li parentName=\"ol\">{`Purpose`}</li>\n      <li parentName=\"ol\">{`Context`}</li>\n    </ol>\n    <p>{`To do it in such a way that is purposeful and scalable, consider following the naming by going `}<inlineCode parentName=\"p\">{`[Type][Region][Purpose][Context]`}</inlineCode>{`.`}</p>\n    <h3 {...{\n      \"id\": \"deep-dive\"\n    }}>{`Deep dive`}</h3>\n    <p>{`For example, let's take the unknown customer journey . In this flow, they go from home, cover the common basics between the customer journeys for identifying if they are a member, the store location, the order and the type before moving on to the specific journey feedback. When building out the individual pages, we can determine and define a type, region, purpose and context.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`// [Type][Region][Purpose][Context]\n1. PageHome // -> selects \"Leave Feedback\"\n2. PageBaseIsMember // -> Type: Page, region: Base, purpose: Is, context: Member, selects no\n3. PageBaseSetStore // -> Type: Page, region: Base, purpose: Set, context: Store, selects continue\n4. PageBaseSetOrderType // -> Type: Page, region: Base, purpose: Set, context: Order Type\n// etc\n`}</code></pre>\n    <p>{`Note that you can emit `}<inlineCode parentName=\"p\">{`purpose`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`context`}</inlineCode>{` from the name if it is not relevant.`}</p>\n    <p>{`Within each page, you can individual components. Try to use the class name convention to generate the names for child components:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`// ! This is just an example and not necessarily\n// reflective of actual use. Use your own discression.\n<PageBaseSetOrderType>\n  // Compoent for each order type\n  <ComponentOrderTypeRadio />\n  <ComponentOrderTypeRadio />\n  <ComponentOrderTypeRadio />\n  <ComponentOrderTypeRadio />\n</PageBaseSetOrderType>\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"class-names\"\n    }}>{`Class Names`}</h2>\n    <p>{`Try follow the convention below for naming classes.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-yml\"\n      }}>{`body:\n  header: # @classname header\n    # @children\n  # Top level for each section\n  section: # @classname section-name\n    # @children\n    container: # @classname container-name\n      # Base selection of rules\n      ? block\n      # @children\n      grid:\n        ? grid-item\n        # @children\n      table:\n        # @children\n        table-header:\n          # @children\n        table-data:\n          # @chidlren\n      list:\n        # react native only\n        list-item:\n          # @children\n      # ... more, maybe article etc\n      nav:\n        nav-item:\n          # @children\n  component: # @classname component-name\n    # Specific component based styling\n    # @children\n    # Base selection of rules\n    ? block\n    # @children\n    grid:\n      ? grid-item\n      # @children\n    table:\n      # @children\n      table-header:\n        # @children\n      table-data:\n        # @chidlren\n    list:\n      # react native only\n      list-item:\n        # @children\n    # ... more, maybe article etc\n    nav:\n      nav-item:\n        # @children\n  footer: # @classname footer - but maybe should be more specific\n    # @children\n`}</code></pre>\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  "],"sourceRoot":""}