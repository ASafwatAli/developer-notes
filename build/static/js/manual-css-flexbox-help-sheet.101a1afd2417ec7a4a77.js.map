{"version":3,"sources":["/Users/dennis.okeeffe/Project-Imposter/developer-notes/manual/CSS/Flexbox-Help-Sheet.md"],"names":["layoutProps","MDXLayout","MDXContent","_ref","components","props","Object","_Users_dennis_okeeffe_Project_Imposter_developer_notes_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","_mdx_js_react__WEBPACK_IMPORTED_MODULE_2__","assign","mdxType","id","parentName","href","className","isMDXComponent"],"mappings":"uXAWMA,EAAc,GAGdC,EAAY,UACH,SAASC,EAATC,GAGZ,IAFDC,EAECD,EAFDC,WACGC,EACFC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,gBACD,OAAOG,OAAAE,EAAA,EAAAF,CAACL,EAADK,OAAAG,OAAA,GAAeT,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYM,QAAQ,cAC5EJ,OAAAE,EAAA,EAAAF,CAAA,KAAQ,CACNK,GAAM,sBADR,sBAGAL,OAAAE,EAAA,EAAAF,CAAA,qBACAA,OAAAE,EAAA,EAAAF,CAAA,SAAGA,OAAAE,EAAA,EAAAF,CAAA,IAAAA,OAAAG,OAAA,CAAGG,WAAW,KAAQ,CACrBC,KAAQ,4DADT,eAGHP,OAAAE,EAAA,EAAAF,CAAA,KAAQ,CACNK,GAAM,eADR,eAGAL,OAAAE,EAAA,EAAAF,CAAA,KAAQ,CACNK,GAAM,yBADR,2BAGAL,OAAAE,EAAA,EAAAF,CAAA,sCACAA,OAAAE,EAAA,EAAAF,CAAA,WAAKA,OAAAE,EAAA,EAAAF,CAAA,OAAAA,OAAAG,OAAA,CAAMG,WAAW,OAAU,CAC5BE,UAAa,iBADZ,ofAYLR,OAAAE,EAAA,EAAAF,CAAA,KAAQ,CACNK,GAAM,oBADR,sBAGAL,OAAAE,EAAA,EAAAF,CAAA,qCACAA,OAAAE,EAAA,EAAAF,CAAA,WAAKA,OAAAE,EAAA,EAAAF,CAAA,OAAAA,OAAAG,OAAA,CAAMG,WAAW,OAAU,CAC5BE,UAAa,iBADZ,wUAWLR,OAAAE,EAAA,EAAAF,CAAA,KAAQ,CACNK,GAAM,WADR,WAGAL,OAAAE,EAAA,EAAAF,CAAA,WAAKA,OAAAE,EAAA,EAAAF,CAAA,OAAAA,OAAAG,OAAA,CAAMG,WAAW,OAAU,CAC5BE,UAAa,iBADZ,mvBA+BTZ,EAAWa,gBAAiB","file":"static/js/manual-css-flexbox-help-sheet.ed509805.js","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"flexbox-help-sheet\"\n    }}>{`Flexbox Help Sheet`}</h1>\n    <p>{`Sources:`}</p>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"https://css-tricks.com/snippets/css/a-guide-to-flexbox/\"\n      }}>{`CSS Tricks`}</a></p>\n    <h2 {...{\n      \"id\": \"terminology\"\n    }}>{`Terminology`}</h2>\n    <h4 {...{\n      \"id\": \"flex-container-parent\"\n    }}>{`Flex Container (parent)`}</h4>\n    <p>{`Properties of the parent:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-css\"\n      }}>{`.container {\n  display: flex; /* or inline-flex */\n  flex-direction: row | row-reverse | column | column-reverse;\n  flex-wrap: nowrap | wrap | wrap-reverse;\n  flex-flow: <‘flex-direction’> || <‘flex-wrap’>; //shorthand code\n  justify-content: flex-start | flex-end | center | space-between | space-around;\n  align-items: flex-start | flex-end | center | baseline | stretch;\n  align-content: flex-start | flex-end | center | space-between | space-around | stretch;\n}\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"flex-items-child\"\n    }}>{`Flex Items (child)`}</h4>\n    <p>{`Properties of the child:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-css\"\n      }}>{`.item {\n    order: <integer>;\n    flex-grow: <number>; /* default 0 */\n    flex-shrink: <number>; /* default 1 */\n    flex-basis: <length> | auto; /* default auto */\n    flex: none | [ <'flex-grow'> <'flex-shrink'>? || <'flex-basis'> ];\n    align-self: auto | flex-start | flex-end | center | baseline | stretch;\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"example\"\n    }}>{`Example`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-css\"\n      }}>{`.parent {\n  display: flex;\n  height: 300px; /* Or whatever */\n}\n\n.child {\n  width: 100px;  /* Or whatever */\n  height: 100px; /* Or whatever */\n  margin: auto;  /* Magic! */\n}\n\n.flex-container {\n  /* We first create a flex layout context */\n  display: flex;\n\n  /* Then we define the flow direction and if we allow the items to wrap\n   * Remember this is the same as:\n   * flex-direction: row;\n   * flex-wrap: wrap;\n   */\n  flex-flow: row wrap;\n\n  /* Then we define how is distributed the remaining space */\n  justify-content: space-around;\n}\n`}</code></pre>\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  "],"sourceRoot":""}