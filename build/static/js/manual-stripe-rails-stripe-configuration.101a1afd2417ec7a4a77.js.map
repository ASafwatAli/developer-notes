{"version":3,"sources":["/Users/dennis.okeeffe/Project-Imposter/developer-notes/manual/Stripe/Rails-Stripe-Configuration.md"],"names":["layoutProps","MDXLayout","MDXContent","_ref","components","props","Object","_Users_dennis_okeeffe_Project_Imposter_developer_notes_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","_mdx_js_react__WEBPACK_IMPORTED_MODULE_2__","assign","mdxType","id","parentName","href","className","isMDXComponent"],"mappings":"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","file":"static/js/manual-stripe-rails-stripe-configuration.9eb907d5.js","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"rails-stripe-configuration\"\n    }}>{`Rails Stripe Configuration`}</h1>\n    <h2 {...{\n      \"id\": \"references\"\n    }}>{`References`}</h2>\n    <ol>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"https://guides.rubyonrails.org/api_app.html\"\n        }}>{`Using Rails for API only`}</a></li>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"https://github.com/stripe/stripe-ruby\"\n        }}>{`Stripe Ruby Github`}</a></li>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"https://github.com/bkeepers/dotenv\"\n        }}>{`Dotenv Ruby Github`}</a></li>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"http://www.xyzpub.com/en/ruby-on-rails/3.2/scaffold_anlegen.html\"\n        }}>{`Scaffolding routes`}</a></li>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"https://thoughtbot.com/blog/back-to-basics-http-requests\"\n        }}>{`HTTP Requests in Rails Apps`}</a></li>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"https://guides.rubyonrails.org/v5.2/action_controller_overview.html\"\n        }}>{`Action Controlller Overview`}</a></li>\n    </ol>\n    <h2 {...{\n      \"id\": \"getting-started\"\n    }}>{`Getting Started`}</h2>\n    <p>{`Assuming you have Rails installed, run the following:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`rails new ruby-rails-stripe\ncd ruby-rails-stripe\n`}</code></pre>\n    <p>{`Add the following to the top of your `}<inlineCode parentName=\"p\">{`Gemfile`}</inlineCode>{` for us to read local dotenv values and bundle Stripe.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-ruby\"\n      }}>{`gem 'dotenv-rails', groups: [:development, :test]\ngem 'stripe'\n`}</code></pre>\n    <p>{`On the console, run `}<inlineCode parentName=\"p\">{`bundle`}</inlineCode>{`.`}</p>\n    <h2 {...{\n      \"id\": \"scaffolding-the-charges-route\"\n    }}>{`Scaffolding the Charges Route`}</h2>\n    <p>{`From the console run:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`rails generate controller Charges create\n`}</code></pre>\n    <p>{`This will scaffold our `}<inlineCode parentName=\"p\">{`app/controllers/charges_controller.rb`}</inlineCode>{` controller.`}</p>\n    <p>{`Inside that, let's update the code:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-ruby\"\n      }}>{`require 'stripe'\n\nclass ChargesController < ApplicationController\n  # POST /charge\n  # POST /charge.json\n  def create\n    # \\`source\\` is obtained with Stripe.js; see https://stripe.com/docs/payments/accept-a-payment-charges#web-create-token\n    charge = Stripe::Charge.create({\n      amount: params[:amount],\n      currency: 'aud',\n      source: 'tok_amex',\n      receipt_email: params[:receipt_email],\n      description: 'My First Test Charge (created for API docs)',\n    })\n    render json: charge\n  end\nend\n`}</code></pre>\n    <p>{`This code will make a charge to Stripe using the JSON body params `}<inlineCode parentName=\"p\">{`amount`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`receipt_email`}</inlineCode>{`.`}</p>\n    <p>{`If the charge is successful, it will return the charge information as JSON.`}</p>\n    <h2 {...{\n      \"id\": \"updating-configroutesrb\"\n    }}>{`Updating config/routes.rb`}</h2>\n    <p>{`Ensure routes has the following for POST:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-ruby\"\n      }}>{`Rails.application.routes.draw do\n  # ... the rest is omitted for brevity\n  post 'charges/create'\n  # For details on the DSL available within this file, see http://guides.rubyonrails.org/routing.html\nend\n`}</code></pre>\n    <p>{`This ensures that we can send a POST request to `}<inlineCode parentName=\"p\">{`http://localhost:PORT/charges/create`}</inlineCode>{` when we run the server.`}</p>\n    <h2 {...{\n      \"id\": \"running-the-code\"\n    }}>{`Running the code`}</h2>\n    <p>{`Run `}<inlineCode parentName=\"p\">{`rails server`}</inlineCode>{` to get our server up and running (defaulting to 3000), then call `}<inlineCode parentName=\"p\">{`http POST http://localhost:3000/charges/create amount:=1700 receipt_email=hello_rails@example.com`}</inlineCode>{` (using HTTPie) and we will get back our charge results sent as JSON. Hooray!`}</p>\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  "],"sourceRoot":""}