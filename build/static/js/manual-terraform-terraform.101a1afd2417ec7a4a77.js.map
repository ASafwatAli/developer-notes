{"version":3,"sources":["/Users/dennis.okeeffe/Project-Imposter/developer-notes/manual/Terraform/Terraform.md"],"names":["layoutProps","MDXLayout","MDXContent","_ref","components","props","Object","_Users_dennis_okeeffe_Project_Imposter_developer_notes_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","_mdx_js_react__WEBPACK_IMPORTED_MODULE_2__","assign","mdxType","id","parentName","className","href","align","isMDXComponent"],"mappings":"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","file":"static/js/manual-terraform-terraform.7dc635d4.js","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"terraform\"\n    }}>{`Terraform`}</h1>\n    <h2 {...{\n      \"id\": \"course-content\"\n    }}>{`Course Content`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`# Use this to get the content\n$ git clone https://github.com/wardviaene/terraform-course\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"useful-terraform-commands\"\n    }}>{`Useful Terraform Commands`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`$ terraform plan # plan\n$ terraform apply # shortcut for plan and apply - avoid in production\n$ terraform plan -out out.terraform # terraform and write the plan to out file\n$ terraform apply out.terraform # apply terraform plan using out file\n$ terraform show # show current state\n$ cat terraform.tfstate\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"what-is-terraform\"\n    }}>{`What is Terraform?`}</h2>\n    <ul>\n      <li parentName=\"ul\">{`Infrastructure as `}<strong parentName=\"li\">{`code`}</strong></li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`Automation`}</strong>{` of infrastructure`}</li>\n      <li parentName=\"ul\">{`Keep our infrastructure in a certain state (compliant)`}<ul parentName=\"li\">\n          <li parentName=\"ul\">{`e.g. 2 web instances with 2 volumes + 1 load balancer`}</li>\n        </ul></li>\n      <li parentName=\"ul\">{`Make infrastructure `}<strong parentName=\"li\">{`auditable`}</strong><ul parentName=\"li\">\n          <li parentName=\"ul\">{`You can keep your infrastructure change history in a `}<strong parentName=\"li\">{`version control`}</strong>{` system like GIT`}</li>\n        </ul></li>\n      <li parentName=\"ul\">{`Terraform can automate provisioning of the `}<strong parentName=\"li\">{`infrastructure itself`}</strong>{`. `}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"installation-of-terraform\"\n    }}>{`Installation of Terraform`}</h2>\n    <p>{`Head onto the Terraform website, download the .zip file and then move the binary after unzipping into your path to access it from the CLI.`}</p>\n    <h2 {...{\n      \"id\": \"hello-terraform\"\n    }}>{`Hello Terraform!`}</h2>\n    <p>{`Example hello using Terraform to spin up an EC2 micro instance.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-kotlin\"\n      }}>{`provider \"aws\" {\n  access_key = \"ACCESS_KEY_HERE\"\n  secret_key = \"SECRET_KEY_HERE\"\n  region     = \"ap-southeast-1\"\n}\n\nresource \"aws_instance\" \"example\" {\n  ami           = \"ami-0d729a60\"\n  instance_type = \"t2.micro\"\n}\n`}</code></pre>\n    <p>{`To initialise and spin up the instance, run the following:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`$ terraform init\n$ terraform plan -out file.terraform\n$ terraform apply file.terraform\n$ terraform destory # tear down the instance\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"variables\"\n    }}>{`Variables`}</h2>\n    <p>{`To create variables, we create two files `}<inlineCode parentName=\"p\">{`provider.tf`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`vars.tf`}</inlineCode>{` that we can commit and one git ignored file `}<inlineCode parentName=\"p\">{`terraform.tfvars`}</inlineCode>{` to store these private variables in.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-kotlin\"\n      }}>{`# provider.tf\nprovider \"aws\" {\n    access_key=\"\\${var.AWS_ACCESS_KEY}\"\n    secret_key=\"\\${var.AWS_SECRET_KEY}\"\n    region=\"\\${var.AWS_REGION}\"\n}\n\n# vars.tf\nvariable \"AWS_ACCESS_KEY\" {}\nvariable \"AWS_SECRET_KEY\" {}\nvariable \"AWS_REGION\" {\n    default = \"ap-southeast-2\"\n}\n\n# terraform.tfvars\nAWS_ACCESS_KEY=\"\"\nAWS_SECRET_KEY=\"\"\nAWS_REGION=\"\"\n`}</code></pre>\n    <p>{`For env vars: Terraform will read environment variables in the form of `}<inlineCode parentName=\"p\">{`TF_VAR_name`}</inlineCode>{` to find the value for a variable. For example, the `}<inlineCode parentName=\"p\">{`TF_VAR_access_key`}</inlineCode>{` variable can be set to set the `}<inlineCode parentName=\"p\">{`access_key`}</inlineCode>{` variable.`}</p>\n    <h3 {...{\n      \"id\": \"lookup-examples\"\n    }}>{`Lookup examples`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-kotlin\"\n      }}>{`# instance.tf\nresource \"aws_instance\" \"example\" {\n  ami           = \"\\${lookup(var.AMIS, var.AWS_REGION)}\"\n  instance_type = \"t2.micro\"\n}\n\n# provider.tf\nprovider \"aws\" {\n    access_key = \"\\${var.AWS_ACCESS_KEY}\"\n    secret_key = \"\\${var.AWS_SECRET_KEY}\"\n    region = \"\\${var.AWS_REGION}\"\n}\n\n# vars.tf\nvariable \"AWS_ACCESS_KEY\" {}\nvariable \"AWS_SECRET_KEY\" {}\nvariable \"AWS_REGION\" {\n  default = \"eu-west-1\"\n}\nvariable \"AMIS\" {\n  type = \"map\"\n  default = {\n    us-east-1 = \"ami-13be557e\"\n    us-west-2 = \"ami-06b94666\"\n    eu-west-1 = \"ami-0d729a60\"\n  }\n}\n\n# terraform.tfvars\nAWS_ACCESS_KEY=\"\"\nAWS_SECRET_KEY=\"\"\nAWS_REGION=\"\"\n`}</code></pre>\n    <p>{`For info on which ami results from where, checkout `}<a parentName=\"p\" {...{\n        \"href\": \"https://cloud-images.ubuntu.com/locator/ec2/\"\n      }}>{`https://cloud-images.ubuntu.com/locator/ec2/`}</a>{`.`}</p>\n    <h2 {...{\n      \"id\": \"software-provisioning\"\n    }}>{`Software Provisioning`}</h2>\n    <p>{`There are 2 ways to provision software:`}</p>\n    <ol>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Build your own custom AMI (ie Packer).`}</p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Another way is to be standardized AMIs and then install the software you need on it: `}</p>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">\n            <p parentName=\"li\">{`Use file uploads`}</p>\n          </li>\n          <li parentName=\"ul\">\n            <p parentName=\"li\">{`Use remote exec`}</p>\n          </li>\n          <li parentName=\"ul\">\n            <p parentName=\"li\">{`Use automation tools like chef, puppet, ansible`}</p>\n          </li>\n        </ul>\n      </li>\n    </ol>\n    <h3 {...{\n      \"id\": \"file-uploads\"\n    }}>{`File Uploads`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-kotlin\"\n      }}>{`# instance.tf\nresource \"aws_instance\" \"example\" {\n    ami           = \"\\${lookup(var.AMIS, var.AWS_REGION)}\"\n    instance_type = \"t2.micro\"\n    \n    provisioner \"file\" {\n        source = \"app.conf\"\n        destination = \"/etc/myapp.conf\"\n    }\n}\n`}</code></pre>\n    <p>{`The provisioner will have to use SSH etc.`}</p>\n    <p>{`Another example with the connection:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-kotlin\"\n      }}>{`# instance.tf\nresource \"aws_instance\" \"example\" {\n    ami           = \"\\${lookup(var.AMIS, var.AWS_REGION)}\"\n    instance_type = \"t2.micro\"\n    # IF SSH\n    key_name = \"\\${aws_key_pem.mykey.key_name}\"\n    # ENDIF\n    \n    provisioner \"file\" {\n        source = \"app.conf\"\n        destination = \"/etc/myapp.conf\"\n        # ! FOR PASSWORD\n        connection {\n            user = \"\\${var.instance_username}\"\n            password = \"\\${var.instance_password}\"\n        }\n        \n        connection {\n            user = \"\\${var.instance_username}\"\n            private_key = \"\\${file(\\${var.path_to_private_key})}\"\n        }\n    }\n    \n    # IF YOU UPLOAD A .sh FILE AND WANT TO RUN IT\n    provisioner \"remote-exec\" {\n        inline = [\n            \"chmod +x /path/to/script.sh\",\n            \"/path/to/script.sh arguments\"\n        ]\n    }\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"attributes\"\n    }}>{`Attributes`}</h2>\n    <h2 {...{\n      \"id\": \"state\"\n    }}>{`State`}</h2>\n    <p>{`Terraform keeps state in `}<inlineCode parentName=\"p\">{`terraform.tfstate`}</inlineCode>{`.`}</p>\n    <p>{`To configure, you add a file `}<inlineCode parentName=\"p\">{`backend.tf`}</inlineCode>{`:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-kotlin\"\n      }}>{`terraform {\n    # IF Consul\n    backend \"consul\" {\n        address = \"demo.consul.io\" # host name of consul cluster\n        path = \"terraform/myproject\"\n    }\n    \n    # ELSEIF S3\n    backend \"s3\" {\n        bucket = \"bucket\"\n        key = \"terraform/myproject\"\n        region = \"ap-southeast-2\"\n    }\n    \n    #ENDIF\n}\n`}</code></pre>\n    <p><inlineCode parentName=\"p\">{`$ terraform init`}</inlineCode>{` will do what you require for it all to work.`}</p>\n    <h2 {...{\n      \"id\": \"data-sources\"\n    }}>{`Data Sources`}</h2>\n    <p>{`Provide you with dynamic information.`}</p>\n    <ul>\n      <li parentName=\"ul\">{`A lot of data is available by AWS in a structured format using their API`}</li>\n      <li parentName=\"ul\">{`Terraform also exposes this info using data sources.`}</li>\n    </ul>\n    <p>{`Examples include the list of AMIs, list of AZs etc.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-kotlin\"\n      }}>{`# provider.tf\nprovider \"aws\" { \n    region = \"\\${var.AWS_REGION}\"\n}\n\n# securitygroup.tf\ndata \"aws_ip_ranges\" \"european_ec2\" {\n  regions = [ \"eu-west-1\", \"eu-central-1\" ]\n  services = [ \"ec2\" ]\n}\n\nresource \"aws_security_group\" \"from_europe\" {\n name = \"from_europe\"\n\n  ingress {\n    from_port = \"443\"\n    to_port = \"443\"\n    protocol = \"tcp\"\n    cidr_blocks = [ \"\\${data.aws_ip_ranges.european_ec2.cidr_blocks}\" ]\n  }\n  tags {\n    CreateDate = \"\\${data.aws_ip_ranges.european_ec2.create_date}\"\n    SyncToken = \"\\${data.aws_ip_ranges.european_ec2.sync_token}\"\n  }\n\n}\n\n# vars.tf\nvariable \"AWS_REGION\" {\n  default = \"eu-west-1\"\n}\nvariable \"AMIS\" {\n  type = \"map\"\n  default = {\n    us-east-1 = \"ami-13be557e\"\n    us-west-2 = \"ami-06b94666\"\n    eu-west-1 = \"ami-844e0bf7\"\n  }\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"templates\"\n    }}>{`Templates`}</h2>\n    <p>{`Can help create `}<strong parentName=\"p\">{`customized configuration files`}</strong>{`.`}</p>\n    <h2 {...{\n      \"id\": \"modules\"\n    }}>{`Modules`}</h2>\n    <p>{`Help to make your terraform more organised. `}</p>\n    <p>{`You can also use third party modules (like modules from Github).`}</p>\n    <p>{`It also helps to `}<strong parentName=\"p\">{`reuse`}</strong>{` parts of your code (eg set up network in AWS - VPC).`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-kotlin\"\n      }}>{`# Install form git\nmodule \"module-example\" {\n    source = \"github.com/wardviaene/terraform-module-example\"\n}\n\n# Use module from local folder\nmodule \"module-example\" {\n    source = \"./module-example\"\n}\n\n# A module passing arguments \nmodule \"module-example\" {\n    source = \"./module-example\"\n    region = \"us-west-1\"\n    ip-range = \"10.0.0.0/8\"\n    cluster-size = \"3\"\n}\n`}</code></pre>\n    <p>{`Inside of the module folder, you can also have Terraform files:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-kotlin\"\n      }}>{`# module-example/vars.tf\nvariable \"region\" {}\nvariable \"ip-range\" {}\nvariable \"cluster-size\" {}\n\n# module-example/cluster.tf\nresource \"aws_instance\" \"instance-1\" { ... }\nresource \"aws_instance\" \"instance-2\" { ... }\nresource \"aws_instance\" \"instance-3\" { ... }\n\n# module-example/output.tf\noutput \"aws-cluster\" {\n    value = \"\\${aws_instance.instance-1.publicip}\"\n}\n`}</code></pre>\n    <p>{`You use the output from the module in the main part of your code!`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-kotlin\"\n      }}>{`output \"some-output\" {\n    value = \"\\${module.module-example.aws-cluster}\"\n}\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"downloading-a-module\"\n    }}>{`Downloading a module`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-kotlin\"\n      }}>{`terraform get # this will fetch the modules and store it in .terraform/modules/\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"terraform-command-overview\"\n    }}>{`Terraform Command Overview`}</h2>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Command`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`terraform apply`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Applies state.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`destroy`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Destroys all Terraform managed state.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`fmt`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Rewrite terraform config files to canonical format and style.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`get`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Download and update modules.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`graph`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Create a visual representation of a configuration or execution plan.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`import <options> <ADDRESS> <ID>`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Find infrastructure resource identified with ID and import the state into terraform.tfstate with resource id ADDRESS.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`output <options> <NAME>`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Output any of your resources.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`plan`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Show changes made to infrastructure.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`refresh`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Refresh the remote state. Can identify differences between state file and remote state.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`remote`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Configure remote state storage.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`show`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Show human readable output from a state or a plan.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`state`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Used for advanced state management eg rename resource`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`taint`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Destroy and recreate resource.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`validate`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Validate terraform syntax.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`untaint`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Undo a taint.`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <h2 {...{\n      \"id\": \"\"\n    }}></h2>\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  "],"sourceRoot":""}