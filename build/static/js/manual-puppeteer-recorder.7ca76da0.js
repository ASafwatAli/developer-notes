(window.webpackJsonp=window.webpackJsonp||[]).push([[375],{"./manual/Puppeteer/Recorder.md":function(e,t,n){"use strict";n.r(t),n.d(t,"default",function(){return a});var r=n("./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js"),o=(n("./node_modules/react/index.js"),n("./node_modules/@mdx-js/react/dist/index.es.js")),s={},i="wrapper";function a(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(o.b)(i,Object.assign({},s,n,{components:t,mdxType:"MDXLayout"}),Object(o.b)("h1",{id:"puppeteer-recorder"},"Puppeteer Recorder"),Object(o.b)("p",null,"Use this to convert a db.json events file into someting usable with puppeteer."),Object(o.b)("h2",{id:"install"},"Install"),Object(o.b)("p",null,"Currently this is a lib file that needs to be installed using kratos."),Object(o.b)("h2",{id:"usage"},"Usage"),Object(o.b)("p",null,"Use the ",Object(o.b)("inlineCode",{parentName:"p"},"Emitter")," common JS class to handle this. Ensure you sub to the event ",Object(o.b)("inlineCode",{parentName:"p"},"action"),"."),Object(o.b)("pre",null,Object(o.b)("code",Object.assign({parentName:"pre"},{className:"language-javascript"}),"// Example of emission with type inferred\nhandlePrimaryClick = (e) => {\n    Emitter.emit('action', {\n        event: 'ComponentALLandingOne.handlePrimaryClick',\n        e: e.target\n    });\n\n    const { router } = this.props;\n    router.push('/testTwo');\n};\n\n// Example of emission with type manually specified\nhandleLink = (e) => {\n    e.preventDefault();\n    Emitter.emit('action', {\n        event: 'ComponentALLandingOne.handleLink',\n        type: 'link',\n        e: e.target\n    });\n\n    const { router } = this.props;\n    router.push('/testTwo');\n};\n")),Object(o.b)("h2",{id:"generating-the-tests"},"Generating the tests"),Object(o.b)("p",null,"The recorder relies on JSON DB and using the ",Object(o.b)("inlineCode",{parentName:"p"},"events")," endpoint."),Object(o.b)("pre",null,Object(o.b)("code",Object.assign({parentName:"pre"},{}),"# usage\nnode path/to/recorder\n")),Object(o.b)("p",null,"The console log output for this guy can then be transferred to a test file to use with Puppeteer."))}a&&a===Object(a)&&Object.isExtensible(a)&&Object.defineProperty(a,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"MDXContent",filename:"manual/Puppeteer/Recorder.md"}}),a.isMDXComponent=!0}}]);
//# sourceMappingURL=manual-puppeteer-recorder.101a1afd2417ec7a4a77.js.map