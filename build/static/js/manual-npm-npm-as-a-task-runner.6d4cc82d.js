(window.webpackJsonp=window.webpackJsonp||[]).push([[329],{"./manual/npm/NPM-as-a-Task-Runner.md":function(e,n,t){"use strict";t.r(n),t.d(n,"default",function(){return c});var l=t("./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js"),b=(t("./node_modules/react/index.js"),t("./node_modules/@mdx-js/react/dist/index.es.js")),s={},a="wrapper";function c(e){var n=e.components,t=Object(l.a)(e,["components"]);return Object(b.b)(a,Object.assign({},s,t,{components:n,mdxType:"MDXLayout"}),Object(b.b)("p",null,"NPM as a Task Runner"),Object(b.b)("p",null,"What is a task? Something we need to do."),Object(b.b)("p",null,"Common Tasks"),Object(b.b)("ul",null,Object(b.b)("li",{parentName:"ul"},"run test suite"),Object(b.b)("li",{parentName:"ul"},"compilng Sass/TypeScript/CoffeeScript"),Object(b.b)("li",{parentName:"ul"},"starting a web server"),Object(b.b)("li",{parentName:"ul"},"starting a worker")),Object(b.b)("p",null,"npm tasks are called scripts -> add to 'scripts' in package.json"),Object(b.b)("p",null,'"',Object(b.b)("inlineCode",{parentName:"p"},"<name>"),'": "',Object(b.b)("inlineCode",{parentName:"p"},"<code>"),'"'),Object(b.b)("p",null,"then you can simply go..."),Object(b.b)("p",null,"npm run ",Object(b.b)("inlineCode",{parentName:"p"},"<name>"),"!"),Object(b.b)("p",null,"Types of tasks:"),Object(b.b)("ol",null,Object(b.b)("li",{parentName:"ol"},"Built-in")),Object(b.b)("ul",null,Object(b.b)("li",{parentName:"ul"},"eg tests etc"),Object(b.b)("li",{parentName:"ul"},"can be run as npm test instead of npm run test")),Object(b.b)("ol",{start:2},Object(b.b)("li",{parentName:"ol"},"Arbitrary")),Object(b.b)("ul",null,Object(b.b)("li",{parentName:"ul"},'requires a "run"'),Object(b.b)("li",{parentName:"ul"},"eg npm run compile")),Object(b.b)("p",null,"For getting a project ready to be deployed..."),Object(b.b)("p",null,"in the tests folder... test_dice.js //used in this example"),Object(b.b)("p",null,"mocha is used as a mocha and uglify-js to compile all js files into one."),Object(b.b)("p",null,"Often encouraged to save global test scripts."),Object(b.b)("p",null,"node_modules/.bin/mocha //this is an executable"),Object(b.b)("p",null,"Can run from npm without writing this."),Object(b.b)("p",null,'Change "test": "mocha" in the scripts.'),Object(b.b)("p",null,"now we can go..."),Object(b.b)("p",null,"npm run test //don't even need run since it is built-in"),Object(b.b)("p",null,"//////////////////////////////////////////"),Object(b.b)("p",null,"Creating our own arbitrary scripts"),Object(b.b)("p",null,"We can use the uglify to create an app.js"),Object(b.b)("p",null,"Large, annoying code...\nnode_modules/.bin/uglifyjs src/models/","*"," src/frontend.js -m -c -o build/app.js"),Object(b.b)("p",null,"//m flag reduces some names\n//c combines into single file"),Object(b.b)("p",null,"INSTEAD, CREATE OUR OWN TASK"),Object(b.b)("p",null,'"uglify": "node_modules/.bin/uglifyjs src/models/',"*",' src/frontend.js -m -c -o build/app.js"'),Object(b.b)("p",null,"Now, we can just type:\nnpm run uglify"),Object(b.b)("p",null,"And TADAAAAA!"),Object(b.b)("p",null,"For our css etc."),Object(b.b)("p",null,'"copy-files": "cp src/',Object(b.b)("em",{parentName:"p"},".html build/ & cp src/"),'.css build/"'),Object(b.b)("p",null,"npm run copy-files"),Object(b.b)("p",null,"Now for a single task!"),Object(b.b)("p",null,'"build": "npm run copy-files && npm run uglify" //&& run sequentially, & run in parallel'),Object(b.b)("p",null,"npm help scripts //shows other default scripts"))}c&&c===Object(c)&&Object.isExtensible(c)&&Object.defineProperty(c,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"MDXContent",filename:"manual/npm/NPM-as-a-Task-Runner.md"}}),c.isMDXComponent=!0}}]);
//# sourceMappingURL=manual-npm-npm-as-a-task-runner.101a1afd2417ec7a4a77.js.map