{"version":3,"sources":["/Users/dennis.okeeffe/Project-Imposter/developer-notes/manual/Design-Patterns/Chain-Of-Responsibility.md"],"names":["layoutProps","MDXLayout","MDXContent","_ref","components","props","Object","_Users_dennis_okeeffe_Project_Imposter_developer_notes_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","_mdx_js_react__WEBPACK_IMPORTED_MODULE_2__","assign","mdxType","id","parentName","className","href","isMDXComponent"],"mappings":"yYAWMA,EAAc,GAGdC,EAAY,UACH,SAASC,EAATC,GAGZ,IAFDC,EAECD,EAFDC,WACGC,EACFC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,gBACD,OAAOG,OAAAE,EAAA,EAAAF,CAACL,EAADK,OAAAG,OAAA,GAAeT,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYM,QAAQ,cAC5EJ,OAAAE,EAAA,EAAAF,CAAA,KAAQ,CACNK,GAAM,2BADR,2BAGAL,OAAAE,EAAA,EAAAF,CAAA,+CAEAA,OAAAE,EAAA,EAAAF,CAAA,KAAQ,CACNK,GAAM,SADR,SAGAL,OAAAE,EAAA,EAAAF,CAAA,kOACAA,OAAAE,EAAA,EAAAF,CAAA,6BACAA,OAAAE,EAAA,EAAAF,CAAA,UACEA,OAAAE,EAAA,EAAAF,CAAA,MAAIM,WAAW,MAAf,4CACAN,OAAAE,EAAA,EAAAF,CAAA,MAAIM,WAAW,MAAf,+EACAN,OAAAE,EAAA,EAAAF,CAAA,MAAIM,WAAW,MAAf,8CACAN,OAAAE,EAAA,EAAAF,CAAA,MAAIM,WAAW,MAAf,iGAEFN,OAAAE,EAAA,EAAAF,CAAA,KAAQ,CACNK,GAAM,cADR,cAGAL,OAAAE,EAAA,EAAAF,CAAA,UACEA,OAAAE,EAAA,EAAAF,CAAA,MAAIM,WAAW,MAAf,sHACAN,OAAAE,EAAA,EAAAF,CAAA,MAAIM,WAAW,MAAf,kGACAN,OAAAE,EAAA,EAAAF,CAAA,MAAIM,WAAW,MAAf,wEAEFN,OAAAE,EAAA,EAAAF,CAAA,KAAQ,CACNK,GAAM,YADR,aAGAL,OAAAE,EAAA,EAAAF,CAAA,kBACAA,OAAAE,EAAA,EAAAF,CAAA,UACEA,OAAAE,EAAA,EAAAF,CAAA,MAAIM,WAAW,MAAf,2BACAN,OAAAE,EAAA,EAAAF,CAAA,MAAIM,WAAW,MAAf,8EACAN,OAAAE,EAAA,EAAAF,CAAA,MAAIM,WAAW,MAAf,+CAEFN,OAAAE,EAAA,EAAAF,CAAA,kBACAA,OAAAE,EAAA,EAAAF,CAAA,UACEA,OAAAE,EAAA,EAAAF,CAAA,MAAIM,WAAW,MAAf,sCACAN,OAAAE,EAAA,EAAAF,CAAA,MAAIM,WAAW,MAAf,qGACAN,OAAAE,EAAA,EAAAF,CAAA,MAAIM,WAAW,MAAf,2DAEFN,OAAAE,EAAA,EAAAF,CAAA,KAAQ,CACNK,GAAM,WADR,WAGAL,OAAAE,EAAA,EAAAF,CAAA,WAAKA,OAAAE,EAAA,EAAAF,CAAA,OAAAA,OAAAG,OAAA,CAAMG,WAAW,OAAU,CAC5BC,UAAa,wBADZ,g1CA6DLP,OAAAE,EAAA,EAAAF,CAAA,KAAQ,CACNK,GAAM,aADR,aAGAL,OAAAE,EAAA,EAAAF,CAAA,UACEA,OAAAE,EAAA,EAAAF,CAAA,MAAIM,WAAW,MAAKN,OAAAE,EAAA,EAAAF,CAAA,IAAAA,OAAAG,OAAA,CAAGG,WAAW,MAAS,CACvCE,KAAQ,uEADQ,+NAO1BZ,EAAWa,gBAAiB","file":"static/js/manual-design-patterns-chain-of-responsibility.197825de.js","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"chain-of-responsibility\"\n    }}>{`Chain Of Responsibility`}</h1>\n    <p>{`Purpose: Behavioural\nType: Object`}</p>\n    <h2 {...{\n      \"id\": \"about\"\n    }}>{`About`}</h2>\n    <p>{`Used to achieve loose coupling where a request from a client is passed to a chain of objects to process them. The object in the chain will decide whether the request moves onto the next object in the chain or not.`}</p>\n    <p>{`Applicable when:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Decoupling request's sender and reciever`}</li>\n      <li parentName=\"ul\">{`Multiple objects, determined at runtime, are candidates to handle a request`}</li>\n      <li parentName=\"ul\">{`Don't want to specific handlers explicitly`}</li>\n      <li parentName=\"ul\">{`Want to issue a request to one of several objects without explicitly specifying the reciever`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"components\"\n    }}>{`Components`}</h2>\n    <ul>\n      <li parentName=\"ul\">{`Handler: An interface which will primarily recieve the request and dispatch that request to the chain of handlers.`}</li>\n      <li parentName=\"ul\">{`Concrete handlers: Handlers that actually handle the request chained in some sequential order.`}</li>\n      <li parentName=\"ul\">{`Client: Originator of request and will access handler to handle it.`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"proscons\"\n    }}>{`Pros/Cons`}</h2>\n    <p>{`Pros:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Reduce coupling degree.`}</li>\n      <li parentName=\"ul\">{`Flexible, simplified objct that does not need to know the chain structure.`}</li>\n      <li parentName=\"ul\">{`Convenient to increase request processing.`}</li>\n    </ul>\n    <p>{`Cons:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`No guarantee for request recieved.`}</li>\n      <li parentName=\"ul\">{`Performance of system affected, but also code debugging may not be so easy and could by cyclical.`}</li>\n      <li parentName=\"ul\">{`Observability of operation characteristcs not so easy.`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"example\"\n    }}>{`Example`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-typescript\"\n      }}>{`class Handler {\n  private _successor: Handler;\n\n  public set successor(successor: Handler) {\n    this._successor = successor;\n  }\n\n  public get successor() {\n    return this._successor;\n  }\n\n  public handleRequest(msg: Number): void {}\n}\n\nclass ConcreteHandlerA extends Handler {\n  handleRequest(req: Number): void {\n    if (req > 0) {\n      console.log(\\`Handler A process \\${req}\\`);\n    } else {\n      this.successor.handleRequest(req);\n    }\n  }\n}\n\nclass ConcreteHandlerB extends Handler {\n  handleRequest(req: Number): void {\n    if (req < 0) {\n      console.log(\\`Handler B process \\${req}\\`);\n    } else {\n      this.successor.handleRequest(req);\n    }\n  }\n}\n\nclass ConcreteHandlerC extends Handler {\n  handleRequest(req: Number): void {\n    if (req === 0) {\n      console.log(\\`Handler C process \\${req}\\`);\n    } else {\n      this.successor.handleRequest(req);\n    }\n  }\n}\n\n(function main() {\n  const reqA = new ConcreteHandlerA();\n  const reqB = new ConcreteHandlerB();\n  const reqC = new ConcreteHandlerC();\n\n  // set the chain or responsibility\n  reqA.successor = reqB;\n  reqB.successor = reqC;\n\n  // handle the requests\n  reqA.handleRequest(0); // logs \"Handler C process 0\"\n  reqA.handleRequest(1); // logs \"Handler A process 1\"\n  reqA.handleRequest(-1); // logs \"Handler B process -1\"\n})();\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"resources\"\n    }}>{`Resources`}</h2>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://www.geeksforgeeks.org/chain-responsibility-design-pattern/\"\n        }}>{`C# Implementation`}</a></li>\n    </ul>\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  "],"sourceRoot":""}