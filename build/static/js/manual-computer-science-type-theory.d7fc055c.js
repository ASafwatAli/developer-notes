(window.webpackJsonp=window.webpackJsonp||[]).push([[77],{"./manual/Computer-Science/Type-Theory.md":function(e,t,a){"use strict";a.r(t),a.d(t,"default",function(){return i});var o=a("./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js"),n=(a("./node_modules/react/index.js"),a("./node_modules/@mdx-js/react/dist/index.es.js")),s={},r="wrapper";function i(e){var t=e.components,a=Object(o.a)(e,["components"]);return Object(n.b)(r,Object.assign({},s,a,{components:t,mdxType:"MDXLayout"}),Object(n.b)("h1",{id:"type-theory"},"Type Theory"),Object(n.b)("p",null,"In mathematics, logic, and computer science, a type theory is any of a class of formal systems, some of which can serve as alternatives to set theory as a foundation for all mathematics. In type theory, every ",Object(n.b)("strong",{parentName:"p"},'"term"')," has a ",Object(n.b)("strong",{parentName:"p"},'"type"')," and operations are restricted to terms of a certain type."),Object(n.b)("p",null,"Type theory is closely related to (and in some cases overlaps with) type systems, which are a programming language feature used to reduce bugs. Type theory was created to avoid paradoxes in a variety of formal logics and rewrite systems."),Object(n.b)("h2",{id:"links"},"Links"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("a",Object.assign({parentName:"li"},{href:"https://en.wikipedia.org/wiki/Type_theory"}),"https://en.wikipedia.org/wiki/Type_theory"))))}i&&i===Object(i)&&Object.isExtensible(i)&&Object.defineProperty(i,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"MDXContent",filename:"manual/Computer-Science/Type-Theory.md"}}),i.isMDXComponent=!0}}]);
//# sourceMappingURL=manual-computer-science-type-theory.101a1afd2417ec7a4a77.js.map