(window.webpackJsonp=window.webpackJsonp||[]).push([[354],{"./manual/Principles/Styling.md":function(e,n,t){"use strict";t.r(n),t.d(n,"default",function(){return r});var i=t("./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js"),a=(t("./node_modules/react/index.js"),t("./node_modules/@mdx-js/react/dist/index.es.js")),c={},l="wrapper";function r(e){var n=e.components,r=Object(i.a)(e,["components"]);return Object(a.b)(l,Object.assign({},c,r,{components:n,mdxType:"MDXLayout"}),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",Object.assign({parentName:"li"},{href:"#styling"}),"Styling"),Object(a.b)("ul",{parentName:"li"},Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",Object.assign({parentName:"li"},{href:"#challenges"}),"Challenges"),Object(a.b)("ul",{parentName:"li"},Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",Object.assign({parentName:"li"},{href:"#current-challenges"}),"Current challenges")),Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",Object.assign({parentName:"li"},{href:"#naming-challenges"}),"Naming challenges")))),Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",Object.assign({parentName:"li"},{href:"#naming-conventions"}),"Naming conventions"),Object(a.b)("ul",{parentName:"li"},Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",Object.assign({parentName:"li"},{href:"#links"}),"Links")))),Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",Object.assign({parentName:"li"},{href:"#types"}),"Types")),Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",Object.assign({parentName:"li"},{href:"#ordering"}),"Ordering")),Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",Object.assign({parentName:"li"},{href:"#example-layout"}),"Example layout")),Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",Object.assign({parentName:"li"},{href:"#sass-principles"}),"Sass Principles")),Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",Object.assign({parentName:"li"},{href:"#utilities"}),"Utilities"),Object(a.b)("ul",{parentName:"li"},Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",Object.assign({parentName:"li"},{href:"#text-f"}),"Text (f-)")),Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",Object.assign({parentName:"li"},{href:"#animate-a"}),"animate (a-)")),Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",Object.assign({parentName:"li"},{href:"#color-c--and-background-colour-bg"}),"color (c-) and background-colour (bg-)")),Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",Object.assign({parentName:"li"},{href:"#padding-p---margin-bottom-mb---only-used-for-blocks"}),"padding (p-) & margin-bottom (mb-) \u2014 only used for blocks")))),Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",Object.assign({parentName:"li"},{href:"#components"}),"Components"),Object(a.b)("ul",{parentName:"li"},Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",Object.assign({parentName:"li"},{href:"#button"}),"Button")),Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",Object.assign({parentName:"li"},{href:"#grid"}),"Grid")),Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",Object.assign({parentName:"li"},{href:"#container"}),"Container")),Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",Object.assign({parentName:"li"},{href:"#block"}),"Block")),Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",Object.assign({parentName:"li"},{href:"#alert"}),"Alert")),Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",Object.assign({parentName:"li"},{href:"#breadcrumb"}),"Breadcrumb")))),Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",Object.assign({parentName:"li"},{href:"#structure"}),"Structure"),Object(a.b)("ul",{parentName:"li"},Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",Object.assign({parentName:"li"},{href:"#1-keywords-should-wrap-everything-and-not-be-duplicated"}),"1. Keywords should wrap everything and not be duplicated")),Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",Object.assign({parentName:"li"},{href:"#2-keep-consistent-minimal-states"}),"2. Keep consistent, minimal states")),Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",Object.assign({parentName:"li"},{href:"#3-keep-component-colouring-modifiable-by-using-colour-classes"}),"3. Keep component colouring modifiable by using colour classes")),Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",Object.assign({parentName:"li"},{href:"#4-prefix-attribute-specific-utility-classes"}),"4. Prefix attribute-specific utility classes")))),Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",Object.assign({parentName:"li"},{href:"#base-mixins"}),"Base Mixins"),Object(a.b)("ul",{parentName:"li"},Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",Object.assign({parentName:"li"},{href:"#inline-block-list"}),"inline-block-list")),Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",Object.assign({parentName:"li"},{href:"#omega-reset"}),"omega-reset")),Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",Object.assign({parentName:"li"},{href:"#font-size"}),"font-size")),Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",Object.assign({parentName:"li"},{href:"#inline-block"}),"inline-block")),Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",Object.assign({parentName:"li"},{href:"#reset-box-model"}),"reset-box-model")),Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",Object.assign({parentName:"li"},{href:"#absolute-fill"}),"absolute-fill")),Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",Object.assign({parentName:"li"},{href:"#headings"}),"headings")),Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",Object.assign({parentName:"li"},{href:"#background-image"}),"background-image")),Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",Object.assign({parentName:"li"},{href:"#reset-ul"}),"reset-ul")),Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",Object.assign({parentName:"li"},{href:"#hide-text"}),"hide-text")),Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",Object.assign({parentName:"li"},{href:"#neat-parse-media"}),"_","neat-parse-media")),Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",Object.assign({parentName:"li"},{href:"#background-color"}),"background-color")),Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",Object.assign({parentName:"li"},{href:"#color"}),"color")))),Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",Object.assign({parentName:"li"},{href:"#file-structure-guidelines"}),"File Structure Guidelines"))))),Object(a.b)("h1",{id:"styling"},"Styling"),Object(a.b)("h2",{id:"challenges"},"Challenges"),Object(a.b)("h3",{id:"current-challenges"},"Current challenges"),Object(a.b)("ol",null,Object(a.b)("li",{parentName:"ol"},"Standardising style configuration:",Object(a.b)("ul",{parentName:"li"},Object(a.b)("li",{parentName:"ul"},"themes"),Object(a.b)("li",{parentName:"ul"},"colours"),Object(a.b)("li",{parentName:"ul"},"animation"),Object(a.b)("li",{parentName:"ul"},"elevation"),Object(a.b)("li",{parentName:"ul"},"typography"),Object(a.b)("li",{parentName:"ul"},"grid"),Object(a.b)("li",{parentName:"ul"},"breakpoints"),Object(a.b)("li",{parentName:"ul"},"iconography"),Object(a.b)("li",{parentName:"ul"},"naming conventions"),Object(a.b)("li",{parentName:"ul"},"style order"),Object(a.b)("li",{parentName:"ul"},"rules for classing"),Object(a.b)("li",{parentName:"ul"},"relation to design"))),Object(a.b)("li",{parentName:"ol"},"Standardising file system layout:",Object(a.b)("ul",{parentName:"li"},Object(a.b)("li",{parentName:"ul"},"themes"),Object(a.b)("li",{parentName:"ul"},"flexibility"),Object(a.b)("li",{parentName:"ul"},"subdirectory structure (images, fonts, utils)"))),Object(a.b)("li",{parentName:"ol"},"Code quality",Object(a.b)("ul",{parentName:"li"},Object(a.b)("li",{parentName:"ul"},"documentaiton"),Object(a.b)("li",{parentName:"ul"},"testing"),Object(a.b)("li",{parentName:"ul"},"reusability"),Object(a.b)("li",{parentName:"ul"},"callback ability when updating repos"),Object(a.b)("li",{parentName:"ul"},"accessibility"),Object(a.b)("li",{parentName:"ul"},"dependency abuse"))),Object(a.b)("li",{parentName:"ol"},"Resources",Object(a.b)("ul",{parentName:"li"},Object(a.b)("li",{parentName:"ul"},"references and direction"),Object(a.b)("li",{parentName:"ul"},"onboarding")))),Object(a.b)("h3",{id:"naming-challenges"},"Naming challenges"),Object(a.b)("p",null,"A list of challeneges when thinking of naming conventions:"),Object(a.b)("ol",null,Object(a.b)("li",{parentName:"ol"},"How can styling conventions apply between frameworks?"),Object(a.b)("li",{parentName:"ol"},"What conventions do we need to sacrifice between different frameworks?"),Object(a.b)("li",{parentName:"ol"},"How is this consumable for both the dev and designer ecosystem?"),Object(a.b)("li",{parentName:"ol"},"What file structures do we incorporate between partials to make them easily reusable."),Object(a.b)("li",{parentName:"ol"},"How can we define class names that work for all the different types of code we write?"),Object(a.b)("li",{parentName:"ol"},"How can we efficiently document and test our code?"),Object(a.b)("li",{parentName:"ol"},"How can we maintain consistency in the way we write our styling?"),Object(a.b)("li",{parentName:"ol"},"How can we enforce accessible, high standards for our HTML?"),Object(a.b)("li",{parentName:"ol"},"How can we decouple and standardise things such as grids, animation speeds, iconography etc.?")),Object(a.b)("h2",{id:"naming-conventions"},"Naming conventions"),Object(a.b)("h3",{id:"links"},"Links"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",Object.assign({parentName:"li"},{href:"http://thesassway.com/advanced/modular-css-naming-conventions"}),"Modular Sass")),Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",Object.assign({parentName:"li"},{href:"http://rscss.io/"}),"RSCSS")),Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",Object.assign({parentName:"li"},{href:"http://a11y-style-guide.com/style-guide/"}),"A11y Style Guide"))),Object(a.b)("h2",{id:"types"},"Types"),Object(a.b)("p",null,"Predetermined types by level:"),Object(a.b)("pre",null,Object(a.b)("code",Object.assign({parentName:"pre"},{className:"language-yml"}),"body:\n  header: # @classname header\n    # @children\n  # Top level for each section\n  section: # @classname section-name\n    # @children\n    container: # @classname container-name\n      # Base selection of rules\n      ? block\n      # @children\n      grid:\n        ? grid-item\n        # @children\n      table:\n        # @children\n        table-header:\n          # @children\n        table-data:\n          # @chidlren\n      list:\n        # react native only\n        list-item:\n          # @children\n      # ... more, maybe article etc\n      nav:\n        nav-item:\n          # @children\n  component: # @classname component-name\n    # Specific component based styling\n    # @children\n    # Base selection of rules\n    ? block\n    # @children\n    grid:\n      ? grid-item\n      # @children\n    table:\n      # @children\n      table-header:\n        # @children\n      table-data:\n        # @chidlren\n    list:\n      # react native only\n      list-item:\n        # @children\n    # ... more, maybe article etc\n    nav:\n      nav-item:\n        # @children\n  footer: # @classname footer - but maybe should be more specific\n    # @children\n")),Object(a.b)("h2",{id:"ordering"},"Ordering"),Object(a.b)("pre",null,Object(a.b)("code",Object.assign({parentName:"pre"},{className:"language-scss"}),".selector {\n    /* Mixins + Extends */\n    @extend .selector-to-extend-from;\n    @include mixin;\n\n    /* Positioning */\n    position: absolute;\n    z-index: 10;\n    top: 0;\n    right: 0;\n\n    /* Display & Box Model */\n    display: inline-block;\n    overflow: hidden;\n    box-sizing: border-box;\n    padding: 10px;\n    border: 10px solid #333;\n    margin: 10px;\n\n    /* Sizing */\n    max-width: 100px;\n    width: 100%;\n    height: 100px;\n\n    /* Background */\n    background-color: #000;\n\n    /* Text */\n    font-family: sans-serif;\n    font-size: 16px;\n    line-height: 1.4;\n    text-align: right;\n    color: #fff\n\n    /* Transitions */\n    transition: all $speed ease-out;\n\n    /* Other */\n    cursor: pointer;\n\n    /* Modifiers */\n    &:last-of-type {\n        // Repeat Ordering Rules\n    }\n\n    &:hover,\n    &:focus {\n        // Repeat Ordering Rules\n    }\n\n    /* Media Breaks */\n    @include grid-media($mobile-grid) {\n        // Repeat Ordering Rules\n    }\n\n    /* Second-tier elements */\n    .selector-child {\n        // Repeat Ordering Rules\n        // ! Do not bleed further than one more tier\n    }\n}\n")),Object(a.b)("h2",{id:"example-layout"},"Example layout"),Object(a.b)("p",null,Object(a.b)("img",{alt:"Example layout",src:t("./manual/assets/example-layout.png")})),Object(a.b)("p",null,"The aim is that regardless of whether or not we are using a template engine, JSX, html or whatever that uses/doesn't use partials or components of some form that we are able to maintain consistency."),Object(a.b)("p",null,"In the above image, let's look at how we would implement in a template engine like twig and then in React:"),Object(a.b)("pre",null,Object(a.b)("code",Object.assign({parentName:"pre"},{className:"language-html"}),'\x3c!-- Section partial ~/partials/page-offers/section-offers.twig (TODO: decide naming strutures?) --\x3e\n<section class="section-offers">\n    <div class="container-content">\n        <div class="block-content"></div>\n        <div class="block-header"></div>\n        <div class="grid-offers">\n            {% for offer in offers %}\n                <div class="grid-offer">\n                    {% include \'partials/component-offer/offer.twig\' with {offer: offer} %}\n                </div>\n            {% endfor %}\n        </div>\n    </div>\n</section>\n\n\x3c!-- Section partial ~/partials/page-offers/component-offer.twig (TODO: decide naming strutures?) --\x3e\n<div class="component-offer">\n    <div class="block-image">\n        <img src="{{ offer.imgSource }}" alt="{{ offer.alt }}" class="offer-image">\n    </div>\n    <div class="block-title">\n        <h3 class="offer-title">{{ offer.title }}</h3>\n    </div>\n</div>\n')),Object(a.b)("pre",null,Object(a.b)("code",Object.assign({parentName:"pre"},{className:"language-javascript"}),'// components/SectionOffers/index.js\nimport React, { Component } from \'react\';\nimport Images from \'img/Image\';\nimport Offer from \'components/Offer\';\n\nclass SectionOffers extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            offers = [...]\n        };\n    }\n\n    /**\n     * Render the <Home /> component\n     * @return {Home} Home page component\n     */\n    render() {\n        const { membershipCardId, profile } = this.props;\n\n        console.log(this.state.renderCode);\n        return (\n            <section className="section-offers">\n                <div className="container-content">\n                    <div className="block-content"></div>\n                    <div className="block-header"></div>\n                    <div className="grid-offers">\n                        {offers.map(d, i) => (\n                            <div className="grid-offer">\n                                <Offer offer={d} />\n                            </div>\n                        )}\n                    </div>\n                </div>\n            </section>\n        );\n    }\n}\n\nexport default SectionOffers;\n\n// components/Offer/index.js\n// ENSURE THAT ANY COMPONENT WE BUILD FOR\n// IS STATELESS\nimport React, { Component } from \'react\';\nimport { Link } from \'react-router\';\nimport Images from \'img/Image\';\n\nexport default Offer = (props) => (\n    <div className="component-offer">\n        <div className="block-image">\n            <img src={props.imgSource} alt={props.imgAlt} className="offer-image">\n        </div>\n        <div className="block-title">\n            <h3 className="offer-title">{props.offerTitle</h3>\n        </div>\n    </div>\n);\n')),Object(a.b)("pre",null,Object(a.b)("code",Object.assign({parentName:"pre"},{className:"language-scss"}),"// in other base files\n// base/_container.scss\n.container {\n  // keep vars elsewhere\n  max-width: $max-width;\n  // center\n  margin: 0 auto;\n  // set base padding rules\n  // containers should only have padding\n  padding: 80px 20px;\n\n  // set base overrides\n  @include grid-media($mobile) {\n    padding: 10px;\n  }\n}\n\n// base/_block.scss\n.block {\n  // if blocks get basic rules\n}\n\n// base/_grid.scss\n.grid {\n  // our base grid rules\n  // given we are enforcing STANDARD rules\n  // ensure you use the direct child selector\n  > .grid-item {\n    // item rules\n  }\n}\n\n// Component or partial: SectionOffers\n// sections/_section-offers.scss\n// every file should only go three levels deep\n// level one: parent\n// level two: any child of parent (parent should prevent bleed through)\n// level three: modifiers, sibling classes, media breaks\n.section-offers {\n  // should handle:\n  // padding\n  // background color\n  padding: 80px 20px;\n\n  @include grid-media($mobile) {\n    padding: 40px 20px;\n  }\n\n  .container-content {\n    // should handle central gutter\n    @extend .container;\n    // ^ brings in things like margin: 0 auto;\n  }\n\n  .block-content {\n    // blocks should only have margin-bottom\n    margin-bottom: 20px;\n\n    @include grid-media($mobile) {\n    }\n  }\n\n  .block-header {\n  }\n\n  // another pre-determined type\n  .grid-offers {\n    @extend .grid;\n  }\n\n  // note that this is still level two\n  // and doesn't fall in component scss\n  .grid-offer {\n    @extend .grid-item;\n  }\n}\n\n// components or react level styling\n// components/_offers.scss\n.component-offer {\n  // begin rules again\n  position: relative;\n  // ...\n\n  .block-image {\n    // ...\n  }\n\n  .offer-image {\n    // ...\n  }\n\n  .block-title {\n    // ...\n  }\n\n  .offer-title {\n    // ...\n  }\n}\n")),Object(a.b)("p",null,"In the case of a React Native app, set the styles object to be equivalent but without nesting:"),Object(a.b)("pre",null,Object(a.b)("code",Object.assign({parentName:"pre"},{className:"language-javascript"}),'// Component or partial: SectionOffers\n// sections/_section-offers.scss\n// every file should only go three levels deep\n// level one: parent\n// level two: any child of parent (parent should prevent bleed through)\n// level three: modifiers, sibling classes, media breaks\nconst sectionOffers = {\n    containerContent {\n        @extend .container;\n    }\n\n    blockContent {\n        // blocks should only have margin-bottom\n        margin-bottom: 20px;\n\n        @include grid-media($mobile) {\n        }\n    }\n\n    blockHeader {\n    }\n\n    // another pre-determined type\n    gridOffers {\n        @extend .grid;\n    }\n\n    // note that this is still level two\n    // and doesn\'t fall in component scss\n    gridOffer {\n        @extend .grid-item;\n    }\n}\n\n// Offer component\nconst styles = {\n    // components or react level styling\n    // components/_offers.scss\n    offer: {\n        // begin rules again\n        position: "relative";\n        // ...\n    }\n\n    offerimage: {\n        // ...\n    }\n\n    offerTitle {\n        // ...\n    }\n}\n')),Object(a.b)("h2",{id:"sass-principles"},"Sass Principles"),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Checklist")),Object(a.b)("ol",null,Object(a.b)("li",{parentName:"ol"},"Is it responsive? ",Object(a.b)("inlineCode",{parentName:"li"},"@include grid-media")," included?"),Object(a.b)("li",{parentName:"ol"},":hover states?"),Object(a.b)("li",{parentName:"ol"},":focus states?"),Object(a.b)("li",{parentName:"ol"},"Active/Inactive states?"),Object(a.b)("li",{parentName:"ol"},"Enabled/Disabled states?"),Object(a.b)("li",{parentName:"ol"},"Primary/Secondary/Alt?"),Object(a.b)("li",{parentName:"ol"},"Sizing?"),Object(a.b)("li",{parentName:"ol"},"Shape?")),Object(a.b)("h2",{id:"utilities"},"Utilities"),Object(a.b)("h3",{id:"text-f-"},"Text (f-)"),Object(a.b)("p",null,"Font primary example:"),Object(a.b)("pre",null,Object(a.b)("code",Object.assign({parentName:"pre"},{className:"language-scss"}),".f-primary {\n  &.display-four {\n    @include display-four;\n    @include f-primary;\n  }\n\n  &.display-three {\n    @include display-three;\n    @include f-primary;\n  }\n\n  &.display-two {\n    @include display-two;\n    @include f-primary;\n  }\n\n  &.display-one {\n    @include display-one;\n    @include f-primary;\n  }\n\n  &.headline {\n    @include headline;\n    @include f-primary;\n  }\n\n  &.title {\n    @include title;\n    @include f-primary;\n  }\n\n  &.subheading {\n    @include subheading;\n    @include f-primary;\n  }\n\n  &.body-two {\n    @include body-two;\n    @include f-primary;\n  }\n\n  &.body-one {\n    @include body-two;\n    @include f-primary;\n  }\n\n  &.caption {\n    @include caption;\n    @include f-primary;\n  }\n\n  &.cta {\n    @include cta;\n    @include f-primary;\n  }\n\n  &.center {\n    text-align: center;\n  }\n\n  &.left {\n    text-align: left;\n  }\n\n  &.right {\n    text-align: right;\n  }\n}\n")),Object(a.b)("h3",{id:"animate-a-"},"animate (a-)"),Object(a.b)("pre",null,Object(a.b)("code",Object.assign({parentName:"pre"},{className:"language-scss"}),"$a-desktop: 390ms;\n$a-desktop-enter: 290ms;\n$a-desktop-exit: 250ms;\n\n$a-mobile: 300ms;\n$a-mobile-enter: 225ms;\n$a-mobile-exit: 195ms;\n\n.animate {\n  transition: all $a-desktop-exit ease-out;\n\n  @include grid-media($mobile-grid) {\n    transition-duration: $a-mobile-exit;\n  }\n}\n")),Object(a.b)("h3",{id:"color-c--and-background-colour-bg-"},"color (c-) and background-colour (bg-)"),Object(a.b)("pre",null,Object(a.b)("code",Object.assign({parentName:"pre"},{className:"language-scss"}),"// Flat Colours\n$c-blue: #3498db;\n$c-green: #2ecc71;\n$c-purple: #9b59b6;\n$c-yellow: #f1c40f;\n$c-orange: #f39c12;\n$c-red: #e74c3c;\n\n$c-light-grey: #ecf0f1;\n$c-grey: #bdc3c7;\n\n// Basics\n$c-black: #000;\n$c-white: #fff;\n\n// Setting the states\n$c-primary: #ecf0f1;\n$c-secondary: #bdc3c7;\n\n$c-link: #3498db;\n$c-info: #3498db;\n$c-success: #2ecc71;\n$c-error: #e74c3c;\n$c-warning: #f1c40f;\n$c-light: #ecf0f1;\n$c-dark: #222;\n\n/*\nColors:\nc-primary\nc-secondary\nc-success\nc-error\nc-warning\nc-light\nc-dark\nc-white\nc-black\nc-link\nc-grey\nc-grey-light\n*/\n\n.bg-primary {\n  background-color: $c-primary;\n  &.-hover {\n    @include backgroundColor($c-primary);\n  }\n}\n\n.c-primary {\n  color: $c-primary;\n  &.-hover {\n    @include color($c-primary);\n  }\n}\n\n.bg-secondary {\n  background-color: $c-secondary;\n  &.-hover {\n    @include backgroundColor($c-secondary);\n  }\n}\n\n.c-secondary {\n  color: $c-secondary;\n  &.-hover {\n    @include color($c-secondary);\n  }\n}\n\n// Black and whites\n\n.bg-black {\n  background-color: $c-black;\n}\n\n.c-black {\n  color: $c-black;\n}\n\n.bg-white {\n  background-color: $c-white;\n}\n\n.c-white {\n  color: $c-white;\n}\n\n// Other\n\n.bg-link {\n  background-color: $c-link;\n}\n\n.c-link {\n  color: $c-link;\n}\n\n.bg-info {\n  background-color: $c-info;\n}\n\n.c-info {\n  color: $c-info;\n}\n\n.bg-success {\n  background-color: $c-success;\n}\n\n.c-success {\n  color: $c-success;\n}\n\n.bg-error {\n  background-color: $c-error;\n}\n\n.c-error {\n  color: $c-error;\n}\n\n.bg-warning {\n  background-color: $c-warning;\n}\n\n.c-warning {\n  color: $c-warning;\n}\n\n.bg-light {\n  background-color: $c-light;\n}\n\n.c-light {\n  color: $c-light;\n}\n\n.bg-dark {\n  background-color: $c-dark;\n}\n\n.c-dark {\n  color: $c-dark;\n}\n\n// Base colours -- may remove\n\n.bg-blue {\n  background-color: $c-blue;\n  &.-hover {\n    @include backgroundColor($c-blue);\n  }\n}\n\n.c-blue {\n  color: $c-blue;\n  &.-hover {\n    @include color($c-blue);\n  }\n}\n\n.bg-green {\n  background-color: $c-green;\n  &.-hover {\n    @include backgroundColor($c-green);\n  }\n}\n\n.c-green {\n  color: $c-green;\n  &.-hover {\n    @include color($c-green);\n  }\n}\n\n.bg-purple {\n  background-color: $c-purple;\n  &.-hover {\n    @include backgroundColor($c-purple);\n  }\n}\n\n.c-purple {\n  color: $c-purple;\n  &.-hover {\n    @include color($c-purple);\n  }\n}\n\n.bg-yellow {\n  background-color: $c-yellow;\n  &.-hover {\n    @include backgroundColor($c-yellow);\n  }\n}\n\n.c-yellow {\n  color: $c-yellow;\n  &.-hover {\n    @include color($c-yellow);\n  }\n}\n\n.bg-orange {\n  background-color: $c-orange;\n  &.-hover {\n    @include backgroundColor($c-orange);\n  }\n}\n\n.c-orange {\n  color: $c-orange;\n  &.-hover {\n    @include color($c-orange);\n  }\n}\n\n.bg-red {\n  background-color: $c-red;\n  &.-hover {\n    @include backgroundColor($c-red);\n  }\n}\n\n.c-red {\n  color: $c-red;\n  &.-hover {\n    @include color($c-red);\n  }\n}\n\n.bg-light-grey {\n  background-color: $c-light-grey;\n  &.-hover {\n    @include backgroundColor($c-light-grey);\n  }\n}\n\n.c-light-grey {\n  color: $c-light-grey;\n  &.-hover {\n    @include color($c-light-grey);\n  }\n}\n\n.bg-grey {\n  background-color: $c-grey;\n  &.-hover {\n    @include backgroundColor($c-grey);\n  }\n}\n\n.c-grey {\n  color: $c-grey;\n  &.-hover {\n    @include color($c-grey);\n  }\n}\n")),Object(a.b)("h3",{id:"padding-p---margin-bottom-mb---only-used-for-blocks"},"padding (p-) & margin-bottom (mb-) \u2014 only used for blocks"),Object(a.b)("p",null,"Still to do."),Object(a.b)("h2",{id:"components"},"Components"),Object(a.b)("h3",{id:"button"},"Button"),Object(a.b)("pre",null,Object(a.b)("code",Object.assign({parentName:"pre"},{className:"language-scss"}),".button {\n  padding: 16px 20px;\n\n  &.primary {\n    background-color: $c-black;\n    border: $c-black 1px solid;\n    color: $c-white;\n  }\n\n  &.secondary {\n    background-color: $c-white;\n    border: $c-black 1px solid;\n    color: $c-black;\n  }\n\n  &.cta {\n    @include cta;\n    font-size: 1.4rem;\n    text-transform: uppercase;\n  }\n\n  &.center {\n    text-align: center;\n  }\n}\n")),Object(a.b)("h3",{id:"grid"},"Grid"),Object(a.b)("pre",null,Object(a.b)("code",Object.assign({parentName:"pre"},{className:"language-scss"}),"$mobile-grid: (\n  columns: 4,\n  gutter: 10px,\n  media: $mobile\n);\n\n$tablet-p-grid: (\n  columns: 4,\n  gutter: 50px,\n  media: $tablet-p\n);\n\n$tablet-l-grid: (\n  columns: 12,\n  gutter: 50px,\n  media: $tablet-l\n);\n\n// Grid\n.grid-container {\n  @include grid-container;\n}\n\n.grid {\n  max-width: $max-width;\n\n  // Item\n  > .grid-item,\n  > .item {\n    margin-bottom: 10px;\n\n    // Grid Push\n    &.push-one {\n      @include grid-push(1);\n    }\n\n    &.push-two {\n      @include grid-push(2);\n    }\n\n    &.push-three {\n      @include grid-push(3);\n    }\n\n    &.push-four {\n      @include grid-push(4);\n    }\n\n    &.push-five {\n      @include grid-push(5);\n    }\n\n    &.push-six {\n      @include grid-push(6);\n    }\n\n    &.push-seven {\n      @include grid-push(7);\n    }\n\n    &.push-eight {\n      @include grid-push(8);\n    }\n\n    &.push-nine {\n      @include grid-push(9);\n    }\n\n    &.push-ten {\n      @include grid-push(10);\n    }\n\n    &.push-eleven {\n      @include grid-push(11);\n    }\n\n    &.push-twelve {\n      @include grid-push(12);\n    }\n\n    // Grid Shifts\n    &.shift-one {\n      @include grid-shift(1);\n    }\n\n    &.shift-two {\n      @include grid-shift(2);\n    }\n\n    &.shift-three {\n      @include grid-shift(3);\n    }\n\n    &.shift-four {\n      @include grid-shift(4);\n    }\n\n    &.shift-five {\n      @include grid-shift(5);\n    }\n\n    &.shift-six {\n      @include grid-shift(6);\n    }\n\n    &.shift-seven {\n      @include grid-shift(7);\n    }\n\n    &.shift-eight {\n      @include grid-shift(8);\n    }\n\n    &.shift-nine {\n      @include grid-shift(9);\n    }\n\n    &.shift-ten {\n      @include grid-shift(10);\n    }\n\n    &.shift-eleven {\n      @include grid-shift(11);\n    }\n\n    &.shift-twelve {\n      @include grid-shift(12);\n    }\n\n    // Grid Column\n\n    @include grid-column(12);\n\n    &.one {\n      @include grid-column(1);\n    }\n\n    &.two {\n      @include grid-column(2);\n    }\n\n    &.three {\n      @include grid-column(3);\n    }\n\n    &.four {\n      @include grid-column(4);\n    }\n\n    &.five {\n      @include grid-column(5);\n    }\n\n    &.six {\n      @include grid-column(6);\n    }\n\n    &.seven {\n      @include grid-column(7);\n    }\n\n    &.eight {\n      @include grid-column(8);\n    }\n\n    &.nine {\n      @include grid-column(9);\n    }\n\n    &.ten {\n      @include grid-column(10);\n    }\n\n    &.eleven {\n      @include grid-column(11);\n    }\n\n    &.twelve {\n      @include grid-column(12);\n    }\n\n    @include grid-media($mobile-grid) {\n      @include grid-column(4);\n\n      &.one,\n      &.two,\n      &.three,\n      &.four,\n      &.five,\n      &.six,\n      &.seven,\n      &.eight,\n      &.nine,\n      &.ten,\n      &.eleven,\n      &.twelve {\n        @include grid-column(4);\n      }\n    }\n  }\n}\n")),Object(a.b)("h3",{id:"container"},"Container"),Object(a.b)("pre",null,Object(a.b)("code",Object.assign({parentName:"pre"},{className:"language-scss"}),".container {\n  &.content {\n    margin: 0 auto;\n    max-width: $max-width;\n  }\n\n  &.pad {\n    padding: 60px 20px;\n\n    @include grid-media($mobile-grid) {\n      padding: 20px 10px;\n    }\n  }\n\n  &.flex {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n  }\n}\n")),Object(a.b)("h3",{id:"block"},"Block"),Object(a.b)("h3",{id:"alert"},"Alert"),Object(a.b)("h3",{id:"breadcrumb"},"Breadcrumb"),Object(a.b)("h2",{id:"structure"},"Structure"),Object(a.b)("p",null,"The structure can be continually updated as time goes along, but there are some basic Sass principles to ahere to."),Object(a.b)("h3",{id:"1-keywords-should-wrap-everything-and-not-be-duplicated"},"1. Keywords should wrap everything and not be duplicated"),Object(a.b)("p",null,"Keywords should be use to help define the shape and styling of a component. Using other references like Bootstrap etc are not a bad idea."),Object(a.b)("p",null,"The scoping should ensure there is no bleeding into other components."),Object(a.b)("pre",null,Object(a.b)("code",Object.assign({parentName:"pre"},{className:"language-css"}),"/* Example keyword: button */\n.button {\n  /* Scope should mean .button.sm and .button.lg do not affect other uses ie .icon.sm */\n  &.sm {\n    padding: 10px;\n  }\n\n  &.lg {\n    padding: 20px;\n  }\n}\n")),Object(a.b)("h3",{id:"2-keep-consistent-minimal-states"},"2. Keep consistent, minimal states"),Object(a.b)("p",null,"Using the same method before, we can create sibling classes that are within scope. Use action adjectives."),Object(a.b)("pre",null,Object(a.b)("code",Object.assign({parentName:"pre"},{className:"language-css"}),".button {\n  /* Consider these sibling classes state classes */\n  &.disabled {\n  }\n\n  &.active {\n  }\n\n  &.inactive {\n  }\n\n  &.focus {\n  }\n\n  &.inactive {\n  }\n}\n")),Object(a.b)("h3",{id:"3-keep-component-colouring-modifiable-by-using-colour-classes"},"3. Keep component colouring modifiable by using colour classes"),Object(a.b)("p",null,"To enable overrides using ",Object(a.b)("inlineCode",{parentName:"p"},"lift")," and ",Object(a.b)("inlineCode",{parentName:"p"},"kratos"),", be smart for components you want to modify."),Object(a.b)("p",null,"Do this:"),Object(a.b)("pre",null,Object(a.b)("code",Object.assign({parentName:"pre"},{className:"language-html"}),'<div class="block bg-primary">\n    <p>Stuff within div</p>\n<div>\n')),Object(a.b)("p",null,"Not this:"),Object(a.b)("pre",null,Object(a.b)("code",Object.assign({parentName:"pre"},{className:"language-html"}),'<div class="block">\n    <p>Stuff within div</p>\n<div>\n')),Object(a.b)("pre",null,Object(a.b)("code",Object.assign({parentName:"pre"},{className:"language-css"}),".block {\n  background-color: $c-primary; // unless setting a fallback\n}\n")),Object(a.b)("h3",{id:"4-prefix-attribute-specific-utility-classes"},"4. Prefix attribute-specific utility classes"),Object(a.b)("p",null,"Instead of your standard keywords like ",Object(a.b)("inlineCode",{parentName:"p"},"button")," for components, prefix the utility classes like ",Object(a.b)("inlineCode",{parentName:"p"},"c-primary")," for color primary and ",Object(a.b)("inlineCode",{parentName:"p"},"bg-primary")," for background primary."),Object(a.b)("p",null,"The exception to this utility rule should be ",Object(a.b)("inlineCode",{parentName:"p"},"animate")," which is just a keyword to trigger a global style of animations for changing between states based on Google's animation guidelines and ",Object(a.b)("inlineCode",{parentName:"p"},"text"),"."),Object(a.b)("h2",{id:"base-mixins"},"Base Mixins"),Object(a.b)("p",null,"The mixins file is the place to store all of the functional Sass mixins used throughout the project."),Object(a.b)("h3",{id:"inline-block-list"},"inline-block-list"),Object(a.b)("pre",null,Object(a.b)("code",Object.assign({parentName:"pre"},{className:"language-css"}),"// inline-block list\n@mixin inline-block-list($padding: false) {\n  margin: 0;\n  padding: 0;\n  border: 0;\n  @include clearfix;\n\n  li {\n    list-style-type: none;\n    @include inline-block();\n    white-space: nowrap;\n    @if $padding {\n      padding: {\n        left: $padding;\n        right: $padding;\n      }\n    }\n  }\n}\n")),Object(a.b)("h3",{id:"omega-reset"},"omega-reset"),Object(a.b)("pre",null,Object(a.b)("code",Object.assign({parentName:"pre"},{className:"language-css"}),"@mixin omega-reset($nth) {\n  &:nth-child(#{$nth}) {\n    margin-right: flex-gutter();\n  }\n  &:nth-child(#{$nth} + 1) {\n    clear: none;\n  }\n}\n")),Object(a.b)("h3",{id:"font-size"},"font-size"),Object(a.b)("pre",null,Object(a.b)("code",Object.assign({parentName:"pre"},{className:"language-css"}),"@mixin font-size($fontSize, $lineHeight: null) {\n  font-size: $fontSize;\n  font-size: rem($fontSize) / 0.625;\n\n  @if ($lineHeight) {\n    line-height: em($lineHeight, $fontSize);\n  } @else {\n    line-height: inherit;\n  }\n}\n")),Object(a.b)("h3",{id:"inline-block"},"inline-block"),Object(a.b)("pre",null,Object(a.b)("code",Object.assign({parentName:"pre"},{className:"language-css"}),"// inline-block for old browsers\n@mixin inline-block() {\n  display: inline-block;\n  *zoom: 1;\n  *display: inline;\n}\n")),Object(a.b)("h3",{id:"reset-box-model"},"reset-box-model"),Object(a.b)("pre",null,Object(a.b)("code",Object.assign({parentName:"pre"},{className:"language-css"}),"@mixin reset-box-model {\n  margin: 0;\n  padding: 0;\n  border: 0;\n}\n")),Object(a.b)("h3",{id:"absolute-fill"},"absolute-fill"),Object(a.b)("pre",null,Object(a.b)("code",Object.assign({parentName:"pre"},{className:"language-css"}),"@mixin absolute-fill {\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n}\n")),Object(a.b)("h3",{id:"headings"},"headings"),Object(a.b)("pre",null,Object(a.b)("code",Object.assign({parentName:"pre"},{className:"language-css"}),"@mixin headings($from: 1, $to: 6) {\n  @for $i from $from through $to {\n    h#{$i} {\n      @content;\n    }\n  }\n}\n")),Object(a.b)("h3",{id:"background-image"},"background-image"),Object(a.b)("pre",null,Object(a.b)("code",Object.assign({parentName:"pre"},{className:"language-css"}),"@mixin background-image($path) {\n  background-image: url(../img/#{$path}.png);\n  background-image: linear-gradient(transparent, transparent), url(../img/#{$path}.svg);\n}\n")),Object(a.b)("h3",{id:"reset-ul"},"reset-ul"),Object(a.b)("pre",null,Object(a.b)("code",Object.assign({parentName:"pre"},{className:"language-css"}),"/* Reset unordered list style */\n@mixin reset-ul {\n  list-style-type: none;\n  margin: 0;\n  padding: 0;\n  overflow: auto;\n}\n")),Object(a.b)("h3",{id:"hide-text"},"hide-text"),Object(a.b)("pre",null,Object(a.b)("code",Object.assign({parentName:"pre"},{className:"language-css"}),"@mixin hide-text {\n  overflow: hidden;\n  text-indent: 101%;\n  white-space: nowrap;\n}\n")),Object(a.b)("h3",{id:"_neat-parse-media"},"_","neat-parse-media"),Object(a.b)("p",null,"Swaps neat 2.0 to desktop first"),Object(a.b)("pre",null,Object(a.b)("code",Object.assign({parentName:"pre"},{className:"language-css"}),"@function _neat-parse-media($media) {\n  @if type-of($media) == number {\n    @return 'only screen and (max-width: #{$media})';\n  } @else if type-of($media) == string {\n    @return '#{$media}';\n  }\n}\n")),Object(a.b)("h3",{id:"background-color"},"background-color"),Object(a.b)("p",null,"Set default background-color transition."),Object(a.b)("pre",null,Object(a.b)("code",Object.assign({parentName:"pre"},{className:"language-css"}),"@mixin background-color$color, $lighten: false) {\n    background-color: $color;\n    transition: background-color 600ms ease-in;\n\n    &:hover,\n    &:active {\n        @if $lighten {\n            background-color: lighten($color, 30%);\n        } @else {\n            background-color: darken($color, 30%);\n        }\n    }\n}\n")),Object(a.b)("h3",{id:"color"},"color"),Object(a.b)("pre",null,Object(a.b)("code",Object.assign({parentName:"pre"},{className:"language-css"}),"@mixin color($color, $lighten: false) {\n  color: $color;\n  transition: color 600ms ease-in;\n\n  &:hover,\n  &:active {\n    @if $lighten {\n      color: lighten($color, 30%);\n    } @else {\n      color: darken($color, 30%);\n    }\n  }\n}\n")),Object(a.b)("h2",{id:"file-structure-guidelines"},"File Structure Guidelines"),Object(a.b)("p",null,"Note that sections and components should be component bound and flexible. Static sites may require the SCSS in the main directory but couple the styles with the section/template/component when possible and delay imports using things such as Webpack."),Object(a.b)("pre",null,Object(a.b)("code",Object.assign({parentName:"pre"},{className:"language-s"}),".\n\u251c\u2500\u2500 base\n\u2502\xa0\xa0 \u251c\u2500\u2500 __mixins.scss\n\u2502\xa0\xa0 \u251c\u2500\u2500 _animations.scss\n\u2502\xa0\xa0 \u251c\u2500\u2500 _breakpoints.scss\n\u2502\xa0\xa0 \u251c\u2500\u2500 _colours.scss\n\u2502\xa0\xa0 \u251c\u2500\u2500 _elevation.scss\n\u2502\xa0\xa0 \u251c\u2500\u2500 _icons.scss\n\u2502\xa0\xa0 \u251c\u2500\u2500 _layout.scss\n\u2502\xa0\xa0 \u2514\u2500\u2500 _typography.scss\n\u251c\u2500\u2500 components\n\u2502\xa0\xa0 \u251c\u2500\u2500 _button.scss\n\u2502\xa0\xa0 \u2514\u2500\u2500  _grid.scss\n\u251c\u2500\u2500 fonts\n\u2502\xa0\xa0 \u251c\u2500\u2500 font-name-one.ttf\n\u2502\xa0\xa0 \u2514\u2500\u2500 font-name-two.ttf\n\u251c\u2500\u2500 main.scss\n\u2514\u2500\u2500 sections\n    \u2514\u2500\u2500 _landing-one.scss\n")))}r&&r===Object(r)&&Object.isExtensible(r)&&Object.defineProperty(r,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"MDXContent",filename:"manual/Principles/Styling.md"}}),r.isMDXComponent=!0},"./manual/assets/example-layout.png":function(e,n,t){e.exports=t.p+"static/img/example-layout.dfc1aad3.png"}}]);
//# sourceMappingURL=manual-principles-styling.101a1afd2417ec7a4a77.js.map