{"version":3,"sources":["/Users/dennis.okeeffe/Project-Imposter/developer-notes/manual/Java/Java-Fizz-Buzz.md"],"names":["layoutProps","MDXLayout","MDXContent","_ref","components","props","Object","_Users_dennis_okeeffe_Project_Imposter_developer_notes_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","_mdx_js_react__WEBPACK_IMPORTED_MODULE_2__","assign","mdxType","id","parentName","className","isMDXComponent"],"mappings":"qXAWMA,EAAc,GAGdC,EAAY,UACH,SAASC,EAATC,GAGZ,IAFDC,EAECD,EAFDC,WACGC,EACFC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,gBACD,OAAOG,OAAAE,EAAA,EAAAF,CAACL,EAADK,OAAAG,OAAA,GAAeT,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYM,QAAQ,cAC5EJ,OAAAE,EAAA,EAAAF,CAAA,KAAQ,CACNK,GAAM,qBADR,qBAGAL,OAAAE,EAAA,EAAAF,CAAA,KAAQ,CACNK,GAAM,gBADR,gBAGAL,OAAAE,EAAA,EAAAF,CAAA,oBAAeA,OAAAE,EAAA,EAAAF,CAAA,cAAYM,WAAW,KAAvB,gBAAf,UACAN,OAAAE,EAAA,EAAAF,CAAA,WAAKA,OAAAE,EAAA,EAAAF,CAAA,OAAAA,OAAAG,OAAA,CAAMG,WAAW,OAAU,CAC5BC,UAAa,oBADZ,uSAoBLP,OAAAE,EAAA,EAAAF,CAAA,KAAQ,CACNK,GAAM,wBADR,wBAGAL,OAAAE,EAAA,EAAAF,CAAA,wBAAmBA,OAAAE,EAAA,EAAAF,CAAA,cAAYM,WAAW,KAAvB,mCAAnB,KACAN,OAAAE,EAAA,EAAAF,CAAA,WAAKA,OAAAE,EAAA,EAAAF,CAAA,OAAAA,OAAAG,OAAA,CAAMG,WAAW,OAAU,CAC5BC,UAAa,kBADZ,snBA8BLP,OAAAE,EAAA,EAAAF,CAAA,KAAQ,CACNK,GAAM,2BADR,+BAGAL,OAAAE,EAAA,EAAAF,CAAA,qDACAA,OAAAE,EAAA,EAAAF,CAAA,WAAKA,OAAAE,EAAA,EAAAF,CAAA,OAAAA,OAAAG,OAAA,CAAMG,WAAW,OAAU,CAC5BC,UAAa,kBADZ,gVAgBLP,OAAAE,EAAA,EAAAF,CAAA,KAAQ,CACNK,GAAM,iBADR,iBAGAL,OAAAE,EAAA,EAAAF,CAAA,gBAAWA,OAAAE,EAAA,EAAAF,CAAA,cAAYM,WAAW,KAAvB,eAAX,gOAIJV,EAAWY,gBAAiB","file":"static/js/manual-java-java-fizz-buzz.a887ce84.js","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"fizz-buzz-in-java\"\n    }}>{`Fizz Buzz in Java`}</h1>\n    <h2 {...{\n      \"id\": \"gradle-setup\"\n    }}>{`Gradle setup`}</h2>\n    <p>{`For our `}<inlineCode parentName=\"p\">{`build.gradle`}</inlineCode>{` file:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-gradle\"\n      }}>{`apply plugin: \"java\"\napply plugin: \"eclipse\"\napply plugin: \"idea\"\n\nrepositories {\n    mavenCentral()\n}\n\ndependencies {\n    testCompile \"junit:junit:4.12\"\n}\ntest {\n    testLogging {\n        exceptionFormat = 'full'\n        events = [\"passed\", \"failed\", \"skipped\"]\n    }\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"setting-up-the-tests\"\n    }}>{`Setting up the Tests`}</h2>\n    <p>{`Create file `}<inlineCode parentName=\"p\">{`src/test/java/FizzBuzzTest.java`}</inlineCode>{`:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`import org.junit.Ignore;\nimport org.junit.Test;\n\nimport static org.junit.Assert.assertEquals;\n\npublic class FizzBuzzTest {\n    @Test\n    public void testReturnsIntAsString() {\n        assertEquals(\"2\", new FizzBuzz().run(2));\n    }\n\n    // @Ignore(\"Remove to run test\")\n    @Test\n    public void testReturnsFizz() {\n        assertEquals(\"Fizz\", new FizzBuzz().run(3));\n    }\n\n    @Test\n    public void testReturnsBuzz() {\n        assertEquals(\"Buzz\", new FizzBuzz().run(5));\n    }\n\n    @Test\n    public void testReturnsFizzBuzz() {\n        assertEquals(\"FizzBuzz\", new FizzBuzz().run(15));\n    }\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"srcmainjavafizzbuzzjava\"\n    }}>{`src/main/java/FizzBuzz.java`}</h2>\n    <p>{`For our main Java file running FizzBuzz:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`class FizzBuzz {\n    String run(Integer input) {\n        if (input % 15 == 0) {\n            return \"FizzBuzz\";\n        } else if (input % 3 == 0) {\n            return \"Fizz\";\n        } else if (input % 5 == 0) {\n            return \"Buzz\";\n        } else {\n            return Integer.toString(input);\n        }\n    }\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"running-tests\"\n    }}>{`Running tests`}</h2>\n    <p>{`Run `}<inlineCode parentName=\"p\">{`gradle test`}</inlineCode>{` to compile and test our FizzBuzz class.`}</p>\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  "],"sourceRoot":""}