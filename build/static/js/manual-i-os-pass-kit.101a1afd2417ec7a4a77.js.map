{"version":3,"sources":["/Users/dennis.okeeffe/Project-Imposter/developer-notes/manual/iOS/PassKit.md"],"names":["layoutProps","MDXLayout","MDXContent","_ref","components","props","Object","_Users_dennis_okeeffe_Project_Imposter_developer_notes_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","_mdx_js_react__WEBPACK_IMPORTED_MODULE_2__","assign","mdxType","id","parentName","href","className","isMDXComponent"],"mappings":"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","file":"static/js/manual-i-os-pass-kit.5daa6779.js","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"passkit\"\n    }}>{`PassKit`}</h1>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"#passkit\"\n        }}>{`PassKit`}</a>{`\n- `}<a parentName=\"li\" {...{\n          \"href\": \"#adding-the-certificate\"\n        }}>{`Adding the certificate`}</a>{`\n- `}<a parentName=\"li\" {...{\n          \"href\": \"#php-server\"\n        }}>{`PHP Server`}</a>{`\n- `}<a parentName=\"li\" {...{\n          \"href\": \"#plan-ticket-example\"\n        }}>{`Plan ticket example`}</a>{`\n- `}<a parentName=\"li\" {...{\n          \"href\": \"#store-card-example\"\n        }}>{`Store card example`}</a>{`\n- `}<a parentName=\"li\" {...{\n          \"href\": \"#more-info\"\n        }}>{`More info`}</a></li>\n    </ul>\n    <h2 {...{\n      \"id\": \"adding-the-certificate\"\n    }}>{`Adding the certificate`}</h2>\n    <p>{`Head to the iOS dev portal and add the appropriate certificate.`}</p>\n    <p>{`You may need to open Keychain access to generate a new key using `}<inlineCode parentName=\"p\">{`Keychain Access > Certificate Assistant > Req Cert from Cert Auth`}</inlineCode>{` and generate a new cert. This cert will be used to generate what you need to import into Keychain Access from the dev portal.`}</p>\n    <p>{`Once created, export it to a folder for the server.`}</p>\n    {\n      /* Once created, download the certificate and export it as .p12 to the server which hosts `node-passbook`. You may need to global install as well `npm install -g passbook` to then use `node-passbook prepare-keys -p keys` to convert .p12 to .pem. Make sure you set the PEM passphrase too - it will be needed. */\n    }\n    <h2 {...{\n      \"id\": \"php-server\"\n    }}>{`PHP Server`}</h2>\n    <p>{`Using `}<inlineCode parentName=\"p\">{`composer`}</inlineCode>{`, you can build out a scaffold using the Slim Framework:`}</p>\n    <p><inlineCode parentName=\"p\">{`composer create-project slim/slim-skeleton [project-name]`}</inlineCode>{`.`}</p>\n    <p>{`To install the PHP PassKit helper, run `}<inlineCode parentName=\"p\">{`composer require pkpass/pkpass`}</inlineCode>{`.`}</p>\n    <p>{`Once built, you can then hit the routes and just require the pkpass and the routes file may end up looking like this:`}</p>\n    <h3 {...{\n      \"id\": \"plan-ticket-example\"\n    }}>{`Plan ticket example`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-php\"\n      }}>{`<?php\n// Routes\nuse PKPass\\\\PKPass;\n\n$app->get('/', function ($request, $response, $args) {\n    // Sample log message\n    $this->logger->info(\"Slim-Skeleton '/' route\");\n\n    // Render index view\n    return $this->renderer->render($response, 'sample.phtml', $args);\n});\n\n$app->get('/pass', function ($request, $response, $args) {\n    // Sample log message\n    $this->logger->info(\"Slim-Skeleton '/pass' route\");\n\n    $pass = new PKPass('<name>.p12', '<insert-password>');\n\n    // Pass content\n    $data = [\n        'description' => 'Demo pass',\n        'formatVersion' => 1,\n        'organizationName' => 'Flight Express',\n        'passTypeIdentifier' => 'pass.com.<teamname>.<passname>', // Change this!\n        'serialNumber' => '12345678',\n        'teamIdentifier' => '<insert-team-id>', // Change this! Found on Apple Dev Portal\n        'boardingPass' => [\n            'primaryFields' => [\n                [\n                    'key' => 'origin',\n                    'label' => 'San Francisco',\n                    'value' => 'SFO',\n                ],\n                [\n                    'key' => 'destination',\n                    'label' => 'London',\n                    'value' => 'LHR',\n                ],\n            ],\n            'secondaryFields' => [\n                [\n                    'key' => 'gate',\n                    'label' => 'Gate',\n                    'value' => 'F12',\n                ],\n                [\n                    'key' => 'date',\n                    'label' => 'Departure date',\n                    'value' => '07/11/2012 10:22',\n                ],\n            ],\n            'backFields' => [\n                [\n                    'key' => 'passenger-name',\n                    'label' => 'Passenger',\n                    'value' => 'John Appleseed',\n                ],\n            ],\n            'transitType' => 'PKTransitTypeAir',\n        ],\n        'barcode' => [\n            'format' => 'PKBarcodeFormatQR',\n            'message' => 'Flight-GateF12-ID6643679AH7B',\n            'messageEncoding' => 'iso-8859-1',\n        ],\n        'backgroundColor' => 'rgb(32,110,247)',\n        'logoText' => 'Flight info',\n        'relevantDate' => date('Y-m-d\\\\TH:i:sP')\n    ];\n\n    $pass->setWWDRcertPath('<path to wwdr.pem>');\n    $pass->setData($data);\n\n    // Add files to the pass package\n    $pass->addFile('public/icon.png');\n    $pass->addFile('public/icon@2x.png');\n    $pass->addFile('public/logo.png');\n\n    if($pass->checkError($error) == true) {\n        // echo $error;\n        // exit('An error occured: ' . $error);\n    }\n\n    // echo 'Here';\n\n    $result = $pass->create(true);\n    if($result == false) {\n        echo $pass->getError();\n    }\n    // Render index view\n    return $result;\n});\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"store-card-example\"\n    }}>{`Store card example`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-php\"\n      }}>{`<?php\n// Routes\nuse PKPass\\\\PKPass;\n\n$app->get('/', function ($request, $response, $args) {\n    // Sample log message\n    $this->logger->info(\"Slim-Skeleton '/' route\");\n\n    // Render index view\n    return $this->renderer->render($response, 'sample.phtml', $args);\n});\n\n$app->get('/pass', function ($request, $response, $args) {\n    // Sample log message\n    $this->logger->info(\"Slim-Skeleton '/pass' route\");\n\n    $pass = new PKPass('<key-path>', 'password');\n\n    // Pass content\n    $data = [\n        'formatVersion' => 1,\n        'organizationName' => 'Testing',\n        'passTypeIdentifier' => 'pass.com.<id>.<app>', // Change this!\n        'serialNumber' => '12345678',\n        'teamIdentifier' => '<team-id>', // Change this!\n        'logoText' => 'Loyalty',\n        'description' => 'Rewards card',\n        'storeCard' => [\n            'secondaryFields' => [\n                [\n                    'key' => 'balance',\n                    'label' => 'BALANCE',\n                    'value' => '$250.00'\n                ],\n                [\n                    'key' => 'name',\n                    'label' => 'NICKNAME',\n                    'value' => 'Denno'\n                ],\n            ],\n            'backFields' => [\n                [\n                    'key' => 'owner-name',\n                    'label' => 'Rewards Card',\n                    'value' => 'John Appleseed'\n                ],\n            ]\n        ],\n        'barcode' => [\n            'format' => 'PKBarcodeFormatPDF417',\n            'message' => 'ID6643679AH7B',\n            'messageEncoding' => 'iso-8859-1',\n            'altText' => 'ID6643679AH7B'\n        ],\n        'backgroundColor' => 'rgb(32,110,247)',\n        'logoText' => 'Dummy card info'\n    ];\n\n    $pass->setWWDRcertPath('<wwdr-key>');\n    $pass->setData($data);\n\n    // Add files to the pass package\n    $pass->addFile('public/icon.png');\n    $pass->addFile('public/icon@2x.png');\n    $pass->addFile('public/logo.png');\n\n    if($pass->checkError($error) == true) {\n        // echo $error;\n        // exit('An error occured: ' . $error);\n    }\n\n    // echo 'Here';\n\n    $result = $pass->create(true);\n    if($result == false) {\n        echo $pass->getError();\n    }\n    // Render index view\n    return $result;\n});\n\n?>\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"more-info\"\n    }}>{`More info`}</h2>\n    <p>{`If you need to generate a wwdr cert, you can globally install `}<inlineCode parentName=\"p\">{`passbook`}</inlineCode>{` eg. `}<inlineCode parentName=\"p\">{`node install -g passbook`}</inlineCode>{` and run a command like `}<inlineCode parentName=\"p\">{`node-passbook prepare-keys -p <folder-hosting-exported-keys>`}</inlineCode>{` and it can do the conversion for you. Make sure you don't forget the password, though.`}</p>\n    <p>{`Some changes you may need to make are passing `}<inlineCode parentName=\"p\">{`POST`}</inlineCode>{` variables to change it for each user.`}</p>\n    <p>{`If you need to change the JSON structure above, refer to `}<a parentName=\"p\" {...{\n        \"href\": \"https://developer.apple.com/library/content/documentation/UserExperience/Reference/PassKit_Bundle/Chapters/Introduction.html\"\n      }}>{`https://developer.apple.com/library/content/documentation/UserExperience/Reference/PassKit_Bundle/Chapters/Introduction.html`}</a>{` for more info.`}</p>\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  "],"sourceRoot":""}