{"version":3,"sources":["/Users/dennis.okeeffe/Project-Imposter/developer-notes/manual/Stripe/Dotnet-Stripe-Configuration.md"],"names":["layoutProps","MDXLayout","MDXContent","_ref","components","props","Object","_Users_dennis_okeeffe_Project_Imposter_developer_notes_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","_mdx_js_react__WEBPACK_IMPORTED_MODULE_2__","assign","mdxType","id","parentName","href","className","isMDXComponent"],"mappings":"oYAWMA,EAAc,GAGdC,EAAY,UACH,SAASC,EAATC,GAGZ,IAFDC,EAECD,EAFDC,WACGC,EACFC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,gBACD,OAAOG,OAAAE,EAAA,EAAAF,CAACL,EAADK,OAAAG,OAAA,GAAeT,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYM,QAAQ,cAC5EJ,OAAAE,EAAA,EAAAF,CAAA,KAAQ,CACNK,GAAM,8BADR,+BAGAL,OAAAE,EAAA,EAAAF,CAAA,KAAQ,CACNK,GAAM,aADR,aAGAL,OAAAE,EAAA,EAAAF,CAAA,UACEA,OAAAE,EAAA,EAAAF,CAAA,MAAIM,WAAW,MAAKN,OAAAE,EAAA,EAAAF,CAAA,IAAAA,OAAAG,OAAA,CAAGG,WAAW,MAAS,CACvCC,KAAQ,qFADQ,qCAGpBP,OAAAE,EAAA,EAAAF,CAAA,MAAIM,WAAW,MAAKN,OAAAE,EAAA,EAAAF,CAAA,IAAAA,OAAAG,OAAA,CAAGG,WAAW,MAAS,CACvCC,KAAQ,4CADQ,2BAGpBP,OAAAE,EAAA,EAAAF,CAAA,MAAIM,WAAW,MAAKN,OAAAE,EAAA,EAAAF,CAAA,IAAAA,OAAAG,OAAA,CAAGG,WAAW,MAAS,CACvCC,KAAQ,oHADQ,qBAGpBP,OAAAE,EAAA,EAAAF,CAAA,MAAIM,WAAW,MAAKN,OAAAE,EAAA,EAAAF,CAAA,IAAAA,OAAAG,OAAA,CAAGG,WAAW,MAAS,CACvCC,KAAQ,qGADQ,yCAGpBP,OAAAE,EAAA,EAAAF,CAAA,MAAIM,WAAW,MAAKN,OAAAE,EAAA,EAAAF,CAAA,IAAAA,OAAAG,OAAA,CAAGG,WAAW,MAAS,CACvCC,KAAQ,yFADQ,qBAGpBP,OAAAE,EAAA,EAAAF,CAAA,MAAIM,WAAW,MAAKN,OAAAE,EAAA,EAAAF,CAAA,IAAAA,OAAAG,OAAA,CAAGG,WAAW,MAAS,CACvCC,KAAQ,2EADQ,+DAGpBP,OAAAE,EAAA,EAAAF,CAAA,MAAIM,WAAW,MAAKN,OAAAE,EAAA,EAAAF,CAAA,IAAAA,OAAAG,OAAA,CAAGG,WAAW,MAAS,CACvCC,KAAQ,0KADQ,iCAGpBP,OAAAE,EAAA,EAAAF,CAAA,MAAIM,WAAW,MAAKN,OAAAE,EAAA,EAAAF,CAAA,IAAAA,OAAAG,OAAA,CAAGG,WAAW,MAAS,CACvCC,KAAQ,sEADQ,wCAGpBP,OAAAE,EAAA,EAAAF,CAAA,MAAIM,WAAW,MAAKN,OAAAE,EAAA,EAAAF,CAAA,IAAAA,OAAAG,OAAA,CAAGG,WAAW,MAAS,CACvCC,KAAQ,sDADQ,4BAGpBP,OAAAE,EAAA,EAAAF,CAAA,MAAIM,WAAW,MAAKN,OAAAE,EAAA,EAAAF,CAAA,IAAAA,OAAAG,OAAA,CAAGG,WAAW,MAAS,CACvCC,KAAQ,gEADQ,0BAGpBP,OAAAE,EAAA,EAAAF,CAAA,MAAIM,WAAW,MAAKN,OAAAE,EAAA,EAAAF,CAAA,IAAAA,OAAAG,OAAA,CAAGG,WAAW,MAAS,CACvCC,KAAQ,2DADQ,oBAGpBP,OAAAE,EAAA,EAAAF,CAAA,MAAIM,WAAW,MAAKN,OAAAE,EAAA,EAAAF,CAAA,IAAAA,OAAAG,OAAA,CAAGG,WAAW,MAAS,CACvCC,KAAQ,6CADQ,iBAItBP,OAAAE,EAAA,EAAAF,CAAA,KAAQ,CACNK,GAAM,sBADR,sBAGAL,OAAAE,EAAA,EAAAF,CAAA,WAAKA,OAAAE,EAAA,EAAAF,CAAA,OAAAA,OAAAG,OAAA,CAAMG,WAAW,OAAU,CAC5BE,UAAa,mBADZ,4VAYLR,OAAAE,EAAA,EAAAF,CAAA,KAAQ,CACNK,GAAM,wBADR,wBAGAL,OAAAE,EAAA,EAAAF,CAAA,WAAKA,OAAAE,EAAA,EAAAF,CAAA,OAAAA,OAAAG,OAAA,CAAMG,WAAW,OAAU,CAC5BE,UAAa,mBADZ,iBAILR,OAAAE,EAAA,EAAAF,CAAA,yFACAA,OAAAE,EAAA,EAAAF,CAAA,WAAKA,OAAAE,EAAA,EAAAF,CAAA,OAAAA,OAAAG,OAAA,CAAMG,WAAW,OAAU,CAC5BE,UAAa,mBADZ,sDAKLR,OAAAE,EAAA,EAAAF,CAAA,KAAQ,CACNK,GAAM,+BADR,+BAGAL,OAAAE,EAAA,EAAAF,CAAA,gIAA2HA,OAAAE,EAAA,EAAAF,CAAA,cAAYM,WAAW,KAAvB,oBAA3H,UACAN,OAAAE,EAAA,EAAAF,CAAA,WAAKA,OAAAE,EAAA,EAAAF,CAAA,OAAAA,OAAAG,OAAA,CAAMG,WAAW,OAAU,CAC5BE,UAAa,kBADZ,oOAULR,OAAAE,EAAA,EAAAF,CAAA,mCAA8BA,OAAAE,EAAA,EAAAF,CAAA,IAAAA,OAAAG,OAAA,CAAGG,WAAW,KAAQ,CAChDC,KAAQ,4GADkB,8BAA9B,kCAGAP,OAAAE,EAAA,EAAAF,CAAA,KAAQ,CACNK,GAAM,kCADR,mCAGAL,OAAAE,EAAA,EAAAF,CAAA,WAAKA,OAAAE,EAAA,EAAAF,CAAA,OAAAA,OAAAG,OAAA,CAAMG,WAAW,OAAU,CAC5BE,UAAa,oBADZ,kVAgBLR,OAAAE,EAAA,EAAAF,CAAA,KAAQ,CACNK,GAAM,oBADR,oBAGAL,OAAAE,EAAA,EAAAF,CAAA,WAAKA,OAAAE,EAAA,EAAAF,CAAA,OAAAA,OAAAG,OAAA,CAAMG,WAAW,OAAU,CAC5BE,UAAa,gBADZ,wSAcLR,OAAAE,EAAA,EAAAF,CAAA,KAAQ,CACNK,GAAM,yBADR,yBAGAL,OAAAE,EAAA,EAAAF,CAAA,WAAKA,OAAAE,EAAA,EAAAF,CAAA,OAAAA,OAAAG,OAAA,CAAMG,WAAW,OAAU,CAC5BE,UAAa,gBADZ,uyBA+BLR,OAAAE,EAAA,EAAAF,CAAA,KAAQ,CACNK,GAAM,iCADR,iCAGAL,OAAAE,EAAA,EAAAF,CAAA,4DAAuDA,OAAAE,EAAA,EAAAF,CAAA,cAAYM,WAAW,KAAvB,iBAAvD,wFACAN,OAAAE,EAAA,EAAAF,CAAA,8IAA2IA,OAAAE,EAAA,EAAAF,CAAA,cAAYM,WAAW,KAAvB,2DAA3I,oBACAN,OAAAE,EAAA,EAAAF,CAAA,KAAQ,CACNK,GAAM,sCADR,sCAGAL,OAAAE,EAAA,EAAAF,CAAA,+DAA0DA,OAAAE,EAAA,EAAAF,CAAA,cAAYM,WAAW,KAAvB,uBAA1D,sCAAgKN,OAAAE,EAAA,EAAAF,CAAA,cAAYM,WAAW,KAAvB,WAAhK,OAA2NN,OAAAE,EAAA,EAAAF,CAAA,cAAYM,WAAW,KAAvB,2BAA3N,oBACAN,OAAAE,EAAA,EAAAF,CAAA,6TAIJJ,EAAWa,gBAAiB","file":"static/js/manual-stripe-dotnet-stripe-configuration.b4416344.js","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"configuring-stripe-for-net\"\n    }}>{`Configuring Stripe for .NET`}</h1>\n    <h2 {...{\n      \"id\": \"resources\"\n    }}>{`Resources`}</h2>\n    <ol>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"https://codebrains.io/integrate-stripe-api-with-asp-net-core-creating-customers/\"\n        }}>{`Setting up Stripe API for Dotnet`}</a></li>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"https://stripe.com/docs/api?lang=dotnet\"\n        }}>{`Stripe Dotnet API Docs`}</a></li>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"https://docs.microsoft.com/en-us/aspnet/core/tutorials/first-web-api?view=aspnetcore-3.1&tabs=visual-studio-mac\"\n        }}>{`First Dotnet API`}</a></li>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"https://docs.microsoft.com/en-us/aspnet/core/security/app-secrets?view=aspnetcore-3.1&tabs=linux\"\n        }}>{`Setting secrets for a Dotnet project`}</a></li>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/keywords/interface\"\n        }}>{`Interfaces in C#`}</a></li>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"https://stormpath.com/blog/build-api-service-dotnet-core-twilio-stripe\"\n        }}>{`ASP.NET Core API Service with Twilio, Stripe and Stormpath`}</a></li>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"https://cmatskas.com/processing-payments-and-being-pci-compliant-with-stripe-js/?utm_content=buffer55d56&utm_medium=social&utm_source=twitter.com&utm_campaign=buffer\"\n        }}>{`Process Payments with Dotnet`}</a></li>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"https://github.com/cmatskas/StripeSample/tree/master/StripeSample\"\n        }}>{`Process Payments with Dotnet Github`}</a></li>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"https://stripe.com/docs/development#create-charge\"\n        }}>{`Stripe Development Docs`}</a></li>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"https://www.toptal.com/asp-dot-net/asp-net-web-api-tutorial\"\n        }}>{`Toptal ASP.NET WebAPI`}</a></li>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"https://dev.to/integerman/creating-a-net-core-api-3n6d\"\n        }}>{`Dev.To tutorial`}</a></li>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"https://httpie.org/doc#default-behaviour\"\n        }}>{`HTTPie JSON`}</a></li>\n    </ol>\n    <h2 {...{\n      \"id\": \"adding-the-library\"\n    }}>{`Adding the library`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`# install stripe\ndotnet add package Stripe.net\n# for reading local env file\n# NOT REQUIRED unless you want to read from .env\ndotnet add package DotNetEnv\n# install required code generation code\nMicrosoft.VisualStudio.Web.CodeGeneration.Design\n# global install scaffolding tool\ndotnet tool install --global dotnet-aspnet-codegenerator\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"adding-a-dotenv-file\"\n    }}>{`Adding a Dotenv file`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`touch .env\n`}</code></pre>\n    <p>{`Within the Dotenv file, we need to add your test keys from Stripe's website.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`SK_TEST_KEY= sk_test...\nPK_TEST_KEY=pk_test...\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"updating-your-settings-file\"\n    }}>{`Updating your settings file`}</h2>\n    <p>{`If you are going to use another method to fetch the variables (ie secrets etc), you could add the following to your `}<inlineCode parentName=\"p\">{`appsettings.json`}</inlineCode>{` file:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`{\n  // previous key/values omitted for brevity\n  \"Stripe\": {\n    \"SecretKey\": \"SK_TEST_KEY\", // this will eval to sk_test_... .env\n    \"PublishableKey\": \"PK_TEST_KEY\" // this will eval to sk_test_... from .env\n  }\n}\n`}</code></pre>\n    <p>{`Make sure to check the `}<a parentName=\"p\" {...{\n        \"href\": \"https://docs.microsoft.com/en-us/dotnet/csharp/programming-guide/classes-and-structs/passing-parameters\"\n      }}>{`docs on passing parameters`}</a>{` to understand how this works.`}</p>\n    <h2 {...{\n      \"id\": \"add-stripe-config-to-startupcs\"\n    }}>{`Add Stripe config to Startup.cs`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-csharp\"\n      }}>{`using Stripe;\nusing DotNetEnv;\n\n// ... code omitted for brevity\n\npublic Startup(IConfiguration configuration)\n{\n    Configuration = configuration;\n    // load .env file\n    DotNetEnv.Env.Load();\n    // set config using env var\n    StripeConfiguration.ApiKey = System.Environment.GetEnvironmentVariable(\"SK_TEST_KEY\");\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"create-the-model\"\n    }}>{`Create the Model`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-cs\"\n      }}>{`// in Models/StripeCharge.cs\nnamespace ChargeApi.Models\n{\n    public class StripeCharge\n    {\n        public long Amount { get; set; }\n        public string Currency { get; set; }\n        public string Source { get; set; }\n        public string ReceiptEmail { get; set; }\n    }\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"create-the-controller\"\n    }}>{`Create the Controller`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-cs\"\n      }}>{`// Controllers/Charge.cs\nusing System.Collections.Generic;\nusing Microsoft.AspNetCore.Mvc;\nusing Stripe;\nusing ChargeApi.Models;\n\nnamespace dotnet_stripe.Controllers\n{\n    [ApiController]\n    [Route(\"api/charges\")]\n    public class ChargesController : Controller\n    {\n        [HttpPost]\n        public Stripe.Charge CreateCharge([FromBody] StripeCharge createOptions)\n        {\n            var options = new ChargeCreateOptions\n            {\n                Amount = createOptions.Amount,\n                Currency = \"usd\",\n                Source = \"tok_visa\",\n                ReceiptEmail = \"tim.apple@example.com\",\n            };\n            var service = new ChargeService();\n            var charge = service.Create(options);\n            return charge;\n        }\n    }\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"sending-the-request-on-httpie\"\n    }}>{`Sending the request on HTTPie`}</h2>\n    <p>{`Since we are sending back the response from the `}<inlineCode parentName=\"p\">{`Stripe.Charge`}</inlineCode>{` object, it will be very verbose and not what you want to do in reality for the API.`}</p>\n    <p>{`Using HTTPie (check resource `}{`[12]`}{`), we can check for our 200 response with the full JSON body returned by Stripe by calling `}<inlineCode parentName=\"p\">{`http POST http://localhost:5000/api/charges Amount:=200`}</inlineCode>{` in our console.`}</p>\n    <h2 {...{\n      \"id\": \"check-the-stripe-developer-console\"\n    }}>{`Check the Stripe developer console`}</h2>\n    <p>{`Heading to our Stripe dashboard and checking under `}<inlineCode parentName=\"p\">{`Developers > Events`}</inlineCode>{`, one can see our payment made for `}<inlineCode parentName=\"p\">{`US$2.00`}</inlineCode>{` by `}<inlineCode parentName=\"p\">{`\"tim.apple@example.com\"`}</inlineCode>{`. Great success!`}</p>\n    <p>{`Of course, all those values are coded and not exactly what we want in the real world... but we are connected.`}</p>\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  "],"sourceRoot":""}