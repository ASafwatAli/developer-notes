{"version":3,"sources":["/Users/dennis.okeeffe/Project-Imposter/developer-notes/manual/Docker/Docker-Deep-Dive.md"],"names":["layoutProps","MDXLayout","MDXContent","_ref","components","props","Object","_Users_dennis_okeeffe_Project_Imposter_developer_notes_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","_mdx_js_react__WEBPACK_IMPORTED_MODULE_2__","assign","mdxType","id","parentName","href","isMDXComponent"],"mappings":"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","file":"static/js/manual-docker-docker-deep-dive.f15598ee.js","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h2 {...{\n      \"id\": \"docker-deep-dive\"\n    }}>{`Docker Deep Dive`}</h2>\n    <hr></hr>\n    {\n      /* TOC */\n    }\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"#docker-deep-dive\"\n        }}>{`Docker Deep Dive`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"#docker-basics\"\n        }}>{`Docker Basics`}</a><ul parentName=\"li\">\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#-----working-with-multiple-images\"\n            }}>{`---- Working with Multiple Images`}</a></li>\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#-----packaging-a-customized-container\"\n            }}>{`---- Packaging A Customized Container`}</a></li>\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#-----container-commands\"\n            }}>{`---- Container Commands`}</a></li>\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#-----exposing-ports\"\n            }}>{`---- Exposing ports`}</a></li>\n        </ul></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"#the-dockerfile-builds-and-network-configuration\"\n        }}>{`The Dockerfile, Builds and Network Configuration`}</a><ul parentName=\"li\">\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#-----user-and-run\"\n            }}>{`---- USER and RUN`}</a></li>\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#-----env\"\n            }}>{`---- ENV`}</a></li>\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#-----cmd-vs-run\"\n            }}>{`---- CMD vs RUN`}</a></li>\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#-----entrypoint\"\n            }}>{`---- ENTRYPOINT`}</a></li>\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#-----expose\"\n            }}>{`---- EXPOSE`}</a></li>\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#-----container-volume-management\"\n            }}>{`---- Container Volume Management`}</a></li>\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#-----docker-network-list-and-inspect\"\n            }}>{`---- Docker Network: List and Inspect`}</a></li>\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#-----docker-network-assign-to-containers\"\n            }}>{`---- Docker Network: Assign to Containers`}</a></li>\n        </ul></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"#docker-commands-and-structures\"\n        }}>{`Docker commands and structures`}</a><ul parentName=\"li\">\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#-----inspect-container-processes\"\n            }}>{`---- Inspect Container Processes`}</a></li>\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#-----previous-container-management\"\n            }}>{`---- Previous Container Management`}</a></li>\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#-----controlling-port-exposure-on-containers\"\n            }}>{`---- Controlling Port Exposure on Containers`}</a></li>\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#-----naming-containers\"\n            }}>{`---- Naming Containers`}</a></li>\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#-----docker-events\"\n            }}>{`---- Docker Events`}</a></li>\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#-----managing-and-removing-base-images\"\n            }}>{`---- Managing and Removing Base Images`}</a></li>\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#-----saving-and-loading-docker-images\"\n            }}>{`---- Saving and Loading Docker Images`}</a></li>\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#-----image-history\"\n            }}>{`---- Image History`}</a></li>\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#-----take-control-of-our-tags\"\n            }}>{`---- Take Control of Our Tags`}</a></li>\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#-----pushing-to-docker-hub\"\n            }}>{`---- Pushing to Docker Hub`}</a></li>\n        </ul></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"#integration-and-use-cases\"\n        }}>{`Integration and Use Cases`}</a><ul parentName=\"li\">\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#-----building-a-web-farm-for-development-and-testing\"\n            }}>{`---- Building a Web Farm for Development and Testing`}</a></li>\n        </ul></li>\n    </ul>\n    {\n      /* /TOC */\n    }\n    <h2 {...{\n      \"id\": \"docker-basics\"\n    }}>{`Docker Basics`}</h2>\n    <h2 {...{\n      \"id\": \"working-with-multiple-images\"\n    }}>{`Working with Multiple Images`}</h2>\n    <pre><code parentName=\"pre\" {...{}}>{`# i: interactive, t: tty, d: daemon mode\ndocker run -i -t -d ubuntu:latest /bin/bash\n\n# to attach to the container and edit the container\ndocker attach container_name\n`}</code></pre>\n    <hr></hr>\n    <h2 {...{\n      \"id\": \"packaging-a-customized-container\"\n    }}>{`Packaging A Customized Container`}</h2>\n    <p>{`Once you are attached to a container, anytime you create files, it is now part of that container!`}</p>\n    <p>{`You can do all of your updates etc.`}</p>\n    <p>{`From here, we can commit to create a base image.`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`docker commit -m \"This is a new image\" -a \"dennis@presentcompany.co\" dok/ubusshd:v1\n`}</code></pre>\n    <p>{`Once this is commited, it is now put to a base container! Yay!`}</p>\n    <p>{`Let's create a simple Dockerfile to give some info about us.`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`# Dockerfile - example Ubuntu example with SSH already installed\nFROM ubuntu:latest\nMAINTAINER okeeffed <dennis@presentcompany.co>\nRUN apt-get update\nRUN apt-get -y install telnet openssh-server\n`}</code></pre>\n    <p>{`For building:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`# build a Dockerfile from the current location\ndocker build -t=\"dok/ubusshdonly:v2\" .\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"container-commands\"\n    }}>{`Container Commands`}</h2>\n    <pre><code parentName=\"pre\" {...{}}>{`top # shows the processes\ndocker logs container_name #shows history for container\ndocker exec container name /bin/cat /etc/profile\n\ndocker run container name /bin/bash -c \"while true; do echo HELLO; sleep 1; done\"\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"exposing-ports\"\n    }}>{`Exposing ports`}</h2>\n    <pre><code parentName=\"pre\" {...{}}>{`docker run -d -p 80:80 nginx:latest\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"the-dockerfile-builds-and-network-configuration\"\n    }}>{`The Dockerfile, Builds and Network Configuration`}</h2>\n    <h2 {...{\n      \"id\": \"user-and-run\"\n    }}>{`USER and RUN`}</h2>\n    <pre><code parentName=\"pre\" {...{}}>{`# Dockerfile based on the latest CentOS 7 image - non-priviledged user entry\nMAINTAINER dok@email.com\nFROM centos:latest\n\nRUN useradd -ms /bin/bash user\nUSER user\n`}</code></pre>\n    <p>{`To connect as the root, you just need to start the container and run `}<inlineCode parentName=\"p\">{`docker exec -u 0 -it sleepy_allen /bin/bash`}</inlineCode></p>\n    <p><strong parentName=\"p\">{`Order of Execution`}</strong></p>\n    <p>{`We had to run a super user command to add the User. Now let's say we want to run another command.`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`# Dockerfile based on the latest CentOS 7 image - non-priviledged user entry\nMAINTAINER dok@email.com\nFROM centos:latest\n\nRUN useradd -ms /bin/bash user\n\n# this will not give an issue - order of execution MATTERS\nRUN echo 'EXPORT 129.168.0.0/24' >> /etc/exports.list # making up exports.list\n\nUSER user\n\n# below will give an issue - order of execution MATTERS\nRUN echo 'EXPORT 129.168.0.0/24' >> /etc/exports.list # making up exports.list\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"env\"\n    }}>{`ENV`}</h2>\n    <p>{`Example, let's install Java through the Dockerfile!`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`# Dockerfile based on the latest CentOS 7 image - non-priviledged user entry\nMAINTAINER dok@email.com\nFROM centos:latest\n\nRUN useradd -ms /bin/bash user\n\n# this will not give an issue - order of execution MATTERS\nRUN echo 'EXPORT 129.168.0.0/24' >> /etc/exports.list # making up exports.list\n\nRUN yum update -y\nRUN yum install -y net-tools wget\n\nRUN cd ~ && wget --no-cookies --no-check-certificate --header \"url\"\n\nRUN yum localinstall -y ~/java_file.rpm\n\nUSER user\n\nRUN cd ~ && echo \"export JAVA_HOME=/usr/java/jdk1.8.0/jre\" >> /home/user/.bashrc\n\n# generates env variable for everyone\nENV JAVA_BIN /usr/java/jdk1.8.0/jre/bin\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"cmd-vs-run\"\n    }}>{`CMD vs RUN`}</h2>\n    <p>{`Command generally sets the default command to run when there is nothing specified when container starts up.`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`# Dockerfile based on the latest CentOS 7 image - non-priviledged user entry\nMAINTAINER dok@email.com\nFROM centos:latest\n\nRUN useradd -ms /bin/bash user\n\nCMD 'echo' 'This is a custom container message'\n\nUSER user\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"entrypoint\"\n    }}>{`ENTRYPOINT`}</h2>\n    <p>{`The entrypoint itself will ALWAYS be the concrete default application everytime that the container is created.`}</p>\n    <p><inlineCode parentName=\"p\">{`CMD`}</inlineCode>{` will only run when there is no argument, whereas `}<inlineCode parentName=\"p\">{`ENTRYPOINT`}</inlineCode>{` will always run.`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`FROM centos:latest\nMAINTAINER dok@email.com\n\nRUN useradd -ms /bin/bash user\n\nENTRYPOINT echo \"This command will display this message on EVERY container that is run from it\"\n\nUSER user\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"expose\"\n    }}>{`EXPOSE`}</h2>\n    <p>{`EXPOSE will allow us to expose our ports.`}</p>\n    <p>{`The follow image will allow us to build a webserver and run it from basics.`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`FROM centos:latest\nMAINTAINER dok@email.com\n\nRUN yum update -y\nRUN yum install -y httpd net-tools\n\nRUN echo \"This is a custom index file built during the image creation\" > /var/www/html/index.html\n\nENTRYPOINT apachectl \"-DFOREGROUND\"\n`}</code></pre>\n    <p>{`However, if we don't expose any ports, then using `}<inlineCode parentName=\"p\">{`-P`}</inlineCode>{` won't automatically expose those ports. We can still forcably expose ports using \\`docker run --name apacheweb -d -p 8080:80 container`}</p>\n    <p>{`To auto-expose, we can do this...`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`FROM centos:latest\nMAINTAINER dok@email.com\n\nRUN yum update -y\nRUN yum install -y httpd net-tools\n\nRUN echo \"This is a custom index file built during the image creation\" > /var/www/html/index.html\n\nEXPOSE 80\n\nENTRYPOINT apachectl \"-DFOREGROUND\"\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"container-volume-management\"\n    }}>{`Container Volume Management`}</h2>\n    <p>{`How do we work with mounts and file systems?`}</p>\n    <p>{`We can mount using `}<inlineCode parentName=\"p\">{`-v`}</inlineCode>{` for mounting volumes.`}</p>\n    <p>{`Scenario One: Create a directory at launchtime called `}<inlineCode parentName=\"p\">{`mydata`}</inlineCode></p>\n    <pre><code parentName=\"pre\" {...{}}>{`docker run -it --name voltest1 -v /mydata centos:latest /bin/bash\n# once logged in\ndf -h # shows that there is a mounted file\n\n# back from host OS terminal\ncd /var/lib/docker # will show us the volumes folder\n\n# if we docker inspect the container\n# it will show us the volume and the source\n`}</code></pre>\n    <p>{`Once we have things that are mounted, we can access them from the container and anything that we edit in the underlying host, we can see in the container!`}</p>\n    <p>{`We can't do this from the Dockerfile, because the base image is designed to be portable.`}</p>\n    <h2 {...{\n      \"id\": \"docker-network-list-and-inspect\"\n    }}>{`Docker Network: List and Inspect`}</h2>\n    <p>{`Thanks to Docker Swarm and Kubernetes, it has become easier to manage the Docker Network.`}</p>\n    <p>{`When you run a docker instance, it will auto pull the next available address.`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`# this will list all of the associated networks with the current host\ndocker network ls\n\ndocker network ls --no-trunc # to see the full address\n\ndocker network inspect bridge\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Creating Docker network configs`}</strong></p>\n    <p>{`To see things like a `}<inlineCode parentName=\"p\">{`man`}</inlineCode>{` page for docker, you essential just put dashes between multi-word commands.`}</p>\n    <p><inlineCode parentName=\"p\">{`man docker-network-create`}</inlineCode>{` will bring up the network create manual.`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`docker network create --subnet 10.1.0.0/24 --gateway 10.1.0.1 mybridge01 # /24 is everything in that network\n\ndocker network ls\n# the new bridge adapter is now there\n\n# to remove the bridge\ndocker network rm mybridge01\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"docker-network-assign-to-containers\"\n    }}>{`Docker Network: Assign to Containers`}</h2>\n    <pre><code parentName=\"pre\" {...{}}>{`# subnet itself can be 10.1.[1-254].[1-254] while ip-range is 10.1.4.[1-254]\n# that is class b and class c respectively\ndocker network create --subnet 10.1.0.0/16 --gateway 10.1.0.1 --ip-range=10.1.4.0/24 --driver=bridge --label=host4network bridge04\n`}</code></pre>\n    <p>{`If you then inspect the new above network config, it will have those settings within that inspect config.`}</p>\n    <p>{`So how do we now use this new network?`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`docker run -it --name nettest1 --net bridge04 --ip 10.1.4.100 centos:latest /bin/bash\n\n# if we docker inspect nettest1 | grep IP we can see the address set at 10.1.4.100\n`}</code></pre>\n    <hr></hr>\n    <h2 {...{\n      \"id\": \"docker-commands-and-structures\"\n    }}>{`Docker commands and structures`}</h2>\n    <h2 {...{\n      \"id\": \"inspect-container-processes\"\n    }}>{`Inspect Container Processes`}</h2>\n    <p>{`From the outside, we can run `}<inlineCode parentName=\"p\">{`docker exec`}</inlineCode>{` to get some more details about the container itself.`}</p>\n    <p><inlineCode parentName=\"p\">{`docker exec container_name /bin/ps aux | grep bash`}</inlineCode></p>\n    <p>{`We can use `}<inlineCode parentName=\"p\">{`docker top`}</inlineCode>{` to see the top command run on a container.`}</p>\n    <p><inlineCode parentName=\"p\">{`docker top container_name`}</inlineCode></p>\n    <p>{`Let's execute a command to install `}<inlineCode parentName=\"p\">{`sshd`}</inlineCode>{`. We could attach to container and do so, but we have a few options. Instead of attaching, we could do the following:`}</p>\n    <p><inlineCode parentName=\"p\">{`docker exec -i -t container_name /bin/bash`}</inlineCode></p>\n    <p>{`This will ensure that the container doesn't stop, but will actually run two instances of `}<inlineCode parentName=\"p\">{`bash`}</inlineCode>{`. We can verify this by looking at the container processes.`}</p>\n    <p>{`So far, this can give us a momentary snap shot.`}</p>\n    <p><strong parentName=\"p\">{`See the history of previous processes and performances`}</strong></p>\n    <p>{`We can use `}<inlineCode parentName=\"p\">{`docker stats`}</inlineCode>{` to see a live set of information for that container.`}</p>\n    <p><inlineCode parentName=\"p\">{`dock stats container_name`}</inlineCode></p>\n    <p>{`This will keep a view that is constantly updated to see what is going on.`}</p>\n    <h2 {...{\n      \"id\": \"previous-container-management\"\n    }}>{`Previous Container Management`}</h2>\n    <p>{`Just to see the previous containers not running with just their ids, we can run `}<inlineCode parentName=\"p\">{`docker ps -a -q`}</inlineCode></p>\n    <p>{`Of course, for removing older containers, we can `}<inlineCode parentName=\"p\">{`docker rm`}</inlineCode>{` previous containers.`}</p>\n    <p>{`We can also remove containers from the `}<inlineCode parentName=\"p\">{`/var/lib/docker`}</inlineCode>{` folder as the super user. If you do it this way, you want to ensure that you have `}<inlineCode parentName=\"p\">{`systemctl stop/restart docker`}</inlineCode>{` to ensure that there aren't any issues with Docker.`}</p>\n    <h2 {...{\n      \"id\": \"controlling-port-exposure-on-containers\"\n    }}>{`Controlling Port Exposure on Containers`}</h2>\n    <p>{`In this example, start up a nginx container in daemon mode without remapping the ports.`}</p>\n    <p>{`Again, we can inspect this container to find the IP etc. We know that we can get anything remapped to the localhost currently because there is no remapping.`}</p>\n    <p>{`In contrast, we can use `}<inlineCode parentName=\"p\">{`-P`}</inlineCode>{` to expose the ports and it will auto remap to high port value.`}</p>\n    <p><inlineCode parentName=\"p\">{`-p 8080:80`}</inlineCode>{` will be use defining the port that we want to expose it to.`}</p>\n    <p>{`If we want to define a certain interface eg. localhost...`}</p>\n    <p><inlineCode parentName=\"p\">{`docker run -itd -p 127.0.01:8081:80 nginx:latest`}</inlineCode>{` would ONLY allow localhost to access this site.`}</p>\n    <h2 {...{\n      \"id\": \"naming-containers\"\n    }}>{`Naming Containers`}</h2>\n    <p>{`To rename containers, we can run `}<inlineCode parentName=\"p\">{`docker rename currentname newname`}</inlineCode>{` - you can even rename container IDs, although there is likely no point.`}</p>\n    <p>{`You can also rename running containers!`}</p>\n    <h2 {...{\n      \"id\": \"docker-events\"\n    }}>{`Docker Events`}</h2>\n    <p>{`How can we monitor certain events?`}</p>\n    <p>{`Startup a few containers.`}</p>\n    <p>{`When we interact with them, certain events are generated.`}</p>\n    <p>{`If we run `}<inlineCode parentName=\"p\">{`docker events`}</inlineCode>{`, it will begin a program to wait and register certain events.`}</p>\n    <p>{`If we run `}<inlineCode parentName=\"p\">{`docker events --since '1h'`}</inlineCode>{`, we can then see all the events that have happened in the last hour.`}</p>\n    <p>{`If we run just `}<inlineCode parentName=\"p\">{`docker events`}</inlineCode>{` and run a `}<inlineCode parentName=\"p\">{`dok exec -it mycontainerid /bin/bash`}</inlineCode>{` command, we will then see those events registered. This is useful for debugging and monitoring the entire host.`}</p>\n    <p>{`We may not care about every event though. What happens if we just care about an attachment?`}</p>\n    <p><inlineCode parentName=\"p\">{`docker events --filter <keyword>`}</inlineCode>{` can then be used to filter for events we care about.`}</p>\n    <p><inlineCode parentName=\"p\">{`docker events --filter event=attach`}</inlineCode></p>\n    <p>{`We can also filter for multiple events with multiple `}<inlineCode parentName=\"p\">{`--filter event=<event>`}</inlineCode></p>\n    <h2 {...{\n      \"id\": \"managing-and-removing-base-images\"\n    }}>{`Managing and Removing Base Images`}</h2>\n    <p>{`If you remove an image by name, then if there is a double up of the same ID, it will just remove the named image - however an ID removal will warn you if they share the ID. They only way to remove all of them is to use the force `}<inlineCode parentName=\"p\">{`-f`}</inlineCode>{` flag.`}</p>\n    <h2 {...{\n      \"id\": \"saving-and-loading-docker-images\"\n    }}>{`Saving and Loading Docker Images`}</h2>\n    <p><strong parentName=\"p\">{`Saving`}</strong></p>\n    <p>{`When we pull images, we can pull from local or from Docker Hub. You will use base of an official release usually etc.`}</p>\n    <p>{`How can we manage our custom images? We can `}<inlineCode parentName=\"p\">{`tar`}</inlineCode>{` any file and migrate it to another compute etc.`}</p>\n    <p><inlineCode parentName=\"p\">{`docker commit containername centos:mine`}</inlineCode></p>\n    <p>{`This will allow us to save the image but remove the containers!`}</p>\n    <p>{`We can use`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`docker save --output centos.latest.tar centos:latest\n`}</code></pre>\n    <p>{`If you `}<inlineCode parentName=\"p\">{`ls`}</inlineCode>{` the tar file, it will give you details about the image/container.`}</p>\n    <p><strong parentName=\"p\">{`Restoring`}</strong></p>\n    <p><inlineCode parentName=\"p\">{`docker load --input centos.latest.tar`}</inlineCode></p>\n    <p>{`If we have `}<inlineCode parentName=\"p\">{`gzip`}</inlineCode>{` a tar file, we can also load it directly from the `}<inlineCode parentName=\"p\">{`.tar.gz`}</inlineCode>{` file.`}</p>\n    <h2 {...{\n      \"id\": \"image-history\"\n    }}>{`Image History`}</h2>\n    <p>{`How can we get the history of the base image?`}</p>\n    <p><inlineCode parentName=\"p\">{`docker history imagename`}</inlineCode></p>\n    <p>{`This will give us a list of commands etc.`}</p>\n    <h2 {...{\n      \"id\": \"take-control-of-our-tags\"\n    }}>{`Take Control of Our Tags`}</h2>\n    <p>{`Changes in the container is what is kept in storage layering.`}</p>\n    <p><inlineCode parentName=\"p\">{`docker tag imageid mine/centos:v1.0`}</inlineCode>{` - this will create a new image with the repo tag.`}</p>\n    <p><inlineCode parentName=\"p\">{`docker tag mine/centos:v1.0 dok.example.com/centos:v1.0b`}</inlineCode>{` will do the same.`}</p>\n    <h2 {...{\n      \"id\": \"pushing-to-docker-hub\"\n    }}>{`Pushing to Docker Hub`}</h2>\n    <p><inlineCode parentName=\"p\">{`docker login --username=name`}</inlineCode>{` throw in the password and you'll be authenticated.`}</p>\n    <p>{`One authenticated, `}<inlineCode parentName=\"p\">{`docker push image`}</inlineCode></p>\n    <p>{`Of course, to bring it back down, you will hit `}<inlineCode parentName=\"p\">{`docker pull name`}</inlineCode></p>\n    <hr></hr>\n    <h2 {...{\n      \"id\": \"integration-and-use-cases\"\n    }}>{`Integration and Use Cases`}</h2>\n    <h2 {...{\n      \"id\": \"building-a-web-farm-for-development-and-testing\"\n    }}>{`Building a Web Farm for Development and Testing`}</h2>\n    <p><em parentName=\"p\">{`Prerequisites`}</em></p>\n    <p>{`So far, we have not had a specific purpose for Docker containers. These following examples are for real world use cases.`}</p>\n    <p>{`Set up a web farm with two Apache web nodes on port 80 - both sharing one or more file systems.`}</p>\n    <p><em parentName=\"p\">{`Part One`}</em></p>\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  "],"sourceRoot":""}