(window.webpackJsonp=window.webpackJsonp||[]).push([[391],{"./manual/React/Context-API.md":function(e,n,t){"use strict";t.r(n),t.d(n,"default",function(){return s});var o=t("./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js"),a=(t("./node_modules/react/index.js"),t("./node_modules/@mdx-js/react/dist/index.es.js")),r={},c="wrapper";function s(e){var n=e.components,t=Object(o.a)(e,["components"]);return Object(a.b)(c,Object.assign({},r,t,{components:n,mdxType:"MDXLayout"}),Object(a.b)("h1",{id:"context-api"},"Context API"),Object(a.b)("h2",{id:"tldr"},"tl;dr"),Object(a.b)("p",null,"Create context and use the ",Object(a.b)("inlineCode",{parentName:"p"},"Provider")," and ",Object(a.b)("inlineCode",{parentName:"p"},"Consumer"),"."),Object(a.b)("pre",null,Object(a.b)("code",Object.assign({parentName:"pre"},{className:"language-javascript"}),"import React from 'react';\nconst ThemeContext = React.createContext(\n  /* optional default value */\n);\nconst App = props => (\n  <ThemeContext.Provider value={{ primaryColor: green }}>\n    {props.children}\n  </ThemeContext.Provider>\n);\n\nconst ThemedButton = () => (\n  <ThemeContext.Consumer>\n    {value => (\n      <Button primaryColor={{ value.primaryColor }}>\n        I'm button using context!\n      </Button>\n    )}\n  </ThemeContext.Consumer>\n);\n")))}s&&s===Object(s)&&Object.isExtensible(s)&&Object.defineProperty(s,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"MDXContent",filename:"manual/React/Context-API.md"}}),s.isMDXComponent=!0}}]);
//# sourceMappingURL=manual-react-context-api.101a1afd2417ec7a4a77.js.map