{"version":3,"sources":["/Users/dennis.okeeffe/Project-Imposter/developer-notes/manual/Stripe/Flask-Stripe-Configuration.md"],"names":["layoutProps","MDXLayout","MDXContent","_ref","components","props","Object","_Users_dennis_okeeffe_Project_Imposter_developer_notes_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","_mdx_js_react__WEBPACK_IMPORTED_MODULE_2__","assign","mdxType","id","parentName","href","className","isMDXComponent"],"mappings":"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","file":"static/js/manual-stripe-flask-stripe-configuration.b5c322e9.js","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"python-flask-stripe-configuration\"\n    }}>{`Python Flask Stripe Configuration`}</h1>\n    <p>{`A quick look at setting up the Stripe Python API with a Flask server.`}</p>\n    <h2 {...{\n      \"id\": \"resources\"\n    }}>{`Resources`}</h2>\n    <ol>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"https://stripe.com/docs/api?lang=python\"\n        }}>{`Stripe API`}</a></li>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"https://docs.dennisokeeffe.com/manual-flask-hello-world\"\n        }}>{`Flask Hello World Docs`}</a></li>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"https://github.com/stripe/stripe-python\"\n        }}>{`Stripe Python Github`}</a></li>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"https://www.w3schools.com/python/python_try_except.asp\"\n        }}>{`Python Try/Except`}</a></li>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"https://stackoverflow.com/questions/45412228/flask-sending-data-and-status-code-through-a-response-object/45412576\"\n        }}>{`Status codes in Flask`}</a></li>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"https://techtutorialsx.com/2017/01/07/flask-parsing-json-data/\"\n        }}>{`Parsing JSON data w/ Flask`}</a></li>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"https://github.com/theskumar/python-dotenv\"\n        }}>{`Python Dotenv Github`}</a></li>\n    </ol>\n    <h2 {...{\n      \"id\": \"getting-started\"\n    }}>{`Getting Started`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`mkdir python-flask-stripe && cd python-flask-stripe\n# pip or pip3 depending on env\npip3 install Flask\npip3 install stripe\npip3 install -U python-dotenv\ntouch .env server.py\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"setting-up-env\"\n    }}>{`Setting up .env`}</h2>\n    <p>{`Fetch your keys from Stripe and replace the following in the file:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`SK_TEST_KEY=sk... # replace sk...\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"writing-serverpy\"\n    }}>{`Writing server.py`}</h2>\n    <p>{`Set up the file to look like the following:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-python\"\n      }}>{`from flask import Flask\nfrom flask import request\nfrom dotenv import load_dotenv\nimport stripe\nimport os\n\n# Load local .env file and assign key\nload_dotenv()\nstripe.api_key = os.environ.get(\"SK_TEST_KEY\")\n\napp = Flask(__name__)\n\n@app.route(\"/api/charge\", methods = ['POST'])\ndef charge():\n    try:\n        content = request.get_json()\n        # Print what JSON comes in for the sake of checking\n        print(content)\n\n        resp = stripe.Charge.create(\n            amount=content['amount'],\n            currency=\"usd\",\n            source=\"tok_visa\",\n            receipt_email=content['receiptEmail'],\n        )\n        print(\"Success: %r\" % (resp))\n        return \"Successfully charged\", 201\n    except Exception as e:\n        print(e)\n        return \"Charge failed\", 500\n\nif __name__ == \"__main__\":\n    app.run()\n`}</code></pre>\n    <p>{`The above:`}</p>\n    <ol>\n      <li parentName=\"ol\">{`Fetches and sets OS env from .env file.`}</li>\n      <li parentName=\"ol\">{`Sets the Stripe API key.`}</li>\n      <li parentName=\"ol\">{`Sets a route `}<inlineCode parentName=\"li\">{`/api/charge`}</inlineCode>{` that only takes the `}<inlineCode parentName=\"li\">{`POST`}</inlineCode>{` method and creates a charge based on the amount we pass.`}</li>\n    </ol>\n    <h2 {...{\n      \"id\": \"running-the-server\"\n    }}>{`Running the server`}</h2>\n    <p><inlineCode parentName=\"p\">{`python3 server.py`}</inlineCode>{` will start the server on port 5000.`}</p>\n    <p>{`Running `}<inlineCode parentName=\"p\">{`http POST http://localhost:5000/api/charge amount:=600 receiptEmail=hello_flask@example.com`}</inlineCode>{` (using HTTPie) will come back with success. Check your Stripe dashboard and you will see a charge made for US\\\\$6.00! Hooray!`}</p>\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  "],"sourceRoot":""}