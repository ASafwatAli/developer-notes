{"version":3,"sources":["/Users/dennis.okeeffe/Project-Imposter/developer-notes/manual/Kubernetes/Kubernetes-Basics.md"],"names":["layoutProps","MDXLayout","MDXContent","_ref","components","props","Object","_Users_dennis_okeeffe_Project_Imposter_developer_notes_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","_mdx_js_react__WEBPACK_IMPORTED_MODULE_2__","assign","mdxType","id","parentName","className","align","isMDXComponent"],"mappings":"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","file":"static/js/manual-kubernetes-kubernetes-basics.8ca9b998.js","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"kubernetes-basics\"\n    }}>{`Kubernetes Basics`}</h1>\n    <h3 {...{\n      \"id\": \"node-architecture\"\n    }}>{`Node Architecture`}</h3>\n    <p>{`Within each node can be a collection of pods routed by iptables and within each pod are the Docker containers.`}</p>\n    <p>{`These containers can talk easily to each other using localhost and ports.`}</p>\n    <p>{`Each node also has a `}<inlineCode parentName=\"p\">{`kubelet`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`kube-proxy`}</inlineCode>{`. The `}<inlineCode parentName=\"p\">{`kubelet`}</inlineCode>{` talks to the master node and `}<inlineCode parentName=\"p\">{`kube-proxy`}</inlineCode>{` talks to the iptables.`}</p>\n    <p>{`A service itself can be like the load balancer. The service will be publicly available.`}</p>\n    <p>{`When we look deeper at a pod yaml file, we have the containers called as the specs.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-yaml\"\n      }}>{`# pod-helloworld.yml\napiVersion: v1\nkind: Pod\nmetadata:\n  name: nodehelloworld.example.com\n  labels:\n  app: helloworld\nspec:\n  # The containers are listed here\n  containers:\n  - name: k8s-demo\n    image: okeeffed/docker-demo\n    ports:\n    - containerPort: 3000\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"replication-controller\"\n    }}>{`Replication Controller`}</h3>\n    <h4 {...{\n      \"id\": \"scaling\"\n    }}>{`Scaling`}</h4>\n    <p>{`If your application is `}<inlineCode parentName=\"p\">{`stateless`}</inlineCode>{` you can horizontally scale it.`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Stateless = your appllication doesn't have a `}<inlineCode parentName=\"li\">{`state`}</inlineCode>{`, it doesn't write any local files / keeps local sessions. This prevents pods from falling out of sync.`}</li>\n      <li parentName=\"ul\">{`All traditional databases are `}<inlineCode parentName=\"li\">{`stateful`}</inlineCode></li>\n      <li parentName=\"ul\">{`Most `}<inlineCode parentName=\"li\">{`web applications`}</inlineCode>{` can be made stateless`}<ul parentName=\"li\">\n          <li parentName=\"ul\">{`Session management needs to be done outside the container`}</li>\n          <li parentName=\"ul\">{`Any file to be saved cannot be saved locally`}</li>\n        </ul></li>\n    </ul>\n    <p>{`If needed, you can use `}<inlineCode parentName=\"p\">{`volumes`}</inlineCode>{` to still run stateful apps.`}</p>\n    <p>{`Those stateful apps can't horizontally scale, but you can run them in a single container and vertically scale (allocate more CPU/Mem/Disk).`}</p>\n    <p>{`Scaling in Kubernetes can be done using the `}<inlineCode parentName=\"p\">{`Replication Controller`}</inlineCode>{`.`}</p>\n    <p>{`The replication controller will ensure a specified number of pod replicas will run at all times.`}</p>\n    <p>{`A pod created with the replica controller will automatically be replaced if they fail, get deleted or are terminated.`}</p>\n    <p>{`Using the replication controller is also recommended if you just want to make sure 1 pod is always running, even after reboots.`}</p>\n    <p>{`You can then run a replication controller with just 1 replica to ensure that it is always running.`}</p>\n    <p>{`To create a replication controller:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-yaml\"\n      }}>{`# rc-helloworld.yml\napiVersion: v1\nkind: ReplicationController # Changed from Pod\nmetadata:\n  name: helloworld-container\nspec: # Replation controller also has a spec\n  replicas: 2 # set two pod replicas\n  selector:  # select the app\n  app: helloworld\n  template:\n  # stand Pod metadata and spec\n  metadata:\n    name: nodehelloworld.example.com\n    labels:\n    app: helloworld\n  spec:\n    # The containers are listed here\n    containers:\n    - name: k8s-demo\n      image: okeeffed/docker-demo\n      ports:\n      - containerPort: 3000\n`}</code></pre>\n    <p>{`When this controller is created with `}<inlineCode parentName=\"p\">{`kubectl`}</inlineCode>{`, you will see that the two pods are created with a differing suffix.`}</p>\n    <p>{`Now we have horizontally scaled this pod.`}</p>\n    <p>{`If one of these pods is now deleted, the master node will automatically schedule a new one.`}</p>\n    <p>{`We can also scale this by using `}<inlineCode parentName=\"p\">{`kubectl scale --replicas=4 -f <replication-controller-name.yml>`}</inlineCode>{`.`}</p>\n    <p>{`We can also use it with the following:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`kubectl get rc # get replication controllers\n# assume helloworld-controller shows up\nkubectl scale --replicas=1 rc/helloworld-container\nkubectl get pods # will show only one pod remaining\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"deployments\"\n    }}>{`Deployments`}</h2>\n    <p>{`Replication Set is the next gen Replication Controller:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`It supports new selector that can do selection based on filtering according a set of values eg environment either \"dev\" or \"qa\"`}</li>\n      <li parentName=\"ul\">{`It's not only based on equality. You can do more complex things.`}</li>\n      <li parentName=\"ul\">{`This RS is used by the Deployment.`}</li>\n    </ul>\n    <p>{`A deployment is a declaration that allows you to do app `}<inlineCode parentName=\"p\">{`deployments`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`updates`}</inlineCode>{`.`}</p>\n    <p>{`When using the deployment object, you definte the `}<inlineCode parentName=\"p\">{`state`}</inlineCode>{` of your application. Kubernetes will then make sure the clusters matches your desired state.`}</p>\n    <p>{`Just using the replication controller or replication set might be cumbersome to deploy apps.`}</p>\n    <p>{`With a deployment object you can:`}</p>\n    <ol>\n      <li parentName=\"ol\">{`Create a deployment (e.g. deploying an app)`}</li>\n      <li parentName=\"ol\">{`Update a deployment (e.g. new version)`}</li>\n      <li parentName=\"ol\">{`Do rolling updates (zero downtime deployments)`}</li>\n      <li parentName=\"ol\">{`Roll back`}</li>\n      <li parentName=\"ol\">{`Pause/resume a deployment (ie rollout to only certain percentage of pods)`}</li>\n    </ol>\n    <p>{`An example of a deployment:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-yaml\"\n      }}>{`# deployment-helloworld.yml\napiVersion: extensions/v1beta1\nkind: Deployment # Changed from Pod\nmetadata:\n  name: helloworld-deployment\nspec: # Replation controller also has a spec\n  replicas: 3 # set two pod replicas\n  template:\n  # stand Pod metadata and spec\n  metadata:\n    labels:\n    app: helloworld\n  spec:\n    # The containers are listed here\n    containers:\n    - name: k8s-demo\n      image: okeeffed/docker-demo\n      ports:\n      - containerPort: 3000\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"useful-commands\"\n    }}>{`Useful commands`}</h3>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Command`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`kubectl get deployments`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Get info on current deployments`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`kubectl get rs`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Get info about the replica set`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`kubectl get pods --show-labels`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Get pods + labels attached to pods`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`kubectl rollout status deployment/helloworld-deployment`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Get deployment status`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`kubectl set image deployment/helloworld-deployment k8s-demo=k8s-demo:2`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Run k8s-demo with the image label version 2`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`kubectl edit deployment/helloworld-deployment`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Edit the deployment object`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`kubectl rollout status deployment/helloworld-deployment`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Get the status of the rollout`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`kubectl rollout history `}{`[deployment]`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Get the rollout history`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`kubectl rollout undo `}{`[deployment]`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Rollback to previous version`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`kubectl rollout undo `}{`[deployment]`}{` --to-revision=n`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Rollback to previous version`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <h3 {...{\n      \"id\": \"demo-deployment-notes\"\n    }}>{`Demo: Deployment notes`}</h3>\n    <p>{`Again, get pods will sho the pods with appended suffixes auto-determined by Kubernetes.`}</p>\n    <p>{`You can verify rollout status using the commands above.`}</p>\n    <h2 {...{\n      \"id\": \"services\"\n    }}>{`Services`}</h2>\n    <p>{`Pods themselves are very dynamic, they come and go on the Kubernetes cluster.`}</p>\n    <ul>\n      <li parentName=\"ul\">{`When using a `}<inlineCode parentName=\"li\">{`Replication Controller`}</inlineCode>{`, pods are termined and created during scaling operations.`}</li>\n      <li parentName=\"ul\">{`Wehn using `}<inlineCode parentName=\"li\">{`Deployments`}</inlineCode>{`, when updating the image version, pods are terminated and new pods take the place of older pods.`}</li>\n    </ul>\n    <p>{`That's why Pods should never be accessed directly, but always through a Service.`}</p>\n    <p>{`A service is the `}<inlineCode parentName=\"p\">{`logical bridge`}</inlineCode>{` between the \"mortal\" pods and other services or end-users.`}</p>\n    <p>{`When using the `}<inlineCode parentName=\"p\">{`kubectl expose`}</inlineCode>{` command, you create a service for you pod to be accessed externally.`}</p>\n    <p>{`Creating a service will create an endpoint for your pod(s):`}</p>\n    <ol>\n      <li parentName=\"ol\">{`A ClusterIP: a virtual IP address only reachable from within the cluster (this is default)`}</li>\n      <li parentName=\"ol\">{`A NodePort: a port that is the same on each node that is also reachable externally.`}</li>\n      <li parentName=\"ol\">{`A LoadBalancer: created by the Cloud provider that will route external traffic on every node on the NodePort`}</li>\n    </ol>\n    <p>{`The options shown only allow virtual IPs and ports.`}</p>\n    <p>{`There is also a possibility to use `}<inlineCode parentName=\"p\">{`DNS Names`}</inlineCode></p>\n    <p>{`The `}<inlineCode parentName=\"p\">{`ExternalName`}</inlineCode>{` can provide a DNS name for the service e.g. for service discovery using DNS.`}</p>\n    <p>{`This `}<strong parentName=\"p\">{`only`}</strong>{` works when the DNS add-on is enabled.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-yaml\"\n      }}>{`# helloworld-service.yml\napiVersion: v1\nkind: Service\nmetadata:\n  name: helloworld-service\nspec:\n  ports: # specify the ports the service uses\n  - port: 31001\n    nodePort: 31001\n    # name below defined from pod\n    targetPort: nodejs-port\n    protocol: TCP\n  selector:\n  # service for this app\n  app: helloworld\n  type: NodePort\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"tags\"\n    }}>{`Tags`}</h2>\n    <p>{`Similar to Labels for AWS`}</p>\n    <p>{`For example, you can label your objects.`}</p>\n    <p>{`For instance: Key could be `}<inlineCode parentName=\"p\">{`environment`}</inlineCode>{`, and the value could be `}<inlineCode parentName=\"p\">{`dev`}</inlineCode>{`/`}<inlineCode parentName=\"p\">{`staging`}</inlineCode>{`/`}<inlineCode parentName=\"p\">{`qa`}</inlineCode>{`/`}<inlineCode parentName=\"p\">{`prod`}</inlineCode>{`.`}</p>\n    <p>{`Maybe you could also tag the department that is comes from etc.`}</p>\n    <p>{`Labels are not unique. You can then use `}<inlineCode parentName=\"p\">{`label selectors`}</inlineCode>{` to match labels.`}</p>\n    <p>{`Eg. a particular pod can only run on a node label with \"evironment\" equals \"development\".`}</p>\n    <p>{`More complex matching: \"environment\" in \"development\" or \"qa\".`}</p>\n    <p>{`You can also use labels to tag nodes. Once tagged, you can use labels selectors to let pods only run on specific nodes.`}</p>\n    <p>{`There are two steps required to run a pod on a specific set of nodes:`}</p>\n    <ol>\n      <li parentName=\"ol\">{`First you tag the node`}</li>\n      <li parentName=\"ol\">{`Then you add a `}<inlineCode parentName=\"li\">{`nodeSelector`}</inlineCode>{` to your pod configuration`}</li>\n    </ol>\n    <pre><code parentName=\"pre\" {...{}}>{`kubectl label nodes node1 hardware=high-spec\nkubectl label nodes node1 hardware=low-spec\n`}</code></pre>\n    <p>{`Secondly, add a pod that uses those labels:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-yaml\"\n      }}>{`# pod-helloworld.yml\napiVersion: v1\nkind: Pod\nmetadata:\n  name: nodehelloworld.example.com\n  labels:\n  app: helloworld\nspec:\n  # The containers are listed here\n  containers:\n  - name: k8s-demo\n    image: okeeffed/docker-demo\n    ports:\n    - containerPort: 3000\n  nodeSelector:\n  hardware: high-spec\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"demo-using-tags\"\n    }}>{`Demo: Using tags`}</h3>\n    <p>{`It only really makes sense if you have multiple nodes (doesn't really make sense on minikube).`}</p>\n    <h2 {...{\n      \"id\": \"healthchecks\"\n    }}>{`Healthchecks`}</h2>\n    <p>{`If the application malfunctions, the pod and container may still be running but the application may no longer be running. This is where health checks come in.`}</p>\n    <p>{`Two types:`}</p>\n    <ol>\n      <li parentName=\"ol\">{`Running a command in the container periodically`}</li>\n      <li parentName=\"ol\">{`Periodic checks on a URL`}</li>\n    </ol>\n    <p>{`The typical prod application behind a load balancer should always have health checks implemented in some way to ensure availability and resiliency.`}</p>\n    <p>{`Below you can see where the healthcheck is. You can check the port or container port name.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-yaml\"\n      }}>{`# pod-helloworld.yml\napiVersion: v1\nkind: Pod\nmetadata:\n  name: nodehelloworld.example.com\n  labels:\n  app: helloworld\nspec:\n  # The containers are listed here\n  containers:\n  - name: k8s-demo\n    image: okeeffed/docker-demo\n    ports:\n    - containerPort: 3000\n    # ! This is the health check\n    livenessProbe:\n    httpGet:\n      path: /\n      port: 3000\n    initialDelaySeconds: 15\n    timeoutSeconds: 30\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"secrets\"\n    }}>{`Secrets`}</h2>\n    <p>{`A way to distribute credentials, keys, passwords or secret data to the pods.`}</p>\n    <p>{`Kubernetes itself uses this Secrets mechanism to provide the credentials to access the internal API.`}</p>\n    <p>{`You can use the same mechanism to provide secrets to your application.`}</p>\n    <p><inlineCode parentName=\"p\">{`secrets`}</inlineCode>{` is just one way to provide secrets that is native to Kubernetes. There are still other ways to do this.`}</p>\n    <h3 {...{\n      \"id\": \"how-to-use-them\"\n    }}>{`How to use them`}</h3>\n    <ul>\n      <li parentName=\"ul\">{`Use as env vars`}</li>\n      <li parentName=\"ul\">{`Use as a file in a pod`}<ul parentName=\"li\">\n          <li parentName=\"ul\">{`This requires volumes to be mounted`}</li>\n          <li parentName=\"ul\">{`In this volume you have files`}</li>\n          <li parentName=\"ul\">{`This can be use for things like dotenv files`}</li>\n        </ul></li>\n      <li parentName=\"ul\">{`You can use an external image to pull secrets (private image registry)`}</li>\n    </ul>\n    <p>{`Generating:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`echo -n \"root\" > ./username.txt\necho -n \"password\" > ./password.txt\nkubectl create secret generic db-user-pass --from-file=./username.txt --from-file=./password.txt\n# > secret \"db-user-pass\" created\n`}</code></pre>\n    <p>{`A secret can also be a SSH key or SSL cert.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`kubectl create secret generic ssl-cert --from-file=ssh-privatekey=~/.ssh/id_rsa --ssl-cert-=ssl-cert=mysslcert.crt\n`}</code></pre>\n    <p>{`To generate secrets using yaml defs:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-yaml\"\n      }}>{`apiVersion: v1\nkind: Secret\nmetadata:\n  name: db-secret\ntype: Opaque\ndata:\n  password: pwd\n  username: usr\n`}</code></pre>\n    <p>{`Then, you can generate it as base64 like so:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`echo -n \"password\" | base64\n# > pwd\n\nkubectl create -f secrets-db-secret.yml\n# > secret \"db-secret\" created\n`}</code></pre>\n    <p>{`To create a pod that uses secrets:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-yaml\"\n      }}>{`# pod-helloworld.yml w/ secrets\napiVersion: v1\nkind: Pod\nmetadata:\n  name: nodehelloworld.example.com\n  labels:\n  app: helloworld\nspec:\n  # The containers are listed here\n  containers:\n  - name: k8s-demo\n    image: okeeffed/docker-demo\n    ports:\n    - containerPort: 3000\n    # @@@ This are the envs\n    env:\n    - name: SECRET_USERNAME\n      valueFrom:\n      secretKeyRef:\n        name: db-secret\n        key: username\n    - name: SECRET_PASSWORD\n      [...]\n`}</code></pre>\n    <p>{`Alternatively when providing in a file:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-yaml\"\n      }}>{`# pod-helloworld.yml w/ secrets\napiVersion: v1\nkind: Pod\nmetadata:\n  name: nodehelloworld.example.com\n  labels:\n  app: helloworld\nspec:\n  # The containers are listed here\n  containers:\n  - name: k8s-demo\n  image: okeeffed/docker-demo\n  ports:\n  - containerPort: 3000\n  # @@@ This are the envs in a volume mount\n  volumeMounts:\n  - name: credvolume\n    mountPath: /etc/creds\n    readOnly: true\n  volumes:\n  - name: credvolume\n  secret:\n    secretName: db-secrets\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"demo-wordpress-secrets\"\n    }}>{`Demo: Wordpress Secrets`}</h3>\n    <p>{`This demo ends up creating a secrets file, a pod definition and a service to expose the wordpress pod.`}</p>\n    <p>{`However, note that deleting the current setup will result in a container restarting to maintain state, but when that happens the WordPress site has to be re-installed because the data was not saved. The solution for this will be in the volumes lab.`}</p>\n    <h2 {...{\n      \"id\": \"web-ui\"\n    }}>{`Web UI`}</h2>\n    <p>{`Kubernetes comes with a `}<inlineCode parentName=\"p\">{`Web UI`}</inlineCode>{` you can use instead of kubectl commands.`}</p>\n    <p>{`You can use it to:`}</p>\n    <ol>\n      <li parentName=\"ol\">{`Get an overview of running applications on your cluster`}</li>\n      <li parentName=\"ol\">{`Creating and modifying individual Kubernetes resources and workloads (like kubectl create and delete)`}</li>\n      <li parentName=\"ol\">{`Retrieve info on state or resources.`}</li>\n    </ol>\n    <p>{`You can reach this UI at `}<inlineCode parentName=\"p\">{`https://<kubernetes-master>/ui`}</inlineCode></p>\n    <p>{`If you cannot access it, you can install it manually:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`kubectl create -f https://rawgit.com/kubernetes/dashboard/master/src/deploy/kubernetes-dashboard.yaml\n# If the password is asked\nkubectl config view\n\n# If you're on minikube\nminikube dashboard # or --url for the url\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"demo-web-ui\"\n    }}>{`Demo: Web UI`}</h3>\n    <p>{`Using the web ui you can see some really interesting info and graphs on usage.`}</p>\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  "],"sourceRoot":""}