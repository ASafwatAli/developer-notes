(window.webpackJsonp=window.webpackJsonp||[]).push([[231],{"./manual/JavaScript/Express-Basics.md":function(e,t,n){"use strict";n.r(t),n.d(t,"default",function(){return s});var l=n("./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js"),a=(n("./node_modules/react/index.js"),n("./node_modules/@mdx-js/react/dist/index.es.js")),b={},r="wrapper";function s(e){var t=e.components,n=Object(l.a)(e,["components"]);return Object(a.b)(r,Object.assign({},b,n,{components:t,mdxType:"MDXLayout"}),Object(a.b)("h1",{id:"express-basics"},"EXPRESS BASICS"),Object(a.b)("p",null,"app.get('/blog', function (req, res) {\nres.send(posts);\n});"),Object(a.b)("p",null,'app.listen(3000, function(){\nconsole.log("The frontend server is running on port 3000!")\n});'),Object(a.b)("ol",{start:4},Object(a.b)("li",{parentName:"ol"},"Easily Debug Express")),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"Programming it iterative.")),Object(a.b)("p",null,"Nodemon not needing to stop and restart the server."),Object(a.b)("p",null,"Node-inspector is great for debugging."),Object(a.b)("p",null,"nodemon is like a replacement for the keyword node!"),Object(a.b)("p",null,"nodemon src/app //this will start a node.js app which restarts when changes are made."),Object(a.b)("ol",{start:5},Object(a.b)("li",{parentName:"ol"},"Interactive Debugging\nand explorative programming")),Object(a.b)("p",null,"node-debug src/app.js"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},Object(a.b)("p",{parentName:"li"},"this launches node inspector in debug mode.")),Object(a.b)("li",{parentName:"ul"},Object(a.b)("p",{parentName:"li"},"select in the body of the route to set a breakpoint.")),Object(a.b)("li",{parentName:"ul"},Object(a.b)("p",{parentName:"li"},"access in the Chrome debugger"))),Object(a.b)("p",null,"To put node-debugger and nodemon together."),Object(a.b)("p",null,"Do this:\nnode-inspector //run this by itself. Won't run the server."),Object(a.b)("p",null,"//in a seperate tab\nnodemon --debug src/app"),Object(a.b)("p",null,"You can do the same thing with the regular node command - but with no server restart"),Object(a.b)("p",null,"node --debug src/app"),Object(a.b)("p",null,"Passing the breakpoint to the nodemon comment"),Object(a.b)("p",null,"nodemon --debug-brk src/app"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"this will hit the debugger; statement.")),Object(a.b)("p",null,"QUESTIONS:"),Object(a.b)("ol",null,Object(a.b)("li",{parentName:"ol"},"When the debugger breaks in the application, you have access to all variables in the current application context in the browser\u2019s console.")),Object(a.b)("p",null,"A: True"),Object(a.b)("ol",{start:2},Object(a.b)("li",{parentName:"ol"},"What command will runs the node app in \u201cdebug\u201d mode?")),Object(a.b)("p",null,"A: nodemon --debug src"),Object(a.b)("ol",{start:3},Object(a.b)("li",{parentName:"ol"},Object(a.b)("inlineCode",{parentName:"li"},"node-inspector")," can be used to run node apps directly OR to debug node apps being run in debug mode")),Object(a.b)("p",null,"A: True"),Object(a.b)("ol",{start:4},Object(a.b)("li",{parentName:"ol"},"A breakpoint in a JavaScript application can be set by clicking on the line of a file in the browser console, or writing the ",Object(a.b)("strong",{parentName:"li"},"_")," statement directly into your code.")),Object(a.b)("p",null,"A: debugger;"),Object(a.b)("ol",{start:5},Object(a.b)("li",{parentName:"ol"},"The following command will break the debugger on the first line")),Object(a.b)("p",null,"A: nodemon --debug-brk src/app"),Object(a.b)("p",null,"/////////////////"),Object(a.b)("p",null,"PART 3: THE REQUEST AND RESPONSE OBJECTS IN EXPRESS"),Object(a.b)("pre",null,Object(a.b)("code",Object.assign({parentName:"pre"},{}),"6.  Requests and the\n    request objects\n")),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"Every route processes a request")),Object(a.b)("p",null,"So far, index AND blog route."),Object(a.b)("p",null,"The server catches the http request, then sends back as a JS request object"),Object(a.b)("p",null,"In the debug mode:"),Object(a.b)("p",null,"req.param in debug currently empty. Can run the paramter through our routes!"),Object(a.b)("p",null,"eg.\napp.get('/blog/:id', function(req, res) {\nres.send(post);\n});"),Object(a.b)("p",null,'Visiting .../blog/1 will set the id param to "1" etc'),Object(a.b)("p",null,'You can change the parameter names to be things like "title" or whatever you want.'),Object(a.b)("p",null,"QUESTIONS"),Object(a.b)("p",null,"////////////////////////"),Object(a.b)("ol",null,Object(a.b)("li",{parentName:"ol"},"The request object gives you access to the \u201chostname\u201d where the server is serving from.")),Object(a.b)("p",null,"A: True"),Object(a.b)("ol",{start:2},Object(a.b)("li",{parentName:"ol"},"Express route parameters allow you to request different data simply by changing the ","_","_","_","_",".")),Object(a.b)("p",null,"A: URL"),Object(a.b)("ol",{start:3},Object(a.b)("li",{parentName:"ol"},"The request object is like a JavaScript bundle of the incoming ",Object(a.b)("strong",{parentName:"li"},"_","_"))),Object(a.b)("p",null,"A: HTTP Request"),Object(a.b)("ol",{start:4},Object(a.b)("li",{parentName:"ol"},"The request object stores route parameters in the parameters object.")),Object(a.b)("p",null,"A: False"),Object(a.b)("pre",null,Object(a.b)("code",Object.assign({parentName:"pre"},{}),"7.  Responses and the\n    Response Object\n")),Object(a.b)("p",null,"The server sends back the response."),Object(a.b)("p",null,"This includes HTML and tons of behind the scenes info."),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"status codes, response info etc.")),Object(a.b)("p",null,"Using the debugger:"),Object(a.b)("p",null,"res //a lot going on"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"this gives a lot of return details")),Object(a.b)("p",null,"Add a question mark makes the route param optional."),Object(a.b)("p",null,"app.get('/blog/:title?', function(req, res) { //now we can access the blog page when it is empty\nvar title = req.params.title;\nif (title === undefined) {\nres.send(\"This page is under construction\");\n} else {\nvar post = posts","[title]",";\nres.send(post);\n}\n});"),Object(a.b)("p",null,"res.get"),Object(a.b)("p",null,"QUESTIONS"),Object(a.b)("ol",null,Object(a.b)("li",{parentName:"ol"},"In express the ","_","_","_"," character at the end of a route parameter indicates that it is optional.")),Object(a.b)("p",null,"A: ?"),Object(a.b)("ol",{start:2},Object(a.b)("li",{parentName:"ol"},"Status codes can be set manually on the response object.")),Object(a.b)("p",null,"A: True"),Object(a.b)("ol",{start:3},Object(a.b)("li",{parentName:"ol"},"The response object\u2019s ",Object(a.b)("strong",{parentName:"li"},"_")," method is used to turn templates into HTML.")),Object(a.b)("p",null,"A: render"),Object(a.b)("p",null,"/////////////////"),Object(a.b)("p",null,"PART 4: USING TEMPLATES WITH EXPRESS"),Object(a.b)("pre",null,Object(a.b)("code",Object.assign({parentName:"pre"},{}),"7.  What is Template\n    Rendering\n")),Object(a.b)("p",null,"Templates and template rendering at the core of an internet application framework."),Object(a.b)("p",null,"res.send can send things to the browser."),Object(a.b)("p",null,"Can also send back html."),Object(a.b)("p",null,"Basically a example.html that can dynamically injected"),Object(a.b)("p",null,"This templates are referred to as VIEWS."),Object(a.b)("p",null,"Popular template languages:"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"Handlebars"),Object(a.b)("li",{parentName:"ul"},"EJS (Embedded Javascript)"),Object(a.b)("li",{parentName:"ul"},"JADE // the most popular")),Object(a.b)("pre",null,Object(a.b)("code",Object.assign({parentName:"pre"},{}),"8.  What is Jade?\n")),Object(a.b)("p",null,"Most popular template engines for Node and Express."),Object(a.b)("p",null,"Why do they love it?"),Object(a.b)("p",null,"It quickly uses block indents for taggings."),Object(a.b)("p",null,"Examples:"),Object(a.b)("p",null,'doctype html\nhtml\nhead\ntitle Express Basics\nbody\nh1 This is an awesome HTML page, generated with Jade.\np.class1.class2.another-class //used to make classes\np.(class="test") Some content'),Object(a.b)("ol",{start:9},Object(a.b)("li",{parentName:"ol"},"Using Jade in your\nExpress App")),Object(a.b)("p",null,"How to configure your template to use Jade."),Object(a.b)("p",null,"//app.js"),Object(a.b)("p",null,"'use strict'; //throws error if you make one"),Object(a.b)("p",null,"var express = require('express'); //now can access all methods and properties of express through this.\nvar posts = require('./mock/posts.json');"),Object(a.b)("p",null,"var app = express();"),Object(a.b)("p",null,"//app variable will extended"),Object(a.b)("p",null,"//set up dev server"),Object(a.b)("p",null,"app.set('view engine', 'jade');\napp.set('views', ",Object(a.b)("strong",{parentName:"p"},"dirname + '/templates'); //"),"dirname important for different directories from where node starts"),Object(a.b)("p",null,"app.get('/', function(req, res) { //req and res are convention\nres.render('index');\n});"),Object(a.b)("p",null,"app.get('/blog/:title?', function(req, res) { //now we can access the blog page when it is empty\nvar title = req.params.title;\nif (title === undefined) {\nres.status(503); //good for bots to see this status codes\nres.send(\"This page is under construction\");\n} else {\nvar post = posts","[title]",";\nres.send(post);\n}\n});"),Object(a.b)("p",null,'app.listen(3000, function(){\nconsole.log("The frontend server is running on port 3000!");\n});'),Object(a.b)("p",null,"QUESTIONS"),Object(a.b)("ol",null,Object(a.b)("li",{parentName:"ol"},"In node.js, ",Object(a.b)("inlineCode",{parentName:"li"},"__dirname")," is a variable that gives you:")),Object(a.b)("p",null,"A: The path to the current file"),Object(a.b)("ol",{start:2},Object(a.b)("li",{parentName:"ol"},"Which of the following is NOT a conventional folder name for storing templates")),Object(a.b)("p",null,"A: jade"),Object(a.b)("ol",{start:3},Object(a.b)("li",{parentName:"ol"},Object(a.b)("p",{parentName:"li"},"In Jade's syntax, which of the following is NOT a correct assignment of the class ",Object(a.b)("inlineCode",{parentName:"p"},"nav")," to a ",Object(a.b)("inlineCode",{parentName:"p"},"div"))),Object(a.b)("li",{parentName:"ol"},Object(a.b)("p",{parentName:"li"},"The response object's ",Object(a.b)("inlineCode",{parentName:"p"},"render")," method takes the name of a template as its first parameter. The file extension (e.g. ",Object(a.b)("inlineCode",{parentName:"p"},".jade"),") is required."))),Object(a.b)("p",null,"A: False"),Object(a.b)("ol",{start:10},Object(a.b)("li",{parentName:"ol"},'The "response.render"\nMethod')),Object(a.b)("p",null,"So far, still only been using static data."),Object(a.b)("p",null,'doctype html\nhtml(lang="en")\nhead\ntitle Post Page\nbody\nsection.post\n.container.text-right\na(href="").text-faded view all\n.row\n.col-lg-8.col-lg-offset-2.text-center\nh2.section-heading I like to run!'),Object(a.b)("pre",null,Object(a.b)("code",Object.assign({parentName:"pre"},{}),"        hr.light\n\n        p.text-faded\n          | Fanny pack vinyl put a bird on it, small batch viral migas 8-bit meditation Shoreditch keytar health goth bespoke sustainable. Viral you probably haven't heard of them try-hard ennui, pug Thundercats selfies. Normcore cray health goth, umami ennui beard art party skateboard squid distillery.\n        .article\n          | Fanny pack vinyl put a bird on it, small batch viral migas 8-bit meditation Shoreditch keytar health goth bespoke sustainable. Viral you probably haven't heard of them try-hard ennui, pug Thundercats selfies. Normcore cray health goth, umami ennui beard art party skateboard squid distillery.\n")),Object(a.b)("p",null,"//app.js"),Object(a.b)("p",null,"'use strict'; //throws error if you make one"),Object(a.b)("p",null,"var express = require('express'); //now can access all methods and properties of express through this.\nvar posts = require('./mock/posts.json');"),Object(a.b)("p",null,"var app = express();"),Object(a.b)("p",null,"//app variable will extended"),Object(a.b)("p",null,"//set up dev server"),Object(a.b)("p",null,"app.set('view engine', 'jade');\napp.set('views', ",Object(a.b)("strong",{parentName:"p"},"dirname + '/templates'); //"),"dirname important for different directories from where node starts"),Object(a.b)("p",null,"app.get('/', function(req, res) { //req and res are convention\nres.render('index');\n});"),Object(a.b)("p",null,"app.get('/blog/:title?', function(req, res) { //now we can access the blog page when it is empty\nvar title = req.params.title;\nif (title === undefined) {\nres.status(503); //good for bots to see this status codes\nres.send(\"This page is under construction\");\n} else {\nvar post = posts","[title]"," || {};\nres.render('post', { post: post});\n}\n});"),Object(a.b)("p",null,'app.listen(3000, function(){\nconsole.log("The frontend server is running on port 3000!");\n});'),Object(a.b)("pre",null,Object(a.b)("code",Object.assign({parentName:"pre"},{}),"11. Scaffolding the\n    Templates\n")),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"Name your templates well"),Object(a.b)("li",{parentName:"ul"},"Helps everyone for their team")),Object(a.b)("p",null,"in the layout.jade"),Object(a.b)("p",null,"block content //add more renderhtml from here"),Object(a.b)("p",null,"To add the content from layout.jade:"),Object(a.b)("p",null,"extends ./layout.jade\nblock content //again"),Object(a.b)("pre",null,Object(a.b)("code",Object.assign({parentName:"pre"},{}),"12. Adding Partials\n")),Object(a.b)("p",null,"Too much code in the layout file with the nav etc."),Object(a.b)("p",null,"Solve by moving everything in a partial called nav."),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"make partials directors")),Object(a.b)("p",null,"First file will be ","_","nav.jade"),Object(a.b)("p",null,Object(a.b)("em",{parentName:"p"}," - not used on its own! Sass usually uses this ")," naming convention before."),Object(a.b)("p",null,"To use partial:\ninclude ./partials/","_","nav.jade"),Object(a.b)("p",null,"QUESTIONS:"),Object(a.b)("ol",null,Object(a.b)("li",{parentName:"ol"},"Keeping your project's views/templates folder well organized is an important part of scaling your project.")),Object(a.b)("p",null,"A: True"),Object(a.b)("ol",{start:2},Object(a.b)("li",{parentName:"ol"},"Jade uses the ",Object(a.b)("strong",{parentName:"li"},"_","_")," keyword to break chunks of content up for use across different files, or to be changed dynamically.")),Object(a.b)("p",null,"A: 'block' e.g. 'block content'"),Object(a.b)("ol",{start:3},Object(a.b)("li",{parentName:"ol"},"Partials are useful for including portions of a page like navbars and footers, that are the same, or almost the same across a number of pages.")),Object(a.b)("p",null,"A: True"),Object(a.b)("p",null,"/////////////////"),Object(a.b)("p",null,"PART 5: SERVING STATIC FILES IN EXPRESS"),Object(a.b)("pre",null,Object(a.b)("code",Object.assign({parentName:"pre"},{}),"        13. Setting Up the\nExpress Static Server\nin Development\n")),Object(a.b)("p",null,"Static files: sent to client as is eg. images etc."),Object(a.b)("p",null,"public dir:"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"Contains other folders:\ncss\njs\nimg etc.")),Object(a.b)("p",null,"Middleware:"),Object(a.b)("p",null,"Middleware the logic on how to handle the a request in between when made by client but before it arrives at the route."),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"included in Express.")),Object(a.b)("pre",null,Object(a.b)("code",Object.assign({parentName:"pre"},{}),"14. Add static to\n    the layout template\n")),Object(a.b)("p",null,"Adding styles and js is easy."),Object(a.b)("p",null,"In the head.jade template, punch through all of it."),Object(a.b)("p",null,"link() in the head.jade"),Object(a.b)("p",null,"script() in the body.jade at the end"),Object(a.b)("p",null,"Notes:"),Object(a.b)("p",null,"Convention for static files is that they're stored in public."),Object(a.b)("p",null,"/////////////////"),Object(a.b)("p",null,"PART 6: DOING MORE WITH EXPRESS"),Object(a.b)("pre",null,Object(a.b)("code",Object.assign({parentName:"pre"},{}),"15. Marking Lists\n    in Jade Templates\n")),Object(a.b)("p",null,"In the blog..."),Object(a.b)("p",null,"res.render('index')"),Object(a.b)("p",null,"We need files to be in an array from the .json file."),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"eg.")),Object(a.b)("p",null,"var postsLists = Object.keys(posts).map(function(value) {\nreturn posts","[value]",";\n});"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"map turns each array member into something that can have a callback function which can return the value.")),Object(a.b)("ol",{start:16},Object(a.b)("li",{parentName:"ol"},"Using logic in Jade")),Object(a.b)("p",null,"Powerful to just have one nav bar to edit and change."),Object(a.b)("p",null,"So in Jade..."),Object(a.b)("p",null,"if path === '/'\n//indent everything to be here"),Object(a.b)("p",null,"If something doesn't fit and is undefined, then it is false."),Object(a.b)("p",null,"in app.js\n//for the index"),Object(a.b)("p",null,"app.get('/', function(req, res) {\nvar path = req.path;\n//res.locals.path = path;\n//res.render('index');"),Object(a.b)("pre",null,Object(a.b)("code",Object.assign({parentName:"pre"},{}),"//OR\n\nres.render('index', {path: path});\n")),Object(a.b)("p",null,"});"),Object(a.b)("p",null,"QUESTIONS"),Object(a.b)("ol",null,Object(a.b)("li",{parentName:"ol"},"The ",Object(a.b)("inlineCode",{parentName:"li"},"res.locals")," object stores")),Object(a.b)("p",null,"A: Variables that will be accessible in the template"),Object(a.b)("ol",{start:2},Object(a.b)("li",{parentName:"ol"},"In the case of the Jade if block ",Object(a.b)("inlineCode",{parentName:"li"},"if path === '/'"),", the block's content would NOT be displayed in which of the following scenarios")),Object(a.b)("p",null,"A: /blog"),Object(a.b)("ol",{start:17},Object(a.b)("li",{parentName:"ol"},"Use Express Generator")),Object(a.b)("p",null,"We don't have to build an Express app from scratch"),Object(a.b)("p",null,"npm install -g express-generator"),Object(a.b)("p",null,"express ",Object(a.b)("inlineCode",{parentName:"p"},"<appname>")),Object(a.b)("p",null,"npm start //this is a script"),Object(a.b)("p",null,"Instead of templates, it has views"),Object(a.b)("pre",null,Object(a.b)("code",Object.assign({parentName:"pre"},{}),"18. REST APIs\n")),Object(a.b)("p",null,"app.get('/posts', function(req,res) {\nif (req.query.raw) {\nres.json(posts);\n} else {\nres.json(postLists);\n}\n});"),Object(a.b)("p",null,"To allow to access as a hash:"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"We can have /posts?raw=true")))}s&&s===Object(s)&&Object.isExtensible(s)&&Object.defineProperty(s,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"MDXContent",filename:"manual/JavaScript/Express-Basics.md"}}),s.isMDXComponent=!0}}]);
//# sourceMappingURL=manual-java-script-express-basics.101a1afd2417ec7a4a77.js.map