{"version":3,"sources":["/Users/dennis.okeeffe/Project-Imposter/developer-notes/manual/React-Notes/React-Portals.md"],"names":["layoutProps","MDXLayout","MDXContent","_ref","components","props","Object","_Users_dennis_okeeffe_Project_Imposter_developer_notes_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","_mdx_js_react__WEBPACK_IMPORTED_MODULE_2__","assign","mdxType","id","parentName","className","isMDXComponent"],"mappings":"2XAWMA,EAAc,GAGdC,EAAY,UACH,SAASC,EAATC,GAGZ,IAFDC,EAECD,EAFDC,WACGC,EACFC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,gBACD,OAAOG,OAAAE,EAAA,EAAAF,CAACL,EAADK,OAAAG,OAAA,GAAeT,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYM,QAAQ,cAC5EJ,OAAAE,EAAA,EAAAF,CAAA,KAAQ,CACNK,GAAM,iBADR,iBAGAL,OAAAE,EAAA,EAAAF,CAAA,KAAQ,CACNK,GAAM,eADR,gBAGAL,OAAAE,EAAA,EAAAF,CAAA,+KACAA,OAAAE,EAAA,EAAAF,CAAA,6FAAwFA,OAAAE,EAAA,EAAAF,CAAA,cAAYM,WAAW,KAAvB,aAAxF,KACAN,OAAAE,EAAA,EAAAF,CAAA,KAAQ,CACNK,GAAM,qBADR,qBAGAL,OAAAE,EAAA,EAAAF,CAAA,WAAKA,OAAAE,EAAA,EAAAF,CAAA,OAAAA,OAAAG,OAAA,CAAMG,WAAW,OAAU,CAC5BC,UAAa,wBADZ,icAiBTX,EAAWY,gBAAiB","file":"static/js/manual-react-notes-react-portals.5dd94c4b.js","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"react-portals\"\n    }}>{`React Portals`}</h1>\n    <h2 {...{\n      \"id\": \"why-portals\"\n    }}>{`Why Portals?`}</h2>\n    <p>{`A great use case for portals is for use with things like React modals. Anything that uses a stack context can obscure the css position for something like a modal.`}</p>\n    <p>{`The tl;dr is to make a React component a descendent of a HTML element other than `}<inlineCode parentName=\"p\">{`id=\"root\"`}</inlineCode>{`;`}</p>\n    <h2 {...{\n      \"id\": \"creating-a-portal\"\n    }}>{`Creating a Portal`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`import React from 'react';\nimport ReactDOM from 'react-dom';\n\nconst Modal = (props) => {\n  return ReactDOM.createPortal(\n    <div className=\"modal\">\n      <div className=\"modal-body\" />\n    </div>,\n    document.querySelector('#modal')\n  );\n};\n`}</code></pre>\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  "],"sourceRoot":""}