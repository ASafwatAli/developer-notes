(window.webpackJsonp=window.webpackJsonp||[]).push([[324],{"./manual/Nginx/Nginx-Nodejs-Docker.md":function(e,n,t){"use strict";t.r(n),t.d(n,"default",function(){return p});var o=t("./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js"),r=(t("./node_modules/react/index.js"),t("./node_modules/@mdx-js/react/dist/index.es.js")),a={},i="wrapper";function p(e){var n=e.components,t=Object(o.a)(e,["components"]);return Object(r.b)(i,Object.assign({},a,t,{components:n,mdxType:"MDXLayout"}),Object(r.b)("h1",{id:"docker-container-with-nginx-and-nodejs"},"Docker container with Nginx and Nodejs"),Object(r.b)("p",null,"First create a directory for both ",Object(r.b)("inlineCode",{parentName:"p"},"nginx")," and ",Object(r.b)("inlineCode",{parentName:"p"},"nodejs"),"."),Object(r.b)("p",null,"Within the Node folder, create a ",Object(r.b)("inlineCode",{parentName:"p"},"Dockerfile")," that contains the following to expose an app running on a particular port:"),Object(r.b)("pre",null,Object(r.b)("code",Object.assign({parentName:"pre"},{}),"FROM mhart/alpine-node\n# Pretend to copy the node app entry\n# from current folder\nCOPY index.js .\n# Expose the port that it is running on\nEXPOSE 3000\n# Run node - chances are you want pm2 here\nCMD node index.js\n")),Object(r.b)("p",null,"Then we can build with ",Object(r.b)("inlineCode",{parentName:"p"},"docker built -t foo/node .")),Object(r.b)("p",null,"After the build, run the container with port 3000 exposed using ",Object(r.b)("inlineCode",{parentName:"p"},"docker run -d -p 3000:3000 --name node-app foo/node"),"."),Object(r.b)("p",null,"First, we can test the Nginx latest container container using ",Object(r.b)("inlineCode",{parentName:"p"},"docker run --rm -p 8000:80 nginx")," to test out nginx:latest. This just removes the container after running."),Object(r.b)("p",null,"In the ",Object(r.b)("inlineCode",{parentName:"p"},"nginx")," folder, we can create ",Object(r.b)("inlineCode",{parentName:"p"},"default.conf")," file to overwrite the initial one."),Object(r.b)("p",null,"If settings are not defined below, Nginx will use the default values."),Object(r.b)("pre",null,Object(r.b)("code",Object.assign({parentName:"pre"},{}),"# config\nserver {\n    location / {\n        # host name first\n        proxy_set_header Host $host;\n        # extra headers for host IP address\n        proxy_set_header X-Real-IP $remote_addr;\n        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n        # passing protocol used (http | https)\n        proxy_set_header X-Forwarded-Proto $scheme;\n        # where to proxy reqs to\n        proxy_pass http://app:3000;\n    }\n}\n")),Object(r.b)("p",null,"For the Docker file."),Object(r.b)("pre",null,Object(r.b)("code",Object.assign({parentName:"pre"},{}),"FROM nginx\nCOPY default.cong /etc/nginx/conf.d/\n")),Object(r.b)("p",null,"Then build out this file using ",Object(r.b)("inlineCode",{parentName:"p"},"docker built -t foo/nginx ."),"."),Object(r.b)("p",null,"Running it: ",Object(r.b)("inlineCode",{parentName:"p"},"docker run -p 8000:80 --link node-app:app --name nginx-proxy foo/nginx")),Object(r.b)("p",null,"Since we expose 3000 for the node-app, we do not need to redo that."))}p&&p===Object(p)&&Object.isExtensible(p)&&Object.defineProperty(p,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"MDXContent",filename:"manual/Nginx/Nginx-Nodejs-Docker.md"}}),p.isMDXComponent=!0}}]);
//# sourceMappingURL=manual-nginx-nginx-nodejs-docker.101a1afd2417ec7a4a77.js.map