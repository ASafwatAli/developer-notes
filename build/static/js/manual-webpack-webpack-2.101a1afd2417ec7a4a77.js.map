{"version":3,"sources":["/Users/dennis.okeeffe/Project-Imposter/developer-notes/manual/Webpack/Webpack-2.md"],"names":["layoutProps","MDXLayout","MDXContent","_ref","components","props","Object","_Users_dennis_okeeffe_Project_Imposter_developer_notes_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","_mdx_js_react__WEBPACK_IMPORTED_MODULE_2__","assign","mdxType","id","parentName","href","align","className","isMDXComponent"],"mappings":"mXAWMA,EAAc,GAGdC,EAAY,UACH,SAASC,EAATC,GAGZ,IAFDC,EAECD,EAFDC,WACGC,EACFC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,gBACD,OAAOG,OAAAE,EAAA,EAAAF,CAACL,EAADK,OAAAG,OAAA,GAAeT,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYM,QAAQ,cAC5EJ,OAAAE,EAAA,EAAAF,CAAA,KAAQ,CACNK,GAAM,aADR,aAGAL,OAAAE,EAAA,EAAAF,CAAA,UACEA,OAAAE,EAAA,EAAAF,CAAA,MAAIM,WAAW,MAAKN,OAAAE,EAAA,EAAAF,CAAA,IAAAA,OAAAG,OAAA,CAAGG,WAAW,MAAS,CACvCC,KAAQ,eADQ,aAEEP,OAAAE,EAAA,EAAAF,CAAA,MAAIM,WAAW,MACjCN,OAAAE,EAAA,EAAAF,CAAA,MAAIM,WAAW,MAAKN,OAAAE,EAAA,EAAAF,CAAA,IAAAA,OAAAG,OAAA,CAAGG,WAAW,MAAS,CACvCC,KAAQ,0BADQ,2BAGpBP,OAAAE,EAAA,EAAAF,CAAA,MAAIM,WAAW,MAAKN,OAAAE,EAAA,EAAAF,CAAA,IAAAA,OAAAG,OAAA,CAAGG,WAAW,MAAS,CACvCC,KAAQ,8BADQ,8BAGpBP,OAAAE,EAAA,EAAAF,CAAA,MAAIM,WAAW,MAAKN,OAAAE,EAAA,EAAAF,CAAA,IAAAA,OAAAG,OAAA,CAAGG,WAAW,MAAS,CACvCC,KAAQ,uBADQ,uBAGpBP,OAAAE,EAAA,EAAAF,CAAA,MAAIM,WAAW,MAAKN,OAAAE,EAAA,EAAAF,CAAA,IAAAA,OAAAG,OAAA,CAAGG,WAAW,MAAS,CACvCC,KAAQ,oBADQ,oBAGpBP,OAAAE,EAAA,EAAAF,CAAA,MAAIM,WAAW,MAAKN,OAAAE,EAAA,EAAAF,CAAA,IAAAA,OAAAG,OAAA,CAAGG,WAAW,MAAS,CACvCC,KAAQ,sBADQ,sBAGpBP,OAAAE,EAAA,EAAAF,CAAA,MAAIM,WAAW,MAAKN,OAAAE,EAAA,EAAAF,CAAA,IAAAA,OAAAG,OAAA,CAAGG,WAAW,MAAS,CACvCC,KAAQ,uBADQ,uBAGpBP,OAAAE,EAAA,EAAAF,CAAA,MAAIM,WAAW,MAAKN,OAAAE,EAAA,EAAAF,CAAA,IAAAA,OAAAG,OAAA,CAAGG,WAAW,MAAS,CACvCC,KAAQ,yCADQ,6CAK1BP,OAAAE,EAAA,EAAAF,CAAA,8EACAA,OAAAE,EAAA,EAAAF,CAAA,UACEA,OAAAE,EAAA,EAAAF,CAAA,MAAIM,WAAW,MAAf,sBACAN,OAAAE,EAAA,EAAAF,CAAA,MAAIM,WAAW,MAAf,wDAEFN,OAAAE,EAAA,EAAAF,CAAA,KAAQ,CACNK,GAAM,wBADR,0BAGAL,OAAAE,EAAA,EAAAF,CAAA,oDACAA,OAAAE,EAAA,EAAAF,CAAA,aACEA,OAAAE,EAAA,EAAAF,CAAA,SAAOM,WAAW,SAChBN,OAAAE,EAAA,EAAAF,CAAA,MAAIM,WAAW,SACbN,OAAAE,EAAA,EAAAF,CAAA,KAAAA,OAAAG,OAAA,CAAIG,WAAW,MAAS,CACtBE,MAAS,OADX,iBAGAR,OAAAE,EAAA,EAAAF,CAAA,KAAAA,OAAAG,OAAA,CAAIG,WAAW,MAAS,CACtBE,MAAS,OADX,mBAKJR,OAAAE,EAAA,EAAAF,CAAA,SAAOM,WAAW,SAChBN,OAAAE,EAAA,EAAAF,CAAA,MAAIM,WAAW,SACbN,OAAAE,EAAA,EAAAF,CAAA,KAAAA,OAAAG,OAAA,CAAIG,WAAW,MAAS,CACtBE,MAAS,OADX,YAGAR,OAAAE,EAAA,EAAAF,CAAA,KAAAA,OAAAG,OAAA,CAAIG,WAAW,MAAS,CACtBE,MAAS,OADX,4BAIFR,OAAAE,EAAA,EAAAF,CAAA,MAAIM,WAAW,SACbN,OAAAE,EAAA,EAAAF,CAAA,KAAAA,OAAAG,OAAA,CAAIG,WAAW,MAAS,CACtBE,MAAS,OADX,OAGAR,OAAAE,EAAA,EAAAF,CAAA,KAAAA,OAAAG,OAAA,CAAIG,WAAW,MAAS,CACtBE,MAAS,OADX,oBAIFR,OAAAE,EAAA,EAAAF,CAAA,MAAIM,WAAW,SACbN,OAAAE,EAAA,EAAAF,CAAA,KAAAA,OAAAG,OAAA,CAAIG,WAAW,MAAS,CACtBE,MAAS,OADX,UAGAR,OAAAE,EAAA,EAAAF,CAAA,KAAAA,OAAAG,OAAA,CAAIG,WAAW,MAAS,CACtBE,MAAS,OADX,qBAMNR,OAAAE,EAAA,EAAAF,CAAA,KAAQ,CACNK,GAAM,4BADR,6BAGAL,OAAAE,EAAA,EAAAF,CAAA,aACEA,OAAAE,EAAA,EAAAF,CAAA,SAAOM,WAAW,SAChBN,OAAAE,EAAA,EAAAF,CAAA,MAAIM,WAAW,SACbN,OAAAE,EAAA,EAAAF,CAAA,KAAAA,OAAAG,OAAA,CAAIG,WAAW,MAAS,CACtBE,MAAS,OADX,WAGAR,OAAAE,EAAA,EAAAF,CAAA,KAAAA,OAAAG,OAAA,CAAIG,WAAW,MAAS,CACtBE,MAAS,OADX,kBAKJR,OAAAE,EAAA,EAAAF,CAAA,SAAOM,WAAW,SAChBN,OAAAE,EAAA,EAAAF,CAAA,MAAIM,WAAW,SACbN,OAAAE,EAAA,EAAAF,CAAA,KAAAA,OAAAG,OAAA,CAAIG,WAAW,MAAS,CACtBE,MAAS,OADX,SAGAR,OAAAE,EAAA,EAAAF,CAAA,KAAAA,OAAAG,OAAA,CAAIG,WAAW,MAAS,CACtBE,MAAS,OADX,kBAIFR,OAAAE,EAAA,EAAAF,CAAA,MAAIM,WAAW,SACbN,OAAAE,EAAA,EAAAF,CAAA,KAAAA,OAAAG,OAAA,CAAIG,WAAW,MAAS,CACtBE,MAAS,OADX,UAGAR,OAAAE,EAAA,EAAAF,CAAA,KAAAA,OAAAG,OAAA,CAAIG,WAAW,MAAS,CACtBE,MAAS,OADX,wCAIFR,OAAAE,EAAA,EAAAF,CAAA,MAAIM,WAAW,SACbN,OAAAE,EAAA,EAAAF,CAAA,KAAAA,OAAAG,OAAA,CAAIG,WAAW,MAAS,CACtBE,MAAS,OADX,iBAGAR,OAAAE,EAAA,EAAAF,CAAA,KAAAA,OAAAG,OAAA,CAAIG,WAAW,MAAS,CACtBE,MAAS,OADX,6CAIFR,OAAAE,EAAA,EAAAF,CAAA,MAAIM,WAAW,SACbN,OAAAE,EAAA,EAAAF,CAAA,KAAAA,OAAAG,OAAA,CAAIG,WAAW,MAAS,CACtBE,MAAS,OADX,qBAGAR,OAAAE,EAAA,EAAAF,CAAA,KAAAA,OAAAG,OAAA,CAAIG,WAAW,MAAS,CACtBE,MAAS,OADX,qBAIFR,OAAAE,EAAA,EAAAF,CAAA,MAAIM,WAAW,SACbN,OAAAE,EAAA,EAAAF,CAAA,KAAAA,OAAAG,OAAA,CAAIG,WAAW,MAAS,CACtBE,MAAS,OADX,WAGAR,OAAAE,EAAA,EAAAF,CAAA,KAAAA,OAAAG,OAAA,CAAIG,WAAW,MAAS,CACtBE,MAAS,OADX,mEAMNR,OAAAE,EAAA,EAAAF,CAAA,2CAAsCA,OAAAE,EAAA,EAAAF,CAAA,cAAYM,WAAW,KAAvB,QAAtC,iBACAN,OAAAE,EAAA,EAAAF,CAAA,WAAKA,OAAAE,EAAA,EAAAF,CAAA,OAAAA,OAAAG,OAAA,CAAMG,WAAW,OAAU,IAA3B,4NAYLN,OAAAE,EAAA,EAAAF,CAAA,gKACAA,OAAAE,EAAA,EAAAF,CAAA,0EACAA,OAAAE,EAAA,EAAAF,CAAA,UACEA,OAAAE,EAAA,EAAAF,CAAA,MAAIM,WAAW,MAAf,8BACAN,OAAAE,EAAA,EAAAF,CAAA,MAAIM,WAAW,MAAf,wDACAN,OAAAE,EAAA,EAAAF,CAAA,MAAIM,WAAW,MAAf,yGACAN,OAAAE,EAAA,EAAAF,CAAA,MAAIM,WAAW,MAAf,8DAEFN,OAAAE,EAAA,EAAAF,CAAA,WACAA,OAAAE,EAAA,EAAAF,CAAA,KAAQ,CACNK,GAAM,qBADR,sBAGAL,OAAAE,EAAA,EAAAF,CAAA,UACEA,OAAAE,EAAA,EAAAF,CAAA,MAAIM,WAAW,MAAf,0IAA+JN,OAAAE,EAAA,EAAAF,CAAA,cAAYM,WAAW,MAAvB,gBAA/J,KAA8NN,OAAAE,EAAA,EAAAF,CAAA,cAAYM,WAAW,MAAvB,cAA9N,QAA8RN,OAAAE,EAAA,EAAAF,CAAA,cAAYM,WAAW,MAAvB,oBAA9R,gCACAN,OAAAE,EAAA,EAAAF,CAAA,MAAIM,WAAW,MAAf,qCACAN,OAAAE,EAAA,EAAAF,CAAA,MAAIM,WAAW,MAAf,+JAAoLN,OAAAE,EAAA,EAAAF,CAAA,cAAYM,WAAW,MAAvB,OAApL,QAA6ON,OAAAE,EAAA,EAAAF,CAAA,cAAYM,WAAW,MAAvB,QAA7O,MAAqSN,OAAAE,EAAA,EAAAF,CAAA,cAAYM,WAAW,MAAvB,QAArS,kDAEFN,OAAAE,EAAA,EAAAF,CAAA,WAAKA,OAAAE,EAAA,EAAAF,CAAA,OAAAA,OAAAG,OAAA,CAAMG,WAAW,OAAU,CAC5BG,UAAa,wBADZ,uTAkBLT,OAAAE,EAAA,EAAAF,CAAA,KAAQ,CACNK,GAAM,kBADR,mBAGAL,OAAAE,EAAA,EAAAF,CAAA,UACEA,OAAAE,EAAA,EAAAF,CAAA,MAAIM,WAAW,MAAf,2BAAgDN,OAAAE,EAAA,EAAAF,CAAA,cAAYM,WAAW,MAAvB,OAAhD,QAAyGN,OAAAE,EAAA,EAAAF,CAAA,cAAYM,WAAW,MAAvB,SAAzG,kMACAN,OAAAE,EAAA,EAAAF,CAAA,MAAIM,WAAW,MAAf,mQACAN,OAAAE,EAAA,EAAAF,CAAA,MAAIM,WAAW,MAAf,0BAA+CN,OAAAE,EAAA,EAAAF,CAAA,cAAYM,WAAW,MAAvB,uBAA/C,+EAA+LN,OAAAE,EAAA,EAAAF,CAAA,cAAYM,WAAW,MAAvB,OAA/L,YAA4PN,OAAAE,EAAA,EAAAF,CAAA,cAAYM,WAAW,MAAvB,UAA5P,4FAA4YN,OAAAE,EAAA,EAAAF,CAAA,cAAYM,WAAW,MAAvB,UAA5Y,MAAscN,OAAAE,EAAA,EAAAF,CAAA,cAAYM,WAAW,MAAvB,WAAtc,qBAAghBN,OAAAE,EAAA,EAAAF,CAAA,cAAYM,WAAW,MAAvB,WAAhhB,mEAAwoBN,OAAAE,EAAA,EAAAF,CAAA,cAAYM,WAAW,MAAvB,aAAxoB,eAA8sBN,OAAAE,EAAA,EAAAF,CAAA,cAAYM,WAAW,MAAvB,UAA9sB,mCAAqyBN,OAAAE,EAAA,EAAAF,CAAA,cAAYM,WAAW,MAAvB,aAAryB,UAEFN,OAAAE,EAAA,EAAAF,CAAA,WAAKA,OAAAE,EAAA,EAAAF,CAAA,OAAAA,OAAAG,OAAA,CAAMG,WAAW,OAAU,CAC5BG,UAAa,wBADZ,+hBAyBLT,OAAAE,EAAA,EAAAF,CAAA,KAAQ,CACNK,GAAM,oBADR,qBAGAL,OAAAE,EAAA,EAAAF,CAAA,uBAAkBA,OAAAE,EAAA,EAAAF,CAAA,cAAYM,WAAW,KAAvB,wBAAlB,QAA2FN,OAAAE,EAAA,EAAAF,CAAA,cAAYM,WAAW,KAAvB,cAA3F,KACAN,OAAAE,EAAA,EAAAF,CAAA,UACEA,OAAAE,EAAA,EAAAF,CAAA,MAAIM,WAAW,MAAKN,OAAAE,EAAA,EAAAF,CAAA,cAAYM,WAAW,MAAvB,wBAApB,kDACAN,OAAAE,EAAA,EAAAF,CAAA,MAAIM,WAAW,MAAf,mDAAwEN,OAAAE,EAAA,EAAAF,CAAA,cAAYM,WAAW,MAAvB,cAAxE,mKAEFN,OAAAE,EAAA,EAAAF,CAAA,WAAKA,OAAAE,EAAA,EAAAF,CAAA,OAAAA,OAAAG,OAAA,CAAMG,WAAW,OAAU,CAC5BG,UAAa,wBADZ,46BAqCLT,OAAAE,EAAA,EAAAF,CAAA,WACAA,OAAAE,EAAA,EAAAF,CAAA,KAAQ,CACNK,GAAM,qBADR,sBAGAL,OAAAE,EAAA,EAAAF,CAAA,sEACAA,OAAAE,EAAA,EAAAF,CAAA,0DAAqDA,OAAAE,EAAA,EAAAF,CAAA,cAAYM,WAAW,KAAvB,OAArD,gIACAN,OAAAE,EAAA,EAAAF,CAAA,oDACAA,OAAAE,EAAA,EAAAF,CAAA,WAAKA,OAAAE,EAAA,EAAAF,CAAA,OAAAA,OAAAG,OAAA,CAAMG,WAAW,OAAU,CAC5BG,UAAa,wBADZ,+RAYLT,OAAAE,EAAA,EAAAF,CAAA,sFAAiFA,OAAAE,EAAA,EAAAF,CAAA,cAAYM,WAAW,KAAvB,UAAjF,iCACAN,OAAAE,EAAA,EAAAF,CAAA,oCAA+BA,OAAAE,EAAA,EAAAF,CAAA,cAAYM,WAAW,KAAvB,WAA/B,uDACAN,OAAAE,EAAA,EAAAF,CAAA,+BAA0BA,OAAAE,EAAA,EAAAF,CAAA,cAAYM,WAAW,KAAvB,mBAA1B,+DACAN,OAAAE,EAAA,EAAAF,CAAA,WACAA,OAAAE,EAAA,EAAAF,CAAA,KAAQ,CACNK,GAAM,uCADR,yCAGAL,OAAAE,EAAA,EAAAF,CAAA,sJAAiJA,OAAAE,EAAA,EAAAF,CAAA,cAAYM,WAAW,KAAvB,QAAjJ,KACAN,OAAAE,EAAA,EAAAF,CAAA,WAAKA,OAAAE,EAAA,EAAAF,CAAA,OAAAA,OAAAG,OAAA,CAAMG,WAAW,OAAU,CAC5BG,UAAa,wBADZ,qSAeTb,EAAWc,gBAAiB","file":"static/js/manual-webpack-webpack-2.9c85df26.js","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"webpack-2\"\n    }}>{`Webpack-2`}</h1>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"#webpack-2\"\n        }}>{`Webpack-2`}</a><ul parentName=\"li\">\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#10-webpack-in-action\"\n            }}>{`1.0: Webpack in Action`}</a></li>\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#11-webpack-configuration\"\n            }}>{`1.1 Webpack Configuration`}</a></li>\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#20-module-loaders\"\n            }}>{`2.0 Module Loaders`}</a></li>\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#21-css-loaders\"\n            }}>{`2.1 CSS Loaders`}</a></li>\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#22-image-loaders\"\n            }}>{`2.2 Image Loaders`}</a></li>\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#30-code-splitting\"\n            }}>{`3.0 Code Splitting`}</a></li>\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"#44-code-splitting-in-the-real-world\"\n            }}>{`4.4: Code Splitting in the real world`}</a></li>\n        </ul></li>\n    </ul>\n    <p>{`The concept is to have many js files that are small and specific.`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Webpack bundles JS`}</li>\n      <li parentName=\"ul\">{`CSS and Babelifying is just a side effect we can do`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"10-webpack-in-action\"\n    }}>{`1.0: Webpack in Action`}</h2>\n    <p>{`Module Systems and their Common Syntax:`}</p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Module System`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Common Syntax`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`CommonJS`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`require, module.exports`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`AMD`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`require, define`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`ES2015`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`import, export`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <h2 {...{\n      \"id\": \"11-webpack-configuration\"\n    }}>{`1.1 Webpack Configuration`}</h2>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Command`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`What it does`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`entry`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Specify entry`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`output`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Specify where the file is saved too`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`output > path`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Specify the file path (must be absolute)`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`output > filename`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Output file name`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`webpack`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`allows you to install globally (instead, opt for npm script)`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <p>{`For defining paths, we can use `}<inlineCode parentName=\"p\">{`path`}</inlineCode>{` from NodeJS.`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`const path = require('path');\n\nconst config = {\n    entry: './src/index.js',\n    output: {\n        path: path.resolve(__dirname, 'build'),\n        filename: 'bundle.js'\n    }\n};\n\nmodule.exports = config;\n`}</code></pre>\n    <p>{`However, you'll notice if you have two small files that combining them into an output looks far larger than those two files - so what is happening?`}</p>\n    <p>{`Behind the scenes, Webpack is doing similar to the following:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`new array has been created`}</li>\n      <li parentName=\"ul\">{`two functions within contain code from the two files`}</li>\n      <li parentName=\"ul\">{`entry point index is defined which points to the index of the array that was given as the entry point`}</li>\n      <li parentName=\"ul\">{`if it needs other functions, it calls them from the array`}</li>\n    </ul>\n    <hr></hr>\n    <h2 {...{\n      \"id\": \"20-module-loaders\"\n    }}>{`2.0 Module Loaders`}</h2>\n    <ul>\n      <li parentName=\"ul\">{`Designed to do some preprocessing before they are put into the final file eg dealing with Babel etc. - The example with Babel requires `}<inlineCode parentName=\"li\">{`babel-loader`}</inlineCode>{`, `}<inlineCode parentName=\"li\">{`babel-core`}</inlineCode>{` and `}<inlineCode parentName=\"li\">{`babel-preset-env`}</inlineCode>{` (the env being the preset).`}</li>\n      <li parentName=\"ul\">{`so how do we add this to Webpack?`}</li>\n      <li parentName=\"ul\">{`previously, we referred to loaders as opposed to rules and modules, but this is how it is in Webpack 2. - rules are to do with configuration - rules have a `}<inlineCode parentName=\"li\">{`use`}</inlineCode>{` and `}<inlineCode parentName=\"li\">{`test`}</inlineCode>{` - `}<inlineCode parentName=\"li\">{`test`}</inlineCode>{` is a regex to select which file to apply too`}</li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`const config = {\n    entry: './src/index.js',\n    output: {\n        path: path.resolve(__dirname, 'build'),\n        filename: 'bundle.js'\n    },\n    module: {\n        rules: [\n            {\n                use: 'babel-loader',\n                test: /\\\\.js$/\n            }\n        ]\n    }\n};\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"21-css-loaders\"\n    }}>{`2.1 CSS Loaders`}</h2>\n    <ul>\n      <li parentName=\"ul\">{`There are basically the `}<inlineCode parentName=\"li\">{`CSS`}</inlineCode>{` and `}<inlineCode parentName=\"li\">{`Style`}</inlineCode>{` loaders - style loader takes CSS imports and adds them to the HTML Document - CSS loader knows how to deal with CSS imports - Adding in more rules will allow us to make use of these loaders`}</li>\n      <li parentName=\"ul\">{`Once you've compiled Webpack, what is it that these loaders are doing? - By default, it actually injects the CSS into a head tag, but how? - There is actually Javascript where the Style module actually takes that CSS and manually injects that into the CSS`}</li>\n      <li parentName=\"ul\">{`We use another library `}<inlineCode parentName=\"li\">{`Extract Text Plugin`}</inlineCode>{` to ensure that these CSS files get output into their own file - Instead of `}<inlineCode parentName=\"li\">{`use`}</inlineCode>{`, we use `}<inlineCode parentName=\"li\">{`loader`}</inlineCode>{` (even though they are similar) but since the plugin is used in a way, we need to define `}<inlineCode parentName=\"li\">{`loader`}</inlineCode>{` - `}<inlineCode parentName=\"li\">{`plugins`}</inlineCode>{` are different to `}<inlineCode parentName=\"li\">{`loaders`}</inlineCode>{` and have the ability to stop files from ending up in the final `}<inlineCode parentName=\"li\">{`bundle.js`}</inlineCode>{` file - the `}<inlineCode parentName=\"li\">{`plugin`}</inlineCode>{` that we have will now create a `}<inlineCode parentName=\"li\">{`style.css`}</inlineCode>{` file`}</li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`const config = {\n    entry: './src/index.js',\n    output: {\n        path: path.resolve(__dirname, 'build'),\n        filename: 'bundle.js'\n    },\n    module: {\n        rules: [\n            {\n                use: 'babel-loader',\n                test: /\\\\.js$/\n            },\n            {\n                loader: ExtractTextPlugin.extract({\n                    loader: 'css-loader'\n                }),\n                test: /\\\\.css$/\n            }\n        ]\n    },\n    plugins: [new ExtractTextPlugin('style.css')]\n};\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"22-image-loaders\"\n    }}>{`2.2 Image Loaders`}</h2>\n    <p>{`We can use `}<inlineCode parentName=\"p\">{`image-webpack-loader`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`url-loader`}</inlineCode>{`.`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`image-webpack-loader`}</inlineCode>{` will compact down the file size automatically`}</li>\n      <li parentName=\"ul\">{`The result of a compact image is then taken and `}<inlineCode parentName=\"li\">{`url-loader`}</inlineCode>{` will behave differently depending on the size of the image. - options, if larger than 40000, save it as a different file, else keep it as part of the js file`}</li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`const config = {\n    entry: './src/index.js',\n    output: {\n        path: path.resolve(__dirname, 'build'),\n        filename: 'bundle.js',\n        // publicPath for files not saved to bundle\n        publicPath: 'build/'\n    },\n    module: {\n        rules: [\n            {\n                use: 'babel-loader',\n                test: /\\\\.js$/\n            },\n            {\n                loader: ExtractTextPlugin.extract({\n                    loader: 'css-loader'\n                }),\n                test: /\\\\.css$/\n            },\n            {\n                test: /\\\\.(jpe?g|png|gif|svg)$/,\n                use: [\n                    {\n                        loader: 'url-loader',\n                        options: { limit: 40000 }\n                    },\n                    'image-webpack-loader'\n                ]\n            }\n        ]\n    },\n    plugins: [new ExtractTextPlugin('style.css')]\n};\n`}</code></pre>\n    <hr></hr>\n    <h2 {...{\n      \"id\": \"30-code-splitting\"\n    }}>{`3.0 Code Splitting`}</h2>\n    <p>{`Code splitting is one of the big wins with using Webpack.`}</p>\n    <p>{`Code spltting is the art of creating a single `}<inlineCode parentName=\"p\">{`.js`}</inlineCode>{` file and then being able to split that code into several individual files and know when to load up these different modules.`}</p>\n    <p>{`To import a module only after an event:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`const button = document.createElement('button');\nbutton.innerText = 'Click me';\nbutton.onclick = () => {\n    // if this below has import statements of it's own\n    // it will also bring in this code\n    System.import('./image_view');\n};\n\ndocument.body.appendChild(button);\n`}</code></pre>\n    <p>{`The above example was to see what happens, but really we can just use the `}<inlineCode parentName=\"p\">{`import`}</inlineCode>{` statement to do this for us.`}</p>\n    <p>{`You can see this on the `}<inlineCode parentName=\"p\">{`network`}</inlineCode>{` tab on Google Dev Tools to see this all in action.`}</p>\n    <p>{`Anything that uses `}<inlineCode parentName=\"p\">{`System.import()`}</inlineCode>{` it will split up our call for different modules to import.`}</p>\n    <hr></hr>\n    <h2 {...{\n      \"id\": \"44-code-splitting-in-the-real-world\"\n    }}>{`4.4: Code Splitting in the real world`}</h2>\n    <p>{`The CommonChunksPlugin will look for common code in the bundles and split them into seperate files depending on the value you pass in for `}<inlineCode parentName=\"p\">{`name`}</inlineCode>{`.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`...\n\nplugins: [\n    new webpack.optimize.CommonsChunkPlugin({\n        name: 'vendor'\n    });\n];\n\n...\n`}</code></pre>\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  "],"sourceRoot":""}