(window.webpackJsonp=window.webpackJsonp||[]).push([[276],{"./manual/Kubernetes/Helm.md":function(e,t,n){"use strict";n.r(t),n.d(t,"default",function(){return c});var a=n("./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js"),l=(n("./node_modules/react/index.js"),n("./node_modules/@mdx-js/react/dist/index.es.js")),s={},r="wrapper";function c(e){var t=e.components,n=Object(a.a)(e,["components"]);return Object(l.b)(r,Object.assign({},s,n,{components:t,mdxType:"MDXLayout"}),Object(l.b)("h1",{id:"5-packaging-and-deploying-on-kubernetes"},"5. Packaging and Deploying on Kubernetes"),Object(l.b)("h2",{id:"51-intro-to-helm"},"5.1 Intro to Helm"),Object(l.b)("p",null,"Helm is the best way to find, share and use software built for Kubernetes."),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"Package manager for Kubernetes."),Object(l.b)("li",{parentName:"ul"},"Helps you manage Kubernetes apps."),Object(l.b)("li",{parentName:"ul"},"Maintained by CNCF.")),Object(l.b)("p",null,"To use, download the Helm client."),Object(l.b)("p",null,"To run, use ",Object(l.b)("inlineCode",{parentName:"p"},"helm init"),"."),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"This will installer Tiller"),Object(l.b)("li",{parentName:"ul"},"If you have RBAC installed (recent clusters have it enabled by default), you'll also need to add a ServiceAccount and RBAC rules.")),Object(l.b)("p",null,"Helm uses a packaging format call ",Object(l.b)("strong",{parentName:"p"},"charts"),"."),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"A chart is a collection of files that describe a set of Kubernetes resources."),Object(l.b)("li",{parentName:"ul"},"A single chart can deploy an app, a piece of software or a database."),Object(l.b)("li",{parentName:"ul"},"It can have depencies ie Wordpress chart requires mysql chart."),Object(l.b)("li",{parentName:"ul"},"You can also write your own chart.")),Object(l.b)("h3",{id:"helm-commands"},"Helm commands"),Object(l.b)("table",null,Object(l.b)("thead",{parentName:"table"},Object(l.b)("tr",{parentName:"thead"},Object(l.b)("th",Object.assign({parentName:"tr"},{align:null}),"Command"),Object(l.b)("th",Object.assign({parentName:"tr"},{align:null}),"Description"))),Object(l.b)("tbody",{parentName:"table"},Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object.assign({parentName:"tr"},{align:null}),"helm init"),Object(l.b)("td",Object.assign({parentName:"tr"},{align:null}),"Install tiller on the cluser")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object.assign({parentName:"tr"},{align:null}),"helm reset"),Object(l.b)("td",Object.assign({parentName:"tr"},{align:null}),"Remove tiller")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object.assign({parentName:"tr"},{align:null}),"helm install ",Object(l.b)("inlineCode",{parentName:"td"},"<CHART>")),Object(l.b)("td",Object.assign({parentName:"tr"},{align:null}),"Install chart")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object.assign({parentName:"tr"},{align:null}),"helm search ",Object(l.b)("inlineCode",{parentName:"td"},"<CHART>")),Object(l.b)("td",Object.assign({parentName:"tr"},{align:null}),"Searches for chart")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object.assign({parentName:"tr"},{align:null}),"helm search redis"),Object(l.b)("td",Object.assign({parentName:"tr"},{align:null}),"Looks for Redis chart")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object.assign({parentName:"tr"},{align:null}),"helm install --name myredis stable/redis"),Object(l.b)("td",Object.assign({parentName:"tr"},{align:null}),"Installs Redis chart found under myredis")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object.assign({parentName:"tr"},{align:null}),"helm delete myredis"),Object(l.b)("td",Object.assign({parentName:"tr"},{align:null}),"Delete Redis install named myredis")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object.assign({parentName:"tr"},{align:null}),"helm create ",Object(l.b)("inlineCode",{parentName:"td"},"<CHART_NAME>")),Object(l.b)("td",Object.assign({parentName:"tr"},{align:null}),"Create your own chart")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object.assign({parentName:"tr"},{align:null}),"helm update ",Object(l.b)("inlineCode",{parentName:"td"},"<OPTIONS>")," ",Object(l.b)("inlineCode",{parentName:"td"},"<CHART>")," path/to/chart"),Object(l.b)("td",Object.assign({parentName:"tr"},{align:null}),"Update the chart")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object.assign({parentName:"tr"},{align:null}),"helm history ",Object(l.b)("inlineCode",{parentName:"td"},"<CHART_NAME>")),Object(l.b)("td",Object.assign({parentName:"tr"},{align:null}),"See upgrade history of chart")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object.assign({parentName:"tr"},{align:null}),"helm rollback ",Object(l.b)("inlineCode",{parentName:"td"},"<CHART_NAME>")," ",Object(l.b)("inlineCode",{parentName:"td"},"<REVISION>")),Object(l.b)("td",Object.assign({parentName:"tr"},{align:null}),"Rollback to version")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object.assign({parentName:"tr"},{align:null}),"helm list"),Object(l.b)("td",Object.assign({parentName:"tr"},{align:null}),"List running charts")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object.assign({parentName:"tr"},{align:null}),"helm list --all"),Object(l.b)("td",Object.assign({parentName:"tr"},{align:null}),"List all charts that have ran")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object.assign({parentName:"tr"},{align:null}),"helm delete ",Object(l.b)("inlineCode",{parentName:"td"},"<CHART_NAME>")," --purge"),Object(l.b)("td",Object.assign({parentName:"tr"},{align:null}),"Release deleted chart")))),Object(l.b)("h3",{id:"installing-helm"},"Installing Helm"),Object(l.b)("pre",null,Object(l.b)("code",Object.assign({parentName:"pre"},{className:"language-shell"}),"curl https://raw.githubusercontent.com/helm/helm/master/scripts/get > get_helm.sh\nchmod 700 get_helm.sh\n./get_helm.sh\n")),Object(l.b)("p",null,"Alternatively:"),Object(l.b)("pre",null,Object(l.b)("code",Object.assign({parentName:"pre"},{className:"language-shell"}),"curl https://raw.githubusercontent.com/helm/helm/master/scripts/get | bash\n")),Object(l.b)("h4",{id:"linux-distro-install"},"Linux Distro Install"),Object(l.b)("pre",null,Object(l.b)("code",Object.assign({parentName:"pre"},{className:"language-shell"}),"wget https://kubernetes-helm.storage.googleapis.com/helm-v2.11.0-linux-amd64.tar.gz\ntar -xzvf helm-v2.11.0-linux-amd64.tar.gz\nsudo mv linux-amd64/helm /usr/local/bin/helm\n")),Object(l.b)("h3",{id:"adding-to-cluster"},"Adding to cluster"),Object(l.b)("pre",null,Object(l.b)("code",Object.assign({parentName:"pre"},{className:"language-yaml"}),"# helm-rbac.yaml\napiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: tiller\n  namespace: kube-system\n---\napiVersion: rbac.authorization.k8s.io/v1\nkind: ClusterRoleBinding\nmetadata:\n  name: tiller\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: cluster-admin\nsubjects:\n  - kind: ServiceAccount\n    name: tiller\n    namespace: kube-system\n")),Object(l.b)("pre",null,Object(l.b)("code",Object.assign({parentName:"pre"},{className:"language-shell"}),"kubectl apply -f helm-rbac.yaml\nhelm init --service-account tiller\n")),Object(l.b)("h2",{id:"52-creating-your-own-helm-charts"},"5.2 Creating your own helm charts"),Object(l.b)("p",null,"This is the recommended way to deploy applications."),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"Packaging the app allows you to deploy the app in 1 command."),Object(l.b)("li",{parentName:"ul"},"Helm allows for upgrades and rollbacks."),Object(l.b)("li",{parentName:"ul"},"Helm chart is also version controlled.")),Object(l.b)("pre",null,Object(l.b)("code",Object.assign({parentName:"pre"},{className:"language-shell"}),"# creates director mychart/\nhelm create mychart\nls mychart\n# Displays Chart.yaml  charts  templates  values.yaml\n")),Object(l.b)("p",null,Object(l.b)("inlineCode",{parentName:"p"},"values.yaml")," will control things such as replicas, image etc."),Object(l.b)("pre",null,Object(l.b)("code",Object.assign({parentName:"pre"},{className:"language-yaml"}),'# Default values for test.\n# This is a YAML-formatted file.\n# Declare variables to be passed into your templates.\n\nreplicaCount: 1\n\nimage:\n  repository: nginx\n  tag: stable\n  pullPolicy: IfNotPresent\n\nnameOverride: ""\nfullnameOverride: ""\n\nservice:\n  type: ClusterIP\n  port: 80\n\ningress:\n  enabled: false\n  annotations: {}\n    # kubernetes.io/ingress.class: nginx\n    # kubernetes.io/tls-acme: "true"\n  paths: []\n  hosts:\n    - chart-example.local\n  tls: []\n  #  - secretName: chart-example-tls\n  #    hosts:\n  #      - chart-example.local\n\nresources: {}\n  # We usually recommend not to specify default resources and to leave this as a conscious\n  # choice for the user. This also increases chances charts run on environments with little\n  # resources, such as Minikube. If you do want to specify resources, uncomment the following\n  # lines, adjust them as necessary, and remove the curly braces after \'resources:\'.\n  # limits:\n  #  cpu: 100m\n  #  memory: 128Mi\n  # requests:\n  #  cpu: 100m\n  #  memory: 128Mi\n\nnodeSelector: {}\n\ntolerations: []\n\naffinity: {}\n')),Object(l.b)("p",null,"Inside the ",Object(l.b)("inlineCode",{parentName:"p"},"mychart/templates")," folder we have..."),Object(l.b)("pre",null,Object(l.b)("code",Object.assign({parentName:"pre"},{className:"language-shell"}),"ls mychart/templates\n# shows NOTES.txt  _helpers.tpl  deployment.yaml  ingress.yaml  service.yaml  tests\n")),Object(l.b)("p",null,"Looking at the ",Object(l.b)("inlineCode",{parentName:"p"},"deployment.yaml")," we see the following:"),Object(l.b)("pre",null,Object(l.b)("code",Object.assign({parentName:"pre"},{className:"language-yaml"}),'apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: {{ include "test.fullname" . }}\n  labels:\n    app.kubernetes.io/name: {{ include "test.name" . }}\n    helm.sh/chart: {{ include "test.chart" . }}\n    app.kubernetes.io/instance: {{ .Release.Name }}\n    app.kubernetes.io/managed-by: {{ .Release.Service }}\nspec:\n  replicas: {{ .Values.replicaCount }}\n  selector:\n    matchLabels:\n      app.kubernetes.io/name: {{ include "test.name" . }}\n      app.kubernetes.io/instance: {{ .Release.Name }}\n  template:\n    metadata:\n      labels:\n        app.kubernetes.io/name: {{ include "test.name" . }}\n        app.kubernetes.io/instance: {{ .Release.Name }}\n    spec:\n      containers:\n        - name: {{ .Chart.Name }}\n          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"\n          imagePullPolicy: {{ .Values.image.pullPolicy }}\n          ports:\n            - name: http\n              containerPort: 80\n              protocol: TCP\n          livenessProbe:\n            httpGet:\n              path: /\n              port: http\n          readinessProbe:\n            httpGet:\n              path: /\n              port: http\n          resources:\n            {{- toYaml .Values.resources | nindent 12 }}\n      {{- with .Values.nodeSelector }}\n      nodeSelector:\n        {{- toYaml . | nindent 8 }}\n      {{- end }}\n    {{- with .Values.affinity }}\n      affinity:\n        {{- toYaml . | nindent 8 }}\n    {{- end }}\n    {{- with .Values.tolerations }}\n      tolerations:\n        {{- toYaml . | nindent 8 }}\n    {{- end }}\n')),Object(l.b)("p",null,"These values will be filled out when deployed."),Object(l.b)("p",null,"The spec values are generally defined by the earlier ",Object(l.b)("inlineCode",{parentName:"p"},"values.yaml"),"."),Object(l.b)("p",null,"The ",Object(l.b)("inlineCode",{parentName:"p"},"mychart/service.yaml")," also templates how the service file will be created:"),Object(l.b)("pre",null,Object(l.b)("code",Object.assign({parentName:"pre"},{className:"language-yaml"}),'apiVersion: v1\nkind: Service\nmetadata:\n  name: {{ include "test.fullname" . }}\n  labels:\n    app.kubernetes.io/name: {{ include "test.name" . }}\n    helm.sh/chart: {{ include "test.chart" . }}\n    app.kubernetes.io/instance: {{ .Release.Name }}\n    app.kubernetes.io/managed-by: {{ .Release.Service }}\nspec:\n  type: {{ .Values.service.type }}\n  ports:\n    - port: {{ .Values.service.port }}\n      targetPort: http\n      protocol: TCP\n      name: http\n  selector:\n    app.kubernetes.io/name: {{ include "test.name" . }}\n    app.kubernetes.io/instance: {{ .Release.Name }}\n')),Object(l.b)("p",null,"From here, you can directly install the helm chart using ",Object(l.b)("inlineCode",{parentName:"p"},"helm install mychart/"),"."),Object(l.b)("p",null,"Using the default chart, there is a ",Object(l.b)("inlineCode",{parentName:"p"},"nginx")," configuration you then port forward and curl."),Object(l.b)("pre",null,Object(l.b)("code",Object.assign({parentName:"pre"},{className:"language-shell"}),"kubectl port-forward 80:8080\n# Press ^z here\nbg # set to background\ncurl localhost:8080 \n# result should be default nginx html\nfg # bring port-forward back to foreground\n")),Object(l.b)("h1",{id:"demo-with-a-nodejs-app"},"Demo with a Nodejs app"),Object(l.b)("p",null,"Create a chart and update the required value for your image etc."),Object(l.b)("pre",null,Object(l.b)("code",Object.assign({parentName:"pre"},{className:"language-yaml"}),"# Default values for test.\n# This is a YAML-formatted file.\n# Declare variables to be passed into your templates.\n\nreplicaCount: 1\n\nimage:\n  repository: okeeffed/repo\n  tag: latest\n  pullPolicy: IfNotPresent\n\n# Could also be LoadBalancer\nservice:\n  type: ClusterIP\n  port: 80\n\ningress:\n  enabled: false\n  annotations: {}\n    # kubernetes.io/ingress.class: nginx\n    # kubernetes.io/tls-acme: \"true\"\n  paths: []\n  hosts:\n    - chart-example.local\n    # this could also be whatever.domain.com\n  tls: []\n  #  - secretName: chart-example-tls\n  #    hosts:\n  #      - chart-example.local\n\nresources: {}\n  # We usually recommend not to specify default resources and to leave this as a conscious\n  # choice for the user. This also increases chances charts run on environments with little\n  # resources, such as Minikube. If you do want to specify resources, uncomment the following\n  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.\n  # limits:\n  #  cpu: 100m\n  #  memory: 128Mi\n  # requests:\n  #  cpu: 100m\n  #  memory: 128Mi\n\nnodeSelector: {}\n\ntolerations: []\n\naffinity: {}\n\n# Here you can add dependencies\n")),Object(l.b)("p",null,"If your helm has depencies, these can be defined in a ",Object(l.b)("inlineCode",{parentName:"p"},"requirements.yaml")," file. Example:"),Object(l.b)("pre",null,Object(l.b)("code",Object.assign({parentName:"pre"},{className:"language-yaml"}),"dependencies:\n  - name: mariadb\n    version: 4.x.x\n    repository: https://kubernetes-charts.storage.googleapis.com/\n    condition: mariadb.enabled\n    tags:\n      - node-app-database\n")),Object(l.b)("p",null,"Ensure you update the chart if you need to change the ",Object(l.b)("inlineCode",{parentName:"p"},"containerPort")," or env variables etc."),Object(l.b)("p",null,"Once the chart is up and running, you can update charts which will update the orchestration. Use ",Object(l.b)("inlineCode",{parentName:"p"},"helm update <OPTIONS> <CHART> path/to/chart")),Object(l.b)("p",null,"Rollbacks can easily be done as well. "),Object(l.b)("p",null,"Use ",Object(l.b)("inlineCode",{parentName:"p"},"helm history <CHART>")," to get a history of deployments. Say we want to rollback to revision one, we can then just run ",Object(l.b)("inlineCode",{parentName:"p"},"helm rollback <CHART> 1"),". "),Object(l.b)("h2",{id:"53-setting-up-helm-repo-with-s3"},"5.3 Setting up Helm Repo with S3"),Object(l.b)("p",null,"If you have charts stored on S3:"),Object(l.b)("pre",null,Object(l.b)("code",Object.assign({parentName:"pre"},{className:"language-shell"}),"# Install plugin\nhelm plugin install https://github.com/hypnoglow/helm-s3.git\n\n# Initialise s3 bucket\nhelm s3 init s3://helm-bucket/charts\n\n# Add report to helm\nhelm repo add my-charts s3://helm-bucket/charts\n")))}c&&c===Object(c)&&Object.isExtensible(c)&&Object.defineProperty(c,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"MDXContent",filename:"manual/Kubernetes/Helm.md"}}),c.isMDXComponent=!0}}]);
//# sourceMappingURL=manual-kubernetes-helm.101a1afd2417ec7a4a77.js.map