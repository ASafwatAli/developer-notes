(window.webpackJsonp=window.webpackJsonp||[]).push([[399],{"./manual/React-Native/React-Native-iBeacon.md":function(e,t,n){"use strict";n.r(t),n.d(t,"default",function(){return s});var a=n("./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js"),i=(n("./node_modules/react/index.js"),n("./node_modules/@mdx-js/react/dist/index.es.js")),o={},r="wrapper";function s(e){var t=e.components,n=Object(a.a)(e,["components"]);return Object(i.b)(r,Object.assign({},o,n,{components:t,mdxType:"MDXLayout"}),Object(i.b)("h1",{id:"react-native-ibeacon"},"React Native iBeacon"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object.assign({parentName:"li"},{href:"#react-native-ibeacon"}),"React Native iBeacon"),Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object.assign({parentName:"li"},{href:"#react-native-beacons-manager"}),"react-native-beacons-manager"),Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object.assign({parentName:"li"},{href:"#any-things-we-dont-understand-about-their-docs"}),"Any things we don\u2019t understand about their docs?")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object.assign({parentName:"li"},{href:"#any-technical-concerns"}),"Any technical concerns?")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object.assign({parentName:"li"},{href:"#why-should-we-use-this-technology"}),"Why should we use this technology?")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object.assign({parentName:"li"},{href:"#why-shouldnt-we-use-this-technology"}),"Why shouldn\u2019t we use this technology?")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object.assign({parentName:"li"},{href:"#are-there-alternatives"}),"Are there alternatives?")))),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object.assign({parentName:"li"},{href:"#install"}),"Install")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object.assign({parentName:"li"},{href:"#setup"}),"Setup"))))),Object(i.b)("h2",{id:"react-native-beacons-manager"},"react-native-beacons-manager"),Object(i.b)("p",null,Object(i.b)("a",Object.assign({parentName:"p"},{href:"https://github.com/MacKentoch/react-native-beacons-manager"}),"https://github.com/MacKentoch/react-native-beacons-manager")),Object(i.b)("h3",{id:"any-things-we-dont-understand-about-their-docs"},"Any things we don\u2019t understand about their docs?"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"Documentation seems okay")),Object(i.b)("h3",{id:"any-technical-concerns"},"Any technical concerns?"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"Either library being outdated")),Object(i.b)("h3",{id:"why-should-we-use-this-technology"},"Why should we use this technology?"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"Based off the ports of the original beacon packages"),Object(i.b)("li",{parentName:"ul"},"Easy to test with what we have"),Object(i.b)("li",{parentName:"ul"},"Easier to setup push notification logic")),Object(i.b)("h3",{id:"why-shouldnt-we-use-this-technology"},"Why shouldn\u2019t we use this technology?"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"Small, open-source project")),Object(i.b)("h3",{id:"are-there-alternatives"},"Are there alternatives?"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"See above")),Object(i.b)("h2",{id:"install"},"Install"),Object(i.b)("pre",null,Object(i.b)("code",Object.assign({parentName:"pre"},{}),"react-native init\nyarn add react-native-beacons-manager\nyarn add react-native-bluetooth-state\nreact-native link\n# potential error on RCBridge requires you to comment it out\n")),Object(i.b)("h2",{id:"setup"},"Setup"),Object(i.b)("pre",null,Object(i.b)("code",Object.assign({parentName:"pre"},{className:"language-javascript"}),"import React, { Component } from 'react';\nimport {\n    AppRegistry,\n    StyleSheet,\n    View,\n    Text,\n    ListView,\n    DeviceEventEmitter\n} from 'react-native';\nimport Beacons from 'react-native-beacons-manager';\nimport BluetoothState from 'react-native-bluetooth-state';\n\nexport default class ibeacon extends Component {\n    constructor(props) {\n        super(props);\n        // Create our dataSource which will be displayed in the ListView\n        var ds = new ListView.DataSource({\n            rowHasChanged: (r1, r2) => r1 !== r2\n        });\n        this.state = {\n            bluetoothState: '',\n            // region information\n            identifier: 'Test',\n            uuid: '5A4BCFCE-174E-4BAC-A814-092E77F6B7E5',\n            // React Native ListView datasource initialization\n            dataSource: ds.cloneWithRows([])\n        };\n    }\n\n    componentWillMount() {\n        //\n        // ONLY non component state aware here in componentWillMount\n        //\n        // Request for authorization while the app is open\n        Beacons.requestWhenInUseAuthorization();\n        // Define a region which can be identifier + uuid,\n        // identifier + uuid + major or identifier + uuid + major + minor\n        // (minor and major properties are numbers)\n        const region = {\n            identifier: this.state.identifier,\n            uuid: this.state.uuid\n        };\n        // Range for beacons inside the region\n        Beacons.startRangingBeaconsInRegion(region);\n        // Beacons.startUpdatingLocation();\n    }\n\n    componentDidMount() {\n        //\n        // component state aware here - attach events\n        //\n        // Ranging: Listen for beacon changes\n        this.beaconsDidRange = DeviceEventEmitter.addListener(\n            'beaconsDidRange',\n            (data) => {\n                this.setState({\n                    dataSource: this.state.dataSource.cloneWithRows(\n                        data.beacons\n                    )\n                });\n            }\n        );\n\n        // listen bluetooth state change event\n        BluetoothState.subscribe((bluetoothState) => {\n            this.setState({ bluetoothState: bluetoothState });\n        });\n        BluetoothState.initialize();\n    }\n\n    componentWillUnMount() {\n        this.beaconsDidRange = null;\n    }\n\n    render() {\n        const { bluetoothState, dataSource } = this.state;\n        return (\n            <View style={styles.container}>\n                <Text style={styles.btleConnectionStatus}>\n                    Bluetooth connection status:{' '}\n                    {bluetoothState ? bluetoothState : 'NA'}\n                </Text>\n                <Text style={styles.headline}>All beacons in the area</Text>\n                <ListView\n                    dataSource={dataSource}\n                    enableEmptySections={true}\n                    renderRow={this.renderRow}\n                />\n            </View>\n        );\n    }\n\n    renderRow = (rowData) => {\n        return (\n            <View style={styles.row}>\n                <Text style={styles.smallText}>\n                    UUID: {rowData.uuid ? rowData.uuid : 'NA'}\n                </Text>\n                <Text style={styles.smallText}>\n                    Major: {rowData.major ? rowData.major : 'NA'}\n                </Text>\n                <Text style={styles.smallText}>\n                    Minor: {rowData.minor ? rowData.minor : 'NA'}\n                </Text>\n                <Text>RSSI: {rowData.rssi ? rowData.rssi : 'NA'}</Text>\n                <Text>\n                    Proximity: {rowData.proximity ? rowData.proximity : 'NA'}\n                </Text>\n                <Text>\n                    Distance:{' '}\n                    {rowData.accuracy ? rowData.accuracy.toFixed(2) : 'NA'}m\n                </Text>\n            </View>\n        );\n    };\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        paddingTop: 60,\n        justifyContent: 'center',\n        alignItems: 'center',\n        backgroundColor: '#F5FCFF'\n    },\n    btleConnectionStatus: {\n        fontSize: 20,\n        paddingTop: 20\n    },\n    headline: {\n        fontSize: 20,\n        paddingTop: 20\n    },\n    row: {\n        padding: 8,\n        paddingBottom: 16\n    },\n    smallText: {\n        fontSize: 11\n    }\n});\n\nAppRegistry.registerComponent('ibeacon', () => ibeacon);\n")))}s&&s===Object(s)&&Object.isExtensible(s)&&Object.defineProperty(s,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"MDXContent",filename:"manual/React-Native/React-Native-iBeacon.md"}}),s.isMDXComponent=!0}}]);
//# sourceMappingURL=manual-react-native-react-native-i-beacon.101a1afd2417ec7a4a77.js.map