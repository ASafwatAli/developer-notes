{"version":3,"sources":["/Users/dennis.okeeffe/Project-Imposter/developer-notes/manual/Java/Gradle-Intro.md"],"names":["layoutProps","MDXLayout","MDXContent","_ref","components","props","Object","_Users_dennis_okeeffe_Project_Imposter_developer_notes_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","_mdx_js_react__WEBPACK_IMPORTED_MODULE_2__","assign","mdxType","id","parentName","href","className","isMDXComponent"],"mappings":"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","file":"static/js/manual-java-gradle-intro.33bfde0e.js","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"gradle-intro\"\n    }}>{`Gradle Intro`}</h1>\n    <p>{`References:`}</p>\n    <ol>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"https://guides.gradle.org/consuming-jvm-libraries/\"\n        }}>{`https://guides.gradle.org/consuming-jvm-libraries/`}</a></li>\n    </ol>\n    <h2 {...{\n      \"id\": \"create-project--add-gradle\"\n    }}>{`Create Project + Add Gradle`}</h2>\n    <p>{`Ensure you have `}<a parentName=\"p\" {...{\n        \"href\": \"https://gradle.org/install\"\n      }}>{`installed Gradle first`}</a>{`.`}</p>\n    <p>{`For Mac users, `}<inlineCode parentName=\"p\">{`brew install gradle`}</inlineCode>{` will get you up and going.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`mkdir consuming-jvm-libraries\ncd consuming-jvm-libraries\ngradle wrapper\n`}</code></pre>\n    <p>{`You should get `}<inlineCode parentName=\"p\">{`BUILD SUCCESSUL`}</inlineCode>{` output.`}</p>\n    <h2 {...{\n      \"id\": \"generating-base-files\"\n    }}>{`Generating base files`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`touch settings.gradle build.gradle\n\n# write into settings.gradle\nrootProject.name = \"appName\"\n\n# write into build.gradle\napply plugin : 'java'\n\nrepositories {\n    jcenter()\n}\n`}</code></pre>\n    <p>{`We are using `}<inlineCode parentName=\"p\">{`JCenter`}</inlineCode>{` as the repository to grab our external package.`}</p>\n    <blockquote>\n      <p parentName=\"blockquote\"><em parentName=\"p\">{`In order to find artifacts you have to tell Gradle where to look. Gradle supports two specialized repository types - Maven & Ivy, among others. In addition, Gradle supports simplified configuration for the most popular centralized repositories - JCenter, Maven Central, and Googleâ€™s Android repository. In this guide you are using JCenter as it has access to all of the repositories hosted on Maven Central as well as many more that are published to Bintray.`}</em></p>\n    </blockquote>\n    <h2 {...{\n      \"id\": \"adding-the-dependency\"\n    }}>{`Adding the dependency`}</h2>\n    <p>{`In this particular project, we want to use `}<inlineCode parentName=\"p\">{`JFiglet`}</inlineCode>{` to add some Ascii-art.`}</p>\n    <p>{`Add the following to the `}<inlineCode parentName=\"p\">{`build.gradle`}</inlineCode>{` file:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`dependencies {\n    implementation 'com.github.lalyos:jfiglet:0.0.8'\n}\n`}</code></pre>\n    <p>{`Note that Gralde supports a variety of noitations. The one used here is known as `}<inlineCode parentName=\"p\">{`Maven coordinates`}</inlineCode>{`.`}</p>\n    <blockquote>\n      <p parentName=\"blockquote\"><em parentName=\"p\">{`Adding a dependency has two parts: one is the dependency itself and the other is the configuration to which it is added. The latter term is used in Gradle to effectively group dependencies together by context. The current build uses the implementation configuration, which is provided by the Java Plugin.`}</em></p>\n    </blockquote>\n    <p>{`The purpose of the `}<inlineCode parentName=\"p\">{`implementation`}</inlineCode>{` configuration is to collect dependencies that are used by a library or application and add them to the compilation classpath, but not export them via any of its APIs. As this is a stand-alone application, all dependencies can be placed in this configuration for purposes of application construction. This makes the use of the JFiglet library an implementation detail that can be changed a later date without affecting any clients.`}</p>\n    <p>{`You can inspect all of the dependencies you have added on a per-configuration basis, by using the dependencies task that is built into Gradle `}<inlineCode parentName=\"p\">{`./gradlew dependencies --configuration implementation`}</inlineCode>{`.`}</p>\n    <h2 {...{\n      \"id\": \"building-the-application\"\n    }}>{`Building the application`}</h2>\n    <p>{`In the `}<inlineCode parentName=\"p\">{`src/main/java`}</inlineCode>{`, folder, place `}<inlineCode parentName=\"p\">{`AppName.java`}</inlineCode>{` with the following:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`import java.io.IOException;\nimport com.github.lalyos.jfiglet.FigletFont;\n\npublic class AppName {\n    public static void main(String[] args) throws IOException {\n        String asciiArt = FigletFont.convertOneLine(\"Hello, \" + args[0]);\n        System.out.println(asciiArt);\n    }\n}\n`}</code></pre>\n    <p>{`Building the application is easy with `}<inlineCode parentName=\"p\">{`./gradlew jar`}</inlineCode>{`.`}</p>\n    <h2 {...{\n      \"id\": \"distribution\"\n    }}>{`Distribution`}</h2>\n    <p>{`Given that this is a application that we will want to distribute, edit `}<inlineCode parentName=\"p\">{`build.gradle`}</inlineCode>{` again and add the Application plugin:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`apply plugin : 'application'\nmainClassName = 'AppName'\n`}</code></pre>\n    <p>{`If we now build with `}<inlineCode parentName=\"p\">{`./gradlew build`}</inlineCode>{` we will notice `}<inlineCode parentName=\"p\">{`build/distributions`}</inlineCode>{` has a `}<inlineCode parentName=\"p\">{`.zip`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`.tar`}</inlineCode>{` archive that we can use `}<inlineCode parentName=\"p\">{`./gradlew installDist`}</inlineCode>{` to install the application into the `}<inlineCode parentName=\"p\">{`build/install`}</inlineCode>{` folder for validation purposes.`}</p>\n    <p>{`We can now run our application with:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`cd build/install/greeterApp\n./bin/greeterApp Gradle\n\n# output\n  _   _          _   _                  ____                      _   _\n | | | |   ___  | | | |   ___          / ___|  _ __    __ _    __| | | |   ___\n | |_| |  / _ \\\\ | | | |  / _ \\\\        | |  _  | '__|  / _\\` |  / _\\` | | |  / _ \\\\\n |  _  | |  __/ | | | | | (_) |  _    | |_| | | |    | (_| | | (_| | | | |  __/\n |_| |_|  \\\\___| |_| |_|  \\\\___/  ( )    \\\\____| |_|     \\\\__,_|  \\\\__,_| |_|  \\\\___|\n                                |/\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"summary\"\n    }}>{`Summary`}</h2>\n    <p>{`You've now figured out how to:`}</p>\n    <ol>\n      <li parentName=\"ol\">{`How to configure repositories and dependencies.`}</li>\n      <li parentName=\"ol\">{`Build an application consuming external dependencies.`}</li>\n      <li parentName=\"ol\">{`Distribute an application with all external dependencies.`}</li>\n    </ol>\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  "],"sourceRoot":""}