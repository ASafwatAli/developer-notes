{"version":3,"sources":["/Users/dennis.okeeffe/Project-Imposter/developer-notes/manual/JavaScript/js-grid-alignment-cheat-sheet.md"],"names":["layoutProps","MDXLayout","MDXContent","_ref","components","props","Object","_Users_dennis_okeeffe_Project_Imposter_developer_notes_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","_mdx_js_react__WEBPACK_IMPORTED_MODULE_2__","assign","mdxType","id","parentName","className","isMDXComponent"],"mappings":"0YAWMA,EAAc,GAGdC,EAAY,UACH,SAASC,EAATC,GAGZ,IAFDC,EAECD,EAFDC,WACGC,EACFC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,gBACD,OAAOG,OAAAE,EAAA,EAAAF,CAACL,EAADK,OAAAG,OAAA,GAAeT,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYM,QAAQ,cAC5EJ,OAAAE,EAAA,EAAAF,CAAA,KAAQ,CACNK,GAAM,yCADR,yCAGAL,OAAAE,EAAA,EAAAF,CAAA,WAAKA,OAAAE,EAAA,EAAAF,CAAA,OAAAA,OAAAG,OAAA,CAAMG,WAAW,OAAU,CAC5BC,UAAa,wBADZ,spDAmETX,EAAWY,gBAAiB","file":"static/js/manual-java-script-js-grid-alignment-cheat-sheet.a1e348a3.js","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"javascript-grid-alignment-cheat-sheet\"\n    }}>{`JavaScript Grid Alignment Cheat Sheet`}</h1>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`/*\n    This example comes from the NPWS grid system\n*/\n\nvar grid = {\n\n    row: [],\n    perRow: 0,\n    height: 0,\n    small: 767,\n    medium: 1190,\n\n    $grid: $('.grid'),\n    $tile: $('.grid .tile'),\n\n    init: function () {\n        grid.resize();\n\n        $(window).resize(grid.resize);\n    },\n\n    resize: function () {\n        if ($(window).outerWidth() < grid.small) {\n            grid.$tile.find('.info').height('auto');\n        } else {\n            grid.$tile.each(function (key) {\n                if ((key) % grid.elemPerRow + 1 === 1 && (key !== 0)) {\n                    grid.setHeight();\n                    grid.height = 0;\n                    grid.row = [];\n                }\n\n                grid.row.push(this);\n\n                if ($(this).find('.info').height() > grid.height) {\n                    grid.height = $(this).find('.info').height();\n                }\n            });\n\n            if (grid.row.length) {\n                grid.setHeight();\n            }\n        }\n    },\n\n    setHeight: function () {\n        for (var i in grid.row) {\n            $(grid.row[i]).find('.info').height(grid.height);\n        }\n    },\n\n    getElemPerRow: function () {\n        if ($(window).outerWidth() > grid.medium) {\n            grid.elemPerRow = 3;\n        } else if ($(window).outerWidth() > grid.small) {\n            grid.elemPerRow = 2;\n        } else {\n            grid.elemPerRow = 1;\n        }\n    },\n};\n`}</code></pre>\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  "],"sourceRoot":""}