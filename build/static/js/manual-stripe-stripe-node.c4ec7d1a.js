(window.webpackJsonp=window.webpackJsonp||[]).push([[470],{"./manual/Stripe/Stripe-Node.md":function(e,n,t){"use strict";t.r(n),t.d(n,"default",function(){return c});var r=t("./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js"),s=(t("./node_modules/react/index.js"),t("./node_modules/@mdx-js/react/dist/index.es.js")),o={},a="wrapper";function c(e){var n=e.components,t=Object(r.a)(e,["components"]);return Object(s.b)(a,Object.assign({},o,t,{components:n,mdxType:"MDXLayout"}),Object(s.b)("h1",{id:"using-stripe-with-node"},"Using Stripe with Node"),Object(s.b)("ul",null,Object(s.b)("li",{parentName:"ul"},Object(s.b)("a",Object.assign({parentName:"li"},{href:"#using-stripe-with-node"}),"Using Stripe with Node"),Object(s.b)("ul",{parentName:"li"},Object(s.b)("li",{parentName:"ul"},Object(s.b)("a",Object.assign({parentName:"li"},{href:"#prereqs"}),"Prereqs")),Object(s.b)("li",{parentName:"ul"},Object(s.b)("a",Object.assign({parentName:"li"},{href:"#testing-with-express"}),"Testing with Express"))))),Object(s.b)("h2",{id:"prereqs"},"Prereqs"),Object(s.b)("ol",null,Object(s.b)("li",{parentName:"ol"},"Sign up"),Object(s.b)("li",{parentName:"ol"},Object(s.b)("inlineCode",{parentName:"li"},"yarn add stripe")," to your Node.js Project"),Object(s.b)("li",{parentName:"ol"},"Build out a server")),Object(s.b)("h2",{id:"testing-with-express"},"Testing with Express"),Object(s.b)("p",null,"Configure the .env file and upload"),Object(s.b)("p",null,Object(s.b)("a",Object.assign({parentName:"p"},{href:"https://github.com/stripe/stripe-node"}),"Node Stripe Github")),Object(s.b)("pre",null,Object(s.b)("code",Object.assign({parentName:"pre"},{className:"language-javascript"}),"const stripe = require('stripe')(process.env.STRIPE_SECRET_KEY);\n\n/* GET home page. */\nmodule.exports = function(app) {\n    app.get('/', function(req, res) {\n        res.send('Server is healthy');\n    });\n\n    app.post('/', function(req, res) {\n        console.log(req.body);\n        // Create a new customer and then a new charge for that customer:\n        stripe.customers\n            .create({\n                email: 'foo-customer@example.com'\n            })\n            .then(function(customer) {\n                console.log(customer);\n                return stripe.customers.createSource(customer.id, {\n                    source: {\n                        object: 'card',\n                        exp_month: 10,\n                        exp_year: 2018,\n                        number: '4242 4242 4242 4242',\n                        cvc: 100\n                    }\n                });\n            })\n            .then(function(source) {\n                return stripe.charges.create({\n                    amount: 1600,\n                    currency: 'aud',\n                    customer: source.customer\n                });\n            })\n            .then(function(charge) {\n                // New charge created on a new customer\n                console.log(charge);\n            })\n            .catch(function(err) {\n                // Deal with an error\n                console.log(err);\n            });\n\n        res.send('Post requests are healthy');\n    });\n};\n")))}c&&c===Object(c)&&Object.isExtensible(c)&&Object.defineProperty(c,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"MDXContent",filename:"manual/Stripe/Stripe-Node.md"}}),c.isMDXComponent=!0}}]);
//# sourceMappingURL=manual-stripe-stripe-node.101a1afd2417ec7a4a77.js.map