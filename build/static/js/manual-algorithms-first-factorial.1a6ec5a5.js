(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{"./manual/Algorithms/First-Factorial.md":function(e,t,n){"use strict";n.r(t),n.d(t,"default",function(){return o});var a=n("./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js"),r=(n("./node_modules/react/index.js"),n("./node_modules/@mdx-js/react/dist/index.es.js")),s={},i="wrapper";function o(e){var t=e.components,n=Object(a.a)(e,["components"]);return Object(r.b)(i,Object.assign({},s,n,{components:t,mdxType:"MDXLayout"}),Object(r.b)("h1",{id:"first-factorial"},"First Factorial"),Object(r.b)("h2",{id:"resources"},"Resources"),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},Object(r.b)("a",Object.assign({parentName:"li"},{href:"https://www.coderbyte.com/information/First%20Factorial"}),"CoderByte"))),Object(r.b)("h2",{id:"question"},"Question"),Object(r.b)("p",null,"Have the function FirstFactorial(num) take the num parameter being passed and return the factorial of it. For example: if num = 4, then your program should return (4 ",Object(r.b)("em",{parentName:"p"}," 3 ")," 2 ","*"," 1) = 24. For the test cases, the range will be between 1 and 18 and the input will always be an integer."),Object(r.b)("h2",{id:"examples"},"Examples"),Object(r.b)("pre",null,Object(r.b)("code",Object.assign({parentName:"pre"},{className:"language-shell"}),"Input: 8\nOutput: 40340\n\nInput: 4\nOutput: 24\n")),Object(r.b)("h2",{id:"answer"},"Answer"),Object(r.b)("pre",null,Object(r.b)("code",Object.assign({parentName:"pre"},{className:"language-javascript"}),"function FirstFactorial(num) {\n  if (num < 2) {\n    return 1;\n  }\n  // code goes here\n  return num * FirstFactorial(num - 1);\n}\n")))}o&&o===Object(o)&&Object.isExtensible(o)&&Object.defineProperty(o,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"MDXContent",filename:"manual/Algorithms/First-Factorial.md"}}),o.isMDXComponent=!0}}]);
//# sourceMappingURL=manual-algorithms-first-factorial.101a1afd2417ec7a4a77.js.map