(window.webpackJsonp=window.webpackJsonp||[]).push([[96],{"./manual/Data-Structures/Understanding-Big-O-Notation.md":function(e,t,n){"use strict";n.r(t),n.d(t,"default",function(){return r});var a=n("./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js"),l=(n("./node_modules/react/index.js"),n("./node_modules/@mdx-js/react/dist/index.es.js")),b={},i="wrapper";function r(e){var t=e.components,n=Object(a.a)(e,["components"]);return Object(l.b)(i,Object.assign({},b,n,{components:t,mdxType:"MDXLayout"}),Object(l.b)("h1",{id:"understanding-big-o-notation"},"Understanding Big-O Notation"),Object(l.b)("p",null,Object(l.b)("img",{alt:"Big-O Notation",src:"https://cdn-media-1.freecodecamp.org/images/0*B42QL_XBJgDGfIFd.jpg"})),Object(l.b)("h2",{id:"resources"},"Resources"),Object(l.b)("ol",null,Object(l.b)("li",{parentName:"ol"},Object(l.b)("a",Object.assign({parentName:"li"},{href:"https://en.wikipedia.org/wiki/Big_O_notation"}),"Wikipedia")),Object(l.b)("li",{parentName:"ol"},Object(l.b)("a",Object.assign({parentName:"li"},{href:"http://carlcheo.com/compsci"}),"CompSci")),Object(l.b)("li",{parentName:"ol"},Object(l.b)("a",Object.assign({parentName:"li"},{href:"https://www.freecodecamp.org/news/big-o-notation-simply-explained-with-illustrations-and-video-87d5a71c0174/"}),"Big-O Notation")),Object(l.b)("li",{parentName:"ol"},Object(l.b)("a",Object.assign({parentName:"li"},{href:"https://www.geeksforgeeks.org/time-complexities-of-all-sorting-algorithms/"}),"Big-O For Sorting Algorithms")),Object(l.b)("li",{parentName:"ol"},Object(l.b)("a",Object.assign({parentName:"li"},{href:"http://sorting.at/"}),"sorting.at")),Object(l.b)("li",{parentName:"ol"},Object(l.b)("a",Object.assign({parentName:"li"},{href:"https://visualgo.net/bn/sorting"}),"Visual Go"))),Object(l.b)("h2",{id:"big-o-notation"},"Big-O Notation"),Object(l.b)("p",null,"Algorithm running times grow at different rates."),Object(l.b)("p",null,"Big O doesn\u2019t tell you the speed in seconds. Big O notation lets you compare the number of operations. It tells you how fast the algorithm grows and establishes a worst-case run time."),Object(l.b)("p",null,"A simple search on an array takes O(n) times, whereas a binary search would take O(log n) given the nature of (log","[2]","n)."),Object(l.b)("h2",{id:"common-big-o-times"},"Common Big-O Times"),Object(l.b)("p",null,"Here are five Big O run times that you\u2019ll encounter a lot, sorted from fastest to slowest:"),Object(l.b)("ol",null,Object(l.b)("li",{parentName:"ol"},Object(l.b)("inlineCode",{parentName:"li"},"O(log n)"),", also known as log time. Example: Binary search."),Object(l.b)("li",{parentName:"ol"},Object(l.b)("inlineCode",{parentName:"li"},"O(n)"),", also known as linear time. Example: Simple search."),Object(l.b)("li",{parentName:"ol"},Object(l.b)("inlineCode",{parentName:"li"},"O(n * log n)"),". Example: A fast sorting algorithm, like quicksort."),Object(l.b)("li",{parentName:"ol"},Object(l.b)("inlineCode",{parentName:"li"},"O(n2)"),". Example: A slow sorting algorithm, like selection sort."),Object(l.b)("li",{parentName:"ol"},Object(l.b)("inlineCode",{parentName:"li"},"O(n!)"),". Example: A really slow algorithm, like the traveling salesperson.")),Object(l.b)("h2",{id:"big-o-time-complexity-from-algorithms"},"Big-O Time Complexity from Algorithms"),Object(l.b)("table",null,Object(l.b)("thead",{parentName:"table"},Object(l.b)("tr",{parentName:"thead"},Object(l.b)("th",Object.assign({parentName:"tr"},{align:null}),"Algorithm"),Object(l.b)("th",Object.assign({parentName:"tr"},{align:null}),"Best"),Object(l.b)("th",Object.assign({parentName:"tr"},{align:null}),"Average"),Object(l.b)("th",Object.assign({parentName:"tr"},{align:null}),"Worst"))),Object(l.b)("tbody",{parentName:"table"},Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object.assign({parentName:"tr"},{align:null}),"Selection Sort"),Object(l.b)("td",Object.assign({parentName:"tr"},{align:null}),"\u03a9(n^2)"),Object(l.b)("td",Object.assign({parentName:"tr"},{align:null}),"\u03b8(n^2)"),Object(l.b)("td",Object.assign({parentName:"tr"},{align:null}),"O(n^2)")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object.assign({parentName:"tr"},{align:null}),"Bubble Sort"),Object(l.b)("td",Object.assign({parentName:"tr"},{align:null}),"\u03a9(n)"),Object(l.b)("td",Object.assign({parentName:"tr"},{align:null}),"\u03b8(n^2)"),Object(l.b)("td",Object.assign({parentName:"tr"},{align:null}),"O(n^2)")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object.assign({parentName:"tr"},{align:null}),"Insertion Sort"),Object(l.b)("td",Object.assign({parentName:"tr"},{align:null}),"\u03a9(n)"),Object(l.b)("td",Object.assign({parentName:"tr"},{align:null}),"\u03b8(n^2)"),Object(l.b)("td",Object.assign({parentName:"tr"},{align:null}),"O(n^2)")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object.assign({parentName:"tr"},{align:null}),"Heap Sort"),Object(l.b)("td",Object.assign({parentName:"tr"},{align:null}),"\u03a9(n log(n))"),Object(l.b)("td",Object.assign({parentName:"tr"},{align:null}),"\u03b8(n log(n))"),Object(l.b)("td",Object.assign({parentName:"tr"},{align:null}),"O(n log(n))")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object.assign({parentName:"tr"},{align:null}),"Quick Sort"),Object(l.b)("td",Object.assign({parentName:"tr"},{align:null}),"\u03a9(n log(n))"),Object(l.b)("td",Object.assign({parentName:"tr"},{align:null}),"\u03b8(n log(n))"),Object(l.b)("td",Object.assign({parentName:"tr"},{align:null}),"O(n^2)")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object.assign({parentName:"tr"},{align:null}),"Merge Sort"),Object(l.b)("td",Object.assign({parentName:"tr"},{align:null}),"\u03a9(n log(n))"),Object(l.b)("td",Object.assign({parentName:"tr"},{align:null}),"\u03b8(n log(n))"),Object(l.b)("td",Object.assign({parentName:"tr"},{align:null}),"O(n log(n))")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object.assign({parentName:"tr"},{align:null}),"Bucket Sort"),Object(l.b)("td",Object.assign({parentName:"tr"},{align:null}),"\u03a9(n+k)"),Object(l.b)("td",Object.assign({parentName:"tr"},{align:null}),"\u03b8(n+k)"),Object(l.b)("td",Object.assign({parentName:"tr"},{align:null}),"O(n^2)")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object.assign({parentName:"tr"},{align:null}),"Radix Sort"),Object(l.b)("td",Object.assign({parentName:"tr"},{align:null}),"\u03a9(nk)"),Object(l.b)("td",Object.assign({parentName:"tr"},{align:null}),"\u03b8(nk)"),Object(l.b)("td",Object.assign({parentName:"tr"},{align:null}),"O(nk)")))))}r&&r===Object(r)&&Object.isExtensible(r)&&Object.defineProperty(r,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"MDXContent",filename:"manual/Data-Structures/Understanding-Big-O-Notation.md"}}),r.isMDXComponent=!0}}]);
//# sourceMappingURL=manual-data-structures-understanding-big-o-notation.101a1afd2417ec7a4a77.js.map