{"version":3,"sources":["/Users/dennis.okeeffe/Project-Imposter/developer-notes/manual/Algorithms/Minimum-Swaps.md"],"names":["layoutProps","MDXLayout","MDXContent","_ref","components","props","Object","_Users_dennis_okeeffe_Project_Imposter_developer_notes_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","_mdx_js_react__WEBPACK_IMPORTED_MODULE_2__","assign","mdxType","id","parentName","className","isMDXComponent"],"mappings":"yXAWMA,EAAc,GAGdC,EAAY,UACH,SAASC,EAATC,GAGZ,IAFDC,EAECD,EAFDC,WACGC,EACFC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,gBACD,OAAOG,OAAAE,EAAA,EAAAF,CAACL,EAADK,OAAAG,OAAA,GAAeT,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYM,QAAQ,cAC5EJ,OAAAE,EAAA,EAAAF,CAAA,KAAQ,CACNK,GAAM,iBADR,iBAGAL,OAAAE,EAAA,EAAAF,CAAA,KAAQ,CACNK,GAAM,UADR,UAGAL,OAAAE,EAAA,EAAAF,CAAA,wBAAmBA,OAAAE,EAAA,EAAAF,CAAA,cAAYM,WAAW,KAAvB,yBAAnB,wDACAN,OAAAE,EAAA,EAAAF,CAAA,KAAQ,CACNK,GAAM,SADR,SAGAL,OAAAE,EAAA,EAAAF,CAAA,UACEA,OAAAE,EAAA,EAAAF,CAAA,MAAIM,WAAW,MAAf,oEAEFN,OAAAE,EAAA,EAAAF,CAAA,KAAQ,CACNK,GAAM,YADR,YAGAL,OAAAE,EAAA,EAAAF,CAAA,UACEA,OAAAE,EAAA,EAAAF,CAAA,MAAIM,WAAW,MAAf,gDAAqEN,OAAAE,EAAA,EAAAF,CAAA,cAAYM,WAAW,MAAvB,WAArE,iCACAN,OAAAE,EAAA,EAAAF,CAAA,MAAIM,WAAW,MAAf,OAA4BN,OAAAE,EAAA,EAAAF,CAAA,cAAYM,WAAW,MAAvB,cAA5B,QAA4FN,OAAAE,EAAA,EAAAF,CAAA,cAAYM,WAAW,MAAvB,oBAA5F,eAAyKN,OAAAE,EAAA,EAAAF,CAAA,cAAYM,WAAW,MAAvB,UAAzK,SAAsON,OAAAE,EAAA,EAAAF,CAAA,cAAYM,WAAW,MAAvB,mBAAtO,KACAN,OAAAE,EAAA,EAAAF,CAAA,MAAIM,WAAW,MAAf,iBAAsCN,OAAAE,EAAA,EAAAF,CAAA,cAAYM,WAAW,MAAvB,uBAAtC,0BAAiIN,OAAAE,EAAA,EAAAF,CAAA,cAAYM,WAAW,MAAvB,cAAjI,KACAN,OAAAE,EAAA,EAAAF,CAAA,MAAIM,WAAW,MAAf,oBACAN,OAAAE,EAAA,EAAAF,CAAA,MAAIM,WAAW,MAAf,cAEFN,OAAAE,EAAA,EAAAF,CAAA,kDAA6CA,OAAAE,EAAA,EAAAF,CAAA,cAAYM,WAAW,KAAvB,KAA7C,KACAN,OAAAE,EAAA,EAAAF,CAAA,WAAKA,OAAAE,EAAA,EAAAF,CAAA,OAAAA,OAAAG,OAAA,CAAMG,WAAW,OAAU,CAC5BC,UAAa,wBADZ,qzBA8BTX,EAAWY,gBAAiB","file":"static/js/manual-algorithms-minimum-swaps.abefd396.js","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"minimum-swaps\"\n    }}>{`Minimum Swaps`}</h1>\n    <h2 {...{\n      \"id\": \"how-to\"\n    }}>{`How to`}</h2>\n    <p>{`Given array `}<inlineCode parentName=\"p\">{`[7, 1, 3, 2, 4, 5, 6]`}</inlineCode>{`, what are the minimum swaps to sort this algorithm?`}</p>\n    <h2 {...{\n      \"id\": \"notes\"\n    }}>{`Notes`}</h2>\n    <ol>\n      <li parentName=\"ol\">{`We want this to be efficient, so selection sort doesn't cut it.`}</li>\n    </ol>\n    <h2 {...{\n      \"id\": \"solution\"\n    }}>{`Solution`}</h2>\n    <ol>\n      <li parentName=\"ol\">{`Build an array of indexes for where the next `}<inlineCode parentName=\"li\">{`indexOf`}</inlineCode>{` for the element you want is.`}</li>\n      <li parentName=\"ol\">{`For `}<inlineCode parentName=\"li\">{`i = 0..n-1`}</inlineCode>{`, if `}<inlineCode parentName=\"li\">{`arr[0] !== i + 1`}</inlineCode>{`, then swap `}<inlineCode parentName=\"li\">{`arr[i]`}</inlineCode>{` with `}<inlineCode parentName=\"li\">{`arr[indexes[i]]`}</inlineCode>{`.`}</li>\n      <li parentName=\"ol\">{`Finally, swap `}<inlineCode parentName=\"li\">{`indexes[arr[i] = 1]`}</inlineCode>{` with the new position `}<inlineCode parentName=\"li\">{`indexes[i]`}</inlineCode>{`.`}</li>\n      <li parentName=\"ol\">{`Increment swaps.`}</li>\n      <li parentName=\"ol\">{`Continue.`}</li>\n    </ol>\n    <p>{`This solution will have a run time of `}<inlineCode parentName=\"p\">{`n`}</inlineCode>{`.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`// Complete the minimumSwaps function below.\nfunction minimumSwaps(arr) {\n  let swaps = 0;\n  // Build an array of indexes for where the next \\`indexOf\\` for the element you want is.\n  const indexes = arr.map((_, i) => arr.indexOf(i + 1));\n\n  for (let i = 0; i < arr.length; i++) {\n    // if !== 1\n    if (arr[i] !== i + 1) {\n      // 7\n      const temp = arr[i];\n      // set arr[1] to 1\n      arr[i] = arr[indexes[i]];\n      // set arr[1] to 7\n      arr[indexes[i]] = temp;\n      // set indexes[6] to\n      indexes[temp - 1] = indexes[i];\n      // increment swaps\n      swaps++;\n    }\n  }\n\n  return swaps;\n}\n`}</code></pre>\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  "],"sourceRoot":""}