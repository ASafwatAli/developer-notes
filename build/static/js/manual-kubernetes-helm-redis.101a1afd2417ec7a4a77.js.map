{"version":3,"sources":["/Users/dennis.okeeffe/Project-Imposter/developer-notes/manual/Kubernetes/Helm-Redis.md"],"names":["layoutProps","MDXLayout","MDXContent","_ref","components","props","Object","_Users_dennis_okeeffe_Project_Imposter_developer_notes_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","_mdx_js_react__WEBPACK_IMPORTED_MODULE_2__","assign","mdxType","id","parentName","className","isMDXComponent"],"mappings":"uXAWMA,EAAc,GAGdC,EAAY,UACH,SAASC,EAATC,GAGZ,IAFDC,EAECD,EAFDC,WACGC,EACFC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,gBACD,OAAOG,OAAAE,EAAA,EAAAF,CAACL,EAADK,OAAAG,OAAA,GAAeT,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYM,QAAQ,cAC5EJ,OAAAE,EAAA,EAAAF,CAAA,KAAQ,CACNK,GAAM,8BADR,8BAGAL,OAAAE,EAAA,EAAAF,CAAA,mHACAA,OAAAE,EAAA,EAAAF,CAAA,KAAQ,CACNK,GAAM,cADR,cAGAL,OAAAE,EAAA,EAAAF,CAAA,WAAKA,OAAAE,EAAA,EAAAF,CAAA,OAAAA,OAAAG,OAAA,CAAMG,WAAW,OAAU,CAC5BC,UAAa,mBADZ,kDAILP,OAAAE,EAAA,EAAAF,CAAA,yEACAA,OAAAE,EAAA,EAAAF,CAAA,WAAKA,OAAAE,EAAA,EAAAF,CAAA,OAAAA,OAAAG,OAAA,CAAMG,WAAW,OAAU,CAC5BC,UAAa,mBADZ,64CA0CLP,OAAAE,EAAA,EAAAF,CAAA,sCAAiCA,OAAAE,EAAA,EAAAF,CAAA,cAAYM,WAAW,KAAvB,sBAAjC,2LAIJV,EAAWY,gBAAiB","file":"static/js/manual-kubernetes-helm-redis.f797dbbc.js","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"installing-redis-with-helm\"\n    }}>{`Installing Redis with Helm`}</h1>\n    <p>{`Ensure that you have configured Helm first and applied the appropriate RBAC (see Helm Intro for more).`}</p>\n    <h2 {...{\n      \"id\": \"installing\"\n    }}>{`Installing`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`helm install --name redisha stable/redis-ha\n`}</code></pre>\n    <p>{`What you should get back should be similar to the following:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`NAME:   redisha\nLAST DEPLOYED: Thu Jan 24 18:17:31 2019\nNAMESPACE: default\nSTATUS: DEPLOYED\n\nRESOURCES:\n==> v1/Pod(related)\nNAME                       READY  STATUS   RESTARTS  AGE\nredisha-redis-ha-server-0  0/2    Pending  0         0s\n\n==> v1/ConfigMap\nNAME                        DATA  AGE\nredisha-redis-ha-configmap  3     0s\nredisha-redis-ha-probes     2     0s\n\n==> v1/Service\nNAME                         TYPE       CLUSTER-IP      EXTERNAL-IP  PORT(S)             AGE\nredisha-redis-ha-announce-0  ClusterIP  10.100.24.94    <none>       6379/TCP,26379/TCP  0s\nredisha-redis-ha-announce-1  ClusterIP  10.100.142.150  <none>       6379/TCP,26379/TCP  0s\nredisha-redis-ha-announce-2  ClusterIP  10.100.27.202   <none>       6379/TCP,26379/TCP  0s\nredisha-redis-ha             ClusterIP  None            <none>       6379/TCP,26379/TCP  0s\n\n==> v1/StatefulSet\nNAME                     DESIRED  CURRENT  AGE\nredisha-redis-ha-server  3        1        0s\n\n\nNOTES:\nRedis can be accessed via port 6379 and Sentinel can be accessed via port 26379 on the following DNS name from within your cluster:\nredisha-redis-ha.default.svc.cluster.local\n\nTo connect to your Redis server:\n1. Run a Redis pod that you can use as a client:\n\n   kubectl exec -it redisha-redis-ha-server-0 sh -n default\n\n2. Connect using the Redis CLI:\n\n  redis-cli -h redisha-redis-ha.default.svc.cluster.local\n`}</code></pre>\n    <p>{`Ensure to delete by using `}<inlineCode parentName=\"p\">{`helm delete <NAME>`}</inlineCode>{`.`}</p>\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  "],"sourceRoot":""}