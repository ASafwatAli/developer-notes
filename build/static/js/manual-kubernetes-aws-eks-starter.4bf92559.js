(window.webpackJsonp=window.webpackJsonp||[]).push([[268],{"./manual/Kubernetes/AWS-EKS-Starter.md":function(e,t,a){"use strict";a.r(t),a.d(t,"default",function(){return b});var n=a("./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js"),r=(a("./node_modules/react/index.js"),a("./node_modules/@mdx-js/react/dist/index.es.js")),l={},c="wrapper";function b(e){var t=e.components,a=Object(n.a)(e,["components"]);return Object(r.b)(c,Object.assign({},l,a,{components:t,mdxType:"MDXLayout"}),Object(r.b)("h1",{id:"aws-eks-starter"},"AWS EKS Starter"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object.assign({parentName:"li"},{href:"#aws-eks-starter"}),"AWS EKS Starter"),Object(r.b)("ul",{parentName:"li"},Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object.assign({parentName:"li"},{href:"#eks-setup-process"}),"EKS Setup Process"),Object(r.b)("ul",{parentName:"li"},Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object.assign({parentName:"li"},{href:"#eks-use-cases"}),"EKS Use cases")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object.assign({parentName:"li"},{href:"#the-course"}),"The Course")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object.assign({parentName:"li"},{href:"#eks-architecture"}),"EKS Architecture")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object.assign({parentName:"li"},{href:"#basic-eks-setup"}),"Basic EKS Setup")))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object.assign({parentName:"li"},{href:"#setup-for-the-eks-cluster"}),"Setup for the EKS cluster")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object.assign({parentName:"li"},{href:"#iam-user-roles"}),"IAM User roles"),Object(r.b)("ul",{parentName:"li"},Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object.assign({parentName:"li"},{href:"#iam-user-and-permissions"}),"IAM user and permissions")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object.assign({parentName:"li"},{href:"#create-iam-role"}),"Create IAM role")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object.assign({parentName:"li"},{href:"#create-keypair"}),"Create keypair")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object.assign({parentName:"li"},{href:"#create-api-access-key-secret"}),"Create API Access key/-secret")))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object.assign({parentName:"li"},{href:"#create-base-aws-infrastructure"}),"Create base AWS infrastructure"),Object(r.b)("ul",{parentName:"li"},Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object.assign({parentName:"li"},{href:"#create-vpc-subnets-and-security-group-for-your-k8s-cluster"}),"Create VPC, subnets and security group for your K8s cluster"),Object(r.b)("ul",{parentName:"li"},Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object.assign({parentName:"li"},{href:"#working-on-the-console"}),"Working on the console")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object.assign({parentName:"li"},{href:"#setting-stack-name"}),"Setting stack name")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object.assign({parentName:"li"},{href:"#continuing-on"}),"Continuing on")))))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object.assign({parentName:"li"},{href:"#creating-the-eks-control-plane"}),"Creating the EKS control plane"),Object(r.b)("ul",{parentName:"li"},Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object.assign({parentName:"li"},{href:"#via-cli"}),"Via CLI")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object.assign({parentName:"li"},{href:"#via-gui"}),"Via GUI")))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object.assign({parentName:"li"},{href:"#setting-up-local-kubectl-for-eks"}),"Setting up local kubectl for EKS"),Object(r.b)("ul",{parentName:"li"},Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object.assign({parentName:"li"},{href:"#recap-on-the-kubectl-setup"}),"Recap on the kubectl setup")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object.assign({parentName:"li"},{href:"#install-kubectl--aws-iamauthenticator"}),"Install kubectl & aws-iam_authenticator")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object.assign({parentName:"li"},{href:"#configure-kubectl"}),"Configure ",Object(r.b)("em",{parentName:"a"},"kubectl")))))))),Object(r.b)("h2",{id:"eks-setup-process"},"EKS Setup Process"),Object(r.b)("p",null,"EKS will setup and manage our Kubernetes clusters:"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"This will create K8s master in high availability"),Object(r.b)("li",{parentName:"ul"},"Etcd in high availability"),Object(r.b)("li",{parentName:"ul"},"IAM plugin setup"),Object(r.b)("li",{parentName:"ul"},"CA setup (for TLS)"),Object(r.b)("li",{parentName:"ul"},"Auto scaling done"),Object(r.b)("li",{parentName:"ul"},"Load Balancers done (NLB and ELB)")),Object(r.b)("p",null,"In short, you will get an EKS control plane and you'll just need to setup the worker nodes in the availability zones."),Object(r.b)("p",null,"The from the laptop, you can use kubectl to talk to AWS."),Object(r.b)("p",null,"There is also deep integration with AWS:"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"API calls can be audited in CloudTrail"),Object(r.b)("li",{parentName:"ul"},"Authetication through IAM while authorization through RBAC."),Object(r.b)("li",{parentName:"ul"},"CloudFormation to manage clusteres"),Object(r.b)("li",{parentName:"ul"},"Customize AMI"),Object(r.b)("li",{parentName:"ul"},"Load Balancers, EBS Volumes, EFS, etc..."),Object(r.b)("li",{parentName:"ul"},"Container registies on ECR"),Object(r.b)("li",{parentName:"ul"},"Networking is handled with a per-pod IP address with attached ENI")),Object(r.b)("h3",{id:"eks-use-cases"},"EKS Use cases"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"Can create a cluster easily"),Object(r.b)("li",{parentName:"ul"},"Microservices in containers"),Object(r.b)("li",{parentName:"ul"},"Paas/Website"),Object(r.b)("li",{parentName:"ul"},"Migrate from on-prem to cloud"),Object(r.b)("li",{parentName:"ul"},"ML cluster (support for GPU instances)")),Object(r.b)("h3",{id:"the-course"},"The Course"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"Deploy EKS cluster using CF"),Object(r.b)("li",{parentName:"ul"},"Scale Kubernetes cluster"),Object(r.b)("li",{parentName:"ul"},"Setup ",Object(r.b)("inlineCode",{parentName:"li"},"kubectl")," properly"),Object(r.b)("li",{parentName:"ul"},"Learn how EKS works under the hood"),Object(r.b)("li",{parentName:"ul"},"Setup admin using Kubernetes dashboard"),Object(r.b)("li",{parentName:"ul"},"Deploy stateless app on EKS and expose it with public ELB"),Object(r.b)("li",{parentName:"ul"},"Deploy stateful app on EKS and bind it with EBS volumes"),Object(r.b)("li",{parentName:"ul"},"Deploy stateful app (like WordPress) with EFS"),Object(r.b)("li",{parentName:"ul"},"Manage Kubernetes cluster using AWS CLI and ",Object(r.b)("inlineCode",{parentName:"li"},"eksctl")," CLI")),Object(r.b)("h3",{id:"eks-architecture"},"EKS Architecture"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"3 AZs"),Object(r.b)("li",{parentName:"ul"},"Master node in each"),Object(r.b)("li",{parentName:"ul"},"Etcd in each"),Object(r.b)("li",{parentName:"ul"},"K8s worker nodes")),Object(r.b)("p",null,Object(r.b)("img",{alt:"EKS Architecture",src:"https://res.cloudinary.com/gitgoodclub/image/upload/v1548135634/eks-course/Screen_Shot_2019-01-22_at_4.39.24_pm.png"})),Object(r.b)("p",null,"EKS itself will manage all the load and master nodes and etcd as needed."),Object(r.b)("h3",{id:"basic-eks-setup"},"Basic EKS Setup"),Object(r.b)("p",null,Object(r.b)("img",{alt:"Basic setup",src:"https://res.cloudinary.com/gitgoodclub/image/upload/v1548135634/eks-course/Screen_Shot_2019-01-22_at_4.39.24_pm.png"})),Object(r.b)("h2",{id:"setup-for-the-eks-cluster"},"Setup for the EKS cluster"),Object(r.b)("h2",{id:"iam-user-roles"},"IAM User roles"),Object(r.b)("h4",{id:"iam-user-and-permissions"},"IAM user and permissions"),Object(r.b)("p",null,"To be able to run through this course your IAM user needs to have certain privileges to e.g. create all the required resources and objects. According AWS Best Practices you should ",Object(r.b)("em",{parentName:"p"},"never")," use your root account for working with AWS services. E.g. to demonstrate the Hands-On lectures, the user ",Object(r.b)("em",{parentName:"p"},"eks-course")," has been used."),Object(r.b)("p",null,"There are 2 attempts to follow:"),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},'Provide admin access\nlogin with an admin of your AWS account\ngo to "IAM" => "users" => click on your user => "Permissions" => "Add permission" => then search for ',Object(r.b)("em",{parentName:"li"},"AdministratorAccess")," and attach this policy\nBasically your user just requires ",Object(r.b)("em",{parentName:"li"},"one")," policy being attached")),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"AdministratorAccess")),Object(r.b)("ol",{start:2},Object(r.b)("li",{parentName:"ol"},"Provide a dedicated list of privileges/policies\nto cover all the required privileges, first you have to create additional policies\nEKS-Admin-policy:")),Object(r.b)("pre",null,Object(r.b)("code",Object.assign({parentName:"pre"},{className:"language-javascript"}),'{\n  "Version": "2012-10-17",\n  "Statement": [\n    {\n      "Effect": "Allow",\n      "Action": ["eks:*"],\n      "Resource": "*"\n    }\n  ]\n}\n')),Object(r.b)("p",null,"CloudFormation-Admin-policy:"),Object(r.b)("pre",null,Object(r.b)("code",Object.assign({parentName:"pre"},{className:"language-javascript"}),'{\n  "Version": "2012-10-17",\n  "Statement": [\n    {\n      "Effect": "Allow",\n      "Action": ["cloudformation:*"],\n      "Resource": "*"\n    }\n  ]\n}\n')),Object(r.b)("p",null,"Finally, assign the following policies to your IAM user you are going to use throughout the course:"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"AmazonEC2FullAccess"),Object(r.b)("li",{parentName:"ul"},"IAMFullAccess"),Object(r.b)("li",{parentName:"ul"},"AmazonVPCFullAccess"),Object(r.b)("li",{parentName:"ul"},"CloudFormation-Admin-policy"),Object(r.b)("li",{parentName:"ul"},"EKS-Admin-policy\nwhere the last 2 policies are the ones you created above")),Object(r.b)("h3",{id:"create-iam-role"},"Create IAM role"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"open ",Object(r.b)("inlineCode",{parentName:"li"},"https://console.aws.amazon.com/iam/")," and choose ",Object(r.b)("em",{parentName:"li"},"Roles")," => ",Object(r.b)("em",{parentName:"li"},"create role")),Object(r.b)("li",{parentName:"ul"},"choose ",Object(r.b)("em",{parentName:"li"},"EKS")," service followed by ",Object(r.b)("em",{parentName:"li"},"Allows Amazon EKS to manage your clusters on your behalf")),Object(r.b)("li",{parentName:"ul"},"choose ",Object(r.b)("em",{parentName:"li"},"Next: Permissions")),Object(r.b)("li",{parentName:"ul"},"click ",Object(r.b)("em",{parentName:"li"},"Next: Review")),Object(r.b)("li",{parentName:"ul"},"enter a ",Object(r.b)("em",{parentName:"li"},"unique")," Role name, ",Object(r.b)("em",{parentName:"li"},"EKS-course-role")," and click ",Object(r.b)("em",{parentName:"li"},Object(r.b)("em",{parentName:"em"},"Create Role")))),Object(r.b)("h3",{id:"create-keypair"},"Create keypair"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"open EC2 dashboard ",Object(r.b)("inlineCode",{parentName:"li"},"https://console.aws.amazon.com/ec2")),Object(r.b)("li",{parentName:"ul"},"click ",Object(r.b)("em",{parentName:"li"},"KeyPairs"),' in left navigation bar under section "Network&Security"'),Object(r.b)("li",{parentName:"ul"},"click ",Object(r.b)("em",{parentName:"li"},"Create Key Pair")),Object(r.b)("li",{parentName:"ul"},"provide name for keypair, ",Object(r.b)("em",{parentName:"li"},"eks-course")," and click ",Object(r.b)("em",{parentName:"li"},Object(r.b)("em",{parentName:"em"},"Create"))),Object(r.b)("li",{parentName:"ul"},"!! the keypair will be downloaded immediately => file ",Object(r.b)("em",{parentName:"li"},"eks-course.pem")," !!")),Object(r.b)("h3",{id:"create-api-access-key-secret"},"Create API Access key/-secret"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"create key+secret via AWS console")),Object(r.b)("pre",null,Object(r.b)("code",Object.assign({parentName:"pre"},{className:"language-bash"}),"AWS-console => IAM => Users => <your user> => tab _Security credentials_ => button _Create access key_\n")),Object(r.b)("h2",{id:"create-base-aws-infrastructure"},"Create base AWS infrastructure"),Object(r.b)("h3",{id:"create-vpc-subnets-and-security-group-for-your-k8s-cluster"},"Create VPC, subnets and security group for your K8s cluster"),Object(r.b)("p",null,Object(r.b)("img",{alt:"AWS EKS Cluster setup",src:"https://res.cloudinary.com/gitgoodclub/image/upload/v1548137228/eks-course/Screen_Shot_2019-01-22_at_5.06.52_pm.png"})),Object(r.b)("p",null,"To create a VPC there is a prepared CloudFormation template to use. It creates a VPC including 3 Subnets\nAt the moment EKS is only available in the following 2 regions:"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"US West (Oregon), ",Object(r.b)("em",{parentName:"li"},"us-west-2")),Object(r.b)("li",{parentName:"ul"},"US East (N.Virginia), ",Object(r.b)("em",{parentName:"li"},"us-east-1"))),Object(r.b)("h4",{id:"working-on-the-console"},"Working on the console"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"open ",Object(r.b)("inlineCode",{parentName:"li"},"https://console.aws.amazon.com/cloudformation/")," and select one of the above mentioned regions"),Object(r.b)("li",{parentName:"ul"},"click ",Object(r.b)("em",{parentName:"li"},"Create Stack")),Object(r.b)("li",{parentName:"ul"},"select ",Object(r.b)("em",{parentName:"li"},"Upload a template to Amazon S3")," , click ",Object(r.b)("em",{parentName:"li"},Object(r.b)("em",{parentName:"em"},"Upload file"))," and select ",Object(r.b)("inlineCode",{parentName:"li"},"eks-course-vpc.yaml")),Object(r.b)("li",{parentName:"ul"},"click ",Object(r.b)("em",{parentName:"li"},"Next")),Object(r.b)("li",{parentName:"ul"},"provide data in the ",Object(r.b)("em",{parentName:"li"},"Specify Details")," overview:")),Object(r.b)("pre",null,Object(r.b)("code",Object.assign({parentName:"pre"},{className:"language-yaml"}),"# eks-course-vpc.yaml\n---\nAWSTemplateFormatVersion: '2010-09-09'\nDescription: 'AWS EKS course'\n\nParameters:\n  VpcBlock:\n    Type: String\n    Default: 192.168.0.0/16\n    Description: CIDR range for VPC\n\n  Subnet01Block:\n    Type: String\n    Default: 192.168.64.0/18\n    Description: CIDR for first subnet within VPC\n\n  Subnet02Block:\n    Type: String\n    Default: 192.168.128.0/18\n    Description: CIDR for second subnet within VPC\n\n  Subnet03Block:\n    Type: String\n    Default: 192.168.192.0/18\n    Description: CIDR for third subnet within VPC\n\nResources:\n  VPC:\n    Type: AWS::EC2::VPC\n    Properties:\n      CidrBlock: !Ref VpcBlock\n      EnableDnsSupport: true\n      EnableDnsHostnames: true\n      Tags:\n        - Key: Name\n          Value: !Sub '${AWS::StackName}-VPC'\n\n  InternetGateway:\n    Type: 'AWS::EC2::InternetGateway'\n\n  VPCGatewayAttachment:\n    Type: 'AWS::EC2::VPCGatewayAttachment'\n    Properties:\n      InternetGatewayId: !Ref InternetGateway\n      VpcId: !Ref VPC\n\n  RouteTable:\n    Type: AWS::EC2::RouteTable\n    Properties:\n      VpcId: !Ref VPC\n      Tags:\n        - Key: Name\n          Value: Public Subnets\n        - Key: Network\n          Value: Public\n\n  Route:\n    DependsOn: VPCGatewayAttachment\n    Type: AWS::EC2::Route\n    Properties:\n      RouteTableId: !Ref RouteTable\n      DestinationCidrBlock: 0.0.0.0/0\n      GatewayId: !Ref InternetGateway\n\n  Subnet01:\n    Type: AWS::EC2::Subnet\n    Properties:\n      AvailabilityZone:\n        Fn::Select:\n          - '0'\n          - Fn::GetAZs:\n              Ref: AWS::Region\n      CidrBlock:\n        Ref: Subnet01Block\n      VpcId:\n        Ref: VPC\n      Tags:\n        - Key: Name\n          Value: !Sub '${AWS::StackName}-Subnet1'\n\n  Subnet02:\n    Type: AWS::EC2::Subnet\n    Properties:\n      AvailabilityZone:\n        Fn::Select:\n          - '1'\n          - Fn::GetAZs:\n              Ref: AWS::Region\n      CidrBlock:\n        Ref: Subnet02Block\n      VpcId:\n        Ref: VPC\n      Tags:\n        - Key: Name\n          Value: !Sub '${AWS::StackName}-Subnet2'\n\n  Subnet03:\n    Type: AWS::EC2::Subnet\n\n    Properties:\n      AvailabilityZone:\n        Fn::Select:\n          - '2'\n          - Fn::GetAZs:\n              Ref: AWS::Region\n      CidrBlock:\n        Ref: Subnet03Block\n      VpcId:\n        Ref: VPC\n      Tags:\n        - Key: Name\n          Value: !Sub '${AWS::StackName}-Subnet3'\n\n  Subnet01RouteTableAssociation:\n    Type: AWS::EC2::SubnetRouteTableAssociation\n    Properties:\n      SubnetId: !Ref Subnet01\n      RouteTableId: !Ref RouteTable\n\n  Subnet02RouteTableAssociation:\n    Type: AWS::EC2::SubnetRouteTableAssociation\n    Properties:\n      SubnetId: !Ref Subnet02\n      RouteTableId: !Ref RouteTable\n\n  Subnet03RouteTableAssociation:\n    Type: AWS::EC2::SubnetRouteTableAssociation\n    Properties:\n      SubnetId: !Ref Subnet03\n      RouteTableId: !Ref RouteTable\n\n  ControlPlaneSecurityGroup:\n    Type: AWS::EC2::SecurityGroup\n    Properties:\n      GroupDescription: Cluster communication with worker nodes\n      VpcId: !Ref VPC\n\nOutputs:\n  SubnetIds:\n    Description: Your subnets\n    Value: !Join [',', [!Ref Subnet01, !Ref Subnet02, !Ref Subnet03]]\n\n  SecurityGroups:\n    Description: SecGroup for communication betw controlplane and workernodes\n    Value: !Join [',', [!Ref ControlPlaneSecurityGroup]]\n\n  VpcId:\n    Description: The VPC Id\n    Value: !Ref VPC\n")),Object(r.b)("h4",{id:"setting-stack-name"},"Setting stack name"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"Stack name : set stack name ",Object(r.b)("em",{parentName:"li"},"EKS-course-stack")),Object(r.b)("li",{parentName:"ul"},"VPC Block : set CIDR range for your VPC, or leave the default from the CloudFormation template"),Object(r.b)("li",{parentName:"ul"},"Subnet01Block : set CIDR range for this subnet, or leave the default from the CloudFormation template"),Object(r.b)("li",{parentName:"ul"},"Subnet02Block : set CIDR range for this subnet, or leave the default from the CloudFormation template"),Object(r.b)("li",{parentName:"ul"},"Subnet03Block : set CIDR range for this subnet, or leave the default from the CloudFormation template")),Object(r.b)("h4",{id:"continuing-on"},"Continuing on"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"Click ",Object(r.b)("em",{parentName:"li"},"Next")),Object(r.b)("li",{parentName:"ul"},"Click ",Object(r.b)("em",{parentName:"li"},"Create")),Object(r.b)("li",{parentName:"ul"},"Observe the progress of the stack creation. After the stack is created, open tab ",Object(r.b)("em",{parentName:"li"},"Outputs")," and record the ",Object(r.b)("em",{parentName:"li"},"VPC-ID"),", ",Object(r.b)("em",{parentName:"li"},"SecurityGroup")," and the ",Object(r.b)("em",{parentName:"li"},"Subnet_IDs")," for all 3 subnets. You'll need those at worker launch time.")),Object(r.b)("h2",{id:"creating-the-eks-control-plane"},"Creating the EKS control plane"),Object(r.b)("h3",{id:"via-cli"},"Via CLI"),Object(r.b)("pre",null,Object(r.b)("code",Object.assign({parentName:"pre"},{}),"aws eks create-cluster --name prod --role-arn arn:aws:iam::012345678910:role/eks-service-role-AWSServiceRoleForAmazonEKS-J7ONKE3BQ4PI --resources-vpc-config subnetIds=subnet-6782e71e,subnet-e7e761ac,securityGroupIds=sg-6979fe18\n")),Object(r.b)("h3",{id:"via-gui"},"Via GUI"),Object(r.b)("p",null,Object(r.b)("img",{alt:"EKS Control Plane",src:"https://res.cloudinary.com/gitgoodclub/image/upload/v1548137849/eks-course/Screen_Shot_2019-01-22_at_5.17.00_pm.png"})),Object(r.b)("p",null,"Kubernetes API server is a AWS service, hence it doesn't need dedicated EC2 instances to run."),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"Open the EKS overview page in AWS Management console, ",Object(r.b)("inlineCode",{parentName:"li"},"https://console.aws.amazon.com/eks/home#/clusters")," and click ",Object(r.b)("em",{parentName:"li"},"Create Cluster"),".")),Object(r.b)("p",null,"Populate the following fields:"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"Cluster name : enter a unique name, ",Object(r.b)("em",{parentName:"li"},"EKS-course-cluster")),Object(r.b)("li",{parentName:"ul"},"Kubernetes version : by default the latest available version is preselected"),Object(r.b)("li",{parentName:"ul"},"Role ARN : select the IAM Role you created in the first Hands-On lesson ",Object(r.b)("em",{parentName:"li"},"Part I: cover prerequisites")),Object(r.b)("li",{parentName:"ul"},"VPC : select the VPC-ID from the dropdown box which was created in the first Hands-On lesson ",Object(r.b)("em",{parentName:"li"},"Part II: create base AWS infrastructure")),Object(r.b)("li",{parentName:"ul"},"Subnets : provide the comma separated Subnet-IDs you recorded in the previous step"),Object(r.b)("li",{parentName:"ul"},"SecurityGroup : select the security group (it has name ",Object(r.b)("em",{parentName:"li"},"ControlPlaneSecurityGroup")," ) which has been created in Hands-On ",Object(r.b)("em",{parentName:"li"},"Part II: create base AWS infrastructure"))),Object(r.b)("p",null,"Then for creation:"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"click ",Object(r.b)("em",{parentName:"li"},"Create")),Object(r.b)("li",{parentName:"ul"},"on the ",Object(r.b)("em",{parentName:"li"},"Clusters")," overview page, observe field ",Object(r.b)("em",{parentName:"li"},Object(r.b)("em",{parentName:"em"},"Status"))," until cluster creation is finished.")),Object(r.b)("p",null,"Click on your clustername, and record the ",Object(r.b)("em",{parentName:"p"},"API server endpoint")," and ",Object(r.b)("em",{parentName:"p"},"Certificate authority")," values to configure ",Object(r.b)("inlineCode",{parentName:"p"},"kubectl")," in the next Hands-On ",Object(r.b)("em",{parentName:"p"},"Part IV: install & configure kubectl"),"."),Object(r.b)("h2",{id:"setting-up-local-kubectl-for-eks"},"Setting up local kubectl for EKS"),Object(r.b)("h3",{id:"recap-on-the-kubectl-setup"},"Recap on the kubectl setup"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"kubectl")," relies on the ",Object(r.b)("inlineCode",{parentName:"li"},"kubectl config file")),Object(r.b)("li",{parentName:"ul"},"That relies on the EKS endpoint and User authentication"),Object(r.b)("li",{parentName:"ul"},"Use auth depends on ",Object(r.b)("inlineCode",{parentName:"li"},"aws-iam-authenticator")," executable"),Object(r.b)("li",{parentName:"ul"},"This generates an auth token based on the ",Object(r.b)("inlineCode",{parentName:"li"},"aws credentials file"))),Object(r.b)("h3",{id:"install-kubectl--aws-iam_authenticator"},"Install kubectl & aws-iam_authenticator"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"kubectl"),Object(r.b)("ul",{parentName:"li"},Object(r.b)("li",{parentName:"ul"},"on RH based Linux: ",Object(r.b)("inlineCode",{parentName:"li"},"sudo dnf install kubernetes-client"),Object(r.b)("ul",{parentName:"li"},Object(r.b)("li",{parentName:"ul"},"check: ",Object(r.b)("inlineCode",{parentName:"li"},"kubectl version --short --client")))),Object(r.b)("li",{parentName:"ul"},"on Windows, open a terminal emulator, preferrably MobaXterm:")),Object(r.b)("pre",{parentName:"li"},Object(r.b)("code",Object.assign({parentName:"pre"},{}),"curl -k -# -o kubectl.exe https://amazon-eks.s3-us-west-2.amazonaws.com/1.10.3/2018-07-26/bin/windows/amd64/kubectl.exe\nchmod +x kubectl.exe\nmkdir $HOME/bin\nmv kubectl.exe $HOME/bin\necho 'export PATH=$HOME/bin:$PATH' >> ~/.bashrc\nsource .bashrc\n")),Object(r.b)("ul",{parentName:"li"},Object(r.b)("li",{parentName:"ul"},"check: ",Object(r.b)("inlineCode",{parentName:"li"},"kubectl.exe version --short --client")))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"aws-iam-authenticator"),Object(r.b)("ul",{parentName:"li"},Object(r.b)("li",{parentName:"ul"},"on Linux:")),Object(r.b)("pre",{parentName:"li"},Object(r.b)("code",Object.assign({parentName:"pre"},{}),"curl -o aws-iam-authenticator https://amazon-eks.s3-us-west-2.amazonaws.com/1.10.3/2018-07-26/bin/linux/amd64/aws-iam-authenticator\nchmod +x ./aws-iam-authenticator\ncp ./aws-iam-authenticator /usr/local/bin/\n")),Object(r.b)("ul",{parentName:"li"},Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"Test: ",Object(r.b)("inlineCode",{parentName:"p"},"aws-iam-authenticator help"))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"on Windows, open a terminal emulator, preferrably MobaXterm:"))),Object(r.b)("pre",{parentName:"li"},Object(r.b)("code",Object.assign({parentName:"pre"},{}),"curl -k -# -o aws-iam-authenticator.exe  https://amazon-eks.s3-us-west-2.amazonaws.com/1.10.3/2018-07-26/bin/windows/amd64/aws-iam-authenticator.exe\nchmod +x aws-iam-authenticator.exe\nmv aws-iam-authenticator.exe $HOME/bin\n")),Object(r.b)("ul",{parentName:"li"},Object(r.b)("li",{parentName:"ul"},"Test: ",Object(r.b)("inlineCode",{parentName:"li"},"aws-iam-authenticator.exe help")))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"aws credentials (ACCESS KEY+SECRET)\nnow we have to provide the Access key+secret from the first lesson ",Object(r.b)("em",{parentName:"p"},"Part I : covering prerequisites")," and put them into the credentials template."),Object(r.b)("pre",{parentName:"li"},Object(r.b)("code",Object.assign({parentName:"pre"},{}),"* populate aws credentials file\n  copy the provided file named _credentials_ to\n  * WINDOWS cygwin: ```mkdir $HOMEPATH/.aws && vi $HOMEPATH/.aws/credentials```\n  * Linux: ```~/.aws/credentials```\n  and set the properties _aws_access_key_id_ and _aws_secret_access_key_\n")))),Object(r.b)("h3",{id:"configure-kubectl"},"Configure ",Object(r.b)("em",{parentName:"h3"},"kubectl")),Object(r.b)("p",null,"in this step we are creating a configuration file for the binary ",Object(r.b)("inlineCode",{parentName:"p"},"kubectl"),", which is the main tool to interact with Kubernetes later on."),Object(r.b)("p",null,"Use template file ",Object(r.b)("em",{parentName:"p"},"kube-config-eks")," and copy it to:"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"Linux: ",Object(r.b)("inlineCode",{parentName:"li"},"~/.kube/kube-config-eks")),Object(r.b)("li",{parentName:"ul"},"Windows (cygwin): ",Object(r.b)("inlineCode",{parentName:"li"},"mkdir $HOMEPATH/.kube && vi $HOMEPATH/.kube/kube-config-eks"))),Object(r.b)("pre",null,Object(r.b)("code",Object.assign({parentName:"pre"},{className:"language-yaml"}),"apiVersion: v1\nclusters:\n  - cluster:\n      server: <endpoint-url>\n      certificate-authority-data: <base64-encoded-ca-cert>\n    name: kubernetes\ncontexts:\n  - context:\n      cluster: kubernetes\n      user: aws\n    name: aws\ncurrent-context: aws\nkind: Config\npreferences: {}\nusers:\n  - name: aws\n    user:\n      exec:\n        apiVersion: client.authentication.k8s.io/v1alpha1\n        command: aws-iam-authenticator\n        args:\n          - 'token'\n          - '-i'\n          - 'EKS-course-cluster'\n")),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"edit file ",Object(r.b)("inlineCode",{parentName:"p"},"kube-config-eks")," and replace ",Object(r.b)("em",{parentName:"p"},"endpoint-url"),", ",Object(r.b)("em",{parentName:"p"},"base64-encoded-ca-cert")," by the values you recorded in the Hands-On lesson 3 ",Object(r.b)("em",{parentName:"p"},"Part III: create the K8s control plane"),".")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"Linux : ",Object(r.b)("inlineCode",{parentName:"p"},"export KUBECONFIG=~/.kube/kube-config-eks"),"\nWindows : ",Object(r.b)("inlineCode",{parentName:"p"},"export KUBECONFIG=$HOMEPATH/.kube/kube-config-eks"))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"Test connectivity and access:"),Object(r.b)("pre",{parentName:"li"},Object(r.b)("code",Object.assign({parentName:"pre"},{}),"#>kubectl get svc\nNAME         TYPE        CLUSTER-IP   EXTERNAL-IP   PORT(S)   AGE\nkubernetes   ClusterIP   xxxxxxxxx    <none>        443/TCP   4m\n")),Object(r.b)("p",{parentName:"li"},"command to check the config for kubectl: ",Object(r.b)("inlineCode",{parentName:"p"},"kubectl config view")))),Object(r.b)("p",null,"Now you successfully talked to the K8s control plane on AWS"))}b&&b===Object(b)&&Object.isExtensible(b)&&Object.defineProperty(b,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"MDXContent",filename:"manual/Kubernetes/AWS-EKS-Starter.md"}}),b.isMDXComponent=!0}}]);
//# sourceMappingURL=manual-kubernetes-aws-eks-starter.101a1afd2417ec7a4a77.js.map