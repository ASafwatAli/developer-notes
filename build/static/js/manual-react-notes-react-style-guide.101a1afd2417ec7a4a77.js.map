{"version":3,"sources":["/Users/dennis.okeeffe/Project-Imposter/developer-notes/manual/React-Notes/react-style-guide.md"],"names":["layoutProps","MDXLayout","MDXContent","_ref","components","props","Object","_Users_dennis_okeeffe_Project_Imposter_developer_notes_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","_mdx_js_react__WEBPACK_IMPORTED_MODULE_2__","assign","mdxType","id","parentName","href","className","isMDXComponent"],"mappings":"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","file":"static/js/manual-react-notes-react-style-guide.86460e2c.js","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"react-native-style-guide\"\n    }}>{`React-Native Style Guide`}</h1>\n    <h3 {...{\n      \"id\": \"react-native-style-guide-1\"\n    }}>{`React Native Style Guide`}</h3>\n    <h4 {...{\n      \"id\": \"general-guidelines\"\n    }}>{`General Guidelines`}</h4>\n    <ul>\n      <li parentName=\"ul\">{`Every component should be treated as an API.`}</li>\n      <li parentName=\"ul\">{`When in doubt, break up a component or function into smaller useful parts.`}</li>\n    </ul>\n    <h4 {...{\n      \"id\": \"es6-and-es7\"\n    }}>{`ES6 and ES7`}</h4>\n    <p>{`The flavor of JS we use is based on ES5 but with ES6 and ES7 transforms. This means, that a large part of the syntax is based on the current version of JS, but is flavored with capabilities that come with ES6 and ES7. For example:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Object destructing (ES6)`}</li>\n      <li parentName=\"ul\">{`Object spread (ES7)`}</li>\n      <li parentName=\"ul\">{`Rest and spread params (ES6)`}</li>\n      <li parentName=\"ul\">{`Promises (ES6)`}</li>\n      <li parentName=\"ul\">{`Arrow Functions (ES6)`}</li>\n      <li parentName=\"ul\">{`Object concise method (ES6)`}</li>\n      <li parentName=\"ul\">{`Object short notation (ES6)`}</li>\n      <li parentName=\"ul\">{`Classes (ES6)`}</li>\n    </ul>\n    <p>{`For more information see `}<a parentName=\"p\" {...{\n        \"href\": \"https://facebook.github.io/react-native/docs/javascript-environment.html#content\"\n      }}>{`React Native JavaScript Environment`}</a></p>\n    <h4 {...{\n      \"id\": \"component-creation\"\n    }}>{`Component Creation`}</h4>\n    <p>{`Components should be created using ES6 classes and Object Short Notation.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`// Bad\n\nvar ChatBox = React.createClass({\n\n  getInitialState: function(){\n    return {toggle: 'on'};\n  },\n\n  render: function(){\n    return (\n      <Text> Example </Text>\n    );\n  }\n\n})\n\n// Good\n\nclass ChatBox extends React.Component{\n\n  constructor(){\n    this.state = {toggle: 'on'}\n  }\n\n  render(){\n    return (\n      <Text> Example </Text>\n    );\n  }\n\n}\n`}</code></pre>\n    <p>{`Component functions that are not life-cycle functions should be created with an underscore at the beginning of the function name.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`_fetchmessages(){\n  fetch(requestURL)\n    .then((response)=> response.json() )\n    .then((responseData)=> {\n      this.setState({messages: responseData})\n    })\n    .done();\n}\n\n_turnEditOn(){\n  this.setState({edit: true});\n}\n`}</code></pre>\n    <p>{`Keep life-cycle functions at the top of the object constructor in logical order.`}</p>\n    <ol>\n      <li parentName=\"ol\"><inlineCode parentName=\"li\">{`constructor`}</inlineCode></li>\n      <li parentName=\"ol\"><inlineCode parentName=\"li\">{`componentWillMount`}</inlineCode></li>\n      <li parentName=\"ol\"><inlineCode parentName=\"li\">{`componentDidMount`}</inlineCode></li>\n      <li parentName=\"ol\"><inlineCode parentName=\"li\">{`componentWillReceiveProps`}</inlineCode></li>\n      <li parentName=\"ol\"><inlineCode parentName=\"li\">{`render`}</inlineCode></li>\n    </ol>\n    <p>{`For more information see `}<a parentName=\"p\" {...{\n        \"href\": \"https://facebook.github.io/react/docs/component-specs.html\"\n      }}>{`Component Specs and Lifecycle`}</a></p>\n    <p>{`Every component function should be as parsimonious as possible. If you find yourself creating a function that is doing more than two things at once, then break up the function into smaller functions.`}</p>\n    <h4 {...{\n      \"id\": \"using-bind\"\n    }}>{`Using Bind`}</h4>\n    <p>{`When passing a function as prop to a child component, the use of bind is not necessary. React Native automatically binds `}<inlineCode parentName=\"p\">{`this`}</inlineCode>{` to that function.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`// Bad\n\nrender(){\n  return(\n    <CameraButton\n      selectImage={this.selectImage.bind(this)}\n    />\n  );\n}\n\n// Good\n\nrender(){\n  return(\n    <CameraButton\n      selectImage={this.selectImage}\n    />\n  );\n}\n`}</code></pre>\n    <p>{`It necessary however to use bind, when passing a component function to an event prop. For example:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`<ListView\n  renderRow={this.renderMessage.bind(this)}\n/>\n\n...\n\nrenderMessage(message) {\n  return (\n    <Message\n      message={message}\n      navigator={this.props.navigator}\n      fetchMessages={this.fetchMessages.bind}\n    />\n  );\n}\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"passing-props\"\n    }}>{`Passing Props`}</h4>\n    <p>{`Explicitly pass props if the number of props is small or if the prop is important enough that you want to be explicit about it.`}</p>\n    <p>{`If there are a large number of props, pass in the whole thing or use destructuring to break it apart and pass them correctly.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`//Bad\n\n<MessageBody\n  content=this.props.message.content\n/>\n<MessageFooter\n  replies=this.props.message.replies\n  upvotes=this.props.message.upvotes\n  timestamp=this.props.message.timestamp\n  distance=this.props.message.distance\n/>\n\n// Good\n\nvar {content, ...footer} = this.props.message\n\n<MessageBody {content} />\n<MessageFooter {..footer} />\n`}</code></pre>\n    <p>{`Sometimes you want to combine objects and pass them as props. In that case use `}<inlineCode parentName=\"p\">{`Object.assign`}</inlineCode>{`.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`_onPressMessage() {\n\n  var {message, ...props} = this.props;\n  var {votes, ...message} = this.props.message;\n  var fetchMessages = this._updateHearts;\n\n  this.props.navigator({\n    component: Comments,\n    passProps: Object.assign(\n      {..props},\n      {..message},\n      {fetchMessages}\n    ),\n  })\n}\n`}</code></pre>\n    <p>{`For more information on passing props, see React Native `}<a parentName=\"p\" {...{\n        \"href\": \"https://facebook.github.io/react/docs/transferring-props.html\"\n      }}>{`Transferring Props`}</a></p>\n    <h4 {...{\n      \"id\": \"state-and-props\"\n    }}>{`State and Props`}</h4>\n    <p>{`Props are immutable. Do not mutate them.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`// Bad\n\nvar component = <Component />;\ncomponent.props.foo = x;\ncomponent.props.bar = y;\n`}</code></pre>\n    <p>{`State is mutable.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`constructor(){\n  this.state = {messages:[]};\n}\n\n...\n\n_addMessages(data){\n  var messages = data.messages;\n  this.setState({\n    messages: this.state.messages.push(messages)\n  })\n}\n`}</code></pre>\n    <p>{`Props can be passed into state, but be explicit that they are only 'initial values'`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`constructor(props){\n  var initialNum = this.props.numHearts;\n  this.state = {numHearts: initialNum};\n}\n\n...\n\n_handleClick(){\n  this.setState({numHearts: this.state.numHearts + 1});\n}\n`}</code></pre>\n    <p>{`Be sure to  make use of `}<inlineCode parentName=\"p\">{`componentWillReceiveProps`}</inlineCode>{` to sync state and props, if props are passed to state.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`componentWillReceiveProps(props){\n  this.setState({numHearts: props.numHearts});\n}\n`}</code></pre>\n    <h1 {...{\n      \"id\": \"react-style-guide-cheet-sheet\"\n    }}>{`React Style Guide Cheet Sheet`}</h1>\n    <h2 {...{\n      \"id\": \"custom-classes\"\n    }}>{`Custom Classes`}</h2>\n    <ul>\n      <li parentName=\"ul\">{`place custom functions above the render function.`}</li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`React.createClass({\n  displayName : '',\n  propTypes: {},\n  mixins : [],\n  getInitialState : function() {},\n  componentWillMount : function() {},\n  componentWillUnmount : function() {},\n  _onChange : function() {},\n  _onCreate : function() {},\n  render : function() {}\n});\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"conditional-html\"\n    }}>{`Conditional html`}</h2>\n    <p>{`In JSX, anything in {} will be evaluated in JavaScript`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`{this.state.show && 'This is Shown'}\n{this.state.on ? ‘On’ : ‘Off’}\n`}</code></pre>\n    <p>{`For anything more complicated, I have typically been creating a variable inside the render method, suffixed with ‘Html’:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`var dinosaurHtml = '';\nif (this.state.showDinosaurs) {\n  dinosaurHtml = (\n    <section>\n      <DinosaurTable />\n      <DinosaurPager />\n    </section>\n  );\n}\n\nreturn (\n  <div>\n    ...\n    {dinosaurHtml}\n    ...\n  </div>\n);\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"jsx-as-variable-or-return-value\"\n    }}>{`JSX as variable or return value`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`var multilineJsx = (\n  <header>\n    <Logo />\n    <Nav />\n  </header>\n);\n\nvar singleLineJsx = <h1>Simple JSX</h1>;\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"self-closing-tags\"\n    }}>{`Self-closing tags`}</h2>\n    <p>{`Components without children should simply close themselves`}</p>\n    <p><strong parentName=\"p\">{` correct `}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`<Logo />\n`}</code></pre>\n    <p><strong parentName=\"p\">{` bad practise `}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`<Logo></Logo>\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"list-iterations\"\n    }}>{`List Iterations`}</h2>\n    <p>{`List iterations are better done inline, especially if each list item will be rendered as a component. You may even be able to reduce to one line with fat arrows.`}</p>\n    <p><strong parentName=\"p\">{` Note `}</strong>{` This does require the harmony flag on JSX to be included, which will toggle certain ES6 features (fat arrows, template strings, destructuring, and rest parameters)`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`render : function() {\n  return (\n    <ul>\n      {this.state.dinosaursList.map(dinosaur => <DinosaurItem item={dinosaur} />)}\n    </ul>\n  );\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"forms\"\n    }}>{`Forms`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`<form onChange={this.inputHandler}>\n  ...\n    <input type=\"text\" name=\"newDinosaurName\" value={this.state.newDinosaurName} />\n  ...\n</form>\n\n// input handler\n\nfunction(event) {\n  actions.propagateValue({\n    field : event.target.name,\n    value : event.target.value\n  });\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"formatting-attributes\"\n    }}>{`Formatting Attributes`}</h2>\n    <p>{`Preferable`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`<input\n  type=\"text\"\n  value={this.state.newDinosaurName}\n  onChange={this.inputHandler.bind(this, 'newDinosaurName')} />\n`}</code></pre>\n    <p>{`Alternative`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`<input type=\"text\"\n       value={this.state.newDinosaurName}\n       onChange={this.inputHandler.bind(this, 'newDinosaurName')} />\n`}</code></pre>\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  "],"sourceRoot":""}