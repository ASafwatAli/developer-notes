(window.webpackJsonp=window.webpackJsonp||[]).push([[123],{"./manual/Design-Patterns/Proxy-Pattern.md":function(e,n,r){"use strict";r.r(n),r.d(n,"default",function(){return s});var t=r("./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js"),a=(r("./node_modules/react/index.js"),r("./node_modules/@mdx-js/react/dist/index.es.js")),i={},o="wrapper";function s(e){var n=e.components,r=Object(t.a)(e,["components"]);return Object(a.b)(o,Object.assign({},i,r,{components:n,mdxType:"MDXLayout"}),Object(a.b)("h1",{id:"proxy-pattern"},"Proxy Pattern"),Object(a.b)("p",null,"The Proxy object in the design pattern can:"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"Can be used to substitude for another object (Subject)"),Object(a.b)("li",{parentName:"ul"},"Implements additional functionality to control the access to this subject")),Object(a.b)("p",null,"This enables to work through a Proxy object to perform additional functionality when accessing a subject. For example, to check the access rights of a client accessing a sensitive object."),Object(a.b)("h2",{id:"car-driver-example"},"Car Driver Example"),Object(a.b)("p",null,"In this example, we will create a class ",Object(a.b)("inlineCode",{parentName:"p"},"ProxyCar")," that will act as a proxy for the ",Object(a.b)("inlineCode",{parentName:"p"},"Car")," class by ensure that you of a correct age to drive the car (",Object(a.b)("inlineCode",{parentName:"p"},"driveCar")," function)."),Object(a.b)("p",null,"This simple example can be replicated to help proxy things such as network requests or authentication to certain classes."),Object(a.b)("pre",null,Object(a.b)("code",Object.assign({parentName:"pre"},{className:"language-javascript"}),"interface ICar {\n  driveCar(): void;\n}\n\n// Real Object\nclass Car implements ICar {\n  driveCar() {\n    console.log('Car has been driven!');\n  }\n}\n\nclass ProxyCar implements ICar {\n  private _driver: Driver;\n  private _realCar: ICar;\n\n  constructor(driver: Driver) {\n    this._driver = driver;\n    this._realCar = new Car();\n  }\n\n  driveCar() {\n    if (this._driver.age < 16) {\n      console.log('Driver is too young to drive');\n    } else {\n      this._realCar.driveCar();\n    }\n  }\n}\n\nclass Driver {\n  public age: number;\n\n  constructor(age: number) {\n    this.age = age;\n  }\n}\n\n(function main() {\n  const carWithIneligibleDriver: ICar = new ProxyCar(new Driver(15));\n  carWithIneligibleDriver.driveCar(); // prints 'Driver is too young to drive'\n\n  const carWithEligibleDriver: ICar = new ProxyCar(new Driver(25));\n  carWithEligibleDriver.driveCar(); // prints 'Car has been driven'\n})()\n")))}s&&s===Object(s)&&Object.isExtensible(s)&&Object.defineProperty(s,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"MDXContent",filename:"manual/Design-Patterns/Proxy-Pattern.md"}}),s.isMDXComponent=!0}}]);
//# sourceMappingURL=manual-design-patterns-proxy-pattern.101a1afd2417ec7a4a77.js.map