{"version":3,"sources":["/Users/dennis.okeeffe/Project-Imposter/developer-notes/manual/Kafka/Kafka-Internals.md"],"names":["layoutProps","MDXLayout","MDXContent","_ref","components","props","Object","_Users_dennis_okeeffe_Project_Imposter_developer_notes_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","_mdx_js_react__WEBPACK_IMPORTED_MODULE_2__","assign","mdxType","id","parentName","align","isMDXComponent"],"mappings":"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","file":"static/js/manual-kafka-kafka-internals.2d1918f1.js","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"kafka-internals\"\n    }}>{`Kafka Internals`}</h1>\n    <h2 {...{\n      \"id\": \"broker\"\n    }}>{`Broker`}</h2>\n    <p>{`Each broker is assigned an ID. When there are multiple brokers in a cluster (best practice), one is selected as the `}<inlineCode parentName=\"p\">{`Controller`}</inlineCode>{`. The Controller will be responsible for electing the leader of the partition.`}</p>\n    <h2 {...{\n      \"id\": \"broker-config\"\n    }}>{`Broker Config`}</h2>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Term`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Path`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Broker Config`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`kafka/config/server.properties`}</inlineCode></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Server Logs`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`kafka/logs/server.log`}</inlineCode></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Messages Logs`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`kafka/data/kafka`}</inlineCode></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`View Nodes in Zookeeper Shell`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`kafka/bin/zookeeper-shell.sh zookeeper1:2181/kafka && ls get /controller`}</inlineCode></td>\n        </tr>\n      </tbody>\n    </table>\n    <h2 {...{\n      \"id\": \"replicas\"\n    }}>{`Replicas`}</h2>\n    <p><inlineCode parentName=\"p\">{`Replicas`}</inlineCode>{` provide guarantees for the availability of the data. The replicator `}<inlineCode parentName=\"p\">{`factor`}</inlineCode>{` provides a way for the Kafka administrator to control the availability of that data in the event of failure. For example, if the replication factor is set to 3, you will have 3 copies of each partition spread across the brokers.`}</p>\n    <p>{`What are the goals for placement of replicas?`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Spread evenly amongst brokers`}</li>\n      <li parentName=\"ul\">{`Each partition is on a different broker`}</li>\n      <li parentName=\"ul\">{`Put replicas on different racks`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"handling-requests\"\n    }}>{`Handling Requests`}</h2>\n    <p>{`Producer or consumer sends request to the Broker and the Broker handles the request in the following way:`}</p>\n    <ol>\n      <li parentName=\"ol\">{`Acceptor Thread: Creates the connection from client to Broker.`}</li>\n      <li parentName=\"ol\">{`Processor Thread: Takes requests from clientss and places them into the request queue.`}</li>\n      <li parentName=\"ol\">{`IO Thread: Processes the requests in the requests queue.`}</li>\n      <li parentName=\"ol\">{`Request Queue: Requests waiting to be processed.`}</li>\n      <li parentName=\"ol\">{`Response Queue: Requests waiting to be sent back to the clients.`}</li>\n    </ol>\n    <h2 {...{\n      \"id\": \"partitions\"\n    }}>{`Partitions`}</h2>\n    <p>{`Within a broker, a topic can be broken down into multiple partitions (with n-1 partitions being replicas).`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Partitions within a topic are split between brokers.`}</li>\n      <li parentName=\"ul\">{`Partitions themselves will never be split up.`}</li>\n      <li parentName=\"ul\">{`Partitions will continue to get larger as the number of messages grow.`}</li>\n      <li parentName=\"ul\">{`Messages will never be removed from the partition, only appended.`}</li>\n      <li parentName=\"ul\">{`Messages are stored in the directory specified in the `}<inlineCode parentName=\"li\">{`server.properties`}</inlineCode>{` file (log.dirs).`}</li>\n    </ul>\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  "],"sourceRoot":""}