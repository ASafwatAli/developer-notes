(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{"./manual/Algorithms/First-Reverse.md":function(e,t,n){"use strict";n.r(t),n.d(t,"default",function(){return i});var r=n("./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js"),s=(n("./node_modules/react/index.js"),n("./node_modules/@mdx-js/react/dist/index.es.js")),a={},o="wrapper";function i(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(s.b)(o,Object.assign({},a,n,{components:t,mdxType:"MDXLayout"}),Object(s.b)("h1",{id:"first-reverse"},"First Reverse"),Object(s.b)("h2",{id:"question"},"Question"),Object(s.b)("p",null,'Have the function FirstReverse(str) take the str parameter being passed and return the string in reversed order. For example: if the input string is "Hello World and Coders" then your program should return the string sredoC dna dlroW olleH.\nExamples'),Object(s.b)("h2",{id:"examples"},"Examples"),Object(s.b)("pre",null,Object(s.b)("code",Object.assign({parentName:"pre"},{className:"language-shell"}),'Input: "coderbyte"\nOutput: etybredoc\n')),Object(s.b)("pre",null,Object(s.b)("code",Object.assign({parentName:"pre"},{className:"language-shell"}),'Input: "I Love Code"\nOutput: edoC evoL I\n')),Object(s.b)("h2",{id:"answer"},"Answer"),Object(s.b)("pre",null,Object(s.b)("code",Object.assign({parentName:"pre"},{className:"language-javascript"}),"function FirstReverse(str) {\n  // code goes here\n  return str\n    .split('')\n    .reverse()\n    .join('');\n}\n")))}i&&i===Object(i)&&Object.isExtensible(i)&&Object.defineProperty(i,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"MDXContent",filename:"manual/Algorithms/First-Reverse.md"}}),i.isMDXComponent=!0}}]);
//# sourceMappingURL=manual-algorithms-first-reverse.101a1afd2417ec7a4a77.js.map