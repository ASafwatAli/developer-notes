(window.webpackJsonp=window.webpackJsonp||[]).push([[498],{"./manual/Tooling/Awesome-CLI-Tools.md":function(e,n,o){"use strict";o.r(n),o.d(n,"default",function(){return c});var t=o("./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js"),a=(o("./node_modules/react/index.js"),o("./node_modules/@mdx-js/react/dist/index.es.js")),l={},r="wrapper";function c(e){var n=e.components,o=Object(t.a)(e,["components"]);return Object(a.b)(r,Object.assign({},l,o,{components:n,mdxType:"MDXLayout"}),Object(a.b)("h1",{id:"awesome-tooling-cli"},"Awesome Tooling CLI"),Object(a.b)("h2",{id:"resources"},"Resources"),Object(a.b)("ol",null,Object(a.b)("li",{parentName:"ol"},Object(a.b)("a",Object.assign({parentName:"li"},{href:"https://github.com/cespare/reflex"}),"Reflex"))),Object(a.b)("h2",{id:"reflex"},"Reflex"),Object(a.b)("blockquote",null,Object(a.b)("p",{parentName:"blockquote"},"Reflex is a small tool to watch a directory and rerun a command when certain files change. It's great for automatically running compile/lint/test tasks and for reloading your application when the code changes.")),Object(a.b)("pre",null,Object(a.b)("code",Object.assign({parentName:"pre"},{className:"language-shell"}),"# Rerun make whenever a .c file changes\nreflex -r '\\.c$' make\n\n# Compile and rerun hello.jar whenever a kotlin file changes\nreflex -r '\\.kt$' kotlinc hello.kt -include-runtime -d hello.jar && java -jar hello.jar\n")))}c&&c===Object(c)&&Object.isExtensible(c)&&Object.defineProperty(c,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"MDXContent",filename:"manual/Tooling/Awesome-CLI-Tools.md"}}),c.isMDXComponent=!0}}]);
//# sourceMappingURL=manual-tooling-awesome-cli-tools.101a1afd2417ec7a4a77.js.map