{"version":3,"sources":["/Users/dennis.okeeffe/Project-Imposter/developer-notes/manual/React-Native/React-Native-Code-Guide.md"],"names":["layoutProps","MDXLayout","MDXContent","_ref","components","props","Object","_Users_dennis_okeeffe_Project_Imposter_developer_notes_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","_mdx_js_react__WEBPACK_IMPORTED_MODULE_2__","assign","mdxType","id","parentName","className","isMDXComponent"],"mappings":"sYAWMA,EAAc,GAGdC,EAAY,UACH,SAASC,EAATC,GAGZ,IAFDC,EAECD,EAFDC,WACGC,EACFC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,gBACD,OAAOG,OAAAE,EAAA,EAAAF,CAACL,EAADK,OAAAG,OAAA,GAAeT,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYM,QAAQ,cAC5EJ,OAAAE,EAAA,EAAAF,CAAA,KAAQ,CACNK,GAAM,sCADR,sCAGAL,OAAAE,EAAA,EAAAF,CAAA,KAAQ,CACNK,GAAM,6BADR,8BAGAL,OAAAE,EAAA,EAAAF,CAAA,SAAGA,OAAAE,EAAA,EAAAF,CAAA,UAAQM,WAAW,KAAnB,oBACHN,OAAAE,EAAA,EAAAF,CAAA,WAAKA,OAAAE,EAAA,EAAAF,CAAA,OAAAA,OAAAG,OAAA,CAAMG,WAAW,OAAU,CAC5BC,UAAa,wBADZ,mVAYLP,OAAAE,EAAA,EAAAF,CAAA,WACAA,OAAAE,EAAA,EAAAF,CAAA,KAAQ,CACNK,GAAM,wBADR,yBAGAL,OAAAE,EAAA,EAAAF,CAAA,WAAKA,OAAAE,EAAA,EAAAF,CAAA,OAAAA,OAAAG,OAAA,CAAMG,WAAW,OAAU,CAC5BC,UAAa,wBADZ,0nCA8CLP,OAAAE,EAAA,EAAAF,CAAA,WACAA,OAAAE,EAAA,EAAAF,CAAA,KAAQ,CACNK,GAAM,4BADR,6BAGAL,OAAAE,EAAA,EAAAF,CAAA,WAAKA,OAAAE,EAAA,EAAAF,CAAA,OAAAA,OAAAG,OAAA,CAAMG,WAAW,OAAU,CAC5BC,UAAa,wBADZ,qEAILP,OAAAE,EAAA,EAAAF,CAAA,WACAA,OAAAE,EAAA,EAAAF,CAAA,KAAQ,CACNK,GAAM,6CADR,8CAGAL,OAAAE,EAAA,EAAAF,CAAA,mFACAA,OAAAE,EAAA,EAAAF,CAAA,UACEA,OAAAE,EAAA,EAAAF,CAAA,MAAIM,WAAW,MAAf,uEACAN,OAAAE,EAAA,EAAAF,CAAA,MAAIM,WAAW,MAAf,2EACAN,OAAAE,EAAA,EAAAF,CAAA,MAAIM,WAAW,MAAf,wEAEFN,OAAAE,EAAA,EAAAF,CAAA,WACAA,OAAAE,EAAA,EAAAF,CAAA,KAAQ,CACNK,GAAM,yBADR,2BAGAL,OAAAE,EAAA,EAAAF,CAAA,yIACAA,OAAAE,EAAA,EAAAF,CAAA,WAAKA,OAAAE,EAAA,EAAAF,CAAA,OAAAA,OAAAG,OAAA,CAAMG,WAAW,OAAU,CAC5BC,UAAa,wBADZ,mZA0BLP,OAAAE,EAAA,EAAAF,CAAA,WACAA,OAAAE,EAAA,EAAAF,CAAA,SAAGA,OAAAE,EAAA,EAAAF,CAAA,UAAQM,WAAW,KAAnB,cACHN,OAAAE,EAAA,EAAAF,CAAA,SAAGA,OAAAE,EAAA,EAAAF,CAAA,UAAQM,WAAW,KAAnB,kBACHN,OAAAE,EAAA,EAAAF,CAAA,SAAGA,OAAAE,EAAA,EAAAF,CAAA,cAAYM,WAAW,KAAvB,UAAH,+CAAqGN,OAAAE,EAAA,EAAAF,CAAA,cAAYM,WAAW,KAAvB,SAArG,SACAN,OAAAE,EAAA,EAAAF,CAAA,WACAA,OAAAE,EAAA,EAAAF,CAAA,KAAQ,CACNK,GAAM,wBADR,yBAGAL,OAAAE,EAAA,EAAAF,CAAA,2DACAA,OAAAE,EAAA,EAAAF,CAAA,WAAKA,OAAAE,EAAA,EAAAF,CAAA,OAAAA,OAAAG,OAAA,CAAMG,WAAW,OAAU,CAC5BC,UAAa,wBADZ,ilBAgCLP,OAAAE,EAAA,EAAAF,CAAA,KAAQ,CACNK,GAAM,yCADR,4CAGAL,OAAAE,EAAA,EAAAF,CAAA,gDACAA,OAAAE,EAAA,EAAAF,CAAA,WAAKA,OAAAE,EAAA,EAAAF,CAAA,OAAAA,OAAAG,OAAA,CAAMG,WAAW,OAAU,CAC5BC,UAAa,wBADZ,mmHA4JTX,EAAWY,gBAAiB","file":"static/js/manual-react-native-react-native-code-guide.bfa36c6c.js","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"react-native-cheat-sheet-using-es6\"\n    }}>{`React-Native Cheat Sheet using ES6`}</h1>\n    <h2 {...{\n      \"id\": \"rn-1-importing-from-react\"\n    }}>{`RN-1: Importing from React`}</h2>\n    <p><strong parentName=\"p\">{`in index.ios.js`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`// import from React and React-Native\nimport React, { Component } from 'react';\n\n// required components go here -> check from the docs\nimport { AppRegistry, TabBarIOS, StyleSheet, Text, View } from 'react-native';\n\n// import from your own files\nimport { Featured } from './Featured.js';\nimport { Search } from './Search.js';\n`}</code></pre>\n    <hr></hr>\n    <h2 {...{\n      \"id\": \"rn-2-example-classes\"\n    }}>{`RN-2: Example classes`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`// this is an example class\nclass BookSearch extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedTab: 'featured'\n    };\n  }\n\n  // this is where the view renders\n  render() {\n    return (\n      // JSX commands relate to imports from react-native\n      // {} is where the JSX compiles Javascript\n      <TabBarIOS selectedTab={this.state.selectedTab}>\n        <TabBarIOS.Item\n          title=\"Left Tab\"\n          selected={this.state.selectedTab === 'featured'}\n          icon={{ uri: base64Icon, scale: 3 }}\n          onPress={() => {\n            this.setState({\n              selectedTab: 'featured'\n            });\n          }}\n        >\n          <Featured />\n        </TabBarIOS.Item>\n        <TabBarIOS.Item\n          title=\"Right Tab\"\n          selected={this.state.selectedTab === 'search'}\n          icon={{ uri: base64Icon, scale: 3 }}\n          onPress={() => {\n            this.setState({\n              selectedTab: 'search'\n            });\n          }}\n        >\n          <Search />\n        </TabBarIOS.Item>\n      </TabBarIOS>\n    );\n  }\n}\n`}</code></pre>\n    <hr></hr>\n    <h2 {...{\n      \"id\": \"rn-3-registry-for-an-app\"\n    }}>{`RN-3: Registry for an App`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`AppRegistry.registerComponent('BookSearch', () => BookSearch);\n`}</code></pre>\n    <hr></hr>\n    <h2 {...{\n      \"id\": \"rn-4-debugging---important-things-to-note\"\n    }}>{`RN-4: Debugging - Important things to note`}</h2>\n    <p>{`If the AppRegistry is not working (error regarding App not registered)`}</p>\n    <ol>\n      <li parentName=\"ol\">{`Check all terminal sessions that have used React Native have closed`}</li>\n      <li parentName=\"ol\">{`Try running the command npm link from the main directory of the project`}</li>\n      <li parentName=\"ol\">{`Check the moduleName in the AppDelegate.m file in the Xcode Project`}</li>\n    </ol>\n    <hr></hr>\n    <h2 {...{\n      \"id\": \"rn-5-stylesheetcreate\"\n    }}>{`RN-5: StyleSheet.create`}</h2>\n    <p>{`In this example, you can see how the 'const styles' variable is declared and how it is implemented in the render() function.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`const styles = StyleSheet.create({\n  description: {\n    fontSize: 20,\n    backgroundColor: 'white'\n  },\n  container: {\n    flex: 1\n  }\n});\n\nclass Search extends Component {\n  render() {\n    return (\n      <NavigatorIOS\n        style={styles.container}\n        initialRoute={{\n          title: 'Search Books',\n          component: SearchBooks\n        }}\n      />\n    );\n  }\n}\n`}</code></pre>\n    <hr></hr>\n    <p><strong parentName=\"p\">{`iOS Views`}</strong></p>\n    <p><strong parentName=\"p\">{` ! important `}</strong></p>\n    <p><inlineCode parentName=\"p\">{`<View>`}</inlineCode>{` tags are treated similar to as if they are `}<inlineCode parentName=\"p\">{`<div>`}</inlineCode>{` tags`}</p>\n    <hr></hr>\n    <h2 {...{\n      \"id\": \"rn-6-navigation-view\"\n    }}>{`RN-6: Navigation View`}</h2>\n    <p>{`Example: Search.js from the BookSearch project`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`'use strict';\n\nimport React, { Component } from 'react';\nimport { StyleSheet, NavigatorIOS, Text } from 'react-native';\nimport { SearchBooks } from './SearchBooks.js';\n\nconst styles = StyleSheet.create({\n  description: {\n    fontSize: 20,\n    backgroundColor: 'white'\n  },\n  container: {\n    flex: 1\n  }\n});\n\nexport default class Search extends Component {\n  render() {\n    return (\n      <NavigatorIOS\n        style={styles.container}\n        initialRoute={{\n          title: 'Search Books',\n          component: SearchBooks\n        }}\n      />\n    );\n  }\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"rn-7-uitablecellview-replica-listview\"\n    }}>{`RN-7: UITableCellView replica (ListView)`}</h2>\n    <p>{`BookList.js - taken from BookSearch`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`'use strict';\n\nimport React, { Component } from 'react';\n\nimport {\n  Image,\n  StyleSheet,\n  Text,\n  View,\n  ListView,\n  TouchableHighlight,\n  ActivityIndicatorIOS\n} from 'react-native';\n\nimport { BookDetail } from './BookDetail.js';\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#F5FCFF',\n    padding: 10\n  },\n  thumbnail: {\n    width: 53,\n    height: 81,\n    marginRight: 10\n  },\n  rightContainer: {\n    flex: 1\n  },\n  title: {\n    fontSize: 20,\n    marginBottom: 8\n  },\n  author: {\n    color: '#656565'\n  },\n  separator: {\n    height: 1,\n    backgroundColor: '#dddddd'\n  },\n  listView: {\n    marginTop: 60,\n    backgroundColor: '#F5FCFF'\n  },\n  loading: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});\n\n// the commented out code related to FAKE_BOOK_DATA is how you can stub some data\n\n// const FAKE_BOOK_DATA = [\n//     {volumeInfo: {title: 'The Catcher in the Rye', authors: \"J. D. Salinger\", imageLinks: {thumbnail: 'http://books.google.com/books/content?id=PCDengEACAAJ&printsec=frontcover&img=1&zoom=1&source=gbs_api'}}}\n// ];\n\nconst REQUEST_URL =\n  'https://www.googleapis.com/books/v1/volumes?q=subject:fiction';\n\nexport default class BookList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: true,\n      dataSource: new ListView.DataSource({\n        rowHasChanged: (row1, row2) => row1 !== row2\n      })\n    };\n  }\n\n  componentDidMount() {\n    // var books = FAKE_BOOK_DATA;\n    // this.setState({\n    //     dataSource: this.state.dataSource.cloneWithRows(books)\n    // });\n    this.fetchData();\n  }\n\n  fetchData() {\n    fetch(REQUEST_URL)\n      .then((response) => response.json())\n      .then((responseData) => {\n        this.setState({\n          dataSource: this.state.dataSource.cloneWithRows(responseData.items),\n          isLoading: false\n        });\n      })\n      .done();\n  }\n\n  render() {\n    // var book = FAKE_BOOK_DATA[0];\n    if (this.state.isLoading) {\n      return this.renderLoadingView();\n    }\n\n    return (\n      <ListView\n        dataSource={this.state.dataSource}\n        renderRow={this.renderBook.bind(this)}\n        style={styles.listView}\n      />\n    );\n  }\n\n  renderLoadingView() {\n    return (\n      <View style={styles.loading}>\n        <ActivityIndicatorIOS size=\"large\" />\n        <Text>Loading books...</Text>\n      </View>\n    );\n  }\n\n  renderBook(book) {\n    return (\n      <TouchableHighlight\n        onPress={() => this.showBookDetail(book)}\n        underlayColor=\"#dddddd\"\n      >\n        <View>\n          <View style={styles.container}>\n            <Image\n              source={{ uri: book.volumeInfo.imageLinks.thumbnail }}\n              style={styles.thumbnail}\n            />\n            <View style={styles.rightContainer}>\n              <Text style={styles.title}>{book.volumeInfo.title}</Text>\n              <Text style={styles.author}>{book.volumeInfo.authors}</Text>\n            </View>\n          </View>\n          <View style={styles.separator} />\n        </View>\n      </TouchableHighlight>\n    );\n  }\n\n  showBookDetail(book) {\n    this.props.navigator.push({\n      title: book.volumeInfo.title,\n      component: BookDetail,\n      passProps: { book }\n    });\n  }\n}\n`}</code></pre>\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  "],"sourceRoot":""}