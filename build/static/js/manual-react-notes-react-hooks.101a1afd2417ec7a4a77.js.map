{"version":3,"sources":["/Users/dennis.okeeffe/Project-Imposter/developer-notes/manual/React-Notes/React-Hooks.md"],"names":["layoutProps","MDXLayout","MDXContent","_ref","components","props","Object","_Users_dennis_okeeffe_Project_Imposter_developer_notes_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","_mdx_js_react__WEBPACK_IMPORTED_MODULE_2__","assign","mdxType","id","parentName","align","className","isMDXComponent"],"mappings":"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","file":"static/js/manual-react-notes-react-hooks.8e26c0be.js","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"react-hooks\"\n    }}>{`React Hooks`}</h1>\n    <p>{`Hooks introduces `}<inlineCode parentName=\"p\">{`State`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`Lifecycle Methods`}</inlineCode>{` to function-based components.`}</p>\n    <p>{`Hooks make it really easy to share logic between components.`}</p>\n    <h2 {...{\n      \"id\": \"some-basic-hooks\"\n    }}>{`Some Basic Hooks`}</h2>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Name`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Function`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`useState`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Component-level state`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`useEffect`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Use 'lifecycle methods'`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`useContext`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Allow use of context system`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`useRef`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Allow func component to use ref system`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`useReducer`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Allow func component to store data through a 'reducer'`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <h2 {...{\n      \"id\": \"before-hooks\"\n    }}>{`Before Hooks`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`// components/App.js\nimport React from 'react';\n\nexport default App extends React.Component {\n    state = {\n        counter: 0\n    }\n\n    handleClick = () => this.setState({counter: this.state.counter++})\n\n    render() {\n        return <div>\n            <button onClick={this.handleClick}>{this.state.counter}</button>\n        </div>\n    }\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"after-hooks\"\n    }}>{`After Hooks`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`// components/App.js\nimport React, {useState, useEffect} from 'react';\n\nconst App = () => {\n    const [counter, setCounter] = useState(0);\n\n    const updateCounter = () => setCounter(counter++)\n\n    useEffect(() => {\n        console.log('Counter updated!');\n    }, [counter]);\n\n    return <div>\n        <button onClick={updateCounter}>{counter}</button>\n    </div>\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"lifecycles-with-useeffect\"\n    }}>{`Lifecycles with useEffect`}</h2>\n    <p><inlineCode parentName=\"p\">{`useEffect`}</inlineCode>{` allows us to effectively use a combined version of `}<inlineCode parentName=\"p\">{`componentDidMount`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`componentDidUpdate`}</inlineCode>{`.`}</p>\n    <p>{`Notes:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`useEffect argument function cannot be an async func.`}</li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`import React, {useEffect} from 'react';\n\n// second argument controls whether or not the arrow function is called\nuseEffect(() => {\n    console.log('Counter updated!');\n}, [counter]);\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"code-reuse-example\"\n    }}>{`Code Reuse Example`}</h2>\n    <p>{`Believe it or not, what we can actually do is abstract the useEffect outside of the function component. `}</p>\n    <p>{`This is incredibly useful to create reuseable effects.`}</p>\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  "],"sourceRoot":""}