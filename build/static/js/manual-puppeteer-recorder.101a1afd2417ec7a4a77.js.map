{"version":3,"sources":["/Users/dennis.okeeffe/Project-Imposter/developer-notes/manual/Puppeteer/Recorder.md"],"names":["layoutProps","MDXLayout","MDXContent","_ref","components","props","Object","_Users_dennis_okeeffe_Project_Imposter_developer_notes_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","_mdx_js_react__WEBPACK_IMPORTED_MODULE_2__","assign","mdxType","id","parentName","className","isMDXComponent"],"mappings":"oXAWMA,EAAc,GAGdC,EAAY,UACH,SAASC,EAATC,GAGZ,IAFDC,EAECD,EAFDC,WACGC,EACFC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,gBACD,OAAOG,OAAAE,EAAA,EAAAF,CAACL,EAADK,OAAAG,OAAA,GAAeT,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYM,QAAQ,cAC5EJ,OAAAE,EAAA,EAAAF,CAAA,KAAQ,CACNK,GAAM,sBADR,sBAGAL,OAAAE,EAAA,EAAAF,CAAA,2FACAA,OAAAE,EAAA,EAAAF,CAAA,KAAQ,CACNK,GAAM,WADR,WAGAL,OAAAE,EAAA,EAAAF,CAAA,kFACAA,OAAAE,EAAA,EAAAF,CAAA,KAAQ,CACNK,GAAM,SADR,SAGAL,OAAAE,EAAA,EAAAF,CAAA,oBAAeA,OAAAE,EAAA,EAAAF,CAAA,cAAYM,WAAW,KAAvB,WAAf,gEAAmIN,OAAAE,EAAA,EAAAF,CAAA,cAAYM,WAAW,KAAvB,UAAnI,KACAN,OAAAE,EAAA,EAAAF,CAAA,WAAKA,OAAAE,EAAA,EAAAF,CAAA,OAAAA,OAAAG,OAAA,CAAMG,WAAW,OAAU,CAC5BC,UAAa,wBADZ,qkBA0BLP,OAAAE,EAAA,EAAAF,CAAA,KAAQ,CACNK,GAAM,wBADR,wBAGAL,OAAAE,EAAA,EAAAF,CAAA,yDAAoDA,OAAAE,EAAA,EAAAF,CAAA,cAAYM,WAAW,KAAvB,UAApD,cACAN,OAAAE,EAAA,EAAAF,CAAA,WAAKA,OAAAE,EAAA,EAAAF,CAAA,OAAAA,OAAAG,OAAA,CAAMG,WAAW,OAAU,IAA3B,qCAGLN,OAAAE,EAAA,EAAAF,CAAA,iSAIJJ,EAAWY,gBAAiB","file":"static/js/manual-puppeteer-recorder.7ca76da0.js","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"puppeteer-recorder\"\n    }}>{`Puppeteer Recorder`}</h1>\n    <p>{`Use this to convert a db.json events file into someting usable with puppeteer.`}</p>\n    <h2 {...{\n      \"id\": \"install\"\n    }}>{`Install`}</h2>\n    <p>{`Currently this is a lib file that needs to be installed using kratos.`}</p>\n    <h2 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h2>\n    <p>{`Use the `}<inlineCode parentName=\"p\">{`Emitter`}</inlineCode>{` common JS class to handle this. Ensure you sub to the event `}<inlineCode parentName=\"p\">{`action`}</inlineCode>{`.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`// Example of emission with type inferred\nhandlePrimaryClick = (e) => {\n    Emitter.emit('action', {\n        event: 'ComponentALLandingOne.handlePrimaryClick',\n        e: e.target\n    });\n\n    const { router } = this.props;\n    router.push('/testTwo');\n};\n\n// Example of emission with type manually specified\nhandleLink = (e) => {\n    e.preventDefault();\n    Emitter.emit('action', {\n        event: 'ComponentALLandingOne.handleLink',\n        type: 'link',\n        e: e.target\n    });\n\n    const { router } = this.props;\n    router.push('/testTwo');\n};\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"generating-the-tests\"\n    }}>{`Generating the tests`}</h2>\n    <p>{`The recorder relies on JSON DB and using the `}<inlineCode parentName=\"p\">{`events`}</inlineCode>{` endpoint.`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`# usage\nnode path/to/recorder\n`}</code></pre>\n    <p>{`The console log output for this guy can then be transferred to a test file to use with Puppeteer.`}</p>\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  "],"sourceRoot":""}