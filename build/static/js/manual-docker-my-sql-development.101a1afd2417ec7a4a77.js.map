{"version":3,"sources":["/Users/dennis.okeeffe/Project-Imposter/developer-notes/manual/Docker/MySQL-Development.md"],"names":["layoutProps","MDXLayout","MDXContent","_ref","components","props","Object","_Users_dennis_okeeffe_Project_Imposter_developer_notes_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","_mdx_js_react__WEBPACK_IMPORTED_MODULE_2__","assign","mdxType","id","parentName","isMDXComponent"],"mappings":"0XAWMA,EAAc,GAGdC,EAAY,UACH,SAASC,EAATC,GAGZ,IAFDC,EAECD,EAFDC,WACGC,EACFC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,gBACD,OAAOG,OAAAE,EAAA,EAAAF,CAACL,EAADK,OAAAG,OAAA,GAAeT,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYM,QAAQ,cAC5EJ,OAAAE,EAAA,EAAAF,CAAA,KAAQ,CACNK,GAAM,kCADR,kCAGAL,OAAAE,EAAA,EAAAF,CAAA,0BAAqBA,OAAAE,EAAA,EAAAF,CAAA,cAAYM,WAAW,KAAvB,kCAArB,KACAN,OAAAE,EAAA,EAAAF,CAAA,iBAAYA,OAAAE,EAAA,EAAAF,CAAA,cAAYM,WAAW,KAAvB,wGAAZ,iEACAN,OAAAE,EAAA,EAAAF,CAAA,yEAAoEA,OAAAE,EAAA,EAAAF,CAAA,cAAYM,WAAW,KAAvB,iCAApE,uBAAqKN,OAAAE,EAAA,EAAAF,CAAA,cAAYM,WAAW,KAAvB,SAArK,wBACAN,OAAAE,EAAA,EAAAF,CAAA,SAAGA,OAAAE,EAAA,EAAAF,CAAA,cAAYM,WAAW,KAAvB,sHAAH,KACAN,OAAAE,EAAA,EAAAF,CAAA,oBAAeA,OAAAE,EAAA,EAAAF,CAAA,cAAYM,WAAW,KAAvB,qFAAf,KACAN,OAAAE,EAAA,EAAAF,CAAA,KAAQ,CACNK,GAAM,4CADR,4CAGAL,OAAAE,EAAA,EAAAF,CAAA,sDAAiDA,OAAAE,EAAA,EAAAF,CAAA,cAAYM,WAAW,KAAvB,SAAjD,UAA6GN,OAAAE,EAAA,EAAAF,CAAA,cAAYM,WAAW,KAAvB,oBAA7G,4HAAsSN,OAAAE,EAAA,EAAAF,CAAA,cAAYM,WAAW,KAAvB,qDAAtS,QAA4YN,OAAAE,EAAA,EAAAF,CAAA,cAAYM,WAAW,KAAvB,iEAA5Y,kBAAwgBN,OAAAE,EAAA,EAAAF,CAAA,cAAYM,WAAW,KAAvB,qBAAxgB,8LAIJV,EAAWW,gBAAiB","file":"static/js/manual-docker-my-sql-development.e0022a95.js","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"mysql-development-using-docker\"\n    }}>{`MySQL Development using Docker`}</h1>\n    <p>{`Firstly, pull `}<inlineCode parentName=\"p\">{`docker pull mysql/mysql-server`}</inlineCode>{`.`}</p>\n    <p>{`Then `}<inlineCode parentName=\"p\">{`docker run --name sql-test -e MYSQL_ROOT_PASSWORD=password -p 6000:3306 -d mysql/mysql-server:latest`}</inlineCode>{`. If there a replacement or commited image, run that instead.`}</p>\n    <p>{`If you are running it on a network, first create the network `}<inlineCode parentName=\"p\">{`docker network create dev-env`}</inlineCode>{`, then run with the `}<inlineCode parentName=\"p\">{`--net`}</inlineCode>{` flag to hook it up.`}</p>\n    <p><inlineCode parentName=\"p\">{`docker run --name sql-test -e MYSQL_ROOT_PASSWORD=password -p 6000:3306 --net dev-env -d mysql/mysql-server:latest`}</inlineCode>{`.`}</p>\n    <p>{`Linking `}<inlineCode parentName=\"p\">{`docker run -d -name app-container-name --link mysql-container-name app-image-name`}</inlineCode>{`.`}</p>\n    <h2 {...{\n      \"id\": \"updating-the-local-docker-mysql-instance\"\n    }}>{`Updating the local Docker MySQL instance`}</h2>\n    <p>{`Log into the container and first log into `}<inlineCode parentName=\"p\">{`mysql`}</inlineCode>{` using `}<inlineCode parentName=\"p\">{`mysql -u root -p`}</inlineCode>{`. This will prompt you for that password we created, so now type that in and enter the command line terminal. First, run `}<inlineCode parentName=\"p\">{`CREATE USER 'admin'@'%' IDENTIFIED BY 'password';`}</inlineCode>{` Run `}<inlineCode parentName=\"p\">{`GRANT ALL PRIVILEGES ON *.* TO 'admin'@'%' WITH GRANT OPTION;`}</inlineCode>{`. Finally, run `}<inlineCode parentName=\"p\">{`FLUSH PRIVILEGES;`}</inlineCode>{`.`}</p>\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  "],"sourceRoot":""}