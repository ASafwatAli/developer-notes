(window.webpackJsonp=window.webpackJsonp||[]).push([[127],{"./manual/Design-Patterns/Template-Method.md":function(e,n,t){"use strict";t.r(n),t.d(n,"default",function(){return l});var o=t("./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js"),a=(t("./node_modules/react/index.js"),t("./node_modules/@mdx-js/react/dist/index.es.js")),s={},c="wrapper";function l(e){var n=e.components,t=Object(o.a)(e,["components"]);return Object(a.b)(c,Object.assign({},s,t,{components:n,mdxType:"MDXLayout"}),Object(a.b)("h1",{id:"template-method"},"Template Method"),Object(a.b)("p",null,"The template method is a class behavioural pattern."),Object(a.b)("h2",{id:"example"},"Example"),Object(a.b)("pre",null,Object(a.b)("code",Object.assign({parentName:"pre"},{className:"language-typescript"}),"abstract class BaseClass {\n  public templateMethod(): void {\n    this.actionA();\n    this.actionB();\n  }\n\n  public actionA(): void {\n    throw new Error('should not be invoker by BaseClass');\n  }\n\n  public actionB(): void {\n    throw new Error('should not be invoker by BaseClass');\n  }\n}\n\nclass ConcreteAClass extends BaseClass {\n  actionA(): void {\n    console.log('A take actionA');\n  }\n\n  actionB(): void {\n    console.log('A take actionB');\n  }\n}\n\nclass ConcreteBClass extends BaseClass {\n  actionA(): void {\n    console.log('B take actionA');\n  }\n\n  actionB(): void {\n    console.log('B take actionB');\n  }\n}\n\n(function main() {\n  const a = new ConcreteAClass();\n  const b = new ConcreteBClass();\n\n  a.templateMethod();\n  b.templateMethod();\n})();\n")))}l&&l===Object(l)&&Object.isExtensible(l)&&Object.defineProperty(l,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"MDXContent",filename:"manual/Design-Patterns/Template-Method.md"}}),l.isMDXComponent=!0}}]);
//# sourceMappingURL=manual-design-patterns-template-method.101a1afd2417ec7a4a77.js.map