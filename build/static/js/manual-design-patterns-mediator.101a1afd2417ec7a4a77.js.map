{"version":3,"sources":["/Users/dennis.okeeffe/Project-Imposter/developer-notes/manual/Design-Patterns/Mediator.md"],"names":["layoutProps","MDXLayout","MDXContent","_ref","components","props","Object","_Users_dennis_okeeffe_Project_Imposter_developer_notes_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","_mdx_js_react__WEBPACK_IMPORTED_MODULE_2__","assign","mdxType","id","parentName","className","href","isMDXComponent"],"mappings":"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","file":"static/js/manual-design-patterns-mediator.94672945.js","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"mediator\"\n    }}>{`Mediator`}</h1>\n    <p>{`Mediator is a behavioural design pattern which helps when there are many objects communicating with each other.`}</p>\n    <p>{`The Mediator itself is an object that encapsulates how one or more objects interact with each other. It controls how these object communication and resticts dependencies required to manage.`}</p>\n    <h2 {...{\n      \"id\": \"components\"\n    }}>{`Components`}</h2>\n    <ul>\n      <li parentName=\"ul\">{`Mediator: Defines interface for communication between `}<inlineCode parentName=\"li\">{`Colleague`}</inlineCode>{` objects.`}</li>\n      <li parentName=\"ul\">{`ConcreteMediator: Implements `}<inlineCode parentName=\"li\">{`Mediator`}</inlineCode>{`, has awareness of `}<inlineCode parentName=\"li\">{`colleagues`}</inlineCode>{` and facilitates communication between.`}</li>\n      <li parentName=\"ul\">{`Colleague: Defines interface for communication with other `}<inlineCode parentName=\"li\">{`Colleagues`}</inlineCode>{` through the `}<inlineCode parentName=\"li\">{`Mediator`}</inlineCode>{`.`}</li>\n      <li parentName=\"ul\">{`ConcreteColleague: Implements the `}<inlineCode parentName=\"li\">{`Colleague`}</inlineCode>{` interface an communicates to other colleagues through its `}<inlineCode parentName=\"li\">{`Mediator`}</inlineCode>{`.`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"example\"\n    }}>{`Example`}</h2>\n    <p>{`In this example, we will have a `}<inlineCode parentName=\"p\">{`ConcreteMediator`}</inlineCode>{` that will ensure certain `}<inlineCode parentName=\"p\">{`Participants`}</inlineCode>{` receive a message based on the `}<inlineCode parentName=\"p\">{`Participant`}</inlineCode>{` sending the `}<inlineCode parentName=\"p\">{`Broadcast`}</inlineCode>{`.`}</p>\n    <p>{`We will use the mediator to ensure messages sent from the `}<inlineCode parentName=\"p\">{`FirstParticipant`}</inlineCode>{` is broadcasted to both `}<inlineCode parentName=\"p\">{`FirstParticipant`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`SecondParticipant`}</inlineCode>{` while messages from the `}<inlineCode parentName=\"p\">{`SecondParticipant`}</inlineCode>{` are only reached by the `}<inlineCode parentName=\"p\">{`FirstPartiicpant`}</inlineCode>{` and not itself.`}</p>\n    <p>{`The abstract `}<inlineCode parentName=\"p\">{`Participant`}</inlineCode>{` class in this example is the `}<inlineCode parentName=\"p\">{`Colleague`}</inlineCode>{` and the subclasses are the `}<inlineCode parentName=\"p\">{`ConcreteColleague`}</inlineCode>{` classes.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-typescript\"\n      }}>{`interface Mediator {\n  broadcast(msg: String, sender: Participant): void;\n}\n\nclass ConcreteMediator implements Mediator {\n  public firstParticipant: Participant;\n  public secondParticipant: Participant;\n\n  broadcast(msg: String, sender: Participant): void {\n    if (sender === this.firstParticipant) {\n      this.firstParticipant.receiveMsg(msg);\n      this.secondParticipant.receiveMsg(msg);\n    }\n\n    if (sender === this.secondParticipant) {\n      this.firstParticipant.receiveMsg(msg);\n    }\n  }\n}\n\nabstract class Participant {\n  public mediator: Mediator;\n\n  constructor(mediator: Mediator) {\n    this.mediator = mediator;\n  }\n\n  broadcast(msg: String): void {\n    this.mediator.broadcast(msg, this);\n  }\n\n  receiveMsg(msg: String): void {\n    console.log('recieveMsg:', msg);\n  }\n}\n\nclass FirstParticipant extends Participant {\n  constructor(mediator: Mediator) {\n    super(mediator);\n  }\n\n  broadcast(msg: String) {\n    console.log('First participant customized logic');\n    super.broadcast(msg);\n  }\n}\n\nclass SecondParticipant extends Participant {\n  constructor(mediator: Mediator) {\n    super(mediator);\n  }\n\n  broadcast(msg: String) {\n    console.log('Second participant customized logic');\n    super.broadcast(msg);\n  }\n}\n\n(function main() {\n  const mediator = new ConcreteMediator();\n  const firstParticipant = new FirstParticipant(mediator);\n  const secondParticipant = new SecondParticipant(mediator);\n\n  mediator.firstParticipant = firstParticipant;\n  mediator.secondParticipant = secondParticipant;\n\n  firstParticipant.broadcast(\n    'FirstParticipant sends message to FirstParticipant, SecondParticipant'\n  );\n  secondParticipant.broadcast(\n    'SecondParticipant sends message to FirstParticipant'\n  );\n})();\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"resources\"\n    }}>{`Resources`}</h2>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://www.infoworld.com/article/3204528/how-to-use-the-mediator-design-pattern-in-c.html\"\n        }}>{`Mediator in C#`}</a></li>\n    </ul>\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  "],"sourceRoot":""}